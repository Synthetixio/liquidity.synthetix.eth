{"version":3,"file":"chunk/app.89114b88.js","mappings":"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","sources":["webpack://@snx-v3/liquidity/../../contracts/src/importCoreProxy.ts","webpack://@snx-v3/liquidity/../../contracts/src/importMulticall3.ts","webpack://@snx-v3/liquidity/../components/Amount/Amount.tsx","webpack://@snx-v3/liquidity/../components/ContractError/ContractError.tsx","webpack://@snx-v3/liquidity/../components/DepositModal/DepositMachine.ts","webpack://@snx-v3/liquidity/../components/DepositModal/DepositModal.tsx","webpack://@snx-v3/liquidity/../lib/useDeposit/useDeposit.tsx","webpack://@snx-v3/liquidity/../lib/useDepositBaseAndromeda/useDepositBaseAndromeda.tsx","webpack://@snx-v3/liquidity/../components/DepositModal/index.ts","webpack://@snx-v3/liquidity/../components/Multistep/StepIcon.tsx","webpack://@snx-v3/liquidity/../components/Multistep/statusColor.ts","webpack://@snx-v3/liquidity/../components/Multistep/Step.tsx","webpack://@snx-v3/liquidity/../components/Multistep/Multistep.tsx","webpack://@snx-v3/liquidity/../components/WithdrawIncrease/WithdrawIncrease.tsx","webpack://@snx-v3/liquidity/../components/WithdrawModal/WithdrawMachine.ts","webpack://@snx-v3/liquidity/../lib/useWithdraw/useWithdraw.tsx","webpack://@snx-v3/liquidity/../components/WithdrawModal/WithdrawModal.tsx","webpack://@snx-v3/liquidity/../components/WithdrawModal/index.ts","webpack://@snx-v3/liquidity/../components/icons/SUSDCIcon/SUSDCIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/Logo/Logo.tsx","webpack://@snx-v3/liquidity/../components/icons/EthereumIcon/EthereumIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/SNXIcon/SNXIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/OptimismIcon/OptimismIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/DollarCircle/DollarCircle.tsx","webpack://@snx-v3/liquidity/../components/icons/BitcoinIcon/BitcoinIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/ArbitrumIcon/ArbitrumIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/CollateralIcon/CollateralIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/ChevronDown/ChevronDown.tsx","webpack://@snx-v3/liquidity/../components/icons/ChevronUp/ChevronUp.tsx","webpack://@snx-v3/liquidity/../components/icons/FailedIcon/FailedIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/WalletIcon/WalletIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/LogoIcon/LogoIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/BorrowIcon/BorrowIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/CCIP/CCIP.tsx","webpack://@snx-v3/liquidity/../components/icons/BaseIcon/BaseIcon.tsx","webpack://@snx-v3/liquidity/../lib/ManagePositionContext/ManagePositionContext.tsx","webpack://@snx-v3/liquidity/../lib/constants/constants.ts","webpack://@snx-v3/liquidity/../lib/fetchPythPrices/fetchPythPrices.ts","webpack://@snx-v3/liquidity/../lib/format/format.ts","webpack://@snx-v3/liquidity/../lib/format/currency.ts","webpack://@snx-v3/liquidity/../lib/isBaseAndromeda/isBaseAndromeda.ts","webpack://@snx-v3/liquidity/../lib/tsHelpers/notNill.ts","webpack://@snx-v3/liquidity/../lib/txnReducer/txnReducer.ts","webpack://@snx-v3/liquidity/../lib/useOracleManagerProxy/useOracleManagerProxy.ts","webpack://@snx-v3/liquidity/../../contracts/src/importOracleManagerProxy.ts","webpack://@snx-v3/liquidity/../lib/useAllCollateralPriceIds/useAllCollateralPriceIds.ts","webpack://@snx-v3/liquidity/../lib/useAllowance/useAllowance.ts","webpack://@snx-v3/liquidity/../lib/useApprove/useApprove.ts","webpack://@snx-v3/liquidity/../lib/useBlockchain/useBlockchain.tsx","webpack://@snx-v3/liquidity/../lib/useCollateralTypes/useCollateralTypes.ts","webpack://@snx-v3/liquidity/../lib/useContractErrorParser/useContractErrorParser.ts","webpack://@snx-v3/liquidity/../lib/useCoreProxy/useCoreProxy.ts","webpack://@snx-v3/liquidity/../lib/useEthBalance/useEthBalance.ts","webpack://@snx-v3/liquidity/../lib/useGasOptions/useGasOptions.ts","webpack://@snx-v3/liquidity/../lib/feeSuggestion/math.ts","webpack://@snx-v3/liquidity/../lib/feeSuggestion/utils.ts","webpack://@snx-v3/liquidity/../lib/feeSuggestion/feeSuggestion.ts","webpack://@snx-v3/liquidity/../lib/useGasPrice/useGasPrice.ts","webpack://@snx-v3/liquidity/../lib/useGasSpeed/GasSpeedContext.tsx","webpack://@snx-v3/liquidity/../lib/useMulticall3/useMulticall3.ts","webpack://@snx-v3/liquidity/../lib/useParams/useParams.ts","webpack://@snx-v3/liquidity/../lib/usePools/usePools.ts","webpack://@snx-v3/liquidity/../lib/useRepayBaseAndromeda/useRepayBaseAndromeda.tsx","webpack://@snx-v3/liquidity/../lib/useSpotMarketProxy/useSpotMarketProxy.ts","webpack://@snx-v3/liquidity/../../contracts/src/importSpotMarketProxy.ts","webpack://@snx-v3/liquidity/../lib/assertAddressType/assertAddressType.ts","webpack://@snx-v3/liquidity/../lib/useTokenBalance/useTokenBalance.ts","webpack://@snx-v3/liquidity/../lib/useTokenBalance/useTokenBalanceForChain.ts","webpack://@snx-v3/liquidity/../../contracts/src/importUSDProxy.ts","webpack://@snx-v3/liquidity/../lib/useUSDProxy/useUSDProxy.ts","webpack://@snx-v3/liquidity/../lib/useUSDProxy/useUSDProxyForChain.ts","webpack://@snx-v3/liquidity/../lib/useWrapEth/useWrapEth.ts","webpack://@snx-v3/liquidity/../lib/withERC7412/withMemoryCache.ts","webpack://@snx-v3/liquidity/../lib/parser/parseTxError.ts","webpack://@snx-v3/liquidity/../lib/withERC7412/withERC7412.ts","webpack://@snx-v3/liquidity/../lib/zod/zod.ts","webpack://@snx-v3/liquidity/../../theme/src/theme.ts","webpack://@snx-v3/liquidity/../../theme/src/fonts.tsx","webpack://@snx-v3/liquidity/../components/TermsModal/TermsModal.tsx","webpack://@snx-v3/liquidity/./src/layouts/Default/Footer.tsx","webpack://@snx-v3/liquidity/./src/utils/onboard.ts","webpack://@snx-v3/liquidity/./src/hooks/useLocalStorage.ts","webpack://@snx-v3/liquidity/./src/utils/constants.ts","webpack://@snx-v3/liquidity/./src/layouts/Default/NetworkController.tsx","webpack://@snx-v3/liquidity/../lib/useAccountProxy/useAccountProxy.ts","webpack://@snx-v3/liquidity/../../contracts/src/importAccountProxy.ts","webpack://@snx-v3/liquidity/../lib/useAccounts/useAccounts.ts","webpack://@snx-v3/liquidity/../components/AccountsSelector/AccountsSelector.tsx","webpack://@snx-v3/liquidity/./src/layouts/Default/Header.tsx","webpack://@snx-v3/liquidity/./src/layouts/Default/DefaultLayout.tsx","webpack://@snx-v3/liquidity/../lib/useCollateralPrices/useCollateralPrices.ts","webpack://@snx-v3/liquidity/../lib/useAccountCollateral/useAccountCollateral.ts","webpack://@snx-v3/liquidity/../lib/useLiquidityPosition/useLiquidityPosition.ts","webpack://@snx-v3/liquidity/../lib/calculations/calculations.ts","webpack://@snx-v3/liquidity/../lib/tsHelpers/keyBy.ts","webpack://@snx-v3/liquidity/../lib/useLiquidityPositions/useLiquidityPositions.ts","webpack://@snx-v3/liquidity/./src/components/Shared/Welcome/Welcome.tsx","webpack://@snx-v3/liquidity/../lib/formatters/number.ts","webpack://@snx-v3/liquidity/../components/BorderBox/BorderBox.tsx","webpack://@snx-v3/liquidity/../components/Pools/Stats.tsx","webpack://@snx-v3/liquidity/../components/Pools/PoolCard.tsx","webpack://@snx-v3/liquidity/../components/Pools/PoolsList.tsx","webpack://@snx-v3/liquidity/../components/Pools/VaultRow.tsx","webpack://@snx-v3/liquidity/../components/Pools/PoolsLoading.tsx","webpack://@snx-v3/liquidity/../components/Pools/VaultRowLoading.tsx","webpack://@snx-v3/liquidity/../lib/useAccountCollateralUnlockDate/useAccountCollateralUnlockDate.ts","webpack://@snx-v3/liquidity/../lib/formatters/date.ts","webpack://@snx-v3/liquidity/../lib/useWithdrawBaseAndromeda/useWithdrawBaseAndromeda.tsx","webpack://@snx-v3/liquidity/../components/Pools/BaseAndromedaAvailableCollateral.tsx","webpack://@snx-v3/liquidity/../components/Pools/AvailableCollateral.tsx","webpack://@snx-v3/liquidity/../components/Pools/AvailableCollateralRow.tsx","webpack://@snx-v3/liquidity/./src/pages/Home/Home.tsx","webpack://@snx-v3/liquidity/../lib/validatePosition/validatePosition.ts","webpack://@snx-v3/liquidity/../components/NumberInput/NumberInput.tsx","webpack://@snx-v3/liquidity/./src/pages/Manage/Borrow.tsx","webpack://@snx-v3/liquidity/./src/pages/Manage/Repay.tsx","webpack://@snx-v3/liquidity/../lib/usePoolConfiguration/usePoolConfiguration.ts","webpack://@snx-v3/liquidity/./src/pages/Manage/Undelegate.tsx","webpack://@snx-v3/liquidity/../components/PercentBadges/PercentBadges.tsx","webpack://@snx-v3/liquidity/../lib/useTransferableSynthetix/useTransferableSynthetix.ts","webpack://@snx-v3/liquidity/./src/components/CollateralAlert/CollateralAlert.tsx","webpack://@snx-v3/liquidity/./src/pages/Manage/Deposit.tsx","webpack://@snx-v3/liquidity/./src/pages/Manage/RepayAllDebt.tsx","webpack://@snx-v3/liquidity/./src/pages/Manage/ManageActions.tsx","webpack://@snx-v3/liquidity/./src/pages/Manage/ManageStats.tsx","webpack://@snx-v3/liquidity/../components/HomeLink/HomeLink.tsx","webpack://@snx-v3/liquidity/../lib/etherscanLink/etherscanLink.ts","webpack://@snx-v3/liquidity/./src/components/Rewards/RewardsModal.tsx","webpack://@snx-v3/liquidity/../lib/formatters/string.ts","webpack://@snx-v3/liquidity/./src/components/Rewards/RewardsRow.tsx","webpack://@snx-v3/liquidity/../lib/useClaimRewards/useClaimRewards.ts","webpack://@snx-v3/liquidity/./src/components/Rewards/RewardsLoading.tsx","webpack://@snx-v3/liquidity/./src/components/Rewards/Rewards.tsx","webpack://@snx-v3/liquidity/../lib/usePoolData/usePoolData.tsx","webpack://@snx-v3/liquidity/../lib/useRewards/useRewards.ts","webpack://@snx-v3/liquidity/../../contracts/src/importRewardDistributor.ts","webpack://@snx-v3/liquidity/./src/pages/Manage/Manage.tsx","webpack://@snx-v3/liquidity/../components/CollateralTypeSelector/CollateralTypeSelector.tsx","webpack://@snx-v3/liquidity/./src/components/Accounts/Deposit/DepositForm.tsx","webpack://@snx-v3/liquidity/../components/PoolBox/PoolBox.tsx","webpack://@snx-v3/liquidity/./src/pages/Deposit/Deposit.tsx","webpack://@snx-v3/liquidity/./src/pages/Pool/PoolHeader.tsx","webpack://@snx-v3/liquidity/../lib/useMarketNamesById/useMarketNamesById.ts","webpack://@snx-v3/liquidity/./src/pages/Pool/MarketSection.tsx","webpack://@snx-v3/liquidity/../lib/useVaultsData/useVaultsData.ts","webpack://@snx-v3/liquidity/./src/pages/Pool/CollateralSection.tsx","webpack://@snx-v3/liquidity/./src/pages/Pool/Pool.tsx","webpack://@snx-v3/liquidity/./src/pages/Playground/Playground.tsx","webpack://@snx-v3/liquidity/../components/Balance/Balance.tsx","webpack://@snx-v3/liquidity/./src/pages/Teleporter/TeleporterMachine.ts","webpack://@snx-v3/liquidity/./src/pages/Teleporter/TeleporterModal.tsx","webpack://@snx-v3/liquidity/../lib/useTeleport/useTeleport.tsx","webpack://@snx-v3/liquidity/./src/pages/Teleporter/Teleporter.tsx","webpack://@snx-v3/liquidity/./src/pages/404.tsx","webpack://@snx-v3/liquidity/./src/components/TokenIcon/TokenIcon.tsx","webpack://@snx-v3/liquidity/./src/components/Assets/AssetTable/AssetsRow.tsx","webpack://@snx-v3/liquidity/./src/components/Assets/AssetTable/AssetTableHeader.tsx","webpack://@snx-v3/liquidity/./src/components/Assets/AssetTable/AssetsTable.tsx","webpack://@snx-v3/liquidity/./src/components/Shared/SynthSkeleton/SynthSkeleton.tsx","webpack://@snx-v3/liquidity/./src/components/Assets/AssetTable/AssetRowLoading.tsx","webpack://@snx-v3/liquidity/./src/components/Assets/AssetsList.tsx","webpack://@snx-v3/liquidity/./src/components/Stats/StatBox.tsx","webpack://@snx-v3/liquidity/./src/components/Positions/PositionsTable/PositionsRow.tsx","webpack://@snx-v3/liquidity/./src/components/Positions/PositionsTable/PositionsRowLoading.tsx","webpack://@snx-v3/liquidity/./src/components/Positions/PositionsTable/PositionTableHeader.tsx","webpack://@snx-v3/liquidity/./src/components/Positions/PositionsTable/PositionsTable.tsx","webpack://@snx-v3/liquidity/./src/components/Positions/PositionsList.tsx","webpack://@snx-v3/liquidity/./src/pages/Dashboard/Dashboard.tsx","webpack://@snx-v3/liquidity/./src/pages/Pools/Pools.tsx","webpack://@snx-v3/liquidity/./src/Router.tsx","webpack://@snx-v3/liquidity/./src/i18n.ts","webpack://@snx-v3/liquidity/./src/App.tsx","webpack://@snx-v3/liquidity/./src/index.tsx","webpack://@snx-v3/liquidity/../../tools/safe-import/index.js","webpack://@snx-v3/liquidity/../../tools/safe-import/safeLazy.js"],"sourcesContent":["// !!! DO NOT EDIT !!! Automatically generated file\n\nimport type { CoreProxy as CoreProxy1Main } from './1-main/CoreProxy';\nimport type { CoreProxy as CoreProxy10Main } from './10-main/CoreProxy';\nimport type { CoreProxy as CoreProxy11155111Main } from './11155111-main/CoreProxy';\nimport type { CoreProxy as CoreProxy13370Main } from './13370-main/CoreProxy';\nimport type { CoreProxy as CoreProxy42161Arbthetix } from './42161-arbthetix/CoreProxy';\nimport type { CoreProxy as CoreProxy421614Arbthetix } from './421614-arbthetix/CoreProxy';\nimport type { CoreProxy as CoreProxy8453Andromeda } from './8453-andromeda/CoreProxy';\nimport type { CoreProxy as CoreProxy84532Andromeda } from './84532-andromeda/CoreProxy';\n\nexport type CoreProxyType =\n  | CoreProxy1Main\n  | CoreProxy10Main\n  | CoreProxy11155111Main\n  | CoreProxy13370Main\n  | CoreProxy42161Arbthetix\n  | CoreProxy421614Arbthetix\n  | CoreProxy8453Andromeda\n  | CoreProxy84532Andromeda;\n\nexport async function importCoreProxy(chainId: number, preset: string = 'main') {\n  switch (`${chainId}-${preset}`) {\n    case '1-main':\n      return import('./1-main/CoreProxy');\n    case '10-main':\n      return import('./10-main/CoreProxy');\n    case '11155111-main':\n      return import('./11155111-main/CoreProxy');\n    case '13370-main':\n      return import('./13370-main/CoreProxy');\n    case '42161-arbthetix':\n      return import('./42161-arbthetix/CoreProxy');\n    case '421614-arbthetix':\n      return import('./421614-arbthetix/CoreProxy');\n    case '8453-andromeda':\n      return import('./8453-andromeda/CoreProxy');\n    case '84532-andromeda':\n      return import('./84532-andromeda/CoreProxy');\n    default:\n      throw new Error(`Unsupported chain ${chainId} for CoreProxy`);\n  }\n}\n","// !!! DO NOT EDIT !!! Automatically generated file\n\nimport type { Multicall3 as Multicall31Main } from './1-main/Multicall3';\nimport type { Multicall3 as Multicall310Main } from './10-main/Multicall3';\nimport type { Multicall3 as Multicall311155111Main } from './11155111-main/Multicall3';\nimport type { Multicall3 as Multicall313370Main } from './13370-main/Multicall3';\nimport type { Multicall3 as Multicall342161Arbthetix } from './42161-arbthetix/Multicall3';\nimport type { Multicall3 as Multicall3421614Arbthetix } from './421614-arbthetix/Multicall3';\nimport type { Multicall3 as Multicall38453Andromeda } from './8453-andromeda/Multicall3';\nimport type { Multicall3 as Multicall384532Andromeda } from './84532-andromeda/Multicall3';\n\nexport type Multicall3Type =\n  | Multicall31Main\n  | Multicall310Main\n  | Multicall311155111Main\n  | Multicall313370Main\n  | Multicall342161Arbthetix\n  | Multicall3421614Arbthetix\n  | Multicall38453Andromeda\n  | Multicall384532Andromeda;\n\nexport async function importMulticall3(chainId: number, preset: string = 'main') {\n  switch (`${chainId}-${preset}`) {\n    case '1-main':\n      return import('./1-main/Multicall3');\n    case '10-main':\n      return import('./10-main/Multicall3');\n    case '11155111-main':\n      return import('./11155111-main/Multicall3');\n    case '13370-main':\n      return import('./13370-main/Multicall3');\n    case '42161-arbthetix':\n      return import('./42161-arbthetix/Multicall3');\n    case '421614-arbthetix':\n      return import('./421614-arbthetix/Multicall3');\n    case '8453-andromeda':\n      return import('./8453-andromeda/Multicall3');\n    case '84532-andromeda':\n      return import('./84532-andromeda/Multicall3');\n    default:\n      throw new Error(`Unsupported chain ${chainId} for Multicall3`);\n  }\n}\n","import { Tooltip } from '@chakra-ui/react';\nimport { useMemo } from 'react';\nimport { currency } from '@snx-v3/format';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { constants } from 'ethers';\n\nexport function Amount({\n  value,\n  prefix = '',\n  suffix = '',\n  'data-testid': testid,\n}: {\n  prefix?: string;\n  value?: Wei;\n  suffix?: string;\n  'data-testid'?: string;\n}) {\n  const { formattedValue, preciseValue, isMaxUint } = useMemo(() => {\n    if (!value) {\n      return { formattedValue: '-', preciseValue: '-' };\n    }\n\n    const formattedValue = currency(value);\n    const cleanNumber = wei(formattedValue.replaceAll(',', ''));\n\n    return {\n      isMaxUint: wei(constants.MaxInt256).lte(value),\n      formattedValue,\n      preciseValue: value.eq(cleanNumber) ? formattedValue : value.toString(),\n    };\n  }, [value]);\n\n  return (\n    <Tooltip\n      label={\n        <>\n          {isMaxUint ? (\n            'You cannot borrow sUSD against this collateral'\n          ) : (\n            <>\n              {prefix}\n              {preciseValue}\n              {suffix}\n            </>\n          )}\n        </>\n      }\n      isDisabled={formattedValue === preciseValue}\n    >\n      <span data-testid={testid}>\n        {prefix}\n        {isMaxUint ? 'N/A' : formattedValue}\n        {!isMaxUint && suffix}\n      </span>\n    </Tooltip>\n  );\n}\n","import React from 'react';\nimport { Button, Collapse, Text } from '@chakra-ui/react';\nimport format from 'date-fns/format';\nimport { ContractErrorType } from '@snx-v3/useContractErrorParser';\n\nconst defaultOpen = window?.localStorage?.CONTRACT_ERROR_OPEN === 'true';\n\nexport function ContractError({ contractError }: { contractError: ContractErrorType }) {\n  const [isOpen, setIsOpen] = React.useState(defaultOpen);\n\n  return (\n    <>\n      {!isOpen ? (\n        <Button\n          variant=\"link\"\n          onClick={() => setIsOpen(true)}\n          color=\"inherit\"\n          fontWeight=\"normal\"\n          fontStyle=\"italic\"\n        >\n          details...\n        </Button>\n      ) : null}\n      <Collapse in={isOpen} animateOpacity>\n        <Text fontStyle=\"italic\" fontSize=\"0.8em\">\n          {contractError.name}\n        </Text>\n        <Text whiteSpace=\"pre\" fontSize=\"0.8em\" fontStyle=\"italic\" pl=\"0.5em\">\n          {Object.entries(contractError.args)\n            .map(\n              ([key, val]) =>\n                `${key}: ${val instanceof Date ? format(val, 'yyyy-MM-dd HH:mm:ss') : val}`\n            )\n            .join('\\n')}\n        </Text>\n      </Collapse>\n    </>\n  );\n}\n","import { Wei, wei } from '@synthetixio/wei';\nimport { createMachine, assign } from 'xstate';\n\nexport const Events = {\n  SET_REQUIRE_APPROVAL: 'SET_REQUIRE_APPROVAL',\n  SET_WRAP_AMOUNT: 'SET_WRAP_AMOUNT',\n  SET_INFINITE_APPROVAL: 'SET_INFINITE_APPROVAL',\n  RETRY: 'RETRY',\n  RUN: 'RUN',\n  SUCCESS: 'SUCCESS',\n  FAILURE: 'FAILURE',\n  RESET: 'RESET',\n} as const;\n\nexport const State = {\n  idle: 'idle',\n  wrap: 'wrap',\n  approve: 'approve',\n  deposit: 'deposit',\n  failed: 'failed',\n  success: 'success',\n} as const;\n\nconst FailedSteps = {\n  [State.approve]: State.approve,\n  [State.wrap]: State.wrap,\n  [State.deposit]: State.deposit,\n} as const;\n\nexport const ServiceNames = {\n  wrapEth: 'wrapEth',\n  approveWETH: 'approveWETH',\n  executeDeposit: 'executeDeposit',\n} as const;\n\ntype Context = {\n  error: {\n    error: Error;\n    step: keyof typeof FailedSteps;\n  } | null;\n  requireApproval: boolean;\n  wrapAmount: Wei;\n  infiniteApproval: boolean;\n};\n\ntype EventNamesType = typeof Events;\n\ntype DepositEvents =\n  | { type: EventNamesType['SET_REQUIRE_APPROVAL']; requireApproval: boolean }\n  | { type: EventNamesType['SET_WRAP_AMOUNT']; wrapAmount: Wei }\n  | { type: EventNamesType['SET_INFINITE_APPROVAL']; infiniteApproval: boolean }\n  | { type: EventNamesType['RETRY'] }\n  | { type: EventNamesType['RUN'] }\n  | { type: EventNamesType['SUCCESS'] }\n  | { type: EventNamesType['FAILURE'] }\n  | { type: EventNamesType['RESET'] };\n\ntype StateType = typeof State;\ntype MachineState =\n  | {\n      value: StateType['idle'];\n      context: Context & { error: null };\n    }\n  | {\n      value: StateType['wrap'];\n      context: Context & { error: null };\n    }\n  | {\n      value: StateType['approve'];\n      context: Context & { error: null };\n    }\n  | {\n      value: StateType['deposit'];\n      context: Context & { error: null };\n    }\n  | {\n      value: StateType['failed'];\n      context: Context & { error: { error: Error; step: keyof typeof FailedSteps } };\n    }\n  | {\n      value: StateType['success'];\n      context: Context & {\n        error: null;\n      };\n    };\n\nconst initialContext = {\n  wrapAmount: wei(0),\n  error: null,\n  requireApproval: false,\n  infiniteApproval: false,\n};\n\nexport const DepositMachine = createMachine<Context, DepositEvents, MachineState>({\n  id: 'DepositMachine',\n  initial: State.idle,\n  predictableActionArguments: true,\n  context: initialContext,\n  on: {\n    [Events.RUN]: {\n      target: State.deposit,\n      actions: assign({\n        wrapAmount: (_) => initialContext.wrapAmount,\n        error: (_) => initialContext.error,\n        requireApproval: (_) => initialContext.requireApproval,\n        infiniteApproval: (_) => initialContext.infiniteApproval,\n      }),\n    },\n    [Events.SET_REQUIRE_APPROVAL]: {\n      actions: assign({ requireApproval: (_context, event) => event.requireApproval }),\n    },\n    [Events.SET_WRAP_AMOUNT]: {\n      actions: assign({ wrapAmount: (_context, event) => event.wrapAmount }),\n    },\n    [Events.SET_INFINITE_APPROVAL]: {\n      actions: assign({ infiniteApproval: (_context, event) => event.infiniteApproval }),\n    },\n  },\n  states: {\n    [State.idle]: {\n      on: {\n        [Events.RUN]: [\n          { target: State.wrap, cond: (context) => context.wrapAmount.gt(0) },\n          { target: State.approve, cond: (context) => context.requireApproval },\n          { target: State.deposit },\n        ],\n      },\n    },\n    [State.wrap]: {\n      invoke: {\n        src: ServiceNames.wrapEth,\n        onError: {\n          target: State.failed,\n          actions: assign({\n            error: (_context, event) => ({ error: event.data, step: FailedSteps.wrap }),\n          }),\n        },\n        onDone: [\n          { target: State.approve, cond: (context) => context.requireApproval },\n          { target: State.deposit },\n        ],\n      },\n    },\n    [State.approve]: {\n      invoke: {\n        src: ServiceNames.approveWETH,\n        onDone: {\n          target: State.deposit,\n        },\n        onError: {\n          target: State.failed,\n          actions: assign({\n            error: (_context, event) => ({ error: event.data, step: FailedSteps.approve }),\n          }),\n        },\n      },\n    },\n    [State.deposit]: {\n      invoke: {\n        src: ServiceNames.executeDeposit,\n        onDone: {\n          target: State.success,\n        },\n        onError: {\n          target: State.failed,\n          actions: assign({\n            error: (_context, event) => ({ error: event.data, step: FailedSteps.deposit }),\n          }),\n        },\n      },\n    },\n    [State.failed]: {\n      on: {\n        [Events.RETRY]: [\n          {\n            target: State.approve,\n            cond: (c) => c.error?.step === FailedSteps.approve,\n            actions: assign({ error: (_) => null }),\n          },\n          {\n            target: State.wrap,\n            cond: (c) => c.error?.step === FailedSteps.wrap,\n            actions: assign({ error: (_) => null }),\n          },\n          {\n            target: State.deposit,\n            cond: (c) => c.error?.step === FailedSteps.deposit,\n            actions: assign({ error: (_) => null }),\n          },\n        ],\n      },\n    },\n    [State.success]: {},\n  },\n});\n","import {\n  Button,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  useToast,\n} from '@chakra-ui/react';\nimport { FC, useCallback, useEffect, useMemo } from 'react';\nimport { CollateralType, useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { Amount } from '@snx-v3/Amount';\nimport { utils } from 'ethers';\nimport { generatePath, useNavigate, useLocation } from 'react-router-dom';\nimport { useApprove } from '@snx-v3/useApprove';\nimport { useWrapEth } from '@snx-v3/useWrapEth';\nimport { Multistep } from '@snx-v3/Multistep';\nimport { Wei, wei } from '@synthetixio/wei';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useDeposit } from '@snx-v3/useDeposit';\nimport { useParams } from '@snx-v3/useParams';\nimport { DepositMachine, Events, ServiceNames, State } from './DepositMachine';\nimport { useMachine } from '@xstate/react';\nimport type { StateFrom } from 'xstate';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { ContractError } from '@snx-v3/ContractError';\nimport { usePool } from '@snx-v3/usePools';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { getUSDCAddress, isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { useDepositBaseAndromeda } from '../../lib/useDepositBaseAndromeda';\nimport { useSpotMarketProxy } from '../../lib/useSpotMarketProxy';\n\nexport const DepositModalUi: FC<{\n  collateralChange: Wei;\n  isOpen: boolean;\n  onClose: () => void;\n  collateralType?: CollateralType;\n  state: StateFrom<typeof DepositMachine>;\n  setInfiniteApproval: (x: boolean) => void;\n  onSubmit: () => void;\n  availableCollateral: Wei;\n  poolName: string;\n}> = ({\n  collateralChange,\n  isOpen,\n  onClose,\n  collateralType,\n  setInfiniteApproval,\n  onSubmit,\n  state,\n  availableCollateral,\n  poolName,\n}) => {\n  const wrapAmount = state.context.wrapAmount;\n  const infiniteApproval = state.context.infiniteApproval;\n  const requireApproval = state.context.requireApproval;\n  const error = state.context.error;\n  const isProcessing =\n    state.matches(State.approve) || state.matches(State.deposit) || state.matches(State.wrap);\n\n  const isWETH = collateralType?.symbol === 'WETH';\n\n  const stepNumbers = {\n    wrap: isWETH ? 1 : 0,\n    approve: isWETH ? 2 : 1,\n    deposit: isWETH ? 3 : 2,\n  };\n\n  return (\n    <Modal size=\"lg\" isOpen={isOpen} onClose={onClose} closeOnOverlayClick={false}>\n      <ModalOverlay />\n      <ModalContent bg=\"black\" color=\"white\" data-testid=\"deposit modal\">\n        <ModalHeader>Complete this action</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <Text mb=\"2\">Please execute the following transactions:</Text>\n          {isWETH ? (\n            <Multistep\n              step={stepNumbers.wrap}\n              title=\"Wrap\"\n              subtitle={\n                wrapAmount.eq(0) ? (\n                  <Text as=\"div\">\n                    <Amount value={collateralChange} suffix={` ${collateralType?.symbol}`} /> from\n                    balance will be used.\n                  </Text>\n                ) : (\n                  <Text as=\"div\">\n                    You must wrap additional <Amount value={wrapAmount} suffix=\" ETH\" /> before\n                    depositing.\n                  </Text>\n                )\n              }\n              status={{\n                failed: error?.step === State.wrap,\n                disabled: collateralType?.symbol !== 'WETH',\n                success: wrapAmount.eq(0) || state.matches(State.success),\n                loading: state.matches(State.wrap) && !error,\n              }}\n            />\n          ) : null}\n\n          <Multistep\n            step={stepNumbers.approve}\n            title={`Approve ${collateralType?.symbol} transfer`}\n            status={{\n              failed: error?.step === State.approve,\n              success: !requireApproval || state.matches(State.success),\n              loading: state.matches(State.approve) && !error,\n            }}\n            checkboxLabel={`Approve unlimited ${collateralType?.symbol} transfers to Synthetix.`}\n            checkboxProps={{\n              isChecked: infiniteApproval,\n              onChange: (e) => setInfiniteApproval(e.target.checked),\n            }}\n          />\n\n          <Multistep\n            step={stepNumbers.deposit}\n            title={`Delegate ${collateralType?.symbol}`}\n            subtitle={\n              <>\n                {state.matches(State.success) ? (\n                  <Text>\n                    <Amount value={collateralChange} suffix={` ${collateralType?.symbol}`} />{' '}\n                    delegated to {poolName}.\n                  </Text>\n                ) : (\n                  <>\n                    {availableCollateral && availableCollateral.gt(wei(0)) ? (\n                      <>\n                        {availableCollateral.gte(collateralChange) ? (\n                          <Text>\n                            This will delegate{' '}\n                            <Amount\n                              value={collateralChange}\n                              suffix={` ${collateralType?.symbol}`}\n                            />{' '}\n                            to {poolName}.\n                          </Text>\n                        ) : (\n                          <>\n                            <Text>\n                              This will delegate{' '}\n                              <Amount\n                                value={availableCollateral}\n                                suffix={` ${collateralType?.symbol}`}\n                              />{' '}\n                              to {poolName}.\n                            </Text>\n                            <Text>\n                              An additional{' '}\n                              <Amount\n                                value={collateralChange.sub(availableCollateral)}\n                                suffix={` ${collateralType?.symbol}`}\n                              />{' '}\n                              will be deposited and delegated from your wallet.\n                            </Text>\n                          </>\n                        )}\n                      </>\n                    ) : (\n                      <Text>\n                        This will deposit and delegate{' '}\n                        <Amount value={collateralChange} suffix={` ${collateralType?.symbol}`} /> to{' '}\n                        {poolName}.\n                      </Text>\n                    )}\n                  </>\n                )}\n              </>\n            }\n            status={{\n              failed: error?.step === State.deposit,\n              disabled: state.matches(State.success) && requireApproval,\n              success: state.matches(State.success),\n              loading: state.matches(State.deposit) && !error,\n            }}\n          />\n\n          <Button\n            isDisabled={isProcessing}\n            onClick={onSubmit}\n            width=\"100%\"\n            my=\"4\"\n            data-testid=\"deposit confirm button\"\n          >\n            {(() => {\n              switch (true) {\n                case Boolean(error):\n                  return 'Retry';\n                case isProcessing:\n                  return 'Processing...';\n                case state.matches(State.success):\n                  return 'Done';\n                default:\n                  return 'Start';\n              }\n            })()}\n          </Button>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport type DepositModalProps = FC<{\n  collateralChange: Wei;\n  currentCollateral: Wei;\n  availableCollateral: Wei;\n  isOpen: boolean;\n  onClose: () => void;\n}>;\n\nexport const DepositModal: DepositModalProps = ({\n  onClose,\n  isOpen,\n  collateralChange,\n  currentCollateral,\n  availableCollateral,\n}) => {\n  const navigate = useNavigate();\n  const params = useParams();\n  const queryClient = useQueryClient();\n  const { network } = useNetwork();\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: SpotProxy } = useSpotMarketProxy();\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n\n  const collateralAddress = isBaseAndromeda(network?.id, network?.preset)\n    ? getUSDCAddress(network?.id)\n    : collateralType?.tokenAddress;\n\n  const collateralNeeded = collateralChange.sub(availableCollateral);\n\n  const { approve, requireApproval } = useApprove({\n    contractAddress: collateralAddress,\n    amount: collateralNeeded.gt(0)\n      ? isBaseAndromeda(network?.id, network?.preset)\n        ? //Base USDC is 6 decimals\n          utils.parseUnits(collateralNeeded.toString(), 6)\n        : collateralNeeded.toBN()\n      : 0,\n    spender: isBaseAndromeda(network?.id, network?.preset)\n      ? SpotProxy?.address\n      : CoreProxy?.address,\n  });\n\n  const toast = useToast({ isClosable: true, duration: 9000 });\n\n  // TODO: Update logic on new account id\n  const newAccountId = useMemo(() => `${Math.floor(Math.random() * 10000000000)}`, []);\n\n  const { exec: wrapEth, wethBalance } = useWrapEth();\n  const wrapAmount =\n    collateralType?.symbol === 'WETH' && collateralChange.gt(wethBalance || 0)\n      ? collateralChange.sub(wethBalance || 0)\n      : wei(0);\n\n  const { data: pool } = usePool(params.poolId);\n\n  const { exec: execDeposit } = useDeposit({\n    accountId: params.accountId,\n    newAccountId,\n    poolId: params.poolId,\n    collateralTypeAddress: collateralAddress,\n    collateralChange,\n    currentCollateral,\n    availableCollateral: availableCollateral || wei(0),\n  });\n\n  const { exec: depositBaseAndromeda } = useDepositBaseAndromeda({\n    accountId: params.accountId,\n    newAccountId,\n    poolId: params.poolId,\n    collateralTypeAddress: collateralAddress,\n    collateralChange,\n    currentCollateral,\n    availableCollateral: availableCollateral || wei(0),\n  });\n\n  const errorParserCoreProxy = useContractErrorParser(CoreProxy);\n\n  const [state, send] = useMachine(DepositMachine, {\n    services: {\n      [ServiceNames.wrapEth]: async () => {\n        try {\n          await wrapEth(state.context.wrapAmount);\n        } catch (error: any) {\n          const contractError = errorParserCoreProxy(error);\n          if (contractError) {\n            console.error(new Error(contractError.name), contractError);\n          }\n          toast.closeAll();\n          toast({\n            title: 'Wrapping ETH failed',\n            description: contractError ? (\n              <ContractError contractError={contractError} />\n            ) : (\n              'Please try again.'\n            ),\n            status: 'error',\n          });\n          throw Error('Wrapping failed', { cause: error });\n        }\n      },\n      [ServiceNames.approveWETH]: async () => {\n        try {\n          toast({\n            title: 'Approve collateral for transfer',\n            description: params.accountId\n              ? 'The next transaction will delegate this collateral.'\n              : 'The next transaction will create your account and and delegate this collateral',\n            status: 'info',\n          });\n\n          await approve(Boolean(state.context.infiniteApproval));\n        } catch (error: any) {\n          const contractError = errorParserCoreProxy(error);\n          if (contractError) {\n            console.error(new Error(contractError.name), contractError);\n          }\n          toast.closeAll();\n          toast({\n            title: 'Approval failed',\n            description: contractError ? (\n              <ContractError contractError={contractError} />\n            ) : (\n              'Please try again.'\n            ),\n            status: 'error',\n          });\n          throw Error('Approve failed', { cause: error });\n        }\n      },\n      [ServiceNames.executeDeposit]: async () => {\n        try {\n          toast.closeAll();\n          toast({\n            title: Boolean(params.accountId)\n              ? 'Delegating your collateral'\n              : 'Creating your account and depositing collateral',\n            description: '',\n          });\n          if (isBaseAndromeda(network?.id, network?.preset)) {\n            await depositBaseAndromeda();\n          } else {\n            await execDeposit();\n          }\n\n          await Promise.all([\n            queryClient.invalidateQueries({\n              queryKey: [`${network?.id}-${network?.preset}`, 'EthBalance'],\n            }),\n            queryClient.invalidateQueries({\n              queryKey: [`${network?.id}-${network?.preset}`, 'LiquidityPosition'],\n            }),\n            collateralType?.symbol === 'SNX'\n              ? queryClient.invalidateQueries({\n                  queryKey: [`${network?.id}-${network?.preset}`, 'TransferableSynthetix'],\n                })\n              : Promise.resolve(),\n            queryClient.invalidateQueries({\n              queryKey: [`${network?.id}-${network?.preset}`, 'Allowance'],\n            }),\n            queryClient.invalidateQueries({\n              queryKey: [`${network?.id}-${network?.preset}`, 'LiquidityPositions'],\n            }),\n            !params.accountId\n              ? queryClient.invalidateQueries({\n                  queryKey: [`${network?.id}-${network?.preset}`, 'Accounts'],\n                })\n              : Promise.resolve(),\n          ]);\n\n          toast.closeAll();\n          toast({\n            title: 'Success',\n            description: 'Your delegated collateral amount has been updated.',\n            status: 'success',\n            duration: 5000,\n          });\n        } catch (error: any) {\n          const contractError = errorParserCoreProxy(error);\n          if (contractError) {\n            console.error(new Error(contractError.name), contractError);\n          }\n          toast({\n            title: 'Could not complete delegating collateral',\n            description: contractError ? (\n              <ContractError contractError={contractError} />\n            ) : (\n              'Please try again.'\n            ),\n            status: 'error',\n          });\n          throw Error('Delegate collateral failed', { cause: error });\n        }\n      },\n    },\n  });\n\n  const wrapAmountString = wrapAmount.toString();\n  const isSuccessOrDeposit = state.matches(State.success) || state.matches(State.deposit);\n\n  useEffect(() => {\n    if (isSuccessOrDeposit) {\n      // We do this to ensure the success state displays the wrap amount used before deposit\n      return;\n    }\n    send(Events.SET_WRAP_AMOUNT, { wrapAmount: wei(wrapAmountString) });\n  }, [wrapAmountString, send, isSuccessOrDeposit]);\n\n  useEffect(() => {\n    send(Events.SET_REQUIRE_APPROVAL, { requireApproval });\n  }, [requireApproval, send]);\n\n  const location = useLocation();\n\n  const handleClose = useCallback(() => {\n    const isSuccess = state.matches(State.success);\n\n    if (isSuccess && params.poolId && collateralType?.symbol) {\n      send(Events.RESET);\n      onClose();\n      navigate({\n        pathname: generatePath('/positions/:collateralType/:poolId', {\n          collateralType: collateralType.symbol,\n          poolId: params.poolId,\n        }),\n        search: location.search,\n      });\n    }\n    send(Events.RESET);\n    onClose();\n  }, [location.search, send, onClose, state, params.poolId, collateralType?.symbol, navigate]);\n\n  const onSubmit = useCallback(async () => {\n    if (state.matches(State.success)) {\n      handleClose();\n      return;\n    }\n    if (state.context.error) {\n      send(Events.RETRY);\n      return;\n    }\n    send(Events.RUN);\n  }, [handleClose, send, state]);\n\n  return (\n    <DepositModalUi\n      collateralChange={collateralChange}\n      isOpen={isOpen}\n      onClose={onClose}\n      collateralType={collateralType}\n      state={state}\n      setInfiniteApproval={(infiniteApproval) => {\n        send(Events.SET_INFINITE_APPROVAL, { infiniteApproval });\n      }}\n      onSubmit={onSubmit}\n      poolName={pool?.name || ''}\n      availableCollateral={availableCollateral || wei(0)}\n    />\n  );\n};\n","import { useReducer } from 'react';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useMutation } from '@tanstack/react-query';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { BigNumber } from 'ethers';\n\nimport { formatGasPriceForTransaction } from '@snx-v3/useGasOptions';\nimport { getGasPrice } from '@snx-v3/useGasPrice';\nimport { useGasSpeed } from '@snx-v3/useGasSpeed';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport { notNil } from '@snx-v3/tsHelpers';\nimport { useAllCollateralPriceIds } from '@snx-v3/useAllCollateralPriceIds';\nimport { fetchPriceUpdates, priceUpdatesToPopulatedTx } from '@snx-v3/fetchPythPrices';\n\nexport const useDeposit = ({\n  accountId,\n  newAccountId,\n  poolId,\n  collateralTypeAddress,\n  collateralChange,\n  currentCollateral,\n  availableCollateral,\n}: {\n  accountId?: string;\n  newAccountId: string;\n  poolId?: string;\n  collateralTypeAddress?: string;\n  currentCollateral: Wei;\n  availableCollateral?: Wei;\n  collateralChange: Wei;\n}) => {\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: collateralPriceUpdates } = useAllCollateralPriceIds();\n\n  const { gasSpeed } = useGasSpeed();\n\n  const { network } = useNetwork();\n  const signer = useSigner();\n  const provider = useProvider();\n\n  const mutation = useMutation({\n    mutationFn: async () => {\n      if (\n        !(\n          network &&\n          provider &&\n          signer &&\n          CoreProxy &&\n          poolId &&\n          collateralTypeAddress &&\n          availableCollateral &&\n          collateralPriceUpdates\n        )\n      ) {\n        return;\n      }\n      if (collateralChange.eq(0)) return;\n\n      try {\n        dispatch({ type: 'prompting' });\n        const walletAddress = await signer.getAddress();\n        const id = accountId ?? newAccountId;\n\n        // create account only when no account exists\n        const createAccount = accountId\n          ? undefined\n          : CoreProxy.populateTransaction['createAccount(uint128)'](BigNumber.from(id));\n\n        // optionally deposit if available collateral not enough\n        const deposit = availableCollateral.gte(collateralChange)\n          ? undefined\n          : CoreProxy.populateTransaction.deposit(\n              BigNumber.from(id),\n              collateralTypeAddress,\n              collateralChange.sub(availableCollateral).toBN() // only deposit what's needed\n            );\n        const delegate = CoreProxy.populateTransaction.delegateCollateral(\n          BigNumber.from(id),\n          BigNumber.from(poolId),\n          collateralTypeAddress,\n          currentCollateral.add(collateralChange).toBN(),\n          wei(1).toBN()\n        );\n        const callsPromise = Promise.all([createAccount, deposit, delegate].filter(notNil));\n        const collateralPriceCallsPromise = fetchPriceUpdates(\n          collateralPriceUpdates,\n          network?.isTestnet\n        ).then((signedData) =>\n          priceUpdatesToPopulatedTx(walletAddress, collateralPriceUpdates, signedData)\n        );\n        const [calls, gasPrices, collateralPriceCalls] = await Promise.all([\n          callsPromise,\n          getGasPrice({ provider }),\n          collateralPriceCallsPromise,\n        ]);\n        const allCalls = collateralPriceCalls.concat(calls);\n\n        const erc7412Tx = await withERC7412(network, allCalls, 'useDeposit', CoreProxy.interface);\n\n        const gasOptionsForTransaction = formatGasPriceForTransaction({\n          gasLimit: erc7412Tx.gasLimit,\n          gasPrices,\n          gasSpeed,\n        });\n\n        const txn = await signer.sendTransaction({ ...erc7412Tx, ...gasOptionsForTransaction });\n        dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n        await txn.wait();\n        dispatch({ type: 'success' });\n      } catch (error: any) {\n        dispatch({ type: 'error', payload: { error } });\n        throw error;\n      }\n    },\n  });\n  return {\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n};\n","import { useReducer } from 'react';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useMutation } from '@tanstack/react-query';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { BigNumber, ethers } from 'ethers';\n\nimport { formatGasPriceForTransaction } from '@snx-v3/useGasOptions';\nimport { getGasPrice } from '@snx-v3/useGasPrice';\nimport { useGasSpeed } from '@snx-v3/useGasSpeed';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport { notNil } from '@snx-v3/tsHelpers';\nimport { useAllCollateralPriceIds } from '@snx-v3/useAllCollateralPriceIds';\nimport { fetchPriceUpdates, priceUpdatesToPopulatedTx } from '@snx-v3/fetchPythPrices';\nimport { useSpotMarketProxy } from '../useSpotMarketProxy';\nimport { parseUnits } from '@snx-v3/format';\nimport { USDC_BASE_MARKET, getsUSDCAddress } from '@snx-v3/isBaseAndromeda';\nimport { approveAbi } from '@snx-v3/useApprove';\n\nexport const useDepositBaseAndromeda = ({\n  accountId,\n  newAccountId,\n  poolId,\n  collateralTypeAddress,\n  collateralChange,\n  currentCollateral,\n  availableCollateral,\n}: {\n  accountId?: string;\n  newAccountId: string;\n  poolId?: string;\n  collateralTypeAddress?: string;\n  currentCollateral: Wei;\n  availableCollateral?: Wei;\n  collateralChange: Wei;\n}) => {\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: SpotMarketProxy } = useSpotMarketProxy();\n  const { data: collateralPriceUpdates } = useAllCollateralPriceIds();\n\n  const { gasSpeed } = useGasSpeed();\n\n  const { network } = useNetwork();\n  const signer = useSigner();\n  const provider = useProvider();\n\n  const mutation = useMutation({\n    mutationFn: async () => {\n      if (\n        !(\n          network &&\n          provider &&\n          signer &&\n          CoreProxy &&\n          SpotMarketProxy &&\n          poolId &&\n          collateralTypeAddress &&\n          availableCollateral &&\n          collateralPriceUpdates\n        )\n      ) {\n        return;\n      }\n      if (collateralChange.eq(0)) return;\n\n      try {\n        dispatch({ type: 'prompting' });\n        const walletAddress = await signer.getAddress();\n        const id = accountId ?? newAccountId;\n\n        // create account only when no account exists\n        const createAccount = accountId\n          ? undefined\n          : CoreProxy.populateTransaction['createAccount(uint128)'](BigNumber.from(id));\n\n        const amount = collateralChange.sub(availableCollateral);\n        const usdcAmount = amount.gt(0) ? parseUnits(amount.toString(), 6) : BigNumber.from(0);\n        const amountD18 = parseUnits(amount.toString(), 18);\n\n        // Wrap USDC to sUSDC\n\n        const sUSDC_ADDRESS = getsUSDCAddress(network.id);\n\n        const wrap = amount.gt(0)\n          ? SpotMarketProxy.populateTransaction.wrap(USDC_BASE_MARKET, usdcAmount, amountD18)\n          : undefined;\n\n        const sUSDC_Contract = new ethers.Contract(sUSDC_ADDRESS, approveAbi, signer);\n\n        const sUSDCApproval = amount.gt(0)\n          ? sUSDC_Contract.populateTransaction.approve(CoreProxy.address, amountD18)\n          : undefined;\n\n        // optionally deposit if available collateral not enough\n        const deposit = amount.gt(0)\n          ? CoreProxy.populateTransaction.deposit(\n              BigNumber.from(id),\n              sUSDC_ADDRESS,\n              amountD18 // only deposit what's needed\n            )\n          : undefined;\n\n        const delegate = CoreProxy.populateTransaction.delegateCollateral(\n          BigNumber.from(id),\n          BigNumber.from(poolId),\n          sUSDC_ADDRESS,\n          currentCollateral.toBN().add(amountD18),\n          wei(1).toBN()\n        );\n\n        const callsPromise = Promise.all(\n          [wrap, sUSDCApproval, createAccount, deposit, delegate].filter(notNil)\n        );\n\n        const collateralPriceCallsPromise = fetchPriceUpdates(\n          collateralPriceUpdates,\n          network?.isTestnet\n        ).then((signedData) =>\n          priceUpdatesToPopulatedTx(walletAddress, collateralPriceUpdates, signedData)\n        );\n\n        const [calls, gasPrices, collateralPriceCalls] = await Promise.all([\n          callsPromise,\n          getGasPrice({ provider }),\n          collateralPriceCallsPromise,\n        ]);\n\n        const allCalls = collateralPriceCalls.concat(calls);\n\n        const erc7412Tx = await withERC7412(\n          network,\n          allCalls,\n          'useDepositBaseAndromeda',\n          CoreProxy.interface\n        );\n\n        const gasOptionsForTransaction = formatGasPriceForTransaction({\n          gasLimit: erc7412Tx.gasLimit,\n          gasPrices,\n          gasSpeed,\n        });\n\n        const txn = await signer.sendTransaction({ ...erc7412Tx, ...gasOptionsForTransaction });\n        dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n        await txn.wait();\n        dispatch({ type: 'success' });\n      } catch (error: any) {\n        dispatch({ type: 'error', payload: { error } });\n        throw error;\n      }\n    },\n  });\n  return {\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n};\n","import { DepositModal } from './DepositModal';\nexport * from './DepositModal';\nexport default DepositModal;\n","import { Box, Spinner } from '@chakra-ui/react';\nimport { PropsWithChildren } from 'react';\nimport { MultistepStatus } from './MultistepStatus';\n\nimport { createIcon } from '@chakra-ui/icon';\n\nexport const CheckIcon = createIcon({\n  viewBox: '0 0 14 14',\n  path: (\n    <g fill=\"currentColor\">\n      <polygon points=\"5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039\" />\n    </g>\n  ),\n});\n\nexport const CloseIcon = createIcon({\n  d: 'M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z',\n});\n\nexport function StepIcon({ status, children }: PropsWithChildren<{ status: MultistepStatus }>) {\n  switch (true) {\n    case status.failed:\n      return <CloseIcon color=\"white\" />;\n    case status.success:\n      return <CheckIcon color=\"white\" />;\n    case status.loading:\n      return <Spinner color=\"white\" width={6} height={6} />;\n    case status.disabled:\n    default:\n      return (\n        <Box\n          __css={{\n            display: 'inline',\n            fontWeight: 'medium',\n            textAlign: 'center',\n            fontSize: 'md',\n          }}\n        >\n          {children}\n        </Box>\n      );\n  }\n}\n","import { MultistepStatus } from './MultistepStatus';\n\nexport function statusColor(status: MultistepStatus): string {\n  switch (true) {\n    // order matters\n    case status.failed:\n      return 'red.700';\n    case status.disabled:\n      return 'gray.700';\n    case status.loading:\n      return 'gray.700';\n    case status.success:\n      return 'green.700';\n    default:\n      return 'gray.700';\n  }\n}\n","import { Flex } from '@chakra-ui/react';\nimport { PropsWithChildren } from 'react';\nimport { MultistepStatus } from './MultistepStatus';\nimport { StepIcon } from './StepIcon';\nimport { statusColor } from './statusColor';\n\nexport function Step({ status, children }: PropsWithChildren<{ status: MultistepStatus }>) {\n  return (\n    <Flex\n      width={10}\n      height={10}\n      minWidth={10}\n      minHeight={10}\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      bg={statusColor(status)}\n      rounded=\"full\"\n      transitionProperty=\"background\"\n      transitionDuration=\"normal\"\n    >\n      <StepIcon status={status}>{children}</StepIcon>\n    </Flex>\n  );\n}\n","import { PropsWithChildren, ReactElement } from 'react';\nimport { Box, Checkbox, CheckboxProps, Flex, Text } from '@chakra-ui/react';\nimport { Step } from './Step';\nimport { statusColor } from './statusColor';\nimport { MultistepStatus } from './MultistepStatus';\n\nfunction StepCheckbox({ children, ...props }: PropsWithChildren<CheckboxProps>) {\n  return (\n    <Flex mt=\"0.5\">\n      <Checkbox size=\"sm\" {...props}>\n        <Box fontSize=\"xs\" opacity=\"0.66\">\n          {children}\n        </Box>\n      </Checkbox>\n    </Flex>\n  );\n}\n\nexport function Multistep({\n  step,\n  title,\n  subtitle,\n  checkboxLabel,\n  checkboxProps,\n  status,\n  children,\n}: PropsWithChildren<{\n  step: number;\n  title: string | ReactElement;\n  subtitle?: string | ReactElement;\n  checkboxLabel?: string;\n  checkboxProps?: CheckboxProps;\n  status: MultistepStatus;\n}>) {\n  return (\n    <Flex\n      position=\"relative\"\n      alignItems=\"center\"\n      gap={4}\n      rounded=\"lg\"\n      mt=\"4\"\n      p=\"4\"\n      border=\"2px solid\"\n      transitionProperty=\"border-color\"\n      transitionDuration=\"normal\"\n      borderColor={statusColor(status)}\n    >\n      <Step status={status}>{step}</Step>\n      <Flex direction=\"column\">\n        <Text>{title}</Text>\n        {subtitle ? (\n          <Text as=\"div\" fontSize=\"xs\" opacity=\"0.66\">\n            {subtitle}\n          </Text>\n        ) : null}\n        {checkboxLabel ? <StepCheckbox {...checkboxProps}>{checkboxLabel}</StepCheckbox> : null}\n        {children}\n      </Flex>\n    </Flex>\n  );\n}\n","import { Alert, Text } from '@chakra-ui/react';\n\nexport function WithdrawIncrease() {\n  return (\n    <Alert colorScheme=\"orange\" mb=\"4\">\n      <Text fontWeight=\"bold\">\n        This action will increase the timeout for withdrawing collateral\n      </Text>\n    </Alert>\n  );\n}\n","import Wei, { wei } from '@synthetixio/wei';\nimport { createMachine, assign } from 'xstate';\n\nexport const Events = {\n  SET_AMOUNT: 'SET_AMOUNT',\n  SET_COLLATERAL_SYMBOL: 'SET_COLLATERAL_SYMBOL',\n  RETRY: 'RETRY',\n  RUN: 'RUN',\n  SUCCESS: 'SUCCESS',\n  FAILURE: 'FAILURE',\n  RESET: 'RESET',\n} as const;\n\nexport const State = {\n  idle: 'idle',\n  withdraw: 'withdraw',\n  unwrap: 'unwrap',\n  failed: 'failed',\n  success: 'success',\n} as const;\n\nexport const FailedSteps = {\n  [State.withdraw]: State.withdraw,\n  [State.unwrap]: State.unwrap,\n} as const;\n\nexport const ServiceNames = {\n  withdraw: 'withdraw',\n  unwrap: 'unwrap',\n} as const;\n\ntype Context = {\n  error: { error: Error; step: keyof typeof FailedSteps } | null;\n  amount: Wei;\n  collateralSymbol?: string;\n};\n\ntype EventType = typeof Events;\ntype WithdrawEvents =\n  | { type: EventType['SET_AMOUNT']; amount: Wei }\n  | { type: EventType['SET_COLLATERAL_SYMBOL']; symbol: string }\n  | { type: EventType['RETRY'] }\n  | { type: EventType['RUN'] }\n  | { type: EventType['SUCCESS'] }\n  | { type: EventType['FAILURE'] }\n  | { type: EventType['RESET'] };\n\ntype StateType = typeof State;\nexport type MachineState =\n  | {\n      value: StateType['idle'];\n      context: Context & { error: null };\n    }\n  | {\n      value: StateType['withdraw'];\n      context: Context & { error: null };\n    }\n  | {\n      value: StateType['unwrap'];\n      context: Context & { error: null };\n    }\n  | {\n      value: StateType['failed'];\n      context: Context & { error: { error: Error; step: keyof typeof FailedSteps } };\n    }\n  | {\n      value: StateType['success'];\n      context: Context & {\n        error: null;\n      };\n    };\n\nconst initialContext = {\n  amount: wei(0),\n  error: null,\n  collateralSymbol: undefined,\n};\nexport const WithdrawMachine = createMachine<Context, WithdrawEvents, MachineState>({\n  id: 'WithdrawMachine',\n  initial: State.idle,\n  predictableActionArguments: true,\n  context: initialContext,\n  on: {\n    [Events.RESET]: {\n      target: State.idle,\n      actions: assign({\n        amount: (_) => initialContext.amount,\n        error: (_) => initialContext.error,\n        collateralSymbol: (_) => initialContext.collateralSymbol,\n      }),\n    },\n    [Events.SET_AMOUNT]: {\n      actions: assign({ amount: (_context, event) => event.amount }),\n    },\n    [Events.SET_COLLATERAL_SYMBOL]: {\n      actions: assign({ collateralSymbol: (_context, event) => event.symbol }),\n    },\n  },\n  states: {\n    [State.idle]: {\n      on: {\n        [Events.RUN]: [\n          { target: State.withdraw, cond: (context) => context.amount.gt(0) },\n          {\n            target: State.unwrap,\n            cond: (context) => context.amount.gt(0) && context.collateralSymbol === 'WETH',\n          },\n        ],\n      },\n    },\n    [State.withdraw]: {\n      invoke: {\n        src: ServiceNames.withdraw,\n        onError: {\n          target: State.failed,\n          actions: assign({\n            error: (_context, event) => ({ error: event.data, step: FailedSteps.withdraw }),\n          }),\n        },\n        onDone: [\n          { target: State.unwrap, cond: (context) => context.collateralSymbol === 'WETH' },\n          { target: State.success },\n        ],\n      },\n    },\n\n    [State.unwrap]: {\n      invoke: {\n        src: ServiceNames.unwrap,\n        onDone: {\n          target: State.success,\n        },\n        onError: {\n          target: State.failed,\n          actions: assign({\n            error: (_context, event) => ({ error: event.data, step: FailedSteps.unwrap }),\n          }),\n        },\n      },\n    },\n    [State.failed]: {\n      on: {\n        [Events.RETRY]: [\n          {\n            target: State.withdraw,\n            cond: (c) => c.error?.step === FailedSteps.withdraw,\n            actions: assign({ error: (_) => null }),\n          },\n          {\n            target: State.unwrap,\n            cond: (c) => c.error?.step === FailedSteps.unwrap,\n            actions: assign({ error: (_) => null }),\n          },\n        ],\n      },\n    },\n    [State.success]: {},\n  },\n});\n","import { useReducer } from 'react';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useMutation } from '@tanstack/react-query';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport { BigNumber } from 'ethers';\nimport { formatGasPriceForTransaction } from '@snx-v3/useGasOptions';\nimport { getGasPrice } from '@snx-v3/useGasPrice';\nimport { useGasSpeed } from '@snx-v3/useGasSpeed';\nimport { AccountCollateralWithSymbol } from '@snx-v3/useAccountCollateral';\nimport { useAllCollateralPriceIds } from '@snx-v3/useAllCollateralPriceIds';\nimport { fetchPriceUpdates, priceUpdatesToPopulatedTx } from '@snx-v3/fetchPythPrices';\nimport { withERC7412 } from '@snx-v3/withERC7412';\n\nexport const useWithdraw = ({\n  accountId,\n  collateralTypeAddress,\n  accountCollateral,\n}: {\n  accountId?: string;\n  collateralTypeAddress?: string;\n  accountCollateral: AccountCollateralWithSymbol;\n}) => {\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: collateralPriceIds } = useAllCollateralPriceIds();\n  const { network } = useNetwork();\n\n  const { gasSpeed } = useGasSpeed();\n  const signer = useSigner();\n  const provider = useProvider();\n\n  const mutation = useMutation({\n    mutationFn: async () => {\n      if (!signer || !network || !provider) throw new Error('No signer or network');\n\n      if (\n        !(\n          CoreProxy &&\n          collateralTypeAddress &&\n          accountCollateral?.availableCollateral &&\n          collateralPriceIds\n        )\n      )\n        return;\n      if (accountCollateral?.availableCollateral.eq(0)) return;\n      const walletAddress = await signer.getAddress();\n\n      try {\n        dispatch({ type: 'prompting' });\n\n        const gasPricesPromised = getGasPrice({ provider });\n\n        const populatedTxnPromised = CoreProxy.populateTransaction.withdraw(\n          BigNumber.from(accountId),\n          collateralTypeAddress,\n          accountCollateral?.availableCollateral.toBN()\n        );\n\n        const collateralPriceCallsPromise = fetchPriceUpdates(\n          collateralPriceIds,\n          network.isTestnet\n        ).then((signedData) =>\n          priceUpdatesToPopulatedTx(walletAddress, collateralPriceIds, signedData)\n        );\n        const [gasPrices, populatedTxn, collateralPriceCalls] = await Promise.all([\n          gasPricesPromised,\n          populatedTxnPromised,\n          collateralPriceCallsPromise,\n        ]);\n        const allCalls = collateralPriceCalls.concat(populatedTxn);\n\n        const erc7412Tx = await withERC7412(network, allCalls, 'useWithdraw', CoreProxy.interface);\n\n        const gasOptionsForTransaction = formatGasPriceForTransaction({\n          gasLimit: erc7412Tx.gasLimit,\n          gasPrices,\n          gasSpeed,\n        });\n\n        const txn = await signer.sendTransaction({ ...erc7412Tx, ...gasOptionsForTransaction });\n        dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n        await txn.wait();\n        dispatch({ type: 'success' });\n      } catch (error: any) {\n        dispatch({ type: 'error', payload: { error } });\n        throw error;\n      }\n    },\n  });\n  return {\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n};\n","import {\n  Button,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  useToast,\n} from '@chakra-ui/react';\nimport React, { FC, useCallback } from 'react';\nimport { Amount } from '@snx-v3/Amount';\nimport { useUnWrapEth } from '@snx-v3/useWrapEth';\nimport { Multistep } from '@snx-v3/Multistep';\nimport { Wei } from '@synthetixio/wei';\nimport { useParams } from '@snx-v3/useParams';\nimport { Events, ServiceNames, State, WithdrawMachine } from './WithdrawMachine';\nimport { useMachine } from '@xstate/react';\nimport { useWithdraw } from '@snx-v3/useWithdraw';\nimport type { StateFrom } from 'xstate';\nimport { AccountCollateralWithSymbol } from '@snx-v3/useAccountCollateral';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { ContractError } from '@snx-v3/ContractError';\nimport { WithdrawIncrease } from '@snx-v3/WithdrawIncrease';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { useNetwork } from '@snx-v3/useBlockchain';\n\nexport const WithdrawModalUi: FC<{\n  amount: Wei;\n  isOpen: boolean;\n  onClose: () => void;\n  accountCollateral?: AccountCollateralWithSymbol;\n  state: StateFrom<typeof WithdrawMachine>;\n  error: { error: Error; step: string } | null;\n  onSubmit: () => void;\n}> = ({ amount, isOpen, onClose, accountCollateral, onSubmit, state, error }) => {\n  const isProcessing = state.matches(State.withdraw) || state.matches(State.unwrap);\n  return (\n    <Modal size=\"lg\" isOpen={isOpen} onClose={onClose} closeOnOverlayClick={false}>\n      <ModalOverlay />\n      <ModalContent bg=\"black\" color=\"white\" data-testid=\"withdraw modal\">\n        <WithdrawIncrease />\n        <ModalHeader>Complete this action</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <Text mb=\"2\">Please execute the following transactions:</Text>\n\n          <Multistep\n            step={1}\n            title=\"Withdraw\"\n            subtitle={\n              <Text as=\"div\">\n                <Amount value={amount} suffix={` ${accountCollateral?.symbol}`} /> will be withdrawn\n              </Text>\n            }\n            status={{\n              failed: Boolean(error?.step === State.withdraw),\n              disabled: amount.eq(0),\n              success: state.matches(State.unwrap) || state.matches(State.success),\n              loading: state.matches(State.withdraw) && !error,\n            }}\n          />\n          {accountCollateral?.symbol === 'WETH' ? (\n            <Multistep\n              step={2}\n              title={`Unwrap ${accountCollateral?.symbol}`}\n              subtitle=\"This will unwrap your WETH to ETH\"\n              status={{\n                failed: Boolean(error?.step === State.unwrap),\n                disabled: accountCollateral?.symbol !== 'WETH',\n                success: state.matches(State.success),\n                loading: state.matches(State.unwrap),\n              }}\n            />\n          ) : null}\n\n          <Button\n            isDisabled={isProcessing}\n            onClick={onSubmit}\n            width=\"100%\"\n            my=\"4\"\n            data-testid=\"withdraw confirm button\"\n          >\n            {(() => {\n              switch (true) {\n                case Boolean(error):\n                  return 'Retry';\n                case isProcessing:\n                  return 'Processing...';\n                case state.matches(State.success):\n                  return 'Done';\n                default:\n                  return 'Start';\n              }\n            })()}\n          </Button>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport function WithdrawModal({\n  accountCollateral,\n  onClose,\n  isOpen,\n}: {\n  accountCollateral: AccountCollateralWithSymbol;\n  isOpen: boolean;\n  onClose: () => void;\n}) {\n  const params = useParams();\n  const toast = useToast({ isClosable: true, duration: 9000 });\n  const { network } = useNetwork();\n\n  const { exec: unwrap } = useUnWrapEth();\n\n  const { exec: execWithdraw } = useWithdraw({\n    accountId: params.accountId,\n    collateralTypeAddress: accountCollateral?.tokenAddress,\n    accountCollateral,\n  });\n\n  const queryClient = useQueryClient();\n\n  const { data: CoreProxy } = useCoreProxy();\n  const errorParserCoreProxy = useContractErrorParser(CoreProxy);\n\n  const [state, send] = useMachine(WithdrawMachine, {\n    context: {\n      amount: accountCollateral?.availableCollateral,\n    },\n    services: {\n      [ServiceNames.withdraw]: async () => {\n        try {\n          await execWithdraw();\n          await queryClient.invalidateQueries({\n            queryKey: [`${network?.id}-${network?.preset}`, 'AccountSpecificCollateral'],\n          });\n        } catch (error: any) {\n          const contractError = errorParserCoreProxy(error);\n          if (contractError) {\n            console.error(new Error(contractError.name), contractError);\n          }\n          toast.closeAll();\n          toast({\n            title: 'Withdraw failed',\n            description: contractError ? (\n              <ContractError contractError={contractError} />\n            ) : (\n              'Please try again.'\n            ),\n            status: 'error',\n          });\n          throw Error('Withdraw failed', { cause: error });\n        }\n      },\n      [ServiceNames.unwrap]: async () => {\n        try {\n          toast({\n            title: 'Unwrap',\n            description: 'Unwrapping WETH to ETH.',\n            status: 'info',\n          });\n\n          await unwrap(state.context.amount);\n        } catch (e) {\n          toast.closeAll();\n          toast({ title: 'Unwrap failed', description: 'Please try again.', status: 'error' });\n          throw Error('Unwrap failed', { cause: e });\n        }\n      },\n    },\n  });\n\n  const onSubmit = useCallback(async () => {\n    if (state.matches(State.success)) {\n      send(Events.RESET);\n      onClose();\n      return;\n    }\n    if (state.context.error) {\n      send(Events.RETRY);\n      return;\n    }\n    send(Events.RUN);\n  }, [onClose, send, state]);\n\n  return (\n    <WithdrawModalUi\n      amount={state.context.amount}\n      isOpen={isOpen}\n      onClose={onClose}\n      accountCollateral={accountCollateral}\n      state={state}\n      error={state.context.error}\n      onSubmit={onSubmit}\n    />\n  );\n}\n","import { WithdrawModal } from './WithdrawModal';\nexport * from './WithdrawModal';\nexport default WithdrawModal;\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const SUSDCIcon = ({ width = '42px', height = '42px' }: IconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 30 30\" fill=\"none\">\n      <g clipPath=\"url(#clip0_10043_2361)\">\n        <path\n          d=\"M15 30C23.3125 30 30 23.3125 30 15C30 6.68745 23.3125 0 15 0C6.68745 0 0 6.68745 0 15C0 23.3125 6.68745 30 15 30Z\"\n          fill=\"#2775CA\"\n        />\n        <path\n          d=\"M19.125 17.375C19.125 15.1875 17.8125 14.4375 15.1875 14.1251C13.3125 13.875 12.9375 13.3751 12.9375 12.5C12.9375 11.6249 13.5625 11.0625 14.8125 11.0625C15.9375 11.0625 16.5625 11.4375 16.875 12.375C16.9375 12.5625 17.125 12.6875 17.3125 12.6875H18.3124C18.5625 12.6875 18.75 12.5 18.75 12.2501V12.1875C18.4999 10.8125 17.3749 9.75 15.9375 9.62505V8.12505C15.9375 7.875 15.75 7.6875 15.4375 7.62495H14.5C14.25 7.62495 14.0625 7.81245 13.9999 8.12505V9.5625C12.1249 9.81255 10.9375 11.0625 10.9375 12.6251C10.9375 14.6876 12.1875 15.5 14.8125 15.8126C16.5625 16.125 17.125 16.5 17.125 17.5001C17.125 18.5001 16.2499 19.1876 15.0625 19.1876C13.4374 19.1876 12.8749 18.5 12.6874 17.5625C12.625 17.3126 12.4375 17.1875 12.25 17.1875H11.1874C10.9375 17.1875 10.75 17.375 10.75 17.625V17.6876C10.9999 19.25 12 20.375 14.0625 20.6876V22.1876C14.0625 22.4375 14.25 22.625 14.5624 22.6875H15.4999C15.7499 22.6875 15.9375 22.5 16 22.1876V20.6876C17.875 20.375 19.125 19.0625 19.125 17.375Z\"\n          fill=\"white\"\n        />\n        <path\n          d=\"M11.8125 23.9374C6.9375 22.1875 4.43745 16.75 6.25005 11.9374C7.18755 9.31245 9.25005 7.3125 11.8125 6.375C12.0625 6.25005 12.1875 6.06255 12.1875 5.74995V4.875C12.1875 4.62495 12.0625 4.43745 11.8125 4.37505C11.7499 4.37505 11.625 4.37505 11.5624 4.43745C5.625 6.31245 2.37495 12.625 4.24995 18.5625C5.37495 22.0624 8.0625 24.75 11.5624 25.875C11.8125 25.9999 12.0625 25.875 12.1249 25.6249C12.1875 25.5625 12.1875 25.5 12.1875 25.375V24.4999C12.1875 24.3124 12 24.0625 11.8125 23.9374ZM18.4375 4.43745C18.1875 4.3125 17.9375 4.43745 17.875 4.6875C17.8125 4.75005 17.8125 4.81245 17.8125 4.93755V5.8125C17.8125 6.06255 18 6.31245 18.1875 6.43755C23.0625 8.18745 25.5625 13.6249 23.75 18.4375C22.8125 21.0625 20.75 23.0625 18.1875 24C17.9374 24.1249 17.8125 24.3124 17.8125 24.625V25.5C17.8125 25.75 17.9374 25.9375 18.1875 25.9999C18.25 25.9999 18.375 25.9999 18.4375 25.9375C24.375 24.0625 27.6251 17.7499 25.7501 11.8125C24.6251 8.25 21.875 5.56245 18.4375 4.43745Z\"\n          fill=\"white\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_10043_2361\">\n          <rect width=\"30\" height=\"30\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const Logo = ({ color = '#00D1FF', width = '219', height = '18' }: IconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 219 18\" fill=\"none\" color={color}>\n      <g clipPath=\"url(#clip0_3615_54299)\">\n        <path\n          d=\"M21.1343 8.56217C20.2004 7.58594 19.078 7.09805 17.7667 7.09805H4.76824C4.52682 7.09805 4.3197 7.00835 4.14648 6.82851C3.97325 6.64912 3.88684 6.43031 3.88684 6.1721V5.04457C3.88684 4.79813 3.97325 4.58476 4.14648 4.40492C4.3197 4.22553 4.52682 4.13538 4.76824 4.13538H21.5278C21.5697 4.13538 21.6036 4.12134 21.6299 4.09325C21.6561 4.06562 21.6693 4.03436 21.6693 4.00084V0.634543C21.6693 0.589695 21.6561 0.556173 21.6299 0.533523C21.6036 0.511325 21.5693 0.5 21.5278 0.5H4.76824C3.44636 0.5 2.32101 0.988342 1.39261 1.96457C0.464202 2.9408 0 4.11862 0 5.49893V5.71773C0 7.10937 0.464202 8.29308 1.39261 9.26931C2.32101 10.2455 3.44636 10.7334 4.76824 10.7334H17.7667C17.9976 10.7334 18.1996 10.8204 18.3724 10.9944C18.5456 11.1683 18.632 11.3844 18.632 11.6426V12.7701C18.632 13.0284 18.5456 13.2444 18.3724 13.4184C18.1992 13.5924 17.9971 13.6793 17.7667 13.6793H0.991512C0.96017 13.6793 0.930945 13.6934 0.905109 13.7215C0.87885 13.7495 0.86572 13.7862 0.86572 13.8311V17.1974C0.86572 17.2309 0.87885 17.2622 0.905109 17.2898C0.931369 17.3179 0.96017 17.3319 0.991512 17.3319H17.7667C19.078 17.3319 20.2004 16.8413 21.1343 15.8592C22.0678 14.8775 22.535 13.6965 22.535 12.3162V12.097C22.5346 10.7167 22.0678 9.5384 21.1343 8.56217Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M49.354 0.5H45.7187C45.6874 0.5 45.6582 0.511325 45.6323 0.533523C45.6061 0.556173 45.5929 0.589695 45.5929 0.634543V4.90957C45.5929 5.27968 45.4142 5.56054 45.058 5.75126L37.8036 8.9658L30.5492 5.75126C30.1925 5.56054 30.0142 5.28013 30.0142 4.90957V0.634543C30.0142 0.589695 30.0036 0.556173 29.9829 0.533523C29.9613 0.511325 29.9299 0.5 29.888 0.5H26.2527C26.2214 0.5 26.1922 0.511325 26.1663 0.533523C26.1401 0.556173 26.127 0.589695 26.127 0.634543V5.53246C26.127 6.26225 26.3159 6.92953 26.6937 7.5352C27.0715 8.14132 27.5852 8.5898 28.2358 8.88154L35.8523 12.2981V17.1797C35.8523 17.2246 35.8655 17.2613 35.8917 17.2893C35.918 17.3174 35.9519 17.3315 35.9938 17.3315H39.629C39.6604 17.3315 39.6892 17.3174 39.7154 17.2893C39.7417 17.2613 39.7548 17.225 39.7548 17.1797V12.2986L47.3714 8.89875C48.0215 8.59569 48.5361 8.14404 48.9135 7.54381C49.2913 6.94357 49.4798 6.27901 49.4798 5.54922V0.634543C49.4798 0.589695 49.4667 0.556173 49.4404 0.533523C49.4141 0.511325 49.3853 0.5 49.354 0.5Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M76.356 0.5H72.7208C72.6788 0.5 72.6471 0.514043 72.6263 0.54213C72.6051 0.570216 72.595 0.601021 72.595 0.634543V13.6956H71.0685C70.7852 13.6956 70.5437 13.5611 70.3447 13.2916L63.2948 2.26718C62.5392 1.13421 61.4952 0.544848 60.1632 0.5H54.0892C54.0472 0.5 54.0129 0.514043 53.9867 0.54213C53.9604 0.570216 53.9473 0.601021 53.9473 0.634543V17.1965C53.9473 17.23 53.9604 17.2613 53.9867 17.2889C54.0129 17.317 54.0468 17.331 54.0892 17.331H57.7244C57.7558 17.331 57.7846 17.317 57.8108 17.2889C57.8371 17.2613 57.8502 17.23 57.8502 17.1965V4.13538H59.3766C59.66 4.13538 59.901 4.27581 60.1005 4.55623L67.1503 15.5806C67.9059 16.714 68.9495 17.2975 70.282 17.331H76.3564C76.3984 17.331 76.4297 17.317 76.4509 17.2889C76.4716 17.2613 76.4822 17.23 76.4822 17.1965V0.634543C76.4822 0.601021 76.4716 0.570216 76.4509 0.54213C76.4293 0.514043 76.3979 0.5 76.356 0.5Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M102.63 0.5H80.3631C80.3212 0.5 80.2894 0.514043 80.2686 0.54213C80.2475 0.570216 80.2373 0.601021 80.2373 0.634543V4.00084C80.2373 4.03436 80.2475 4.06562 80.2686 4.09325C80.2894 4.12134 80.3212 4.13538 80.3631 4.13538H89.5531V17.1965C89.5531 17.23 89.5633 17.2613 89.5845 17.2889C89.6052 17.317 89.637 17.331 89.6789 17.331H93.3142C93.3561 17.331 93.3875 17.317 93.4086 17.2889C93.4294 17.2613 93.44 17.23 93.44 17.1965V4.13538H102.63C102.672 4.13538 102.706 4.12134 102.732 4.09325C102.758 4.06517 102.771 4.03436 102.771 4.00084V0.634543C102.771 0.601021 102.758 0.570216 102.732 0.54213C102.707 0.514043 102.672 0.5 102.63 0.5Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M129.631 0.5H125.996C125.965 0.5 125.936 0.514043 125.91 0.54213C125.883 0.570216 125.87 0.601021 125.87 0.634543V7.0976H111.141V0.634543C111.141 0.601021 111.128 0.570216 111.101 0.54213C111.075 0.514496 111.041 0.5 110.999 0.5H107.364C107.333 0.5 107.304 0.514043 107.278 0.54213C107.251 0.570216 107.238 0.601021 107.238 0.634543V17.1965C107.238 17.23 107.251 17.2613 107.278 17.2889C107.304 17.317 107.333 17.331 107.364 17.331H110.999C111.041 17.331 111.075 17.317 111.101 17.2889C111.128 17.2608 111.141 17.23 111.141 17.1965V10.7334H125.87V17.1965C125.87 17.23 125.883 17.2613 125.91 17.2889C125.936 17.317 125.965 17.331 125.996 17.331H129.631C129.673 17.331 129.707 17.317 129.733 17.2889C129.76 17.2608 129.773 17.23 129.773 17.1965V0.634543C129.773 0.601021 129.759 0.570216 129.733 0.54213C129.707 0.514043 129.673 0.5 129.631 0.5Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M156.537 0.5H138.896C137.584 0.5 136.462 0.987889 135.529 1.96412C134.595 2.94035 134.128 4.11862 134.128 5.49893V12.3153C134.128 13.707 134.595 14.8907 135.529 15.8669C136.462 16.8431 137.584 17.3315 138.896 17.3315H156.537C156.568 17.3315 156.597 17.3174 156.623 17.2893C156.649 17.2613 156.663 17.2305 156.663 17.1969V13.8306C156.663 13.7858 156.649 13.7523 156.623 13.7296C156.597 13.7074 156.568 13.6961 156.537 13.6961H138.896C138.655 13.6961 138.45 13.6064 138.282 13.427C138.114 13.2476 138.03 13.0343 138.03 12.7874V10.7334H156.525C156.567 10.7334 156.599 10.7194 156.62 10.6913C156.64 10.6632 156.651 10.6324 156.651 10.5989V7.23259C156.651 7.18774 156.64 7.15422 156.62 7.13157C156.599 7.10937 156.567 7.09805 156.525 7.09805H138.03V5.04457C138.03 4.79768 138.114 4.58476 138.282 4.40492C138.45 4.22553 138.655 4.13538 138.896 4.13538H156.537C156.568 4.13538 156.597 4.12134 156.623 4.09325C156.649 4.06562 156.663 4.03436 156.663 4.00084V0.634543C156.663 0.601021 156.649 0.570216 156.623 0.54213C156.597 0.514496 156.568 0.5 156.537 0.5Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M183.41 0.5H161.142C161.1 0.5 161.069 0.514043 161.048 0.54213C161.027 0.570216 161.017 0.601021 161.017 0.634543V4.00084C161.017 4.03436 161.027 4.06562 161.048 4.09325C161.069 4.12134 161.1 4.13538 161.142 4.13538H170.332V17.1965C170.332 17.23 170.343 17.2613 170.364 17.2889C170.385 17.317 170.416 17.331 170.458 17.331H174.093C174.135 17.331 174.167 17.317 174.188 17.2889C174.209 17.2613 174.219 17.23 174.219 17.1965V4.13538H183.409C183.451 4.13538 183.485 4.12134 183.511 4.09325C183.538 4.06517 183.551 4.03436 183.551 4.00084V0.634543C183.551 0.601021 183.538 0.570216 183.511 0.54213C183.486 0.514043 183.451 0.5 183.41 0.5Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M191.874 0.533523C191.853 0.511325 191.821 0.5 191.78 0.5H188.144C188.102 0.5 188.071 0.511325 188.05 0.533523C188.029 0.556173 188.019 0.589695 188.019 0.634543V17.1965C188.019 17.23 188.029 17.2613 188.05 17.2889C188.071 17.317 188.102 17.331 188.144 17.331H191.78C191.821 17.331 191.853 17.317 191.874 17.2889C191.895 17.2608 191.905 17.23 191.905 17.1965V0.634543C191.905 0.590148 191.895 0.556173 191.874 0.533523Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M201.91 4.58965C201.753 4.39894 201.559 4.30335 201.328 4.30335H196.607C196.565 4.30335 196.531 4.28931 196.505 4.26122C196.479 4.23359 196.466 4.20233 196.466 4.16881V0.802512C196.466 0.768989 196.479 0.738185 196.505 0.710098C196.531 0.682465 196.565 0.667969 196.607 0.667969H201.596C202.855 0.667969 203.94 1.21248 204.853 2.30061L206.065 3.86575L203.705 6.91222L201.91 4.58965ZM210.628 2.28385C211.541 1.20659 212.632 0.667969 213.901 0.667969H218.874C218.916 0.667969 218.947 0.679294 218.969 0.701491C218.989 0.724142 219 0.757664 219 0.802512V4.16881C219 4.20233 218.989 4.23359 218.969 4.26122C218.947 4.28931 218.916 4.30335 218.874 4.30335H214.153C213.922 4.30335 213.728 4.39894 213.571 4.58965L210.093 9.06673L213.587 13.5773C213.744 13.7572 213.933 13.8469 214.153 13.8469H218.874C218.916 13.8469 218.947 13.8609 218.969 13.889C218.989 13.9171 219 13.9538 219 13.9982V17.3645C219 17.398 218.989 17.4292 218.969 17.4569C218.947 17.485 218.916 17.499 218.874 17.499H213.902C212.632 17.499 211.546 16.9549 210.644 15.8664L207.749 12.13L204.853 15.8664C203.94 16.9549 202.849 17.499 201.58 17.499H196.607C196.565 17.499 196.534 17.485 196.513 17.4569C196.492 17.4288 196.481 17.3925 196.481 17.3472V13.9809C196.481 13.9474 196.492 13.9166 196.513 13.8885C196.534 13.8604 196.565 13.8464 196.607 13.8464H201.328C201.548 13.8464 201.742 13.7513 201.91 13.5601L205.325 9.15053L210.628 2.28385Z\"\n          fill=\"currentColor\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_3615_54299\">\n          <rect width=\"219\" height=\"17\" fill=\"white\" transform=\"translate(0 0.5)\" />\n        </clipPath>\n      </defs>\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const EthereumIcon = ({ width = '24px', height = '24px', fill = `#627EEA` }: IconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 30 30\" fill=\"none\">\n      <path\n        d=\"M15 30c8.284 0 15-6.716 15-15 0-8.284-6.716-15-15-15C6.716 0 0 6.716 0 15c0 8.284 6.716 15 15 15Z\"\n        fill={fill as string}\n      />\n      <path d=\"M15.467 3.75v8.316l7.028 3.14L15.467 3.75Z\" fill=\"#fff\" fillOpacity=\".602\" />\n      <path d=\"m15.467 3.75-7.03 11.456 7.03-3.14V3.75Z\" fill=\"#fff\" />\n      <path d=\"M15.467 20.595v5.65l7.033-9.73-7.033 4.08Z\" fill=\"#fff\" fillOpacity=\".602\" />\n      <path d=\"M15.467 26.245v-5.651l-7.03-4.08 7.03 9.731Z\" fill=\"#fff\" />\n      <path d=\"m15.467 19.287 7.028-4.08-7.028-3.14v7.22Z\" fill=\"#fff\" fillOpacity=\".2\" />\n      <path d=\"m8.438 15.206 7.029 4.081v-7.22l-7.03 3.14Z\" fill=\"#fff\" fillOpacity=\".602\" />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\ninterface SnxIconProps extends IconProps {\n  color?: string;\n  fill?: string;\n}\n\nexport const SNXIcon = ({\n  width = '25px',\n  height = '24px',\n  color = '#2ED9FF',\n  fill = '#0E052F',\n  ...props\n}: SnxIconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 30 31\" fill=\"none\" {...props}>\n      <path\n        d=\"M30 15.268c0 8.284-6.716 15-15 15-8.284 0-15-6.716-15-15 0-8.285 6.716-15 15-15 8.284 0 15 6.715 15 15Z\"\n        fill={fill}\n      />\n      <path\n        d=\"M10.107 11.673a.624.624 0 0 0-.487-.224H5.674a.115.115 0 0 1-.086-.033.1.1 0 0 1-.032-.073V8.706a.1.1 0 0 1 .032-.072.115.115 0 0 1 .086-.033h4.17c1.053 0 1.96.426 2.723 1.279l1.013 1.226-1.973 2.387-1.5-1.82Zm7.289-1.806c.763-.844 1.675-1.266 2.736-1.266h4.157c.035 0 .061.008.08.026.017.018.026.044.026.079v2.637c0 .027-.01.051-.027.073s-.044.033-.079.033h-3.946a.624.624 0 0 0-.487.224l-2.908 3.508 2.92 3.534c.133.14.29.211.475.211h3.946c.035 0 .061.011.08.033.017.022.026.05.026.086v2.637c0 .026-.01.05-.027.073-.017.021-.044.033-.079.033h-4.157c-1.061 0-1.969-.427-2.723-1.28l-2.42-2.927-2.422 2.927c-.763.853-1.675 1.28-2.736 1.28H5.674c-.035 0-.062-.012-.08-.034a.132.132 0 0 1-.025-.085V19.03c0-.026.008-.05.026-.072.017-.022.044-.033.079-.033H9.62a.65.65 0 0 0 .487-.225l2.855-3.454 4.434-5.38Z\"\n        fill={color}\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const OptimismIcon = ({\n  width = '24px',\n  height = '24px',\n  color = 'white',\n  fill = '#FF0420',\n  ...props\n}: IconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 34 34\" {...props}>\n      <path\n        d=\"M17 34C26.3888 34 34 26.3888 34 17C34 7.61116 26.3888 0 17 0C7.61116 0 0 7.61116 0 17C0 26.3888 7.61116 34 17 34Z\"\n        fill={fill as string}\n      />\n      <path\n        d=\"M12.3295 21.76C11.3042 21.76 10.4641 21.5131 9.80918 21.0195C9.16298 20.5171 8.83984 19.8031 8.83984 18.8775C8.83984 18.6836 8.8614 18.4456 8.90444 18.1635C9.01651 17.5289 9.1759 16.7664 9.38269 15.8761C9.96858 13.452 11.4808 12.24 13.9193 12.24C14.5828 12.24 15.1773 12.3546 15.7029 12.5838C16.2285 12.8041 16.6421 13.1391 16.9437 13.5886C17.2453 14.0294 17.3961 14.5583 17.3961 15.1753C17.3961 15.3604 17.3745 15.594 17.3314 15.8761C17.2022 16.6606 17.0471 17.4231 16.8662 18.1635C16.5646 19.3711 16.0433 20.2747 15.3022 20.8741C14.5612 21.4647 13.5703 21.76 12.3295 21.76ZM12.5105 19.856C12.993 19.856 13.4023 19.7105 13.7384 19.4196C14.083 19.1288 14.3286 18.6836 14.4751 18.0842C14.6732 17.2556 14.824 16.5328 14.9274 15.9158C14.9619 15.7306 14.9791 15.5411 14.9791 15.3472C14.9791 14.5451 14.5699 14.144 13.7513 14.144C13.2688 14.144 12.8552 14.2894 12.5105 14.5803C12.1744 14.8712 11.9332 15.3164 11.7867 15.9158C11.6316 16.5064 11.4765 17.2291 11.3214 18.0842C11.287 18.2605 11.2697 18.4456 11.2697 18.6395C11.2697 19.4505 11.6833 19.856 12.5105 19.856Z\"\n        fill={color as string}\n      />\n      <path\n        d=\"M17.9895 21.6278C17.8947 21.6278 17.8215 21.597 17.7698 21.5352C17.7267 21.4647 17.7138 21.3854 17.731 21.2972L19.5146 12.7028C19.5318 12.6059 19.5792 12.5265 19.6568 12.4648C19.7344 12.4031 19.8162 12.3722 19.9024 12.3722H23.3404C24.2968 12.3722 25.0636 12.575 25.641 12.9805C26.2269 13.386 26.5199 13.9721 26.5199 14.739C26.5199 14.9594 26.494 15.1886 26.4423 15.4266C26.2269 16.4403 25.7918 17.1895 25.1369 17.6744C24.4907 18.1592 23.6031 18.4016 22.4744 18.4016H20.7295L20.135 21.2972C20.1178 21.3942 20.0704 21.4735 19.9928 21.5352C19.9153 21.597 19.8334 21.6278 19.7473 21.6278H17.9895ZM22.5648 16.5769C22.9267 16.5769 23.2412 16.4755 23.5084 16.2728C23.7841 16.0701 23.965 15.7792 24.0513 15.4001C24.0771 15.2503 24.09 15.1181 24.09 15.0035C24.09 14.7479 24.0168 14.5539 23.8703 14.4217C23.7238 14.2806 23.4739 14.2101 23.1206 14.2101H21.5697L21.0785 16.5769H22.5648Z\"\n        fill={color as string}\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\ninterface DollarCircleProps extends IconProps {\n  fill?: string;\n}\n\nexport const DollarCircle = ({ width = '15px', height = '15px', ...props }: DollarCircleProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 19 18\" fill=\"none\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M9.79517 2.75357C6.44891 2.75357 3.73624 5.46625 3.73624 8.8125C3.73624 12.1588 6.44891 14.8714 9.79517 14.8714C13.1414 14.8714 15.8541 12.1588 15.8541 8.8125C15.8541 5.46625 13.1414 2.75357 9.79517 2.75357ZM2.48267 8.8125C2.48267 4.77392 5.75658 1.5 9.79517 1.5C13.8337 1.5 17.1077 4.77392 17.1077 8.8125C17.1077 12.8511 13.8337 16.125 9.79517 16.125C5.75658 16.125 2.48267 12.8511 2.48267 8.8125Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M9.03962 7.48711C9.04452 7.25329 9.11127 7.15806 9.15621 7.11271C9.21551 7.05288 9.33009 6.98862 9.54225 6.95486C9.98435 6.88451 10.5823 6.98693 11.0758 7.11688L11.6819 7.27652L12.0011 6.06428L11.395 5.90465C10.8745 5.76757 10.0611 5.60296 9.34526 5.71686C8.97845 5.77523 8.57742 5.91591 8.26586 6.23026C7.94168 6.55735 7.78576 6.99985 7.78576 7.51481V7.53855L7.78756 7.56221C7.83275 8.15802 8.18724 8.55401 8.55492 8.8144C8.89199 9.05311 9.30983 9.22697 9.64735 9.36742C9.66009 9.37272 9.67272 9.37797 9.68522 9.38318C10.0665 9.54198 10.3494 9.6643 10.5455 9.80792C10.7181 9.93436 10.7353 10.0108 10.7353 10.0783C10.7353 10.3402 10.6583 10.4442 10.5979 10.4988C10.5171 10.5719 10.3654 10.6431 10.1066 10.6754C9.57934 10.741 8.8945 10.6119 8.39035 10.4769L7.7849 10.3148L7.4606 11.5257L8.06605 11.6878C8.59887 11.8305 9.48099 12.0165 10.2615 11.9193C10.6565 11.8701 11.0939 11.7404 11.4387 11.4286C11.8039 11.0983 11.9889 10.6336 11.9889 10.0783C11.9889 9.47293 11.6504 9.06337 11.2862 8.79661C10.9547 8.55379 10.534 8.37864 10.1954 8.23769C10.1859 8.23376 10.1765 8.22986 10.1672 8.22598C9.78653 8.06741 9.49239 7.94221 9.27941 7.79139C9.09878 7.66347 9.051 7.56996 9.03962 7.48711Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M9.79517 11.0063C10.1413 11.0063 10.422 11.2869 10.422 11.633V13.2H9.16838V11.633C9.16838 11.2869 9.449 11.0063 9.79517 11.0063Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M10.422 4.425V5.99196C10.422 6.33813 10.1413 6.61875 9.79517 6.61875C9.449 6.61875 9.16838 6.33813 9.16838 5.99196V4.425H10.422Z\"\n        fill=\"white\"\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\ninterface BitcoinIconProps extends IconProps {\n  fill?: string;\n}\n\nexport const BitcoinIcon = ({ width = '42px', height = '42px' }: BitcoinIconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 42 42\" fill=\"none\">\n      <g clipPath=\"url(#a)\">\n        <path\n          fill=\"#F7931A\"\n          d=\"M21 42c11.598 0 21-9.402 21-21S32.598 0 21 0 0 9.402 0 21s9.402 21 21 21z\"\n        />\n        <path\n          fill=\"#fff\"\n          d=\"M30.436 18.401c.412-2.75-1.684-4.23-4.548-5.217l.93-3.727-2.269-.565-.905 3.63c-.596-.15-1.208-.29-1.818-.429l.912-3.652-2.268-.566-.93 3.726c-.493-.113-.978-.223-1.448-.341l.002-.012-3.129-.78-.603 2.422s1.684.386 1.648.41c.919.23 1.084.837 1.057 1.32l-1.058 4.246c.063.016.144.04.236.075l-.24-.06-1.483 5.949c-.113.278-.398.697-1.041.538.024.033-1.649-.41-1.649-.41l-1.126 2.595 2.953.737c.549.137 1.087.282 1.616.417l-.938 3.77 2.266.564.93-3.728c.62.167 1.22.322 1.808.469l-.926 3.712 2.268.564.938-3.762c3.87.733 6.778.438 8.002-3.062.987-2.816-.048-4.442-2.084-5.502 1.483-.34 2.599-1.316 2.897-3.33zM25.25 25.67c-.7 2.818-5.444 1.294-6.982.912l1.247-4.994c1.538.385 6.47 1.145 5.735 4.082zm.703-7.31c-.64 2.564-4.588 1.26-5.867.942l1.128-4.528c1.28.318 5.405.913 4.739 3.587z\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"a\">\n          <path fill=\"#fff\" d=\"M0 0h42v42H0z\" />\n        </clipPath>\n      </defs>\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const ArbitrumIcon = ({ width = '24px', height = '24px', ...props }: IconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 42 42\" {...props}>\n      <circle cx=\"21\" cy=\"21\" r=\"21\" fill=\"#2D374B\" />\n      <path\n        d=\"M25.089 19.4942L27.7327 15.0085L34.8586 26.1072L34.8619 28.2365L34.8386 13.5798C34.8303 13.403 34.7795 13.2308 34.6907 13.0777C34.6018 12.9246 34.4774 12.7952 34.328 12.7003L21.4989 5.32125C21.3456 5.24842 21.1779 5.21102 21.0082 5.21182C20.8386 5.21262 20.6712 5.2516 20.5186 5.32587C20.479 5.34572 20.4407 5.3679 20.4037 5.39231L20.3591 5.42053L7.90602 12.6367L7.85753 12.6585C7.79299 12.6884 7.7314 12.7243 7.67359 12.7657C7.44004 12.9325 7.28088 13.1839 7.23002 13.4664C7.22223 13.5092 7.21692 13.5525 7.21411 13.5959L7.23361 25.5397L13.871 15.2522C14.7066 13.8881 16.5273 13.4487 18.2174 13.4725L20.201 13.5238L8.51275 32.2682L9.89067 33.0614L21.719 13.5426L26.9472 13.5236L15.1494 33.5342L20.0663 36.3639L20.6538 36.7018C20.9073 36.8025 21.1886 36.8081 21.4458 36.7175L34.4553 29.1783L31.9668 30.6196L25.089 19.4942ZM26.0978 34.0217L21.132 26.228L24.1631 21.0845L30.6846 31.3633L26.0978 34.0217Z\"\n        fill=\"#2D374B\"\n      />\n      <path\n        d=\"M21.1323 26.228L26.0981 34.0214L30.6851 31.363L24.1639 21.0845L21.1323 26.228Z\"\n        fill=\"#28A0F0\"\n      />\n      <path\n        d=\"M34.8623 28.2368L34.859 26.1074L27.7331 15.0087L25.0879 19.4939L31.9669 30.6193L34.4554 29.1781C34.5759 29.0804 34.6745 28.9584 34.7446 28.8201C34.8148 28.6818 34.855 28.5302 34.8626 28.3753L34.8623 28.2368Z\"\n        fill=\"#28A0F0\"\n      />\n      <path\n        d=\"M5.00171 30.2455L8.5141 32.2694L20.2024 13.5251L18.2187 13.4738C16.5286 13.4499 14.7079 13.8891 13.8723 15.2534L7.23495 25.541L5.00299 28.9718V30.2466L5.00171 30.2455Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M26.9474 13.5248L21.7195 13.5438L9.89111 33.0626L14.0254 35.4431L15.1496 33.5362L26.9474 13.5248Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M37.065 13.4979C37.0411 12.9583 36.8863 12.4327 36.614 11.9664C36.3417 11.5 35.96 11.1068 35.5019 10.8208L22.5047 3.34657C22.0407 3.11856 21.5306 3 21.0137 3C20.4967 3 19.9866 3.11856 19.5226 3.34657C19.4141 3.40121 6.88305 10.6689 6.88305 10.6689C6.70895 10.7525 6.54242 10.8511 6.38535 10.9634C5.97846 11.2528 5.64243 11.6306 5.40249 12.0684C5.16255 12.5063 5.02494 12.9928 5 13.4915V28.971L7.23196 25.5402L7.21477 13.5969C7.22521 13.4332 7.27184 13.2738 7.35129 13.1302C7.43074 12.9867 7.54104 12.8625 7.67424 12.7667C7.73325 12.7244 20.4782 5.34712 20.5188 5.32685C20.6714 5.25259 20.8387 5.21361 21.0084 5.21281C21.1781 5.21201 21.3458 5.24941 21.4991 5.32224L34.3282 12.7018C34.4776 12.7967 34.602 12.9261 34.6908 13.0792C34.7797 13.2323 34.8304 13.4045 34.8387 13.5813V28.3768C34.8356 28.5302 34.7998 28.6812 34.7337 28.8196C34.6675 28.9581 34.5726 29.0808 34.4552 29.1796L31.9667 30.6208L30.684 31.3648L26.0969 34.0232L21.4449 36.7192C21.1877 36.81 20.9064 36.8044 20.653 36.7036L15.1493 33.538L14.0251 35.4447L18.9713 38.2924C19.135 38.3852 19.2807 38.4678 19.4002 38.5351C19.5855 38.6377 19.7117 38.7082 19.7561 38.7298C20.1699 38.9111 20.6173 39.0032 21.0691 38.9999C21.4834 39.0005 21.8942 38.9232 22.28 38.7721L35.7915 30.9474C36.1727 30.6509 36.4843 30.2744 36.7042 29.8445C36.9242 29.4145 37.0471 28.9415 37.0645 28.4589L37.065 13.4979Z\"\n        fill=\"#96BEDC\"\n      />\n    </Icon>\n  );\n};\n","import { EthereumIcon } from '../EthereumIcon';\nimport { OptimismIcon } from '../OptimismIcon';\nimport { SNXIcon } from '../SNXIcon';\nimport { DollarCircle } from '../DollarCircle';\nimport { Icon, IconProps } from '@chakra-ui/react';\nimport { BitcoinIcon } from '../BitcoinIcon';\nimport { SUSDCIcon } from '../SUSDCIcon';\nimport { ArbitrumIcon } from '../ArbitrumIcon';\n\ninterface CollateralIconProps extends IconProps {\n  symbol?: string;\n  fill?: string;\n  color?: string;\n}\nexport const CollateralIcon = ({\n  symbol,\n  fill = '#00D1FF',\n  color = '#FFFFFF',\n  ...props\n}: CollateralIconProps) => {\n  switch (symbol) {\n    case 'WETH':\n    case 'ETH':\n      return <EthereumIcon {...props} />;\n    case 'SNX':\n    case 'fSNX':\n    case 'fwSNX':\n      return <SNXIcon fill={fill} color={color} {...props} />;\n    case 'OP':\n      return <OptimismIcon {...props} />;\n    case 'sUSD':\n    case 'sUSD':\n    case 'snxUSD':\n      return <DollarCircle {...props} />;\n    case 'WBTC':\n      return <BitcoinIcon {...props} />;\n    case 'sUSDC':\n    case 'USDC':\n    case 'USDh':\n    case 'fUSDC':\n      return <SUSDCIcon {...props} />;\n    case 'ARB':\n      return <ArbitrumIcon {...props} />;\n    default:\n      return <UnknownIcon {...props} />;\n  }\n};\n\nexport const UnknownIcon = ({ width = '32px', height = '32px', ...props }: IconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 32 32\" fill=\"none\" {...props}>\n      <circle cx=\"16\" cy=\"16\" r=\"15\" fill=\"white\" stroke=\"white\" />\n      <path\n        d=\"M14.1156 19.2899V19.0472C14.1205 18.2147 14.1955 17.551 14.3408 17.0563C14.4908 16.5615 14.7087 16.1619 14.9944 15.8574C15.28 15.5529 15.6238 15.277 16.0257 15.0296C16.3258 14.8393 16.5946 14.6419 16.8318 14.4373C17.069 14.2328 17.2579 14.0068 17.3983 13.7594C17.5387 13.5073 17.6089 13.2266 17.6089 12.9174C17.6089 12.5891 17.529 12.3013 17.3692 12.0539C17.2095 11.8065 16.994 11.6162 16.7229 11.483C16.4566 11.3498 16.1612 11.2832 15.8368 11.2832C15.5221 11.2832 15.2244 11.3522 14.9435 11.4901C14.6627 11.6233 14.4327 11.8232 14.2536 12.0896C14.0745 12.3512 13.9776 12.6771 13.9631 13.0672H11C11.0242 12.1157 11.2566 11.3308 11.6972 10.7123C12.1378 10.0891 12.7212 9.62525 13.4475 9.32078C14.1737 9.01155 14.975 8.85693 15.8514 8.85693C16.8149 8.85693 17.667 9.01393 18.4078 9.32791C19.1485 9.63714 19.7295 10.0867 20.1508 10.6766C20.572 11.2665 20.7826 11.9778 20.7826 12.8103C20.7826 13.3669 20.6882 13.8617 20.4994 14.2946C20.3154 14.7228 20.0564 15.1034 19.7223 15.4364C19.3882 15.7646 18.9936 16.062 18.5385 16.3284C18.156 16.552 17.8413 16.7851 17.5944 17.0277C17.3523 17.2703 17.1707 17.551 17.0497 17.8698C16.9335 18.1885 16.873 18.581 16.8681 19.0472V19.2899H14.1156ZM15.5536 23.8569C15.0694 23.8569 14.6555 23.6904 14.3117 23.3574C13.9728 23.0196 13.8058 22.6153 13.8106 22.1443C13.8058 21.6781 13.9728 21.2784 14.3117 20.9454C14.6555 20.6124 15.0694 20.4459 15.5536 20.4459C16.0136 20.4459 16.4178 20.6124 16.7664 20.9454C17.115 21.2784 17.2918 21.6781 17.2966 22.1443C17.2918 22.4583 17.207 22.7461 17.0424 23.0077C16.8826 23.2646 16.672 23.4716 16.4106 23.6286C16.1491 23.7808 15.8635 23.8569 15.5536 23.8569Z\"\n        fill=\"#06061B\"\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const ChevronDown = ({ width = '20px', height = '20px', ...props }: IconProps) => {\n  return (\n    <Icon width={width} height={height} color=\"cyan.400\" viewBox=\"0 0 20 20\" fill=\"none\" {...props}>\n      <path\n        d=\"M9.99962 10.9766L14.1246 6.85156L15.303 8.0299L9.99962 13.3332L4.69629 8.0299L5.87462 6.85156L9.99962 10.9766Z\"\n        fill=\"currentColor\"\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const ChevronUp = ({ width = '20px', height = '20px', ...props }: IconProps) => {\n  return (\n    <Icon width={width} height={height} color=\"cyan.400\" viewBox=\"0 0 25 24\" fill=\"none\" {...props}>\n      <path\n        d=\"M12.3564 10.828L7.40643 15.778L5.99243 14.364L12.3564 8L18.7204 14.364L17.3064 15.778L12.3564 10.828Z\"\n        fill=\"currentColor\"\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const FailedIcon = ({ w = '94px', h = '94px' }: IconProps) => {\n  return (\n    <Icon w={w} h={h} viewBox=\"0 0 94 94\" fill=\"none\">\n      <g filter=\"url(#filter0_d_1044_28165)\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M47 76.3333C63.2004 76.3333 76.3333 63.2004 76.3333 47C76.3333 30.7996 63.2004 17.6667 47 17.6667C30.7996 17.6667 17.6667 30.7996 17.6667 47C17.6667 63.2004 30.7996 76.3333 47 76.3333ZM47 79C64.6731 79 79 64.6731 79 47C79 29.3269 64.6731 15 47 15C29.3269 15 15 29.3269 15 47C15 64.6731 29.3269 79 47 79Z\"\n          fill=\"#FF4A60\"\n        />\n      </g>\n      <g filter=\"url(#filter1_d_1044_28165)\">\n        <path\n          d=\"M56.3334 39.5466L54.4534 37.6666L47.0001 45.12L39.5467 37.6666L37.6667 39.5466L45.1201 47L37.6667 54.4533L39.5467 56.3333L47.0001 48.88L54.4534 56.3333L56.3334 54.4533L48.8801 47L56.3334 39.5466Z\"\n          fill=\"#FF4A60\"\n        />\n      </g>\n      <defs>\n        <filter\n          id=\"filter0_d_1044_28165\"\n          x=\"0\"\n          y=\"0\"\n          width=\"94\"\n          height=\"94\"\n          filterUnits=\"userSpaceOnUse\"\n          colorInterpolationFilters=\"sRGB\"\n        >\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\n          <feColorMatrix\n            in=\"SourceAlpha\"\n            type=\"matrix\"\n            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n            result=\"hardAlpha\"\n          />\n          <feOffset />\n          <feGaussianBlur stdDeviation=\"7.5\" />\n          <feColorMatrix\n            type=\"matrix\"\n            values=\"0 0 0 0 1 0 0 0 0 0.116667 0 0 0 0 0.222667 0 0 0 0.6 0\"\n          />\n          <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow_1044_28165\" />\n          <feBlend\n            mode=\"normal\"\n            in=\"SourceGraphic\"\n            in2=\"effect1_dropShadow_1044_28165\"\n            result=\"shape\"\n          />\n        </filter>\n        <filter\n          id=\"filter1_d_1044_28165\"\n          x=\"22.6667\"\n          y=\"22.6666\"\n          width=\"48.6667\"\n          height=\"48.6666\"\n          filterUnits=\"userSpaceOnUse\"\n          colorInterpolationFilters=\"sRGB\"\n        >\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\n          <feColorMatrix\n            in=\"SourceAlpha\"\n            type=\"matrix\"\n            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n            result=\"hardAlpha\"\n          />\n          <feOffset />\n          <feGaussianBlur stdDeviation=\"7.5\" />\n          <feColorMatrix\n            type=\"matrix\"\n            values=\"0 0 0 0 1 0 0 0 0 0.116667 0 0 0 0 0.222667 0 0 0 0.6 0\"\n          />\n          <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow_1044_28165\" />\n          <feBlend\n            mode=\"normal\"\n            in=\"SourceGraphic\"\n            in2=\"effect1_dropShadow_1044_28165\"\n            result=\"shape\"\n          />\n        </filter>\n      </defs>\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const WalletIcon = ({\n  width = '20px',\n  height = '20ox',\n  color = 'whiteAlpha.700',\n  ...props\n}: IconProps) => {\n  return (\n    <Icon width={width} color={color} height={height} viewBox=\"0 0 20 20\" fill=\"none\" {...props}>\n      <path\n        d=\"M6.58154 6.2701C6.23637 6.2701 5.95654 6.54993 5.95654 6.8951C5.95654 7.24028 6.23637 7.5201 6.58154 7.5201H10.3101C10.6553 7.5201 10.9351 7.24028 10.9351 6.8951C10.9351 6.54993 10.6553 6.2701 10.3101 6.2701H6.58154Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M13.972 9.10498C13.6268 9.10498 13.347 9.38481 13.347 9.72998C13.347 10.0752 13.6268 10.355 13.972 10.355H14.1873C14.5324 10.355 14.8123 10.0752 14.8123 9.72998C14.8123 9.38481 14.5324 9.10498 14.1873 9.10498H13.972Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M17.2918 11.6311L17.2916 11.6447V12.3416C17.2916 14.6883 15.3892 16.5907 13.0426 16.5907H7.07331C4.72664 16.5907 2.82422 14.6883 2.82422 12.3416V7.38508C2.82422 5.0384 4.72664 3.13599 7.07331 3.13599H13.0426C15.3892 3.13599 17.2916 5.0384 17.2916 7.38508V7.90016L17.2918 7.91382L17.2916 7.92747V11.6174L17.2918 11.6311ZM7.07331 4.38599C5.41699 4.38599 4.07422 5.72876 4.07422 7.38508V12.3416C4.07422 13.9979 5.41699 15.3407 7.07331 15.3407H13.0426C14.6989 15.3407 16.0416 13.9979 16.0416 12.3416V12.2561H13.871C12.4998 12.2552 11.3876 11.1445 11.3867 9.77282C11.3867 8.40047 12.4998 7.28966 13.8706 7.28882H16.0401C15.9893 5.67705 14.6667 4.38599 13.0426 4.38599H7.07331ZM13.8714 11.0061H16.0416V8.53882H13.8712C13.1891 8.53932 12.6369 9.09162 12.6367 9.77223C12.6372 10.4535 13.1895 11.0056 13.8714 11.0061Z\"\n        fill=\"currentColor\"\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const LogoIcon = ({ color = 'cyan.400', width = '29', height = '21' }: IconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 29 21\" fill=\"none\" color={color}>\n      <path\n        d=\"M6.81239 5.45766C6.61525 5.22805 6.37254 5.11297 6.08372 5.11297H0.177C0.124536 5.11297 0.0816109 5.09606 0.0492845 5.06224C0.0164282 5.02898 0 4.99134 0 4.95098V0.89807C0 0.85771 0.0164282 0.820622 0.0492845 0.786807C0.0816109 0.752992 0.124536 0.736084 0.177 0.736084H6.41864C7.99362 0.736084 9.35239 1.39166 10.4944 2.70173L12.0106 4.58611L9.05721 8.25396L6.81239 5.45766ZM17.7207 2.68155C18.8627 1.38457 20.2278 0.736084 21.8161 0.736084H28.0381C28.0906 0.736084 28.1298 0.749719 28.1563 0.776444C28.1822 0.803714 28.1955 0.844074 28.1955 0.89807V4.95098C28.1955 4.99134 28.1822 5.02898 28.1563 5.06224C28.1298 5.09606 28.0906 5.11297 28.0381 5.11297H22.1314C21.8426 5.11297 21.5998 5.22805 21.4027 5.45766L17.0514 10.8479L21.4223 16.2785C21.6195 16.495 21.8553 16.603 22.1314 16.603H28.0381C28.0906 16.603 28.1298 16.6199 28.1563 16.6538C28.1822 16.6876 28.1955 16.7318 28.1955 16.7852V20.8381C28.1955 20.8785 28.1822 20.9161 28.1563 20.9494C28.1298 20.9832 28.0906 21.0001 28.0381 21.0001H21.8161C20.2278 21.0001 18.8691 20.3451 17.7403 19.0345L14.1176 14.5359L10.4944 19.0345C9.35239 20.3451 7.98727 21.0001 6.39903 21.0001H0.177C0.124536 21.0001 0.0847905 20.9832 0.0588234 20.9494C0.0323264 20.9156 0.0196078 20.8719 0.0196078 20.8174V16.7645C0.0196078 16.7241 0.0323264 16.687 0.0588234 16.6532C0.0847905 16.6194 0.124536 16.6025 0.177 16.6025H6.08372C6.35929 16.6025 6.602 16.488 6.81239 16.2578L11.0848 10.9488L17.7207 2.68155Z\"\n        fill=\"currentColor\"\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\ninterface BorrowIconProps extends IconProps {\n  fill?: string;\n}\n\nexport const BorrowIcon = ({ width = '15px', height = '15px', ...props }: BorrowIconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 18 18\" fill=\"none\" {...props}>\n      <svg\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 18 18\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M5.48247 2.4375C4.94851 2.4375 4.51566 2.87036 4.51566 3.40431V5.43752H3.21022C2.67626 5.43752 2.24341 5.87038 2.24341 6.40434V8.59571C2.24341 9.12967 2.67626 9.56252 3.21022 9.56252H4.75822V11.4382C4.24137 11.4576 3.82831 11.8827 3.82831 12.4043V14.5957C3.82831 15.1296 4.26117 15.5625 4.79512 15.5625H13.8598C14.3938 15.5625 14.8266 15.1296 14.8266 14.5957V12.5618C15.3435 12.5424 15.7565 12.1173 15.7565 11.5957V9.40431C15.7565 8.87036 15.3237 8.4375 14.7897 8.4375H13.2417V6.5625H14.5472C15.0811 6.5625 15.514 6.12964 15.514 5.59569V3.40431C15.514 2.87036 15.0811 2.4375 14.5472 2.4375H5.48247ZM5.64066 5.4375V3.5625H14.389V5.4375H5.64066ZM3.36841 6.56252V8.43752H5.71853L5.72504 8.4375H12.1167V6.56252H3.36841ZM5.88322 11.4375V9.56252H12.2749L12.2814 9.5625H14.6315V11.4375H5.88322ZM4.95331 14.4375V12.5625H13.7016V14.4375H4.95331Z\"\n          fill=\"white\"\n        />\n      </svg>\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const CCIP = ({ width = '119px', height = '33px', ...props }: IconProps) => {\n  return (\n    <Icon width={width} height={height} fill=\"none\" viewBox=\"0 0 119 33\" {...props}>\n      <path\n        d=\"M116.41.7H3.436C2.117.7 1.049 1.757 1.049 3.06v26.88c0 1.303 1.068 2.36 2.387 2.36H116.41c1.319 0 2.388-1.056 2.388-2.36V3.06c0-1.303-1.069-2.36-2.388-2.36Z\"\n        fill=\"#000\"\n      />\n      <path\n        d=\"M116.41.9c1.206 0 2.185.968 2.185 2.16v26.88c0 1.192-.979 2.16-2.185 2.16H3.436c-1.206 0-2.185-.968-2.185-2.16V3.06C1.25 1.868 2.23.9 3.436.9H116.41Zm0-.4H3.436C2.007.5.846 1.648.846 3.06v26.88c0 1.412 1.161 2.56 2.59 2.56H116.41c1.429 0 2.59-1.148 2.59-2.56V3.06c0-1.412-1.161-2.56-2.59-2.56Z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"m15.55 7.268-8.092 4.616v9.232l8.092 4.616 8.093-4.616v-9.232L15.55 7.268Zm4.662 11.892-4.662 2.66-4.661-2.66v-5.32l4.661-2.66 4.662 2.66v5.32Z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M32.877 20.96c-.036-.212-.214-.544-.708-.544-.368 0-.611.232-.611.488 0 .212.138.38.425.436l.546.104c.708.136 1.089.592 1.089 1.136 0 .592-.502 1.192-1.409 1.192-1.035 0-1.493-.66-1.553-1.208l.704-.184c.032.38.303.724.854.724.408 0 .63-.2.63-.472 0-.224-.17-.396-.473-.456l-.546-.108c-.623-.124-1.024-.524-1.024-1.104 0-.684.623-1.208 1.36-1.208.947 0 1.311.564 1.396 1l-.684.208.004-.004Z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M34.641 23.692v-3.856h2.444v.708h-1.683v.88h1.525v.668h-1.525v.892h1.683v.708h-2.444Z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M37.987 21.768c0-1.228.943-2.012 1.987-2.012s1.635.652 1.789 1.28l-.716.224c-.093-.368-.397-.776-1.073-.776-.582 0-1.197.412-1.197 1.288 0 .82.582 1.272 1.21 1.272.667 0 .99-.428 1.096-.788l.708.212c-.15.592-.708 1.312-1.805 1.312-1.096 0-1.998-.776-1.998-2.008v-.004Z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M42.739 22.328v-2.492h.76v2.436c0 .504.288.772.737.772s.744-.268.744-.772v-2.436h.761v2.492c0 .948-.667 1.452-1.501 1.452-.834 0-1.497-.504-1.497-1.452h-.004Z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M48.136 22.208h-.396v1.484h-.765v-3.856h1.526c.76 0 1.242.516 1.242 1.184 0 .54-.32.948-.83 1.092l.838 1.576h-.846l-.765-1.484-.004.004Zm.219-.648c.384 0 .61-.216.61-.532 0-.316-.226-.54-.61-.54h-.615v1.072h.615Z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M50.798 23.692v-3.856h2.444v.708H51.56v.88h1.526v.668h-1.526v.892h1.683v.708h-2.444Z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M54.388 23.692v-3.856h1.396c1.113 0 1.926.712 1.926 1.932s-.821 1.924-1.93 1.924h-1.392Zm1.364-.696c.64 0 1.173-.392 1.173-1.228s-.53-1.236-1.165-1.236h-.611v2.464h.607-.004Z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M64.864 19.836h.777l-1.08 3.856h-.782l-.89-2.748-.89 2.748h-.793l-1.085-3.856h.806l.716 2.656.866-2.656h.785l.87 2.664.704-2.664h-.004Z\"\n        fill=\"#fff\"\n      />\n      <path d=\"M66.538 23.692v-3.856h.77v3.856h-.77Z\" fill=\"#fff\" />\n      <path d=\"M70.225 20.548v3.144h-.765v-3.144h-1.234v-.712h3.229v.712h-1.234.004Z\" fill=\"#fff\" />\n      <path\n        d=\"M74.834 23.692v-1.6h-1.7v1.6h-.76v-3.856h.76v1.552h1.7v-1.552h.764v3.856h-.764Z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M78.391 21.768c0-1.228.943-2.012 1.987-2.012s1.635.652 1.788 1.28l-.716.224c-.093-.368-.396-.776-1.072-.776-.583 0-1.198.412-1.198 1.288 0 .82.583 1.272 1.21 1.272.668 0 .991-.428 1.097-.788l.708.212c-.15.592-.708 1.312-1.805 1.312s-1.999-.776-1.999-2.008v-.004Z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M85.67 23.692v-1.6h-1.699v1.6h-.76v-3.856h.76v1.552h1.7v-1.552h.764v3.856h-.764Z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M90.036 22.812H88.45l-.324.88h-.805l1.497-3.856h.882l1.485 3.856h-.825l-.324-.88Zm-1.331-.684h1.08l-.538-1.456-.538 1.456h-.004Z\"\n        fill=\"#fff\"\n      />\n      <path d=\"M92.072 23.692v-3.856h.769v3.856h-.77Z\" fill=\"#fff\" />\n      <path\n        d=\"m96.648 23.692-1.773-2.736v2.736h-.76v-3.856h.947l1.622 2.552v-2.552h.76v3.856h-.796Z\"\n        fill=\"#fff\"\n      />\n      <path d=\"M98.723 23.692v-3.856h.76v3.14h1.741v.716h-2.501Z\" fill=\"#fff\" />\n      <path d=\"M102.192 23.692v-3.856h.769v3.856h-.769Z\" fill=\"#fff\" />\n      <path\n        d=\"m106.768 23.692-1.772-2.736v2.736h-.761v-3.856h.947l1.622 2.552v-2.552h.761v3.856h-.797Z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"m110.086 22.092-.486.528v1.072h-.761v-3.856h.761v1.748l1.562-1.748h.995l-1.545 1.68 1.557 2.176h-.95l-1.133-1.6Z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M30.842 12.352c0-2.024 1.55-3.316 3.274-3.316 1.723 0 2.69 1.076 2.945 2.104l-1.177.368c-.154-.608-.651-1.28-1.768-1.28-.96 0-1.975.68-1.975 2.124 0 1.352.959 2.096 1.995 2.096 1.096 0 1.63-.708 1.805-1.3l1.169.348c-.247.976-1.17 2.16-2.974 2.16-1.805 0-3.29-1.28-3.29-3.308l-.004.004Z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M40.514 12.299a1.778 1.778 0 0 0-.365-.036c-.615 0-1.149.296-1.149 1.244v2.016h-1.206v-4.408h1.17v.656c.27-.584.886-.688 1.27-.688.101 0 .19.008.28.016v1.2Z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M45.478 13.32c0 1.351-1.008 2.34-2.339 2.34s-2.339-.985-2.339-2.34c0-1.357 1.008-2.34 2.339-2.34s2.339.975 2.339 2.34Zm-1.206 0c0-.833-.542-1.257-1.133-1.257-.59 0-1.133.42-1.133 1.256 0 .836.542 1.256 1.133 1.256.59 0 1.133-.42 1.133-1.256Z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M46.902 14.071c.029.348.292.672.818.672.4 0 .59-.208.59-.44 0-.196-.137-.36-.481-.432l-.59-.136c-.863-.188-1.251-.7-1.251-1.316 0-.788.708-1.444 1.667-1.444 1.27 0 1.695.796 1.748 1.272l-1.008.224c-.036-.26-.226-.592-.732-.592-.316 0-.57.188-.57.44 0 .216.161.348.408.396l.635.136c.878.18 1.323.708 1.323 1.352 0 .716-.562 1.452-1.731 1.452-1.344 0-1.805-.86-1.858-1.36l1.032-.224Z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M50.9 14.071c.029.348.292.672.818.672.4 0 .59-.208.59-.44 0-.196-.137-.36-.481-.432l-.59-.136c-.863-.188-1.251-.7-1.251-1.316 0-.788.708-1.444 1.667-1.444 1.27 0 1.695.796 1.748 1.272l-1.008.224c-.036-.26-.226-.592-.732-.592-.316 0-.57.188-.57.44 0 .216.161.348.408.396l.636.136c.878.18 1.323.708 1.323 1.352 0 .716-.563 1.452-1.732 1.452-1.34 0-1.805-.86-1.858-1.36l1.032-.224Z\"\n        fill=\"#fff\"\n      />\n      <path d=\"M54.007 13.392v-1.056h2.63v1.056h-2.63Z\" fill=\"#fff\" />\n      <path\n        d=\"M57.216 12.352c0-2.024 1.55-3.316 3.274-3.316 1.723 0 2.69 1.076 2.945 2.104l-1.177.368c-.154-.608-.652-1.28-1.768-1.28-.96 0-1.975.68-1.975 2.124 0 1.352.96 2.096 1.995 2.096 1.096 0 1.63-.708 1.805-1.3l1.169.348c-.247.976-1.17 2.16-2.974 2.16-1.805 0-3.29-1.28-3.29-3.308l-.004.004Z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M65.366 15.524H64.16V9.036h1.206v2.448c.292-.34.781-.484 1.206-.484 1.133 0 1.66.78 1.66 1.748v2.776h-1.207v-2.572c0-.492-.242-.88-.825-.88-.506 0-.805.376-.834.86v2.592Z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"m70.33 12.987 1.097-.16c.255-.036.336-.16.336-.312 0-.312-.247-.572-.752-.572-.506 0-.818.332-.854.716l-1.069-.224c.073-.692.717-1.452 1.915-1.452 1.412 0 1.938.788 1.938 1.676v2.168c0 .232.028.548.052.7H71.89a2.866 2.866 0 0 1-.045-.528c-.226.348-.651.656-1.315.656-.95 0-1.533-.636-1.533-1.328 0-.788.59-1.228 1.33-1.336l.005-.004Zm1.433.752v-.196l-1.007.152c-.308.044-.555.216-.555.556 0 .26.19.512.579.512.506 0 .98-.24.98-1.02l.003-.004Z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M74.576 8.931a.74.74 0 0 1 .745.744c0 .412-.328.724-.745.724a.736.736 0 0 1-.745-.724c0-.392.336-.744.745-.744Zm-.599 6.597v-4.409h1.206v4.409h-1.206Z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M77.493 15.523h-1.206v-4.408h1.17v.548c.271-.456.805-.664 1.287-.664 1.104 0 1.614.78 1.614 1.748v2.776h-1.206V12.95c0-.492-.246-.88-.825-.88-.526 0-.834.404-.834.912v2.54Z\"\n        fill=\"#fff\"\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const BaseIcon = ({\n  width = '24px',\n  height = '24px',\n  fill = '#0052FF',\n  ...props\n}: IconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 111 111\" {...props}>\n      <path\n        d=\"M54.921 110.034C85.359 110.034 110.034 85.402 110.034 55.017C110.034 24.6319 85.359 0 54.921 0C26.0432 0 2.35281 22.1714 0 50.3923H72.8467V59.6416H3.9565e-07C2.35281 87.8625 26.0432 110.034 54.921 110.034Z\"\n        fill={fill as string}\n      />\n    </Icon>\n  );\n};\n","import Wei, { wei } from '@synthetixio/wei';\nimport React, { createContext, useState, PropsWithChildren, Dispatch, SetStateAction } from 'react';\n\nexport const ManagePositionContext = createContext<{\n  collateralChange: Wei;\n  debtChange: Wei;\n  setDebtChange: Dispatch<SetStateAction<Wei>>;\n  setCollateralChange: Dispatch<SetStateAction<Wei>>;\n}>({\n  collateralChange: wei(0),\n  debtChange: wei(0),\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  setDebtChange: () => {},\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  setCollateralChange: () => {},\n});\n\nexport const ManagePositionProvider: React.FC<PropsWithChildren> = ({ children }) => {\n  const [debtChange, setDebtChange] = useState(wei(0));\n  const [collateralChange, setCollateralChange] = useState(wei(0));\n\n  return (\n    <ManagePositionContext.Provider\n      value={{ debtChange, setDebtChange, collateralChange, setCollateralChange }}\n    >\n      {children}\n    </ManagePositionContext.Provider>\n  );\n};\n","export const GWEI_DECIMALS = 9;\nexport const GAS_LIMIT_MULTIPLIER = 1.5;\n\nexport const DEFAULT_QUERY_REFRESH_INTERVAL = 600_000; // 10min\nexport const DEFAULT_QUERY_STALE_TIME = 300_000; // 5min\n\nexport const INFURA_KEY = process.env.INFURA_KEY || '8c6bfe963db94518b16b17114e29e628';\nexport const ONBOARD_KEY = 'sec_jykTuCK0ZuqXWf3wNYqizxs2';\n\nexport const getSubgraphUrl = (networkName = 'optimism-mainnet') => {\n  switch (networkName) {\n    case 'arbitrum':\n      return `https://subgraph.satsuma-prod.com/ce5e03f52f3b/synthetix/synthetix-arbitrum-mainnet/version/v1/api`;\n    case 'base-sepolia':\n      return 'https://subgraph.satsuma-prod.com/ce5e03f52f3b/synthetix/synthetix-base-sepolia-andromeda/version/v1/api';\n    case 'base':\n      return 'https://subgraph.satsuma-prod.com/ce5e03f52f3b/synthetix/synthetix-base-mainnet-andromeda/version/v1/api';\n    default:\n      return `https://api.thegraph.com/subgraphs/name/snx-v3/${networkName}`;\n  }\n};\n\nexport const SESSION_STORAGE_KEYS = {\n  TERMS_CONDITIONS_ACCEPTED: 'TERMS_CONDITIONS_ACCEPTED',\n};\n\nexport const offchainMainnetEndpoint =\n  process.env.PYTH_MAINNET_ENDPOINT || 'https://hermes.pyth.network';\n\nexport const offchainTestnetEndpoint =\n  process.env.PYTH_TESTNET_ENDPOINT || 'https://hermes.pyth.network';\n","import { offchainMainnetEndpoint, offchainTestnetEndpoint } from '@snx-v3/constants';\nimport { EvmPriceServiceConnection } from '@pythnetwork/pyth-evm-js';\nimport { ethers, PopulatedTransaction, BigNumber } from 'ethers';\nimport { Wei } from '@synthetixio/wei';\n\nexport const fetchPriceUpdates = async (\n  requestedPriceUpdates: { priceFeedId: string; stalenessTolerance: Wei }[],\n  isTestnet: boolean\n) => {\n  if (requestedPriceUpdates.length === 0) return [];\n  const priceService = new EvmPriceServiceConnection(\n    isTestnet ? offchainTestnetEndpoint : offchainMainnetEndpoint\n  );\n  const signedPricesData = await priceService.getPriceFeedsUpdateData(\n    requestedPriceUpdates.map(({ priceFeedId }) => priceFeedId)\n  );\n\n  return signedPricesData.map((signedOffchainData, i) => {\n    const updateType = 1; // todo can I fetch this?\n\n    const { priceFeedId, stalenessTolerance } = requestedPriceUpdates[i];\n    return ethers.utils.defaultAbiCoder.encode(\n      ['uint8', 'uint64', 'bytes32[]', 'bytes[]'],\n      [updateType, stalenessTolerance.toBN(), [priceFeedId], [signedOffchainData]]\n    );\n  });\n};\n\nexport const priceUpdatesToPopulatedTx = (\n  from: string,\n  oracleAddresses: { address: string }[],\n  signedOffchainData: string[]\n) => {\n  if (oracleAddresses.length !== signedOffchainData.length) {\n    throw new Error('oracleAddresses and signedOffchainData must be the same length');\n  }\n  return signedOffchainData.map((signedOffchainDatum, i) => {\n    const tx: PopulatedTransaction = {\n      to: oracleAddresses[i].address,\n      from: from,\n      data: new ethers.utils.Interface([\n        'function fulfillOracleQuery(bytes calldata signedOffchainData) payable external',\n      ]).encodeFunctionData('fulfillOracleQuery', [signedOffchainDatum]),\n      // We set the value to 1 wei to avoid FeeRequired error from pyth, it's quite nice that their fee seems to be the lowest denominator on every network.\n      // If this ever changes, things wont break, but become slower.\n      value: BigNumber.from(1),\n    };\n    return tx;\n  });\n};\n","import { BigNumberish, utils } from 'ethers';\nimport { wei, WeiSource } from '@synthetixio/wei';\n\nexport const formatValue = (value: BigNumberish, decimals = 18) =>\n  parseFloat(utils.formatUnits(value, decimals));\n\nexport const parseUnits = (value: WeiSource, decimals = 18) => wei(value, decimals).toBN();\n\nexport const compareAddress = (add1: string | null = '', add2: string | null = '') =>\n  !!add1 && !!add2 && add1.toLowerCase() === add2.toLowerCase();\n\nexport const prettyString = (text: string, startLength = 6, endLength = 4) => {\n  if (text.length <= startLength + endLength) {\n    return text;\n  }\n  return `${text.substring(0, startLength)}...${text.substring(text.length - endLength)}`;\n};\n","import { Wei } from '@synthetixio/wei';\n\nexport function currency(\n  value: Wei,\n  options?: Intl.NumberFormatOptions,\n  minimumDigitsToShowAfterZeros = 2\n) {\n  try {\n    const stringValue = value.toString();\n    const numberValue = value.toNumber();\n\n    const decimals =\n      numberValue < 0\n        ? -numberValue - Math.floor(-numberValue)\n        : numberValue - Math.floor(numberValue);\n    const zeroDecimals = decimals !== 0 ? -Math.floor(Math.log10(decimals) + 1) : 0;\n\n    const maximumFractionDigits = zeroDecimals + minimumDigitsToShowAfterZeros;\n\n    return isNaN(numberValue)\n      ? stringValue\n      : numberValue.toLocaleString('en-US', {\n          minimumFractionDigits: 0,\n          maximumFractionDigits,\n          ...options,\n        });\n  } catch (error) {\n    return value + '';\n  }\n}\n","export const isBaseAndromeda = (id?: number | string, preset?: string) =>\n  (id?.toString() === '8453' || '84532') && preset === 'andromeda';\n\nexport function getUSDCAddress(id?: number) {\n  switch (id) {\n    case 8453:\n      return BASE_USDC;\n    case 84532:\n      return BASE_SEPOLIA_fUSDC;\n    default:\n      return BASE_USDC;\n  }\n}\n\nexport function getsUSDCAddress(id?: number) {\n  switch (id) {\n    case 8453:\n      return sUSDC;\n    case 84532:\n      return BASE_SEPOLIA_sUSDC;\n    default:\n      return sUSDC;\n  }\n}\n\nexport const BASE_USDC = '0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913';\nexport const sUSDC = '0xC74eA762cF06c9151cE074E6a569a5945b6302E7';\n\n// Base Sepolia\nexport const BASE_SEPOLIA_fUSDC = '0x69980C3296416820623b3e3b30703A74e2320bC8';\nexport const BASE_SEPOLIA_sUSDC = '0x434Aa3FDb11798EDaB506D4a5e48F70845a66219';\n\nexport const USDC_BASE_MARKET = '1';\n","// This is a type guard function that checks if a value is not null and not undefined.\n// This is useful when filtering an array that might have null or undefined values.\nexport const notNil = <T>(x: T | null | undefined): x is T => x !== null && x !== undefined;\n","export type TransactionStatus = 'unsent' | 'prompting' | 'pending' | 'success' | 'error';\n\ntype TxnState = {\n  error: Error | null;\n  modalOpen: boolean;\n  txnStatus: TransactionStatus;\n  txnHash: string | null;\n};\n\nexport const initialState: TxnState = {\n  error: null,\n  modalOpen: false,\n  txnStatus: 'unsent',\n  txnHash: null,\n};\n\nexport type Actions =\n  | { type: 'prompting' }\n  | { type: 'pending'; payload: { txnHash: string } }\n  | { type: 'success' }\n  | { type: 'error'; payload: { error: Error } }\n  | { type: 'settled' };\n\nexport function reducer(state: TxnState, action: Actions): TxnState {\n  switch (action.type) {\n    case 'prompting':\n      return {\n        ...state,\n        txnStatus: 'prompting',\n        modalOpen: true,\n        error: null,\n      };\n\n    case 'pending':\n      return {\n        ...state,\n        txnStatus: 'pending',\n        txnHash: action.payload.txnHash,\n      };\n\n    case 'success':\n      return {\n        ...state,\n        txnStatus: 'success',\n      };\n\n    case 'error':\n      return {\n        ...state,\n        txnStatus: 'error',\n        error: action.payload.error,\n      };\n\n    case 'settled':\n      return {\n        ...state,\n        modalOpen: false,\n        txnStatus: 'unsent',\n        error: null,\n        txnHash: null,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { Contract } from '@ethersproject/contracts';\nimport { useQuery } from '@tanstack/react-query';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { importOracleManagerProxy, OracleManagerProxyType } from '@synthetixio/v3-contracts';\n\nexport function useOracleManagerProxy() {\n  const { network } = useNetwork();\n  const provider = useProvider();\n  const signer = useSigner();\n  const signerOrProvider = signer || provider;\n  const withSigner = Boolean(signer);\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'OracleManagerProxy', { withSigner }],\n    queryFn: async function () {\n      if (!network || !signerOrProvider) throw new Error('Network or signer not available');\n      const { address, abi } = await importOracleManagerProxy(network?.id, network?.preset);\n      return new Contract(address, abi, signerOrProvider) as OracleManagerProxyType;\n    },\n    enabled: Boolean(signerOrProvider),\n    staleTime: Infinity,\n  });\n}\n","// !!! DO NOT EDIT !!! Automatically generated file\n\nimport type { OracleManagerProxy as OracleManagerProxy1Main } from './1-main/OracleManagerProxy';\nimport type { OracleManagerProxy as OracleManagerProxy10Main } from './10-main/OracleManagerProxy';\nimport type { OracleManagerProxy as OracleManagerProxy11155111Main } from './11155111-main/OracleManagerProxy';\nimport type { OracleManagerProxy as OracleManagerProxy13370Main } from './13370-main/OracleManagerProxy';\nimport type { OracleManagerProxy as OracleManagerProxy42161Arbthetix } from './42161-arbthetix/OracleManagerProxy';\nimport type { OracleManagerProxy as OracleManagerProxy421614Arbthetix } from './421614-arbthetix/OracleManagerProxy';\nimport type { OracleManagerProxy as OracleManagerProxy8453Andromeda } from './8453-andromeda/OracleManagerProxy';\nimport type { OracleManagerProxy as OracleManagerProxy84532Andromeda } from './84532-andromeda/OracleManagerProxy';\n\nexport type OracleManagerProxyType =\n  | OracleManagerProxy1Main\n  | OracleManagerProxy10Main\n  | OracleManagerProxy11155111Main\n  | OracleManagerProxy13370Main\n  | OracleManagerProxy42161Arbthetix\n  | OracleManagerProxy421614Arbthetix\n  | OracleManagerProxy8453Andromeda\n  | OracleManagerProxy84532Andromeda;\n\nexport async function importOracleManagerProxy(chainId: number, preset: string = 'main') {\n  switch (`${chainId}-${preset}`) {\n    case '1-main':\n      return import('./1-main/OracleManagerProxy');\n    case '10-main':\n      return import('./10-main/OracleManagerProxy');\n    case '11155111-main':\n      return import('./11155111-main/OracleManagerProxy');\n    case '13370-main':\n      return import('./13370-main/OracleManagerProxy');\n    case '42161-arbthetix':\n      return import('./42161-arbthetix/OracleManagerProxy');\n    case '421614-arbthetix':\n      return import('./421614-arbthetix/OracleManagerProxy');\n    case '8453-andromeda':\n      return import('./8453-andromeda/OracleManagerProxy');\n    case '84532-andromeda':\n      return import('./84532-andromeda/OracleManagerProxy');\n    default:\n      throw new Error(`Unsupported chain ${chainId} for OracleManagerProxy`);\n  }\n}\n","import { useQuery } from '@tanstack/react-query';\nimport { useMulticall3 } from '@snx-v3/useMulticall3';\nimport { ethers } from 'ethers';\nimport { useOracleManagerProxy } from '@snx-v3/useOracleManagerProxy';\nimport { z } from 'zod';\nimport { notNil } from '@snx-v3/tsHelpers';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { CoreProxyType } from '@synthetixio/v3-contracts';\nimport { deploymentsWithERC7412, useNetwork } from '@snx-v3/useBlockchain';\nimport { ZodBigNumber } from '@snx-v3/zod';\nimport { wei } from '@synthetixio/wei';\n\nconst NodeSchema = z.object({\n  nodeType: z.number(),\n  parameters: z.string(),\n  parents: z.array(z.string()),\n});\n\nconst PythParametersSchema = z.object({\n  address: z.string(),\n  priceFeedId: z.string(),\n  stalenessTolerance: ZodBigNumber.transform((x) => wei(x)),\n});\n\nconst EXTERNAL_NODE_TYPE = 2;\n\nconst loadConfigs = async ({ CoreProxy }: { CoreProxy: CoreProxyType }) => {\n  const hideDisabled = false;\n  return await CoreProxy.getCollateralConfigurations(hideDisabled);\n};\n\nfunction removeDuplicatesByProp<T, K extends keyof T>(arr: T[], prop: K): T[] {\n  const seen = new Set<T[K]>();\n  return arr.filter((item) => {\n    const value = item[prop];\n    if (seen.has(value)) {\n      return false;\n    } else {\n      seen.add(value);\n      return true;\n    }\n  });\n}\n\nexport const useAllCollateralPriceIds = () => {\n  const { data: Multicall3 } = useMulticall3();\n  const { data: OracleProxy } = useOracleManagerProxy();\n  const { data: CoreProxy } = useCoreProxy();\n  const { network } = useNetwork();\n\n  return useQuery({\n    enabled: Boolean(Multicall3 && OracleProxy && CoreProxy),\n    staleTime: Infinity,\n\n    queryKey: [`${network?.id}-${network?.preset}`, 'AllCollateralPriceIds'],\n\n    queryFn: async () => {\n      if (!CoreProxy || !Multicall3 || !OracleProxy || !network) {\n        throw Error('useAllCollateralPriceIds should not be enabled ');\n      }\n\n      if (!deploymentsWithERC7412.includes(`${network.id}-${network.preset}`)) return [];\n      const configs = await loadConfigs({ CoreProxy });\n\n      const oracleNodeIds = configs.map((x) => x.oracleNodeId);\n\n      const calls = oracleNodeIds.map((oracleNodeId) => ({\n        target: OracleProxy.address,\n        callData: OracleProxy.interface.encodeFunctionData('getNode', [oracleNodeId]),\n      }));\n\n      const { returnData } = await Multicall3.callStatic.aggregate(calls);\n      const decoded = returnData\n        .map((bytes, i) => {\n          const nodeResp = OracleProxy.interface.decodeFunctionResult('getNode', bytes)[0];\n\n          const { nodeType, parameters } = NodeSchema.parse({ ...nodeResp });\n          if (nodeType !== EXTERNAL_NODE_TYPE) return undefined;\n\n          try {\n            const [address, priceFeedId, stalenessTolerance] = ethers.utils.defaultAbiCoder.decode(\n              ['address', 'bytes32', 'uint256'],\n              parameters\n            );\n\n            const parametersDecoded = PythParametersSchema.parse({\n              address,\n              priceFeedId,\n              stalenessTolerance,\n            });\n            return {\n              parameters,\n              priceFeedId: parametersDecoded.priceFeedId,\n              address: parametersDecoded.address,\n              stalenessTolerance: parametersDecoded.stalenessTolerance,\n            };\n          } catch (error) {\n            console.error(`Decoding parameters failed, config:`, configs[i]);\n            console.error('parameters: ', parameters);\n            console.error(error);\n            return null;\n          }\n        })\n        .filter(notNil);\n\n      return removeDuplicatesByProp(decoded, 'priceFeedId');\n    },\n  });\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { useWallet, useNetwork, useProvider } from '@snx-v3/useBlockchain';\nimport { Contract } from 'ethers';\nimport { ZodBigNumber } from '@snx-v3/zod';\nimport { wei } from '@synthetixio/wei';\n\nconst AllowanceSchema = ZodBigNumber.transform((x) => wei(x));\nconst abi = ['function allowance(address, address) view returns (uint256)'];\n\nexport const useAllowance = ({\n  contractAddress,\n  spender,\n}: {\n  contractAddress?: string;\n  spender?: string;\n}) => {\n  const { activeWallet } = useWallet();\n  const provider = useProvider();\n  const { network } = useNetwork();\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'Allowance',\n      { accountAddress: activeWallet?.address },\n      { contractAddress, spender },\n    ],\n    queryFn: async () => {\n      if (!(contractAddress && spender && activeWallet?.address && provider))\n        throw new Error('OMG');\n      const contract = new Contract(contractAddress, abi, provider);\n      const allowance = await contract.allowance(activeWallet.address, spender);\n      return AllowanceSchema.parse(allowance);\n    },\n    enabled: Boolean(activeWallet?.address && contractAddress && spender && provider),\n  });\n};\n","import { useReducer } from 'react';\nimport { useAllowance } from '@snx-v3/useAllowance';\nimport { BigNumberish, ethers } from 'ethers';\nimport { useMutation } from '@tanstack/react-query';\nimport { useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport { formatGasPriceForTransaction } from '@snx-v3/useGasOptions';\nimport { getGasPrice } from '@snx-v3/useGasPrice';\nimport { useGasSpeed } from '@snx-v3/useGasSpeed';\n\nexport const approveAbi = ['function approve(address spender, uint256 amount) returns (bool)'];\n\nexport const useApprove = (\n  {\n    contractAddress,\n    amount,\n    spender,\n  }: {\n    contractAddress?: string;\n    amount: BigNumberish;\n    spender?: string;\n  },\n  eventHandlers?: {\n    onSuccess?: () => void;\n    onMutate?: () => void;\n    onError?: (e: Error) => void;\n  }\n) => {\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n  const { data: allowance, refetch: refetchAllowance } = useAllowance({ contractAddress, spender });\n\n  const sufficientAllowance = Boolean(allowance?.gte(amount));\n\n  const signer = useSigner();\n  const { gasSpeed } = useGasSpeed();\n  const provider = useProvider();\n\n  const mutation = useMutation({\n    mutationFn: async (infiniteApproval: boolean) => {\n      if (!signer || !contractAddress || !spender || !provider)\n        throw new Error('Signer, contract address or spender is not defined');\n      if (sufficientAllowance) return;\n\n      try {\n        dispatch({ type: 'prompting' });\n\n        const contract = new ethers.Contract(contractAddress, approveAbi, signer);\n        const amountToAppove = infiniteApproval ? ethers.constants.MaxUint256 : amount;\n\n        const gasPricesPromised = getGasPrice({ provider });\n        const gasLimitPromised = contract.estimateGas.approve(spender, amountToAppove);\n\n        const populatedTxnPromised = contract.populateTransaction.approve(spender, amountToAppove, {\n          gasLimit: gasLimitPromised,\n        });\n\n        const [gasPrices, gasLimit, populatedTxn] = await Promise.all([\n          gasPricesPromised,\n          gasLimitPromised,\n          populatedTxnPromised,\n        ]);\n\n        const gasOptionsForTransaction = formatGasPriceForTransaction({\n          gasLimit,\n          gasPrices,\n          gasSpeed,\n        });\n\n        const txn = await signer.sendTransaction({ ...populatedTxn, ...gasOptionsForTransaction });\n        dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n        await txn.wait();\n        dispatch({ type: 'success' });\n        refetchAllowance();\n      } catch (error: any) {\n        dispatch({ type: 'error', payload: { error } });\n        throw error;\n      }\n    },\n    ...eventHandlers,\n  });\n  return {\n    mutation,\n    txnState,\n    isLoading: mutation.isPending,\n    approve: mutation.mutateAsync,\n    refetchAllowance,\n    requireApproval: !sufficientAllowance,\n  };\n};\n","import { ethers } from 'ethers';\nimport React from 'react';\nimport {\n  BaseIcon,\n  EthereumIcon,\n  FailedIcon,\n  LogoIcon,\n  OptimismIcon,\n  ArbitrumIcon,\n} from '@snx-v3/icons';\nimport { INFURA_KEY as DEFAULT_INFURA_KEY } from '@snx-v3/constants';\nimport SynthetixIcon from './SynthetixIcon.svg';\nimport SynthetixLogo from './SynthetixLogo.svg';\nimport { useConnectWallet, useSetChain } from '@web3-onboard/react';\nimport { useCallback } from 'react';\nimport { IconProps } from '@chakra-ui/react';\n\nexport type Network = {\n  id: number;\n  preset: string;\n  hexId: string;\n  token: string;\n  name: string;\n  rpcUrl: () => string;\n  label: string;\n  isSupported: boolean;\n  publicRpcUrl: string;\n  isTestnet: boolean;\n};\n\nexport const UNSUPPORTED_NETWORK: Network = {\n  id: 0,\n  preset: 'main',\n  hexId: `0x${Number(0).toString(16)}`,\n  token: 'ETH',\n  name: 'unsupported',\n  rpcUrl: () => '',\n  publicRpcUrl: '',\n  label: 'Unsupported',\n  isSupported: false,\n  isTestnet: false,\n};\n\ninterface NetworkIconProps extends IconProps {\n  networkId?: Network['id'];\n}\n\nexport const NetworkIcon = ({ networkId, ...props }: NetworkIconProps) => {\n  switch (networkId) {\n    case 1:\n      return <EthereumIcon w=\"24px\" h=\"24px\" {...props} />;\n    case 10:\n      return <OptimismIcon w=\"24px\" h=\"24px\" {...props} />;\n    case 11155111:\n      return <EthereumIcon w=\"24px\" h=\"24px\" {...props} />;\n    case 84531:\n      return <BaseIcon w=\"24px\" h=\"24px\" {...props} />;\n    case 84532:\n      return <BaseIcon w=\"24px\" h=\"24px\" {...props} />;\n    case 13370:\n      return <LogoIcon w=\"29px\" h=\"21px\" {...props} />;\n    case 8453:\n      return <BaseIcon w=\"24px\" h=\"24px\" {...props} />;\n    case 11155420:\n      return <OptimismIcon w=\"24px\" h=\"24px\" {...props} />;\n    case 421614:\n      return <ArbitrumIcon w=\"24px\" h=\"24px\" {...props} />;\n    case 42161:\n      return <ArbitrumIcon w=\"24px\" h=\"24px\" {...props} />;\n    default:\n      return <FailedIcon w=\"24px\" h=\"24px\" {...props} />;\n  }\n};\n\nexport const NETWORKS: Network[] = [\n  {\n    id: 1,\n    preset: 'main',\n    hexId: `0x${Number(1).toString(16)}`,\n    token: 'ETH',\n    name: 'mainnet',\n    rpcUrl: (INFURA_KEY?: string) =>\n      `https://mainnet.infura.io/v3/${INFURA_KEY ?? DEFAULT_INFURA_KEY}`,\n    label: 'Ethereum',\n    isSupported: true,\n    publicRpcUrl: 'https://ethereum.publicnode.com',\n    isTestnet: false,\n  },\n  {\n    id: 8453,\n    preset: 'andromeda',\n    hexId: `0x${Number(8453).toString(16)}`,\n    token: 'ETH',\n    name: 'base',\n    rpcUrl: (INFURA_KEY?: string) =>\n      `https://base-mainnet.infura.io/v3/${INFURA_KEY ?? DEFAULT_INFURA_KEY}`,\n    label: 'Base',\n    isSupported: false,\n    publicRpcUrl: 'https://base.publicnode.com',\n    isTestnet: false,\n  },\n  {\n    id: 10,\n    preset: 'main',\n    hexId: `0x${Number(10).toString(16)}`,\n    token: 'ETH',\n    name: 'optimism-mainnet',\n    rpcUrl: (INFURA_KEY?: string) =>\n      `https://optimism-mainnet.infura.io/v3/${INFURA_KEY ?? DEFAULT_INFURA_KEY}`,\n    label: 'Optimism',\n    isSupported: true,\n    publicRpcUrl: 'https://mainnet.optimism.io',\n    isTestnet: false,\n  },\n  {\n    id: 11155111,\n    preset: 'main',\n    hexId: `0x${Number(11155111).toString(16)}`,\n    token: 'ETH',\n    name: 'sepolia',\n    rpcUrl: (INFURA_KEY?: string) =>\n      `https://sepolia.infura.io/v3/${INFURA_KEY ?? DEFAULT_INFURA_KEY}`,\n    label: 'Sepolia Testnet',\n    isSupported: true,\n    publicRpcUrl: 'https://ethereum-sepolia.publicnode.com',\n    isTestnet: true,\n  },\n  {\n    id: 84532,\n    preset: 'andromeda',\n    hexId: `0x${Number(84532).toString(16)}`,\n    token: 'ETH',\n    name: 'base-sepolia',\n    rpcUrl: (INFURA_KEY?: string) =>\n      `https://base-sepolia.infura.io/v3/${INFURA_KEY ?? DEFAULT_INFURA_KEY}`,\n    label: 'Base Sepolia',\n    isSupported: false, // hidden by default but if wallet switched to Base Sepolia it will be visible\n    publicRpcUrl: 'https://sepolia.base.org',\n    isTestnet: true,\n  },\n  {\n    id: 13370,\n    preset: 'main',\n    hexId: `0x${Number(13370).toString(16)}`,\n    token: 'ETH',\n    name: 'cannon',\n    rpcUrl: () => `http://127.0.0.1:8545`,\n    label: 'Cannon',\n    isSupported: false, // hidden by default but if wallet switched to Cannon it will be visible\n    publicRpcUrl: 'http://127.0.0.1:8545',\n    isTestnet: true,\n  },\n  {\n    id: 11155420,\n    preset: 'main',\n    hexId: `0x${Number(11155420).toString(16)}`,\n    token: 'ETH',\n    name: 'optimism-sepolia',\n    rpcUrl: (INFURA_KEY?: string) =>\n      `https://optimism-sepolia.infura.io/v3/${INFURA_KEY ?? DEFAULT_INFURA_KEY}`,\n    label: 'Optimism Sepolia',\n    isSupported: false,\n    publicRpcUrl: 'https://sepolia.optimism.io/',\n    isTestnet: true,\n  },\n  {\n    id: 421614,\n    preset: 'arbthetix',\n    hexId: `0x${Number(421614).toString(16)}`,\n    token: 'ETH',\n    name: 'arbitrum-sepolia',\n    rpcUrl: (INFURA_KEY?: string) =>\n      `https://arbitrum-sepolia.infura.io/v3/${INFURA_KEY ?? DEFAULT_INFURA_KEY}`,\n    label: 'Arbitrum Sepolia',\n    isSupported: true,\n    publicRpcUrl: 'https://sepolia.arbiscan.io/',\n    isTestnet: true,\n  },\n  {\n    id: 42161,\n    preset: 'arbthetix',\n    hexId: `0x${Number(42161).toString(16)}`,\n    token: 'ETH',\n    name: 'arbitrum',\n    rpcUrl: (INFURA_KEY?: string) =>\n      `https://arbitrum-mainnet.infura.io/v3/${INFURA_KEY ?? DEFAULT_INFURA_KEY}`,\n    label: 'Arbitrum',\n    isSupported: true,\n    publicRpcUrl: 'https://arbiscan.io/',\n    isTestnet: false,\n  },\n];\n\nexport const deploymentsWithERC7412: string[] = [\n  '8453-andromeda',\n  '84531-andromeda',\n  '84532-andromeda',\n  '42161-arbthetix',\n];\n\nexport const DEFAULT_NETWORK =\n  NETWORKS.find(\n    (network) =>\n      `${network.id}-${network.preset}` === window.localStorage.getItem('DEFAULT_NETWORK')\n  ) ?? NETWORKS[1];\n\nexport const appMetadata = {\n  name: 'Synthetix',\n  icon: SynthetixIcon,\n  logo: SynthetixLogo,\n  description: 'Synthetix | The derivatives liquidity protocol.',\n  recommendedInjectedWallets: [\n    { name: 'MetaMask', url: 'https://metamask.io' },\n    { name: 'Brave Wallet', url: 'https://brave.com/wallet' },\n  ],\n  gettingStartedGuide: 'https://synthetix.io',\n  explore: 'https://blog.synthetix.io',\n};\n\nexport function useProviderForChain(network?: Network) {\n  return network ? new ethers.providers.JsonRpcProvider(network.rpcUrl()) : undefined;\n}\n\nexport function useWallet() {\n  const [{ wallet }, conn, disconn] = useConnectWallet();\n\n  const connect = useCallback(conn, [conn]);\n  const disconnect = useCallback(disconn, [disconn]);\n\n  if (!wallet) {\n    return {\n      activeWallet: null,\n      walletsInfo: null,\n      connect,\n      disconnect,\n    };\n  }\n\n  const activeWallet = wallet?.accounts[0];\n\n  return {\n    activeWallet: activeWallet,\n    walletsInfo: wallet,\n    connect,\n    disconnect,\n  };\n}\n\nexport function useNetwork() {\n  const [{ connectedChain }, setChain] = useSetChain();\n\n  // Hydrate the network info\n  const network = NETWORKS.find((n) => n.hexId === connectedChain?.id);\n\n  const setNetwork = useCallback(\n    async (networkId: number) => {\n      const newNetwork = NETWORKS.find((n) => n.id === networkId);\n      if (!newNetwork) return;\n      await setChain({ chainId: newNetwork?.hexId });\n    },\n    [setChain]\n  );\n\n  if (!network) {\n    return {\n      network: null,\n      setNetwork,\n    };\n  }\n\n  return {\n    network,\n    setNetwork,\n  };\n}\n\nexport function useIsConnected(): boolean {\n  const [{ wallet }] = useConnectWallet();\n  return Boolean(wallet);\n}\n\nexport function useSigner() {\n  const [{ wallet }] = useConnectWallet();\n\n  if (!wallet) {\n    return null;\n  }\n\n  const provider = new ethers.providers.Web3Provider(wallet.provider, 'any');\n\n  return provider.getSigner();\n}\n\nexport function useProvider() {\n  const [{ wallet }] = useConnectWallet();\n\n  if (!wallet) {\n    return null;\n  }\n\n  const provider = new ethers.providers.Web3Provider(wallet.provider, 'any');\n\n  return provider;\n}\n","import { constants, utils } from 'ethers';\nimport { useQuery } from '@tanstack/react-query';\nimport { CoreProxyType, Multicall3Type } from '@synthetixio/v3-contracts';\nimport { z } from 'zod';\nimport { useMemo } from 'react';\nimport { ZodBigNumber } from '@snx-v3/zod';\nimport { wei } from '@synthetixio/wei';\nimport { useMulticall3 } from '@snx-v3/useMulticall3';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\n\nconst CollateralConfigurationSchema = z.object({\n  depositingEnabled: z.boolean(),\n  issuanceRatioD18: ZodBigNumber.transform((x) => wei(x)),\n  liquidationRatioD18: ZodBigNumber.transform((x) => wei(x)),\n  liquidationRewardD18: ZodBigNumber.transform((x) => wei(x)),\n  oracleNodeId: z.string(),\n  tokenAddress: z.string().startsWith('0x'), // As of current version in zod this will be a string: https://github.com/colinhacks/zod/issues/1747\n  minDelegationD18: ZodBigNumber.transform((x) => wei(x)),\n});\n\nconst CollateralTypeSchema = CollateralConfigurationSchema.extend({\n  symbol: z.string(),\n  displaySymbol: z.string(),\n});\n\nexport type CollateralType = z.infer<typeof CollateralTypeSchema>;\n\nconst SymbolSchema = z.string();\nconst ERC20Interface = new utils.Interface(['function symbol() view returns (string)']);\n\nasync function loadSymbols({\n  Multicall3,\n  tokenConfigs,\n}: {\n  Multicall3: Multicall3Type;\n  tokenConfigs: z.infer<typeof CollateralConfigurationSchema>[];\n}) {\n  const calls = tokenConfigs.map((tokenConfig) => ({\n    target: tokenConfig.tokenAddress,\n    callData: ERC20Interface.encodeFunctionData('symbol'),\n  }));\n  const multicallResult = await Multicall3.callStatic.aggregate(calls);\n  return multicallResult.returnData.map((bytes: string) =>\n    SymbolSchema.parse(ERC20Interface.decodeFunctionResult('symbol', bytes)[0])\n  );\n}\n\nasync function loadCollateralTypes({\n  CoreProxy,\n  Multicall3,\n}: {\n  CoreProxy: CoreProxyType;\n  Multicall3: Multicall3Type;\n}): Promise<CollateralType[]> {\n  const hideDisabled = true;\n  const tokenConfigsRaw = await CoreProxy.getCollateralConfigurations(hideDisabled);\n  const tokenConfigs = tokenConfigsRaw\n    .map((x) => CollateralConfigurationSchema.parse({ ...x }))\n    .filter(({ depositingEnabled }) => depositingEnabled); // sometimes we get back disabled ones, even though we ask for only enabled ones\n\n  const symbols = await loadSymbols({ Multicall3, tokenConfigs });\n\n  return tokenConfigs.map((config, i) => ({\n    depositingEnabled: config.depositingEnabled,\n    issuanceRatioD18: config.issuanceRatioD18,\n    liquidationRatioD18: config.liquidationRatioD18,\n    liquidationRewardD18: config.liquidationRewardD18,\n    minDelegationD18: config.minDelegationD18,\n    oracleNodeId: config.oracleNodeId,\n    tokenAddress: config.tokenAddress,\n    symbol: symbols[i],\n    displaySymbol: symbols[i] === 'WETH' ? 'ETH' : symbols[i],\n  }));\n}\n\nexport function useCollateralTypes(includeDelegationOff = false) {\n  const { network } = useNetwork();\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: Multicall3 } = useMulticall3();\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'CollateralTypes', { includeDelegationOff }],\n    queryFn: async () => {\n      if (!CoreProxy || !Multicall3)\n        throw Error('Query should not be enabled when contracts missing');\n      const collateralTypes = (await loadCollateralTypes({ CoreProxy, Multicall3 })).map(\n        (collateralType) => {\n          return {\n            ...collateralType,\n            symbol:\n              collateralType.symbol === 'sUSDC' && isBaseAndromeda(network?.id, network?.preset)\n                ? 'USDC'\n                : collateralType.symbol,\n            displaySymbol:\n              collateralType.displaySymbol === 'sUSDC' &&\n              isBaseAndromeda(network?.id, network?.preset)\n                ? 'USDC'\n                : collateralType.symbol,\n          };\n        }\n      );\n\n      if (includeDelegationOff) {\n        return collateralTypes;\n      }\n\n      // By default we only return collateral types that have minDelegationD18 < MaxUint256\n      // When minDelegationD18 === MaxUint256, delegation is effectively disabled\n      return collateralTypes.filter((collateralType) =>\n        collateralType.minDelegationD18.lt(constants.MaxUint256)\n      );\n    },\n    // one hour in ms\n    staleTime: 60 * 60 * 1000,\n    placeholderData: [],\n    enabled: Boolean(CoreProxy && Multicall3),\n  });\n}\n\nexport function useCollateralType(collateralSymbol?: string) {\n  const { data: collateralTypes, isLoading, error } = useCollateralTypes();\n\n  return {\n    isLoading,\n    error,\n    data: useMemo(() => {\n      if (!collateralTypes || !collateralTypes?.length) {\n        return;\n      }\n      if (!collateralSymbol) {\n        return collateralTypes[0];\n      }\n      return collateralTypes.find(\n        (collateral) => `${collateral.symbol}`.toLowerCase() === `${collateralSymbol}`.toLowerCase()\n      );\n    }, [collateralSymbol, collateralTypes]),\n  };\n}\n","import { ethers, utils } from 'ethers';\nimport { useCallback } from 'react';\nimport { ERC7412_ABI } from '@snx-v3/withERC7412';\n\nexport type ContractErrorType = {\n  data: string;\n  name: string;\n  signature: string;\n  args: Record<string, any>;\n};\n\nexport function useContractErrorParser(Contract?: ethers.Contract) {\n  return useCallback(\n    (error: any): ContractErrorType | undefined => {\n      if (!Contract) {\n        return undefined;\n      }\n      try {\n        const errorData = error?.error?.data?.data || error?.error?.error?.data; // add more options as we find them\n        if (!errorData) {\n          console.error({ error }); // intentional logging as object so we can inspect all properties\n          return undefined;\n        }\n\n        const contractAbi = Contract.interface.format(utils.FormatTypes.full) as string[];\n        const newContract = new ethers.Contract(\n          Contract.address,\n          Array.from(\n            new Set(\n              contractAbi.concat(ERC7412_ABI).concat([\n                // ERC721 errors\n                'error CannotSelfApprove(address addr)',\n                'error InvalidTransferRecipient(address addr)',\n                'error InvalidOwner(address addr)',\n                'error TokenDoesNotExist(uint256 id)',\n                'error TokenAlreadyMinted(uint256 id)',\n              ])\n            )\n          ), // uniq\n          Contract.signer || Contract.provider\n        );\n        const errorParsed = newContract.interface.parseError(errorData);\n        const errorArgs = Object.fromEntries(\n          Object.entries(errorParsed.args)\n            .filter(([key]) => `${parseInt(key)}` !== key)\n            .map(([key, value]) => {\n              if (value instanceof ethers.BigNumber) {\n                // Guess wei\n                const unwei = parseFloat(ethers.utils.formatEther(value.toString()));\n                if (unwei > 0.001) {\n                  // must be wei\n                  return [key, unwei];\n                }\n\n                // Guess date\n                if (\n                  value.toNumber() > new Date(2000, 1, 1).getTime() / 1000 &&\n                  value.toNumber() < new Date(2100, 1, 1).getTime() / 1000\n                ) {\n                  return [key, new Date(value.toNumber() * 1000)];\n                }\n\n                // Just a number\n                return [key, parseFloat(value.toString())];\n              }\n\n              // Not a number\n              return [key, value];\n            })\n        );\n\n        return {\n          data: errorData,\n          name: errorParsed.name,\n          signature: errorParsed.signature,\n          args: errorArgs,\n        };\n      } catch (e) {\n        console.error(e);\n        return undefined;\n      }\n    },\n    [Contract]\n  );\n}\n","import { Contract } from '@ethersproject/contracts';\nimport { useQuery } from '@tanstack/react-query';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { CoreProxyType, importCoreProxy } from '@synthetixio/v3-contracts';\n\nexport function useCoreProxy() {\n  const { network } = useNetwork();\n  const provider = useProvider();\n  const signer = useSigner();\n  const signerOrProvider = signer || provider;\n\n  const withSigner = Boolean(signer);\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'CoreProxy', { withSigner }],\n    queryFn: async function () {\n      if (!signerOrProvider || !network) throw new Error('Should be disabled');\n\n      const { address, abi } = await importCoreProxy(network?.id, network?.preset);\n      return new Contract(address, abi, signerOrProvider) as CoreProxyType;\n    },\n    enabled: Boolean(signerOrProvider),\n    staleTime: Infinity,\n  });\n}\n","import { useQuery } from '@tanstack/react-query';\nimport { useWallet, useNetwork, useProvider } from '@snx-v3/useBlockchain';\nimport { ZodBigNumber } from '@snx-v3/zod';\nimport { wei } from '@synthetixio/wei';\n\nconst BalanceSchema = ZodBigNumber.transform((x) => wei(x));\n\nexport function useEthBalance(networkId?: number) {\n  const { activeWallet } = useWallet();\n  const connectedProvider = useProvider();\n  const { network } = useNetwork();\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'EthBalance',\n      { accountAddress: activeWallet?.address },\n    ],\n    queryFn: async () => {\n      if (!activeWallet || !connectedProvider) throw Error('useEthBalance should not be enabled');\n      return BalanceSchema.parse(await connectedProvider.getBalance(activeWallet.address));\n    },\n    enabled: Boolean((networkId ?? network?.id) && activeWallet?.address),\n  });\n}\n","import type { GasPrices } from '@snx-v3/useGasPrice';\nimport type { BigNumber } from '@ethersproject/bignumber';\nimport { wei } from '@synthetixio/wei';\nimport { GWEI_DECIMALS, GAS_LIMIT_MULTIPLIER } from '@snx-v3/constants';\n\n// Note it looks like gas limit estimation is coming in higher slightly higher than what gets used according to etherscan\n// Will try without a buffer, if we get user report of out of gas we can increase it again.\nconst GAS_LIMIT_BUFFER = wei(GAS_LIMIT_MULTIPLIER, GWEI_DECIMALS);\n\nfunction addGasLimitBuffer(gasLimit?: BigNumber) {\n  return wei(gasLimit ?? 0, GWEI_DECIMALS)\n    .mul(GAS_LIMIT_BUFFER)\n    .toBN();\n}\n\nexport function formatGasPriceForTransaction({\n  gasPrices,\n  gasSpeed,\n  gasLimit,\n}: {\n  gasPrices: GasPrices;\n  gasSpeed: keyof GasPrices;\n  gasLimit: BigNumber;\n}) {\n  const gasPrice = gasPrices[gasSpeed];\n  if ('baseFeePerGas' in gasPrice) {\n    const { baseFeePerGas: _baseFeePerGas, ...gasPriceToReturn } = gasPrice;\n    return { ...gasPriceToReturn, gasLimit: addGasLimitBuffer(gasLimit) };\n  }\n  return { ...gasPrice, gasLimit: addGasLimitBuffer(gasLimit) };\n}\n","// copied from npm package: moving-averages\n// Only grabbed what we needed and added types\nexport const isNumber = (subject: unknown) =>\n  typeof subject === 'number' &&\n  // is not NaN: `NaN === NaN` => `false`\n  subject === subject;\n\nexport const dma = (data: number[], alpha: number, noHead?: boolean): number[] => {\n  const length = data.length;\n\n  if (alpha > 1) {\n    return Array(length);\n  }\n\n  if (alpha === 1) {\n    return data.slice();\n  }\n\n  const noArrayWeight = !Array.isArray(alpha);\n  const ret = [];\n\n  let datum;\n\n  // period `i`\n  let i = 0;\n\n  // `s` is the value of the DWMA at any time period `i`\n  let s = 0;\n\n  // Handles head\n  for (; i < length; i++) {\n    datum = data[i];\n\n    if (isNumber(datum) && (noArrayWeight || isNumber(datum))) {\n      ret[i] = noHead ? 0 : datum;\n\n      s = datum;\n      i++;\n\n      break;\n    }\n  }\n\n  // Dynamic weights: an array of weights\n  // Ref:\n  // https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\n  // with a dynamic alpha\n  if (!noArrayWeight) {\n    for (; i < length; i++) {\n      datum = data[i];\n\n      isNumber(datum) && isNumber(alpha[i])\n        ? (s = ret[i] = alpha[i] * datum + (1 - alpha[i]) * s)\n        : (ret[i] = ret[i - 1]);\n    }\n\n    return ret;\n  }\n\n  const o = 1 - alpha;\n\n  // Fixed alpha\n  for (; i < length; i++) {\n    datum = data[i];\n\n    isNumber(datum) ? (s = ret[i] = alpha * datum + o * s) : (ret[i] = ret[i - 1]);\n  }\n\n  return ret;\n};\n\nexport const ema = (data: number[], size: number) => dma(data, 2 / (size + 1));\n","import { Wei } from '@synthetixio/wei';\n\nexport const rewardsFilterOutliers = (\n  blocksRewards: Wei[][],\n  outlierBlocks: number[],\n  rewardIndex: number\n) =>\n  blocksRewards\n    .filter((_, index) => !outlierBlocks.includes(index))\n    .map((reward) => reward[rewardIndex].toNumber());\n\nexport const getOutlierBlocksToRemove = (blocksRewards: Wei[][], index: number) => {\n  const blocks: number[] = [];\n  blocksRewards\n    .map((reward) => reward[index])\n    .forEach((gweiReward, i) => {\n      if (gweiReward.gt(5)) {\n        blocks.push(i);\n      }\n    });\n  return blocks;\n};\n","/**\n * This module is heavily inspired by https://github.com/rainbow-me/fee-suggestions\n * That library have some hardcoded min and max that doesn't make sense for optimism. See: https://github.com/rainbow-me/fee-suggestions/blob/main/src/index.ts#L165\n *\n * So I changed min max a bit\n *\n * That library is also a bit overkill in how it calculates maxFeePerGas per gas. It's using linear regression and sampling curves.\n * Instead of doing that, this module calculates max by taking  (previous baseFeePerGas * 2) + maxPriorityFeePerGas.\n *\n * The calculation for maxPriorityFeePerGas I kept quite complex since that will affect what the user actually pay..\n * It's calculated based on the Exponential Moving Average (EMA) of the block rewards at the 15th, 30th, and 45th percentiles, after removing the outliers.\n *\n * The other differences is that I also rely on our Wei library.\n *\n */\nimport { ethers } from 'ethers';\nimport { ema } from './math';\nimport { getOutlierBlocksToRemove, rewardsFilterOutliers } from './utils';\nimport { wei, Wei } from '@synthetixio/wei';\nimport { GWEI_DECIMALS } from '@snx-v3/constants';\n\ntype Reward = string[];\ntype GasUsedRatio = number[];\ninterface FeeHistoryResponse {\n  baseFeePerGas: string[];\n  gasUsedRatio: GasUsedRatio;\n  oldestBlock: number;\n  reward: Reward[];\n}\n\nconst defaultForLocalProvider = () => {\n  const baseFeePerGas = wei(1, 9).toBN();\n  const maxFeePerGas = wei(5, 9).toBN();\n  const maxPriorityFeePerGas = wei(1, 9).toBN();\n  return {\n    average: {\n      maxPriorityFeePerGas,\n      maxFeePerGas,\n      baseFeePerGas,\n    },\n    fast: {\n      maxPriorityFeePerGas,\n      maxFeePerGas,\n      baseFeePerGas,\n    },\n    fastest: {\n      maxPriorityFeePerGas,\n      maxFeePerGas,\n      baseFeePerGas,\n    },\n  };\n};\nexport const feeSuggestion = async (\n  provider: ethers.providers.JsonRpcProvider,\n  fromBlock = 'latest'\n) => {\n  // If local or base-goerli, use defaults\n  // Base goerli sometimes doesn't have enough tx we can use to estimate the priority fee, when this happens the tx will get \"tx underprices\"\n  if (provider.network.chainId === 13370 || provider.network.chainId === 84531) {\n    return defaultForLocalProvider();\n  }\n  const feeHistory = await provider\n    .send('eth_feeHistory', [\n      ethers.utils.hexStripZeros(ethers.utils.hexlify(10)),\n      fromBlock,\n      [15, 30, 45],\n    ])\n    .then((feeHistoryResponse: FeeHistoryResponse) => {\n      return {\n        baseFeePerGas: feeHistoryResponse.baseFeePerGas.map((x) => wei(x, GWEI_DECIMALS, true)),\n        reward: feeHistoryResponse.reward.map((x) => x.map((num) => wei(num, GWEI_DECIMALS, true))),\n      };\n    });\n  const blocksRewards = feeHistory.reward;\n  const baseFeePerGas = feeHistory.baseFeePerGas.at(-1);\n\n  if (!blocksRewards.length) throw new Error('Error: block reward was empty');\n  if (!baseFeePerGas) throw new Error('Error: currentBaseFee was empty');\n\n  const outlierBlocks = getOutlierBlocksToRemove(blocksRewards, 0);\n\n  const blocksRewardsPerc15 = rewardsFilterOutliers(blocksRewards, outlierBlocks, 0);\n  const blocksRewardsPerc30 = rewardsFilterOutliers(blocksRewards, outlierBlocks, 1);\n  const blocksRewardsPerc45 = rewardsFilterOutliers(blocksRewards, outlierBlocks, 2);\n\n  const emaPerc15 = ema(blocksRewardsPerc15, blocksRewardsPerc15.length)[\n    blocksRewardsPerc15.length - 1\n  ];\n  const emaPerc30 = ema(blocksRewardsPerc30, blocksRewardsPerc30.length)[\n    blocksRewardsPerc30.length - 1\n  ];\n  const emaPerc45 = ema(blocksRewardsPerc45, blocksRewardsPerc45.length)[\n    blocksRewardsPerc45.length - 1\n  ];\n\n  if (emaPerc15 === undefined || emaPerc30 === undefined || emaPerc45 === undefined) {\n    throw new Error('Error: ema was undefined');\n  }\n\n  const averageMaxPriorityFee = wei(Math.min(emaPerc15, 1), GWEI_DECIMALS);\n  const fastMaxPriorityFee = wei(Math.min(emaPerc30, 2), GWEI_DECIMALS);\n  const fastestMaxPriorityFee = wei(Math.min(emaPerc45, 4), GWEI_DECIMALS);\n\n  const baseFeeToMax = (base: Wei, prio: Wei) => base.mul(wei(2, GWEI_DECIMALS)).add(prio);\n  return {\n    average: {\n      maxPriorityFeePerGas: averageMaxPriorityFee.toBN(),\n      maxFeePerGas: baseFeeToMax(baseFeePerGas, averageMaxPriorityFee).toBN(),\n      baseFeePerGas: baseFeePerGas.toBN(),\n    },\n    fast: {\n      maxPriorityFeePerGas: fastMaxPriorityFee.toBN(),\n      maxFeePerGas: baseFeeToMax(baseFeePerGas, fastMaxPriorityFee).toBN(),\n      baseFeePerGas: baseFeePerGas.toBN(),\n    },\n    fastest: {\n      maxPriorityFeePerGas: fastestMaxPriorityFee.toBN(),\n      maxFeePerGas: baseFeeToMax(baseFeePerGas, fastestMaxPriorityFee).toBN(),\n      baseFeePerGas: baseFeePerGas.toBN(),\n    },\n  };\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\nimport { useNetwork, useProvider } from '@snx-v3/useBlockchain';\nimport { feeSuggestion } from '@snx-v3/feeSuggestion';\n\nconst getGasPriceFromProvider = async (provider: ethers.providers.JsonRpcProvider) => {\n  try {\n    const gasPrice = await provider.getGasPrice();\n    return {\n      fastest: { gasPrice },\n      fast: { gasPrice },\n      average: { gasPrice },\n    };\n  } catch (e) {\n    throw new Error('Could not retrieve gas price from provider');\n  }\n};\n\nexport const getGasPrice = async ({ provider }: { provider: ethers.providers.JsonRpcProvider }) => {\n  try {\n    const block = await provider.getBlock('latest');\n    if (block.baseFeePerGas) {\n      return feeSuggestion(provider);\n    }\n    // When missing baseFeePerGas we get the Gas Price through the provider\n    return getGasPriceFromProvider(provider);\n  } catch (e) {\n    throw new Error(`Could not fetch and compute network fee. ${e}`);\n  }\n};\n\nexport type GasPrices = Awaited<ReturnType<typeof getGasPrice>>;\n\nexport const useGasPrice = () => {\n  const { network } = useNetwork();\n  const provider = useProvider();\n\n  return useQuery({\n    enabled: Boolean(provider),\n    queryKey: [`${network?.id}-${network?.preset}`, 'GasPrice'],\n    queryFn: () => {\n      if (!provider) throw new Error('useGasPrice should not be enabled');\n      return getGasPrice({ provider });\n    },\n  });\n};\n","import React, {\n  createContext,\n  useState,\n  PropsWithChildren,\n  Dispatch,\n  SetStateAction,\n  useContext,\n} from 'react';\n\nexport type GasSpeed = 'average' | 'fast' | 'fastest';\n\nexport const GasSpeedContext = createContext<{\n  gasSpeed: GasSpeed;\n  setGasSpeed: Dispatch<SetStateAction<GasSpeed>>;\n}>({\n  gasSpeed: 'average',\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  setGasSpeed: () => {},\n});\n\nexport const GasSpeedProvider: React.FC<PropsWithChildren> = ({ children }) => {\n  const [gasSpeed, setGasSpeed] = useState<GasSpeed>('average');\n  return (\n    <GasSpeedContext.Provider value={{ gasSpeed, setGasSpeed }}>\n      {children}\n    </GasSpeedContext.Provider>\n  );\n};\n\nexport const useGasSpeed = () => {\n  return useContext(GasSpeedContext);\n};\n","import { Contract } from '@ethersproject/contracts';\nimport { useQuery } from '@tanstack/react-query';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { importMulticall3, Multicall3Type } from '@synthetixio/v3-contracts';\n\nexport function useMulticall3() {\n  const { network } = useNetwork();\n  const provider = useProvider();\n  const signer = useSigner();\n  const signerOrProvider = signer || provider;\n  const withSigner = Boolean(signer);\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'Multicall3', { withSigner }],\n    queryFn: async function () {\n      if (!network || !signerOrProvider) throw new Error('Network or signer not available');\n      const { address, abi } = await importMulticall3(network.id, network.preset);\n      return new Contract(address, abi, signerOrProvider) as Multicall3Type;\n    },\n    enabled: Boolean(signerOrProvider),\n    staleTime: Infinity,\n  });\n}\n","import { useParams as useParamsRouter, useSearchParams } from 'react-router-dom';\nimport { useMemo } from 'react';\n\nexport function searchParamsToObject(searchParams: URLSearchParams) {\n  return Object.fromEntries(Array.from(searchParams));\n}\n\nexport function sortObject(params: Record<string, string>): Record<string, string> {\n  return Object.fromEntries(Object.entries(params).sort(([a], [b]) => a.localeCompare(b)));\n}\n\nexport function cleanObject(params: Record<string, string | undefined>): Record<string, string> {\n  const cleaned = Object.entries(params).filter(([, value]) => value !== undefined) as [\n    [string, string],\n  ];\n  return Object.fromEntries(cleaned);\n}\n\nexport const useParams = (): Record<string, string | undefined> => {\n  const pathParams = useParamsRouter();\n  const [queryParams] = useSearchParams();\n\n  return useMemo(\n    () => sortObject({ ...cleanObject(pathParams), ...searchParamsToObject(queryParams) }),\n    [pathParams, queryParams]\n  );\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { ZodBigNumber } from '@snx-v3/zod';\nimport { z } from 'zod';\nimport { ethers } from 'ethers';\n\nexport const PoolIdSchema = ZodBigNumber.transform((x) => x.toString());\n\nexport const PoolSchema = z.object({\n  id: PoolIdSchema,\n  name: z.string().default('Unnamed Pool'),\n  isPreferred: z.boolean(),\n});\nexport type PoolType = z.infer<typeof PoolSchema>;\n\nexport const PoolsSchema = z.array(PoolSchema);\nexport type PoolsType = z.infer<typeof PoolsSchema>;\n\nexport function usePools() {\n  const { network } = useNetwork();\n  const { data: CoreProxy } = useCoreProxy();\n\n  return useQuery({\n    enabled: Boolean(CoreProxy),\n    queryKey: [`${network?.id}-${network?.preset}`, 'Pools'],\n    queryFn: async () => {\n      if (!CoreProxy) throw 'usePools is missing required data';\n\n      const [prefferedPoolId, approvedPoolIds] = await Promise.all([\n        CoreProxy.callStatic.getPreferredPool(),\n        CoreProxy.callStatic.getApprovedPools(),\n      ]);\n\n      const incompletePools = [\n        {\n          id: prefferedPoolId,\n          isPreferred: true,\n        },\n      ].concat(\n        approvedPoolIds.map((id: ethers.BigNumber) => ({\n          id: id,\n          isPreferred: false,\n        }))\n      );\n\n      const poolNames = await Promise.all(\n        incompletePools.map(async ({ id }) => await CoreProxy.getPoolName(id))\n      );\n\n      const poolsRaw = incompletePools.map(({ id, isPreferred }, i) => ({\n        id,\n        isPreferred,\n        name: poolNames[i],\n      }));\n\n      return PoolsSchema.parse(poolsRaw);\n    },\n  });\n}\n\nexport function usePool(poolId?: string) {\n  const { isLoading, error, data } = usePools();\n\n  return {\n    isLoading,\n    error,\n    data: data?.find((item) => item.id === poolId),\n  };\n}\n\nexport function usePreferredPool() {\n  const { isLoading, error, data } = usePools();\n\n  return {\n    isLoading,\n    error,\n    data: data?.find((item) => item.isPreferred),\n  };\n}\n","import { useReducer } from 'react';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { formatGasPriceForTransaction } from '@snx-v3/useGasOptions';\nimport { useMutation } from '@tanstack/react-query';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport Wei from '@synthetixio/wei';\nimport { BigNumber, ethers } from 'ethers';\nimport { getGasPrice } from '@snx-v3/useGasPrice';\nimport { useGasSpeed } from '@snx-v3/useGasSpeed';\nimport { useUSDProxy } from '@snx-v3/useUSDProxy';\nimport { notNil } from '@snx-v3/tsHelpers';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport { useAllCollateralPriceIds } from '@snx-v3/useAllCollateralPriceIds';\nimport { fetchPriceUpdates, priceUpdatesToPopulatedTx } from '@snx-v3/fetchPythPrices';\nimport { useSpotMarketProxy } from '../useSpotMarketProxy';\nimport { USDC_BASE_MARKET, getsUSDCAddress } from '@snx-v3/isBaseAndromeda';\nimport { parseUnits } from '@snx-v3/format';\nimport { approveAbi } from '@snx-v3/useApprove';\n\nexport const useRepayBaseAndromeda = ({\n  accountId,\n  poolId,\n  collateralTypeAddress,\n  debtChange,\n  availableUSDCollateral,\n}: {\n  accountId?: string;\n  poolId?: string;\n  collateralTypeAddress?: string;\n  availableUSDCollateral?: Wei;\n  debtChange: Wei;\n}) => {\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: UsdProxy } = useUSDProxy();\n  const { data: SpotMarketProxy } = useSpotMarketProxy();\n  const { data: collateralPriceIds } = useAllCollateralPriceIds();\n\n  const signer = useSigner();\n  const { network } = useNetwork();\n  const { gasSpeed } = useGasSpeed();\n  const provider = useProvider();\n\n  const mutation = useMutation({\n    mutationFn: async () => {\n      if (!signer || !network || !provider) throw new Error('No signer or network');\n\n      if (\n        !(\n          CoreProxy &&\n          poolId &&\n          accountId &&\n          collateralTypeAddress &&\n          UsdProxy &&\n          SpotMarketProxy &&\n          collateralPriceIds\n        )\n      ) {\n        return;\n      }\n\n      if (!availableUSDCollateral) return;\n      if (debtChange.eq(0)) return;\n      const debtChangeAbs = debtChange.abs();\n      const amountToDeposit = debtChangeAbs.sub(availableUSDCollateral);\n      const usdcAmount = amountToDeposit.gt(0)\n        ? parseUnits(amountToDeposit.toString(), 6)\n        : BigNumber.from(0);\n\n      try {\n        dispatch({ type: 'prompting' });\n\n        // USDC => sUSDC\n        const wrap = amountToDeposit.gt(0)\n          ? SpotMarketProxy.populateTransaction.wrap(USDC_BASE_MARKET, usdcAmount, 0)\n          : undefined;\n\n        const sUSDC_ADDRESS = getsUSDCAddress(network.id);\n        const sUSDC_Contract = new ethers.Contract(sUSDC_ADDRESS, approveAbi, signer);\n\n        const sUSDC_Approval = amountToDeposit.gt(0)\n          ? sUSDC_Contract.populateTransaction.approve(\n              SpotMarketProxy.address,\n              amountToDeposit.toBN()\n            )\n          : undefined;\n\n        // sell sUSDC => sUSD\n        const sell = amountToDeposit.gt(0)\n          ? SpotMarketProxy.populateTransaction.sell(\n              USDC_BASE_MARKET,\n              amountToDeposit.toBN(),\n              0,\n              ethers.constants.AddressZero\n            )\n          : undefined;\n\n        // approve sUSD to Core\n        const sUSD_Contract = new ethers.Contract(UsdProxy.address, approveAbi, signer);\n\n        const sUSD_Approval = amountToDeposit.gt(0)\n          ? sUSD_Contract.populateTransaction.approve(CoreProxy.address, amountToDeposit.toBN())\n          : undefined;\n\n        // Only deposit if user doesn't have enough sUSD collateral\n        const deposit = amountToDeposit.lte(0)\n          ? undefined\n          : CoreProxy.populateTransaction.deposit(\n              BigNumber.from(accountId),\n              UsdProxy.address,\n              amountToDeposit.toBN() // only deposit what's needed\n            );\n\n        const burn = CoreProxy.populateTransaction.burnUsd(\n          BigNumber.from(accountId),\n          BigNumber.from(poolId),\n          collateralTypeAddress,\n          debtChangeAbs.toBN()\n        );\n\n        const callsPromise = Promise.all(\n          [wrap, sUSDC_Approval, sell, sUSD_Approval, deposit, burn].filter(notNil)\n        );\n\n        const walletAddress = await signer.getAddress();\n\n        const collateralPriceCallsPromise = fetchPriceUpdates(\n          collateralPriceIds,\n          network.isTestnet\n        ).then((signedData) =>\n          priceUpdatesToPopulatedTx(walletAddress, collateralPriceIds, signedData)\n        );\n\n        const [calls, gasPrices, collateralPriceCalls] = await Promise.all([\n          callsPromise,\n          getGasPrice({ provider }),\n          collateralPriceCallsPromise,\n        ]);\n\n        const allCalls = collateralPriceCalls.concat(calls);\n\n        const erc7412Tx = await withERC7412(network, allCalls, 'useRepay', CoreProxy.interface);\n\n        const gasOptionsForTransaction = formatGasPriceForTransaction({\n          gasLimit: erc7412Tx.gasLimit,\n          gasPrices,\n          gasSpeed,\n        });\n\n        const txn = await signer.sendTransaction({ ...erc7412Tx, ...gasOptionsForTransaction });\n        dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n        await txn.wait();\n        dispatch({ type: 'success' });\n      } catch (error: any) {\n        dispatch({ type: 'error', payload: { error } });\n        throw error;\n      }\n    },\n  });\n  return {\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n};\n","import { Contract } from '@ethersproject/contracts';\nimport { useQuery } from '@tanstack/react-query';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { SpotMarketProxyType, importSpotMarketProxy } from '@synthetixio/v3-contracts';\n\nexport function useSpotMarketProxy() {\n  const { network } = useNetwork();\n  const provider = useProvider();\n  const signer = useSigner();\n  const signerOrProvider = signer || provider;\n\n  const withSigner = Boolean(signer);\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'SpotMarketProxy', { withSigner }],\n    queryFn: async function () {\n      if (!signerOrProvider || !network) throw new Error('Should be disabled');\n\n      const { address, abi } = await importSpotMarketProxy(network?.id, network?.preset);\n      return new Contract(address, abi, signerOrProvider) as SpotMarketProxyType;\n    },\n    enabled: Boolean(signerOrProvider),\n    staleTime: Infinity,\n  });\n}\n","// !!! DO NOT EDIT !!! Automatically generated file\n\nimport type { SpotMarketProxy as SpotMarketProxy10Main } from './10-main/SpotMarketProxy';\nimport type { SpotMarketProxy as SpotMarketProxy13370Main } from './13370-main/SpotMarketProxy';\nimport type { SpotMarketProxy as SpotMarketProxy42161Arbthetix } from './42161-arbthetix/SpotMarketProxy';\nimport type { SpotMarketProxy as SpotMarketProxy421614Arbthetix } from './421614-arbthetix/SpotMarketProxy';\nimport type { SpotMarketProxy as SpotMarketProxy8453Andromeda } from './8453-andromeda/SpotMarketProxy';\nimport type { SpotMarketProxy as SpotMarketProxy84532Andromeda } from './84532-andromeda/SpotMarketProxy';\n\nexport type SpotMarketProxyType =\n  | SpotMarketProxy10Main\n  | SpotMarketProxy13370Main\n  | SpotMarketProxy42161Arbthetix\n  | SpotMarketProxy421614Arbthetix\n  | SpotMarketProxy8453Andromeda\n  | SpotMarketProxy84532Andromeda;\n\nexport async function importSpotMarketProxy(chainId: number, preset: string = 'main') {\n  switch (`${chainId}-${preset}`) {\n    case '10-main':\n      return import('./10-main/SpotMarketProxy');\n    case '13370-main':\n      return import('./13370-main/SpotMarketProxy');\n    case '42161-arbthetix':\n      return import('./42161-arbthetix/SpotMarketProxy');\n    case '421614-arbthetix':\n      return import('./421614-arbthetix/SpotMarketProxy');\n    case '8453-andromeda':\n      return import('./8453-andromeda/SpotMarketProxy');\n    case '84532-andromeda':\n      return import('./84532-andromeda/SpotMarketProxy');\n    default:\n      throw new Error(`Unsupported chain ${chainId} for SpotMarketProxy`);\n  }\n}\n","export function assertAddressType(tokenAddress?: string): tokenAddress is `0x${string}` {\n  return tokenAddress ? tokenAddress.startsWith('0x') : false;\n}\n","import { assertAddressType } from '@snx-v3/assertAddressType';\nimport { wei } from '@synthetixio/wei';\nimport { useQuery } from '@tanstack/react-query';\nimport { useNetwork, useProvider, useWallet } from '@snx-v3/useBlockchain';\nimport { ethers } from 'ethers';\nimport { ZodBigNumber } from '@snx-v3/zod';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\n\nexport const BalanceSchema = ZodBigNumber.transform((x) => wei(x));\nexport const abi = [\n  'function balanceOf(address) view returns (uint256)',\n  'function decimals() view returns (uint8)',\n];\n\nexport const useTokenBalance = (address?: string) => {\n  const { activeWallet } = useWallet();\n  const provider = useProvider();\n  const { network } = useNetwork();\n\n  const tokenAddress = assertAddressType(address) ? address : undefined;\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'TokenBalance',\n      { accountAddress: activeWallet?.address },\n      { tokenAddress },\n    ],\n    queryFn: async () => {\n      if (activeWallet?.address && tokenAddress && provider) {\n        const contract = new ethers.Contract(tokenAddress, abi, provider);\n        const balance = isBaseAndromeda(network?.id, network?.preset)\n          ? wei(await contract.balanceOf(activeWallet?.address), await contract.decimals())\n          : BalanceSchema.parse(await contract.balanceOf(activeWallet?.address));\n\n        return balance;\n      }\n    },\n    enabled: Boolean(activeWallet?.address && tokenAddress && provider),\n    refetchInterval: 5000,\n  });\n};\n","import { assertAddressType } from '@snx-v3/assertAddressType';\nimport { useQuery } from '@tanstack/react-query';\nimport { Network, useProviderForChain, useWallet } from '@snx-v3/useBlockchain';\nimport { Contract } from 'ethers';\n\nimport { abi, BalanceSchema } from './useTokenBalance';\n\nexport const useTokenBalanceForChain = (address?: string, network?: Network) => {\n  const { activeWallet } = useWallet();\n  const provider = useProviderForChain(network);\n  const tokenAddress = assertAddressType(address) ? address : undefined;\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'TokenBalanceForChain',\n      { accountAddress: activeWallet?.address },\n      { tokenAddress },\n    ],\n    queryFn: async () => {\n      if (activeWallet?.address && tokenAddress && provider) {\n        const contract = new Contract(tokenAddress, abi, provider);\n        return BalanceSchema.parse(await contract.balanceOf(activeWallet?.address));\n      }\n    },\n    enabled: Boolean(activeWallet?.address && tokenAddress && provider),\n    refetchInterval: 5000,\n  });\n};\n","// !!! DO NOT EDIT !!! Automatically generated file\n\nimport type { USDProxy as USDProxy1Main } from './1-main/USDProxy';\nimport type { USDProxy as USDProxy10Main } from './10-main/USDProxy';\nimport type { USDProxy as USDProxy11155111Main } from './11155111-main/USDProxy';\nimport type { USDProxy as USDProxy13370Main } from './13370-main/USDProxy';\nimport type { USDProxy as USDProxy42161Arbthetix } from './42161-arbthetix/USDProxy';\nimport type { USDProxy as USDProxy421614Arbthetix } from './421614-arbthetix/USDProxy';\nimport type { USDProxy as USDProxy8453Andromeda } from './8453-andromeda/USDProxy';\nimport type { USDProxy as USDProxy84532Andromeda } from './84532-andromeda/USDProxy';\n\nexport type USDProxyType =\n  | USDProxy1Main\n  | USDProxy10Main\n  | USDProxy11155111Main\n  | USDProxy13370Main\n  | USDProxy42161Arbthetix\n  | USDProxy421614Arbthetix\n  | USDProxy8453Andromeda\n  | USDProxy84532Andromeda;\n\nexport async function importUSDProxy(chainId: number, preset: string = 'main') {\n  switch (`${chainId}-${preset}`) {\n    case '1-main':\n      return import('./1-main/USDProxy');\n    case '10-main':\n      return import('./10-main/USDProxy');\n    case '11155111-main':\n      return import('./11155111-main/USDProxy');\n    case '13370-main':\n      return import('./13370-main/USDProxy');\n    case '42161-arbthetix':\n      return import('./42161-arbthetix/USDProxy');\n    case '421614-arbthetix':\n      return import('./421614-arbthetix/USDProxy');\n    case '8453-andromeda':\n      return import('./8453-andromeda/USDProxy');\n    case '84532-andromeda':\n      return import('./84532-andromeda/USDProxy');\n    default:\n      throw new Error(`Unsupported chain ${chainId} for USDProxy`);\n  }\n}\n","import { Contract } from '@ethersproject/contracts';\nimport { useQuery } from '@tanstack/react-query';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { importUSDProxy, USDProxyType } from '@synthetixio/v3-contracts';\n\nexport function useUSDProxy() {\n  const { network } = useNetwork();\n  const provider = useProvider();\n  const signer = useSigner();\n  const signerOrProvider = signer || provider;\n  const withSigner = Boolean(signer);\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'USDProxy', { withSigner }],\n    queryFn: async function () {\n      if (!signerOrProvider || !network) throw new Error('Should be disabled');\n      const { address, abi } = await importUSDProxy(network.id, network.preset);\n      return new Contract(address, abi, signerOrProvider) as USDProxyType;\n    },\n    enabled: Boolean(signerOrProvider),\n    staleTime: Infinity,\n  });\n}\n","import { Contract } from '@ethersproject/contracts';\nimport { useQuery } from '@tanstack/react-query';\nimport { Network, useProviderForChain } from '@snx-v3/useBlockchain';\nimport { importUSDProxy, USDProxyType } from '@synthetixio/v3-contracts';\n\nexport function useUSDProxyForChain(network?: Network) {\n  const provider = useProviderForChain(network);\n  const withSigner = false;\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'USDProxyForChain', { withSigner }],\n    queryFn: async function () {\n      if (network && provider) {\n        const { address, abi } = await importUSDProxy(network.id, network.preset);\n        return new Contract(address, abi, provider) as USDProxyType;\n      }\n    },\n    enabled: Boolean(network && provider),\n    staleTime: Infinity,\n  });\n}\n","import { useSigner } from '@snx-v3/useBlockchain';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useEthBalance } from '@snx-v3/useEthBalance';\nimport { useTokenBalance } from '@snx-v3/useTokenBalance';\nimport { Contract } from 'ethers';\nimport { useMutation } from '@tanstack/react-query';\nimport Wei from '@synthetixio/wei';\nimport { useCallback } from 'react';\n\nconst minimalWETHABI = ['function deposit() payable', 'function withdraw(uint256 wad)'];\n\nexport const useWrapEth = () => {\n  const signer = useSigner();\n\n  const { data: ethCollateral } = useCollateralType('WETH');\n  const { data: ethBalance, refetch: refetchETHBalance } = useEthBalance();\n  const { data: wethBalance, refetch: refetchWETHBalance } = useTokenBalance(\n    ethCollateral?.tokenAddress\n  );\n\n  const { mutateAsync, isPending } = useMutation({\n    mutationFn: async (amount: Wei) => {\n      if (!ethCollateral || !signer) return;\n      const contract = new Contract(ethCollateral?.tokenAddress, minimalWETHABI, signer);\n      const txn = await contract.deposit({ value: amount.toBN() });\n      await txn.wait();\n    },\n  });\n\n  const exec = useCallback(\n    async (amount: Wei) => {\n      if (!ethBalance) return;\n      if (ethBalance.lt(amount)) return;\n\n      await mutateAsync(amount);\n      refetchETHBalance();\n      refetchWETHBalance();\n    },\n    [ethBalance, mutateAsync, refetchETHBalance, refetchWETHBalance]\n  );\n\n  return {\n    exec,\n    isLoading: isPending,\n    wethBalance,\n    ethBalance,\n  };\n};\n\nexport const useUnWrapEth = () => {\n  const signer = useSigner();\n\n  const { data: ethCollateral } = useCollateralType('WETH');\n  const { data: ethBalance, refetch: refetchETHBalance } = useEthBalance();\n  const { data: wethBalance, refetch: refetchWETHBalance } = useTokenBalance(\n    ethCollateral?.tokenAddress\n  );\n\n  const { mutateAsync, isPending } = useMutation({\n    mutationFn: async (amount: Wei) => {\n      if (!ethCollateral || !signer) return;\n      const contract = new Contract(ethCollateral?.tokenAddress, minimalWETHABI, signer);\n      const txn = await contract.withdraw(amount.toBN());\n      await txn.wait();\n    },\n  });\n\n  const exec = useCallback(\n    async (amount: Wei) => {\n      if (!wethBalance) return;\n      if (wethBalance.lt(amount)) return;\n      await mutateAsync(amount);\n      await Promise.all([refetchETHBalance(), refetchWETHBalance()]);\n    },\n    [mutateAsync, refetchETHBalance, refetchWETHBalance, wethBalance]\n  );\n\n  return {\n    exec,\n    isLoading: isPending,\n    wethBalance,\n    ethBalance,\n  };\n};\n","interface CacheItem<T> {\n  timestamp: number;\n  value: T;\n}\n\ninterface Cache<T> {\n  [key: string]: CacheItem<T> | undefined;\n}\n\nconst cache: Cache<unknown> = {};\ntype MaybeString = 'no-cache' | undefined;\n\n/**\n * This function, `withMemoryCache`, takes a function as an argument.\n * The passed function can optionally be given an extra argument to bypass the cache.\n * If the last argument passed to `func` is `true`, the cache will be bypassed.\n * Otherwise, the function will use the cache, if available.\n */\nexport const withMemoryCache = <T extends unknown[], R>(\n  func: (...args: T) => Promise<R>,\n  cacheDuration: number\n) => {\n  return async (...args: [...T, MaybeString]): Promise<R> => {\n    const lastArg = args[args.length - 1];\n    const bypassCache = lastArg === 'no-cache';\n    const funcArgs = (bypassCache ? args.slice(0, -1) : args) as T;\n    const cacheKey = JSON.stringify(funcArgs);\n    const currentTime = Date.now();\n\n    if (!bypassCache) {\n      const cacheItem = cache[cacheKey] as CacheItem<R> | undefined;\n      if (cacheItem && currentTime - cacheItem.timestamp < cacheDuration) {\n        return cacheItem.value;\n      }\n    }\n\n    const result = await func(...funcArgs);\n\n    cache[cacheKey] = {\n      timestamp: currentTime,\n      value: result,\n    };\n\n    return result;\n  };\n};\n","import { Hex } from 'viem';\n\nexport function parseTxError(error: any): Hex | undefined {\n  try {\n    if (error.cause?.data) {\n      return error.cause?.data;\n    }\n    if (error.cause?.cause?.data) {\n      return error.cause?.cause?.data;\n    }\n    if (error.cause?.cause?.cause?.data) {\n      return error.cause?.cause?.cause?.data;\n    }\n    if (error.cause?.cause?.error?.data) {\n      return error.cause?.cause?.error?.data;\n    }\n    if (error.cause?.cause?.cause?.error?.data) {\n      return error.cause?.cause?.cause?.error?.data;\n    }\n    if (error?.error?.error?.data) {\n      return error?.error?.error?.data;\n    }\n  } catch (err) {\n    console.error('exception error parser:', err);\n  }\n}\n","/* eslint-disable no-console */\nimport { BigNumber, ethers, providers } from 'ethers';\nimport { EvmPriceServiceConnection } from '@pythnetwork/pyth-evm-js';\nimport { z } from 'zod';\nimport { ZodBigNumber } from '@snx-v3/zod';\nimport { offchainMainnetEndpoint, offchainTestnetEndpoint } from '@snx-v3/constants';\nimport { deploymentsWithERC7412, Network } from '@snx-v3/useBlockchain';\nimport type { Modify } from '@snx-v3/tsHelpers';\nimport { importCoreProxy, importMulticall3 } from '@synthetixio/v3-contracts';\nimport { withMemoryCache } from './withMemoryCache';\nimport * as viem from 'viem';\nimport { parseTxError } from '../parser';\n\nexport const ERC7412_ABI = [\n  'error OracleDataRequired(address oracleContract, bytes oracleQuery)',\n  'error FeeRequired(uint feeAmount)',\n  'function oracleId() view external returns (bytes32)',\n  'function fulfillOracleQuery(bytes calldata signedOffchainData) payable external',\n];\n\ntype TransactionRequest = ethers.providers.TransactionRequest;\ntype TransactionRequestWithGasLimit = Modify<TransactionRequest, { gasLimit: ethers.BigNumber }>;\n\nconst PRICE_CACHE_LENGTH = 5000;\n\nconst fetchOffchainData = withMemoryCache(\n  async (oracleQuery: string, isTestnet: boolean, logLabel: string) => {\n    const priceService = new EvmPriceServiceConnection(\n      isTestnet ? offchainTestnetEndpoint : offchainMainnetEndpoint\n    );\n    const OracleQuerySchema = z.tuple([z.number(), ZodBigNumber, z.array(z.string())]);\n    const decoded = ethers.utils.defaultAbiCoder.decode(\n      ['uint8', 'uint64', 'bytes32[]'],\n      oracleQuery\n    );\n    const [updateType, stalenessTolerance, priceIds] = OracleQuerySchema.parse(decoded);\n    console.log(`[${logLabel}] stale price for priceFeedId: ${priceIds[0]}`);\n    if (updateType !== 1) {\n      throw new Error(`update type ${updateType} not supported`);\n    }\n    const signedOffchainData = await priceService.getPriceFeedsUpdateData(priceIds);\n\n    return ethers.utils.defaultAbiCoder.encode(\n      ['uint8', 'uint64', 'bytes32[]', 'bytes[]'],\n      [updateType, stalenessTolerance, priceIds, signedOffchainData]\n    );\n  },\n  PRICE_CACHE_LENGTH\n);\n\nfunction makeMulticall(\n  calls: TransactionRequest[],\n  senderAddr: string,\n  multicallAddress: string,\n  multiCallAbi: string[]\n): TransactionRequest {\n  const multicallInterface = new ethers.utils.Interface(multiCallAbi);\n\n  const encodedData = multicallInterface.encodeFunctionData('aggregate3Value', [\n    calls.map((call) => ({\n      target: call.to,\n      callData: call.data,\n      value: call.value || ethers.BigNumber.from(0),\n      requireSuccess: true,\n      allowFailure: false,\n    })),\n  ]);\n\n  let totalValue = ethers.BigNumber.from(0);\n  for (const call of calls) {\n    totalValue = totalValue.add(call.value || ethers.BigNumber.from(0));\n  }\n\n  return {\n    from: senderAddr,\n    to: multicallAddress,\n    data: encodedData,\n    value: totalValue,\n  };\n}\n\n// This should be used for networks that doesn't have a multicall setup as a trusted forwarder\n// TODO remove when all networks have a trusted forwarder\nconst makeCoreProxyMulticall = (\n  calls: TransactionRequest[],\n  senderAddr: string,\n  coreProxyAddress: string,\n  coreProxyAbi: string[]\n) => {\n  const CoreProxyInterface = new ethers.utils.Interface(coreProxyAbi);\n  const encodedData = CoreProxyInterface.encodeFunctionData('multicall', [\n    calls.map((call) => call.data),\n  ]);\n\n  let totalValue = ethers.BigNumber.from(0);\n  for (const call of calls) {\n    totalValue = totalValue.add(call.value || ethers.BigNumber.from(0));\n  }\n\n  return {\n    from: senderAddr,\n    to: coreProxyAddress,\n    data: encodedData,\n    value: totalValue,\n  };\n};\n\nconst ERC7412ErrorSchema = z.union([\n  z.object({\n    name: z.literal('OracleDataRequired'),\n    args: z.tuple([z.string(), z.string()]),\n  }),\n  z.object({\n    name: z.literal('FeeRequired'),\n    args: z.tuple([ZodBigNumber]),\n  }),\n]);\nconst erc7412Interface = new ethers.utils.Interface(ERC7412_ABI);\n\nconst parseError = async (error: any, provider: providers.JsonRpcProvider) => {\n  let errorData = error.data || error.error?.data?.data || error.error?.error?.data;\n\n  if (!errorData) {\n    try {\n      console.log('Error is missing revert data, trying provider.call, instead of estimate gas..');\n      // Some wallets swallows the revert reason when calling estimate gas,try to get the error by using provider.call\n      // provider.call wont actually revert, instead the error data is just returned\n      const lookedUpError = await provider.call(error.transaction);\n      errorData = lookedUpError;\n    } catch (newError: any) {\n      console.log('provider.call(error.transaction) failed, trying to extract error');\n      // I dont think we should end up here.. But it hard to know if some combo of wallets and rpc provider would....\n      errorData = error.data || error.error?.data?.data || error.error?.error?.data;\n      console.log('Error data: ', errorData);\n    }\n  }\n  try {\n    const decodedError = erc7412Interface.parseError(errorData);\n    return ERC7412ErrorSchema.parse(decodedError);\n  } catch (parseError) {\n    console.error(\n      'Error is not a ERC7412 error, re-throwing original error, for better parsing. Parse error reason: ',\n      parseError\n    );\n    // If we cant parse it, throw the original error\n    throw error;\n  }\n};\n\n// simulate w/ wETH contract because it will have eth balance\n// This is useful when we do read/static calls but still need an balance for the price update\n// TODO: this probably need to be network aware, maybe look into a different solution even.\nconst getDefaultFromAddress = (chainName: string) => {\n  switch (chainName) {\n    case 'cannon':\n      return '0x4200000000000000000000000000000000000006'; // TODO, unclear what to put here\n    case 'mainnet':\n      return '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2';\n    case 'goerli':\n      return '0xb4fbf271143f4fbf7b91a5ded31805e42b2208d6';\n    case 'sepolia':\n      return '0x7b79995e5f793a07bc00c21412e50ecae098e7f9';\n    case 'arbitrum':\n      return '0x82af49447d8a07e3bd95bd0d56f35241523fbab1';\n    case 'optimism-mainnet':\n    case 'optimism-goerli':\n    case 'base-goerli':\n    case 'base':\n    case 'base-sepolia':\n      return '0x4200000000000000000000000000000000000006';\n\n    default:\n      throw new Error(`Unsupported chain ${chainName}`);\n  }\n};\n\n/**\n * If a tx requires ERC7412 pattern, wrap your tx with this function.\n */\nexport const withERC7412 = async (\n  network: Network,\n  tx: TransactionRequest | TransactionRequest[],\n  logLabel?: string,\n  abi?: any\n): Promise<TransactionRequestWithGasLimit> => {\n  const initialMulticallLength = Array.isArray(tx) ? tx.length : 1;\n  // eslint-disable-next-line prefer-const\n  let multicallCalls = [tx].flat(); // Use let to communicate that we mutate this array\n\n  if (multicallCalls.some((x) => !x.to)) {\n    throw Error(`Make sure all txs have 'to' field set`);\n  }\n  if (multicallCalls.some((x) => !x.from)) {\n    throw Error(`Make sure all txs have 'from' field set`);\n  }\n\n  const from = multicallCalls[0].from as string;\n\n  // Make sure we're always using JSONRpcProvider, the web3 provider coming from the signer might have bugs causing errors to miss revert data\n  const jsonRpcProvider = new ethers.providers.JsonRpcProvider(network?.rpcUrl());\n\n  // If from is set to the default address (wETH) we can assume it's a read rather than a write\n  const isRead = from === getDefaultFromAddress(network.name);\n  const networkHaveERC7412 = deploymentsWithERC7412.includes(`${network.id}-${network.preset}`);\n  const useCoreProxy = !networkHaveERC7412 && !isRead;\n\n  const { address: multicallAddress, abi: multiCallAbi } = useCoreProxy\n    ? await importCoreProxy(network.id, network.preset)\n    : await importMulticall3(network.id, network.preset);\n\n  while (true) {\n    try {\n      if (multicallCalls.length == 1) {\n        const initialCall = multicallCalls[0];\n        // The normal flow would go in here, then if the estimate call fail, we catch the error and handle ERC7412\n        const gasLimit = await jsonRpcProvider.estimateGas(initialCall);\n        console.log(`Estimated gas succeeded, with no price updates`);\n        return { ...initialCall, gasLimit };\n      }\n      // If we're here it means we now added a tx to do .\n      // Some networks doesn't have ERC7412 and a trusted forwarder setup, on write calls we still need to use the coreproxy for those\n      const multicallTxn = useCoreProxy\n        ? makeCoreProxyMulticall(multicallCalls, from, multicallAddress, multiCallAbi)\n        : makeMulticall(multicallCalls, from, multicallAddress, multiCallAbi);\n\n      const gasLimit = await jsonRpcProvider.estimateGas(multicallTxn);\n\n      console.log(\n        `[${logLabel}] Estimated gas succeeded, with ${\n          multicallCalls.length - initialMulticallLength\n        } price updates`\n      );\n\n      return { ...multicallTxn, gasLimit };\n    } catch (error: any) {\n      const parsedError = await parseError(error, jsonRpcProvider);\n\n      if (parsedError.name === 'OracleDataRequired') {\n        const [oracleAddress, oracleQuery] = parsedError.args;\n        const ignoreCache = !isRead;\n        const signedRequiredData = await fetchOffchainData(\n          oracleQuery,\n          network.isTestnet,\n          logLabel || '',\n          ignoreCache ? 'no-cache' : undefined\n        );\n        const newTransactionRequest = {\n          from,\n          to: oracleAddress,\n          data: new ethers.utils.Interface(ERC7412_ABI).encodeFunctionData('fulfillOracleQuery', [\n            signedRequiredData,\n          ]),\n          // If from is set to the default address we can add a value directly, before getting FeeRequired revert.\n          // This will be a static call so no money would be withdrawn either way.\n          value: isRead ? ethers.utils.parseEther('0.1') : BigNumber.from(0),\n        };\n\n        // If we get OracleDataRequired, add an extra transaction request just before the last element\n        multicallCalls.splice(\n          multicallCalls.length - initialMulticallLength,\n          0,\n          newTransactionRequest\n        );\n      } else if (parsedError.name === 'FeeRequired') {\n        const requiredFee = parsedError.args[0];\n\n        const txToUpdate = multicallCalls.find(({ value }) => requiredFee.gt(value || 0)); // The first tx with value less than the required fee, is the one we need to update\n        if (txToUpdate === undefined) {\n          throw Error(\n            `Didn't find any tx with a value less than the required fee ${multicallCalls}`\n          );\n        }\n        txToUpdate.value = requiredFee;\n      } else {\n        const parsedError = parseTxError(error);\n        if (parsedError && abi) {\n          try {\n            const errorResult = viem.decodeErrorResult({\n              abi,\n              data: parsedError,\n            });\n            console.log('error: ', errorResult.errorName, errorResult.args);\n          } catch (_error) {}\n        }\n        throw error;\n      }\n    }\n  }\n};\n\n/**\n * This can be used to do reads plus decoding. The return type will be whatever the type of the decode function is. And the arguments passed will have the multicall decoded and price updates removed\n */\nexport async function erc7412Call<T>(\n  network: Network,\n  provider: ethers.providers.Provider,\n  txRequests: TransactionRequest | TransactionRequest[],\n  decode: (x: string[] | string) => T,\n  logLabel?: string\n) {\n  const { address: multicallAddress, abi: multicallAbi } = await importMulticall3(\n    network.id,\n    network.preset\n  );\n\n  const reqs = [txRequests].flat();\n  for (const txRequest of reqs) {\n    txRequest.from = getDefaultFromAddress(network.name); // Reads can always use WETH\n  }\n  const newCall = await withERC7412(network, reqs, logLabel);\n\n  const res = await provider.call(newCall);\n\n  if (newCall.to === multicallAddress) {\n    // If this was a multicall, decode and remove price updates.\n    const decodedMultiCall: { returnData: string }[] = new ethers.utils.Interface(\n      multicallAbi\n    ).decodeFunctionResult('aggregate3Value', res)[0];\n\n    // Remove the price updates\n    const responseWithoutPriceUpdates = decodedMultiCall.filter(\n      ({ returnData }) => returnData !== '0x' // price updates have 0x as return data\n    );\n    return decode(responseWithoutPriceUpdates.map(({ returnData }) => returnData));\n  }\n\n  return decode(res);\n}\n","import { BigNumber } from 'ethers';\nimport { z } from 'zod';\nimport { wei } from '@synthetixio/wei';\n\nexport const ZodBigNumber = z.custom<BigNumber>((val) => BigNumber.isBigNumber(val));\n\nexport const SmallIntSchema = ZodBigNumber.transform((x) => wei(x, 0).toNumber());\nexport const WeiSchema = ZodBigNumber.transform((x) => wei(x));\n","import {\n  ComponentMultiStyleConfig,\n  ComponentStyleConfig,\n  defineStyle,\n  extendTheme,\n} from '@chakra-ui/react';\nimport { mode } from '@chakra-ui/theme-tools';\n\nconst gradients = {\n  'green-cyan': {\n    500: 'linear(to-tr, green.500, cyan.500)',\n    600: 'linear(to-tr, green.600, cyan.600)',\n    700: 'linear(to-tr, green.700, cyan.800)',\n  },\n\n  grey: {\n    900: 'linear(to-tr, grey.900, blackAlpha.900)',\n  },\n  dark: {\n    500: 'linear(to-tr, #171923, #141414)',\n  },\n\n  'pink-purple': {\n    500: 'linear(to-tr, pink.500, purple.500)',\n    600: 'linear(to-tr, pink.600, purple.600)',\n    700: 'linear(to-tr, pink.700, purple.800)',\n  },\n\n  'pink-blue': {\n    500: 'linear(to-tr, pink.500, blue.500)',\n    600: 'linear(to-tr, pink.600, blue.600)',\n    700: 'linear(to-tr, pink.700, blue.800)',\n  },\n  'pink-cyan': {\n    500: 'linear(to-tr, pink.500, cyan.500)',\n    600: 'linear(to-tr, pink.600, cyan.600)',\n    700: 'linear(to-tr, pink.700, cyan.800)',\n  },\n\n  orange: {\n    500: 'linear(to-tr, orange.500, orange.300)',\n    600: 'linear(to-tr, orange.600, orange.400)',\n    700: 'linear(to-tr, orange.700, orange.500)',\n  },\n};\n\n// adapted from https://github.com/chakra-ui/chakra-ui/blob/main/packages/components/theme/src/components/button.ts#L90\nconst variantSolid = defineStyle((props) => {\n  const { colorScheme: c } = props;\n\n  if (c === 'gray') {\n    const bg = mode(`gray.100`, `whiteAlpha.200`)(props);\n\n    return {\n      color: mode(`black`, `whiteAlpha.900`)(props),\n      bg,\n      _hover: {\n        bg: mode(`gray.200`, `whiteAlpha.300`)(props),\n        _disabled: {\n          bg,\n        },\n      },\n      _active: { bg: mode(`gray.300`, `whiteAlpha.400`)(props) },\n    };\n  }\n\n  if (c === 'cyan') {\n    return {\n      bgGradient: gradients['green-cyan'][500],\n      color: 'black',\n      _hover: {\n        bgGradient: gradients['green-cyan'][600],\n        _disabled: {\n          background: gradients['green-cyan'][500],\n        },\n      },\n      _active: {\n        bgGradient: gradients['green-cyan'][700],\n      },\n    };\n  }\n\n  const bg = `${c}.500`;\n  const color = 'white';\n  const hoverBg = `${c}.600`;\n  const activeBg = `${c}.700`;\n  const background = mode(bg, `${c}.600`)(props);\n\n  return {\n    bg: background,\n    color: mode(color, `white`)(props),\n    _hover: {\n      bg: mode(hoverBg, `${c}.500`)(props),\n      _disabled: {\n        bg: background,\n      },\n    },\n    _active: { bg: mode(activeBg, `${c}.400`)(props) },\n  };\n});\n\nconst Button: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n  },\n  variants: {\n    solid: variantSolid,\n    outline: (props) => {\n      if (props.colorScheme === 'gray') {\n        return {\n          color: 'whiteAlpha.800',\n          borderColor: 'gray.900',\n          _hover: { bg: 'rgba(255, 255, 255, 0.12)' }, // white 0.12 opacity\n          _active: { bg: 'rgba(255, 255, 255, 0.24)' }, //white 0.24 opacity\n        };\n      }\n      return {\n        color: 'cyan.500', // needed for storybook for some reason\n        border: '1px solid', // needed for storybook for some reason\n        borderColor: 'cyan.500', // needed for storybook for some reason\n        _hover: { bg: 'rgb(0, 209, 255, 0.12)' }, // cyan.500 0.12 opacity\n        _active: { bg: 'rgb(0, 209, 255, 0.24)' }, // cyan.500 0.24 opacity\n      };\n    },\n    ghost: {\n      color: 'cyan.500', // needed for storybook for some reason\n      _hover: { bg: 'rgb(0, 209, 255, 0.12)' }, // cyan.500 0.12 opacity\n      _active: { bg: 'rgb(0, 209, 255, 0.24)' }, // cyan.500 0.24 opacity\n    },\n  },\n};\n\nconst Menu: ComponentMultiStyleConfig = {\n  parts: ['button', 'list', 'item'],\n  baseStyle: {\n    button: {\n      color: 'white',\n      span: {\n        display: 'flex',\n        alignItems: 'center',\n        px: 2,\n      },\n      height: '100%',\n    },\n    list: {\n      mt: 2,\n      bgColor: 'navy.900',\n      padding: 0,\n      border: 'none',\n      borderRadius: 'md',\n      py: 0,\n    },\n    item: {\n      bgColor: 'blackAlpha.300',\n      color: 'whiteAlpha.900',\n      p: 3,\n      _hover: {\n        bgColor: 'whiteAlpha.400',\n      },\n      _active: {\n        bgColor: 'navy.900',\n      },\n      _first: {\n        borderTopLeftRadius: 'md',\n        borderTopRightRadius: 'md',\n      },\n      _last: {\n        borderBottomLeftRadius: 'md',\n        borderBottomRightRadius: 'md',\n      },\n      _focus: {\n        bgColor: 'blackAlpha.400',\n      },\n    },\n  },\n};\n\nconst Input: ComponentStyleConfig = {\n  defaultProps: {\n    focusBorderColor: 'cyan.500',\n    errorBorderColor: 'red.500',\n  },\n};\n\nconst Select: ComponentStyleConfig = {\n  defaultProps: {\n    focusBorderColor: 'cyan.500',\n    iconColor: 'cyan.500',\n    errorBorderColor: 'red.500',\n  },\n};\n\nconst NumberInput: ComponentStyleConfig = {\n  defaultProps: {\n    focusBorderColor: 'cyan.500',\n    errorBorderColor: 'red.500',\n  },\n};\n\nconst Textarea: ComponentStyleConfig = {\n  defaultProps: {\n    focusBorderColor: 'cyan.500',\n    colorScheme: 'cyan',\n    errorBorderColor: 'red.500',\n  },\n};\n\nconst Alert: ComponentStyleConfig = {\n  defaultProps: {\n    variant: 'left-accent',\n  },\n  variants: {\n    'left-accent': (props) => {\n      return {\n        container: {\n          bg: `${props.colorScheme}.900`,\n          borderInlineStartColor: `${props.colorScheme}.500`,\n        },\n      };\n    },\n    solid: (props) => {\n      return {\n        icon: { color: 'white' },\n        container: { bg: `${props.colorScheme}.500`, color: 'white' },\n      };\n    },\n  },\n};\n\nconst Skeleton: ComponentStyleConfig = {\n  defaultProps: {\n    startColor: 'gray.900',\n    endColor: 'gray.800',\n  },\n};\n\nconst Checkbox: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n  },\n  baseStyle: {\n    control: {\n      borderColor: 'cyan.500',\n      _checked: {\n        bg: 'cyan.500',\n        borderColor: 'cyan.500',\n        _hover: {\n          bg: 'cyan.600',\n          borderColor: 'cyan.600',\n        },\n      },\n      _invalid: {\n        borderColor: 'red.500',\n      },\n      _disabled: {\n        _hover: {\n          borderColor: 'transparent',\n        },\n      },\n      _hover: {\n        borderColor: 'cyan.600',\n      },\n    },\n  },\n};\n\nconst Radio: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n  },\n  baseStyle: {\n    control: {\n      borderColor: 'cyan.500',\n      _checked: {\n        bg: 'cyan.500',\n        borderColor: 'cyan.500',\n        _hover: {\n          bg: 'cyan.600',\n          borderColor: 'cyan.600',\n        },\n      },\n      _invalid: {\n        borderColor: 'red.500',\n      },\n      _disabled: {\n        _hover: {\n          borderColor: 'transparent',\n        },\n      },\n      _hover: {\n        borderColor: 'cyan.600',\n      },\n    },\n  },\n};\n\nconst Badge: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n  },\n  variants: {\n    subtle: (props) => ({\n      color: `${props.colorScheme}.500`,\n    }),\n    solid: (props) => ({\n      background: `${props.colorScheme}.500`,\n      color: 'black',\n    }),\n    outline: (props) => ({\n      borderColor: `${props.colorScheme}.500`,\n      color: `${props.colorScheme}.500`,\n    }),\n    percent: {\n      color: 'cyan.500',\n      bg: 'whiteAlpha.300',\n      fontFamily: 'heading',\n      py: 1,\n      px: 2,\n      borderRadius: 'base',\n      borderWidth: '1px',\n      borderColor: 'transparent',\n      width: '100%',\n      textAlign: 'center',\n      userSelect: 'none',\n    },\n  },\n};\n\nconst Tag: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n    variant: 'solid',\n  },\n  variants: {\n    solid: (props) => ({\n      container: {\n        background: `${props.colorScheme}.500`,\n        color: 'black',\n      },\n    }),\n  },\n};\n\nconst Accordion: ComponentStyleConfig = {\n  baseStyle: {\n    container: {\n      borderColor: 'gray.900',\n      borderWidth: '1px',\n      borderRadius: 'base',\n    },\n  },\n};\n\nconst Progress: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n    variant: 'solid',\n    borderRadius: 'full',\n  },\n  variants: {\n    solid: (props) => ({\n      filledTrack: {\n        background: `${props.colorScheme}.500`,\n        borderRadius: 'full',\n      },\n      track: {\n        borderRadius: 'full',\n      },\n    }),\n  },\n};\n\nconst Tabs: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n  },\n  variants: {\n    'solid-rounded': (props) => ({\n      tab: {\n        _selected: {\n          background: `${props.colorScheme}.500`,\n          color: 'black',\n        },\n        color: `${props.colorScheme}.500`,\n      },\n    }),\n    'soft-rounded': {\n      tab: {\n        _selected: {\n          background: 'whiteAlpha.300',\n          color: 'cyan.500',\n        },\n        color: 'cyan.500',\n      },\n    },\n  },\n};\n\nconst Tooltip: ComponentStyleConfig = {\n  baseStyle: {\n    textAlign: 'center',\n    bg: 'gray.900',\n    color: 'white.500',\n    '--popper-arrow-bg': 'var(--chakra-colors-gray-900)',\n  },\n};\n\nconst Switch: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n  },\n  baseStyle: {\n    track: {\n      _checked: {\n        background: 'cyan.500',\n      },\n    },\n  },\n};\n\nconst Spinner: ComponentStyleConfig = {\n  baseStyle: {\n    color: 'cyan.500',\n  },\n};\n\nexport const theme = extendTheme({\n  useSystemColorMode: false,\n  initialColorMode: 'dark',\n  colors: {\n    gray: {\n      50: '#F6F6F6',\n      100: '#F1F1F1',\n      200: '#DDDDDF',\n      300: '#C3C3C9',\n      400: '#AAAAB2',\n      500: '#91919B',\n      600: '#7A7A85',\n      700: '#63636E',\n      800: '#4D4D57',\n      900: '#303037',\n    },\n    red: {\n      50: '#FFEDEF',\n      100: '#FFC4CB',\n      200: '#FF9BA7',\n      300: '#FF7384',\n      400: '#FF4A60',\n      500: '#E4364B',\n      600: '#C53030',\n      700: '#9B2C2C',\n      800: '#822727',\n      900: '#63171B',\n    },\n    orange: {\n      50: '#FFF3EB',\n      100: '#FFD8BE',\n      200: '#FFBE92',\n      300: '#FFA365',\n      400: '#FF9A54',\n      500: '#FC8738',\n      600: '#DC732D',\n      700: '#96420A',\n      800: '#743002',\n      900: '#522100',\n    },\n    yellow: {\n      50: '#FFFBEF',\n      100: '#FFF2CA',\n      200: '#FFF5A8',\n      300: '#FFF889',\n      400: '#FFF458',\n      500: '#FAE527',\n      600: '#EAD516',\n      700: '#B5932B',\n      800: '#776017',\n      900: '#55430D',\n    },\n    green: {\n      50: '#EDFFF9',\n      100: '#C3FFEC',\n      200: '#9AE6B4',\n      300: '#72FFD3',\n      400: '#47FAC2',\n      500: '#34EDB3',\n      600: '#2BD39F',\n      700: '#11946B',\n      800: '#077250',\n      900: '#015037',\n    },\n    blue: {\n      50: '#EDF6FF',\n      100: '#C4E2FF',\n      200: '#9CCFFF',\n      300: '#73BBFF',\n      400: '#479EF0',\n      500: '#3182CE',\n      600: '#1F68AC',\n      700: '#11508A',\n      800: '#073968',\n      900: '#012546',\n    },\n    cyan: {\n      50: '#E5FAFF',\n      100: '#B7F2FF',\n      200: '#8AEAFF',\n      300: '#5CE1FF',\n      400: '#2ED9FF',\n      500: '#00D1FF',\n      600: '#00B0D6',\n      700: '#008EAD',\n      800: '#006D85',\n      900: '#004B5C',\n    },\n    purple: {\n      50: '#F0EEFF',\n      100: '#CFC9FF',\n      200: '#AEA4FF',\n      300: '#8D7EFF',\n      400: '#6B59FF',\n      500: '#5744EA',\n      600: '#402FC8',\n      700: '#2D1EA6',\n      800: '#1D1084',\n      900: '#10104E',\n    },\n    pink: {\n      50: '#FDE8FF',\n      100: '#F9B6FF',\n      200: '#F583FF',\n      300: '#F471FF',\n      400: '#EB46FF',\n      500: '#EE2EFF',\n      600: '#BE02CE',\n      700: '#8D0099',\n      800: '#6E0077',\n      900: '#4E0055',\n    },\n    navy: {\n      50: '#522ED1',\n      100: '#401FB7',\n      200: '#3719A6',\n      300: '#2F1298',\n      400: '#1F0777',\n      500: '#150942',\n      600: '#0E052F',\n      700: '#0B0B22',\n      800: '#0A0A25',\n      900: '#06061B',\n    },\n    error: '#FF4A60', // red.400,\n    success: '#34EDB3', //green.500\n    warning: '#FC8738', // orange.500\n  },\n  shadows: {\n    outline: '0 0 0 3px rgba(0, 209, 255, 1)',\n  },\n  fonts: {\n    heading:\n      'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n    body: 'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n    display:\n      '\"GT America Condensed\", Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n    mono: '\"GT America Mono\", SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace',\n  },\n  components: {\n    Popover: {\n      variants: {\n        responsive: {\n          popper: {\n            maxWidth: 'unset',\n            width: 'unset',\n          },\n        },\n      },\n    },\n    Button,\n    Input,\n    Select,\n    NumberInput,\n    Alert,\n    Textarea,\n    Skeleton,\n    Checkbox,\n    Radio,\n    Badge,\n    Tag,\n    Accordion,\n    Progress,\n    Tabs,\n    Tooltip,\n    Switch,\n    Spinner,\n    Menu,\n  },\n  // To be imported and used with the bgGradient prop\n  // See: https://chakra-ui.com/docs/styled-system/gradient#background-gradient-api\n  gradients,\n  textStyles: {\n    'heading-4xl': {\n      fontSize: { base: '60px', lg: '72px' },\n      fontFamily: 'heading',\n      lineHeight: { base: '57.6px', lg: '72px' },\n      fontWeight: 700,\n    },\n    'heading-3xl': {\n      fontSize: { base: '48px', md: '60px' },\n      fontFamily: 'heading',\n      lineHeight: { base: '57.6px', md: '72px', lg: '60px' },\n      fontWeight: 700,\n    },\n    'heading-2xl': {\n      fontSize: { base: '36px', md: '48px' },\n      fontFamily: 'heading',\n      lineHeight: { base: '120%' },\n      fontWeight: 700,\n    },\n    'heading-xl': {\n      fontSize: { base: '30px', lg: '36px' },\n      fontFamily: 'heading',\n      lineHeight: { base: '36px', lg: '120%' },\n      fontWeight: 700,\n    },\n    'heading-lg': {\n      fontSize: { base: '24px', lg: '30px' },\n      fontFamily: 'heading',\n      lineHeight: { base: '28.8px', lg: '36px' },\n      fontWeight: 700,\n    },\n    'heading-md': {\n      fontSize: { base: '20px', lg: '24px' },\n      fontFamily: 'heading',\n      lineHeight: '24px',\n      fontWeight: 700,\n    },\n    'heading-sm': {\n      fontSize: '16px',\n      fontFamily: 'heading',\n      lineHeight: '19.2px',\n      fontWeight: 700,\n    },\n    'heading-xs': {\n      fontSize: '14px',\n      fontFamily: 'heading',\n      lineHeight: '16.8px',\n      fontWeight: 700,\n    },\n  },\n  sizes: {\n    px: '1px',\n    0.5: '0.125rem',\n    1: '0.25rem',\n    1.5: '0.375rem',\n    2: '0.5rem',\n    2.5: '0.625rem',\n    3: '0.75rem',\n    3.5: '0.875rem',\n    4: '1rem',\n    5: '1.25rem',\n    6: '1.5rem',\n    7: '1.75rem',\n    8: '2rem',\n    9: '2.25rem',\n    10: '2.5rem',\n    12: '3rem',\n    14: '3.5rem',\n    16: '4rem',\n    20: '5rem',\n    24: '6rem',\n    28: '7rem',\n    32: '8rem',\n    36: '9rem',\n    40: '10rem',\n    44: '11rem',\n    48: '12rem',\n    52: '13rem',\n    56: '14rem',\n    60: '15rem',\n    64: '16rem',\n    72: '18rem',\n    80: '20rem',\n    96: '24rem',\n    max: 'max-content',\n    min: 'min-content',\n    full: '100%',\n    '3xs': '14rem',\n    '2xs': '16rem',\n    xs: '20rem',\n    sm: '24rem',\n    md: '28rem',\n    lg: '32rem',\n    xl: '36rem',\n    '2xl': '42rem',\n    '3xl': '48rem',\n    '4xl': '56rem',\n    '5xl': '64rem',\n    '6xl': '72rem',\n    '7xl': '80rem',\n    '8xl': '90rem',\n    container: {\n      sm: '640px',\n      md: '768px',\n      lg: '1024px',\n      xl: '1280px',\n    },\n  },\n  styles: {\n    global: {\n      body: {\n        bg: 'navy.900',\n      },\n    },\n  },\n});\n","import { Global } from '@emotion/react';\n\nexport const Fonts = () => (\n  <Global\n    styles={`\n      @import url('https://fonts.googleapis.com/css2?family=Inter:wght@200..700&display=swap');\n      @font-face {\n        font-family: 'GT America Condensed';\n        font-style: normal;\n        font-display: swap;\n        font-weight: 700;\n        src: local('GT America Condensed'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Bold.woff2') format('woff2'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Bold.woff') format('woff'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Bold.otf') format('opentype');\n      }\n      @font-face {\n        font-family: 'GT America Condensed';\n        font-style: italic;\n        font-display: swap;\n        font-weight: 700;\n        src: local('GT America Condensed'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Bold%20Italic.woff2')\n            format('woff2'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Bold%20Italic.woff')\n            format('woff'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Bold%20Italic.otf')\n            format('opentype');\n      }\n      @font-face {\n        font-family: 'GT America Condensed';\n        font-style: normal;\n        font-display: swap;\n        font-weight: 100;\n        src: local('GT America Condensed'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Thin.woff2') format('woff2'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Thin.woff') format('woff'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Thin.otf') format('opentype');\n      }\n      @font-face {\n        font-family: 'GT America Condensed';\n        font-style: italic;\n        font-display: swap;\n        font-weight: 100;\n        src: local('GT America Condensed'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Thin%20Italic.woff2')\n            format('woff2'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Thin%20Italic.woff')\n            format('woff'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Thin%20Italic.otf')\n            format('opentype');\n      }\n      @font-face {\n        font-family: 'GT America Mono';\n        font-style: normal;\n        font-display: swap;\n        font-weight: 700;\n        src: local('GT America Mono'),\n          url('https://fonts.synthetix.io/GT%20America%20Mono%20Bold.woff2') format('woff2'),\n          url('https://fonts.synthetix.io/GT%20America%20Mono%20Bold.woff') format('woff'),\n          url('https://fonts.synthetix.io/GT%20America%20Mono%20Bold.otf') format('opentype');\n      }\n      @font-face {\n        font-family: 'Lustra Text';\n        font-style: normal;\n        font-display: swap;\n        font-weight: 400;\n        src: local('Lustra Text'),\n          url('https://fonts.synthetix.io/Lustra%20Text%20Thin.otf') format('opentype');\n      }\n    `}\n  />\n);\n","import { useState } from 'react';\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  Text,\n  Button,\n  Box,\n  Link,\n  ListItem,\n  UnorderedList,\n} from '@chakra-ui/react';\nimport { Link as ReactRouterLink } from 'react-router-dom';\nimport { theme } from '@synthetixio/v3-theme';\nimport { SESSION_STORAGE_KEYS } from '@snx-v3/constants';\n\ninterface TermsModalProps {\n  defaultOpen: boolean;\n}\n\nexport const TermsModal = ({ defaultOpen = true }: TermsModalProps) => {\n  const [isOpen, setOpen] = useState(defaultOpen);\n  const [enabled, setEnabled] = useState(false);\n\n  const onSubmit = () => {\n    if (enabled) {\n      sessionStorage.setItem(SESSION_STORAGE_KEYS.TERMS_CONDITIONS_ACCEPTED, JSON.stringify(true));\n      setOpen(false);\n    }\n  };\n\n  return (\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    <Modal isOpen={isOpen} onClose={() => {}}>\n      <ModalOverlay />\n      <ModalContent\n        bgGradient={theme.gradients['dark'][500]}\n        pt=\"10\"\n        pb=\"3\"\n        borderWidth=\"1px\"\n        borderColor=\"gray.900\"\n        data-testid=\"transaction modal\"\n      >\n        <ModalHeader py={0} textAlign=\"center\">\n          Synthetix Terms of Service\n        </ModalHeader>\n        <ModalBody fontSize=\"xs\" color=\"gray.600\">\n          <Text fontSize=\"sm\">\n            By clicking “I Agree” below, you agree to be bound by the terms of this Agreement. As\n            such, you fully understand that:\n          </Text>\n          <Box\n            onScroll={(e) => {\n              const div = e.currentTarget;\n              const scrollTopWithTolerance = div.scrollTop + 10;\n              if (scrollTopWithTolerance >= div.scrollHeight - div.offsetHeight) {\n                setEnabled(true);\n              } else {\n                setEnabled(false);\n              }\n            }}\n            as=\"div\"\n            my={2}\n            py={3}\n            height=\"350px\"\n            overflow=\"auto\"\n            overflowX=\"scroll\"\n            sx={{\n              '::-webkit-scrollbar': {\n                display: 'block',\n              },\n              '::-webkit-scrollbar-track': {\n                backgroundColor: 'transparent',\n              },\n              '::-webkit-scrollbar-track-piece': {\n                backgroundColor: 'transparent',\n              },\n              '::-webkit-scrollbar-corner': {\n                backgroundColor: 'transparent',\n              },\n            }}\n          >\n            <UnorderedList>\n              <Text fontSize=\"14px\">\n                <ListItem>\n                  <Link\n                    href=\"https://synthetix.io/\"\n                    target=\"_blank\"\n                    color=\"cyan.500\"\n                    _focusVisible={{ outline: 'none' }}\n                  >\n                    Synthetix{' '}\n                  </Link>\n                  is a blockchain-based decentralized finance project. You are participating at your\n                  own risk.\n                </ListItem>\n                <ListItem mt={2}>\n                  Synthetix is offered for use “as is” and without any guarantees regarding\n                  security. The protocol is made up of immutable code and can be accessed through a\n                  variety of user interfaces.\n                </ListItem>\n                <ListItem mt={2}>\n                  No central entity operates the Synthetix protocol. Decisions related to the\n                  protocol are governed by a dispersed group of participants who collectively govern\n                  and maintain the protocol.\n                </ListItem>\n                <ListItem mt={2}>\n                  Synthetix DAO does not unilaterally offer, maintain, operate, administer, or\n                  control any trading interfaces. The only user interfaces maintained by Synthetix\n                  DAO are the governance and liquidity interfaces herein.\n                </ListItem>\n                <ListItem mt={2}>\n                  You can participate in the governance process by staking SNX tokens in accordance\n                  with the rules and parameters summarized{' '}\n                  <Link\n                    href=\"https://governance.synthetix.io/\"\n                    target=\"_blank\"\n                    color=\"cyan.500\"\n                    _focusVisible={{ outline: 'none' }}\n                  >\n                    here\n                  </Link>\n                  , and/or joining the{' '}\n                  <Link\n                    color=\"cyan.500\"\n                    target=\"_blank\"\n                    href=\"https://discord.com/invite/AEdUHzt\"\n                    _focusVisible={{ outline: 'none' }}\n                  >\n                    Synthetix Discord\n                  </Link>{' '}\n                  and contributing to the conversation.\n                </ListItem>\n                <ListItem mt={2}>\n                  The rules and parameters associated with the Synthetix protocol and Synthetix DAO\n                  governance are subject to change at any time.\n                </ListItem>\n                <ListItem mt={2}>\n                  Your use of Synthetix is conditioned upon your acceptance to be bound by the\n                  Synthetix Term of Use, which can be found{' '}\n                  <Link\n                    as={ReactRouterLink}\n                    to=\"/terms\"\n                    target=\"_blank\"\n                    color=\"cyan.500\"\n                    _focusVisible={{ outline: 'none' }}\n                  >\n                    here\n                  </Link>\n                  .\n                </ListItem>\n                <ListItem mt={2}>\n                  The laws that apply to your use of Synthetix may vary based upon the jurisdiction\n                  in which you are located. We strongly encourage you to speak with legal counsel in\n                  your jurisdiction if you have any questions regarding your use of Synthetix.\n                </ListItem>\n                <ListItem mt={2}>\n                  By entering into this agreement, you are not agreeing to enter into a partnership.\n                  You understand that Synthetix is a decentralized protocol provided on an “as is”\n                  basis.\n                </ListItem>\n                <ListItem mt={2}>\n                  You hereby release all present and future claims against Synthetix DAO related to\n                  your use of the protocol, the SNX token, SNX DAO governance, and any other facet\n                  of the protocol.\n                </ListItem>\n                <ListItem mt={2}>\n                  You agree to indemnify and hold harmless SNX DAO and its affiliates for any costs\n                  arising out of or relating to your use of the Synthetix protocol.\n                </ListItem>\n                <ListItem mt={2}>\n                  You are not accessing the protocol from Burma (Myanmar), Cuba, Iran, Sudan, Syria,\n                  the Western Balkans, Belarus, Côte d’Ivoire, Democratic Republic of the Congo,\n                  Iraq, Lebanon, Liberia, Libya, North Korea, Russia, certain sanctioned areas of\n                  Ukraine, Somalia, Venezuela, Yemen, or Zimbabwe (collectively, “Prohibited\n                  Jurisdictions”), or any other jurisdiction listed as a Specially Designated\n                  National by the United States Office of Foreign Asset Control (“OFAC”).\n                </ListItem>\n              </Text>\n            </UnorderedList>\n          </Box>\n        </ModalBody>\n        <Button\n          variant=\"outline\"\n          _focusVisible={{ outline: 'none' }}\n          my={4}\n          mx={6}\n          onClick={onSubmit}\n          isDisabled={!enabled}\n        >\n          I agree\n        </Button>\n      </ModalContent>\n    </Modal>\n  );\n};\n","import { Box } from '@chakra-ui/react';\n\nexport default function Footer() {\n  return (\n    <Box textAlign=\"center\" fontSize=\"xs\" p=\"1\" background=\"whiteAlpha.200\" mt=\"6\">\n      This is an experimental prototype for Synthetix V3. Provide feedback in{' '}\n      <a rel=\"noreferrer\" target=\"_blank\" href=\"https://discord.gg/ngpjqNWW\">\n        <u>#synthetix-v3</u>\n      </a>{' '}\n      on Discord. View on{' '}\n      <a rel=\"noreferrer\" target=\"_blank\" href=\"https://github.com/Synthetixio/synthetix-v3\">\n        <u>GitHub</u>\n      </a>\n      .\n    </Box>\n  );\n}\n","import { NETWORKS, appMetadata } from '@snx-v3/useBlockchain';\nimport injectedModule, { ProviderLabel } from '@web3-onboard/injected-wallets';\nimport trezorModule from '@web3-onboard/trezor';\nimport ledgerModule from '@web3-onboard/ledger';\nimport walletConnectModule from '@web3-onboard/walletconnect';\n// import gnosisModule from '@web3-onboard/gnosis';\nimport coinbaseModule from '@web3-onboard/coinbase';\nimport { init } from '@web3-onboard/react';\n\n// LP App Supported Networks\n// MAINNET, SEPOLIA, BASE, BASE SEPOLIA,\nconst supportedNetworks = [1, 11155111, 8453, 84532];\n\n// Filter networks to only supported ones\nexport const networks = NETWORKS.filter((n) => supportedNetworks.includes(n.id)).map((n) => ({\n  id: n.id,\n  token: n.token,\n  label: n.label,\n  rpcUrl: n.rpcUrl(),\n}));\n\nexport const onboard = init({\n  wallets: [\n    injectedModule({ displayUnavailable: [ProviderLabel.MetaMask, ProviderLabel.Trust] }),\n    trezorModule({\n      appUrl: 'https://governance.synthetix.io',\n      email: 'info@synthetix.io',\n    }),\n    ledgerModule({\n      projectId: 'a4aa25aa9a6ed6fd4c3b11c0cedc4b7c',\n      walletConnectVersion: 2,\n    }),\n    walletConnectModule({\n      version: 2,\n      projectId: 'a4aa25aa9a6ed6fd4c3b11c0cedc4b7c',\n    }),\n    // gnosisModule(),\n    coinbaseModule(),\n  ],\n  chains: [...networks],\n  appMetadata: {\n    ...appMetadata,\n    name: 'Synthetix Governance',\n  },\n  accountCenter: {\n    desktop: {\n      enabled: false,\n    },\n    mobile: {\n      enabled: false,\n    },\n  },\n  notify: {\n    enabled: false,\n  },\n});\n","import { useState } from 'react';\n\nexport const set = (key: string, value: any) => {\n  if (typeof window !== 'undefined') {\n    window.localStorage.setItem(key, JSON.stringify(value));\n  }\n};\n\nexport function get<T>(key: string): T | null {\n  if (typeof window !== 'undefined') {\n    const item = window.localStorage.getItem(key);\n    try {\n      if (item != null) {\n        return JSON.parse(item);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  return null;\n}\n\nexport function useLocalStorage<T>(key: string, initialValue: T) {\n  const [storedValue, setStoredValue] = useState<T>(() => {\n    const item = get<T>(key);\n    return item != null ? item : initialValue;\n  });\n\n  const setValue = (value: T) => {\n    const valueToStore = value instanceof Function ? value(storedValue) : value;\n    setStoredValue(valueToStore);\n    set(key, valueToStore);\n  };\n\n  return [storedValue, setValue] as const;\n}\n","export const LOCAL_STORAGE_KEYS = {\n  SHOW_TESTNETS: 'SHOW_TESTNETS',\n};\n","import { useEffect } from 'react';\nimport {\n  Button,\n  Flex,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  MenuOptionGroup,\n  Switch,\n  Text,\n} from '@chakra-ui/react';\nimport { ChevronDown, ChevronUp, WalletIcon } from '@snx-v3/icons';\nimport { NetworkIcon, useNetwork, useWallet } from '@snx-v3/useBlockchain';\nimport { prettyString } from '@snx-v3/format';\n\nimport { networks } from '../../utils/onboard';\nimport { useLocalStorage } from '../../hooks';\nimport { LOCAL_STORAGE_KEYS } from '../../utils/constants';\n\nexport function NetworkController() {\n  const { activeWallet, walletsInfo, connect, disconnect } = useWallet();\n  const { network: activeNetwork, setNetwork } = useNetwork();\n\n  const [showTestnets, setShowTestnets] = useLocalStorage(LOCAL_STORAGE_KEYS.SHOW_TESTNETS, false);\n\n  useEffect(() => {\n    // Check if wallet preference is stored in local storage\n    if (!walletsInfo) {\n      const defaultWallet = localStorage.getItem('connectedWallets');\n\n      if (defaultWallet) {\n        connect({\n          autoSelect: { disableModals: true, label: JSON.parse(defaultWallet) },\n        });\n      }\n    }\n\n    if (walletsInfo) {\n      // store in local storage\n      localStorage.setItem('connectedWallets', JSON.stringify(walletsInfo.label));\n    }\n  }, [walletsInfo, connect]);\n\n  const onDisconnect = () => {\n    if (walletsInfo) {\n      disconnect(walletsInfo);\n      localStorage.removeItem('connectedWallets');\n    }\n  };\n\n  return (\n    <Flex>\n      <Menu>\n        {({ isOpen }) => (\n          <>\n            <MenuButton\n              as={Button}\n              variant=\"outline\"\n              colorScheme=\"gray\"\n              sx={{ '> span': { display: 'flex', alignItems: 'center' } }}\n              mr={1}\n            >\n              <NetworkIcon networkId={activeNetwork?.id || 666} />\n              <Text\n                variant=\"nav\"\n                fontSize=\"sm\"\n                fontWeight={700}\n                ml={1.5}\n                mr={2}\n                display={{ base: 'none', md: 'initial' }}\n              >\n                {activeNetwork?.label || 'Not Connected'}\n              </Text>\n              <Flex display={{ base: 'none', md: 'initial' }}>\n                {isOpen ? <ChevronUp color=\"cyan\" /> : <ChevronDown color=\"cyan.500\" />}\n              </Flex>\n            </MenuButton>\n            <MenuList>\n              {networks.map(({ id, label }) => {\n                if ((id === 84532 || id === 11155111) && !showTestnets) return null;\n                return (\n                  <MenuItem key={`${id}`} onClick={() => setNetwork(id)}>\n                    <NetworkIcon networkId={id} />\n                    <Text variant=\"nav\" ml={2}>\n                      {label}\n                    </Text>\n                  </MenuItem>\n                );\n              })}\n              <MenuOptionGroup>\n                <Flex py={4} px={3} alignItems=\"center\" justifyContent=\"space-between\">\n                  <Text fontSize=\"14px\" fontFamily=\"heading\" lineHeight=\"20px\">\n                    Show Testnets\n                  </Text>\n                  <Switch\n                    mr={2}\n                    size=\"sm\"\n                    color=\"gray.900\"\n                    colorScheme=\"gray\"\n                    isChecked={showTestnets}\n                    onChange={() => setShowTestnets(!showTestnets)}\n                  />\n                </Flex>\n              </MenuOptionGroup>\n            </MenuList>\n          </>\n        )}\n      </Menu>\n      {activeWallet ? (\n        <Menu>\n          <MenuButton\n            as={Button}\n            variant=\"outline\"\n            colorScheme=\"gray\"\n            ml={2}\n            height={10}\n            py=\"6px\"\n            px=\"9.5px\"\n            whiteSpace=\"nowrap\"\n          >\n            <WalletIcon />\n            <Text\n              as=\"span\"\n              ml={1}\n              color=\"whiteAlpha.800\"\n              fontWeight={700}\n              fontSize=\"xs\"\n              userSelect=\"none\"\n            >\n              {activeWallet.ens?.name || prettyString(activeWallet.address)}\n            </Text>\n          </MenuButton>\n          <MenuList>\n            <MenuItem\n              onClick={() => {\n                try {\n                  navigator.clipboard.writeText(activeWallet?.address);\n                } catch (_e) {}\n              }}\n            >\n              <Text variant=\"nav\" ml={2}>\n                Copy address\n              </Text>\n            </MenuItem>\n            <MenuItem onClick={onDisconnect}>\n              <Text variant=\"nav\" ml={2}>\n                Disconnect\n              </Text>\n            </MenuItem>\n          </MenuList>\n        </Menu>\n      ) : (\n        <Button\n          onClick={() => connect()}\n          type=\"button\"\n          size=\"sm\"\n          ml={2}\n          py={5}\n          data-testid=\"connect-wallet-button\"\n        >\n          Connect Wallet\n        </Button>\n      )}\n    </Flex>\n  );\n}\n","import { Contract } from '@ethersproject/contracts';\nimport { useQuery } from '@tanstack/react-query';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { AccountProxyType, importAccountProxy } from '@synthetixio/v3-contracts';\n\nexport function useAccountProxy() {\n  const { network } = useNetwork();\n  const provider = useProvider();\n  const signer = useSigner();\n  const signerOrProvider = signer || provider;\n  const withSigner = Boolean(signer);\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'AccountProxy', { withSigner }],\n    queryFn: async function () {\n      if (!signerOrProvider || !network) throw new Error('Should be disabled');\n      const { address, abi } = await importAccountProxy(network.id, network?.preset);\n      return new Contract(address, abi, signerOrProvider) as AccountProxyType;\n    },\n    enabled: Boolean(signerOrProvider),\n    staleTime: Infinity,\n  });\n}\n","// !!! DO NOT EDIT !!! Automatically generated file\n\nimport type { AccountProxy as AccountProxy1Main } from './1-main/AccountProxy';\nimport type { AccountProxy as AccountProxy10Main } from './10-main/AccountProxy';\nimport type { AccountProxy as AccountProxy11155111Main } from './11155111-main/AccountProxy';\nimport type { AccountProxy as AccountProxy13370Main } from './13370-main/AccountProxy';\nimport type { AccountProxy as AccountProxy42161Arbthetix } from './42161-arbthetix/AccountProxy';\nimport type { AccountProxy as AccountProxy421614Arbthetix } from './421614-arbthetix/AccountProxy';\nimport type { AccountProxy as AccountProxy8453Andromeda } from './8453-andromeda/AccountProxy';\nimport type { AccountProxy as AccountProxy84532Andromeda } from './84532-andromeda/AccountProxy';\n\nexport type AccountProxyType =\n  | AccountProxy1Main\n  | AccountProxy10Main\n  | AccountProxy11155111Main\n  | AccountProxy13370Main\n  | AccountProxy42161Arbthetix\n  | AccountProxy421614Arbthetix\n  | AccountProxy8453Andromeda\n  | AccountProxy84532Andromeda;\n\nexport async function importAccountProxy(chainId: number, preset: string = 'main') {\n  switch (`${chainId}-${preset}`) {\n    case '1-main':\n      return import('./1-main/AccountProxy');\n    case '10-main':\n      return import('./10-main/AccountProxy');\n    case '11155111-main':\n      return import('./11155111-main/AccountProxy');\n    case '13370-main':\n      return import('./13370-main/AccountProxy');\n    case '42161-arbthetix':\n      return import('./42161-arbthetix/AccountProxy');\n    case '421614-arbthetix':\n      return import('./421614-arbthetix/AccountProxy');\n    case '8453-andromeda':\n      return import('./8453-andromeda/AccountProxy');\n    case '84532-andromeda':\n      return import('./84532-andromeda/AccountProxy');\n    default:\n      throw new Error(`Unsupported chain ${chainId} for AccountProxy`);\n  }\n}\n","import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { useAccountProxy } from '@snx-v3/useAccountProxy';\nimport { useNetwork, useWallet } from '@snx-v3/useBlockchain';\nimport { useConnectWallet } from '@web3-onboard/react';\nimport { useEffect, useMemo } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\n\nexport function useAccounts() {\n  const { activeWallet } = useWallet();\n  const { data: AccountProxy } = useAccountProxy();\n  const { network } = useNetwork();\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'Accounts',\n      { accountAddress: activeWallet?.address },\n    ],\n    queryFn: async function () {\n      if (!AccountProxy || !activeWallet?.address) throw new Error('Should be disabled');\n      const numberOfAccountTokens = await AccountProxy.balanceOf(activeWallet.address);\n\n      if (numberOfAccountTokens.eq(0)) {\n        // No accounts created yet\n        return [];\n      }\n      const accountIndexes = Array.from(Array(numberOfAccountTokens.toNumber()).keys());\n      const accounts = await Promise.all(\n        accountIndexes.map(async (i) => {\n          if (!activeWallet?.address) throw new Error('OMG!');\n          return await AccountProxy.tokenOfOwnerByIndex(activeWallet.address, i);\n        })\n      );\n      return accounts.map((accountId) => accountId.toString());\n    },\n    enabled: Boolean(AccountProxy?.address && activeWallet?.address),\n    placeholderData: [],\n  });\n}\n\nexport function useCreateAccount() {\n  const { data: CoreProxy } = useCoreProxy();\n  const { network } = useNetwork();\n  const client = useQueryClient();\n\n  return useMutation({\n    mutationFn: async function () {\n      try {\n        if (!CoreProxy) throw new Error('CoreProxy undefined');\n        const tx = await CoreProxy['createAccount()']();\n        const res = await tx.wait();\n\n        await client.invalidateQueries({\n          queryKey: [`${network?.id}-${network?.preset}`, 'Accounts'],\n        });\n\n        let newAccountId: string | undefined;\n\n        res.logs.forEach((log: any) => {\n          if (log.topics[0] === CoreProxy.interface.getEventTopic('AccountCreated')) {\n            const accountId = CoreProxy.interface.decodeEventLog(\n              'AccountCreated',\n              log.data,\n              log.topics\n            )?.accountId;\n            newAccountId = accountId?.toString();\n          }\n        });\n\n        return [newAccountId];\n      } catch (error) {\n        console.error(error);\n        throw error;\n      }\n    },\n  });\n}\n\nexport function useAccountUrlSync() {\n  const accounts = useAccounts();\n  const [{ wallet }] = useConnectWallet();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const queryParams = useMemo(() => new URLSearchParams(location.search), [location.search]);\n\n  useEffect(() => {\n    const accountId = queryParams.get('accountId') || undefined;\n\n    if (accounts.isFetched && accounts.data && accounts.data.length > 0) {\n      // Accounts fetched and we have some, preselect one\n      if (!accountId || !accounts.data.includes(accountId)) {\n        queryParams.set('accountId', accounts.data[0]);\n\n        navigate(\n          {\n            pathname: location.pathname,\n            search: queryParams.toString(),\n          },\n          { replace: true }\n        );\n      }\n      // when accountId param is present, and it also exists in the accounts list, do nothing\n      return;\n    }\n\n    const wallets = wallet?.accounts;\n    if (\n      // Check separately for the case when wallet is not connected\n      (wallets && wallets.length < 1) ||\n      (accounts.isFetched && (!accounts.data || accounts.data.length < 1))\n    ) {\n      // We have fetched accounts but there are none, remove account id from url\n      if (accountId) {\n        navigate(\n          {\n            pathname: location.pathname,\n            search: queryParams.toString(),\n          },\n          { replace: true }\n        );\n      }\n    }\n  }, [\n    accounts.data,\n    accounts.isFetched,\n    navigate,\n    location.pathname,\n    queryParams,\n    wallet?.accounts,\n  ]);\n}\n","import {\n  Button,\n  Fade,\n  Menu,\n  MenuList,\n  Skeleton,\n  Text,\n  useClipboard,\n  MenuItem,\n  Flex,\n  MenuButton,\n} from '@chakra-ui/react';\nimport {\n  createSearchParams,\n  generatePath,\n  Link as RouterLink,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\nimport { prettyString } from '@snx-v3/format';\nimport { useAccounts, useCreateAccount } from '@snx-v3/useAccounts';\nimport { useParams } from '@snx-v3/useParams';\nimport { useAccountUrlSync } from '@snx-v3/useAccounts';\nimport { CheckIcon } from '@snx-v3/Multistep';\nimport { useEffect } from 'react';\n\nfunction AccountMenuItem({ accountId }: { accountId: string }) {\n  const params = useParams();\n\n  return (\n    <RouterLink\n      to={{\n        pathname: generatePath('/'),\n        search: accountId ? createSearchParams({ accountId }).toString() : '',\n      }}\n    >\n      <MenuItem\n        _hover={{ bg: 'whiteAlpha.200' }}\n        _focus={{ bg: 'whiteAlpha.200' }}\n        _active={{ bg: 'whiteAlpha.200' }}\n      >\n        <Flex width=\"100%\" alignItems=\"center\">\n          {params.accountId === accountId && <CheckIcon marginRight={1} />}\n          {accountId}\n        </Flex>\n      </MenuItem>\n    </RouterLink>\n  );\n}\n\ninterface AccountsSelectorUiProps {\n  isLoading: boolean;\n  accountId?: string;\n  createAccount: () => void;\n  accounts?: string[] | undefined;\n}\n\nexport function AccountsSelectorUi({\n  accountId,\n  isLoading,\n  createAccount,\n  accounts,\n}: AccountsSelectorUiProps) {\n  const { onCopy } = useClipboard(accountId || '');\n\n  return (\n    <>\n      {/* // Temporarily disable account selector menu */}\n      <Menu>\n        {isLoading ? (\n          <Skeleton startColor=\"whiteAlpha.500\" endColor=\"whiteAlpha.200\">\n            <Text>Loading...</Text>\n          </Skeleton>\n        ) : (\n          <Fade in={!isLoading}>\n            <MenuButton\n              size=\"sm\"\n              borderRadius=\"4px\"\n              height=\"40px\"\n              as={Button}\n              variant=\"outline\"\n              w=\"100%\"\n              maxW=\"180px\"\n              data-testid=\"current account id\"\n              data-account-id={accountId}\n              onClick={accountId ? onCopy : createAccount}\n            >\n              {`${accountId ? `Account #${prettyString(accountId, 3, 3)}` : 'Create Account'} `}\n            </MenuButton>\n          </Fade>\n        )}\n\n        {!!accounts?.length && (\n          <MenuList fontSize=\"xs\" bg=\"black\" py={0} border=\"1px solid rgba(255,255,255,0.33)\">\n            {accounts?.map((accountId) => (\n              <AccountMenuItem key={accountId} accountId={accountId} />\n            ))}\n\n            <MenuItem\n              _hover={{ bg: 'whiteAlpha.200' }}\n              _focus={{ bg: 'whiteAlpha.200' }}\n              _active={{ bg: 'whiteAlpha.200' }}\n              onClick={createAccount}\n            >\n              <Text fontWeight=\"semibold\" px=\"2\">\n                Create new account\n              </Text>\n            </MenuItem>\n          </MenuList>\n        )}\n      </Menu>\n    </>\n  );\n}\n\nexport function AccountsSelector() {\n  const params = useParams();\n\n  const {\n    data: accounts,\n    isLoading: isAccountsLoading,\n    isFetching: isAccountsFetching,\n  } = useAccounts();\n\n  const {\n    mutate: createAccount,\n    isPending: isCreateAccountLoading,\n    data: createAccountData,\n  } = useCreateAccount();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useAccountUrlSync();\n\n  const isLoading = isAccountsLoading || isAccountsFetching || isCreateAccountLoading || !accounts;\n\n  useEffect(() => {\n    // If we create an account, use it\n    // If the account in params exists in the accounts list, use it\n    // If not use the first account in the list\n    // If there are no accounts, use undefined\n    const accountId = createAccountData\n      ? createAccountData[0]\n      : accounts?.includes(params?.accountId || '')\n        ? params.accountId\n        : accounts?.[0];\n\n    const queryParams = new URLSearchParams(location.search);\n\n    if (accountId) {\n      queryParams.set('accountId', accountId);\n    }\n\n    navigate(\n      {\n        pathname: location.pathname,\n        search: queryParams.toString(),\n      },\n      { replace: true }\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [createAccountData]);\n\n  return (\n    <AccountsSelectorUi\n      isLoading={isLoading}\n      createAccount={createAccount}\n      accountId={params.accountId}\n      accounts={accounts}\n    />\n  );\n}\n","import { Box, Container, Flex, Link, useDisclosure } from '@chakra-ui/react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\nimport { NetworkController } from './NetworkController';\nimport { useEffect } from 'react';\nimport { AccountsSelector } from '@snx-v3/AccountsSelector';\nimport { Logo, LogoIcon } from '@snx-v3/icons';\n\nexport default function Header() {\n  const { onClose } = useDisclosure();\n  const location = useLocation();\n\n  useEffect(() => {\n    onClose();\n  }, [location, onClose]);\n\n  return (\n    <>\n      <Flex mb=\"8\" py=\"4\" bg=\"navy.900\" borderBottomWidth=\"1px\" borderBottomColor=\"gray.900\">\n        <Container maxW=\"1024px\" as={Flex} justifyContent=\"space-between\" alignItems=\"center\">\n          <Box display={{ base: 'none', md: 'inline-block' }}>\n            <Link\n              to={{\n                pathname: '/',\n              }}\n              as={RouterLink}\n              py={4}\n              pr={2}\n            >\n              <Logo />\n            </Link>\n          </Box>\n          <Box display={{ md: 'none' }}>\n            <Link to=\"/\" as={RouterLink} py={4} pr={2}>\n              <LogoIcon />\n            </Link>\n          </Box>\n          <Flex justifyContent=\"center\" alignItems=\"center\">\n            <Box display={{ base: 'none', md: 'inline-block' }} mr={3}>\n              <AccountsSelector />\n            </Box>\n            <NetworkController />\n          </Flex>\n        </Container>\n      </Flex>\n    </>\n  );\n}\n","import { FC } from 'react';\nimport { Box, Container, Flex } from '@chakra-ui/react';\nimport { Outlet } from 'react-router-dom';\nimport Footer from './Footer';\nimport Header from './Header';\n\nexport const DefaultLayout: FC = () => (\n  <Box\n    as=\"main\"\n    minHeight=\"100vh\"\n    color=\"rgba(255,255,255,0.85)\"\n    display=\"flex\"\n    flexDirection=\"column\"\n    bg=\"navy.900\"\n  >\n    <Flex flex=\"1\" flexDirection=\"column\">\n      <Header />\n      <Container display=\"flex\" flexDir=\"column\" maxW=\"1024px\" flex=\"1\">\n        <Outlet />\n      </Container>\n    </Flex>\n    <Footer />\n  </Box>\n);\n","import { useQuery } from '@tanstack/react-query';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { CoreProxyType } from '@synthetixio/v3-contracts';\nimport { ZodBigNumber } from '@snx-v3/zod';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { erc7412Call } from '@snx-v3/withERC7412';\nimport { useCollateralTypes } from '@snx-v3/useCollateralTypes';\n\nconst PriceSchema = ZodBigNumber.transform((x) => wei(x));\n\nexport async function loadPrices({\n  CoreProxy,\n  collateralAddresses,\n}: {\n  CoreProxy: CoreProxyType;\n  collateralAddresses: string[];\n}) {\n  const calls = await Promise.all(\n    collateralAddresses.map((address) => {\n      return CoreProxy.populateTransaction.getCollateralPrice(address);\n    })\n  );\n  if (calls.length === 0) return { calls: [], decoder: () => [] };\n\n  const decoder = (multicallEncoded: string | string[]) => {\n    if (Array.isArray(multicallEncoded)) {\n      return multicallEncoded.map((encoded) => {\n        const pricesEncoded = CoreProxy.interface.decodeFunctionResult(\n          'getCollateralPrice',\n          encoded\n        )[0];\n\n        return PriceSchema.parse(pricesEncoded);\n      });\n    }\n    throw Error('Expected array got: ' + typeof multicallEncoded);\n  };\n  return { calls, decoder };\n}\n\nexport const useCollateralPrices = () => {\n  const { network } = useNetwork();\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: collateralData } = useCollateralTypes();\n\n  const collateralAddresses = collateralData?.map((x) => x.tokenAddress);\n\n  return useQuery({\n    enabled: Boolean(CoreProxy && collateralAddresses && collateralAddresses?.length > 0),\n    queryKey: [`${network?.id}-${network?.preset}`, 'CollateralPrices', { collateralAddresses }],\n    queryFn: async () => {\n      if (!CoreProxy || !collateralAddresses || collateralAddresses.length == 0 || !network) {\n        throw 'useCollateralPrices missing required data';\n      }\n\n      const { calls, decoder } = await loadPrices({ CoreProxy, collateralAddresses });\n\n      const prices = await erc7412Call(\n        network,\n        CoreProxy.provider,\n        calls,\n        decoder,\n        'useCollateralPrices'\n      );\n      return collateralAddresses.reduce((acc: Record<string, Wei | undefined>, address, i) => {\n        acc[address] = prices[i];\n        return acc;\n      }, {});\n    },\n  });\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { CoreProxyType } from '@synthetixio/v3-contracts';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { Wei, wei } from '@synthetixio/wei';\nimport { useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { erc7412Call } from '@snx-v3/withERC7412';\n\nexport type AccountCollateralType = {\n  tokenAddress: string;\n  availableCollateral: Wei;\n  totalAssigned: Wei;\n  totalDeposited: Wei;\n  totalLocked: Wei;\n};\n\nexport const loadAccountCollateral = async ({\n  accountId,\n  tokenAddresses,\n  CoreProxy,\n}: {\n  accountId: string;\n  tokenAddresses: string[];\n  CoreProxy: CoreProxyType;\n}) => {\n  const callsP = tokenAddresses.flatMap((tokenAddress) => [\n    CoreProxy.populateTransaction.getAccountAvailableCollateral(accountId, tokenAddress),\n    CoreProxy.populateTransaction.getAccountCollateral(accountId, tokenAddress),\n  ]);\n  const calls = await Promise.all(callsP);\n  const decoder = (multicallEncoded: string | string[]) => {\n    if (!Array.isArray(multicallEncoded)) throw Error('Expected array');\n    return tokenAddresses.map((tokenAddress, i) => {\n      const [availableCollateral] = CoreProxy.interface.decodeFunctionResult(\n        'getAccountAvailableCollateral',\n        multicallEncoded[i * 2]\n      );\n      const { totalAssigned, totalDeposited, totalLocked } =\n        CoreProxy.interface.decodeFunctionResult(\n          'getAccountCollateral',\n          multicallEncoded[i * 2 + 1]\n        );\n      return {\n        tokenAddress,\n        availableCollateral: wei(availableCollateral),\n        totalAssigned: wei(totalAssigned),\n        totalDeposited: wei(totalDeposited),\n        totalLocked: wei(totalLocked),\n      };\n    });\n  };\n  return { decoder, calls };\n};\n\nexport type AccountCollateralWithSymbol = AccountCollateralType & { symbol: string };\n\nexport function useAccountCollateral({\n  accountId,\n  includeDelegationOff,\n}: {\n  accountId?: string;\n  includeDelegationOff?: boolean;\n}) {\n  const { data: CoreProxy } = useCoreProxy();\n  const { network } = useNetwork();\n\n  const collateralTypes = useCollateralTypes(includeDelegationOff);\n\n  const tokenAddresses = collateralTypes.data?.map((c) => c.tokenAddress) ?? [];\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'AccountCollateral',\n      { accountId },\n      { tokens: tokenAddresses },\n    ],\n    enabled: Boolean(CoreProxy && accountId && tokenAddresses.length > 0),\n    queryFn: async function () {\n      if (!CoreProxy || !accountId || tokenAddresses.length < 1 || !network) {\n        throw 'useAccountCollateral should be disabled';\n      }\n      const { calls, decoder } = await loadAccountCollateral({\n        accountId,\n        tokenAddresses,\n        CoreProxy,\n      });\n      const data = await erc7412Call(\n        network,\n        CoreProxy.provider,\n        calls,\n        decoder,\n        'useAccountCollateral'\n      );\n\n      return data.map((x) => ({\n        ...x,\n        symbol: collateralTypes.data?.find((c) => c.tokenAddress === x.tokenAddress)?.symbol ?? '',\n      }));\n    },\n  });\n}\n\nexport function useAccountSpecificCollateral(accountId?: string, collateralAddress?: string) {\n  const { data: CoreProxy } = useCoreProxy();\n  const { network } = useNetwork();\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'AccountSpecificCollateral',\n      { accountId },\n      { token: collateralAddress },\n    ],\n    enabled: Boolean(CoreProxy && accountId && collateralAddress),\n    queryFn: async function () {\n      if (!CoreProxy || !accountId || !collateralAddress || !network) {\n        throw 'useAccountSpecificCollateral should not be enabled';\n      }\n      const { calls, decoder } = await loadAccountCollateral({\n        accountId,\n        tokenAddresses: [collateralAddress],\n        CoreProxy,\n      });\n\n      const data = await erc7412Call(\n        network,\n        CoreProxy.provider,\n        calls,\n        decoder,\n        'useAccountSpecificCollateral'\n      );\n\n      return data.at(0);\n    },\n  });\n}\n","import { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { CoreProxyType } from '@synthetixio/v3-contracts';\nimport { ZodBigNumber } from '@snx-v3/zod';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { useQuery } from '@tanstack/react-query';\nimport { z } from 'zod';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { erc7412Call } from '@snx-v3/withERC7412';\nimport { loadPrices } from '@snx-v3/useCollateralPrices';\nimport { loadAccountCollateral, AccountCollateralType } from '@snx-v3/useAccountCollateral';\nimport { useAllCollateralPriceIds } from '@snx-v3/useAllCollateralPriceIds';\nimport { fetchPriceUpdates, priceUpdatesToPopulatedTx } from '@snx-v3/fetchPythPrices';\nimport { useUSDProxy } from '@snx-v3/useUSDProxy';\n\nconst PositionCollateralSchema = z.object({\n  value: ZodBigNumber.transform((x) => wei(x)).optional(), // This is currently only removed on base-goreli\n  amount: ZodBigNumber.transform((x) => wei(x)),\n});\n\nconst DebtSchema = ZodBigNumber.transform((x) => wei(x));\n\nexport const loadPosition = async ({\n  CoreProxy,\n  accountId,\n  poolId,\n  tokenAddress,\n}: {\n  CoreProxy: CoreProxyType;\n  accountId: string;\n  poolId: string;\n  tokenAddress: string;\n}) => {\n  const calls = await Promise.all([\n    CoreProxy.populateTransaction.getPositionCollateral(accountId, poolId, tokenAddress),\n    CoreProxy.populateTransaction.getPositionDebt(accountId, poolId, tokenAddress),\n  ]);\n\n  const decoder = (multicallEncoded: string | string[]) => {\n    if (Array.isArray(multicallEncoded) && multicallEncoded.length === 2) {\n      const decodedCollateral = CoreProxy.interface.decodeFunctionResult(\n        'getPositionCollateral',\n        multicallEncoded[0]\n      );\n      const decodedDebt = CoreProxy.interface.decodeFunctionResult(\n        'getPositionDebt',\n        multicallEncoded[1]\n      )[0];\n      return {\n        debt: DebtSchema.parse(decodedDebt),\n        collateral: PositionCollateralSchema.parse({ ...decodedCollateral }),\n      };\n    }\n    throw Error('Expected array with two items');\n  };\n\n  return { calls, decoder };\n};\n\nexport type LiquidityPosition = {\n  collateralAmount: Wei;\n  collateralPrice: Wei;\n  collateralValue: Wei;\n  debt: Wei;\n  accountCollateral: AccountCollateralType;\n  usdCollateral: AccountCollateralType;\n  tokenAddress: string;\n};\n\nexport const useLiquidityPosition = ({\n  tokenAddress,\n  accountId,\n  poolId,\n}: {\n  tokenAddress?: string;\n  accountId?: string;\n  poolId?: string;\n}) => {\n  const { data: collateralPriceUpdates } = useAllCollateralPriceIds();\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: UsdProxy } = useUSDProxy();\n  const { network } = useNetwork();\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'LiquidityPosition',\n      { accountId },\n      {\n        pool: poolId,\n        token: tokenAddress,\n        collateralPriceUpdatesLength: collateralPriceUpdates?.length,\n      },\n    ],\n    enabled: Boolean(\n      CoreProxy && UsdProxy && poolId && accountId && tokenAddress && collateralPriceUpdates\n    ),\n    queryFn: async () => {\n      if (\n        !CoreProxy ||\n        !accountId ||\n        !poolId ||\n        !tokenAddress ||\n        !collateralPriceUpdates ||\n        !UsdProxy ||\n        !network\n      ) {\n        throw Error('useLiquidityPosition should not be enabled');\n      }\n      const { calls: priceCalls, decoder: priceDecoder } = await loadPrices({\n        collateralAddresses: [tokenAddress],\n        CoreProxy,\n      });\n\n      const { calls: positionCalls, decoder: positionDecoder } = await loadPosition({\n        CoreProxy,\n        accountId,\n        poolId,\n        tokenAddress,\n      });\n\n      const { calls: accountCollateralCalls, decoder: accountCollateralDecoder } =\n        await loadAccountCollateral({\n          accountId,\n          tokenAddresses: [tokenAddress, UsdProxy.address],\n          CoreProxy,\n        });\n\n      const collateralPriceCalls = await fetchPriceUpdates(\n        collateralPriceUpdates,\n        network.isTestnet\n      ).then((signedData) => priceUpdatesToPopulatedTx('0x', collateralPriceUpdates, signedData));\n\n      const allCalls = collateralPriceCalls\n        .concat(priceCalls)\n        .concat(positionCalls)\n        .concat(accountCollateralCalls);\n\n      return await erc7412Call(\n        network,\n        CoreProxy.provider,\n        allCalls,\n        (encoded) => {\n          if (!Array.isArray(encoded)) throw Error('Expected array ');\n          const startOfPrice = 0;\n          const endOfPrice = priceCalls.length;\n          const startOfPosition = endOfPrice;\n          const endOfPosition = startOfPosition + positionCalls.length;\n\n          const startOfAccountCollateral = endOfPosition;\n          const [collateralPrice] = priceDecoder(encoded.slice(startOfPrice, endOfPrice));\n          const decodedPosition = positionDecoder(encoded.slice(startOfPosition, endOfPosition));\n          const [accountCollateral, usdCollateral] = accountCollateralDecoder(\n            encoded.slice(startOfAccountCollateral)\n          );\n          return {\n            collateralPrice,\n            collateralAmount: decodedPosition.collateral.amount,\n            collateralValue: decodedPosition.collateral.amount.mul(collateralPrice),\n            debt: decodedPosition.debt,\n            tokenAddress,\n            accountCollateral,\n            usdCollateral,\n          };\n        },\n        `useLiquidityPosition`\n      );\n    },\n  });\n};\n","import type { MarketSnapshotByWeekSchema, PoolType } from '@snx-v3/usePoolData';\nimport { z } from 'zod';\nimport { wei, Wei } from '@synthetixio/wei';\n\ntype MarketSnapshotByWeek = z.infer<typeof MarketSnapshotByWeekSchema>;\n\nexport const calculateSevenDaysPnlGrowth = (marketSnapshots?: MarketSnapshotByWeek[]) => {\n  if (!marketSnapshots || marketSnapshots.length === 0) return undefined;\n  const end = marketSnapshots[0].pnl;\n  const start = marketSnapshots[1]?.pnl || wei(0);\n\n  return {\n    value: end.sub(start),\n    percentage: start.eq(0) ? undefined : end.sub(start).div(start.abs()),\n  };\n};\n\nexport const calculatePoolPerformanceLifetime = (poolData?: PoolType) => {\n  return poolData?.configurations.reduce((acc, { market }) => {\n    return acc.add(market.pnl);\n  }, wei(0));\n};\n\nexport const calculatePoolPerformanceSevenDays = (poolData?: PoolType) => {\n  const total = calculatePoolPerformanceLifetime(poolData);\n\n  const totalSevenDaysAgo = poolData?.configurations.reduce((acc, { market }) => {\n    return acc.add(market.market_snapshots_by_week[1]?.pnl || wei(0));\n  }, wei(0));\n\n  if (!total || !totalSevenDaysAgo) {\n    return undefined;\n  }\n\n  return {\n    value: total.sub(totalSevenDaysAgo), // Not that this value does not take into account that other pools might have exposure to markets\n    growthPercentage: totalSevenDaysAgo.eq(0)\n      ? undefined\n      : total.sub(totalSevenDaysAgo).div(totalSevenDaysAgo.abs()),\n  };\n};\n\nexport const calculateCRatio = (debt: Wei, collateralValue: Wei) =>\n  debt.eq(0) || collateralValue.eq(0) ? wei(0) : collateralValue.div(debt);\n","export function keyBy<T extends Record<K, PropertyKey>, K extends keyof T>(key: K, array: T[]) {\n  return array.reduce(\n    (acc, item) => {\n      const keyValue = item[key];\n      acc[keyValue] = item;\n      return acc;\n    },\n    {} as Record<T[K], T>\n  );\n}\n","import { CollateralType, useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { loadPosition } from '@snx-v3/useLiquidityPosition';\nimport { usePools } from '@snx-v3/usePools';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { useQuery } from '@tanstack/react-query';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { loadPrices } from '@snx-v3/useCollateralPrices';\nimport { calculateCRatio } from '@snx-v3/calculations';\nimport { erc7412Call } from '@snx-v3/withERC7412';\nimport { keyBy } from '@snx-v3/tsHelpers';\nimport { useAllCollateralPriceIds } from '@snx-v3/useAllCollateralPriceIds';\nimport { fetchPriceUpdates, priceUpdatesToPopulatedTx } from '@snx-v3/fetchPythPrices';\n\nexport type LiquidityPositionType = {\n  id: `${string}-${string}`;\n  accountId: string;\n  poolId: string;\n  poolName: string;\n  collateralAmount: Wei;\n  collateralPrice: Wei;\n  collateralValue: Wei;\n  collateralType: CollateralType;\n  cRatio: Wei;\n  debt: Wei;\n};\n\nexport type LiquidityPositionsById = {\n  [poolIdDashSymbol: `${string}-${string}`]: LiquidityPositionType;\n};\n\nfunction toPairs<T>(array: T[]): [T, T][] {\n  return Array.from(\n    { length: array.length / 2 },\n    (_, i) => [array[i * 2], array[i * 2 + 1]] as [T, T]\n  );\n}\n\nexport const useLiquidityPositions = ({ accountId }: { accountId?: string }) => {\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: pools } = usePools();\n  const { data: collateralTypes } = useCollateralTypes();\n  const { data: collateralPriceUpdates } = useAllCollateralPriceIds();\n\n  const { network } = useNetwork();\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'LiquidityPositions',\n      { accountId },\n      {\n        pools: pools ? pools.map((pool) => pool.id).sort() : [],\n        tokens: collateralTypes ? collateralTypes.map((x) => x.tokenAddress).sort() : [],\n        collateralPriceUpdatesLength: collateralPriceUpdates?.length,\n      },\n    ],\n    queryFn: async () => {\n      if (\n        !pools ||\n        !collateralTypes ||\n        !CoreProxy ||\n        !accountId ||\n        !collateralPriceUpdates ||\n        !network\n      ) {\n        throw Error('Query should not be enabled');\n      }\n\n      const positionCallsAndDataNested = await Promise.all(\n        pools.map(async ({ id: poolId, name: poolName }) =>\n          Promise.all(\n            collateralTypes.map(async (collateralType) => {\n              const { calls, decoder } = await loadPosition({\n                CoreProxy,\n                accountId,\n                poolId,\n                tokenAddress: collateralType.tokenAddress,\n              });\n              return { calls, decoder, poolName, collateralType, poolId };\n            })\n          )\n        )\n      );\n      const positionCallsAndData = positionCallsAndDataNested.flat();\n\n      const { calls: priceCalls, decoder: priceDecoder } = await loadPrices({\n        collateralAddresses: collateralTypes.map((x) => x.tokenAddress),\n        CoreProxy,\n      });\n\n      const positionCalls = positionCallsAndData.map((x) => x.calls).flat();\n      const collateralPriceCalls = await fetchPriceUpdates(\n        collateralPriceUpdates,\n        network.isTestnet\n      ).then((signedData) => priceUpdatesToPopulatedTx('0x', collateralPriceUpdates, signedData));\n\n      const allCalls = collateralPriceCalls.concat(priceCalls.concat(positionCalls));\n      const singlePositionDecoder = positionCallsAndData.at(0)?.decoder;\n\n      return await erc7412Call(\n        network,\n        CoreProxy.provider,\n        allCalls,\n        (encoded) => {\n          if (!Array.isArray(encoded)) throw Error('Expected array');\n          if (!singlePositionDecoder) return {};\n          const pricesByAddress = keyBy(\n            'address',\n            priceDecoder(encoded.slice(0, priceCalls.length)).map((price, i) => ({\n              price,\n              address: collateralTypes[i].tokenAddress,\n            }))\n          );\n          const encodedFiltered = encoded.filter(\n            (e) => e !== '0x0000000000000000000000000000000000000000000000000000000000000000'\n          );\n          const positionsEncoded =\n            encodedFiltered.length % 2 === 0\n              ? encodedFiltered\n              : encodedFiltered.slice(priceCalls.length);\n\n          const positionData = toPairs(positionsEncoded).map((x) => singlePositionDecoder(x));\n          const positions = positionData.map(({ debt, collateral }, index) => {\n            const { poolName, collateralType, poolId } = positionCallsAndData[index];\n            // Value will be removed from the collateral call in next release, so to prepare for that calculate it manually\n            const collateralAmount = collateral.amount;\n            const collateralPrice = pricesByAddress?.[collateralType.tokenAddress].price;\n            const collateralValue = collateralPrice\n              ? collateralAmount.mul(collateralPrice)\n              : wei(0);\n            const cRatio = calculateCRatio(debt, collateralValue);\n\n            return {\n              id: `${poolId}-${collateralType.symbol}` as const,\n              accountId,\n              poolId,\n              poolName,\n              collateralPrice,\n              collateralAmount,\n              collateralValue,\n              collateralType,\n              cRatio,\n              debt,\n            };\n          });\n          return keyBy('id', positions);\n        },\n        'useLiquidityPositions'\n      );\n    },\n    enabled: Boolean(\n      collateralPriceUpdates && CoreProxy && collateralTypes?.length && accountId && pools?.length\n    ),\n  });\n};\n","import { Flex, Box, Alert, AlertIcon, Text, Link } from '@chakra-ui/react';\n\nexport const Welcome = () => (\n  <Flex alignItems=\"flex-end\" flexWrap={{ base: 'wrap', md: 'nowrap' }} mb=\"8\">\n    <Box flexGrow={1}>\n      <Alert status=\"warning\">\n        <AlertIcon />\n        <Box>\n          This is an experimental prototype for Synthetix V3.{' '}\n          <Text fontWeight=\"bold\" display=\"inline\">\n            Governance voting power is still exclusively determined based on participation in{' '}\n            <Link textDecoration=\"underline\" href=\"https://staking.synthetix.io\">\n              Synthetix V2\n            </Link>\n            .\n          </Text>\n        </Box>\n      </Alert>\n    </Box>\n  </Flex>\n);\n","export function numberWithCommas(value: string, decimals?: number) {\n  const parts = value.split('.');\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  const joinedParts = parts.join('.');\n  return decimals ? joinedParts.substring(0, joinedParts.indexOf('.') + decimals + 1) : joinedParts;\n}\n\ninterface Options extends Intl.NumberFormatOptions {\n  locales?: string | string[];\n}\nexport const formatNumberToUsd = (val: number | string, options?: Options) => {\n  const optionsWithDefault = { style: 'currency', currency: 'USD', locales: 'en-EN', ...options };\n  return new Intl.NumberFormat(optionsWithDefault.locales, optionsWithDefault).format(Number(val));\n};\n\nexport const formatNumberToCurrencyBasedOnSize = (val: number | string) => {\n  const num = Number(val);\n  if (num < 0.0001) {\n    return formatNumberToUsd(num, { maximumFractionDigits: 8 });\n  }\n  if (num < 1) {\n    return formatNumberToUsd(num, { maximumFractionDigits: 4 });\n  }\n  return formatNumberToUsd(num, { maximumFractionDigits: 2 });\n};\n\nexport const formatNumber = (value: number | string, options?: Options) => {\n  const optionsWithDefault = {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n    locales: 'en-EN',\n    ...options,\n  };\n  return new Intl.NumberFormat(optionsWithDefault.locales, optionsWithDefault).format(\n    Number(value)\n  );\n};\n\nexport const formatPercent = (value: number | string, options?: Options) => {\n  const optionsWithDefault = {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2,\n    locales: 'en-EN',\n    style: 'percent',\n    ...options,\n  };\n  return new Intl.NumberFormat(optionsWithDefault.locales, optionsWithDefault).format(\n    Number(value)\n  );\n};\n","import { Flex, FlexProps } from '@chakra-ui/react';\n\nexport const BorderBox = (props: FlexProps) => (\n  <Flex bg=\"navy.700\" borderWidth=\"1px\" borderColor=\"gray.900\" borderRadius=\"base\" {...props} />\n);\n","import { Fade, Flex, Skeleton, Text } from '@chakra-ui/react';\nimport { formatNumberToUsd } from '@snx-v3/formatters';\nimport { BorderBox } from '@snx-v3/BorderBox';\n\nexport interface StatsProps {\n  totalDebt?: number;\n  totalCollateral?: number;\n  isLoading: boolean;\n}\n\nexport const Stats = ({ totalDebt, totalCollateral, isLoading }: StatsProps) => {\n  return (\n    <Flex justifyContent=\"space-between\" gap={4} flexDirection={{ base: 'column', md: 'row' }}>\n      <BorderBox p={4} width=\"33%\" flexDir=\"column\">\n        <Text\n          fontSize=\"xs\"\n          fontFamily=\"heading\"\n          textTransform=\"uppercase\"\n          color=\"gray.500\"\n          textAlign=\"center\"\n          fontWeight=\"400\"\n        >\n          Total Collateral\n        </Text>\n        <Flex justifyContent=\"center\">\n          {isLoading ? (\n            <Skeleton\n              width=\"fit-content\"\n              mt=\"0.25rem\"\n              startColor=\"whiteAlpha.500\"\n              endColor=\"whiteAlpha.200\"\n            >\n              <Text fontFamily=\"heading\" fontWeight=\"800\" textAlign=\"center\" fontSize=\"xl\">\n                100,000\n              </Text>\n            </Skeleton>\n          ) : (\n            <Fade in>\n              <Text fontFamily=\"heading\" fontWeight=\"800\" textAlign=\"center\" fontSize=\"2xl\">\n                {totalCollateral ? formatNumberToUsd(totalCollateral) : '—'}\n              </Text>\n            </Fade>\n          )}\n        </Flex>\n      </BorderBox>\n      <BorderBox p={4} flexDir=\"column\" width=\"33%\">\n        <Text\n          fontSize=\"xs\"\n          fontFamily=\"heading\"\n          textTransform=\"uppercase\"\n          color=\"gray.500\"\n          textAlign=\"center\"\n          fontWeight=\"400\"\n        >\n          Total debt\n        </Text>\n\n        <Flex justifyContent=\"center\">\n          {isLoading ? (\n            <Skeleton\n              width=\"fit-content\"\n              mt=\"0.25rem\"\n              startColor=\"whiteAlpha.500\"\n              endColor=\"whiteAlpha.200\"\n            >\n              <Text fontFamily=\"heading\" fontWeight=\"800\" textAlign=\"center\" fontSize=\"xl\">\n                100,000\n              </Text>\n            </Skeleton>\n          ) : (\n            <Fade in>\n              <Text fontFamily=\"heading\" fontWeight=\"800\" textAlign=\"center\" fontSize=\"2xl\">\n                {totalDebt ? formatNumberToUsd(totalDebt) : '—'}\n              </Text>\n            </Fade>\n          )}\n        </Flex>\n      </BorderBox>\n      <BorderBox p={4} flexDir=\"column\" width=\"33%\">\n        <Text\n          fontSize=\"xs\"\n          fontFamily=\"heading\"\n          textTransform=\"uppercase\"\n          color=\"gray.500\"\n          textAlign=\"center\"\n          fontWeight=\"400\"\n        >\n          Total Lifetime Earnings\n        </Text>\n        <Flex justifyContent=\"center\">\n          {isLoading ? (\n            <Skeleton\n              width=\"fit-content\"\n              mt=\"0.25rem\"\n              startColor=\"whiteAlpha.500\"\n              endColor=\"whiteAlpha.200\"\n            >\n              <Text fontFamily=\"heading\" fontWeight=\"800\" textAlign=\"center\" fontSize=\"xl\">\n                100,000\n              </Text>\n            </Skeleton>\n          ) : (\n            <Fade in>\n              <Text fontFamily=\"heading\" fontWeight=\"800\" textAlign=\"center\" fontSize=\"2xl\">\n                —\n              </Text>\n            </Fade>\n          )}\n        </Flex>\n      </BorderBox>\n    </Flex>\n  );\n};\n","import { Flex, Fade, Heading, Button, Table, Thead, Tr, Th, Tbody, Box } from '@chakra-ui/react';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { CollateralType } from '@snx-v3/useCollateralTypes';\nimport { LiquidityPositionsById } from '@snx-v3/useLiquidityPositions';\nimport { Link, generatePath } from 'react-router-dom';\nimport { VaultRow } from './';\nimport { PoolType } from '@snx-v3/usePools';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { useNetwork } from '@snx-v3/useBlockchain';\n\ninterface PoolcardProps {\n  pool: PoolType;\n  collateralTypes?: CollateralType[];\n  liquidityPositionsById?: LiquidityPositionsById;\n}\n\nexport const PoolCard = ({ pool, collateralTypes, liquidityPositionsById }: PoolcardProps) => {\n  const { network } = useNetwork();\n  return (\n    <BorderBox p={4} mt={8} flexDir=\"column\">\n      <Flex\n        justifyContent=\"space-between\"\n        flexWrap={{ base: 'wrap', md: 'nowrap' }}\n        alignItems=\"center\"\n      >\n        <Flex\n          alignItems=\"baseline\"\n          justifyContent=\"flex-start\"\n          flexDirection={{ base: 'column', md: 'row' }}\n        >\n          <Fade in>\n            <Heading fontSize=\"2xl\">{pool.name}</Heading>\n          </Fade>\n        </Flex>\n        {pool.id && (\n          <Fade in>\n            <Button\n              as={Link}\n              mt={{ base: 2, md: 0 }}\n              size=\"sm\"\n              to={{\n                pathname: generatePath('/pools/:poolId', { poolId: pool.id }),\n                search: location.search,\n              }}\n              variant=\"outline\"\n            >\n              Pool Info\n            </Button>\n          </Fade>\n        )}\n      </Flex>\n      <Box overflowX=\"auto\">\n        <Table mt={8} size=\"sm\" variant=\"unstyled\" mb=\"9\">\n          <Thead sx={{ tr: { borderBottomColor: 'gray.900', borderBottomWidth: '1px' } }}>\n            <Tr>\n              <Th color=\"gray.500\" fontSize=\"xs\" lineHeight=\"4\" pb=\"3\" textTransform=\"initial\">\n                Collateral\n              </Th>\n              <Th color=\"gray.500\" fontSize=\"xs\" lineHeight=\"4\" pb=\"3\" textTransform=\"initial\">\n                Debt\n              </Th>\n              {!isBaseAndromeda(network?.id, network?.preset) && (\n                <>\n                  <Th color=\"gray.500\" fontSize=\"xs\" lineHeight=\"4\" pb=\"3\" textTransform=\"initial\">\n                    C-Ratio\n                  </Th>\n                  <Th color=\"gray.500\" fontSize=\"xs\" lineHeight=\"4\" pb=\"3\" textTransform=\"initial\">\n                    Issuance Ratio\n                  </Th>\n                  <Th color=\"gray.500\" fontSize=\"xs\" lineHeight=\"4\" pb=\"3\" textTransform=\"initial\">\n                    Liquidation Ratio\n                  </Th>\n                </>\n              )}\n\n              <Th color=\"gray.500\" fontSize=\"xs\" lineHeight=\"4\" pb=\"2\" textTransform=\"initial\"></Th>\n            </Tr>\n          </Thead>\n          <Tbody sx={{ tr: { borderBottomColor: 'gray.900', borderBottomWidth: '1px' } }}>\n            <>\n              {collateralTypes &&\n                collateralTypes.map((c) => (\n                  <VaultRow\n                    key={c.tokenAddress}\n                    collateralType={c}\n                    poolId={pool.id}\n                    liquidityPosition={liquidityPositionsById?.[`${pool.id}-${c.symbol}`]}\n                  />\n                ))}\n            </>\n          </Tbody>\n        </Table>\n      </Box>\n    </BorderBox>\n  );\n};\n","import { CollateralType } from '@snx-v3/useCollateralTypes';\nimport { LiquidityPositionsById } from '@snx-v3/useLiquidityPositions';\nimport { PoolType } from '@snx-v3/usePools';\nimport { PoolCard, PoolsLoading } from '.';\n\ninterface PoolsListProps {\n  pools?: PoolType[];\n  collateralTypes?: CollateralType[];\n  liquidityPositionsById?: LiquidityPositionsById;\n  isLoading: boolean;\n}\n\nexport const PoolsList = ({\n  pools,\n  collateralTypes,\n  liquidityPositionsById,\n  isLoading,\n}: PoolsListProps) => {\n  return (\n    <>\n      {isLoading ? (\n        <PoolsLoading />\n      ) : (\n        <>\n          {pools?.map((pool) => (\n            <PoolCard\n              key={pool.id}\n              pool={pool}\n              collateralTypes={collateralTypes}\n              liquidityPositionsById={liquidityPositionsById}\n            />\n          ))}\n        </>\n      )}\n    </>\n  );\n};\n","import { FC } from 'react';\nimport { Amount } from '@snx-v3/Amount';\nimport { Button, Flex, Td, Text, Tr } from '@chakra-ui/react';\nimport { generatePath, Link, useLocation } from 'react-router-dom';\nimport { useConnectWallet } from '@web3-onboard/react';\nimport { CollateralType } from '@snx-v3/useCollateralTypes';\nimport { useIsConnected, useNetwork } from '@snx-v3/useBlockchain';\nimport { CollateralIcon } from '@snx-v3/icons';\nimport { wei } from '@synthetixio/wei';\nimport { calculateCRatio } from '@snx-v3/calculations';\nimport { LiquidityPositionType } from '@snx-v3/useLiquidityPositions';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\n\nfunction VaultRowUi({\n  collateralType,\n  liquidityPosition,\n  poolId,\n  isConnected,\n  openConnectModal,\n}: {\n  collateralType: CollateralType;\n  liquidityPosition?: LiquidityPositionType;\n  poolId: string;\n  isConnected: boolean;\n  openConnectModal?: () => void;\n}) {\n  const { network } = useNetwork();\n  const location = useLocation();\n  const cRatio = calculateCRatio(\n    liquidityPosition?.debt || wei(0),\n    liquidityPosition?.collateralValue || wei(0)\n  );\n  const hasLiquidity = liquidityPosition && liquidityPosition.collateralAmount.gt(0);\n\n  return (\n    <Tr>\n      <Td>\n        <Flex flexDir=\"row\" py={4}>\n          <CollateralIcon width=\"40px\" height=\"40px\" symbol={collateralType.symbol} />\n          <Flex flexDirection=\"column\" justifyContent=\"center\" ml={2}>\n            <Text fontSize=\"sm\" lineHeight=\"20px\" fontWeight=\"500\" data-testid=\"collateral-value\">\n              {liquidityPosition?.collateralValue.gt(0) ? (\n                <Amount value={liquidityPosition.collateralValue} prefix=\"$\" />\n              ) : (\n                '-'\n              )}\n            </Text>\n            <Text\n              fontSize=\"xs\"\n              color=\"gray.500\"\n              data-testid=\"collateral-amount\"\n              whiteSpace=\"nowrap\"\n            >\n              {liquidityPosition?.collateralAmount.gt(0) && (\n                <Amount value={liquidityPosition.collateralAmount} />\n              )}{' '}\n              {collateralType.symbol}\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td data-testid=\"debt\">\n        {liquidityPosition?.debt.gt(0) ? <Amount value={liquidityPosition.debt} prefix=\"$\" /> : '-'}\n      </Td>\n      {!isBaseAndromeda(network?.id, network?.preset) && (\n        <>\n          <Td data-testid=\"c-ratio\">\n            {cRatio.gt(0) ? <Amount value={cRatio.mul(100)} suffix=\"%\" /> : '-'}\n          </Td>\n          <Td>\n            <Amount\n              data-testid=\"issuance-ratio\"\n              value={collateralType.issuanceRatioD18.mul(100)}\n              suffix=\"%\"\n            />\n          </Td>\n          <Td>\n            <Amount\n              value={collateralType.liquidationRatioD18.mul(100)}\n              data-testid=\"liquidation-ratio\"\n              suffix=\"%\"\n            />\n          </Td>\n        </>\n      )}\n      <Td textAlign=\"end\">\n        {isConnected && hasLiquidity ? (\n          <Button\n            as={Link}\n            to={{\n              pathname: generatePath('/positions/:collateralSymbol/:poolId', {\n                poolId: poolId,\n                collateralSymbol: collateralType.symbol,\n              }),\n              search: location.search,\n            }}\n          >\n            Manage\n          </Button>\n        ) : null}\n\n        {isConnected && !hasLiquidity ? (\n          <Button\n            as={Link}\n            to={{\n              pathname: generatePath('/deposit/:collateralSymbol/:poolId', {\n                poolId: poolId,\n                collateralSymbol: collateralType.symbol,\n              }),\n              search: location.search,\n            }}\n          >\n            Deposit\n          </Button>\n        ) : null}\n\n        {!isConnected && openConnectModal ? (\n          <Button onClick={openConnectModal}>Connect</Button>\n        ) : null}\n      </Td>\n    </Tr>\n  );\n}\n\nexport type VaultRowProps = {\n  collateralType: CollateralType;\n  poolId: string;\n  liquidityPosition?: LiquidityPositionType;\n};\n\nexport const VaultRow: FC<VaultRowProps> = ({ collateralType, poolId, liquidityPosition }) => {\n  const isConnected = useIsConnected();\n  const [_, connect] = useConnectWallet();\n\n  return (\n    <VaultRowUi\n      collateralType={collateralType}\n      liquidityPosition={liquidityPosition}\n      poolId={poolId}\n      isConnected={isConnected}\n      openConnectModal={() => connect()}\n    />\n  );\n};\n","import { Box, Fade, Flex, Heading, Table, Tbody, Th, Thead, Tr } from '@chakra-ui/react';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { VaultRowLoading } from './';\n\nexport const PoolsLoading = () => {\n  return (\n    <BorderBox p={4} mt={8} flexDir=\"column\">\n      <Flex\n        justifyContent=\"space-between\"\n        flexWrap={{ base: 'wrap', md: 'nowrap' }}\n        alignItems=\"center\"\n      >\n        <Flex\n          alignItems=\"baseline\"\n          justifyContent=\"flex-start\"\n          flexDirection={{ base: 'column', md: 'row' }}\n        >\n          <Fade in>\n            <Heading fontSize=\"2xl\">Loading Pools...</Heading>\n          </Fade>\n        </Flex>\n      </Flex>\n      <Box overflowX=\"auto\">\n        <Table mt={8} size=\"sm\" variant=\"unstyled\" mb=\"9\">\n          <Thead sx={{ tr: { borderBottomColor: 'gray.900', borderBottomWidth: '1px' } }}>\n            <Tr>\n              <Th color=\"gray.500\" fontSize=\"xs\" lineHeight=\"4\" pb=\"3\" textTransform=\"initial\">\n                Collateral\n              </Th>\n              <Th color=\"gray.500\" fontSize=\"xs\" lineHeight=\"4\" pb=\"3\" textTransform=\"initial\">\n                Debt\n              </Th>\n              <Th color=\"gray.500\" fontSize=\"xs\" lineHeight=\"4\" pb=\"3\" textTransform=\"initial\">\n                C-Ratio\n              </Th>\n              <Th color=\"gray.500\" fontSize=\"xs\" lineHeight=\"4\" pb=\"3\" textTransform=\"initial\">\n                Issuance Ratio\n              </Th>\n              <Th color=\"gray.500\" fontSize=\"xs\" lineHeight=\"4\" pb=\"3\" textTransform=\"initial\">\n                Liquidation Ratio\n              </Th>\n              <Th color=\"gray.500\" fontSize=\"xs\" lineHeight=\"4\" pb=\"2\" textTransform=\"initial\"></Th>\n            </Tr>\n          </Thead>\n          <Tbody sx={{ tr: { borderBottomColor: 'gray.900', borderBottomWidth: '1px' } }}>\n            {Array.from({ length: 2 }).map((_, i) => (\n              <VaultRowLoading\n                key={i}\n                startColor={i % 2 ? 'whiteAlpha.200' : 'whiteAlpha.500'}\n                endColor={i % 2 ? 'whiteAlpha.500' : 'whiteAlpha.200'}\n              />\n            ))}\n          </Tbody>\n        </Table>\n      </Box>\n    </BorderBox>\n  );\n};\n","import { Amount } from '@snx-v3/Amount';\nimport { Button, Flex, Td, Tr, SkeletonCircle, Skeleton } from '@chakra-ui/react';\nimport { Link } from 'react-router-dom';\nimport { CollateralIcon } from '@snx-v3/icons';\nimport { wei } from '@synthetixio/wei';\n\nexport const VaultRowLoading = ({\n  startColor,\n  endColor,\n}: {\n  startColor: string;\n  endColor: string;\n}) => {\n  return (\n    <Tr>\n      <Td>\n        <Flex flexDir=\"row\" py={4}>\n          <SkeletonCircle startColor={startColor} endColor={endColor} height=\"40px\" width=\"40px\">\n            <CollateralIcon width=\"40px\" height=\"40px\" symbol=\"SNX\" />\n          </SkeletonCircle>\n        </Flex>\n      </Td>\n      <Td>\n        <Skeleton height=\"28px\" startColor={startColor} endColor={endColor}>\n          <Amount value={wei(10 ** 5)} prefix=\"$\" />\n        </Skeleton>\n      </Td>\n      <Td>\n        <Skeleton height=\"28px\" startColor={startColor} endColor={endColor}>\n          <Amount value={wei(10 ** 5)} suffix=\"%\" />\n        </Skeleton>\n      </Td>\n      <Td>\n        <Skeleton height=\"28px\" startColor={startColor} endColor={endColor}>\n          <Amount value={wei(10 ** 5)} suffix=\"%\" />\n        </Skeleton>\n      </Td>\n      <Td>\n        <Skeleton height=\"28px\" startColor={startColor} endColor={endColor}>\n          <Amount value={wei(10 ** 5)} suffix=\"%\" />\n        </Skeleton>\n      </Td>\n      <Td textAlign=\"end\">\n        <Skeleton height=\"28px\" startColor={startColor} endColor={endColor}>\n          <Button as={Link} disabled>\n            Loading\n          </Button>\n        </Skeleton>\n      </Td>\n    </Tr>\n  );\n};\n","import { ethers } from 'ethers';\nimport { useQuery } from '@tanstack/react-query';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useNetwork } from '@snx-v3/useBlockchain';\n\nexport function useAccountCollateralUnlockDate({ accountId }: { accountId?: string }) {\n  const { data: CoreProxy } = useCoreProxy();\n  const { network } = useNetwork();\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'AccountCollateralUnlockDate', { accountId }],\n    enabled: Boolean(CoreProxy && accountId),\n    queryFn: async function () {\n      if (!CoreProxy || !accountId) throw new Error('Core Proxy or account id is not defined');\n\n      const [lastInteraction, accountTimeoutWithdraw] = await Promise.all([\n        CoreProxy.getAccountLastInteraction(accountId),\n        CoreProxy.getConfigUint(ethers.utils.formatBytes32String('accountTimeoutWithdraw')),\n      ]);\n\n      const collateralUnlock = lastInteraction.add(accountTimeoutWithdraw);\n\n      return new Date(collateralUnlock.toNumber() * 1000);\n    },\n  });\n}\n","import { formatDistanceToNow, intlFormat } from 'date-fns';\n\nexport function convertSecondsToDisplayString(seconds: number) {\n  const secondsInHour = 3600;\n  const secondsInDay = 86400;\n  const secondsInWeek = 604800;\n  const secondsInMonth = 2592000;\n\n  if (seconds === 0) {\n    return null;\n  } else if (seconds % secondsInMonth === 0) {\n    const months = seconds / secondsInMonth;\n    return months === 1 ? 'every month' : `every ${months} months`;\n  } else if (seconds % secondsInWeek === 0) {\n    const weeks = seconds / secondsInWeek;\n    return weeks === 1 ? 'every week' : `every ${weeks} weeks`;\n  } else if (seconds % secondsInDay === 0) {\n    const days = seconds / secondsInDay;\n    return days === 1 ? 'every day' : `every ${days} days`;\n  } else if (seconds % secondsInHour === 0) {\n    const hours = seconds / secondsInHour;\n    return hours === 1 ? 'every hour' : `every ${hours.toFixed(1)} hours`;\n  } else {\n    const hours = seconds / secondsInHour;\n    return `every ${hours.toFixed(1)} hours`;\n  }\n}\n\nexport const formatTimeToUnlock = (accountCollateralUnlockDate: Date | undefined) => {\n  if (!accountCollateralUnlockDate || accountCollateralUnlockDate.getTime() <= Date.now()) {\n    return undefined;\n  }\n  return formatDistanceToNow(accountCollateralUnlockDate, { addSuffix: true });\n};\n\nexport const unlockDateString = (accountCollateralUnlockDate: Date | undefined) => {\n  if (!accountCollateralUnlockDate || accountCollateralUnlockDate.getTime() <= Date.now()) {\n    return undefined;\n  }\n\n  return intlFormat(accountCollateralUnlockDate, {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n  });\n};\n","import { useMemo, useReducer } from 'react';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useMutation } from '@tanstack/react-query';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport { BigNumber, constants, utils } from 'ethers';\nimport { formatGasPriceForTransaction } from '@snx-v3/useGasOptions';\nimport { getGasPrice } from '@snx-v3/useGasPrice';\nimport { useGasSpeed } from '@snx-v3/useGasSpeed';\nimport { AccountCollateralWithSymbol } from '@snx-v3/useAccountCollateral';\nimport { useAllCollateralPriceIds } from '@snx-v3/useAllCollateralPriceIds';\nimport { fetchPriceUpdates, priceUpdatesToPopulatedTx } from '@snx-v3/fetchPythPrices';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport { useSpotMarketProxy } from '../useSpotMarketProxy';\nimport { USDC_BASE_MARKET } from '@snx-v3/isBaseAndromeda';\nimport { notNil } from '@snx-v3/tsHelpers';\nimport { useUSDProxy } from '@snx-v3/useUSDProxy';\n\nexport const useWithdrawBaseAndromeda = ({\n  accountId,\n  usdcCollateral,\n  snxUSDCollateral,\n}: {\n  usdcCollateral: AccountCollateralWithSymbol;\n  snxUSDCollateral: AccountCollateralWithSymbol;\n  accountId?: string;\n}) => {\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: SpotProxy } = useSpotMarketProxy();\n  const { data: UsdProxy } = useUSDProxy();\n  const { data: collateralPriceIds } = useAllCollateralPriceIds();\n  const { network } = useNetwork();\n\n  const { gasSpeed } = useGasSpeed();\n  const signer = useSigner();\n  const provider = useProvider();\n\n  const amount = useMemo(\n    () => snxUSDCollateral.availableCollateral.add(usdcCollateral.availableCollateral),\n    [snxUSDCollateral.availableCollateral, usdcCollateral.availableCollateral]\n  );\n\n  const mutation = useMutation({\n    mutationFn: async () => {\n      if (!signer || !network || !provider) throw new Error('No signer or network');\n\n      if (!(CoreProxy && SpotProxy && amount.gt(0) && collateralPriceIds && accountId)) return;\n\n      const walletAddress = await signer.getAddress();\n\n      try {\n        dispatch({ type: 'prompting' });\n\n        const gasPricesPromised = getGasPrice({ provider });\n\n        const withdraw_sUSDC = usdcCollateral?.availableCollateral.gt(0)\n          ? CoreProxy.populateTransaction.withdraw(\n              BigNumber.from(accountId),\n              usdcCollateral.tokenAddress,\n              usdcCollateral?.availableCollateral.toBN()\n            )\n          : undefined;\n\n        const withdraw_sUSD = snxUSDCollateral?.availableCollateral.gt(0)\n          ? CoreProxy.populateTransaction.withdraw(\n              BigNumber.from(accountId),\n              snxUSDCollateral.tokenAddress,\n              snxUSDCollateral?.availableCollateral.toBN()\n            )\n          : undefined;\n\n        const sUSDCApproval = snxUSDCollateral.availableCollateral.gt(0)\n          ? UsdProxy?.populateTransaction.approve(\n              SpotProxy.address,\n              snxUSDCollateral.availableCollateral.toBN()\n            )\n          : undefined;\n\n        const buy_SUSD = snxUSDCollateral.availableCollateral.gt(0)\n          ? SpotProxy.populateTransaction.buy(\n              USDC_BASE_MARKET,\n              snxUSDCollateral.availableCollateral.toBN(),\n              0,\n              constants.AddressZero\n            )\n          : undefined;\n\n        const unwrapTxnPromised = SpotProxy.populateTransaction.unwrap(\n          USDC_BASE_MARKET,\n          amount.toBN(),\n          //2% slippage\n          Number(\n            utils.formatUnits(amount.toBN().mul(98).div(100).toString(), 12).toString()\n          ).toFixed()\n        );\n\n        const collateralPriceCallsPromise = fetchPriceUpdates(\n          collateralPriceIds,\n          network.isTestnet\n        ).then((signedData) =>\n          priceUpdatesToPopulatedTx(walletAddress, collateralPriceIds, signedData)\n        );\n        const [\n          gasPrices,\n          withdraw_sUSDC_Txn,\n          withdraw_SUSD_Txn,\n          sUSDCApproval_Txn,\n          buy_SUSD_Txn,\n          unwrapTxn,\n          collateralPriceCalls,\n        ] = await Promise.all([\n          gasPricesPromised,\n          withdraw_sUSDC,\n          withdraw_sUSD,\n          sUSDCApproval,\n          buy_SUSD,\n          unwrapTxnPromised,\n          collateralPriceCallsPromise,\n        ]);\n        const allCalls = collateralPriceCalls.concat(\n          [\n            withdraw_sUSDC_Txn,\n            withdraw_SUSD_Txn,\n            sUSDCApproval_Txn,\n            buy_SUSD_Txn,\n            unwrapTxn,\n          ].filter(notNil)\n        );\n\n        const erc7412Tx = await withERC7412(network, allCalls, 'useWithdraw', CoreProxy.interface);\n\n        const gasOptionsForTransaction = formatGasPriceForTransaction({\n          gasLimit: erc7412Tx.gasLimit,\n          gasPrices,\n          gasSpeed,\n        });\n\n        const txn = await signer.sendTransaction({ ...erc7412Tx, ...gasOptionsForTransaction });\n        dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n        await txn.wait();\n        dispatch({ type: 'success' });\n      } catch (error: any) {\n        dispatch({ type: 'error', payload: { error } });\n        throw error;\n      }\n    },\n  });\n  return {\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n};\n","import { useState, Suspense, useMemo, useCallback } from 'react';\nimport { Amount } from '@snx-v3/Amount';\nimport { Button, Fade, Flex, Td, Text, Tr, useToast } from '@chakra-ui/react';\nimport { CollateralIcon } from '@snx-v3/icons';\nimport { AccountCollateralWithSymbol } from '@snx-v3/useAccountCollateral';\nimport { WithdrawModalUi } from '@snx-v3/WithdrawModal';\nimport { useSearchParams } from 'react-router-dom';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useUnWrapEth } from '@snx-v3/useWrapEth';\nimport { useWithdrawBaseAndromeda } from '../../lib/useWithdrawBaseAndromeda';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { useMachine } from '@xstate/react';\nimport {\n  Events,\n  ServiceNames,\n  State,\n  WithdrawMachine,\n} from '@snx-v3/WithdrawModal/WithdrawMachine';\nimport { ContractError } from '@snx-v3/ContractError';\n\nexport type BaseAndromedaAvailableCollateralProps = {\n  accountCollateralUnlockDate?: Date;\n  accountCollaterals: AccountCollateralWithSymbol[];\n};\n\nexport function BaseAndromedaAvailableCollateral({\n  accountCollaterals,\n  accountCollateralUnlockDate,\n}: BaseAndromedaAvailableCollateralProps) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const usdcCollateral = useMemo(\n    () => accountCollaterals.find((item) => item.symbol === 'USDC'),\n    [accountCollaterals]\n  );\n\n  const snxUSDCollateral = useMemo(\n    () => accountCollaterals.find((item) => item.symbol === 'snxUSD'),\n    [accountCollaterals]\n  );\n\n  const isDisabled = useMemo(\n    () =>\n      !accountCollateralUnlockDate ||\n      accountCollateralUnlockDate.getTime() > Date.now() ||\n      snxUSDCollateral?.availableCollateral.add(usdcCollateral?.availableCollateral).eq(0),\n    [\n      accountCollateralUnlockDate,\n      snxUSDCollateral?.availableCollateral,\n      usdcCollateral?.availableCollateral,\n    ]\n  );\n\n  return (\n    <Tr data-testid=\"available collateral row\">\n      <Td>\n        <Flex flexDir=\"row\" py={4}>\n          <Fade in>\n            <CollateralIcon width=\"32px\" height=\"32px\" symbol=\"USDC\" />\n          </Fade>\n          <Flex flexDirection=\"column\" justifyContent=\"center\" ml={2}>\n            <Fade in>\n              <Text fontSize=\"lg\" color=\"gray.500\" data-testid=\"available-collateral\">\n                <Amount\n                  value={usdcCollateral?.availableCollateral.add(\n                    snxUSDCollateral?.availableCollateral\n                  )}\n                />{' '}\n                USDC\n              </Text>\n            </Fade>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td textAlign=\"end\">\n        <Fade in>\n          <Button\n            isDisabled={isDisabled}\n            data-testid=\"withdraw-button\"\n            onClick={() => setIsOpen(true)}\n          >\n            Withdraw\n          </Button>\n        </Fade>\n        <Suspense fallback={null}>\n          {isOpen && usdcCollateral && snxUSDCollateral ? (\n            <WithdrawModal\n              usdcCollateral={usdcCollateral}\n              snxUSDCollateral={snxUSDCollateral}\n              onClose={() => setIsOpen(false)}\n              isOpen={isOpen}\n            />\n          ) : null}\n        </Suspense>\n      </Td>\n    </Tr>\n  );\n}\n\nfunction WithdrawModal({\n  usdcCollateral,\n  snxUSDCollateral,\n  onClose,\n  isOpen,\n}: {\n  usdcCollateral: AccountCollateralWithSymbol;\n  snxUSDCollateral: AccountCollateralWithSymbol;\n  isOpen: boolean;\n  onClose: () => void;\n}) {\n  const [searchParams] = useSearchParams();\n  const toast = useToast({ isClosable: true, duration: 9000 });\n  const { network } = useNetwork();\n\n  const { exec: unwrap } = useUnWrapEth();\n\n  const { exec: execWithdraw } = useWithdrawBaseAndromeda({\n    usdcCollateral,\n    snxUSDCollateral,\n    accountId: searchParams.get('accountId') || '',\n  });\n\n  const queryClient = useQueryClient();\n\n  const { data: CoreProxy } = useCoreProxy();\n  const errorParserCoreProxy = useContractErrorParser(CoreProxy);\n\n  const amount = useMemo(\n    () => snxUSDCollateral.availableCollateral.add(usdcCollateral.availableCollateral),\n    [snxUSDCollateral.availableCollateral, usdcCollateral.availableCollateral]\n  );\n\n  const [state, send] = useMachine(WithdrawMachine, {\n    context: {\n      amount,\n    },\n    services: {\n      [ServiceNames.withdraw]: async () => {\n        try {\n          await execWithdraw();\n\n          await queryClient.invalidateQueries({\n            queryKey: [`${network?.id}-${network?.preset}`, 'AccountSpecificCollateral'],\n            exact: false,\n          });\n\n          await queryClient.invalidateQueries({\n            queryKey: [`${network?.id}-${network?.preset}`, 'AccountCollateral'],\n            exact: false,\n          });\n          await queryClient.invalidateQueries({\n            queryKey: [`${network?.id}-${network?.preset}`, 'LiquidityPosition'],\n            exact: false,\n          });\n        } catch (error: any) {\n          const contractError = errorParserCoreProxy(error);\n          if (contractError) {\n            console.error(new Error(contractError.name), contractError);\n          }\n          toast.closeAll();\n          toast({\n            title: 'Withdraw failed',\n            description: contractError ? (\n              <ContractError contractError={contractError} />\n            ) : (\n              'Please try again.'\n            ),\n            status: 'error',\n          });\n          throw Error('Withdraw failed', { cause: error });\n        }\n      },\n      [ServiceNames.unwrap]: async () => {\n        try {\n          toast({\n            title: 'Unwrap',\n            description: 'Unwrapping WETH to ETH.',\n            status: 'info',\n          });\n\n          await unwrap(state.context.amount);\n        } catch (e) {\n          toast.closeAll();\n          toast({ title: 'Unwrap failed', description: 'Please try again.', status: 'error' });\n          throw Error('Unwrap failed', { cause: e });\n        }\n      },\n    },\n  });\n\n  const onSubmit = useCallback(async () => {\n    if (state.matches(State.success)) {\n      send(Events.RESET);\n      onClose();\n      return;\n    }\n    if (state.context.error) {\n      send(Events.RETRY);\n      return;\n    }\n    send(Events.RUN);\n  }, [onClose, send, state]);\n\n  return (\n    <WithdrawModalUi\n      amount={state.context.amount}\n      isOpen={isOpen}\n      onClose={onClose}\n      accountCollateral={usdcCollateral}\n      state={state}\n      error={state.context.error}\n      onSubmit={onSubmit}\n    />\n  );\n}\n","import { useEffect, useState } from 'react';\nimport {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertTitle,\n  Box,\n  Button,\n  Fade,\n  Flex,\n  Heading,\n  Skeleton,\n  SkeletonCircle,\n  Table,\n  Tbody,\n  Td,\n  Text,\n  Thead,\n  Tr,\n} from '@chakra-ui/react';\nimport { useParams } from '@snx-v3/useParams';\nimport { AccountCollateralWithSymbol, useAccountCollateral } from '@snx-v3/useAccountCollateral';\nimport { useAccountCollateralUnlockDate } from '@snx-v3/useAccountCollateralUnlockDate';\nimport { AvailableCollateralRow } from './';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { CollateralIcon } from '@snx-v3/icons';\nimport { formatTimeToUnlock, unlockDateString } from '@snx-v3/formatters';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { BaseAndromedaAvailableCollateral } from './BaseAndromedaAvailableCollateral';\n\nexport function AvailableCollateralUi({\n  accountCollaterals,\n  timeToUnlock,\n  unlockDateString,\n  unlockDate,\n  isLoading,\n  network,\n}: {\n  accountCollaterals: AccountCollateralWithSymbol[];\n  timeToUnlock?: string;\n  unlockDateString?: string;\n  unlockDate?: Date;\n  isLoading: boolean;\n  AvailableCollateralRow: typeof AvailableCollateralRow;\n  network?: Network | null;\n}) {\n  return (\n    <BorderBox p={4} mt={8} flexDir=\"column\">\n      <Heading fontSize=\"2xl\" mb=\"2\">\n        {isLoading ? 'Loading Collateral...' : 'Available Collateral'}\n      </Heading>\n      {!isLoading && (\n        <Fade in>\n          <Flex alignItems=\"center\" mb=\"0\">\n            <Text color=\"gray.500\">\n              This collateral can be deposited to pools. As a security precaution, this collateral\n              cannot be withdrawn until at least 1 day has elapsed since previous account activity.\n            </Text>\n            <Alert\n              ml=\"auto\"\n              status={timeToUnlock === '—' ? 'loading' : timeToUnlock ? 'error' : 'success'}\n              width=\"540px\"\n              title={unlockDateString}\n            >\n              <AlertIcon />\n              <Box width=\"100%\">\n                <AlertTitle>Withdrawals available</AlertTitle>\n                {timeToUnlock && (\n                  <AlertDescription data-testid=\"time-to-unlock\" display=\"block\">\n                    {timeToUnlock}\n                  </AlertDescription>\n                )}\n              </Box>\n            </Alert>\n          </Flex>\n        </Fade>\n      )}\n      <Fade in>\n        <Box overflowX=\"auto\">\n          <Table mt={8} size=\"sm\" variant=\"unstyled\" mb=\"9\">\n            <Thead sx={{ tr: { borderBottomColor: 'gray.900', borderBottomWidth: '1px' } }}>\n              <Tr />\n            </Thead>\n            <Tbody sx={{ tr: { borderBottomColor: 'gray.900', borderBottomWidth: '1px' } }}>\n              {isLoading ? (\n                // Loading State\n                <Tr data-testid=\"available collateral row\" alignItems=\"center\">\n                  <Td>\n                    <Flex flexDir=\"row\" py={4}>\n                      <SkeletonCircle isLoaded={!isLoading} height=\"28px\">\n                        <CollateralIcon width=\"32px\" height=\"32px\" symbol=\"SNX\" />\n                      </SkeletonCircle>\n                    </Flex>\n                  </Td>\n                  <Td textAlign=\"end\">\n                    <Flex height=\"100%\" justifyContent=\"flex-end\">\n                      <Skeleton isLoaded={!isLoading} height=\"28px\" width=\"200px\" alignSelf=\"end\">\n                        <Button>Withdraw</Button>\n                      </Skeleton>\n                    </Flex>\n                  </Td>\n                </Tr>\n              ) : isBaseAndromeda(network?.id, network?.preset) ? (\n                <BaseAndromedaAvailableCollateral\n                  accountCollateralUnlockDate={unlockDate}\n                  accountCollaterals={accountCollaterals}\n                />\n              ) : (\n                <>\n                  {accountCollaterals?.map((accountCollateral) => (\n                    <AvailableCollateralRow\n                      key={accountCollateral.tokenAddress}\n                      accountCollateralUnlockDate={unlockDate}\n                      accountCollateral={accountCollateral}\n                    />\n                  ))}\n                </>\n              )}\n            </Tbody>\n          </Table>\n        </Box>\n      </Fade>\n    </BorderBox>\n  );\n}\n\nexport function AvailableCollateral() {\n  const { accountId } = useParams();\n  const { network } = useNetwork();\n  const { data: accountCollateralsData, isLoading: isAccountCollateralsLoading } =\n    useAccountCollateral({ accountId, includeDelegationOff: true });\n\n  const { data: accountCollateralUnlockDate, isLoading: isAccountCollateralDateLoading } =\n    useAccountCollateralUnlockDate({\n      accountId,\n    });\n\n  const [timeToUnlock, setTimeToUnlock] = useState(formatTimeToUnlock(accountCollateralUnlockDate));\n\n  useEffect(() => {\n    const interval = setInterval(\n      () => setTimeToUnlock(formatTimeToUnlock(accountCollateralUnlockDate)),\n      1_000\n    );\n    return () => clearInterval(interval);\n  }, [accountCollateralUnlockDate]);\n\n  const isLoading = isAccountCollateralsLoading || isAccountCollateralDateLoading;\n\n  return (\n    <AvailableCollateralUi\n      accountCollaterals={accountCollateralsData || []}\n      timeToUnlock={timeToUnlock}\n      unlockDateString={unlockDateString?.toString() || ''}\n      unlockDate={accountCollateralUnlockDate}\n      isLoading={isLoading}\n      AvailableCollateralRow={AvailableCollateralRow}\n      network={network}\n    />\n  );\n}\n","import { useState, lazy, Suspense } from 'react';\nimport { Amount } from '@snx-v3/Amount';\nimport { Button, Fade, Flex, Td, Text, Tr } from '@chakra-ui/react';\nimport { CollateralIcon } from '@snx-v3/icons';\nimport { AccountCollateralWithSymbol } from '@snx-v3/useAccountCollateral';\nimport { safeImport } from '@synthetixio/safe-import';\n\nconst WithdrawModal = lazy(() => safeImport(() => import('@snx-v3/WithdrawModal')));\n\nfunction AvailableCollateralRowUi({\n  accountCollateral,\n  isDisabled,\n}: {\n  accountCollateral: AccountCollateralWithSymbol;\n  isDisabled: boolean;\n}) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <Tr data-testid=\"available collateral row\">\n      <Td>\n        <Flex flexDir=\"row\" py={4}>\n          <Fade in>\n            <CollateralIcon width=\"32px\" height=\"32px\" symbol={accountCollateral.symbol} />\n          </Fade>\n          <Flex flexDirection=\"column\" justifyContent=\"center\" ml={2}>\n            <Fade in>\n              <Text fontSize=\"lg\" color=\"gray.500\" data-testid=\"available-collateral\">\n                <Amount value={accountCollateral.availableCollateral} /> {accountCollateral.symbol}\n              </Text>\n            </Fade>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td textAlign=\"end\">\n        <Fade in>\n          <Button\n            data-testid=\"withdraw-button\"\n            isDisabled={isDisabled}\n            onClick={() => setIsOpen(true)}\n          >\n            Withdraw\n          </Button>\n        </Fade>\n        <Suspense fallback={null}>\n          {isOpen ? (\n            <WithdrawModal\n              accountCollateral={accountCollateral}\n              onClose={() => setIsOpen(false)}\n              isOpen={isOpen}\n            />\n          ) : null}\n        </Suspense>\n      </Td>\n    </Tr>\n  );\n}\n\nexport type AvailableCollateralRowProps = {\n  accountCollateralUnlockDate?: Date;\n  accountCollateral: AccountCollateralWithSymbol;\n};\n\nexport function AvailableCollateralRow({\n  accountCollateral,\n  accountCollateralUnlockDate,\n}: AvailableCollateralRowProps) {\n  return (\n    <AvailableCollateralRowUi\n      accountCollateral={accountCollateral}\n      isDisabled={\n        !accountCollateralUnlockDate ||\n        accountCollateralUnlockDate.getTime() > Date.now() ||\n        accountCollateral.availableCollateral.eq(0)\n      }\n    />\n  );\n}\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Flex } from '@chakra-ui/react';\nimport { useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { usePools } from '@snx-v3/usePools';\nimport { useParams } from '@snx-v3/useParams';\nimport { useLiquidityPositions } from '@snx-v3/useLiquidityPositions';\nimport { Welcome } from '../../components/Shared/Welcome';\nimport { PoolsList, Stats, AvailableCollateral } from '@snx-v3/Pools';\n\nexport function Home() {\n  const { accountId } = useParams();\n\n  const { data: collateralTypes = [], isLoading: collateralTypesLoading } = useCollateralTypes();\n  const { data: pools, isLoading: isPoolsLoading } = usePools();\n\n  const { data: liquidityPositionsById, isLoading: liquidityPositionLoading } =\n    useLiquidityPositions({ accountId });\n\n  const isLoading = collateralTypesLoading || isPoolsLoading || liquidityPositionLoading;\n\n  const { totalCollateral, totalDebt } =\n    Object.values(liquidityPositionsById || []).reduce(\n      (acc, val) => {\n        acc.totalCollateral = acc.totalCollateral + val.collateralValue.toNumber();\n        acc.totalDebt = acc.totalDebt + val.debt.toNumber();\n        return acc;\n      },\n      { totalCollateral: 0, totalDebt: 0 }\n    ) || {};\n\n  return (\n    <>\n      <Helmet>\n        <title>Synthetix V3</title>\n        <meta name=\"description\" content=\"Synthetix V3\" />\n      </Helmet>\n      <Flex height=\"100%\" flexDirection=\"column\">\n        <Welcome />\n        <Stats totalDebt={totalDebt} totalCollateral={totalCollateral} isLoading={isLoading} />\n        <PoolsList\n          pools={pools}\n          isLoading={isLoading}\n          collateralTypes={collateralTypes}\n          liquidityPositionsById={liquidityPositionsById}\n        />\n        <AvailableCollateral />\n      </Flex>\n    </>\n  );\n}\n","import { calculateCRatio } from '@snx-v3/calculations';\nimport { Wei, wei } from '@synthetixio/wei';\n\nexport const validatePosition = ({\n  issuanceRatioD18,\n  collateralAmount,\n  collateralPrice,\n  debt,\n  collateralChange,\n  debtChange,\n}: {\n  issuanceRatioD18?: Wei;\n  collateralAmount?: Wei;\n  collateralPrice?: Wei;\n  debt?: Wei;\n  collateralChange: Wei;\n  debtChange: Wei;\n}) => {\n  const targetCRatio = issuanceRatioD18 ? issuanceRatioD18 : wei(1);\n  const newDebt = wei(debt || 0).add(debtChange);\n  const newCollateralAmount = wei(collateralAmount || 0).add(collateralChange);\n  const newCollateralValue = newCollateralAmount.mul(collateralPrice || 0);\n\n  const newCRatio = calculateCRatio(newDebt, newCollateralValue);\n  const maybeMaxDebt = wei(newCollateralAmount)\n    .mul(collateralPrice || 0)\n    .div(targetCRatio)\n    .sub(debt || 0);\n\n  const maxDebt = maybeMaxDebt.gte(0) ? maybeMaxDebt : wei(0);\n\n  const isValid =\n    (newCRatio.gte(targetCRatio) || newCRatio.lte(0)) &&\n    (newDebt.eq(0) || newCollateralAmount.gt(0));\n\n  return {\n    isValid,\n    hasChanges: !collateralChange.eq(0) || !debtChange.eq(0),\n    newCRatio,\n    newDebt,\n    newCollateralAmount,\n    maxDebt,\n  };\n};\n","import { Input, InputProps } from '@chakra-ui/react';\nimport { ChangeEvent, useCallback, useEffect, useRef, useState } from 'react';\nimport { Wei, wei } from '@synthetixio/wei';\n\nexport interface NumberInputProps extends InputProps {\n  'data-testid'?: string;\n  'data-max'?: string;\n}\n\nexport const NUMBER_REGEX = /^([0-9]*[.])?[0-9]{0,18}$/;\n\nfunction cleanupNumber(value: Wei) {\n  // Cleanup trailing precision zeroes\n  const float = parseFloat(value.toString());\n  if (float === value.toNumber()) {\n    return `${float}`;\n  }\n  return value.toString();\n}\n\nexport function NumberInput({\n  value,\n  onChange,\n  min,\n  max,\n  InputProps,\n}: {\n  onChange?: (value: Wei) => void;\n  value: Wei;\n  min?: Wei;\n  max?: Wei;\n  InputProps?: NumberInputProps;\n}) {\n  const [inputValue, setInputValue] = useState(value.gt(0) ? value.toString() : '');\n\n  const onInputChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      setInputValue(e.target.value);\n      if (!onChange) {\n        // Could be a read-only input\n        return;\n      }\n      if (!NUMBER_REGEX.test(`${e.target.value}`)) {\n        return;\n      }\n      let nextValue = value;\n      try {\n        nextValue = wei(e.target.value || 0);\n      } catch (_err) {\n        // whatever\n      }\n      if (!value.eq(nextValue)) {\n        onChange(nextValue);\n      }\n    },\n    [onChange, value]\n  );\n\n  const ref = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n    if (!NUMBER_REGEX.test(`${inputValue}`)) {\n      ref.current.setCustomValidity('Invalid number');\n      return;\n    }\n    if (value && value.eq(0)) {\n      ref.current.setCustomValidity('Value required');\n      return;\n    }\n    if (min && min.gte(0) && value && value.lt(min)) {\n      ref.current.setCustomValidity(`Value smaller than minimum of ${cleanupNumber(min)}`);\n      return;\n    }\n    if (max && max.gte(0) && value && value.gt(max)) {\n      ref.current.setCustomValidity(`Value greater than maximum of ${cleanupNumber(max)}`);\n      return;\n    }\n    ref.current.setCustomValidity('');\n  }, [inputValue, min, max, value]);\n\n  useEffect(() => {\n    if (value.eq(0)) {\n      return setInputValue('');\n    }\n    return setInputValue(cleanupNumber(value));\n  }, [value]);\n\n  return (\n    <Input\n      ref={ref}\n      flex=\"1\"\n      type=\"text\"\n      border=\"none\"\n      borderWidth=\"0px\"\n      textAlign=\"end\"\n      p={0}\n      outline=\"none\"\n      fontFamily=\"heading\"\n      fontSize=\"xl\"\n      fontWeight=\"black\"\n      lineHeight=\"2xl\"\n      color=\"white\"\n      height=\"unset\"\n      autoFocus={true}\n      placeholder=\"Enter Amount\"\n      _focus={{ boxShadow: 'none !important' }}\n      _placeholder={{ color: 'whiteAlpha.700' }}\n      value={inputValue}\n      onChange={onInputChange}\n      {...InputProps}\n    />\n  );\n}\n","import { Button, Flex, Text } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { DollarCircle } from '@snx-v3/icons';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { FC, useContext } from 'react';\nimport { validatePosition } from '@snx-v3/validatePosition';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useParams } from '@snx-v3/useParams';\nimport { LiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport Wei from '@synthetixio/wei';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { SUSDCIcon } from '@snx-v3/icons/SUSDCIcon';\n\nconst BorrowUi: FC<{\n  debtChange: Wei;\n  maxDebt: Wei;\n  setDebtChange: (val: Wei) => void;\n}> = ({ debtChange, setDebtChange, maxDebt }) => {\n  const { network } = useNetwork();\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n  return (\n    <Flex flexDirection=\"column\">\n      <Text fontSize=\"md\" fontWeight=\"700\" mb=\"0.5\">\n        {isBase ? 'Claim USDC' : 'Borrow snxUSD'}\n      </Text>\n      <Text fontSize=\"sm\" color=\"gray.400\" mb=\"4\">\n        Take an interest-free loan of {isBase ? 'USDC' : 'snxUSD'} against your collateral. This\n        increases your debt and decreases your C-Ratio.\n      </Text>\n      <BorderBox display=\"flex\" py={2} px={3} mb=\"4\">\n        <Text display=\"flex\" gap={2} alignItems=\"center\" fontWeight=\"600\" mx=\"2\">\n          {isBase ? <SUSDCIcon /> : <DollarCircle />}\n          {isBase ? 'USDC' : 'snxUSD'}\n        </Text>\n        <Flex flexDirection=\"column\" justifyContent=\"flex-end\" flexGrow={1}>\n          <NumberInput\n            InputProps={{\n              isRequired: true,\n              'data-testid': 'borrow amount input',\n              'data-max': maxDebt.toString(),\n            }}\n            value={debtChange}\n            onChange={(val) => setDebtChange(val)}\n            max={maxDebt}\n          />\n          <Flex flexDirection=\"column\" alignItems=\"flex-end\" fontSize=\"xs\" color=\"whiteAlpha.700\">\n            <Flex\n              gap=\"1\"\n              cursor=\"pointer\"\n              onClick={() => {\n                if (!maxDebt) {\n                  return;\n                }\n                setDebtChange(maxDebt);\n              }}\n            >\n              <Text>Max:</Text>\n              <Amount value={maxDebt} /> {isBase ? 'USDC' : 'snxUSD'}\n            </Flex>\n          </Flex>\n        </Flex>\n      </BorderBox>\n      <Button data-testid=\"borrow submit\" type=\"submit\">\n        {isBase ? 'Claim USDC' : 'Borrow snxUSD'}\n      </Button>\n    </Flex>\n  );\n};\n\nexport const Borrow = ({ liquidityPosition }: { liquidityPosition?: LiquidityPosition }) => {\n  const params = useParams();\n  const { debtChange, collateralChange, setDebtChange } = useContext(ManagePositionContext);\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n\n  const { maxDebt } = validatePosition({\n    issuanceRatioD18: collateralType?.issuanceRatioD18,\n    collateralAmount: liquidityPosition?.collateralAmount,\n    collateralPrice: liquidityPosition?.collateralPrice,\n    debt: liquidityPosition?.debt,\n    collateralChange: collateralChange,\n    debtChange: debtChange,\n  });\n\n  return <BorrowUi setDebtChange={setDebtChange} debtChange={debtChange} maxDebt={maxDebt} />;\n};\n","import { Button, Flex, Text, Tooltip } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { DollarCircle } from '@snx-v3/icons';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { useUSDProxy } from '@snx-v3/useUSDProxy';\nimport { LiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { useTokenBalance } from '@snx-v3/useTokenBalance';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { FC, useContext } from 'react';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { useNetwork } from '@snx-v3/useBlockchain';\n\nexport const RepayUi: FC<{\n  debtChange: Wei;\n  max?: Wei;\n  snxUSDBalance?: Wei;\n  availableUSDCollateral?: Wei;\n  currentDebt?: Wei;\n  setDebtChange: (val: Wei) => void;\n}> = ({ debtChange, setDebtChange, max, currentDebt, snxUSDBalance, availableUSDCollateral }) => {\n  const totalUsdBalance =\n    snxUSDBalance && availableUSDCollateral ? snxUSDBalance.add(availableUSDCollateral) : undefined;\n  const { network } = useNetwork();\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Text fontSize=\"md\" fontWeight=\"700\" mb=\"0.5\">\n        Repay {isBase ? 'USDC' : 'snxUSD'}\n      </Text>\n      <Text fontSize=\"sm\" color=\"gray.400\" mb=\"4\">\n        Pay down your position’s debt with {isBase ? 'USDC' : 'snxUSD'}. This decreases your debt\n        and increases your C-Ratio.\n      </Text>\n      <BorderBox display=\"flex\" py={2} px={3} mb=\"4\">\n        <Text display=\"flex\" gap={2} alignItems=\"center\" fontWeight=\"600\" mx=\"2\">\n          <DollarCircle />\n          {isBase ? 'USDC' : 'snxUSD'}\n        </Text>\n        <Flex flexDirection=\"column\" justifyContent=\"flex-end\" flexGrow={1}>\n          {/* TODO Figure out why repay is causing issues */}\n          <NumberInput\n            InputProps={{\n              isRequired: true,\n              'data-testid': 'repay amount input',\n              'data-max': max?.toString(),\n            }}\n            value={debtChange.abs()}\n            onChange={(val) => setDebtChange(val.mul(-1))}\n            max={max}\n          />\n          <Flex flexDirection=\"row\" justifyContent=\"right\" fontSize=\"xs\" color=\"whiteAlpha.700\">\n            <Flex\n              gap=\"1\"\n              mr=\"3\"\n              cursor=\"pointer\"\n              onClick={() => {\n                if (!currentDebt) {\n                  return;\n                }\n                setDebtChange(currentDebt.neg());\n              }}\n            >\n              <Text>Debt:</Text>\n              <Text display=\"inline\">\n                $<Amount value={currentDebt} data-testid=\"current debt\" />\n              </Text>\n            </Flex>\n            <Flex\n              gap=\"1\"\n              cursor=\"pointer\"\n              onClick={() => {\n                if (!totalUsdBalance) {\n                  return;\n                }\n                setDebtChange(totalUsdBalance.neg());\n              }}\n            >\n              <Tooltip\n                label={\n                  <Flex direction=\"column\" alignItems=\"flex-start\">\n                    <Flex justifyContent=\"space-between\" width=\"full\" gap={1}>\n                      Wallet Balance: <Amount value={snxUSDBalance} suffix=\" sUSD\" />\n                    </Flex>\n                    <Flex justifyContent=\"space-between\" width=\"full\" gap={1}>\n                      Collateral Balance: <Amount value={availableUSDCollateral} suffix=\" sUSD\" />\n                    </Flex>\n                  </Flex>\n                }\n              >\n                <Flex gap={1}>\n                  <Text>Balance:</Text>\n                  <Text display=\"inline\">\n                    <Amount\n                      value={totalUsdBalance}\n                      data-testid=\"available snxUSD balance\"\n                      suffix=\" sUSD\"\n                    />\n                  </Text>\n                </Flex>\n              </Tooltip>\n            </Flex>\n          </Flex>\n        </Flex>\n      </BorderBox>\n      <Button\n        data-testid=\"repay submit\"\n        type=\"submit\"\n        isDisabled={!(max && snxUSDBalance && currentDebt && availableUSDCollateral)}\n      >\n        Repay {isBase ? 'USDC' : 'snxUSD'}\n      </Button>\n    </Flex>\n  );\n};\n\nexport const Repay = ({ liquidityPosition }: { liquidityPosition?: LiquidityPosition }) => {\n  const { debtChange, setDebtChange } = useContext(ManagePositionContext);\n\n  const { data: USDProxy } = useUSDProxy();\n  const availableUSDCollateral = liquidityPosition?.usdCollateral.availableCollateral;\n  const { data: balance } = useTokenBalance(USDProxy?.address);\n\n  const debtExists = liquidityPosition?.debt.gt(0);\n  const flooredBalance = balance?.gt(0.01) ? balance : wei(0);\n\n  return (\n    <RepayUi\n      setDebtChange={setDebtChange}\n      debtChange={debtChange}\n      snxUSDBalance={flooredBalance}\n      availableUSDCollateral={availableUSDCollateral}\n      currentDebt={debtExists ? liquidityPosition?.debt : wei(0)}\n      max={Wei.max(\n        liquidityPosition?.debt || wei(0),\n        availableUSDCollateral?.add(balance || wei(0)) || wei(0)\n      )}\n    />\n  );\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { z } from 'zod';\nimport { SmallIntSchema, WeiSchema } from '@snx-v3/zod';\nimport { ethers } from 'ethers';\nimport { erc7412Call } from '@snx-v3/withERC7412';\nimport { fetchPriceUpdates, priceUpdatesToPopulatedTx } from '@snx-v3/fetchPythPrices';\nimport { useAllCollateralPriceIds } from '@snx-v3/useAllCollateralPriceIds';\n\nexport const MarketConfigurationSchema = z.object({\n  id: SmallIntSchema,\n  weight: WeiSchema,\n  maxDebtShareValue: WeiSchema,\n  isLocked: z.boolean(),\n});\n\nexport const PoolConfigurationSchema = z.object({\n  id: z.number(),\n  markets: MarketConfigurationSchema.array(),\n  isAnyMarketLocked: z.boolean(),\n});\n\nconst isLockedSchema = z.boolean();\n\nexport const usePoolConfiguration = (poolId?: string) => {\n  const { network } = useNetwork();\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: collateralPriceUpdates } = useAllCollateralPriceIds();\n\n  return useQuery({\n    enabled: Boolean(CoreProxy && poolId && collateralPriceUpdates),\n    queryKey: [`${network?.id}-${network?.preset}`, 'PoolConfiguration', { poolId }],\n    queryFn: async () => {\n      if (!CoreProxy || !poolId || !collateralPriceUpdates || !network) {\n        throw Error('usePoolConfiguration should not be enabled');\n      }\n      const marketsData = await CoreProxy.getPoolConfiguration(ethers.BigNumber.from(poolId));\n      const markets = marketsData.map(({ marketId, maxDebtShareValueD18, weightD18 }) => ({\n        id: marketId,\n        weight: maxDebtShareValueD18,\n        maxDebtShareValue: weightD18,\n      }));\n      const collateralPriceCalls = await fetchPriceUpdates(\n        collateralPriceUpdates,\n        network.isTestnet\n      ).then((signedData) => priceUpdatesToPopulatedTx('0x', collateralPriceUpdates, signedData));\n\n      const calls = await Promise.all(\n        markets.map((m) => CoreProxy.populateTransaction.isMarketCapacityLocked(m.id))\n      );\n      const decoded = await erc7412Call(\n        network,\n        CoreProxy.provider,\n        collateralPriceCalls.concat(calls),\n        (encoded) => {\n          if (!Array.isArray(encoded)) throw Error('Expected array');\n          return encoded.map((x) =>\n            isLockedSchema.parse(\n              CoreProxy.interface.decodeFunctionResult('isMarketCapacityLocked', x)[0]\n            )\n          );\n        },\n        'isMarketCapacityLocked'\n      );\n\n      return PoolConfigurationSchema.parse({\n        id: parseInt(poolId),\n        markets: markets.map((market, i) => ({\n          ...market,\n          isLocked: decoded[i],\n        })),\n        isAnyMarketLocked: decoded.some(Boolean),\n      });\n    },\n  });\n};\n","import {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertTitle,\n  Button,\n  Collapse,\n  Flex,\n  Text,\n} from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { CollateralIcon } from '@snx-v3/icons';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { LiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { validatePosition } from '@snx-v3/validatePosition';\nimport { usePoolConfiguration } from '@snx-v3/usePoolConfiguration';\nimport Wei, { wei } from '@synthetixio/wei';\nimport React, { FC, useContext } from 'react';\nimport { useParams } from '@snx-v3/useParams';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { useNetwork } from '@snx-v3/useBlockchain';\n\nexport const UndelegateUi: FC<{\n  collateralChange: Wei;\n  currentCollateral?: Wei;\n  minDelegation?: Wei;\n  currentDebt?: Wei;\n  max?: Wei;\n  displaySymbol: string;\n  symbol: string;\n  setCollateralChange: (val: Wei) => void;\n  isAnyMarketLocked?: boolean;\n  isLoadingRequiredData: boolean;\n}> = ({\n  collateralChange,\n  setCollateralChange,\n  max,\n  displaySymbol,\n  symbol,\n  currentCollateral,\n  minDelegation,\n  isLoadingRequiredData,\n  isAnyMarketLocked,\n}) => {\n  const onMaxClick = React.useCallback(() => {\n    if (!max) {\n      return;\n    }\n    setCollateralChange(max.mul(-1));\n  }, [max, setCollateralChange]);\n\n  const leftoverCollateral = currentCollateral?.add(collateralChange) || wei(0);\n\n  const isValidLeftover =\n    leftoverCollateral.gt(minDelegation || wei(0)) || leftoverCollateral.eq(0);\n\n  const isDisabled = isAnyMarketLocked === true;\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Text fontSize=\"md\" fontWeight=\"700\" mb=\"0.5\">\n        Remove {displaySymbol}\n      </Text>\n      <Text fontSize=\"sm\" color=\"gray.400\" mb=\"4\">\n        Removing collateral from this position will transfer it to the account’s Available\n        Collateral balance for withdrawal. Collateral may only be removed if the resulting C-Ratio\n        is above the Issuance C-Ratio.\n      </Text>\n\n      <BorderBox flexDirection=\"column\" py={2} px={3} mb=\"4\">\n        <Flex flexDirection=\"row\" justifyContent=\"space-between\" width=\"100%\">\n          <Text display=\"flex\" gap={2} alignItems=\"center\" fontWeight=\"600\" mx=\"2\">\n            <CollateralIcon symbol={symbol} />\n            {displaySymbol}\n          </Text>\n          <Flex flexDirection=\"column\" justifyContent=\"flex-end\" flexGrow={1}>\n            <NumberInput\n              InputProps={{\n                isDisabled,\n                isRequired: true,\n                'data-testid': 'undelegate amount input',\n                'data-max': max?.toString(),\n              }}\n              value={collateralChange.abs()}\n              onChange={(val) => setCollateralChange(val.mul(-1))}\n              max={max}\n            />\n            <Flex flexDirection=\"column\" alignItems=\"flex-end\" fontSize=\"xs\" color=\"whiteAlpha.700\">\n              <Flex\n                gap=\"1\"\n                cursor={isDisabled ? 'not-allowed' : 'pointer'}\n                onClick={isDisabled ? undefined : onMaxClick}\n              >\n                <Text display=\"flex\" alignItems=\"center\" gap={1}>\n                  Max:\n                </Text>\n                <Amount\n                  value={max}\n                  data-testid=\"available to undelegate\"\n                  suffix={` ${displaySymbol}`}\n                />\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Collapse in={isDisabled} animateOpacity>\n          <Alert mt={2} status=\"warning\">\n            <AlertIcon />\n            <Flex direction=\"column\">\n              <AlertTitle>Credit capacity reached</AlertTitle>\n              <AlertDescription>\n                One of the markets has reached its credit capacity and is currently in a locked\n                state. You cannot remove collateral from the pool at this time.\n              </AlertDescription>\n            </Flex>\n          </Alert>\n        </Collapse>\n\n        <Collapse in={!isValidLeftover} animateOpacity>\n          <Alert mt={2} status=\"info\">\n            <AlertIcon />\n            <Flex direction=\"column\">\n              <AlertTitle>\n                The minimal delegated amount is{' '}\n                <Amount value={minDelegation} suffix={` ${symbol}`} />\n              </AlertTitle>\n              <AlertDescription>\n                You can close your position by removing all the collateral.\n              </AlertDescription>\n            </Flex>\n          </Alert>\n        </Collapse>\n      </BorderBox>\n      <Button\n        data-testid=\"undelegate submit\"\n        type=\"submit\"\n        isDisabled={isLoadingRequiredData || isAnyMarketLocked === true}\n      >\n        Remove {displaySymbol}\n      </Button>\n    </Flex>\n  );\n};\n\nexport const Undelegate = ({ liquidityPosition }: { liquidityPosition?: LiquidityPosition }) => {\n  const { collateralChange, debtChange, setCollateralChange } = useContext(ManagePositionContext);\n  const params = useParams();\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n\n  const poolConfiguration = usePoolConfiguration(params.poolId);\n  const { network } = useNetwork();\n\n  if (!collateralType) return null;\n  const collateralPrice = liquidityPosition?.collateralPrice;\n  const { newDebt } = validatePosition({\n    issuanceRatioD18: collateralType.issuanceRatioD18,\n    collateralAmount: liquidityPosition?.collateralAmount,\n    collateralPrice,\n    debt: liquidityPosition?.debt,\n    collateralChange: collateralChange,\n    debtChange: debtChange,\n  });\n  // To get the max withdrawable collateral we look at the new debt and the issuance ratio.\n  // This gives us the amount in dollar. We then divide by the collateral price.\n  // To avoid the transaction failing due to small price deviations, we also apply a 2% buffer by multiplying with 0.98\n\n  function maxUndelegate() {\n    if (!liquidityPosition || !collateralType) return undefined;\n    const { collateralAmount, collateralValue } = liquidityPosition;\n\n    if (isBaseAndromeda(network?.id, network?.preset)) {\n      return collateralAmount;\n    }\n\n    // if debt is negative it's actually credit, which means we can undelegate all collateral\n    if (newDebt.lte(0)) return collateralAmount;\n\n    const minCollateralRequired = newDebt.mul(collateralType.issuanceRatioD18);\n\n    if (collateralValue < minCollateralRequired)\n      // If you're below issuance ratio, you can't withdraw anything\n      return wei(0);\n\n    const maxWithdrawable = collateralValue.sub(minCollateralRequired).mul(0.98);\n    return Wei.min(collateralAmount, maxWithdrawable);\n  }\n  const max = maxUndelegate();\n\n  return (\n    <UndelegateUi\n      displaySymbol={collateralType.displaySymbol}\n      symbol={collateralType.symbol}\n      minDelegation={collateralType.minDelegationD18}\n      setCollateralChange={setCollateralChange}\n      collateralChange={collateralChange}\n      currentCollateral={liquidityPosition?.collateralAmount}\n      currentDebt={liquidityPosition?.debt}\n      max={max}\n      isLoadingRequiredData={poolConfiguration.isLoading || !max}\n      isAnyMarketLocked={poolConfiguration.data?.isAnyMarketLocked}\n    />\n  );\n};\n","import { FC } from 'react';\nimport { Flex, Badge } from '@chakra-ui/react';\nexport const PercentBadges: FC<{\n  disabled: boolean;\n  onBadgePress: (num: number) => void;\n  activeBadge: number;\n}> = ({ onBadgePress, activeBadge, disabled }) => {\n  return (\n    <Flex w=\"100%\" justifyContent=\"space-between\" mt={2} mb={1}>\n      <Badge\n        variant=\"percent\"\n        sx={{\n          bg: activeBadge >= 0.25 ? 'cyan.500' : 'whiteAlpha.300',\n          color: activeBadge >= 0.25 ? 'black' : 'cyan.500',\n          cursor: disabled ? 'not-allowed' : 'pointer',\n        }}\n        mr={1}\n        onClick={disabled ? undefined : () => onBadgePress(0.25)}\n      >\n        25%\n      </Badge>\n      <Badge\n        variant=\"percent\"\n        sx={{\n          bg: activeBadge >= 0.5 ? 'cyan.500' : 'whiteAlpha.300',\n          color: activeBadge >= 0.5 ? 'black' : 'cyan.500',\n          cursor: disabled ? 'not-allowed' : 'pointer',\n        }}\n        mx={1}\n        onClick={disabled ? undefined : () => onBadgePress(0.5)}\n      >\n        50%\n      </Badge>\n      <Badge\n        variant=\"percent\"\n        sx={{\n          bg: activeBadge >= 0.75 ? 'cyan.500' : 'whiteAlpha.300',\n          color: activeBadge >= 0.75 ? 'black' : 'cyan.500',\n          cursor: disabled ? 'not-allowed' : 'pointer',\n        }}\n        mx={1}\n        onClick={disabled ? undefined : () => onBadgePress(0.75)}\n      >\n        75%\n      </Badge>\n      <Badge\n        variant=\"percent\"\n        sx={{\n          bg: activeBadge === 1 ? 'cyan.500' : 'whiteAlpha.300',\n          color: activeBadge === 1 ? 'black' : 'cyan.500',\n          cursor: disabled ? 'not-allowed' : 'pointer',\n        }}\n        ml={1}\n        onClick={disabled ? undefined : () => onBadgePress(1)}\n      >\n        100%\n      </Badge>\n    </Flex>\n  );\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { useNetwork, useProvider, useWallet } from '@snx-v3/useBlockchain';\nimport { Wei, wei } from '@synthetixio/wei';\nimport { ethers } from 'ethers';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\n\nexport function useTransferableSynthetix() {\n  const { network } = useNetwork();\n  const { activeWallet } = useWallet();\n  const provider = useProvider();\n  const { data: snxCollateral } = useCollateralType('SNX');\n\n  const accountAddress = activeWallet?.address;\n  const snxAddress = snxCollateral?.tokenAddress;\n\n  return useQuery({\n    enabled: Boolean(provider && accountAddress && snxAddress),\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'TransferableSynthetix',\n      { address: activeWallet?.address },\n    ],\n    queryFn: async function (): Promise<{ transferable: Wei; collateral?: Wei }> {\n      if (!(provider && accountAddress && snxAddress)) {\n        throw 'useTransferableSynthetix should not be enabled';\n      }\n      const contract = new ethers.Contract(\n        snxAddress,\n        [\n          'function balanceOf(address owner) view returns (uint256)',\n          'function transferableSynthetix(address account) view returns (uint256 transferable)',\n          'function collateral(address account) view returns (uint256 collateral)',\n        ],\n        provider\n      );\n      try {\n        // Cannon case\n        if (network?.name === 'cannon') {\n          const balanceOf = await contract.balanceOf(accountAddress);\n          return {\n            transferable: wei(balanceOf),\n          };\n        }\n\n        // Normal case for SNX case\n        const [transferableSynthetix, collateral] = await Promise.all([\n          contract.transferableSynthetix(accountAddress),\n          contract.collateral(accountAddress),\n        ]);\n\n        return {\n          transferable: wei(transferableSynthetix),\n          collateral: wei(collateral),\n        };\n      } catch (e) {\n        console.error(e);\n        throw e;\n      }\n    },\n  });\n}\n","import { Alert, AlertIcon, AlertProps, Link, Text } from '@chakra-ui/react';\nimport Wei from '@synthetixio/wei';\n\ninterface CollateralAlertProps extends AlertProps {\n  tokenBalance: Wei;\n}\n\nexport const CollateralAlert = ({ tokenBalance, ...props }: CollateralAlertProps) => {\n  return (\n    <Alert borderLeftColor=\"cyan.500\" borderRadius=\"6px\" {...props}>\n      <AlertIcon color=\"cyan.500\" />\n      <Text color=\"white\" fontFamily=\"heading\" fontSize=\"16px\" lineHeight=\"24px\">\n        You have a {tokenBalance.toString(2)} SNX active staking position on V2. You&lsquo;ll need\n        to unstake on V2 before being able to deposit on V3.{' '}\n        <Link textDecor=\"underline\" href=\"https://staking.synthetix.io/\" target=\"_blank\">\n          Go to V2\n        </Link>\n      </Text>\n    </Alert>\n  );\n};\n","import { Button, Flex, Text } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { CollateralIcon } from '@snx-v3/icons';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { PercentBadges } from '@snx-v3/PercentBadges';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useEthBalance } from '@snx-v3/useEthBalance';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { FC, useContext, useMemo, useState } from 'react';\nimport { useParams } from '@snx-v3/useParams';\nimport { AccountCollateralType } from '@snx-v3/useAccountCollateral';\nimport { useTransferableSynthetix } from '@snx-v3/useTransferableSynthetix';\nimport { CollateralAlert } from '../../components/CollateralAlert';\nimport { useTokenBalance } from '@snx-v3/useTokenBalance';\nimport { LiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { getUSDCAddress, isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\n\nexport const DepositUi: FC<{\n  accountCollateral: AccountCollateralType;\n  collateralChange: Wei;\n  ethBalance?: Wei;\n  snxBalance?: {\n    transferable: Wei;\n    collateral?: Wei;\n  };\n  tokenBalance?: Wei;\n\n  displaySymbol: string;\n  symbol: string;\n  setCollateralChange: (val: Wei) => void;\n}> = ({\n  accountCollateral,\n  collateralChange,\n  setCollateralChange,\n  displaySymbol,\n  symbol,\n  tokenBalance,\n  ethBalance,\n  snxBalance,\n}) => {\n  const [activeBadge, setActiveBadge] = useState(0);\n  const combinedTokenBalance = useMemo(() => {\n    if (symbol === 'SNX') {\n      return snxBalance?.transferable;\n    }\n    if (symbol !== 'WETH') {\n      return tokenBalance;\n    }\n    if (!tokenBalance || !ethBalance) {\n      return undefined;\n    }\n    return tokenBalance.add(ethBalance);\n  }, [symbol, tokenBalance, ethBalance, snxBalance?.transferable]);\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Text fontSize=\"md\" fontWeight=\"700\" mb=\"0.5\">\n        Add {displaySymbol}\n      </Text>\n      <Text fontSize=\"sm\" color=\"gray.400\" mb=\"4\">\n        Provide additional collateral to this position. This will increase the position’s C-Ratio.\n      </Text>\n      <BorderBox display=\"flex\" flexDirection=\"column\" py={2} px={3} mb=\"4\">\n        <Flex>\n          <Text display=\"flex\" gap={2} alignItems=\"center\" fontWeight=\"600\" mx=\"2\">\n            <CollateralIcon symbol={symbol} />\n            {displaySymbol}\n          </Text>\n          <Flex flexDirection=\"column\" justifyContent=\"flex-end\" flexGrow={1}>\n            <Flex flexDirection=\"column\" justifyContent=\"flex-end\" flexGrow={1}>\n              <NumberInput\n                InputProps={{\n                  'data-testid': 'deposit amount input',\n                  'data-max': combinedTokenBalance?.toString(),\n                }}\n                value={collateralChange}\n                onChange={(value) => {\n                  setActiveBadge(0);\n                  setCollateralChange(value);\n                }}\n                max={combinedTokenBalance}\n              />\n              <Flex\n                flexDirection=\"column\"\n                alignItems=\"flex-end\"\n                fontSize=\"xs\"\n                color=\"whiteAlpha.700\"\n              >\n                {accountCollateral.availableCollateral.gt(0) ? (\n                  <Flex\n                    gap=\"1\"\n                    cursor=\"pointer\"\n                    onClick={() => setCollateralChange(accountCollateral.availableCollateral)}\n                  >\n                    <Text>Available {symbol} Collateral:</Text>\n                    <Amount value={accountCollateral?.availableCollateral} />\n                  </Flex>\n                ) : null}\n                <Flex\n                  gap=\"1\"\n                  cursor=\"pointer\"\n                  onClick={() => {\n                    const amount = symbol === 'SNX' ? snxBalance?.transferable : tokenBalance;\n                    if (!amount) {\n                      return;\n                    }\n\n                    setCollateralChange(amount);\n                  }}\n                >\n                  <Text>{symbol} Balance:</Text>\n                  <Amount value={symbol === 'SNX' ? snxBalance?.transferable : tokenBalance} />\n                </Flex>\n                {symbol === 'WETH' ? (\n                  <Flex\n                    gap=\"1\"\n                    cursor=\"pointer\"\n                    onClick={() => {\n                      if (!ethBalance) {\n                        return;\n                      }\n                      setCollateralChange(ethBalance);\n                    }}\n                  >\n                    <Text>ETH Balance:</Text>\n                    <Amount value={ethBalance} />\n                  </Flex>\n                ) : null}\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <PercentBadges\n          disabled={combinedTokenBalance ? combinedTokenBalance.eq(0) : false}\n          onBadgePress={(badgeNum) => {\n            if (!combinedTokenBalance) {\n              return;\n            }\n            if (activeBadge === badgeNum) {\n              setCollateralChange(wei(0));\n              setActiveBadge(0);\n              return;\n            }\n            setActiveBadge(badgeNum);\n            setCollateralChange(combinedTokenBalance.mul(badgeNum));\n          }}\n          activeBadge={activeBadge}\n        />\n      </BorderBox>\n      {snxBalance?.collateral && snxBalance?.collateral.gt(0) && symbol === 'SNX' && (\n        <CollateralAlert tokenBalance={snxBalance.collateral} />\n      )}\n      <Button\n        disabled={combinedTokenBalance === undefined}\n        data-testid=\"deposit submit\"\n        type=\"submit\"\n      >\n        Add {displaySymbol}\n      </Button>\n    </Flex>\n  );\n};\n\nexport const Deposit = ({ liquidityPosition }: { liquidityPosition?: LiquidityPosition }) => {\n  const { collateralChange, setCollateralChange } = useContext(ManagePositionContext);\n  const { network } = useNetwork();\n  const params = useParams();\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: transferrableSnx } = useTransferableSynthetix();\n\n  const { data: tokenBalance } = useTokenBalance(\n    isBaseAndromeda(network?.id, network?.preset)\n      ? getUSDCAddress(network?.id)\n      : collateralType?.tokenAddress\n  );\n\n  const { data: ethBalance } = useEthBalance();\n\n  if (!collateralType || !liquidityPosition?.accountCollateral) return null;\n\n  return (\n    <DepositUi\n      accountCollateral={liquidityPosition.accountCollateral}\n      displaySymbol={collateralType.displaySymbol}\n      tokenBalance={tokenBalance}\n      snxBalance={transferrableSnx}\n      ethBalance={ethBalance}\n      symbol={collateralType.symbol}\n      setCollateralChange={setCollateralChange}\n      collateralChange={collateralChange}\n    />\n  );\n};\n","import { Button, Flex, Text } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { LiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { wei } from '@synthetixio/wei';\nimport { getUSDCAddress, isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useRepayBaseAndromeda } from '../../../../lib/useRepayBaseAndromeda';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport { useCallback, useMemo } from 'react';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { useApprove } from '@snx-v3/useApprove';\nimport { parseUnits } from '@snx-v3/format';\nimport { useSpotMarketProxy } from '../../../../lib/useSpotMarketProxy';\nimport { useTokenBalance } from '@snx-v3/useTokenBalance';\n\nexport const RepayAllDebt = ({ liquidityPosition }: { liquidityPosition: LiquidityPosition }) => {\n  const { network } = useNetwork();\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n  const params = useParams();\n  const [searchParams] = useSearchParams();\n\n  const queryClient = useQueryClient();\n\n  const debtExists = liquidityPosition.debt.gt(0.01);\n  const currentDebt = debtExists ? liquidityPosition.debt : wei(0);\n\n  const { data: SpotMarketProxy } = useSpotMarketProxy();\n\n  const { data: tokenBalance } = useTokenBalance(\n    isBase ? getUSDCAddress(network?.id) : liquidityPosition.tokenAddress\n  );\n\n  const sufficientBalance = useMemo(\n    () => Number(tokenBalance?.toString()) >= currentDebt.toNumber(),\n    [currentDebt, tokenBalance]\n  );\n\n  const {\n    exec: execRepay,\n    settle: settleRepay,\n    isLoading,\n  } = useRepayBaseAndromeda({\n    accountId: searchParams.get('accountId') || '',\n    poolId: params.poolId,\n    collateralTypeAddress: liquidityPosition?.tokenAddress,\n    debtChange: currentDebt,\n    availableUSDCollateral: liquidityPosition.accountCollateral.availableCollateral,\n  });\n\n  const {\n    approve,\n    requireApproval,\n    isLoading: approvalLoading,\n  } = useApprove({\n    contractAddress: getUSDCAddress(network?.id),\n    amount: parseUnits(currentDebt.toString(), 6).add(1),\n    spender: SpotMarketProxy?.address,\n  });\n\n  const submit = useCallback(async () => {\n    try {\n      if (requireApproval) {\n        await approve(false);\n      }\n      await execRepay();\n\n      await Promise.all([\n        queryClient.invalidateQueries({\n          queryKey: [`${network?.id}-${network?.preset}`, 'TokenBalance'],\n        }),\n        queryClient.invalidateQueries({\n          queryKey: [`${network?.id}-${network?.preset}`, 'Allowance'],\n        }),\n        queryClient.invalidateQueries({\n          queryKey: [`${network?.id}-${network?.preset}`, 'LiquidityPosition'],\n        }),\n        queryClient.invalidateQueries({\n          queryKey: [`${network?.id}-${network?.preset}`, 'AccountCollateralUnlockDate'],\n        }),\n      ]);\n\n      settleRepay();\n    } catch (error) {}\n  }, [approve, execRepay, network?.id, network?.preset, queryClient, requireApproval, settleRepay]);\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Text fontSize=\"md\" fontWeight=\"700\" mb=\"0.5\">\n        Repay {isBase ? 'USDC' : 'snxUSD'}\n      </Text>\n      <Text fontSize=\"sm\" color=\"gray.400\" mb=\"4\">\n        Your account currently has a positive debt. This amount must be paid to initiate collateral\n        withdrawal.\n      </Text>\n      <Button\n        isDisabled={!sufficientBalance}\n        isLoading={isLoading || approvalLoading}\n        onClick={submit}\n        data-testid=\"repay\"\n      >\n        Repay USDC $<Amount value={currentDebt} data-testid=\"current debt\" />\n        {sufficientBalance ? '' : '(Insufficient Balance)'}\n      </Button>\n    </Flex>\n  );\n};\n","import { ArrowDownIcon, ArrowUpIcon } from '@chakra-ui/icons';\nimport { Box, Button, Flex } from '@chakra-ui/react';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { BorrowIcon, DollarCircle } from '@snx-v3/icons';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { LiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { useParams } from '@snx-v3/useParams';\nimport { validatePosition } from '@snx-v3/validatePosition';\nimport { wei } from '@synthetixio/wei';\nimport {\n  FC,\n  FormEvent,\n  lazy,\n  PropsWithChildren,\n  Suspense,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { Borrow } from './Borrow';\nimport { Repay } from './Repay';\nimport { Undelegate } from './Undelegate';\nimport { Deposit } from './Deposit';\nimport { z } from 'zod';\nimport { safeImport } from '@synthetixio/safe-import';\nimport { calculateCRatio } from '@snx-v3/calculations';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { RepayAllDebt } from './RepayAllDebt';\n\nconst RepayModal = lazy(() => safeImport(() => import('@snx-v3/RepayModal')));\nconst BorrowModal = lazy(() => safeImport(() => import('@snx-v3/BorrowModal')));\nconst DepositModal = lazy(() => safeImport(() => import('@snx-v3/DepositModal')));\nconst UndelegateModal = lazy(() => safeImport(() => import('@snx-v3/UndelegateModal')));\n\nconst validActions = ['borrow', 'deposit', 'repay', 'undelegate'] as const;\nconst ManageActionSchema = z.enum(validActions);\ntype ManageAction = z.infer<typeof ManageActionSchema>;\n\nconst ActionButton: FC<\n  PropsWithChildren<{\n    onClick?: (action: ManageAction) => void;\n    action: ManageAction;\n    activeAction?: string;\n    disabled?: boolean;\n  }>\n> = ({ children, action, activeAction, onClick, disabled }) => (\n  <BorderBox\n    as={Button}\n    fontWeight=\"700\"\n    fontSize=\"md\"\n    color=\"gray.50\"\n    bg=\"navy.900\"\n    _hover={{\n      bg: 'unset',\n    }}\n    _active={{\n      bg: 'unset',\n    }}\n    cursor={disabled ? 'not-allowed' : 'pointer'}\n    data-testid=\"manage action\"\n    data-action={action}\n    data-active={action === activeAction ? 'true' : undefined}\n    onClick={() => !disabled && onClick?.(action)}\n    py={2}\n    width=\"50%\"\n    textAlign=\"center\"\n    opacity={disabled ? '50%' : '100%'}\n  >\n    {children}\n  </BorderBox>\n);\n\nconst Action: FC<{\n  manageAction: ManageAction;\n  liquidityPosition?: LiquidityPosition;\n  network: Network | null;\n}> = ({ manageAction, liquidityPosition, network }) => {\n  if (liquidityPosition?.debt.gt(0.01) && isBaseAndromeda(network?.id, network?.preset)) {\n    return <RepayAllDebt liquidityPosition={liquidityPosition} />;\n  }\n  switch (manageAction) {\n    case 'borrow':\n      return <Borrow liquidityPosition={liquidityPosition} />;\n    case 'deposit':\n      return <Deposit liquidityPosition={liquidityPosition} />;\n    case 'repay':\n      return <Repay liquidityPosition={liquidityPosition} />;\n    case 'undelegate':\n      return <Undelegate liquidityPosition={liquidityPosition} />;\n\n    default:\n      return null;\n  }\n};\n\nconst ManageActionUi: FC<{\n  setActiveAction: (action: ManageAction) => void;\n  manageAction?: ManageAction;\n  onSubmit: (e: FormEvent) => void;\n  liquidityPosition?: LiquidityPosition;\n  network: Network | null;\n}> = ({ setActiveAction, manageAction, onSubmit, liquidityPosition, network }) => {\n  const debt = Number(liquidityPosition?.debt?.toString());\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n\n  return (\n    <Box as=\"form\" onSubmit={onSubmit}>\n      <Flex mt={2} gap={2}>\n        <ActionButton onClick={setActiveAction} action=\"deposit\" activeAction={manageAction}>\n          <ArrowDownIcon w=\"15px\" h=\"15px\" mr={1} /> Add Collateral\n        </ActionButton>\n        <ActionButton\n          disabled={debt < 0}\n          onClick={setActiveAction}\n          action=\"repay\"\n          activeAction={manageAction}\n        >\n          <DollarCircle mr={1} /> Repay {isBase ? '' : 'snxUSD'}\n        </ActionButton>\n      </Flex>\n      <Flex mt={2} gap={2}>\n        <ActionButton onClick={setActiveAction} action=\"undelegate\" activeAction={manageAction}>\n          <ArrowUpIcon w=\"15px\" h=\"15px\" mr={1} /> Remove Collateral\n        </ActionButton>\n        <ActionButton\n          disabled={debt > 0}\n          onClick={setActiveAction}\n          action=\"borrow\"\n          activeAction={manageAction}\n        >\n          <BorrowIcon mr={1} /> {isBase ? 'Claim' : 'Borrow snxUSD'}\n        </ActionButton>\n      </Flex>\n      {manageAction ? (\n        <Flex direction=\"column\" mt={6}>\n          <Action\n            manageAction={manageAction}\n            liquidityPosition={liquidityPosition}\n            network={network}\n          />\n        </Flex>\n      ) : null}\n    </Box>\n  );\n};\n\nexport const ManageAction = ({ liquidityPosition }: { liquidityPosition?: LiquidityPosition }) => {\n  const params = useParams();\n  const { network } = useNetwork();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const [txnModalOpen, setTxnModalOpen] = useState<ManageAction | null>(null);\n  const { debtChange, collateralChange, setCollateralChange, setDebtChange } =\n    useContext(ManagePositionContext);\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n\n  const { isValid } = validatePosition({\n    issuanceRatioD18: collateralType?.issuanceRatioD18,\n    collateralAmount: liquidityPosition?.collateralAmount,\n    collateralPrice: liquidityPosition?.collateralPrice,\n    debt: liquidityPosition?.debt,\n    collateralChange,\n    debtChange,\n  });\n\n  const parsedActionParam = ManageActionSchema.safeParse(params.manageAction);\n  const parsedAction = parsedActionParam.success ? parsedActionParam.data : null;\n\n  const onSubmit = useCallback(\n    (e: FormEvent) => {\n      e.preventDefault();\n      const form = e.target as HTMLFormElement;\n      if (!form.reportValidity() || !isValid) {\n        return;\n      }\n      setTxnModalOpen(parsedAction);\n    },\n    [isValid, parsedAction]\n  );\n\n  useEffect(() => {\n    // This is just for initial state, if we have a manage action selected return\n    const queryParams = new URLSearchParams(location.search);\n\n    if (queryParams.get('manageAction')) return;\n    if (!liquidityPosition) return;\n    if (!collateralType) return;\n\n    const cRatio = calculateCRatio(liquidityPosition.debt, liquidityPosition.collateralValue);\n    const canBorrow = liquidityPosition.debt.eq(0) || cRatio.gt(collateralType.issuanceRatioD18);\n\n    if (canBorrow) {\n      queryParams.set('manageAction', 'borrow');\n      navigate({ pathname: location.pathname, search: queryParams.toString() }, { replace: true });\n      return;\n    }\n\n    const cRatioIsCloseToLiqRatio = cRatio.mul(0.9).lt(collateralType.liquidationRatioD18);\n\n    if (cRatioIsCloseToLiqRatio) {\n      queryParams.set(\n        'manageAction',\n        isBaseAndromeda(network?.id, network?.preset) ? 'deposit' : 'repay'\n      );\n      navigate({ pathname: location.pathname, search: queryParams.toString() }, { replace: true });\n      return;\n    }\n\n    queryParams.set('manageAction', 'deposit');\n    navigate({ pathname: location.pathname, search: queryParams.toString() }, { replace: true });\n  }, [\n    collateralType,\n    liquidityPosition,\n    location.pathname,\n    location.search,\n    navigate,\n    network?.id,\n    network?.preset,\n  ]);\n\n  return (\n    <>\n      <ManageActionUi\n        liquidityPosition={liquidityPosition}\n        onSubmit={onSubmit}\n        network={network}\n        setActiveAction={(action) => {\n          setCollateralChange(wei(0));\n          setDebtChange(wei(0));\n          const queryParams = new URLSearchParams(location.search);\n          queryParams.set('manageAction', action);\n          navigate(\n            { pathname: location.pathname, search: queryParams.toString() },\n            { replace: true }\n          );\n        }}\n        manageAction={parsedAction || undefined}\n      />\n      <Suspense fallback={null}>\n        {txnModalOpen === 'repay' ? (\n          <RepayModal\n            availableCollateral={liquidityPosition?.usdCollateral.availableCollateral}\n            onClose={() => {\n              setCollateralChange(wei(0));\n              setDebtChange(wei(0));\n              setTxnModalOpen(null);\n            }}\n            isOpen={txnModalOpen === 'repay'}\n          />\n        ) : null}\n        {txnModalOpen === 'borrow' ? (\n          <BorrowModal\n            onClose={() => {\n              setCollateralChange(wei(0));\n              setDebtChange(wei(0));\n              setTxnModalOpen(null);\n            }}\n            isOpen={txnModalOpen === 'borrow'}\n          />\n        ) : null}\n        {txnModalOpen === 'deposit' ? (\n          <DepositModal\n            availableCollateral={liquidityPosition?.accountCollateral.availableCollateral}\n            currentCollateral={liquidityPosition?.collateralAmount ?? wei(0)}\n            collateralChange={collateralChange}\n            onClose={() => {\n              setCollateralChange(wei(0));\n              setDebtChange(wei(0));\n              setTxnModalOpen(null);\n            }}\n            isOpen={txnModalOpen === 'deposit'}\n          />\n        ) : null}\n        {txnModalOpen === 'undelegate' ? (\n          <UndelegateModal\n            liquidityPosition={liquidityPosition}\n            onClose={() => {\n              setCollateralChange(wei(0));\n              setDebtChange(wei(0));\n              setTxnModalOpen(null);\n            }}\n            isOpen={txnModalOpen === 'undelegate'}\n          />\n        ) : null}\n      </Suspense>\n    </>\n  );\n};\n","import { FC, useContext } from 'react';\nimport { Flex, Skeleton, Text, Tooltip } from '@chakra-ui/react';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { currency } from '@snx-v3/format';\nimport { LiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { CollateralType, useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useParams } from '@snx-v3/useParams';\nimport { validatePosition } from '@snx-v3/validatePosition';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { ArrowForwardIcon, InfoIcon } from '@chakra-ui/icons';\nimport { calculateCRatio } from '@snx-v3/calculations';\nimport { constants } from 'ethers';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { useNetwork } from '@snx-v3/useBlockchain';\n\nconst ChangeStat: FC<{\n  value: Wei;\n  newValue: Wei;\n  hasChanges: boolean;\n  formatFn: (val: Wei) => string;\n}> = ({ formatFn, value, newValue, hasChanges }) => {\n  return (\n    <Flex\n      gap={1}\n      color=\"gray.50\"\n      fontSize=\"2xl\"\n      fontWeight=\"800\"\n      alignItems=\"center\"\n      lineHeight=\"32px\"\n    >\n      <Text>{formatFn(value)}</Text>\n      {hasChanges && !value.eq(newValue) ? (\n        <Text>\n          <ArrowForwardIcon /> {formatFn(newValue)}\n        </Text>\n      ) : null}\n    </Flex>\n  );\n};\n\nexport const ManageStatsUi: FC<{\n  liquidityPosition?: LiquidityPosition;\n  collateralType?: CollateralType;\n  newCratio: Wei;\n  newCollateralAmount: Wei;\n  newDebt: Wei;\n  cRatio: Wei;\n  collateralValue: Wei;\n  hasChanges: boolean;\n}> = ({\n  liquidityPosition,\n  collateralType,\n  collateralValue,\n  cRatio,\n  newCollateralAmount,\n  newCratio,\n  newDebt,\n  hasChanges,\n}) => {\n  const { network } = useNetwork();\n\n  return (\n    <Flex direction=\"column\">\n      <BorderBox py={4} px={6} flexDirection=\"column\" bg=\"navy.700\" mb={4}>\n        <Flex alignItems=\"center\" mb=\"4px\">\n          <Text color=\"gray.500\" fontSize=\"xs\" fontFamily=\"heading\" lineHeight=\"16px\">\n            COLLATERAL\n          </Text>\n          <Tooltip\n            label=\"Your total amount of collateral locked in this pool.\"\n            textAlign=\"start\"\n            py={2}\n            px={3}\n          >\n            <Flex height=\"12px\" width=\"12px\" ml=\"4px\" alignItems=\"center\" justifyContent=\"center\">\n              <InfoIcon color=\"white\" height=\"9px\" width=\"9px\" />\n            </Flex>\n          </Tooltip>\n        </Flex>\n        {liquidityPosition && collateralType ? (\n          <>\n            <Flex\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n              data-testid=\"manage stats collateral\"\n            >\n              <ChangeStat\n                value={liquidityPosition.collateralAmount}\n                newValue={newCollateralAmount}\n                formatFn={(val: Wei) => `${currency(val)} ${collateralType.displaySymbol}`}\n                hasChanges={hasChanges}\n              />\n              <Text\n                fontWeight=\"400\"\n                color=\"gray.500\"\n                fontSize=\"md\"\n                fontFamily=\"heading\"\n                lineHeight=\"24px\"\n              >\n                {currency(liquidityPosition.collateralValue, {\n                  currency: 'USD',\n                  style: 'currency',\n                })}\n              </Text>\n            </Flex>\n            <Text fontWeight=\"400\" color=\"gray.500\" fontSize=\"xs\">\n              Current Value:{' '}\n              {currency(collateralValue, {\n                currency: 'USD',\n                style: 'currency',\n              })}\n            </Text>\n          </>\n        ) : (\n          <Skeleton width=\"100%\">Lorem ipsum (this wont be displayed) </Skeleton>\n        )}\n      </BorderBox>\n      <BorderBox\n        py={4}\n        px={6}\n        flexDirection=\"row\"\n        bg=\"navy.700\"\n        justifyContent=\"space-between\"\n        mb={4}\n      >\n        <Flex flexDirection=\"column\" justifyContent=\"space-between\" width=\"100%\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <Text color=\"gray.500\" fontSize=\"xs\" fontFamily=\"heading\" lineHeight=\"16px\">\n              DEBT\n            </Text>\n            <Tooltip label=\"Your minted debt balance.\" textAlign=\"start\" py={2} px={3}>\n              <Flex height=\"12px\" width=\"12px\" ml=\"4px\" alignItems=\"center\" justifyContent=\"center\">\n                <InfoIcon color=\"white\" height=\"9px\" width=\"9px\" />\n              </Flex>\n            </Tooltip>\n          </Flex>\n          <Flex width=\"100%\" data-testid=\"manage stats debt\">\n            {liquidityPosition && collateralType ? (\n              <ChangeStat\n                value={liquidityPosition.debt}\n                newValue={newDebt}\n                formatFn={(val: Wei) =>\n                  currency(val, {\n                    currency: 'USD',\n                    style: 'currency',\n                    maximumFractionDigits: 8,\n                  })\n                }\n                hasChanges={hasChanges}\n              />\n            ) : (\n              <Skeleton width=\"100%\">Lorem ipsum (this wont be displaye debt) </Skeleton>\n            )}\n          </Flex>\n        </Flex>\n      </BorderBox>\n      {!isBaseAndromeda(network?.id, network?.preset) && (\n        <BorderBox py={4} px={6} flexDirection=\"column\" bg=\"navy.700\" my={0} mb={4}>\n          <Text color=\"gray.500\" fontSize=\"xs\" fontFamily=\"heading\" lineHeight=\"16px\" mb=\"4px\">\n            C-RATIO\n          </Text>\n          <Flex\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n            data-testid=\"manage stats collateral\"\n          >\n            {liquidityPosition && collateralType ? (\n              <>\n                <ChangeStat\n                  // TODO, need a function to burn to target so dust debt not left over\n                  value={cRatio.lt(0.01) || cRatio.gt(50000) ? wei(0) : cRatio}\n                  newValue={newCratio}\n                  formatFn={(val: Wei) =>\n                    currency(val, {\n                      style: 'percent',\n                      minimumFractionDigits: 2,\n                      maximumFractionDigits: 2,\n                    })\n                  }\n                  hasChanges={hasChanges}\n                />\n                <Text\n                  fontWeight=\"400\"\n                  color=\"gray.500\"\n                  fontSize=\"md\"\n                  fontFamily=\"heading\"\n                  lineHeight=\"24px\"\n                >\n                  {collateralType.issuanceRatioD18.eq(constants.MaxUint256)\n                    ? 'N/A'\n                    : `Minimum ${currency(collateralType.issuanceRatioD18, {\n                        style: 'percent',\n                        minimumFractionDigits: 2,\n                        maximumFractionDigits: 2,\n                      })}`}\n                </Text>\n              </>\n            ) : (\n              <Skeleton width=\"100%\">Lorem ipsum (this wont be displayed) </Skeleton>\n            )}\n          </Flex>\n        </BorderBox>\n      )}\n    </Flex>\n  );\n};\n\nexport const ManageStats = ({ liquidityPosition }: { liquidityPosition?: LiquidityPosition }) => {\n  const params = useParams();\n  const { debtChange, collateralChange } = useContext(ManagePositionContext);\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n\n  const collateralValue = liquidityPosition?.collateralValue || wei(0);\n\n  const cRatio = calculateCRatio(liquidityPosition?.debt || wei(0), collateralValue);\n  const { newCRatio, newCollateralAmount, newDebt, hasChanges } = validatePosition({\n    issuanceRatioD18: collateralType?.issuanceRatioD18,\n    collateralAmount: liquidityPosition?.collateralAmount,\n    collateralPrice: liquidityPosition?.collateralPrice,\n    debt: liquidityPosition?.debt,\n    collateralChange: collateralChange,\n    debtChange: debtChange,\n  });\n\n  return (\n    <ManageStatsUi\n      hasChanges={hasChanges}\n      newCratio={newCRatio}\n      newDebt={newDebt}\n      newCollateralAmount={newCollateralAmount}\n      liquidityPosition={liquidityPosition}\n      collateralType={collateralType}\n      cRatio={cRatio}\n      collateralValue={collateralValue}\n    />\n  );\n};\n","import { Link as ReactRouterLink, useLocation } from 'react-router-dom';\nimport { Link } from '@chakra-ui/react';\nimport { ArrowBackIcon } from '@chakra-ui/icons';\n\nexport const HomeLink = () => {\n  const location = useLocation();\n  return (\n    <Link\n      width=\"fit-content\"\n      display=\"flex\"\n      alignItems=\"center\"\n      color=\"cyan.500\"\n      as={ReactRouterLink}\n      to={{\n        pathname: '/',\n        search: location.search,\n      }}\n      fontSize=\"sm\"\n      fontWeight={700}\n      mb={2}\n    >\n      <ArrowBackIcon mr={1} /> Home\n    </Link>\n  );\n};\n","export function etherscanLink({ chain, address }: { chain: string; address: string }): string {\n  switch (chain) {\n    case 'goerli':\n      return `https://goerli.etherscan.io/address/${address}`;\n    case 'sepolia':\n      return `https://sepolia.etherscan.io/address/${address}`;\n    case 'optimism-goerli':\n      return `https://goerli-optimism.etherscan.io/address/${address}`;\n    case 'optimism':\n      return `https://optimistic.etherscan.io/address/${address}`;\n    case 'base':\n      return `https://basescan.org/tx/${address}`;\n    case 'base-goerli':\n      return `https://goerli.basescan.org/tx/${address}`;\n\n    case 'mainnet':\n    default:\n      return `https://etherscan.io/address/${address}`;\n  }\n}\n","import { CheckIcon, CloseIcon } from '@chakra-ui/icons';\nimport {\n  ModalContent,\n  ModalBody,\n  ModalHeader,\n  Modal,\n  Text,\n  Flex,\n  ModalOverlay,\n  CircularProgress,\n  Link,\n  Button,\n} from '@chakra-ui/react';\nimport { useEffect, useState } from 'react';\nimport { etherscanLink } from '@snx-v3/etherscanLink';\nimport { useNetwork } from '@snx-v3/useBlockchain';\n\ninterface RewardsModalInterface {\n  collateralSymbol?: string;\n  amount?: number;\n  txnStatus?: string;\n  txnHash: string | null;\n}\n\nexport const RewardsModal = ({\n  collateralSymbol,\n  amount,\n  txnStatus,\n  txnHash,\n}: RewardsModalInterface) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const { network } = useNetwork();\n\n  useEffect(() => {\n    if (txnStatus === 'prompting') {\n      setIsOpen(true);\n    }\n    if (txnStatus === 'error') {\n      setIsOpen(false);\n    }\n    if (txnStatus === 'success') {\n      setTimeout(() => {\n        setIsOpen(false);\n      }, 1200);\n    }\n  }, [txnStatus]);\n\n  return (\n    <Modal isOpen={isOpen} onClose={() => setIsOpen(false)}>\n      <ModalOverlay bg=\"#06061B80\" />\n      <ModalContent\n        bg=\"navy.700\"\n        mt=\"10%\"\n        borderWidth=\"1px\"\n        borderColor=\"gray.900\"\n        minWidth=\"384px\"\n      >\n        <ModalBody p={4}>\n          <Flex\n            onClick={() => setIsOpen(false)}\n            justifyContent=\"flex-end\"\n            border=\"none\"\n            boxShadow=\"none\"\n            _focus={{ outline: 'none' }}\n          >\n            <CloseIcon _hover={{ cursor: 'pointer' }} />\n          </Flex>\n          <ModalHeader\n            pl={0}\n            py={1}\n            color=\"whiteAlpha.900\"\n            fontSize=\"20px\"\n            fontWeight={700}\n            lineHeight=\"120%\"\n            textAlign=\"left\"\n          >\n            Transaction Pending\n          </ModalHeader>\n          <Text\n            p={3}\n            pl={0}\n            color=\"gray.600\"\n            fontFamily=\"heading\"\n            fontSize=\"12px\"\n            lineHeight=\"150%\"\n            mb={2}\n          >\n            Follow the Metamask prompts to execute the following transactions.\n          </Text>\n          <Flex\n            px={3}\n            py={3}\n            borderRadius=\"5px\"\n            border=\"1px solid\"\n            borderColor={txnStatus === 'success' ? 'green.500' : 'gray.900'}\n          >\n            <Flex\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              borderRadius=\"100px\"\n              bg={txnStatus === 'success' ? 'green.600' : 'gray.900'}\n              width=\"40px\"\n              height=\"40px\"\n              p={3}\n            >\n              {txnStatus === 'success' ? (\n                <CheckIcon color=\"white\" />\n              ) : (\n                <CircularProgress size=\"25px\" isIndeterminate color=\"gray.700\" />\n              )}\n            </Flex>\n            <Flex\n              flexDirection=\"column\"\n              alignItems=\"space-between\"\n              justifyContent=\"space-between\"\n              ml={2}\n            >\n              <Text fontSize=\"14px\" fontWeight={700} lineHeight=\"20px\" color=\"white\">\n                Claiming {amount ? amount : ''} {collateralSymbol ? collateralSymbol : ''}\n              </Text>\n              <Text fontSize=\"12px\" lineHeight=\"16px\" color=\"gray.500\">\n                Claim your rewards\n              </Text>\n            </Flex>\n          </Flex>\n          {txnStatus === 'success' && (\n            <Button\n              mt={5}\n              variant=\"solid\"\n              justifyContent=\"center\"\n              px={3}\n              py={3}\n              width=\"100%\"\n              textAlign=\"center\"\n            >\n              Done\n            </Button>\n          )}\n          {txnHash && (\n            <Flex\n              justifyContent=\"center\"\n              px={3}\n              py={3}\n              mt={6}\n              mb={1}\n              borderTop=\"1px solid\"\n              borderTopColor=\"gray.900\"\n            >\n              <Link\n                variant=\"outline\"\n                href={etherscanLink({ chain: network?.name || '', address: txnHash })}\n                fontFamily=\"heading\"\n                color=\"cyan.500\"\n                fontWeight={700}\n                lineHeight=\"20px\"\n                fontSize=\"14px\"\n                target=\"_blank\"\n                mt={3}\n              >\n                View Transaction\n              </Link>\n            </Flex>\n          )}\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n","export const truncateAddress = (address: string, first = 5, last = 5) => {\n  if (address.length <= first + last) {\n    return address;\n  }\n  return `${address.slice(0, first)}...${address.slice(-last)}`;\n};\n\nexport const parseFloatWithCommas = (numberWithCommas: string) =>\n  parseFloat(numberWithCommas.replaceAll(',', ''));\n","import { Flex, Td, Text, Button, Fade, Tr, Tooltip } from '@chakra-ui/react';\nimport { CollateralIcon } from '@snx-v3/icons';\nimport { useClaimRewards } from '@snx-v3/useClaimRewards';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useParams } from '@snx-v3/useParams';\nimport { RewardsModal } from './RewardsModal';\nimport { truncateAddress, convertSecondsToDisplayString } from '@snx-v3/formatters';\nimport { Amount } from '@snx-v3/Amount';\nimport { wei } from '@synthetixio/wei';\n\ninterface RewardsRowInterface {\n  symbol: string;\n  projectedAmount: number; // The amount per frequency period\n  frequency: number;\n  claimableAmount: number; // The immediate amount claimable as read from the contracts\n  lifetimeClaimed: number;\n  hasClaimed: boolean;\n  address: string;\n  readOnly: boolean;\n  total: number;\n}\n\nexport const RewardsRow = ({\n  symbol,\n  frequency,\n  claimableAmount,\n  lifetimeClaimed,\n  hasClaimed,\n  address,\n  readOnly,\n  total,\n}: RewardsRowInterface) => {\n  const { accountId, collateralSymbol, poolId } = useParams();\n\n  const { data: collateralData } = useCollateralType(collateralSymbol);\n\n  const { exec, txnState } = useClaimRewards(\n    poolId || '',\n    collateralData?.tokenAddress || '',\n    accountId,\n    address,\n    claimableAmount\n  );\n\n  const onClick = () => {\n    exec();\n  };\n\n  const { txnStatus, txnHash } = txnState;\n\n  const frequencyString = convertSecondsToDisplayString(frequency);\n\n  const claimButtonLabel = () => {\n    if (claimableAmount > 0 || !hasClaimed) {\n      return 'Claim';\n    }\n\n    return 'Claimed';\n  };\n\n  // Note adjustment will need to be made for decimals\n  const totalAmount = total / 1e18;\n\n  return (\n    <>\n      <RewardsModal\n        amount={claimableAmount}\n        collateralSymbol={symbol}\n        txnStatus={txnStatus}\n        txnHash={txnHash}\n      />\n      <Tr>\n        <Td display=\"flex\" alignItems=\"center\" px=\"14px\" border=\"none\" w=\"100%\">\n          <Fade in>\n            <CollateralIcon height=\"30px\" width=\"30px\" symbol={symbol} />\n          </Fade>\n          <Fade in>\n            <Flex flexDirection=\"column\" ml=\"12px\">\n              <Tooltip label={`Distributed by ${truncateAddress(address)}`}>\n                <Text\n                  color=\"gray.50\"\n                  fontSize=\"14px\"\n                  fontFamily=\"heading\"\n                  fontWeight={500}\n                  lineHeight=\"20px\"\n                >\n                  <Amount value={wei(totalAmount)} />\n                  {` ${symbol}`}\n                </Text>\n              </Tooltip>\n              {frequencyString && (\n                <Text color=\"gray.500\" fontSize=\"12px\" fontFamily=\"heading\" lineHeight=\"16px\">\n                  {frequencyString}\n                </Text>\n              )}\n            </Flex>\n          </Fade>\n        </Td>\n        <Td alignItems=\"center\" px=\"14px\" border=\"none\">\n          <Fade in>\n            <Text\n              color=\"gray.50\"\n              fontSize=\"14px\"\n              fontFamily=\"heading\"\n              fontWeight={500}\n              lineHeight=\"20px\"\n            >\n              <Amount value={wei(claimableAmount)} />\n              {` ${symbol}`}\n            </Text>\n            {lifetimeClaimed > 0 && (\n              <Text color=\"gray.500\" fontSize=\"12px\" fontFamily=\"heading\" lineHeight=\"16px\">\n                <Tooltip label=\"Total claimed over lifetime\">Lifetime: &nbsp;</Tooltip>\n                <Amount value={wei(lifetimeClaimed.toString(), 18, true)} />\n                {symbol}\n              </Text>\n            )}\n          </Fade>\n        </Td>\n        {!readOnly && (\n          <Td border=\"none\" px=\"0px\">\n            <Fade in>\n              <Button\n                w=\"100%\"\n                size=\"sm\"\n                variant=\"solid\"\n                isDisabled={claimableAmount === 0}\n                _disabled={{\n                  bg: 'gray.900',\n                  backgroundImage: 'none',\n                  color: 'gray.500',\n                  opacity: 0.5,\n                  cursor: 'not-allowed',\n                }}\n                onClick={onClick}\n              >\n                {claimButtonLabel()}\n              </Button>\n            </Fade>\n          </Td>\n        )}\n      </Tr>\n    </>\n  );\n};\n","import { useReducer } from 'react';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { BigNumber } from 'ethers';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport { useNetwork } from '@snx-v3/useBlockchain';\n\nexport function useClaimRewards(\n  poolId?: string,\n  collateralAddress?: string,\n  accountId?: string,\n  distributorAddress?: string,\n  amount?: number\n) {\n  const { network } = useNetwork();\n  const { data: CoreProxy } = useCoreProxy();\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n  const client = useQueryClient();\n\n  const mutation = useMutation({\n    mutationFn: async function () {\n      try {\n        if (!amount) return;\n        if (!poolId || !collateralAddress || !accountId || !distributorAddress || !network)\n          throw new Error('Parameters Undefined');\n        if (!CoreProxy) throw new Error('CoreProxy undefined');\n\n        dispatch({ type: 'prompting' });\n\n        const tx = await CoreProxy.claimRewards(\n          BigNumber.from(accountId),\n          BigNumber.from(poolId),\n          collateralAddress,\n          distributorAddress\n        );\n\n        dispatch({ type: 'pending', payload: { txnHash: tx.hash } });\n\n        const res = await tx.wait();\n\n        let claimedAmount: BigNumber | undefined;\n\n        res.logs.forEach((log: any) => {\n          if (log.topics[0] === CoreProxy.interface.getEventTopic('RewardsClaimed')) {\n            const { amount } = CoreProxy.interface.decodeEventLog(\n              'RewardsClaimed',\n              log.data,\n              log.topics\n            );\n            claimedAmount = amount;\n          }\n        });\n\n        dispatch({ type: 'success' });\n        client.invalidateQueries({ queryKey: [`${network?.id}-${network?.preset}`, 'Rewards'] });\n        return claimedAmount;\n      } catch (error) {\n        const err = error as Error;\n        dispatch({ type: 'error', payload: { error: err } });\n\n        return 0;\n      }\n    },\n  });\n\n  return {\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n}\n","import { Tbody, Tr, Td, SkeletonCircle, Skeleton, Text } from '@chakra-ui/react';\n\nexport const RewardsLoading = () => (\n  <Tbody width=\"100%\">\n    <Tr borderBottom=\"1px solid #2D2D38\">\n      <Td pl=\"16px\" border=\"none\">\n        <SkeletonCircle startColor=\"whiteAlpha.500\" endColor=\"whiteAlpha.200\" h=\"30px\" w=\"30px\" />\n      </Td>\n      <Td pl=\"16px\" border=\"none\">\n        <Skeleton startColor=\"whiteAlpha.500\" endColor=\"whiteAlpha.200\" height=\"30px\">\n          <Text mr={4}>Loading</Text>\n        </Skeleton>\n      </Td>\n      <Td textAlign=\"end\" pr=\"0px\" border=\"none\">\n        <Skeleton startColor=\"whiteAlpha.500\" endColor=\"whiteAlpha.200\" height=\"30px\">\n          <Text>Loading</Text>\n        </Skeleton>\n      </Td>\n    </Tr>\n    <Tr borderBottom=\"1px solid #2D2D38\">\n      <Td pl=\"16px\" border=\"none\">\n        <SkeletonCircle startColor=\"whiteAlpha.200\" endColor=\"whiteAlpha.500\" h=\"30px\" w=\"30px\" />\n      </Td>\n      <Td pl=\"16px\" border=\"none\">\n        <Skeleton startColor=\"whiteAlpha.200\" endColor=\"whiteAlpha.500\" height=\"30px\">\n          <Text mr={4}>Loading</Text>\n        </Skeleton>\n      </Td>\n      <Td textAlign=\"end\" pr=\"0px\" border=\"none\">\n        <Skeleton startColor=\"whiteAlpha.200\" endColor=\"whiteAlpha.500\" height=\"30px\">\n          <Text>Loading</Text>\n        </Skeleton>\n      </Td>\n    </Tr>\n    <Tr borderBottom=\"1px solid #2D2D38\">\n      <Td pl=\"16px\" border=\"none\">\n        <SkeletonCircle startColor=\"whiteAlpha.500\" endColor=\"whiteAlpha.200\" h=\"30px\" w=\"30px\" />\n      </Td>\n      <Td pl=\"16px\" border=\"none\">\n        <Skeleton startColor=\"whiteAlpha.500\" endColor=\"whiteAlpha.200\" height=\"30px\">\n          <Text mr={4}>Loading</Text>\n        </Skeleton>\n      </Td>\n      <Td textAlign=\"end\" pr=\"0px\" border=\"none\">\n        <Skeleton startColor=\"whiteAlpha.500\" endColor=\"whiteAlpha.200\" height=\"30px\">\n          <Text>Loading</Text>\n        </Skeleton>\n      </Td>\n    </Tr>\n  </Tbody>\n);\n","import {\n  Table,\n  TableContainer,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  Flex,\n  Fade,\n  FlexProps,\n  Tooltip,\n} from '@chakra-ui/react';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { RewardsRow } from './RewardsRow';\nimport { RewardsType } from '@snx-v3/useRewards';\nimport { RewardsLoading } from './RewardsLoading';\nimport { InfoIcon } from '@chakra-ui/icons';\n\ninterface RewardsDistributorsInterface extends FlexProps {\n  rewards?: RewardsType;\n  isLoading: boolean;\n  readOnly?: boolean;\n}\n\nexport const Rewards = ({\n  rewards,\n  isLoading,\n  readOnly = false,\n  ...props\n}: RewardsDistributorsInterface) => {\n  const empty = rewards && rewards.length === 0;\n\n  return (\n    <BorderBox bg=\"navy.700\" py={4} px={6} flexDir=\"column\" {...props}>\n      <Text color=\"gray.500\" fontFamily=\"heading\" lineHeight=\"4\" fontSize=\"xs\" mb=\"8px\">\n        REWARDS\n      </Text>\n      <TableContainer width=\"100%\" mb=\"8px\">\n        {empty ? (\n          <Fade in>\n            <Flex mt=\"20px\" mb=\"8px\" justifyContent=\"center\">\n              <Text color=\"gray.500\" fontFamily=\"heading\" lineHeight=\"4\" fontSize=\"xs\">\n                No Rewards Available\n              </Text>\n            </Flex>\n          </Fade>\n        ) : (\n          <Table>\n            <Thead>\n              <Tr borderBottom=\"1px solid #2D2D38\">\n                <Th\n                  textTransform=\"unset\"\n                  color=\"gray.600\"\n                  border=\"none\"\n                  fontFamily=\"heading\"\n                  fontSize=\"12px\"\n                  lineHeight=\"16px\"\n                  letterSpacing={0.6}\n                  fontWeight={700}\n                  px={4}\n                  py={3}\n                >\n                  Estimated Rate\n                  <Tooltip label=\"Estimated rewards based on your position size\">\n                    <InfoIcon ml={1} mb=\"1px\" />\n                  </Tooltip>\n                </Th>\n                <Th\n                  textTransform=\"unset\"\n                  color=\"gray.600\"\n                  border=\"none\"\n                  fontFamily=\"heading\"\n                  fontSize=\"12px\"\n                  lineHeight=\"16px\"\n                  letterSpacing={0.6}\n                  fontWeight={700}\n                  px={4}\n                  py={3}\n                >\n                  Earnings\n                </Th>\n                <Th\n                  textTransform=\"unset\"\n                  color=\"transparent\"\n                  border=\"none\"\n                  fontFamily=\"heading\"\n                  fontSize=\"12px\"\n                  lineHeight=\"16px\"\n                  letterSpacing={0.6}\n                  fontWeight={700}\n                  px={4}\n                  py={3}\n                >\n                  Claim\n                </Th>\n              </Tr>\n            </Thead>\n            {isLoading ? (\n              <RewardsLoading />\n            ) : (\n              <Tbody>\n                {rewards?.map((item) => (\n                  <RewardsRow\n                    key={item.address}\n                    symbol={item.symbol}\n                    claimableAmount={item.claimableAmount.toNumber()}\n                    frequency={item.duration}\n                    projectedAmount={item.rate / item.duration || 0}\n                    lifetimeClaimed={item.lifetimeClaimed}\n                    hasClaimed={item.lifetimeClaimed > 0}\n                    address={item.distributorAddress}\n                    readOnly={readOnly}\n                    total={item.total}\n                  />\n                ))}\n              </Tbody>\n            )}\n          </Table>\n        )}\n      </TableContainer>\n    </BorderBox>\n  );\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { getSubgraphUrl } from '@snx-v3/constants';\nimport { z } from 'zod';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { useNetwork } from '@snx-v3/useBlockchain';\n\nconst GraphBigIntSchema = z.string().transform((src) => wei(src, 18, true));\nconst GraphBigDecimalSchema = z.string().transform((src) => wei(src, 18, true));\n\nconst calculateMarketPnl = (netIssuance: Wei, reportedDebt: Wei) =>\n  reportedDebt.add(netIssuance).mul(-1);\n\nexport const MarketSnapshotByWeekSchema = z\n  .object({\n    id: z.string(),\n    usd_deposited: GraphBigDecimalSchema,\n    usd_withdrawn: GraphBigDecimalSchema,\n    net_issuance: GraphBigDecimalSchema, // withdrawn - deposited\n    reported_debt: GraphBigDecimalSchema,\n    updated_at: z.string(),\n    updates_in_period: z.string(),\n  })\n  .transform((market) => ({\n    ...market,\n    pnl: calculateMarketPnl(market.net_issuance, market.reported_debt),\n  }));\n\nconst MarketSchema = z\n  .object({\n    id: z.string(),\n    address: z.string(),\n    usd_deposited: GraphBigDecimalSchema,\n    usd_withdrawn: GraphBigDecimalSchema,\n    net_issuance: GraphBigDecimalSchema, // withdrawn - deposited\n    reported_debt: GraphBigDecimalSchema,\n    updated_at: z.string(),\n    market_snapshots_by_week: z.array(MarketSnapshotByWeekSchema),\n  })\n  .transform((market) => ({\n    ...market,\n    pnl: calculateMarketPnl(market.net_issuance, market.reported_debt),\n  }));\n\nconst MarketConfigurationSchema = z.object({\n  id: z.string(), //PoolId-MarketId\n  market: MarketSchema,\n  weight: GraphBigIntSchema,\n  max_debt_share_value: GraphBigDecimalSchema,\n});\n\nconst RewardDistributorSchema = z.object({\n  id: z.string(),\n  total_distributed: z.string(),\n  rewards_distributions: z\n    .array(\n      z.object({\n        amount: z.string(),\n        duration: z.string(),\n      })\n    )\n    .default([]),\n});\n\nexport const PoolSchema = z.object({\n  id: z.string(),\n  name: z.union([z.string(), z.null()]).transform((name) => (name ? name : 'Unnamed Pool')),\n  total_weight: z.union([z.null(), GraphBigIntSchema]),\n  configurations: z.array(MarketConfigurationSchema),\n  registered_distributors: z.array(RewardDistributorSchema).default([]),\n});\n\nexport type PoolType = z.infer<typeof PoolSchema>;\n\nconst PoolDataResultSchema = z.object({\n  data: z.object({\n    pool: z.union([PoolSchema, z.null()]),\n  }),\n});\n\nconst gql = (data: TemplateStringsArray) => data[0];\n\nconst PoolsDataDocument = gql`\n  query pool($id: String) {\n    pool(id: $id) {\n      id\n      name\n      registered_distributors(where: { isActive: true }) {\n        id\n        total_distributed\n        rewards_distributions(orderBy: duration, orderDirection: desc) {\n          amount\n          duration\n        }\n      }\n      total_weight\n      configurations {\n        id\n        weight\n        max_debt_share_value\n        market {\n          id\n          address\n          usd_deposited\n          usd_withdrawn\n          net_issuance\n          reported_debt\n          updated_at\n          market_snapshots_by_week(first: 2, orderBy: updated_at, orderDirection: desc) {\n            id\n            usd_deposited\n            usd_withdrawn\n            net_issuance\n            reported_debt\n            updated_at\n            updates_in_period\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst getPoolData = async (chainName: string, id: string) => {\n  const url = getSubgraphUrl(chainName);\n\n  const res = await fetch(url, {\n    method: 'POST',\n    body: JSON.stringify({ query: PoolsDataDocument, variables: { id } }),\n  });\n\n  const json = await res.json();\n\n  if (json.errors) {\n    const { message } = json.errors[0];\n    throw new Error(message);\n  }\n  return PoolDataResultSchema.parse(json);\n};\n\nexport const usePoolData = (poolId?: string) => {\n  const { network } = useNetwork();\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'PoolData', { pool: poolId }],\n    queryFn: async () => {\n      if (!poolId || !network) throw Error('No poolId or network');\n      const poolData = await getPoolData(network?.name, poolId);\n\n      if (!poolData.data.pool) {\n        throw Error(`Pool ${poolId} not found`);\n      }\n\n      return poolData.data.pool;\n    },\n    enabled: Boolean(poolId && parseInt(poolId) > 0),\n  });\n};\n","import { useMulticall3 } from '@snx-v3/useMulticall3';\nimport { useQuery } from '@tanstack/react-query';\nimport { utils, BigNumber } from 'ethers';\nimport { Wei, wei } from '@synthetixio/wei';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { z } from 'zod';\nimport { getSubgraphUrl } from '@snx-v3/constants';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { importRewardDistributor } from '@synthetixio/v3-contracts';\n\nconst RewardsResponseSchema = z.array(\n  z.object({\n    address: z.string(),\n    name: z.string(),\n    symbol: z.string(),\n    claimableAmount: z.instanceof(Wei),\n    distributorAddress: z.string(),\n    rate: z.number(),\n    duration: z.number(),\n    lifetimeClaimed: z.number(),\n    total: z.number(),\n    decimals: z.number(),\n  })\n);\n\ntype RewardsResponseArray = typeof RewardsResponseSchema._type;\n\nexport type RewardsType = z.infer<typeof RewardsResponseSchema>;\n\ntype RewardsInterface = {\n  id: string;\n  total_distributed: string;\n  rewards_distributions: {\n    amount: string;\n    duration: string;\n  }[];\n}[];\n\nconst erc20Abi = [\n  'function name() view returns (string)',\n  'function symbol() view returns (string)',\n  'function balanceOf(address) view returns (uint256)',\n  'function deposit() payable',\n  'function decimals() view returns (uint8)',\n];\n\nconst RewardsDataDocument = `\n  query RewardsData($accountId: String!, $distributor: String!) {\n    rewardsClaimeds(where: { distributor: $distributor, account: $accountId }) {\n      id\n      amount\n    }\n  }\n`;\n\nexport function useRewards(\n  distributors?: RewardsInterface,\n  poolId?: string,\n  collateralAddress?: string,\n  accountId?: string\n) {\n  const { network } = useNetwork();\n  const { data: Multicall3 } = useMulticall3();\n  const { data: CoreProxy } = useCoreProxy();\n\n  return useQuery({\n    enabled: Boolean(\n      Multicall3 && CoreProxy && distributors && poolId && collateralAddress && accountId\n    ),\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'Rewards',\n      { accountId },\n      { collateralAddress },\n      { distributors },\n    ],\n    queryFn: async () => {\n      if (\n        !Multicall3 ||\n        !CoreProxy ||\n        !poolId ||\n        !collateralAddress ||\n        !accountId ||\n        !distributors ||\n        !network\n      ) {\n        throw 'useRewards is missing required data';\n      }\n      if (distributors.length === 0) return [];\n\n      const { abi } = await importRewardDistributor(network?.id, network?.preset);\n\n      const ifaceRD = new utils.Interface(abi);\n      const ifaceERC20 = new utils.Interface(erc20Abi);\n\n      const [{ returnData: distributorReturnData }, ...historicalData] = await Promise.all([\n        await Multicall3.callStatic.aggregate(\n          distributors.flatMap(({ id: address }) => [\n            {\n              target: address,\n              callData: ifaceRD.encodeFunctionData('name', []),\n            },\n            {\n              target: address,\n              callData: ifaceRD.encodeFunctionData('token', []),\n            },\n          ])\n        ),\n        ...distributors.map(async ({ id: address }) => {\n          return await fetch(getSubgraphUrl(network?.name), {\n            method: 'POST',\n            body: JSON.stringify({\n              query: RewardsDataDocument,\n              variables: { accountId, distributor: address },\n            }),\n          }).then((res) => res.json());\n        }),\n      ]);\n\n      const distributorResult = distributors.map(({ id: address, rewards_distributions }, i) => {\n        const name = ifaceRD.decodeFunctionResult(\n          'name',\n          distributorReturnData[i * 2]\n        )[0] as string;\n        const token = ifaceRD.decodeFunctionResult(\n          'token',\n          distributorReturnData[i * 2 + 1]\n        )[0] as string;\n\n        let duration = 0;\n\n        if (rewards_distributions.length > 0) {\n          duration = parseInt(rewards_distributions[0].duration);\n        }\n\n        const lifetimeClaimed = historicalData[i].data.rewardsClaimeds.reduce(\n          (acc: number, item: { amount: string; id: string }) => {\n            return (acc += parseInt(item.amount));\n          },\n          0\n        );\n\n        return {\n          address,\n          name: name,\n          token: token,\n          duration,\n          total: rewards_distributions[0].amount, // Take the latest amount\n          lifetimeClaimed,\n        };\n      });\n\n      const { returnData: ercReturnData } = await Multicall3.callStatic.aggregate(\n        distributorResult.flatMap(({ token }) => [\n          {\n            target: token,\n            callData: ifaceERC20.encodeFunctionData('name', []),\n          },\n          {\n            target: token,\n            callData: ifaceERC20.encodeFunctionData('symbol', []),\n          },\n          {\n            target: token,\n            callData: ifaceERC20.encodeFunctionData('decimals', []),\n          },\n        ])\n      );\n\n      const rewardRates = await Promise.all(\n        distributorResult.map(async ({ address }) => {\n          const response = await CoreProxy.callStatic.getRewardRate(\n            BigNumber.from(poolId),\n            collateralAddress,\n            address\n          );\n\n          return response;\n        })\n      );\n\n      const result = distributorResult.map((item, i) => {\n        const name = ifaceERC20.decodeFunctionResult('name', ercReturnData[i * 3])[0] as string;\n        const symbol = ifaceERC20.decodeFunctionResult(\n          'symbol',\n          ercReturnData[i * 3 + 1]\n        )[0] as string;\n        const decimals = ifaceERC20.decodeFunctionResult(\n          'decimals',\n          ercReturnData[i * 3 + 2]\n        )[0] as number;\n\n        const total = parseInt(item.total);\n\n        return {\n          ...item,\n          name,\n          symbol,\n          decimals,\n          // Reward rate is the amount of rewards per second\n          rewardRate: wei(rewardRates[i]),\n          total,\n        };\n      });\n\n      // TODO: Refactor this to use a view function\n      const balances: RewardsResponseArray = [];\n      for (const item of result) {\n        try {\n          const response = await CoreProxy.callStatic.claimRewards(\n            BigNumber.from(accountId),\n            BigNumber.from(poolId),\n            collateralAddress,\n            item.address\n          );\n\n          balances.push({\n            ...item,\n            claimableAmount: wei(response),\n            distributorAddress: item.address,\n            rate: item.rewardRate.toNumber(),\n          });\n        } catch (error) {\n          balances.push({\n            ...item,\n            claimableAmount: wei(0),\n            distributorAddress: item.address,\n            rate: item.rewardRate.toNumber(),\n          });\n        }\n      }\n\n      const sortedBalances = [...balances].sort(\n        (a, b) => b.claimableAmount.toNumber() - a.claimableAmount.toNumber()\n      );\n\n      return RewardsResponseSchema.parse(sortedBalances);\n    },\n  });\n}\n","// !!! DO NOT EDIT !!! Automatically generated file\n\nimport type { RewardDistributor as RewardDistributor1Main } from './1-main/RewardDistributor';\nimport type { RewardDistributor as RewardDistributor10Main } from './10-main/RewardDistributor';\nimport type { RewardDistributor as RewardDistributor11155111Main } from './11155111-main/RewardDistributor';\nimport type { RewardDistributor as RewardDistributor13370Main } from './13370-main/RewardDistributor';\nimport type { RewardDistributor as RewardDistributor8453Andromeda } from './8453-andromeda/RewardDistributor';\nimport type { RewardDistributor as RewardDistributor84532Andromeda } from './84532-andromeda/RewardDistributor';\n\nexport type RewardDistributorType =\n  | RewardDistributor1Main\n  | RewardDistributor10Main\n  | RewardDistributor11155111Main\n  | RewardDistributor13370Main\n  | RewardDistributor8453Andromeda\n  | RewardDistributor84532Andromeda;\n\nexport async function importRewardDistributor(chainId: number, preset: string = 'main') {\n  switch (`${chainId}-${preset}`) {\n    case '1-main':\n      return import('./1-main/RewardDistributor');\n    case '10-main':\n      return import('./10-main/RewardDistributor');\n    case '11155111-main':\n      return import('./11155111-main/RewardDistributor');\n    case '13370-main':\n      return import('./13370-main/RewardDistributor');\n    case '8453-andromeda':\n      return import('./8453-andromeda/RewardDistributor');\n    case '84532-andromeda':\n      return import('./84532-andromeda/RewardDistributor');\n    default:\n      throw new Error(`Unsupported chain ${chainId} for RewardDistributor`);\n  }\n}\n","import { FC } from 'react';\nimport { Box, Divider, Flex, Heading, Link, Text } from '@chakra-ui/react';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { useParams } from '@snx-v3/useParams';\nimport { CollateralType, useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { CollateralIcon } from '@snx-v3/icons';\nimport { ManageAction } from './ManageActions';\nimport { ManagePositionProvider } from '@snx-v3/ManagePositionContext';\nimport { ManageStats } from './ManageStats';\nimport { HomeLink } from '@snx-v3/HomeLink';\nimport { Rewards } from '../../components/Rewards';\nimport { usePoolData } from '@snx-v3/usePoolData';\nimport { useRewards, RewardsType } from '@snx-v3/useRewards';\nimport { WithdrawIncrease } from '@snx-v3/WithdrawIncrease';\nimport { LiquidityPosition, useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\n\nexport const ManageUi: FC<{\n  collateralType?: CollateralType;\n  isLoading: boolean;\n  rewards?: RewardsType;\n  liquidityPosition?: LiquidityPosition;\n}> = ({ collateralType, isLoading, rewards, liquidityPosition }) => {\n  return (\n    <Box mb={12}>\n      <WithdrawIncrease />\n      <Box mb=\"4\">\n        <HomeLink />\n      </Box>\n      <Flex alignItems=\"center\" mb=\"8px\">\n        <Flex\n          bg=\"linear-gradient(180deg, #08021E 0%, #1F0777 100%)\"\n          height=\"34px\"\n          width=\"34px\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          borderRadius=\"100%\"\n          display=\"flex\"\n        >\n          <CollateralIcon\n            symbol={collateralType?.symbol}\n            width=\"28px\"\n            height=\"28px\"\n            fill=\"#0B0B22\"\n            color=\"#00D1FF\"\n          />\n        </Flex>\n        <Heading\n          ml={4}\n          fontWeight={700}\n          fontSize=\"3xl\"\n          color=\"gray.50\"\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          {collateralType?.symbol} Liquidity Position\n        </Heading>\n      </Flex>\n      <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"14px\" lineHeight=\"20px\" width=\"80%\">\n        Deposit your collateral to borrow snxUSD and contribute to the network collateral. If\n        you&apos;ve never staked on Synthetix V3 before, please read through this{' '}\n        <Link\n          fontWeight=\"600\"\n          color=\"cyan.500\"\n          href=\"https://docs.synthetix.io/v/v3/for-liquidity-providers/delegating-collateral\"\n          target=\"_blank\"\n        >\n          quick introduction\n        </Link>{' '}\n        first.\n      </Text>\n      <Divider mt=\"31px\" mb=\"24px\" color=\"gray.900\" />\n      <Flex gap={4}>\n        <BorderBox p={6} flexDirection=\"column\" bg=\"navy.700\" height=\"fit-content\">\n          <Text fontWeight=\"700\" fontSize=\"xl\" color=\"gray.50\" mb=\"1\" fontFamily=\"heading\">\n            Manage C-Ratio\n          </Text>\n          <Text color=\"gray.400\" fontSize=\"sm\" mb=\"2\">\n            The Collateralization Ratio (C-Ratio) is calculated by dividing the value of the\n            position’s collateral by the value of the position’s debt.{' '}\n            <Text as=\"span\" fontWeight=\"700\" display=\"inline\" color=\"white\">\n              This position will be liquidated if the C-Ratio drops below the Liquidation C-Ratio.\n            </Text>\n          </Text>\n          <ManageAction liquidityPosition={liquidityPosition} />\n        </BorderBox>\n        <Box minW=\"450px\">\n          <ManageStats liquidityPosition={liquidityPosition} />\n          <Rewards isLoading={isLoading} rewards={rewards} />\n        </Box>\n      </Flex>\n    </Box>\n  );\n};\n\nexport const Manage = () => {\n  const { accountId, collateralSymbol, poolId } = useParams();\n\n  const { isLoading: isCollateralLoading, data: collateralType } =\n    useCollateralType(collateralSymbol);\n\n  const { isLoading: isPoolGraphDataLoading, data: poolData } = usePoolData(poolId);\n\n  const { isLoading: isRewardsLoading, data: rewardsData } = useRewards(\n    poolData?.registered_distributors,\n    poolId,\n    collateralType?.tokenAddress,\n    accountId\n  );\n\n  const { data: liquidityPosition } = useLiquidityPosition({\n    tokenAddress: collateralType?.tokenAddress,\n    accountId,\n    poolId,\n  });\n\n  const isLoading = isRewardsLoading || isCollateralLoading || isPoolGraphDataLoading;\n\n  return (\n    <ManagePositionProvider>\n      <ManageUi\n        isLoading={isLoading}\n        collateralType={collateralType}\n        rewards={rewardsData}\n        liquidityPosition={liquidityPosition}\n      />\n    </ManagePositionProvider>\n  );\n};\n","import { ChevronDownIcon } from '@chakra-ui/icons';\nimport { Flex, Menu, MenuButton, MenuItem, MenuList, Text } from '@chakra-ui/react';\nimport { CollateralType, useCollateralType, useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { CollateralIcon } from '@snx-v3/icons';\nimport { FC } from 'react';\n\nexport const CollateralTypeSelectorUI: FC<{\n  collateralTypes: CollateralType[];\n  collateralType?: CollateralType;\n  onChange: (collateralSymbol: string) => void;\n}> = ({ collateralTypes, collateralType, onChange }) => {\n  return (\n    <Menu>\n      <MenuButton minHeight=\"48px\" alignItems=\"center\" cursor=\"pointer\" type=\"button\">\n        <Flex>\n          {collateralType ? (\n            <>\n              <CollateralIcon\n                fill=\"#0B0B22\"\n                color=\"#00D1FF\"\n                symbol={collateralType.symbol}\n                width=\"24px\"\n                height=\"24px\"\n              />\n              <Text fontWeight=\"600\" mx=\"2\">\n                {collateralType.displaySymbol}\n              </Text>\n            </>\n          ) : null}\n          <ChevronDownIcon opacity=\"0.66\" w=\"6\" h=\"6\" ml=\"auto\" mr=\"2\" />\n        </Flex>\n      </MenuButton>\n      <MenuList p={1} minW=\"0\" w=\"125px\" bg=\"black\" border=\"1px solid rgba(255,255,255,0.33)\">\n        {collateralTypes.map((collateral) => (\n          <MenuItem\n            key={collateral.symbol}\n            alignItems=\"left\"\n            py={2}\n            borderRadius=\"sm\"\n            flexDirection=\"column\"\n            _hover={{ bg: 'gray.800' }}\n            _focus={{ bg: 'gray.800' }}\n            _active={{ bg: 'gray.800' }}\n            onClick={() => onChange(collateral.symbol)}\n          >\n            <Flex flexDirection=\"row\">\n              <CollateralIcon\n                fill=\"#0B0B22\"\n                color=\"#00D1FF\"\n                symbol={collateral.symbol}\n                width=\"24px\"\n                height=\"24px\"\n              />\n              <Text ml=\"2\" fontWeight=\"600\">\n                {collateral?.displaySymbol}\n              </Text>\n            </Flex>\n          </MenuItem>\n        ))}\n      </MenuList>\n    </Menu>\n  );\n};\n\nexport type CollateralTypeSelectorProps = FC<{\n  collateralSymbol?: string;\n  onChange: (collateralSymbol: string) => void;\n}>;\n\nexport const CollateralTypeSelector: CollateralTypeSelectorProps = ({\n  collateralSymbol,\n  onChange,\n}) => {\n  const { data: collateralTypes = [] } = useCollateralTypes();\n  const { data: collateralType } = useCollateralType(collateralSymbol);\n\n  return (\n    <CollateralTypeSelectorUI\n      onChange={onChange}\n      collateralType={collateralType}\n      collateralTypes={collateralTypes}\n    />\n  );\n};\n","import {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  Box,\n  Button,\n  Collapse,\n  Flex,\n  Link,\n  Text,\n} from '@chakra-ui/react';\nimport { CollateralType, useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useIsConnected, useNetwork } from '@snx-v3/useBlockchain';\nimport { useEthBalance } from '@snx-v3/useEthBalance';\nimport {\n  CollateralTypeSelector,\n  CollateralTypeSelectorProps,\n} from '@snx-v3/CollateralTypeSelector';\nimport { FormEvent, useCallback, useMemo, useRef, useState } from 'react';\nimport { generatePath, NavigateFunction, useLocation, useNavigate } from 'react-router-dom';\nimport { Wei, wei } from '@synthetixio/wei';\nimport { PercentBadges } from '@snx-v3/PercentBadges';\nimport { Amount } from '@snx-v3/Amount';\nimport { useParams } from '@snx-v3/useParams';\nimport { DepositModal, DepositModalProps } from '@snx-v3/DepositModal';\nimport { CollateralIcon } from '@snx-v3/icons';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { AccountCollateralType, useAccountSpecificCollateral } from '@snx-v3/useAccountCollateral';\nimport { useTransferableSynthetix } from '@snx-v3/useTransferableSynthetix';\nimport { CollateralAlert } from '../../CollateralAlert';\nimport { useTokenBalance } from '@snx-v3/useTokenBalance';\nimport { useConnectWallet } from '@web3-onboard/react';\nimport { getUSDCAddress, isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\n\nexport function DepositFormUi({\n  collateralType,\n  accountCollateral,\n  ethBalance,\n  snxBalance,\n  isConnected,\n  openConnectModal,\n  staticCollateral,\n  poolId,\n  navigate,\n  DepositModal,\n  CollateralTypeSelector,\n  tokenBalance,\n}: {\n  accountCollateral?: AccountCollateralType;\n  staticCollateral?: boolean;\n  openConnectModal: (() => void) | undefined;\n  isConnected: boolean;\n  collateralType?: CollateralType;\n  snxBalance?: {\n    transferable: Wei;\n    collateral?: Wei;\n  };\n  ethBalance?: Wei;\n  poolId?: string;\n  navigate: NavigateFunction;\n  DepositModal: DepositModalProps;\n  CollateralTypeSelector: CollateralTypeSelectorProps;\n  tokenBalance?: Wei;\n}) {\n  const inputRef = useRef<HTMLInputElement | null>(null);\n  const [inputAmount, setInputAmount] = useState(wei(0));\n  const [amount, setAmount] = useState(wei(0));\n  const [activeBadge, setActiveBadge] = useState(0);\n  const location = useLocation();\n\n  const combinedTokenBalance = useMemo(() => {\n    if (collateralType?.symbol === 'SNX') {\n      return snxBalance?.transferable;\n    }\n    if (collateralType?.symbol !== 'WETH') {\n      return tokenBalance;\n    }\n    if (!tokenBalance || !ethBalance) {\n      return undefined;\n    }\n    return tokenBalance.add(ethBalance);\n  }, [collateralType?.symbol, tokenBalance, ethBalance, snxBalance?.transferable]);\n\n  const [isOpenDeposit, setIsOpenDeposit] = useState(false);\n\n  const onSubmit = useCallback(\n    async (e: FormEvent) => {\n      e.preventDefault();\n      const form = e.target as HTMLFormElement;\n      if (!form.reportValidity()) {\n        return;\n      }\n      setAmount(wei(inputAmount));\n      setIsOpenDeposit(true);\n    },\n    [inputAmount]\n  );\n\n  const onChangeCollateral = useCallback(\n    (collateralSymbol: string) => {\n      if (!poolId) {\n        return;\n      }\n      if (`${collateralType?.symbol}`.toLowerCase() === `${collateralSymbol}`.toLowerCase()) {\n        return;\n      }\n      setActiveBadge(0);\n      setAmount(wei(0));\n      setInputAmount(wei(0));\n      inputRef.current?.focus();\n      navigate({\n        pathname: generatePath('/deposit/:collateralSymbol/:poolId', {\n          poolId: poolId,\n          collateralSymbol,\n        }),\n        search: location.search,\n      });\n    },\n    [location.search, navigate, collateralType?.symbol, poolId]\n  );\n\n  if (!isConnected && openConnectModal) {\n    return (\n      <Flex flexGrow={1} alignItems=\"flex-end\">\n        <Button width=\"100%\" size=\"md\" px=\"8\" onClick={openConnectModal}>\n          Connect Wallet\n        </Button>\n      </Flex>\n    );\n  }\n\n  if (!poolId || !collateralType) {\n    return null;\n  }\n\n  return (\n    <>\n      <Box as=\"form\" bg=\"navy.900\" mb=\"8\" onSubmit={onSubmit}>\n        <Box borderWidth=\"1px\" borderColor=\"gray.900\" borderRadius=\"base\" p={2}>\n          <Flex justifyContent=\"space-between\">\n            <Flex alignItems=\"center\">\n              {staticCollateral ? (\n                <>\n                  <CollateralIcon\n                    fill=\"#0B0B22\"\n                    color=\"#00D1FF\"\n                    symbol={collateralType.symbol}\n                    width=\"24px\"\n                    height=\"24px\"\n                  />\n                  <Text fontWeight=\"600\" mx=\"2\">\n                    {collateralType.displaySymbol}\n                  </Text>\n                </>\n              ) : (\n                <CollateralTypeSelector\n                  collateralSymbol={collateralType.symbol}\n                  onChange={onChangeCollateral}\n                />\n              )}\n            </Flex>\n            <Flex flexDirection=\"column\" justifyContent=\"flex-end\" flexGrow={1}>\n              <NumberInput\n                value={inputAmount}\n                onChange={(value) => {\n                  setActiveBadge(0);\n                  setInputAmount(value);\n                }}\n                InputProps={{\n                  'data-testid': 'deposit amount input',\n                }}\n                min={collateralType.minDelegationD18}\n                max={combinedTokenBalance}\n              />\n              <Flex\n                flexDirection=\"column\"\n                alignItems=\"flex-end\"\n                fontSize=\"xs\"\n                color=\"whiteAlpha.700\"\n              >\n                {accountCollateral && accountCollateral?.availableCollateral.gt(0) ? (\n                  <Link onClick={() => setInputAmount(accountCollateral?.availableCollateral)}>\n                    <Amount\n                      prefix={`Available ${collateralType.symbol} Collateral: `}\n                      value={accountCollateral?.availableCollateral}\n                    />\n                  </Link>\n                ) : null}\n                <Link\n                  onClick={() => {\n                    if (!tokenBalance || !snxBalance) {\n                      return;\n                    }\n                    const max =\n                      collateralType.symbol === 'SNX' ? snxBalance.transferable : tokenBalance;\n\n                    setInputAmount(max);\n                  }}\n                >\n                  <Amount\n                    prefix={`${collateralType.symbol} Wallet Balance: `}\n                    value={\n                      collateralType.symbol === 'SNX' ? snxBalance?.transferable : tokenBalance\n                    }\n                  />\n                </Link>\n                {collateralType?.symbol === 'WETH' ? (\n                  <Flex\n                    gap=\"1\"\n                    cursor=\"pointer\"\n                    onClick={() => {\n                      if (!ethBalance) {\n                        return;\n                      }\n                      setInputAmount(ethBalance);\n                    }}\n                  >\n                    <Text>ETH Wallet Balance:</Text>\n                    <Amount value={ethBalance} />\n                  </Flex>\n                ) : null}\n              </Flex>\n            </Flex>\n          </Flex>\n\n          <PercentBadges\n            disabled={combinedTokenBalance ? combinedTokenBalance.eq(0) : false}\n            onBadgePress={(badgeNum) => {\n              if (!combinedTokenBalance) {\n                return;\n              }\n              if (activeBadge === badgeNum) {\n                setInputAmount(wei(0));\n                setActiveBadge(0);\n                return;\n              }\n              setActiveBadge(badgeNum);\n              if (badgeNum === 1) {\n                // Make sure we're not left with dust\n                setInputAmount(combinedTokenBalance);\n              } else {\n                setInputAmount(combinedTokenBalance.mul(badgeNum));\n              }\n            }}\n            activeBadge={activeBadge}\n          />\n          <Collapse\n            in={inputAmount.gt(0) && inputAmount.lt(collateralType.minDelegationD18)}\n            animateOpacity\n          >\n            <Alert mt={2} status=\"info\">\n              <AlertIcon />\n              <AlertDescription>\n                You need to deposit{' '}\n                <Amount\n                  value={collateralType.minDelegationD18}\n                  suffix={` ${collateralType.symbol}`}\n                />{' '}\n                minimum\n              </AlertDescription>\n            </Alert>\n          </Collapse>\n        </Box>\n        <Button mt={4} size=\"md\" px=\"8\" type=\"submit\" w=\"full\" data-testid=\"deposit collateral\">\n          Deposit Collateral\n        </Button>\n      </Box>\n      {snxBalance?.collateral &&\n        snxBalance?.collateral.gt(0) &&\n        collateralType.symbol === 'SNX' && <CollateralAlert tokenBalance={snxBalance.collateral} />}\n      {amount.gt(0) ? (\n        <DepositModal\n          availableCollateral={accountCollateral?.availableCollateral || wei(0)}\n          currentCollateral={wei(0)}\n          collateralChange={amount}\n          isOpen={isOpenDeposit}\n          onClose={() => setIsOpenDeposit(false)}\n        />\n      ) : null}\n    </>\n  );\n}\n\nexport const DepositForm = (props: { staticCollateral?: boolean }) => {\n  const [_, connect] = useConnectWallet();\n  const navigate = useNavigate();\n  const isConnected = useIsConnected();\n  const params = useParams();\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n\n  const { network } = useNetwork();\n  const ethBalance = useEthBalance();\n  const transferrable = useTransferableSynthetix();\n\n  const { data: accountCollateral } = useAccountSpecificCollateral(\n    params.accountId,\n    collateralType?.tokenAddress\n  );\n\n  const { data: tokenBalance } = useTokenBalance(\n    isBaseAndromeda(network?.id, network?.preset)\n      ? getUSDCAddress(network?.id)\n      : collateralType?.tokenAddress\n  );\n\n  return (\n    <DepositFormUi\n      staticCollateral={props.staticCollateral}\n      isConnected={isConnected}\n      openConnectModal={() => connect()}\n      collateralType={collateralType}\n      accountCollateral={accountCollateral}\n      tokenBalance={tokenBalance}\n      snxBalance={transferrable.data}\n      ethBalance={ethBalance.data}\n      poolId={params.poolId}\n      navigate={navigate}\n      DepositModal={DepositModal}\n      CollateralTypeSelector={CollateralTypeSelector}\n    />\n  );\n};\n","import { Box, Button, Flex, Heading, Skeleton, Text } from '@chakra-ui/react';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { FC } from 'react';\nimport { usePoolData } from '@snx-v3/usePoolData';\nimport { calculatePoolPerformanceSevenDays } from '@snx-v3/calculations';\nimport { generatePath, Link, useLocation } from 'react-router-dom';\nimport { Wei } from '@synthetixio/wei';\nimport { useParams } from '@snx-v3/useParams';\nimport { usePool } from '@snx-v3/usePools';\n\nconst PoolBoxUi: FC<{\n  poolName?: string;\n  poolId?: string;\n  sevenDaysPoolPerformanceGrowth?: Wei;\n}> = ({ poolName, poolId }) => {\n  const location = useLocation();\n  return (\n    <BorderBox p={4} flexDirection=\"column\">\n      {poolId ? (\n        <Flex justifyContent=\"space-between\">\n          <Flex flexDirection=\"column\">\n            <Heading fontSize=\"xl\">{poolName}</Heading>\n            <Text fontSize=\"sm\" color=\"gray.400\">\n              Pool #{poolId}\n            </Text>\n          </Flex>\n        </Flex>\n      ) : (\n        <Flex justifyContent=\"space-between\">\n          <Box>\n            <Skeleton w={16} height={8} />\n            <Skeleton mt={1} w={8} height={6} />\n          </Box>\n          <Skeleton w={16} height={6} />\n        </Flex>\n      )}\n      {poolId && (\n        <Button\n          as={Link}\n          mt={4}\n          size=\"md\"\n          to={{\n            pathname: generatePath('/pools/:poolId', { poolId: poolId }),\n            search: location.search,\n          }}\n          variant=\"outline\"\n        >\n          See Pool\n        </Button>\n      )}\n    </BorderBox>\n  );\n};\n\nexport const PoolBox = () => {\n  const { poolId } = useParams();\n\n  const { data: poolData } = usePoolData(poolId);\n\n  const sevenDaysPoolPerformance = calculatePoolPerformanceSevenDays(poolData);\n\n  const { data: pool } = usePool(poolId);\n\n  return (\n    <PoolBoxUi\n      poolName={pool?.name}\n      poolId={pool?.id}\n      sevenDaysPoolPerformanceGrowth={sevenDaysPoolPerformance?.growthPercentage}\n    />\n  );\n};\n","import { Box, Divider, Flex, Heading, Link, Text } from '@chakra-ui/react';\nimport { useParams } from '@snx-v3/useParams';\nimport { FC } from 'react';\nimport { DepositForm } from '../../components/Accounts/Deposit';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { PoolBox } from '@snx-v3/PoolBox';\nimport { CollateralIcon } from '@snx-v3/icons';\nimport { HomeLink } from '@snx-v3/HomeLink';\nimport { WithdrawIncrease } from '@snx-v3/WithdrawIncrease';\n\nfunction DepositUi({\n  collateralDisplaySymbol,\n  PoolBox,\n  DepositForm,\n}: {\n  collateralDisplaySymbol?: string;\n  DepositForm: FC;\n  PoolBox: FC;\n}) {\n  return (\n    <Flex height=\"100%\" flexDirection=\"column\">\n      <WithdrawIncrease />\n      <HomeLink />\n      <Flex alignItems=\"flex-end\" flexWrap={{ base: 'wrap', md: 'nowrap' }}>\n        <Box flexGrow={1} mr={12}>\n          <Flex mb={2}>\n            <Flex alignItems=\"center\">\n              <Box\n                mr={2}\n                bg=\"linear-gradient(180deg, #08021E 0%, #1F0777 146.21%)\"\n                p=\"3px\"\n                borderRadius=\"50px\"\n              >\n                <CollateralIcon\n                  width=\"30px\"\n                  height=\"30px\"\n                  symbol={collateralDisplaySymbol || 'SNX'}\n                  fill=\"#0B0B22\"\n                  color=\"#00D1FF\"\n                />\n              </Box>\n              <Heading>{collateralDisplaySymbol} Vault</Heading>\n            </Flex>\n          </Flex>\n          <Text color=\"gray.500\" fontSize=\"sm\">\n            Deposit your collateral to borrow snxUSD and contribute to the network collateral. If\n            you have never staked on Synthetix before, please review{' '}\n            <Link color=\"cyan.500\" href=\"https://docs.synthetix.io/\" target=\"_blank\">\n              the documentation\n            </Link>\n            .\n          </Text>\n        </Box>\n      </Flex>\n      <Divider my={8} bg=\"gray.900\" />\n      <Flex alignItems=\"stretch\" flexWrap={{ base: 'wrap', md: 'nowrap' }} gap={4}>\n        <BorderBox flexGrow={1} p={4} flexDirection=\"column\">\n          <Heading fontSize=\"xl\" color=\"gray.50\">\n            Deposit Collateral\n          </Heading>\n          <Text fontSize=\"sm\" color=\"gray.500\" my={1}>\n            Take an interest-free loan against your collateral. This increases your debt and\n            decreases your C-Ratio.\n          </Text>\n          <Heading mt={4} mb={2} size=\"sm\" color=\"gray.50\">\n            Deposit {collateralDisplaySymbol}\n          </Heading>\n          <DepositForm />\n        </BorderBox>\n        <Box maxW={{ base: 'full', md: '400px' }} width=\"full\">\n          <PoolBox />\n        </Box>\n      </Flex>\n    </Flex>\n  );\n}\n\nexport function Deposit() {\n  const params = useParams();\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n\n  return (\n    <DepositUi\n      collateralDisplaySymbol={collateralType?.displaySymbol}\n      DepositForm={DepositForm}\n      PoolBox={PoolBox}\n    />\n  );\n}\n","import { Flex, Heading } from '@chakra-ui/react';\nimport { useParams } from '@snx-v3/useParams';\nimport { usePool } from '@snx-v3/usePools';\n\nexport const PoolHeader = () => {\n  const params = useParams();\n  const { data: pool } = usePool(params.poolId);\n\n  return (\n    <Flex gap={2} alignItems=\"flex-end\">\n      <Heading fontWeight={700} fontSize=\"3xl\">\n        {pool ? pool.name : 'Unknown Pool'}\n      </Heading>\n    </Flex>\n  );\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { utils } from 'ethers';\nimport { useMulticall3 } from '@snx-v3/useMulticall3';\nimport { z } from 'zod';\nimport { useNetwork } from '@snx-v3/useBlockchain';\n\nconst MarketNamesSchema = z.array(z.string());\n\nconst marketAbi = ['function name(uint128 marketId) external view returns (string memory)'];\nconst marketInterface = new utils.Interface(marketAbi);\n\nexport const useMarketNamesById = (\n  marketIdsAndAddresses?: { marketId: string; address: string }[]\n) => {\n  const { data: MultiCall3 } = useMulticall3();\n  const { network } = useNetwork();\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'MarketNamesById',\n      {\n        markets: marketIdsAndAddresses\n          ? marketIdsAndAddresses.map((market) => market.marketId).sort()\n          : [],\n      },\n    ],\n    queryFn: async () => {\n      if (!marketIdsAndAddresses || !MultiCall3) {\n        throw Error('Query should not be enable when contract or marketIdsAndAddresses missing');\n      }\n      const calls = marketIdsAndAddresses.map((x) => ({\n        target: x.address,\n        callData: marketInterface.encodeFunctionData('name', [x.marketId]),\n      }));\n      const result = await MultiCall3.callStatic.aggregate(calls);\n      const decoded = result.returnData.map(\n        (bytes) => marketInterface.decodeFunctionResult('name', bytes)[0]\n      );\n      return MarketNamesSchema.parse(decoded);\n    },\n    select: (marketNames) =>\n      marketNames.reduce((acc: Record<string, string | undefined>, marketName, index) => {\n        const marketId = marketIdsAndAddresses?.[index].marketId;\n        if (!marketId) return acc;\n        acc[marketId] = marketName;\n        return acc;\n      }, {}),\n    enabled: Boolean(MultiCall3 && marketIdsAndAddresses && marketIdsAndAddresses.length > 0),\n  });\n};\n","import { FC } from 'react';\nimport {\n  Flex,\n  Table,\n  TableCellProps,\n  TableContainer,\n  Text,\n  Th,\n  Td,\n  Thead,\n  Tr,\n  Tbody,\n  Skeleton,\n} from '@chakra-ui/react';\nimport { PoolType, usePoolData } from '@snx-v3/usePoolData';\nimport { formatPercent } from '@snx-v3/formatters';\nimport { useParams } from '@snx-v3/useParams';\nimport { useMarketNamesById } from '@snx-v3/useMarketNamesById';\nimport { BorderBox } from '@snx-v3/BorderBox';\n\nconst StyledTh: FC<TableCellProps> = (props) => (\n  <Th\n    textTransform=\"none\"\n    sx={{\n      paddingBottom: 1,\n      paddingTop: 4,\n      borderColor: 'gray.900',\n      borderTop: 'none',\n      paddingLeft: 2,\n      paddingRight: 2,\n    }}\n    {...props}\n  />\n);\n\nconst StyledTd: FC<TableCellProps & { isLastItem?: boolean }> = ({ isLastItem, ...props }) => (\n  <Td\n    sx={{\n      borderBottom: isLastItem ? 'none' : '1px',\n      borderBottomColor: 'gray.900',\n      paddingLeft: 2,\n      paddingRight: 2,\n    }}\n    {...props}\n  />\n);\n\nconst LoadingRow = () => (\n  <Tr>\n    <StyledTd>\n      <Skeleton w=\"full\" height={8} />\n    </StyledTd>\n    <StyledTd>\n      <Skeleton w=\"full\" height={8} />\n    </StyledTd>\n    <StyledTd>\n      <Skeleton w=\"full\" height={8} />\n    </StyledTd>\n    <StyledTd>\n      <Skeleton w=\"full\" height={8} />\n    </StyledTd>\n  </Tr>\n);\n\nexport function MarketSectionUi({\n  poolData,\n  marketNamesById,\n  poolId,\n  poolDataFetched,\n}: {\n  poolData?: PoolType;\n  marketNamesById?: Record<string, string | undefined>;\n  poolId?: string;\n  poolDataFetched: boolean;\n}) {\n  if (poolDataFetched && !poolData) {\n    return (\n      <BorderBox padding={4}>\n        <Text>Pool with id: {poolId} does not exist</Text>\n      </BorderBox>\n    );\n  }\n  return (\n    <BorderBox bg=\"navy.700\" padding={4} flexDirection=\"column\" data-testid=\"pool markets\">\n      <Text fontSize=\"xl\" fontWeight={700}>\n        Markets\n      </Text>\n\n      <Flex>\n        <TableContainer w=\"100%\">\n          <Table variant=\"simple\">\n            <Thead>\n              <Tr>\n                <StyledTh>Market</StyledTh>\n                <StyledTh>Pool Allocation</StyledTh>\n                {/* <StyledTh>Total Deposited</StyledTh>\n                <StyledTh>Total Withdrawn</StyledTh> */}\n              </Tr>\n            </Thead>\n            <Tbody>\n              {!poolData && <LoadingRow />}\n              {poolData?.configurations.length === 0 ? (\n                <Tr w=\"full\">\n                  <Td colSpan={4} border=\"none\">\n                    <Text textAlign=\"center\" mt={4}>\n                      No markets configured for the pool\n                    </Text>\n                  </Td>\n                </Tr>\n              ) : (\n                poolData?.configurations.map(({ id, market, weight }, i) => {\n                  const isLastItem = i + 1 === poolData.configurations.length;\n\n                  return (\n                    <Tr key={id} data-testid=\"pool market\" data-market={id}>\n                      <StyledTd isLastItem={isLastItem}>\n                        <Text fontSize=\"sm\" display=\"block\" data-testid=\"market name\">\n                          {marketNamesById?.[market.id] ? marketNamesById[market.id] : '-'}\n                        </Text>\n                        <Text fontSize=\"xs\" color=\"gray.500\" data-testid=\"market id\">\n                          ID: {market.id}\n                        </Text>\n                      </StyledTd>\n                      <StyledTd isLastItem={isLastItem} fontSize=\"sm\" data-testid=\"pool allocation\">\n                        {poolData.total_weight ? (\n                          <>\n                            <Text display=\"block\">\n                              {formatPercent(weight.div(poolData.total_weight).toNumber())}\n                            </Text>\n                          </>\n                        ) : (\n                          '-'\n                        )}\n                      </StyledTd>\n                      {/* Total Deposited */}\n                      {/* <StyledTd isLastItem={isLastItem} data-testid=\"market growth\">\n                        <Text fontSize=\"sm\" display=\"block\" color=\"gray.50\">\n                          {formatNumberToUsd(market.usd_deposited.toNumber())}\n                        </Text>\n                      </StyledTd> */}\n                      {/* Total Withdrawn */}\n                      {/* <StyledTd isLastItem={isLastItem}>\n                        <Text fontSize=\"sm\" display=\"block\" color=\"gray.50\">\n                          {formatNumberToUsd(market.usd_withdrawn.toNumber())}\n                        </Text>\n                      </StyledTd> */}\n                    </Tr>\n                  );\n                })\n              )}\n            </Tbody>\n          </Table>\n        </TableContainer>\n      </Flex>\n    </BorderBox>\n  );\n}\n\nexport const MarketSection = () => {\n  const params = useParams();\n  const { data: poolData, isFetched: poolDataFetched } = usePoolData(params.poolId);\n\n  const marketIdsAndAddresses = poolData?.configurations.map(({ market }) => ({\n    marketId: market.id,\n    address: market.address,\n  }));\n\n  const { data: marketNamesById } = useMarketNamesById(marketIdsAndAddresses);\n\n  return (\n    <MarketSectionUi\n      poolId={params.poolId}\n      poolDataFetched={poolDataFetched}\n      poolData={poolData}\n      marketNamesById={marketNamesById}\n    />\n  );\n};\n","import { useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { wei } from '@synthetixio/wei';\nimport { useQuery } from '@tanstack/react-query';\nimport { z } from 'zod';\nimport { ZodBigNumber } from '@snx-v3/zod';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { erc7412Call } from '@snx-v3/withERC7412';\nimport { useAllCollateralPriceIds } from '@snx-v3/useAllCollateralPriceIds';\nimport { fetchPriceUpdates, priceUpdatesToPopulatedTx } from '@snx-v3/fetchPythPrices';\n\nconst VaultCollateralSchema = z\n  .object({ value: ZodBigNumber, amount: ZodBigNumber })\n  .transform(({ value, amount }) => ({ value: wei(value), amount: wei(amount) }));\nconst VaultDebtSchema = ZodBigNumber.transform((x) => wei(x));\n\nexport const useVaultsData = (poolId?: number) => {\n  const { network } = useNetwork();\n  const { data: collateralTypes } = useCollateralTypes();\n  const { data: CoreProxyContract } = useCoreProxy();\n  const { data: collateralPriceUpdates } = useAllCollateralPriceIds();\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'VaultCollaterals',\n      {\n        pool: poolId,\n        tokens: collateralTypes ? collateralTypes?.map((x) => x.tokenAddress).sort() : [],\n      },\n    ],\n    queryFn: async () => {\n      if (\n        !CoreProxyContract ||\n        !collateralTypes ||\n        !poolId ||\n        !collateralPriceUpdates ||\n        !network\n      ) {\n        throw Error('useVaultsData should not be enabled when missing data');\n      }\n\n      const collateralCallsP = Promise.all(\n        collateralTypes.map((collateralType) =>\n          CoreProxyContract.populateTransaction.getVaultCollateral(\n            poolId,\n            collateralType.tokenAddress\n          )\n        )\n      );\n      const debtCallsP = Promise.all(\n        collateralTypes.map((collateralType) =>\n          CoreProxyContract.populateTransaction.getVaultDebt(poolId, collateralType.tokenAddress)\n        )\n      );\n\n      const collateralPriceUpdateCallsP = fetchPriceUpdates(\n        collateralPriceUpdates,\n        network.isTestnet\n      ).then((signedData) => priceUpdatesToPopulatedTx('0x', collateralPriceUpdates, signedData));\n\n      const calls = await Promise.all([collateralPriceUpdateCallsP, collateralCallsP, debtCallsP]);\n\n      return await erc7412Call(\n        network,\n        CoreProxyContract.provider,\n        calls.flat(),\n        (multicallResult) => {\n          if (!Array.isArray(multicallResult)) throw Error('Expected array');\n\n          const collateralResult = multicallResult.slice(0, collateralTypes.length);\n          const debtResult = multicallResult.slice(collateralTypes.length);\n\n          return collateralResult.map((bytes: string, i: number) => {\n            const debtBytes = debtResult[i];\n            const decodedDebt = CoreProxyContract.interface.decodeFunctionResult(\n              'getVaultDebt',\n              debtBytes\n            );\n\n            const decodedCollateral = CoreProxyContract.interface.decodeFunctionResult(\n              'getVaultCollateral',\n              bytes\n            );\n            const collateral = VaultCollateralSchema.parse({ ...decodedCollateral });\n            const debt = VaultDebtSchema.parse(decodedDebt[0]);\n            return {\n              debt,\n              collateral,\n              collateralType: collateralTypes[i],\n            };\n          });\n        },\n        'useVaultsData'\n      );\n    },\n    enabled: Boolean(\n      collateralTypes?.length && CoreProxyContract && poolId && collateralPriceUpdates\n    ),\n  });\n};\n\nexport type VaultsDataType = ReturnType<typeof useVaultsData>['data'];\n","import { Box, Divider, Flex, Skeleton, Text } from '@chakra-ui/react';\nimport { useVaultsData, VaultsDataType } from '@snx-v3/useVaultsData';\nimport React, { FC } from 'react';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { formatNumber, formatNumberToUsd, formatPercent } from '@snx-v3/formatters';\nimport { useParams } from '@snx-v3/useParams';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { CollateralIcon } from '@snx-v3/icons';\nimport { useCollateralPrices } from '@snx-v3/useCollateralPrices';\n\nexport const calculateVaultTotals = (vaultsData: VaultsDataType) => {\n  const zeroValues = { collateral: { value: wei(0), amount: wei(0) }, debt: wei(0) };\n  if (!vaultsData) return zeroValues;\n  return vaultsData.reduce((acc, { collateral, debt }) => {\n    acc.collateral = {\n      value: acc.collateral.value.add(collateral.value),\n      amount: acc.collateral.amount.add(collateral.amount),\n    };\n    acc.debt = acc.debt.add(debt);\n    return acc;\n  }, zeroValues);\n};\n\nexport const CollateralSectionUi: FC<{\n  vaultsData: VaultsDataType;\n  collateralPriceByAddress?: Record<string, Wei | undefined>;\n}> = ({ vaultsData, collateralPriceByAddress }) => {\n  const { collateral: totalCollateral, debt: totalDebt } = calculateVaultTotals(vaultsData);\n\n  return (\n    <BorderBox padding={4} bg=\"navy.700\" flexDirection=\"column\" data-testid=\"pool collateral types\">\n      <Text fontWeight={700} fontSize=\"xl\">\n        Pool Collateralization\n      </Text>\n      <BorderBox padding={4} mt={4} flexDirection=\"column\">\n        <Flex\n          justifyContent=\"space-between\"\n          flexDirection={{ base: 'row', md: 'column', lg: 'row' }}\n        >\n          <Text\n            display=\"flex\"\n            alignItems=\"center\"\n            fontWeight={700}\n            fontSize=\"md\"\n            gap={1}\n            color=\"white\"\n          >\n            Total TVL\n          </Text>\n          {vaultsData === undefined ? (\n            <Skeleton w={16} h={6} />\n          ) : (\n            <Text fontWeight={700} fontSize=\"xl\" color=\"white\" data-testid=\"pool tvl\">\n              {formatNumberToUsd(totalCollateral.value.toNumber())}\n            </Text>\n          )}\n        </Flex>\n        <Flex\n          justifyContent=\"space-between\"\n          flexDirection={{ base: 'row', md: 'column', lg: 'row' }}\n        >\n          <Text\n            display=\"flex\"\n            alignItems=\"center\"\n            fontWeight={700}\n            fontSize=\"md\"\n            gap={1}\n            color=\"white\"\n          >\n            Total Debt\n          </Text>\n          {vaultsData === undefined ? (\n            <Skeleton mt={1} w={16} h={6} />\n          ) : (\n            <Text fontWeight={700} fontSize=\"xl\" color=\"white\" data-testid=\"pool total debt\">\n              {formatNumberToUsd(totalDebt.toNumber())}\n            </Text>\n          )}\n        </Flex>\n      </BorderBox>\n      <Flex flexDirection=\"column\" justifyContent=\"space-between\">\n        {!vaultsData ? (\n          <Box>\n            <Skeleton mt={4} w=\"full\" height={24} />\n            <Skeleton mt={2} w=\"full\" height={24} />\n          </Box>\n        ) : (\n          <>\n            <Divider mt={6} mb={4} />\n            {vaultsData.map((vaultCollateral) => {\n              const price = collateralPriceByAddress?.[vaultCollateral.collateralType.tokenAddress];\n              return (\n                <React.Fragment key={vaultCollateral.collateralType.tokenAddress}>\n                  <Box\n                    display=\"flex\"\n                    px={4}\n                    mb={2}\n                    flexDirection=\"column\"\n                    borderBottom=\"1px\"\n                    borderColor=\"gray.900\"\n                    _last={{ borderBottom: 'none' }}\n                    data-testid=\"pool collateral\"\n                    data-collateral={vaultCollateral.collateralType.symbol}\n                  >\n                    <Flex color=\"white\" display=\"flex\" gap={1} alignItems=\"center\">\n                      <CollateralIcon\n                        width=\"30px\"\n                        height=\"30px\"\n                        fill=\"#0B0B22\"\n                        color=\"#00D1FF\"\n                        symbol={vaultCollateral.collateralType.symbol}\n                      />\n                      <Text fontWeight={700} fontSize=\"xl\">\n                        {vaultCollateral.collateralType.displaySymbol}\n                      </Text>\n                      <Text\n                        fontSize=\"sm\"\n                        color=\"gray.400\"\n                        fontWeight=\"400\"\n                        data-testid=\"collateral price\"\n                      >\n                        {price ? formatNumberToUsd(price.toNumber()) : '-'}\n                      </Text>\n                    </Flex>\n                    <Flex gap={2} justifyContent=\"space-between\">\n                      <Flex flexBasis=\"50%\" flexDirection=\"column\">\n                        <Text\n                          mt={2}\n                          fontSize=\"sm\"\n                          color=\"gray.500\"\n                          textTransform=\"uppercase\"\n                          whiteSpace=\"nowrap\"\n                        >\n                          TVL\n                        </Text>\n                        <Text\n                          fontSize=\"md\"\n                          fontWeight={700}\n                          color=\"white\"\n                          data-testid=\"collateral value\"\n                        >\n                          {formatNumberToUsd(vaultCollateral.collateral.value.toNumber())}\n                        </Text>\n                        <Text\n                          fontSize=\"sm\"\n                          color=\"gray.500\"\n                          fontWeight=\"400\"\n                          data-testid=\"collateral amount\"\n                        >\n                          {formatNumber(vaultCollateral.collateral.amount.toNumber())}{' '}\n                          {vaultCollateral.collateralType.displaySymbol}\n                        </Text>\n                      </Flex>\n                      <Flex flexBasis=\"50%\" flexDirection=\"column\">\n                        <Text\n                          mt={2}\n                          fontSize=\"sm\"\n                          color=\"gray.500\"\n                          textTransform=\"uppercase\"\n                          whiteSpace=\"nowrap\"\n                        >\n                          Debt\n                        </Text>\n                        <Text\n                          fontSize=\"md\"\n                          fontWeight={700}\n                          color=\"white\"\n                          data-testid=\"collateral debt\"\n                        >\n                          {formatNumberToUsd(vaultCollateral.debt.toNumber())}\n                        </Text>\n                        <Text\n                          fontSize=\"sm\"\n                          color=\"gray.500\"\n                          fontWeight=\"400\"\n                          data-testid=\"collateral cratio\"\n                        >\n                          VAULT C-RATIO:{' '}\n                          {vaultCollateral.debt.eq(0)\n                            ? '-'\n                            : formatPercent(\n                                vaultCollateral.collateral.value\n                                  .div(vaultCollateral.debt)\n                                  .toNumber(),\n                                { maximumFractionDigits: 0 }\n                              )}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                </React.Fragment>\n              );\n            })}\n          </>\n        )}\n      </Flex>\n    </BorderBox>\n  );\n};\n\nexport const CollateralSection = () => {\n  const params = useParams();\n\n  const { data: vaultsData } = useVaultsData(params.poolId ? parseFloat(params.poolId) : undefined);\n  const { data: collateralPriceByAddress } = useCollateralPrices();\n\n  return (\n    <CollateralSectionUi\n      vaultsData={vaultsData}\n      collateralPriceByAddress={collateralPriceByAddress}\n    />\n  );\n};\n","import { Box, Divider, Flex } from '@chakra-ui/react';\nimport { Helmet } from 'react-helmet';\nimport { PoolHeader } from './PoolHeader';\nimport { MarketSection } from './MarketSection';\nimport { CollateralSection } from './CollateralSection';\nimport { useParams } from '@snx-v3/useParams';\nimport { HomeLink } from '@snx-v3/HomeLink';\nimport { usePool } from '@snx-v3/usePools';\nimport { Rewards } from '../../components/Rewards';\nimport { useRewards } from '@snx-v3/useRewards';\nimport { usePoolData } from '@snx-v3/usePoolData';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\n\nexport const Pool = () => {\n  const params = useParams();\n  const { data: pool } = usePool(params.poolId);\n\n  const { accountId, collateralSymbol, poolId } = useParams();\n\n  const { isLoading: isCollateralLoading, data: collateralType } =\n    useCollateralType(collateralSymbol);\n\n  const { isLoading: isPoolGraphDataLoading, data: poolData } = usePoolData(poolId);\n\n  const { isLoading: isRewardsLoading, data: rewardsData } = useRewards(\n    poolData?.registered_distributors,\n    poolId,\n    collateralType?.tokenAddress,\n    accountId\n  );\n\n  const isLoading = isRewardsLoading || isCollateralLoading || isPoolGraphDataLoading;\n\n  const title = pool ? `Pool #${pool.id} / ${pool.name}` : 'Pool';\n\n  return (\n    <>\n      <Helmet>\n        <title>{title}</title>\n        <meta name=\"description\" content={title} />\n      </Helmet>\n      <>\n        <HomeLink />\n        <PoolHeader />\n        <Divider my={8} bg=\"gray.900\" />\n        <Flex gap={4} flexDirection={{ base: 'column', lg: 'row' }}>\n          <Box flexGrow={1}>\n            <CollateralSection />\n          </Box>\n          <Box flexGrow={1}>\n            <MarketSection />\n            <Rewards mt={4} isLoading={isLoading} rewards={rewardsData} readOnly={true} />\n          </Box>\n        </Flex>\n      </>\n    </>\n  );\n};\n","/* eslint-disable no-console */\n\nimport { Box, Button, Input, Select, Text, useToast } from '@chakra-ui/react';\nimport { useAccounts } from '@snx-v3/useAccounts';\nimport { useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { ethers } from 'ethers';\nimport React, { useEffect, useState } from 'react';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useSigner } from '@snx-v3/useBlockchain';\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\nimport intlFormat from 'date-fns/intlFormat';\nimport { useAllowance } from '@snx-v3/useAllowance';\nimport { useTokenBalance } from '@snx-v3/useTokenBalance';\nimport { Amount } from '@snx-v3/Amount';\nimport { createSearchParams, generatePath, useNavigate } from 'react-router-dom';\nimport { useParams } from '@snx-v3/useParams';\nimport { useAccountCollateral } from '@snx-v3/useAccountCollateral';\nimport { usePools, usePool } from '@snx-v3/usePools';\nimport { useAccountCollateralUnlockDate } from '@snx-v3/useAccountCollateralUnlockDate';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { ContractError } from '@snx-v3/ContractError';\n\nfunction AccountSelector() {\n  const params = useParams();\n  const { data: accounts = [] } = useAccounts();\n  const navigate = useNavigate();\n\n  return (\n    <Select\n      placeholder=\"Select Account\"\n      value={params.accountId}\n      onChange={(e) => {\n        navigate({\n          pathname: generatePath('/playground'),\n          search: createSearchParams({ ...params, accountId: e.target.value }).toString(),\n        });\n      }}\n      display=\"inline-block\"\n      width=\"20em\"\n      mr=\"1em\"\n    >\n      {accounts.map((accountId) => (\n        <option key={accountId} value={accountId}>\n          {accountId}\n        </option>\n      ))}\n    </Select>\n  );\n}\n\nfunction PoolSelector() {\n  const params = useParams();\n  const { data: pools = [] } = usePools();\n  const navigate = useNavigate();\n\n  return (\n    <Select\n      placeholder=\"Select pool\"\n      value={params.poolId}\n      onChange={(e) => {\n        navigate({\n          pathname: generatePath('/playground'),\n          search: createSearchParams({ ...params, poolId: e.target.value }).toString(),\n        });\n      }}\n      display=\"inline-block\"\n      width=\"20em\"\n      mr=\"1em\"\n    >\n      {pools.map((pool) => (\n        <option key={pool.id} value={pool.id}>\n          {pool.isPreferred ? '* ' : null}\n          {pool.name}\n          {pool.isPreferred ? ' (preferred)' : null}\n        </option>\n      ))}\n    </Select>\n  );\n}\n\nfunction CollateralSelector() {\n  const params = useParams();\n  const { data: collateralTypes = [] } = useCollateralTypes();\n  const navigate = useNavigate();\n\n  return (\n    <Select\n      placeholder=\"Select Collateral\"\n      value={params.symbol}\n      onChange={(e) => {\n        navigate({\n          pathname: generatePath('/playground'),\n          search: createSearchParams({ ...params, symbol: e.target.value }).toString(),\n        });\n      }}\n      display=\"inline-block\"\n      width=\"20em\"\n      mr=\"1em\"\n    >\n      {collateralTypes.map((collateral) => (\n        <option key={collateral.symbol} value={collateral.symbol}>\n          {collateral.symbol}\n        </option>\n      ))}\n    </Select>\n  );\n}\n\nexport function Playground() {\n  const signer = useSigner();\n  const { data: CoreProxy } = useCoreProxy();\n\n  const params = useParams();\n  const { data: accounts = [], refetch: refetchAccounts } = useAccounts();\n  const [accountId] = accounts.filter((id) => id === params.accountId);\n\n  const { data: collateralTypes = [] } = useCollateralTypes();\n  const symbol = params.symbol;\n  const [{ tokenAddress } = { tokenAddress: undefined }] = collateralTypes.filter(\n    (collateral) => collateral.symbol === symbol\n  );\n\n  const { data: pool } = usePool(params.poolId);\n\n  const accountCollateral = useAccountCollateral({ accountId });\n  const accountCollateralData = accountCollateral.data?.find(\n    (collateral) => collateral.tokenAddress === tokenAddress\n  );\n\n  const accountCollateralUnlockDate = useAccountCollateralUnlockDate({ accountId });\n\n  const allowance = useAllowance({ contractAddress: tokenAddress, spender: CoreProxy?.address });\n  const tokenBalance = useTokenBalance(tokenAddress);\n\n  const formatTimeToUnlock = React.useCallback(\n    () =>\n      accountCollateralUnlockDate.data && accountCollateralUnlockDate.data.getTime() > Date.now()\n        ? formatDistanceToNow(accountCollateralUnlockDate.data, { addSuffix: true })\n        : '~',\n    [accountCollateralUnlockDate.data]\n  );\n  const [timeToUnlock, setTimeToUnlock] = useState(formatTimeToUnlock());\n\n  useEffect(() => {\n    const interval = setInterval(() => setTimeToUnlock(formatTimeToUnlock()), 1_000);\n    return () => clearInterval(interval);\n  }, [formatTimeToUnlock]);\n\n  const approve = async () => {\n    if (!CoreProxy || !signer || !tokenAddress) throw 'OMG';\n    const TokenContract = new ethers.Contract(\n      tokenAddress,\n      ['function approve(address spender, uint256 amount) returns (bool)'],\n      signer\n    );\n    const tx = await TokenContract.approve(CoreProxy.address, ethers.constants.MaxUint256);\n    console.log({ tx });\n    const result = await tx.wait();\n    console.log({ result });\n\n    allowance.refetch();\n  };\n\n  const toast = useToast({ isClosable: true, duration: 9000 });\n  const errorParserCoreProxy = useContractErrorParser(CoreProxy);\n\n  const createAccount = async () => {\n    if (accountId || !CoreProxy) throw 'OMG';\n    try {\n      const accountId = parseInt(`31337${Math.floor(Math.random() * 10000000000)}`);\n      const tx = await CoreProxy['createAccount(uint128)'](accountId);\n      console.log({ tx });\n      const result = await tx.wait();\n      console.log({ result });\n      refetchAccounts();\n    } catch (e: any) {\n      console.error(e);\n      const contractError = errorParserCoreProxy(e);\n      if (contractError) {\n        console.error(new Error(contractError.name), contractError);\n      }\n      toast.closeAll();\n      toast({\n        title: 'Create account failed',\n        description: contractError ? (\n          <ContractError contractError={contractError} />\n        ) : (\n          'Please try again.'\n        ),\n        status: 'error',\n      });\n    }\n  };\n\n  const deposit = async () => {\n    const $input: HTMLInputElement | null = document.querySelector('[name=\"deposit\"]');\n    if (!$input || !accountId || !tokenAddress || !CoreProxy) throw 'OMG';\n\n    try {\n      const tx = await CoreProxy.deposit(\n        ethers.BigNumber.from(accountId),\n        tokenAddress,\n        ethers.utils.parseEther($input.value)\n      );\n      console.log({ tx });\n      const result = await tx.wait();\n      console.log({ result });\n      tokenBalance.refetch();\n      accountCollateral.refetch();\n    } catch (e: any) {\n      console.error(e);\n      const contractError = errorParserCoreProxy(e);\n      if (contractError) {\n        console.error(new Error(contractError.name), contractError);\n      }\n      toast.closeAll();\n      toast({\n        title: 'Deposit failed',\n        description: contractError ? (\n          <ContractError contractError={contractError} />\n        ) : (\n          'Please try again.'\n        ),\n        status: 'error',\n      });\n    }\n  };\n\n  const delegate = async () => {\n    const $input: HTMLInputElement | null = document.querySelector('[name=\"delegate\"]');\n    if (!$input || !pool?.id || !accountId || !tokenAddress || !CoreProxy) throw 'OMG';\n\n    try {\n      const tx = await CoreProxy.delegateCollateral(\n        ethers.BigNumber.from(accountId),\n        ethers.BigNumber.from(pool.id),\n        tokenAddress,\n        ethers.utils.parseEther($input.value),\n        ethers.utils.parseEther(`1`)\n      );\n      console.log({ tx });\n      const result = await tx.wait();\n      console.log({ result });\n      accountCollateral.refetch();\n    } catch (e: any) {\n      console.error(e);\n      const contractError = errorParserCoreProxy(e);\n      if (contractError) {\n        console.error(new Error(contractError.name), contractError);\n      }\n      toast.closeAll();\n      toast({\n        title: 'Delegate failed',\n        description: contractError ? (\n          <ContractError contractError={contractError} />\n        ) : (\n          'Please try again.'\n        ),\n        status: 'error',\n      });\n    }\n  };\n\n  const withdraw = async () => {\n    const $input: HTMLInputElement | null = document.querySelector('[name=\"withdraw\"]');\n    if (!$input || !accountId || !tokenAddress || !CoreProxy) throw 'OMG';\n\n    try {\n      const tx = await CoreProxy.withdraw(\n        ethers.BigNumber.from(accountId),\n        tokenAddress,\n        ethers.utils.parseEther($input.value)\n      );\n      console.log({ tx });\n      const result = await tx.wait();\n      console.log({ result });\n      tokenBalance.refetch();\n      accountCollateral.refetch();\n    } catch (e: any) {\n      console.error(e);\n      const contractError = errorParserCoreProxy(e);\n      if (contractError) {\n        console.error(new Error(contractError.name), contractError);\n      }\n      toast.closeAll();\n      toast({\n        title: 'Withdraw failed',\n        description: contractError ? (\n          <ContractError contractError={contractError} />\n        ) : (\n          'Please try again.'\n        ),\n        status: 'error',\n      });\n    }\n  };\n\n  return (\n    <>\n      <Box p={1} verticalAlign=\"middle\">\n        <AccountSelector />\n        <Button onClick={createAccount}>Create account</Button>\n      </Box>\n\n      <Box p={1} verticalAlign=\"middle\">\n        <CollateralSelector />\n        {tokenAddress ? (\n          <>\n            <Input\n              disabled\n              type=\"text\"\n              name=\"accountId\"\n              value={allowance.data?.toString() || 'No allowance'}\n              width=\"20em\"\n              mr=\"1em\"\n            />\n            <Button onClick={approve}>Approve {symbol}</Button>\n          </>\n        ) : null}\n      </Box>\n\n      {accountCollateralData ? (\n        <>\n          <Box p={1}>\n            <Text>\n              {symbol} address:{' '}\n              <code\n                onClick={() => {\n                  try {\n                    navigator.clipboard.writeText(accountCollateralData.tokenAddress);\n                  } catch (e) {}\n                }}\n                style={{ cursor: 'pointer' }}\n              >\n                {tokenAddress}\n              </code>\n            </Text>\n            <Text>\n              Wallet Balance: <Amount value={tokenBalance.data} /> {symbol}\n            </Text>\n          </Box>\n\n          <Box mt={10} p={1} verticalAlign=\"middle\">\n            <Input type=\"number\" step={1} min={0} name=\"deposit\" width=\"20em\" mr=\"1em\" />\n            <Button onClick={deposit}>Deposit</Button>\n          </Box>\n          <Box p={1}>\n            <Text>\n              Deposited: <Amount value={accountCollateralData.totalDeposited} /> {symbol}\n            </Text>\n          </Box>\n\n          <Box mt={10} p={1} verticalAlign=\"middle\">\n            <PoolSelector />\n            <Input\n              isDisabled={!pool}\n              type=\"number\"\n              step={1}\n              min={0}\n              name=\"delegate\"\n              width=\"20em\"\n              mr=\"1em\"\n            />\n            <Button isDisabled={!pool} onClick={delegate}>\n              Update delegated\n            </Button>\n          </Box>\n          <Box p={1}>\n            <Text>\n              Delegated: <Amount value={accountCollateralData.totalAssigned} /> {symbol}\n            </Text>\n          </Box>\n\n          <Box mt={10} p={1}>\n            <Text\n              title={\n                accountCollateralUnlockDate.data\n                  ? intlFormat(accountCollateralUnlockDate.data, {\n                      year: 'numeric',\n                      month: 'numeric',\n                      day: 'numeric',\n                      hour: 'numeric',\n                      minute: 'numeric',\n                    })\n                  : '~'\n              }\n            >\n              Collateral unlocks: {timeToUnlock}\n            </Text>\n          </Box>\n\n          <Box p={1} verticalAlign=\"middle\">\n            <Input\n              type=\"number\"\n              step={1}\n              min={0}\n              max={parseFloat(accountCollateralData.availableCollateral?.toString() || '0')}\n              name=\"withdraw\"\n              width=\"20em\"\n              mr=\"1em\"\n            />\n            <Button onClick={withdraw}>Withdraw</Button>\n          </Box>\n          <Box p={1}>\n            <Text>\n              Available collateral:{' '}\n              <Amount value={accountCollateralData.availableCollateral} suffix={` ${symbol}`} />\n            </Text>\n          </Box>\n        </>\n      ) : null}\n    </>\n  );\n}\n","import { Badge, Link, Text } from '@chakra-ui/react';\nimport { useMemo } from 'react';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { Amount } from '@snx-v3/Amount';\nimport Wei from '@synthetixio/wei';\n\nexport function Balance({\n  balance,\n  symbol,\n  address,\n  onMax,\n  hideBuyButton,\n}: {\n  balance?: Wei;\n  symbol: string;\n  address: string;\n  onMax?: (balance: Wei) => void;\n  hideBuyButton?: boolean;\n}) {\n  const { network } = useNetwork();\n  const buyAssetLink = useMemo(() => {\n    switch (network?.name) {\n      case 'goerli':\n        return `https://goerli.etherscan.io/address/${address}#writeContract`;\n      case 'sepolia':\n        return `https://sepolia.etherscan.io/address/${address}#writeContract`;\n      case 'optimism-goerli':\n        return `https://goerli-optimism.etherscan.io/address/${address}#writeContract`;\n      case 'optimism':\n        return `https://app.1inch.io/#/10/unified/swap/ETH/${symbol.toUpperCase()}`;\n      default:\n        return `https://app.1inch.io/#/1/unified/swap/ETH/${symbol.toUpperCase()}`;\n    }\n  }, [address, network?.name, symbol]);\n\n  return (\n    <Text display=\"flex\" gap={2} alignItems=\"center\" fontSize=\"xs\">\n      Balance:\n      <Amount value={balance} suffix={` ${symbol}`} />\n      {balance && balance.eq(0) && buyAssetLink && !hideBuyButton && (\n        <Link href={buyAssetLink} isExternal>\n          <Badge ml=\"1\" variant=\"outline\" transform=\"translateY(-1px)\">\n            Buy {symbol}\n          </Badge>\n        </Link>\n      )}\n      {onMax && balance?.gt(0) && (\n        <Badge as=\"button\" type=\"button\" variant=\"outline\" onClick={() => onMax(balance)}>\n          Use Max\n        </Badge>\n      )}\n    </Text>\n  );\n}\n","import { createMachine, assign } from 'xstate';\n\nexport const Events = {\n  SET_REQUIRE_APPROVAL: 'SET_REQUIRE_APPROVAL',\n  SET_INFINITE_APPROVAL: 'SET_INFINITE_APPROVAL',\n  RETRY: 'RETRY',\n  RUN: 'RUN',\n  SUCCESS: 'SUCCESS',\n  FAILURE: 'FAILURE',\n  RESET: 'RESET',\n} as const;\n\nexport const State = {\n  idle: 'idle',\n  approve: 'approve',\n  teleport: 'teleport',\n  failed: 'failed',\n  success: 'success',\n} as const;\n\nconst FailedSteps = {\n  [State.approve]: State.approve,\n  [State.teleport]: State.teleport,\n} as const;\n\nexport const ServiceNames = {\n  approve: 'approve',\n  teleport: 'teleport',\n} as const;\n\ntype Context = {\n  error: {\n    error: Error;\n    step: keyof typeof FailedSteps;\n  } | null;\n  requireApproval: boolean;\n  infiniteApproval: boolean;\n};\n\ntype EventNamesType = typeof Events;\ntype TeleportEvents =\n  | { type: EventNamesType['SET_REQUIRE_APPROVAL']; requireApproval: boolean }\n  | { type: EventNamesType['SET_INFINITE_APPROVAL']; infiniteApproval: boolean }\n  | { type: EventNamesType['RETRY'] }\n  | { type: EventNamesType['RUN'] }\n  | { type: EventNamesType['SUCCESS'] }\n  | { type: EventNamesType['FAILURE'] }\n  | { type: EventNamesType['RESET'] };\n\ntype StateType = typeof State;\ntype MachineState =\n  | {\n      value: StateType['idle'];\n      context: Context & { error: null };\n    }\n  | {\n      value: StateType['approve'];\n      context: Context & { error: null };\n    }\n  | {\n      value: StateType['teleport'];\n      context: Context & { error: null };\n    }\n  | {\n      value: StateType['failed'];\n      context: Context & { error: { error: Error; step: keyof typeof FailedSteps } };\n    }\n  | {\n      value: StateType['success'];\n      context: Context & {\n        error: null;\n      };\n    };\n\nconst initialContext = {\n  error: null,\n  requireApproval: false,\n  infiniteApproval: false,\n};\n\nexport const TeleportMachine = createMachine<Context, TeleportEvents, MachineState>({\n  id: 'TeleportMachine',\n  initial: State.idle,\n  predictableActionArguments: true,\n  context: initialContext,\n  on: {\n    [Events.RUN]: {\n      target: State.teleport,\n      actions: assign({\n        error: (_) => initialContext.error,\n        requireApproval: (_) => initialContext.requireApproval,\n        infiniteApproval: (_) => initialContext.infiniteApproval,\n      }),\n    },\n    [Events.SET_REQUIRE_APPROVAL]: {\n      actions: assign({ requireApproval: (_context, event) => event.requireApproval }),\n    },\n\n    [Events.SET_INFINITE_APPROVAL]: {\n      actions: assign({ infiniteApproval: (_context, event) => event.infiniteApproval }),\n    },\n  },\n  states: {\n    [State.idle]: {\n      on: {\n        [Events.RUN]: [\n          { target: State.approve, cond: (context) => context.requireApproval },\n          { target: State.teleport },\n        ],\n      },\n    },\n    [State.approve]: {\n      invoke: {\n        src: ServiceNames.approve,\n        onDone: {\n          target: State.teleport,\n        },\n        onError: {\n          target: State.failed,\n          actions: assign({\n            error: (_context, event) => ({ error: event.data, step: FailedSteps.approve }),\n          }),\n        },\n      },\n    },\n    [State.teleport]: {\n      invoke: {\n        src: ServiceNames.teleport,\n        onDone: {\n          target: State.success,\n        },\n        onError: {\n          target: State.failed,\n          actions: assign({\n            error: (_context, event) => ({ error: event.data, step: FailedSteps.teleport }),\n          }),\n        },\n      },\n    },\n    [State.failed]: {\n      on: {\n        [Events.RESET]: [{ target: State.idle }],\n        [Events.RETRY]: [\n          {\n            target: State.approve,\n            cond: (c) => c.error?.step === FailedSteps.approve,\n            actions: assign({ error: (_) => null }),\n          },\n\n          {\n            target: State.teleport,\n            cond: (c) => c.error?.step === FailedSteps.teleport,\n            actions: assign({ error: (_) => null }),\n          },\n        ],\n      },\n    },\n    [State.success]: {},\n  },\n});\n","import {\n  Button,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  useToast,\n  Link,\n} from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { ContractError } from '@snx-v3/ContractError';\nimport { Multistep } from '@snx-v3/Multistep';\nimport { useApprove } from '@snx-v3/useApprove';\nimport { CollateralType } from '@snx-v3/useCollateralTypes';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useTeleport } from '@snx-v3/useTeleport';\nimport { useUSDProxy } from '@snx-v3/useUSDProxy';\nimport { Wei } from '@synthetixio/wei';\nimport { useMachine } from '@xstate/react';\nimport { FC, useCallback, useEffect } from 'react';\nimport type { StateFrom } from 'xstate';\nimport { TeleportMachine, Events, ServiceNames, State } from './TeleporterMachine';\nimport { Contract, ethers } from 'ethers';\nimport { useEthBalance } from '@snx-v3/useEthBalance';\n\nexport const TeleporterModalUi: FC<{\n  amount: Wei;\n  isOpen: boolean;\n  onClose: () => void;\n  collateralType?: CollateralType;\n  state: StateFrom<typeof TeleportMachine>;\n  setInfiniteApproval: (x: boolean) => void;\n  onSubmit: () => void;\n  toNetworkName: string;\n  txnHash: string | null;\n}> = ({\n  amount,\n  isOpen,\n  onClose,\n  setInfiniteApproval,\n  onSubmit,\n  state,\n  toNetworkName,\n  txnHash,\n}) => {\n  const infiniteApproval = state.context.infiniteApproval;\n  const requireApproval = state.context.requireApproval;\n  const error = state.context.error;\n  const isProcessing = state.matches(State.approve) || state.matches(State.teleport);\n\n  return (\n    <Modal size=\"lg\" isOpen={isOpen} onClose={onClose} closeOnOverlayClick={false}>\n      <ModalOverlay />\n      <ModalContent bg=\"black\" color=\"white\">\n        <ModalHeader>Complete this action</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <Text mb=\"2\">Please execute the following transactions:</Text>\n\n          <Multistep\n            step={1}\n            title=\"Approve snxUSD\"\n            status={{\n              failed: error?.step === State.approve,\n              success: !requireApproval || state.matches(State.success),\n              loading: state.matches(State.approve) && !error,\n            }}\n            checkboxLabel=\"Approve unlimited\"\n            checkboxProps={{\n              isChecked: infiniteApproval,\n              onChange: (e) => setInfiniteApproval(e.target.checked),\n            }}\n          />\n\n          <Multistep\n            step={2}\n            title=\"Teleport snxUSD\"\n            subtitle={\n              <>\n                {state.matches(State.success) ? (\n                  <Text>\n                    Teleport for <Amount value={amount} suffix={` snxUSD`} /> to {toNetworkName}{' '}\n                    executed. Check{' '}\n                    <Link\n                      color=\"cyan.500\"\n                      href={`https://ccip.chain.link/tx/${txnHash}`}\n                      target=\"_blank\"\n                    >\n                      ccip explorer\n                    </Link>{' '}\n                    for status.\n                  </Text>\n                ) : (\n                  <Text>\n                    This will teleport <Amount value={amount} suffix={` snxUSD`} /> to{' '}\n                    {toNetworkName}\n                  </Text>\n                )}\n              </>\n            }\n            status={{\n              failed: error?.step === State.teleport,\n              disabled: state.matches(State.success) && requireApproval,\n              success: state.matches(State.success),\n              loading: state.matches(State.teleport) && !error,\n            }}\n          />\n\n          <Button isDisabled={isProcessing} onClick={onSubmit} width=\"100%\" my=\"4\">\n            {(() => {\n              switch (true) {\n                case Boolean(error):\n                  return 'Retry';\n                case isProcessing:\n                  return 'Processing...';\n                case state.matches(State.success):\n                  return 'Done';\n                default:\n                  return 'Start';\n              }\n            })()}\n          </Button>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nconst ccipErrors = [\n  'error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)',\n  'error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)',\n  'error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)',\n  'error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)',\n  'error UnsupportedDestinationChain(uint64 destinationChainSelector)',\n  'error SenderNotAllowed(address sender)',\n  'error InsufficientFeeTokenAmount()',\n  'error InvalidMsgValue()',\n];\nexport type TeleportModalProps = FC<{\n  amount: Wei;\n  toNetworkName: string;\n  toNetworkId: number;\n  isOpen: boolean;\n  onClose: () => void;\n}>;\nexport const TeleporterModal: TeleportModalProps = ({\n  onClose,\n  isOpen,\n  amount,\n  toNetworkName,\n  toNetworkId,\n}) => {\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: USDProxy } = useUSDProxy();\n  const { data: ethBalance } = useEthBalance();\n  const { approve, requireApproval, refetchAllowance } = useApprove({\n    contractAddress: USDProxy?.address,\n    amount: amount.toBN(),\n    spender: CoreProxy?.address,\n  });\n\n  const toast = useToast({ isClosable: true, duration: 9000 });\n\n  const { exec: execTeleport, txnState } = useTeleport({\n    amount,\n    toNetworkId,\n    ethBalance,\n  });\n  const coreProxyAbi = CoreProxy?.interface.format(ethers.utils.FormatTypes.full) || [];\n\n  const errorParsingContract = new Contract(\n    '0x0000000000000000000000000000000000000000',\n    ccipErrors.concat(coreProxyAbi)\n  );\n  const errorParserCoreProxy = useContractErrorParser(errorParsingContract);\n\n  const [state, send] = useMachine(TeleportMachine, {\n    services: {\n      [ServiceNames.approve]: async () => {\n        try {\n          toast({\n            title: 'Approve snxUSD',\n            description: 'The next transaction will teleport.',\n            status: 'info',\n          });\n\n          await approve(Boolean(state.context.infiniteApproval));\n          await refetchAllowance();\n        } catch (error: any) {\n          const contractError = errorParserCoreProxy(error);\n          if (contractError) {\n            console.error(new Error(contractError.name), contractError);\n          }\n          toast.closeAll();\n          toast({\n            title: 'Approval failed',\n            description: contractError ? (\n              <ContractError contractError={contractError} />\n            ) : (\n              'Please try again.'\n            ),\n            status: 'error',\n          });\n          throw Error('Approve failed', { cause: error });\n        }\n      },\n\n      [ServiceNames.teleport]: async () => {\n        try {\n          toast.closeAll();\n          toast({\n            title: 'Teleporting',\n            description: '',\n          });\n          await execTeleport();\n          toast.closeAll();\n          toast({\n            title: 'Success',\n            description: 'Teleportation executed.',\n            status: 'success',\n            duration: 5000,\n          });\n        } catch (error: any) {\n          const contractError = errorParserCoreProxy(error);\n          if (contractError) {\n            console.error(new Error(contractError.name), contractError);\n          }\n          toast({\n            title: 'Teleport failed',\n            description: contractError ? (\n              <ContractError contractError={contractError} />\n            ) : (\n              'Please try again.'\n            ),\n            status: 'error',\n          });\n          throw Error('Teleport failed', { cause: error });\n        }\n      },\n    },\n  });\n\n  useEffect(() => {\n    send(Events.SET_REQUIRE_APPROVAL, { requireApproval });\n  }, [requireApproval, send]);\n\n  const handleClose = useCallback(() => {\n    send(Events.RESET);\n    onClose();\n  }, [send, onClose]);\n\n  const onSubmit = useCallback(async () => {\n    if (state.matches(State.success)) {\n      handleClose();\n      return;\n    }\n    if (state.context.error) {\n      send(Events.RETRY);\n      return;\n    }\n    send(Events.RUN);\n  }, [handleClose, send, state]);\n\n  return (\n    <TeleporterModalUi\n      amount={amount}\n      isOpen={isOpen}\n      onClose={onClose}\n      toNetworkName={toNetworkName}\n      state={state}\n      setInfiniteApproval={(infiniteApproval) => {\n        send(Events.SET_INFINITE_APPROVAL, { infiniteApproval });\n      }}\n      txnHash={txnState.txnHash}\n      onSubmit={onSubmit}\n    />\n  );\n};\n","import { useReducer } from 'react';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { CoreProxyType } from '@synthetixio/v3-contracts';\nimport { useMutation } from '@tanstack/react-query';\nimport { useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport Wei from '@synthetixio/wei';\nimport { formatGasPriceForTransaction } from '@snx-v3/useGasOptions';\nimport { getGasPrice } from '@snx-v3/useGasPrice';\nimport { useGasSpeed } from '@snx-v3/useGasSpeed';\n\n/**\n * This is the function that estimates the fee for the teleport.\n * value is used to pay for the chainlink + destination fee.\n * We don't know how much that is, so we use a static call with a lot of eth\n * Then call will return the fee we need to pay.\n * This can also be called from the component to show the fee before the user clicks on the button.\n */\nexport const estimateTeleport = async ({\n  CoreProxy,\n  toNetworkId,\n  amount,\n  ethBalance,\n}: {\n  CoreProxy: CoreProxyType;\n  toNetworkId: number;\n  amount: Wei;\n  ethBalance: Wei;\n}) => {\n  const fee = await CoreProxy.callStatic.transferCrossChain(toNetworkId, amount.toBN(), {\n    value: ethBalance.mul(0.9).toBN(),\n  });\n  return fee;\n};\nexport const useTeleport = ({\n  toNetworkId,\n  amount,\n  ethBalance,\n}: {\n  toNetworkId: number;\n  amount: Wei;\n  ethBalance?: Wei;\n}) => {\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n  const { data: CoreProxy } = useCoreProxy();\n\n  const signer = useSigner();\n  const { gasSpeed } = useGasSpeed();\n  const provider = useProvider();\n\n  const mutation = useMutation({\n    mutationFn: async () => {\n      if (!signer || !CoreProxy || !provider) throw new Error('No signer or CoreProxy');\n\n      if (!ethBalance) return;\n      if (ethBalance.eq(0)) return;\n      if (amount.eq(0)) return;\n\n      try {\n        dispatch({ type: 'prompting' });\n        const fee = await estimateTeleport({\n          CoreProxy,\n          toNetworkId,\n          amount,\n          ethBalance,\n        });\n        const gasPricesPromised = getGasPrice({ provider });\n        const gasLimitPromised = CoreProxy.estimateGas.transferCrossChain(\n          toNetworkId,\n          amount.toBN(),\n          { value: fee }\n        );\n\n        const populatedTxnPromised = CoreProxy.populateTransaction.transferCrossChain(\n          toNetworkId,\n          amount.toBN(),\n          {\n            gasLimit: gasLimitPromised,\n            value: fee,\n          }\n        );\n        const [gasPrices, gasLimit, populatedTxn] = await Promise.all([\n          gasPricesPromised,\n          gasLimitPromised,\n          populatedTxnPromised,\n        ]);\n\n        const gasOptionsForTransaction = formatGasPriceForTransaction({\n          gasLimit,\n          gasPrices,\n          gasSpeed,\n        });\n\n        const txn = await signer.sendTransaction({ ...populatedTxn, ...gasOptionsForTransaction });\n        dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n        await txn.wait();\n        dispatch({ type: 'success' });\n      } catch (error: any) {\n        dispatch({ type: 'error', payload: { error } });\n        throw error;\n      }\n    },\n  });\n  return {\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n};\n","import {\n  Box,\n  Button,\n  Divider,\n  Flex,\n  Heading,\n  Link,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Text,\n} from '@chakra-ui/react';\nimport { Balance } from '@snx-v3/Balance';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { useTokenBalance, useTokenBalanceForChain } from '@snx-v3/useTokenBalance';\nimport { FC, useState } from 'react';\nimport Head from 'react-helmet';\nimport { TeleporterModal } from './TeleporterModal';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { CCIP, ChevronDown, ChevronUp, DollarCircle } from '@snx-v3/icons';\nimport { Network, NetworkIcon, NETWORKS, useNetwork, useWallet } from '@snx-v3/useBlockchain';\nimport { useConnectWallet } from '@web3-onboard/react';\nimport { useUSDProxy, useUSDProxyForChain } from '@snx-v3/useUSDProxy';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { HomeLink } from '@snx-v3/HomeLink';\n\nconst SUPPORTED_NETWORKS = NETWORKS.filter((network) => network.isSupported);\n\nexport const TeleporterUi: FC<{\n  connectedWallet?: string;\n  amount: Wei;\n  setAmount: (val: Wei) => void;\n  activeNetwork: Network | null;\n  setActiveNetwork: (networkId: number) => void;\n  balance?: Wei;\n  toBalance?: Wei;\n  toNetworkBalance?: Wei;\n  toNetwork?: Network;\n  setToNetwork: (network?: Network) => void;\n  onTeleportClick: () => void;\n  usdProxyAddress?: string;\n}> = ({\n  connectedWallet,\n  amount,\n  setAmount,\n  activeNetwork,\n  setActiveNetwork,\n  balance,\n  toNetworkBalance,\n  toNetwork,\n  setToNetwork,\n  usdProxyAddress,\n  onTeleportClick,\n}) => {\n  const [_, connect] = useConnectWallet();\n\n  return (\n    <Box maxW=\"600px\">\n      <HomeLink />\n      <Head>\n        <title>Teleport snxUSD</title>\n      </Head>\n      <Flex justifyContent=\"space-between\">\n        <Heading size=\"lg\">Teleport snxUSD</Heading>\n        <CCIP />\n      </Flex>\n      <Text mt={2} color=\"gray.500\">\n        Teleport your assets between layers using the teleporter. This transaction can take up to 30\n        minutes.{' '}\n        <Link\n          color=\"cyan.500\"\n          target=\"_blank\"\n          href=\"https://blog.synthetix.io/synthetix-launches-teleporters-with-chainlinks-ccip\"\n        >\n          Read more\n        </Link>{' '}\n        about teleporter and CCIP.\n      </Text>\n      <Divider mt={4} mb={4} />\n      <BorderBox flexDirection=\"column\" p=\"4\">\n        <BorderBox flexDirection=\"column\" p=\"4\">\n          <Menu>\n            {({ isOpen }) => (\n              <>\n                <Flex alignItems=\"center\" gap={2}>\n                  <Text>From</Text>\n                  <MenuButton\n                    as={Button}\n                    variant=\"outline\"\n                    colorScheme=\"gray\"\n                    sx={{ '> span': { display: 'flex', alignItems: 'center' } }}\n                    mr={1}\n                    width=\"fit-content\"\n                  >\n                    <NetworkIcon networkId={activeNetwork?.id} />\n                    <Text\n                      variant=\"nav\"\n                      fontSize=\"sm\"\n                      fontWeight={700}\n                      ml={1.5}\n                      mr={2}\n                      display={{ base: 'none', md: 'initial' }}\n                    >\n                      {activeNetwork?.label}\n                    </Text>\n                    <Flex display={{ base: 'none', md: 'initial' }}>\n                      {isOpen ? <ChevronUp color=\"cyan\" /> : <ChevronDown color=\"cyan.500\" />}\n                    </Flex>\n                  </MenuButton>\n                </Flex>\n                <MenuList background=\"black\">\n                  {SUPPORTED_NETWORKS.filter((item) => item.name !== 'goerli')\n                    .filter((chain) => chain.id !== activeNetwork?.id)\n                    .map((chain) => {\n                      return (\n                        <MenuItem\n                          onClick={() => {\n                            setActiveNetwork(chain.id);\n                            if (chain.id === toNetwork?.id) {\n                              // If user pick the same network as to, reset toNetwork\n                              setToNetwork(undefined);\n                            }\n                          }}\n                          display=\"flex\"\n                          alignItems=\"center\"\n                          key={chain.id}\n                        >\n                          <NetworkIcon networkId={chain?.id} />\n                          <Text variant=\"nav\" ml={2}>\n                            {chain.label}\n                          </Text>\n                        </MenuItem>\n                      );\n                    })}\n                </MenuList>\n              </>\n            )}\n          </Menu>\n          <Flex>\n            <Text display=\"flex\" gap={2} alignItems=\"center\" fontWeight=\"600\">\n              <DollarCircle width=\"35px\" height=\"35px\" />\n              snxUSD\n            </Text>\n            <Flex\n              flexDirection=\"column\"\n              justifyContent=\"flex-end\"\n              alignItems=\"flex-end\"\n              flexGrow={1}\n            >\n              <NumberInput\n                InputProps={{\n                  isRequired: true,\n                  'data-max': balance?.toString(),\n                  autoFocus: true,\n                }}\n                value={amount}\n                onChange={(val) => setAmount(val)}\n                max={balance}\n              />\n              <Balance\n                onMax={setAmount}\n                balance={balance}\n                symbol=\"snxUSD\"\n                address={usdProxyAddress || ''}\n              />\n            </Flex>\n          </Flex>\n\n          <Flex alignItems=\"center\" justifyContent=\"flex-end\"></Flex>\n        </BorderBox>\n\n        <BorderBox flexDirection=\"column\" p=\"4\" mt={4}>\n          <Menu>\n            {({ isOpen }) => (\n              <>\n                <Flex alignItems=\"center\" gap={2}>\n                  <Text>To</Text>\n                  <MenuButton\n                    as={Button}\n                    variant=\"outline\"\n                    colorScheme=\"gray\"\n                    sx={{ '> span': { display: 'flex', alignItems: 'center' } }}\n                    mr={1}\n                    width=\"fit-content\"\n                  >\n                    {toNetwork ? (\n                      <>\n                        <NetworkIcon networkId={toNetwork.id} />\n                        <Text\n                          variant=\"nav\"\n                          fontSize=\"sm\"\n                          fontWeight={700}\n                          ml={1.5}\n                          mr={2}\n                          display={{ base: 'none', md: 'initial' }}\n                        >\n                          {toNetwork.label}\n                        </Text>\n                      </>\n                    ) : (\n                      'Select Network'\n                    )}\n                    <Flex display={{ base: 'none', md: 'initial' }}>\n                      {isOpen ? <ChevronUp color=\"cyan\" /> : <ChevronDown color=\"cyan.500\" />}\n                    </Flex>\n                  </MenuButton>\n                </Flex>\n                <MenuList background=\"black\">\n                  {SUPPORTED_NETWORKS.filter((item) => item.name !== 'goerli')\n                    .filter((chain) => chain.id !== activeNetwork?.id)\n                    .filter((chain) =>\n                      activeNetwork?.isTestnet ? chain.isTestnet : !chain.isTestnet\n                    )\n                    .map((chain) => {\n                      return (\n                        <MenuItem\n                          onClick={() => {\n                            setToNetwork(chain);\n                          }}\n                          display=\"flex\"\n                          alignItems=\"center\"\n                          key={chain.id}\n                        >\n                          <NetworkIcon networkId={chain.id} />\n                          <Text variant=\"nav\" ml={2}>\n                            {chain.label}\n                          </Text>\n                        </MenuItem>\n                      );\n                    })}\n                </MenuList>\n              </>\n            )}\n          </Menu>\n\n          <Flex>\n            <Text display=\"flex\" gap={2} alignItems=\"center\">\n              <DollarCircle width=\"35px\" height=\"35px\" />\n              snxUSD\n            </Text>\n            <Flex\n              flexDirection=\"column\"\n              justifyContent=\"flex-end\"\n              alignItems=\"flex-end\"\n              flexGrow={1}\n            >\n              <NumberInput\n                InputProps={{\n                  isRequired: true,\n                  'data-max': balance?.toString(),\n                }}\n                value={amount}\n                onChange={(val) => setAmount(val)}\n                max={balance} // max is still the from balance\n              />\n              <Balance\n                hideBuyButton\n                onMax={setAmount}\n                balance={toNetworkBalance}\n                symbol=\"snxUSD\"\n                address={usdProxyAddress || ''}\n              />\n            </Flex>\n          </Flex>\n        </BorderBox>\n        {!connectedWallet ? (\n          <Button type=\"submit\" onClick={() => connect()}>\n            Connect Wallet\n          </Button>\n        ) : (\n          <Button onClick={onTeleportClick} isDisabled={!Boolean(balance?.gt(0) && toNetwork)}>\n            Teleport\n          </Button>\n        )}\n      </BorderBox>\n    </Box>\n  );\n};\n\nexport const Teleporter = () => {\n  const [amount, setAmount] = useState(wei(0));\n  const [txnModalOpen, setTxnModalOpen] = useState(false);\n\n  const { activeWallet } = useWallet();\n  const { network: activeNetwork, setNetwork } = useNetwork();\n  const [toNetwork, setToNetwork] = useState<Network | undefined>();\n\n  const { data: USDProxy } = useUSDProxy();\n  const { data: balance } = useTokenBalance(USDProxy?.address);\n\n  const { data: USDProxyForChain } = useUSDProxyForChain(toNetwork);\n  const { data: toBalance } = useTokenBalanceForChain(USDProxyForChain?.address, toNetwork);\n\n  return (\n    <>\n      <TeleporterUi\n        connectedWallet={activeWallet?.address}\n        activeNetwork={activeNetwork}\n        balance={balance}\n        amount={amount}\n        setAmount={setAmount}\n        toNetwork={toNetwork}\n        setToNetwork={setToNetwork}\n        setActiveNetwork={setNetwork}\n        toNetworkBalance={toNetwork ? toBalance : undefined}\n        usdProxyAddress={USDProxy?.address}\n        onTeleportClick={() => setTxnModalOpen(true)}\n      />\n      {toNetwork && (\n        <TeleporterModal\n          isOpen={txnModalOpen}\n          onClose={() => {\n            setTxnModalOpen(false);\n            setAmount(wei(0));\n          }}\n          toNetworkId={toNetwork.id}\n          toNetworkName={toNetwork.name}\n          amount={amount}\n        />\n      )}\n    </>\n  );\n};\n","import { Flex, Heading, Link } from '@chakra-ui/react';\nimport Head from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { Link as NavLink } from 'react-router-dom';\n\nexport const NotFoundPage = () => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Head>\n        <title>{t('not-found.page-title')}</title>\n      </Head>\n      <Flex\n        height=\"100%\"\n        direction=\"column\"\n        position=\"relative\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        flex=\"1\"\n      >\n        <Heading fontSize=\"5xl\">Not found</Heading>\n\n        <NavLink to=\"/\">\n          <Link color=\"cyan.500\">Return to Home</Link>\n        </NavLink>\n      </Flex>\n    </>\n  );\n};\n","import { Image, ImageProps } from '@chakra-ui/react';\n\ntype TokenSymbol = 'SNX' | 'sUSD' | 'ETH' | 'USDC';\n\ninterface TokenIconProps extends ImageProps {\n  symbol: TokenSymbol;\n  width?: number;\n  height?: number;\n}\n\nexport const TokenIcon = ({ symbol, width = 30, height = 30, ...props }: TokenIconProps) => {\n  return (\n    <Image\n      src={`https://synthetixio.github.io/synthetix-assets/collateral/${symbol.toUpperCase()}.svg`}\n      alt={symbol}\n      style={{ width, height }}\n      {...props}\n    />\n  );\n};\n","import { Flex, Td, Tr, Text, Button, Fade } from '@chakra-ui/react';\nimport { TokenIcon } from '../../TokenIcon';\n\ninterface AssetsRowProps {\n  token: 'SNX' | 'sUSD' | 'ETH' | 'USDC';\n  name: string;\n  walletBalance: number;\n  walletBalance$: number;\n  accountBalance: number;\n  accountBalance$: number;\n  delegatedBalance: number;\n  delegatedBalance$: number;\n  final: boolean; // Used for hiding bottom border\n}\n\nexport const AssetsRow = ({\n  token,\n  name,\n  walletBalance,\n  walletBalance$,\n  accountBalance,\n  accountBalance$,\n  delegatedBalance,\n  delegatedBalance$,\n  final,\n}: AssetsRowProps) => {\n  return (\n    <Tr borderBottomWidth={final ? 'none' : '1px'}>\n      <Td border=\"none\">\n        <Fade in>\n          <Flex alignItems=\"center\">\n            <TokenIcon symbol={token} />\n            <Flex flexDirection=\"column\" ml={3}>\n              <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n                {token}\n              </Text>\n              <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n                {name}\n              </Text>\n            </Flex>\n          </Flex>\n        </Fade>\n      </Td>\n      <Td border=\"none\">\n        <Fade in>\n          <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n            <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n              ${walletBalance$}\n            </Text>\n            <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n              {walletBalance}\n              {` ${token}`}\n            </Text>\n          </Flex>\n        </Fade>\n      </Td>\n      <Td border=\"none\">\n        <Fade in>\n          <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n            <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n              ${accountBalance$}\n            </Text>\n            <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n              {accountBalance}\n              {` ${token}`}\n            </Text>\n          </Flex>\n        </Fade>\n      </Td>\n      <Td border=\"none\">\n        <Fade in>\n          <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n            <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n              ${delegatedBalance$}\n            </Text>\n            <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n              {delegatedBalance}\n              {` ${token}`}\n            </Text>\n          </Flex>\n        </Fade>\n      </Td>\n      <Td border=\"none\">\n        <Fade in>\n          <Flex flexDirection=\"column\">\n            <Button\n              variant=\"unstyled\"\n              fontSize=\"0.75rem\"\n              lineHeight=\"1rem\"\n              height=\"1.75rem\"\n              fontWeight={700}\n              borderWidth=\"1px\"\n              borderColor=\"gray.900\"\n              borderRadius=\"4px\"\n              _hover={{ bg: 'gray.900' }}\n            >\n              Withdraw\n            </Button>\n          </Flex>\n        </Fade>\n      </Td>\n    </Tr>\n  );\n};\n","import { InfoIcon } from '@chakra-ui/icons';\nimport { Thead, Tr, Th, Flex, Text, Tooltip } from '@chakra-ui/react';\n\nexport const AssetTableHeader = () => {\n  return (\n    <Thead>\n      <Tr>\n        <Th\n          py={5}\n          textTransform=\"unset\"\n          color=\"gray.600\"\n          border=\"none\"\n          fontFamily=\"heading\"\n          fontSize=\"12px\"\n          lineHeight=\"16px\"\n        >\n          Asset\n        </Th>\n        <Th border=\"none\" textTransform=\"unset\" py={5}>\n          <Flex justifyContent=\"flex-end\" alignItems=\"center\">\n            <Text color=\"gray.600\" fontFamily=\"heading\" fontSize=\"12px\" lineHeight=\"16px\" mr={1}>\n              Wallet Balance{' '}\n            </Text>\n            <Tooltip label=\"Assets currently in your wallet that can be deposited to your Synthetix Account, and utilized as collateral by delegating them to a pool\">\n              <InfoIcon w=\"12px\" h=\"12px\" />\n            </Tooltip>\n          </Flex>\n        </Th>\n        <Th border=\"none\" textTransform=\"unset\" py={5}>\n          <Flex justifyContent=\"flex-end\" alignItems=\"center\">\n            <Text color=\"gray.600\" fontFamily=\"heading\" fontSize=\"12px\" lineHeight=\"16px\" mr={1}>\n              Account Balance\n            </Text>\n            <Tooltip label=\"Assets deposited in your account. These assets are available to be delegated to a pool\">\n              <InfoIcon w=\"12px\" h=\"12px\" />\n            </Tooltip>\n          </Flex>\n        </Th>\n        <Th border=\"none\" textTransform=\"unset\" py={5}>\n          <Flex justifyContent=\"flex-end\" alignItems=\"center\">\n            <Text color=\"gray.600\" fontFamily=\"heading\" fontSize=\"12px\" lineHeight=\"16px\" mr={1}>\n              Delegated\n            </Text>\n            <Tooltip label=\"Assets used as collateral in a Position\">\n              <InfoIcon w=\"12px\" h=\"12px\" />\n            </Tooltip>\n          </Flex>\n        </Th>\n        <Th\n          py={5}\n          textTransform=\"unset\"\n          color=\"gray.600\"\n          border=\"none\"\n          fontFamily=\"heading\"\n          fontSize=\"12px\"\n          lineHeight=\"16px\"\n        >\n          {' '}\n        </Th>\n      </Tr>\n    </Thead>\n  );\n};\n","import { InfoIcon } from '@chakra-ui/icons';\nimport { TableContainer, Table, Heading, Tooltip, Flex, Tbody, Td, Tr } from '@chakra-ui/react';\nimport { AssetsRow } from './AssetsRow';\nimport { AssetTableHeader } from './AssetTableHeader';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { AssetRowLoading } from '.';\n\ninterface Asset {\n  token: 'SNX' | 'sUSD' | 'ETH' | 'USDC';\n  name: string;\n  walletBalance: number;\n  walletBalance$: number;\n  accountBalance: number;\n  accountBalance$: number;\n  delegatedBalance: number;\n  delegatedBalance$: number;\n}\n\nconst mockAssets: Asset[] = [\n  {\n    token: 'SNX',\n    name: 'Synthetix',\n    walletBalance: 2000,\n    walletBalance$: 8000,\n    accountBalance: 500,\n    accountBalance$: 2000,\n    delegatedBalance: 10,\n    delegatedBalance$: 40,\n  },\n  {\n    token: 'ETH',\n    name: 'Ethirium',\n    walletBalance: 0.5,\n    walletBalance$: 500,\n    accountBalance: 1,\n    accountBalance$: 1000,\n    delegatedBalance: 0.1,\n    delegatedBalance$: 100,\n  },\n  {\n    token: 'sUSD',\n    name: 'Synthetic USD',\n    walletBalance: 4000,\n    walletBalance$: 4000,\n    accountBalance: 2000,\n    accountBalance$: 2000,\n    delegatedBalance: 1000,\n    delegatedBalance$: 1000,\n  },\n  {\n    token: 'USDC', // TODO: add token icon for synth usdc\n    name: 'sUSDC',\n    walletBalance: 10000,\n    walletBalance$: 10000,\n    accountBalance: 6000,\n    accountBalance$: 6000,\n    delegatedBalance: 1000,\n    delegatedBalance$: 1000,\n  },\n];\n\ninterface AssetsTableProps {\n  isLoading: boolean;\n}\n\nexport const AssetsTable = ({ isLoading }: AssetsTableProps) => {\n  const { network } = useNetwork();\n\n  return (\n    <TableContainer\n      maxW=\"100%\"\n      mt={4}\n      borderColor=\"gray.900\"\n      borderWidth=\"1px\"\n      borderRadius=\"5px\"\n      p={6}\n      sx={{\n        borderCollapse: 'separate !important',\n        borderSpacing: 0,\n      }}\n      bg=\"navy.700\"\n    >\n      <Flex alignItems=\"center\">\n        <Heading fontSize=\"18px\" fontWeight={700} lineHeight=\"28px\" color=\"gray.50\">\n          Assets\n        </Heading>\n        <Tooltip label={network?.name && `Collateral types configured for ${network?.name}`}>\n          <InfoIcon w=\"12px\" h=\"12px\" ml={2} />\n        </Tooltip>\n      </Flex>\n      <Table variant=\"simple\">\n        <AssetTableHeader />\n        <Tbody>\n          <Tr border=\"none\" borderTop=\"1px\" borderTopColor=\"gray.900\" width=\"100%\" height=\"0px\">\n            <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={5} />\n            <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={5} />\n            <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={5} />\n            <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={5} />\n            <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={5} />\n          </Tr>\n          {isLoading ? (\n            <>\n              <AssetRowLoading />\n              <AssetRowLoading />\n            </>\n          ) : (\n            <>\n              {mockAssets.map(\n                (\n                  {\n                    token,\n                    name,\n                    accountBalance,\n                    accountBalance$,\n                    delegatedBalance,\n                    delegatedBalance$,\n                    walletBalance,\n                    walletBalance$,\n                  },\n                  index\n                ) => {\n                  return (\n                    <AssetsRow\n                      key={token}\n                      token={token}\n                      name={name}\n                      walletBalance={walletBalance}\n                      walletBalance$={walletBalance$}\n                      accountBalance={accountBalance}\n                      accountBalance$={accountBalance$}\n                      delegatedBalance={delegatedBalance}\n                      delegatedBalance$={delegatedBalance$}\n                      final={index === mockAssets.length - 1}\n                    />\n                  );\n                }\n              )}\n            </>\n          )}\n        </Tbody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import { Skeleton, SkeletonCircle, SkeletonProps } from '@chakra-ui/react';\n\ninterface SynthSkeletonProps extends SkeletonProps {\n  children: React.ReactNode;\n}\n\nexport const SynthSkeleton = ({ children, ...props }: SynthSkeletonProps) => {\n  return (\n    <Skeleton startColor=\"gray.700\" endColor=\"navy.800\" {...props}>\n      {children}\n    </Skeleton>\n  );\n};\n\nexport const SynthCircle = ({ children, ...props }: SkeletonProps) => {\n  return (\n    <SkeletonCircle startColor=\"gray.700\" endColor=\"navy.800\" {...props}>\n      {children}\n    </SkeletonCircle>\n  );\n};\n","import { Tr, Td, Flex, Button, Text } from '@chakra-ui/react';\nimport { SynthSkeleton as Skeleton, SynthCircle as SkeletonCircle } from '../../Shared';\nimport { TokenIcon } from '../../TokenIcon';\n\nexport const AssetRowLoading = () => {\n  return (\n    <Tr borderBottomWidth=\"1px\">\n      <Td border=\"none\">\n        <Flex alignItems=\"center\">\n          <SkeletonCircle>\n            <TokenIcon symbol=\"SNX\" />\n          </SkeletonCircle>\n          <Flex flexDirection=\"column\" ml={3}>\n            <Skeleton height=\"1rem\" width=\"40%\" mb={1}>\n              <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n                SNX\n              </Text>\n            </Skeleton>\n            <Skeleton height=\"0.75rem\" width=\"70%\">\n              <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n                Synthetix Network Token\n              </Text>\n            </Skeleton>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td border=\"none\">\n        <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n          <Skeleton height=\"1rem\" width=\"40%\" mb={1}>\n            <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n              $1,500.00\n            </Text>\n          </Skeleton>\n          <Skeleton height=\"0.75rem\" width=\"70%\">\n            <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n              750.00 SNX\n            </Text>\n          </Skeleton>\n        </Flex>\n      </Td>\n      <Td border=\"none\">\n        <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n          <Skeleton height=\"1rem\" width=\"40%\" mb={1}>\n            <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n              $2,000.00\n            </Text>\n          </Skeleton>\n          <Skeleton height=\"0.75rem\" width=\"70%\">\n            <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n              1,000.00 SNX\n            </Text>\n          </Skeleton>\n        </Flex>\n      </Td>\n      <Td border=\"none\">\n        <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n          <Skeleton height=\"1rem\" width=\"40%\" mb={1}>\n            <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n              $2,000.00\n            </Text>\n          </Skeleton>\n          <Skeleton height=\"0.75rem\" width=\"70%\">\n            <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n              1,000.00 SNX\n            </Text>\n          </Skeleton>\n        </Flex>\n      </Td>\n      <Td border=\"none\">\n        <Flex flexDirection=\"column\">\n          <Button\n            variant=\"unstyled\"\n            fontSize=\"0.75rem\"\n            lineHeight=\"1rem\"\n            height=\"1.75rem\"\n            fontWeight={700}\n            borderWidth=\"1px\"\n            borderColor=\"gray.900\"\n            borderRadius=\"4px\"\n            disabled\n          >\n            Withdraw\n          </Button>\n        </Flex>\n      </Td>\n    </Tr>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { AssetsTable } from './AssetTable';\n\nexport const AssetsList = () => {\n  const [isLoading, setIsLoading] = useState(true); // TEMP\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 5000);\n  }, []);\n\n  return <AssetsTable isLoading={isLoading} />;\n};\n","import { InfoIcon } from '@chakra-ui/icons';\nimport { Flex, Text, Tooltip, Fade } from '@chakra-ui/react';\nimport { SynthSkeleton as Skeleton } from '../Shared';\n\ninterface StatBoxProps {\n  isLoading: boolean;\n  title: string;\n  label?: string;\n  value?: string;\n}\n\nexport const StatBox = ({ isLoading, title, label, value }: StatBoxProps) => {\n  return (\n    <Flex\n      bg=\"navy.700\"\n      border=\"1px solid\"\n      borderColor=\"gray.900\"\n      rounded=\"base\"\n      flexDir=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      w=\"297px\"\n      height=\"88px\"\n      px={6}\n      py={4}\n    >\n      <Flex alignItems=\"center\" mb={1}>\n        <Text fontSize=\"14px\" color=\"gray.500\" mr={1}>\n          {title}\n        </Text>\n        {label && (\n          <Tooltip label={label} p={2} mt={1}>\n            <InfoIcon w=\"10px\" h=\"10px\" />\n          </Tooltip>\n        )}\n      </Flex>\n      <Flex w=\"100%\" justifyContent=\"center\" height=\"36px\" alignItems=\"center\">\n        <Skeleton\n          isLoaded={!isLoading}\n          height=\"24px\"\n          minWidth={isLoading ? '40%' : 'initial'}\n          startColor=\"gray.700\"\n          endColor=\"navy.800\"\n        >\n          <Fade in>\n            <Text fontSize=\"24px\" lineHeight=\"24px\" fontWeight={800}>\n              {value || 'Place'}\n            </Text>\n          </Fade>\n        </Skeleton>\n      </Flex>\n    </Flex>\n  );\n};\n","import { Badge, Button, Fade, Flex, Td, Text, Tr } from '@chakra-ui/react';\nimport { TokenIcon } from '../../TokenIcon';\nimport Wei from '@synthetixio/wei';\n\nexport default function PositionRow({\n  symbol,\n  token,\n  name,\n  delegated$,\n  delegated,\n  apy,\n  pnl,\n  pnlPercentage,\n  borrowed,\n  borrowed$,\n  debt,\n  cRatio,\n  final,\n}: {\n  token: string;\n  symbol: 'SNX' | 'sUSD' | 'ETH' | 'USDC';\n  name: string;\n  delegated$: Wei;\n  delegated: Wei;\n  apy: number;\n  pnl: number;\n  pnlPercentage: number;\n  borrowed: Wei;\n  borrowed$: Wei;\n  debt: Wei;\n  cRatio: number;\n  final: boolean; // Used for hiding bottom border\n}) {\n  return (\n    <Tr borderBottomWidth={final ? 'none' : '1px'}>\n      <Td border=\"none\">\n        <Fade in>\n          <Flex alignItems=\"center\">\n            <TokenIcon symbol={symbol} />\n            <Flex flexDirection=\"column\" ml={3}>\n              <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n                {token}\n              </Text>\n              <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n                {name}\n              </Text>\n            </Flex>\n          </Flex>\n        </Fade>\n      </Td>\n      <Td border=\"none\">\n        <Fade in>\n          <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n            <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n              ${delegated$.toNumber().toLocaleString()}\n            </Text>\n            <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n              {delegated.toNumber()}\n              {` ${token}`}\n            </Text>\n          </Flex>\n        </Fade>\n      </Td>\n      <Td border=\"none\">\n        <Fade in>\n          <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n            <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n              {apy}%\n            </Text>\n          </Flex>\n        </Fade>\n      </Td>\n      <Td border=\"none\">\n        <Fade in>\n          <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n            <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n              ${pnl.toLocaleString('us-EN')}\n            </Text>\n            <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n              {pnlPercentage}%\n            </Text>\n          </Flex>\n        </Fade>\n      </Td>\n      <Td border=\"none\">\n        <Fade in>\n          <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n            <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n              {borrowed$.eq(0) ? 'N/A' : `$${borrowed$.toNumber().toLocaleString()}`}\n            </Text>\n            <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n              {borrowed.toNumber()} {token}\n            </Text>\n          </Flex>\n        </Fade>\n      </Td>\n      <Td border=\"none\">\n        <Fade in>\n          <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n            <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n              {debt.toNumber().toLocaleString()}\n            </Text>\n            <Text color=\"cyan.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n              {debt.gt(0) ? 'Repay Debt' : 'Claim Credit'}\n            </Text>\n          </Flex>\n        </Fade>\n      </Td>\n      <Td border=\"none\">\n        <Fade in>\n          <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n            <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n              {cRatio === Infinity ? 'Infinite' : cRatio}%\n            </Text>\n            <Badge colorScheme=\"green\" border=\"1px solid\" bg=\"green.900\">\n              HEALTHY\n            </Badge>\n          </Flex>\n        </Fade>\n      </Td>\n      <Td border=\"none\">\n        <Flex flexDirection=\"column\">\n          <Button\n            fontSize=\"0.75rem\"\n            lineHeight=\"1rem\"\n            height=\"1.75rem\"\n            fontWeight={700}\n            borderWidth=\"1px\"\n            borderColor=\"gray.900\"\n            borderRadius=\"4px\"\n          >\n            Manage\n          </Button>\n        </Flex>\n      </Td>\n    </Tr>\n  );\n}\n","import { Badge, Button, Flex, Td, Text, Tr } from '@chakra-ui/react';\nimport { SynthSkeleton as Skeleton, SynthCircle as SkeletonCircle } from '../../Shared';\nimport { TokenIcon } from '../../TokenIcon';\n\nexport default function PositionsRowLoading() {\n  return (\n    <Tr borderBottomWidth=\"1px\">\n      <Td border=\"none\">\n        <Flex alignItems=\"center\">\n          <SkeletonCircle>\n            <TokenIcon symbol=\"SNX\" />\n          </SkeletonCircle>\n          <Flex flexDirection=\"column\" ml={3}>\n            <Skeleton height=\"1rem\" mb={1} width=\"70%\">\n              <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n                sUSDC\n              </Text>\n            </Skeleton>\n            <Skeleton height=\"0.75rem\">\n              <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n                Synthetic USDC\n              </Text>\n            </Skeleton>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td border=\"none\">\n        <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n          <Skeleton height=\"1rem\" mb={1}>\n            <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n              $100,000,00\n            </Text>\n          </Skeleton>\n          <Skeleton height=\"0.75rem\">\n            <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n              100,000 SNX\n            </Text>\n          </Skeleton>\n        </Flex>\n      </Td>\n      <Td border=\"none\">\n        <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n          <Skeleton height=\"1rem\" width=\"80%\">\n            <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n              15%\n            </Text>\n          </Skeleton>\n        </Flex>\n      </Td>\n      <Td border=\"none\">\n        <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n          <Skeleton height=\"1rem\" mb={1}>\n            <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n              $5,000\n            </Text>\n          </Skeleton>\n          <Skeleton height=\"0.75rem\">\n            <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n              22%\n            </Text>\n          </Skeleton>\n        </Flex>\n      </Td>\n      <Td border=\"none\">\n        <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n          <Skeleton height=\"1rem\" mb={1}>\n            <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n              $100,000\n            </Text>\n          </Skeleton>\n          <Skeleton height=\"0.75rem\">\n            <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n              200 SNX\n            </Text>\n          </Skeleton>\n        </Flex>\n      </Td>\n      <Td border=\"none\">\n        <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n          <Skeleton height=\"1rem\" mb={1} width=\"70%\">\n            <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n              $20,000\n            </Text>\n          </Skeleton>\n          <Skeleton height=\"0.75rem\">\n            <Text color=\"cyan.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n              Claim Credit\n            </Text>\n          </Skeleton>\n        </Flex>\n      </Td>\n      <Td border=\"none\">\n        <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n          <Skeleton height=\"1rem\" mb={1}>\n            <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n              5000%\n            </Text>\n          </Skeleton>\n          <Skeleton height=\"0.75rem\">\n            <Badge colorScheme=\"green\" border=\"1px solid\" bg=\"green.900\">\n              HEALTHY\n            </Badge>\n          </Skeleton>\n        </Flex>\n      </Td>\n      <Td border=\"none\">\n        <Flex flexDirection=\"column\">\n          <Button\n            fontSize=\"0.75rem\"\n            lineHeight=\"1rem\"\n            height=\"1.75rem\"\n            fontWeight={700}\n            borderWidth=\"1px\"\n            borderColor=\"gray.900\"\n            borderRadius=\"4px\"\n            disabled\n          >\n            Manage\n          </Button>\n        </Flex>\n      </Td>\n    </Tr>\n  );\n}\n","import { InfoIcon } from '@chakra-ui/icons';\nimport { Thead, Tr, Th, Flex, Text, Tooltip } from '@chakra-ui/react';\n\nexport default function PositionTableHeader() {\n  return (\n    <Thead>\n      <Tr>\n        <Th\n          py={5}\n          textTransform=\"unset\"\n          color=\"gray.600\"\n          border=\"none\"\n          fontFamily=\"heading\"\n          fontSize=\"12px\"\n          lineHeight=\"16px\"\n        >\n          Collateral\n        </Th>\n        <Th border=\"none\" textTransform=\"unset\" py={5}>\n          <Flex justifyContent=\"flex-end\" alignItems=\"center\">\n            <Text color=\"gray.600\" fontFamily=\"heading\" fontSize=\"12px\" lineHeight=\"16px\" mr={1}>\n              Delegated\n            </Text>\n            <Tooltip label=\"???\">\n              <InfoIcon w=\"12px\" h=\"12px\" />\n            </Tooltip>\n          </Flex>\n        </Th>\n        <Th border=\"none\" textTransform=\"unset\" py={5}>\n          <Flex justifyContent=\"flex-end\" alignItems=\"center\">\n            <Text color=\"gray.600\" fontFamily=\"heading\" fontSize=\"12px\" lineHeight=\"16px\" mr={1}>\n              APY\n            </Text>\n            <Tooltip label=\"???\">\n              <InfoIcon w=\"12px\" h=\"12px\" />\n            </Tooltip>\n          </Flex>\n        </Th>\n        <Th border=\"none\" textTransform=\"unset\" py={5}>\n          <Flex justifyContent=\"flex-end\" alignItems=\"center\">\n            <Text color=\"gray.600\" fontFamily=\"heading\" fontSize=\"12px\" lineHeight=\"16px\" mr={1}>\n              Pool PNL\n            </Text>\n            <Tooltip label=\"???\">\n              <InfoIcon w=\"12px\" h=\"12px\" />\n            </Tooltip>\n          </Flex>\n        </Th>\n        <Th border=\"none\" textTransform=\"unset\" py={5}>\n          <Flex justifyContent=\"flex-end\" alignItems=\"center\">\n            <Text color=\"gray.600\" fontFamily=\"heading\" fontSize=\"12px\" lineHeight=\"16px\" mr={1}>\n              Borrowed\n            </Text>\n            <Tooltip label=\"???\">\n              <InfoIcon w=\"12px\" h=\"12px\" />\n            </Tooltip>\n          </Flex>\n        </Th>\n        <Th border=\"none\" textTransform=\"unset\" py={5}>\n          <Flex justifyContent=\"flex-end\" alignItems=\"center\">\n            <Text color=\"gray.600\" fontFamily=\"heading\" fontSize=\"12px\" lineHeight=\"16px\" mr={1}>\n              Debt\n            </Text>\n            <Tooltip label=\"???\">\n              <InfoIcon w=\"12px\" h=\"12px\" />\n            </Tooltip>\n          </Flex>\n        </Th>\n        <Th border=\"none\" textTransform=\"unset\" py={5}>\n          <Flex justifyContent=\"flex-end\" alignItems=\"center\">\n            <Text color=\"gray.600\" fontFamily=\"heading\" fontSize=\"12px\" lineHeight=\"16px\" mr={1}>\n              C-Ratio\n            </Text>\n            <Tooltip label=\"???\">\n              <InfoIcon w=\"12px\" h=\"12px\" />\n            </Tooltip>\n          </Flex>\n        </Th>\n        <Th\n          py={5}\n          textTransform=\"unset\"\n          color=\"gray.600\"\n          border=\"none\"\n          fontFamily=\"heading\"\n          fontSize=\"12px\"\n          lineHeight=\"16px\"\n        >\n          {' '}\n        </Th>\n      </Tr>\n    </Thead>\n  );\n}\n","import {\n  Button,\n  Fade,\n  Flex,\n  Heading,\n  Table,\n  TableContainer,\n  Tbody,\n  Td,\n  Tr,\n} from '@chakra-ui/react';\nimport Wei from '@synthetixio/wei';\nimport PositionRow from './PositionsRow';\nimport PositionTableHeader from './PositionTableHeader';\nimport PositionsRowLoading from './PositionsRowLoading';\nimport { Link, generatePath } from 'react-router-dom';\n\nconst mockPositions: {\n  symbol: 'SNX' | 'sUSD' | 'ETH' | 'USDC';\n  token: string;\n  name: string;\n  delegated$: Wei;\n  delegated: Wei;\n  apy: number;\n  pnl: number;\n  pnlPercentage: number;\n  borrowed: Wei;\n  borrowed$: Wei;\n  debt: Wei;\n  cRatio: number;\n}[] = [\n  {\n    token: 'sUSDC',\n    symbol: 'USDC',\n    name: 'Synthetic USDC',\n    delegated$: new Wei(1000),\n    delegated: new Wei(1000),\n    apy: 16.4,\n    pnl: 500,\n    pnlPercentage: -25.04,\n    borrowed: new Wei(0),\n    borrowed$: new Wei(0),\n    debt: new Wei(2000),\n    cRatio: Infinity,\n  },\n  {\n    token: 'ETH',\n    symbol: 'ETH',\n    name: 'Synthetic ETH',\n    delegated$: new Wei(10),\n    delegated: new Wei(12),\n    apy: 19.4,\n    pnl: 1500,\n    pnlPercentage: 25.04,\n    borrowed: new Wei(100),\n    borrowed$: new Wei(1002),\n    debt: new Wei(-420),\n    cRatio: 200,\n  },\n];\n\ninterface PositionsTableInterface {\n  isLoading: boolean;\n}\n\nexport const PositionsTable = ({ isLoading }: PositionsTableInterface) => {\n  return (\n    <TableContainer\n      maxW=\"100%\"\n      mt={4}\n      borderColor=\"gray.900\"\n      borderWidth=\"1px\"\n      borderRadius=\"5px\"\n      p={6}\n      sx={{\n        borderCollapse: 'separate !important',\n        borderSpacing: 0,\n      }}\n      bg=\"navy.700\"\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Heading fontSize=\"18px\" fontWeight={700} lineHeight=\"28px\" color=\"gray.50\">\n          Spartan Council Pool\n        </Heading>\n        <Fade in>\n          <Button\n            as={Link}\n            mt={{ base: 2, md: 0 }}\n            size=\"sm\"\n            to={{\n              pathname: generatePath('/pools/:poolId', { poolId: '1' }),\n              search: location.search,\n            }}\n            variant=\"outline\"\n          >\n            Pool Info\n          </Button>\n        </Fade>\n      </Flex>\n      <Table variant=\"simple\">\n        <PositionTableHeader />\n        <Tbody>\n          <Tr border=\"none\" borderTop=\"1px\" borderTopColor=\"gray.900\" width=\"100%\" height=\"0px\">\n            <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={4} />\n            <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={4} />\n            <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={4} />\n            <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={4} />\n            <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={4} />\n            <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={4} />\n            <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={4} />\n            <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={4} />\n          </Tr>\n          {isLoading ? (\n            <>\n              <PositionsRowLoading />\n              <PositionsRowLoading />\n            </>\n          ) : (\n            <>\n              {mockPositions.map((position, index) => (\n                <PositionRow\n                  key={position.token.concat(index.toString())}\n                  {...position}\n                  final={index === mockPositions.length - 1}\n                />\n              ))}\n            </>\n          )}\n        </Tbody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { Heading, Flex } from '@chakra-ui/react';\nimport { PositionsTable } from './PositionsTable';\n\nexport const PositionsList = () => {\n  const [isLoading, setIsLoading] = useState(true); // TEMP\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 5000);\n  }, []);\n\n  return (\n    <Flex flexDir=\"column\">\n      <Heading fontSize=\"1.25rem\" fontFamily=\"heading\" lineHeight=\"1.75rem\" mt={4}>\n        Positions\n      </Heading>\n      <PositionsTable isLoading={isLoading} />\n    </Flex>\n  );\n};\n","import { Flex, Heading } from '@chakra-ui/react';\nimport { useLiquidityPositions } from '@snx-v3/useLiquidityPositions';\nimport Wei from '@synthetixio/wei';\nimport { Helmet } from 'react-helmet';\nimport { useSearchParams } from 'react-router-dom';\nimport { AssetsList, PositionsList, StatBox } from '../../components';\n\nexport function Dashboard() {\n  const [params] = useSearchParams();\n\n  const { data: positions, isLoading } = useLiquidityPositions({\n    accountId: params.get('accountId') || '',\n  });\n\n  const debt =\n    positions && Object.values(positions).reduce((prev, cur) => prev.add(cur.debt), new Wei(0));\n\n  return (\n    <>\n      <Helmet>\n        <title>Synthetix V3 - Dashboard</title>\n        <meta name=\"description\" content=\"Synthetix V3 - Dashboard\" />\n      </Helmet>\n      <Flex flexDir=\"column\">\n        <Heading color=\"gray.50\" fontSize=\"1.5rem\">\n          Dashboard\n        </Heading>\n        <Flex w=\"100%\" gap=\"4\" mt={6}>\n          <StatBox\n            title=\"Total Assets\"\n            isLoading={true}\n            value=\"TODO\"\n            label=\"All assets in your Wallet and in your Synthetix Account.\"\n          />\n          <StatBox\n            title=\"Total Delegated\"\n            isLoading={false}\n            value=\"TODO\"\n            label=\"All assets in your Account that have been Delegated to a Pool.\"\n          />\n          <StatBox\n            title=\"Total Debt\"\n            isLoading={isLoading}\n            value={debt?.toNumber().toFixed(2) || '0'}\n            label=\"Aggregated Debt of all your Open Positions.\"\n          />\n          <StatBox\n            title=\"APY\"\n            isLoading={false}\n            value=\"14%\"\n            label=\"Aggregated APY from all your positions.\"\n          />\n        </Flex>\n        <AssetsList />\n        <PositionsList />\n      </Flex>\n    </>\n  );\n}\n","import { Button, Divider, Flex, Heading, Image, Text, Tooltip } from '@chakra-ui/react';\nimport { InfoIcon } from '@chakra-ui/icons';\nimport { usePools } from '@snx-v3/usePools';\nimport { TokenIcon } from '../../components/TokenIcon';\n\nexport function Pools() {\n  const { data: pools } = usePools();\n  return (\n    <Flex flexDir=\"column\">\n      <Heading>All Pools</Heading>\n      <Flex gap=\"4\" flexWrap={pools && pools.length > 1 ? 'wrap' : 'nowrap'}>\n        {pools?.map((pool) => (\n          <Flex\n            key={pool.id}\n            flexDir=\"column\"\n            w=\"100%\"\n            border=\"1px solid\"\n            borderColor=\"gray.900\"\n            rounded=\"base\"\n            bg=\"navy.700\"\n            p=\"6\"\n            maxW={pools.length > 1 ? '488px' : 'unset'}\n          >\n            <Flex w=\"100%\" alignItems=\"center\" justifyContent=\"space-between\" mb={4}>\n              <Text fontSize=\"16px\" fontWeight={700} color=\"white\">\n                {pool.name}\n              </Text>\n              <Button variant=\"outline\" colorScheme=\"gray\" color=\"white\">\n                Pool Details\n              </Button>\n            </Flex>\n            <Divider />\n            <Flex w=\"100%\" h=\"164px\" alignItems=\"center\" gap=\"4\">\n              <Flex flexDir=\"column\">\n                <Text fontSize=\"12px\" color=\"gray.600\">\n                  TVL{' '}\n                  <Tooltip label=\"???\">\n                    <InfoIcon w=\"12px\" h=\"12px\" />\n                  </Tooltip>\n                </Text>\n                <Text fontWeight={700} fontSize=\"30px\" color=\"white\">\n                  TODO\n                </Text>\n              </Flex>\n              <Flex flexDir=\"column\" mr=\"auto\">\n                <Text fontSize=\"12px\" color=\"gray.600\">\n                  APY{' '}\n                  <Tooltip label=\"???\">\n                    <InfoIcon w=\"12px\" h=\"12px\" />\n                  </Tooltip>\n                </Text>\n                <Text fontWeight={700} fontSize=\"30px\" color=\"white\">\n                  TODO\n                </Text>\n              </Flex>\n              <Image src=\"/pools.svg\" mr=\"50%\" mb={4} />\n            </Flex>\n            <Divider />\n            <Flex mt={4}>\n              <TokenIcon symbol=\"USDC\" />\n              <Flex flexDirection=\"column\" ml={3} mr=\"auto\">\n                <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n                  sUSDC\n                </Text>\n                <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n                  Synthetix USDC\n                </Text>\n              </Flex>\n              <Button>Deposit</Button>\n            </Flex>\n          </Flex>\n        ))}\n        <Flex\n          flexDir=\"column\"\n          w=\"100%\"\n          border=\"1px solid\"\n          borderColor=\"gray.900\"\n          rounded=\"base\"\n          bg=\"navy.700\"\n          p={6}\n          shrink={2}\n        >\n          <Image src=\"/op.svg\" w=\"66px\" height=\"66px\" mb={6} />\n          <Text fontWeight={700} fontSize=\"14px\" color=\"white\">\n            10x Cost Effective on Gas Fees\n          </Text>\n          <Text fontSize=\"12px\" color=\"gray.600\" mb=\"auto\">\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n            incididunt ut labore et dolore magna aliqua.\n          </Text>\n          <Flex justifyContent=\"flex-end\" gap={4} my={6}>\n            <Button variant=\"outline\" colorScheme=\"gray\" color=\"white\">\n              Bridge Asset\n            </Button>\n            <Button variant=\"outline\" colorScheme=\"gray\" color=\"white\">\n              Switch to Optimism\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n}\n","import { Suspense } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { Spinner } from '@chakra-ui/react';\nimport { DefaultLayout } from './layouts/Default';\nimport { Home } from './pages/Home';\nimport { Manage } from './pages/Manage';\nimport { Deposit } from './pages/Deposit';\n// import { CreateAccount, Settings, Collateral, AcceptNomination } from './pages/Account';\n// import { CreateMarket } from './pages/Markets/CreateMarket';\n// import { Market } from './pages/Markets/Market';\nimport { Pool } from './pages/Pool';\nimport { Playground } from './pages/Playground';\nimport { Teleporter } from './pages/Teleporter';\nimport { NotFoundPage } from './pages/404';\nimport { Dashboard } from './pages/Dashboard';\nimport { Pools } from './pages/Pools';\n\nexport const Router = () => {\n  return (\n    <Suspense fallback={<Spinner />}>\n      <Routes>\n        <Route element={<DefaultLayout />}>\n          <Route path=\"/positions/:collateralSymbol/:poolId\" element={<Manage />} />\n          <Route path=\"/deposit/:collateralSymbol/:poolId\" element={<Deposit />} />\n          <Route path=\"/dashboard/positions\" element={<Dashboard />} />\n          {/*<Route path=\"/collateral\" element={<Collateral />} />*/}\n          {/*<Route path=\"/accept-nomination\" element={<AcceptNomination />} />*/}\n          {/*<Route path=\"/settings\" element={<Settings />} />*/}\n          {/*<Route path=\"/accounts/create\" element={<CreateAccount />} />*/}\n          <Route path=\"/pools\" element={<Pools />} />\n          <Route path=\"/pools/:poolId\" element={<Pool />} />\n          {/*<Route path=\"/markets/create\" element={<CreateMarket />} />*/}\n          {/*<Route path=\"/markets/:marketId\" element={<Market />} />*/}\n          <Route path=\"/teleporter\" element={<Teleporter />} />\n          <Route path=\"/playground\" element={<Playground />} />\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Suspense>\n  );\n};\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport enLocale from './locales/en.json';\n\ni18n.use(initReactI18next).init({\n  supportedLngs: ['en'],\n  lng: 'en',\n  fallbackLng: 'en',\n  ns: ['common'],\n  defaultNS: 'common',\n  interpolation: { escapeValue: false },\n  react: { useSuspense: false },\n  resources: {\n    en: {\n      translation: enLocale,\n    },\n  },\n});\n\nexport default i18n;\n","import { useEffect } from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport { ChakraProvider, useColorMode } from '@chakra-ui/react';\nimport { Fonts, theme } from '@synthetixio/v3-theme';\nimport { DEFAULT_QUERY_STALE_TIME } from '@snx-v3/constants';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools';\nimport { GasSpeedProvider } from '@snx-v3/useGasSpeed';\nimport { TermsModal } from '@snx-v3/TermsModal';\nimport { SESSION_STORAGE_KEYS } from '@snx-v3/constants';\nimport { Router } from './Router';\nimport { Web3OnboardProvider } from '@web3-onboard/react';\nimport { onboard } from './utils/onboard';\nimport './i18n';\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchInterval: false, //  if queries needs refetching we should be explicit about it, given erc7412\n      staleTime: DEFAULT_QUERY_STALE_TIME,\n      refetchOnWindowFocus: false,\n    },\n  },\n});\n\nfunction ColorMode() {\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  useEffect(() => {\n    if (colorMode === 'light') {\n      toggleColorMode();\n    }\n  }, [colorMode, toggleColorMode]);\n  return null;\n}\n\nexport const App = () => {\n  const TERMS_CONDITIONS_ACCEPTED =\n    sessionStorage.getItem(SESSION_STORAGE_KEYS.TERMS_CONDITIONS_ACCEPTED) === 'true';\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <Web3OnboardProvider web3Onboard={onboard}>\n        <ChakraProvider theme={theme}>\n          <ColorMode />\n          <Fonts />\n          <GasSpeedProvider>\n            <HashRouter>\n              <TermsModal defaultOpen={!TERMS_CONDITIONS_ACCEPTED} />\n              <Router />\n            </HashRouter>\n          </GasSpeedProvider>\n          <ReactQueryDevtools />\n        </ChakraProvider>\n      </Web3OnboardProvider>\n    </QueryClientProvider>\n  );\n};\n","import ReactDOM from 'react-dom/client';\nimport { App } from './App';\n\nconst container = document.querySelector('#app');\n\nexport async function bootstrap() {\n  if (!container) {\n    throw new Error('Container #app does not exist');\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    const { Wei, wei } = await import('@synthetixio/wei');\n    const { ethers } = await import('ethers');\n    // @ts-ignore\n    window.devtoolsFormatters = window.devtoolsFormatters ?? [];\n    // @ts-ignore\n    window.devtoolsFormatters.push({\n      header: function (obj: any) {\n        if (obj instanceof ethers.BigNumber) {\n          return [\n            'div',\n            { style: 'color: #f33' },\n            ['span', {}, 'ethers.BigNumber('],\n            ['span', { style: 'color: #3f3' }, wei(obj).toString()],\n            ['span', {}, ')'],\n          ];\n        }\n        if (obj instanceof Wei) {\n          return [\n            'div',\n            { style: 'color: #f33' },\n            ['span', {}, 'Wei('],\n            ['span', { style: 'color: #3f3' }, obj.toString()],\n            ['span', {}, ')'],\n          ];\n        }\n        return null;\n      },\n      hasBody: function () {\n        return false;\n      },\n    });\n  }\n\n  const root = ReactDOM.createRoot(container);\n  root.render(<App />);\n}\n","const { safeLazy } = require('./safeLazy');\nconst { safeImport } = require('./safeImport');\nmodule.exports = {\n  safeLazy,\n  safeImport,\n};\n","const { lazy } = require('react');\nconst { safeImport } = require('./safeImport');\n\nfunction safeLazy(importer) {\n  return lazy(() => safeImport(importer));\n}\n\nmodule.exports = {\n  safeLazy,\n};\n"],"names":["async","importCoreProxy","chainId","preset","Error","importMulticall3","Amount","value","prefix","suffix","testid","formattedValue","preciseValue","isMaxUint","useMemo","currency","cleanNumber","wei","replaceAll","constants","lte","eq","toString","_jsx","Tooltip","label","_Fragment","children","_jsxs","isDisabled","defaultOpen","window","localStorage","CONTRACT_ERROR_OPEN","ContractError","contractError","isOpen","setIsOpen","React","Button","variant","onClick","color","fontWeight","fontStyle","Collapse","in","animateOpacity","Text","fontSize","name","whiteSpace","pl","Object","entries","args","map","key","val","Date","format","join","Events","State","FailedSteps","ServiceNames","initialContext","wrapAmount","error","requireApproval","infiniteApproval","DepositMachine","createMachine","id","initial","predictableActionArguments","context","on","target","actions","assign","_","_context","event","states","cond","gt","invoke","src","onError","data","step","wrap","onDone","approve","deposit","c","DepositModalUi","collateralChange","onClose","collateralType","setInfiniteApproval","onSubmit","state","availableCollateral","poolName","isProcessing","matches","isWETH","symbol","stepNumbers","Modal","size","closeOnOverlayClick","ModalOverlay","ModalContent","bg","ModalHeader","ModalCloseButton","ModalBody","mb","Multistep","title","subtitle","as","status","failed","disabled","success","loading","checkboxLabel","checkboxProps","isChecked","onChange","e","checked","gte","sub","width","my","Boolean","DepositModal","currentCollateral","navigate","useNavigate","params","useParams","queryClient","useQueryClient","network","useNetwork","CoreProxy","useCoreProxy","SpotProxy","useSpotMarketProxy","useCollateralType","collateralSymbol","collateralAddress","isBaseAndromeda","getUSDCAddress","tokenAddress","collateralNeeded","useApprove","contractAddress","amount","utils","toBN","spender","address","toast","useToast","isClosable","duration","newAccountId","Math","floor","random","exec","wrapEth","wethBalance","useWrapEth","pool","usePool","poolId","execDeposit","useDeposit","accountId","collateralTypeAddress","txnState","dispatch","useReducer","reducer","initialState","collateralPriceUpdates","useAllCollateralPriceIds","gasSpeed","useGasSpeed","signer","useSigner","provider","useProvider","mutation","useMutation","mutationFn","type","walletAddress","getAddress","createAccount","undefined","populateTransaction","BigNumber","from","delegate","delegateCollateral","add","callsPromise","Promise","all","filter","notNil","collateralPriceCallsPromise","fetchPriceUpdates","isTestnet","then","signedData","priceUpdatesToPopulatedTx","calls","gasPrices","collateralPriceCalls","getGasPrice","allCalls","concat","erc7412Tx","withERC7412","interface","gasOptionsForTransaction","formatGasPriceForTransaction","gasLimit","txn","sendTransaction","payload","txnHash","hash","wait","settle","isLoading","isPending","mutateAsync","depositBaseAndromeda","useDepositBaseAndromeda","SpotMarketProxy","usdcAmount","parseUnits","amountD18","sUSDC_ADDRESS","getsUSDCAddress","USDC_BASE_MARKET","sUSDC_Contract","ethers","approveAbi","sUSDCApproval","errorParserCoreProxy","useContractErrorParser","send","useMachine","services","console","closeAll","description","cause","invalidateQueries","queryKey","resolve","wrapAmountString","isSuccessOrDeposit","useEffect","location","useLocation","handleClose","useCallback","pathname","generatePath","search","CheckIcon","createIcon","viewBox","path","fill","points","CloseIcon","d","StepIcon","Spinner","height","Box","__css","display","textAlign","statusColor","Step","Flex","minWidth","minHeight","justifyContent","alignItems","rounded","transitionProperty","transitionDuration","StepCheckbox","props","mt","Checkbox","opacity","position","gap","p","border","borderColor","direction","WithdrawIncrease","Alert","colorScheme","SET_AMOUNT","SET_COLLATERAL_SYMBOL","RETRY","RUN","SUCCESS","FAILURE","RESET","idle","withdraw","unwrap","WithdrawMachine","useWithdraw","accountCollateral","collateralPriceIds","gasPricesPromised","populatedTxnPromised","populatedTxn","WithdrawModalUi","WithdrawModal","useUnWrapEth","execWithdraw","SUSDCIcon","Icon","clipPath","Logo","transform","EthereumIcon","fillOpacity","SNXIcon","OptimismIcon","DollarCircle","fillRule","clipRule","BitcoinIcon","ArbitrumIcon","cx","cy","r","CollateralIcon","UnknownIcon","stroke","ChevronDown","ChevronUp","FailedIcon","w","h","x","y","filterUnits","colorInterpolationFilters","floodOpacity","result","values","stdDeviation","mode","in2","WalletIcon","LogoIcon","BorrowIcon","xmlns","CCIP","BaseIcon","ManagePositionContext","createContext","debtChange","setDebtChange","setCollateralChange","ManagePositionProvider","useState","Provider","GWEI_DECIMALS","GAS_LIMIT_MULTIPLIER","DEFAULT_QUERY_STALE_TIME","INFURA_KEY","getSubgraphUrl","networkName","SESSION_STORAGE_KEYS","TERMS_CONDITIONS_ACCEPTED","offchainMainnetEndpoint","process","PYTH_MAINNET_ENDPOINT","offchainTestnetEndpoint","PYTH_TESTNET_ENDPOINT","requestedPriceUpdates","length","priceService","EvmPriceServiceConnection","getPriceFeedsUpdateData","priceFeedId","signedOffchainData","i","stalenessTolerance","encode","oracleAddresses","signedOffchainDatum","to","encodeFunctionData","decimals","prettyString","text","startLength","endLength","substring","options","minimumDigitsToShowAfterZeros","stringValue","numberValue","toNumber","maximumFractionDigits","log10","isNaN","toLocaleString","minimumFractionDigits","BASE_USDC","BASE_SEPOLIA_fUSDC","sUSDC","BASE_SEPOLIA_sUSDC","modalOpen","txnStatus","action","useOracleManagerProxy","signerOrProvider","withSigner","useQuery","queryFn","abi","importOracleManagerProxy","Contract","enabled","staleTime","Infinity","NodeSchema","z","object","nodeType","number","parameters","string","parents","array","PythParametersSchema","ZodBigNumber","Multicall3","useMulticall3","OracleProxy","deploymentsWithERC7412","includes","configs","getCollateralConfigurations","loadConfigs","oracleNodeId","callData","returnData","callStatic","aggregate","arr","prop","seen","Set","item","has","removeDuplicatesByProp","bytes","nodeResp","decodeFunctionResult","parse","decode","parametersDecoded","AllowanceSchema","useAllowance","activeWallet","useWallet","accountAddress","contract","allowance","eventHandlers","refetch","refetchAllowance","sufficientAllowance","amountToAppove","gasLimitPromised","estimateGas","Number","NetworkIcon","networkId","NETWORKS","hexId","token","rpcUrl","DEFAULT_INFURA_KEY","isSupported","publicRpcUrl","appMetadata","find","getItem","icon","logo","SynthetixLogo","recommendedInjectedWallets","url","gettingStartedGuide","explore","useProviderForChain","wallet","conn","disconn","useConnectWallet","connect","disconnect","walletsInfo","accounts","connectedChain","setChain","useSetChain","n","setNetwork","newNetwork","useIsConnected","getSigner","CollateralConfigurationSchema","depositingEnabled","boolean","issuanceRatioD18","liquidationRatioD18","liquidationRewardD18","startsWith","minDelegationD18","SymbolSchema","extend","displaySymbol","ERC20Interface","loadCollateralTypes","tokenConfigs","symbols","tokenConfig","loadSymbols","config","useCollateralTypes","includeDelegationOff","collateralTypes","lt","placeholderData","collateral","toLowerCase","errorData","contractAbi","full","errorParsed","Array","ERC7412_ABI","parseError","errorArgs","fromEntries","parseInt","unwei","parseFloat","getTime","signature","BalanceSchema","useEthBalance","connectedProvider","getBalance","GAS_LIMIT_BUFFER","addGasLimitBuffer","mul","gasPrice","baseFeePerGas","_baseFeePerGas","gasPriceToReturn","isNumber","subject","ema","dma","alpha","noHead","slice","noArrayWeight","isArray","ret","datum","s","o","rewardsFilterOutliers","blocksRewards","outlierBlocks","rewardIndex","index","reward","feeSuggestion","fromBlock","defaultForLocalProvider","maxFeePerGas","maxPriorityFeePerGas","average","fast","fastest","feeHistory","feeHistoryResponse","num","at","getOutlierBlocksToRemove","blocks","forEach","gweiReward","push","blocksRewardsPerc15","blocksRewardsPerc30","blocksRewardsPerc45","emaPerc15","emaPerc30","emaPerc45","averageMaxPriorityFee","min","fastMaxPriorityFee","fastestMaxPriorityFee","baseFeeToMax","base","prio","getBlock","getGasPriceFromProvider","GasSpeedContext","setGasSpeed","GasSpeedProvider","useContext","cleanObject","cleaned","pathParams","useParamsRouter","queryParams","useSearchParams","sortObject","searchParams","sort","a","b","localeCompare","PoolIdSchema","PoolSchema","default","isPreferred","PoolsSchema","usePools","prefferedPoolId","approvedPoolIds","getPreferredPool","getApprovedPools","incompletePools","poolNames","getPoolName","poolsRaw","useRepayBaseAndromeda","availableUSDCollateral","UsdProxy","useUSDProxy","debtChangeAbs","abs","amountToDeposit","sUSDC_Approval","sell","sUSD_Contract","sUSD_Approval","burn","burnUsd","importSpotMarketProxy","assertAddressType","useTokenBalance","balanceOf","refetchInterval","useTokenBalanceForChain","importUSDProxy","useUSDProxyForChain","minimalWETHABI","ethCollateral","ethBalance","refetchETHBalance","refetchWETHBalance","cache","parseTxError","err","fetchOffchainData","func","oracleQuery","logLabel","OracleQuerySchema","tuple","decoded","updateType","priceIds","log","cacheDuration","bypassCache","funcArgs","cacheKey","JSON","stringify","currentTime","now","cacheItem","timestamp","withMemoryCache","makeMulticall","senderAddr","multicallAddress","multiCallAbi","encodedData","call","requireSuccess","allowFailure","totalValue","makeCoreProxyMulticall","coreProxyAddress","coreProxyAbi","ERC7412ErrorSchema","union","literal","erc7412Interface","transaction","newError","decodedError","getDefaultFromAddress","chainName","tx","initialMulticallLength","multicallCalls","flat","some","jsonRpcProvider","isRead","initialCall","multicallTxn","parsedError","oracleAddress","ignoreCache","signedRequiredData","newTransactionRequest","splice","errorResult","viem","errorName","_error","requiredFee","txToUpdate","erc7412Call","txRequests","multicallAbi","reqs","txRequest","newCall","res","custom","isBigNumber","SmallIntSchema","WeiSchema","gradients","grey","dark","orange","defaultProps","variants","solid","defineStyle","_hover","_disabled","_active","bgGradient","background","hoverBg","activeBg","outline","ghost","theme","extendTheme","useSystemColorMode","initialColorMode","colors","gray","red","yellow","green","blue","cyan","purple","pink","navy","warning","shadows","fonts","heading","body","mono","components","Popover","responsive","popper","maxWidth","Input","focusBorderColor","errorBorderColor","Select","iconColor","NumberInput","container","borderInlineStartColor","Textarea","Skeleton","startColor","endColor","baseStyle","control","_checked","_invalid","Radio","Badge","subtle","percent","fontFamily","py","px","borderRadius","borderWidth","userSelect","Tag","Accordion","Progress","filledTrack","track","Tabs","tab","_selected","Switch","Menu","parts","button","span","list","bgColor","padding","_first","borderTopLeftRadius","borderTopRightRadius","_last","borderBottomLeftRadius","borderBottomRightRadius","_focus","textStyles","lg","lineHeight","md","sizes","max","xs","sm","xl","styles","global","Fonts","Global","TermsModal","setOpen","setEnabled","pt","pb","onScroll","div","currentTarget","scrollTop","scrollHeight","offsetHeight","overflow","overflowX","sx","backgroundColor","UnorderedList","ListItem","Link","href","_focusVisible","ReactRouterLink","mx","sessionStorage","setItem","Footer","rel","supportedNetworks","networks","onboard","init","wallets","injectedModule","displayUnavailable","ProviderLabel","MetaMask","Trust","trezorModule","appUrl","email","ledgerModule","projectId","walletConnectVersion","walletConnectModule","version","coinbaseModule","chains","accountCenter","desktop","mobile","notify","set","useLocalStorage","initialValue","storedValue","setStoredValue","get","valueToStore","Function","LOCAL_STORAGE_KEYS","SHOW_TESTNETS","NetworkController","activeNetwork","showTestnets","setShowTestnets","defaultWallet","autoSelect","disableModals","MenuButton","mr","ml","MenuList","MenuItem","MenuOptionGroup","ens","navigator","clipboard","writeText","_e","onDisconnect","removeItem","useAccountProxy","importAccountProxy","useAccounts","AccountProxy","numberOfAccountTokens","accountIndexes","keys","tokenOfOwnerByIndex","AccountMenuItem","RouterLink","createSearchParams","marginRight","AccountsSelectorUi","onCopy","useClipboard","Fade","maxW","AccountsSelector","isAccountsLoading","isFetching","isAccountsFetching","mutate","isCreateAccountLoading","createAccountData","client","logs","topics","getEventTopic","decodeEventLog","useCreateAccount","URLSearchParams","isFetched","replace","useAccountUrlSync","Header","useDisclosure","borderBottomWidth","borderBottomColor","Container","pr","DefaultLayout","flexDirection","flex","flexDir","Outlet","PriceSchema","loadPrices","collateralAddresses","getCollateralPrice","decoder","multicallEncoded","encoded","pricesEncoded","loadAccountCollateral","tokenAddresses","callsP","flatMap","getAccountAvailableCollateral","getAccountCollateral","totalAssigned","totalDeposited","totalLocked","useAccountCollateral","tokens","PositionCollateralSchema","optional","DebtSchema","loadPosition","getPositionCollateral","getPositionDebt","decodedCollateral","decodedDebt","debt","calculatePoolPerformanceSevenDays","poolData","total","configurations","reduce","acc","market","pnl","calculatePoolPerformanceLifetime","totalSevenDaysAgo","market_snapshots_by_week","growthPercentage","calculateCRatio","collateralValue","keyBy","useLiquidityPositions","pools","collateralPriceUpdatesLength","positionCallsAndData","priceCalls","priceDecoder","positionCalls","singlePositionDecoder","pricesByAddress","price","encodedFiltered","positionsEncoded","collateralAmount","collateralPrice","cRatio","Welcome","flexWrap","flexGrow","AlertIcon","textDecoration","formatNumberToUsd","optionsWithDefault","style","locales","Intl","NumberFormat","formatNumber","formatPercent","BorderBox","Stats","totalDebt","totalCollateral","textTransform","PoolCard","liquidityPositionsById","Heading","Table","Thead","tr","Tr","Th","Tbody","VaultRow","liquidityPosition","PoolsList","PoolsLoading","VaultRowUi","isConnected","openConnectModal","hasLiquidity","Td","VaultRowLoading","SkeletonCircle","useAccountCollateralUnlockDate","lastInteraction","accountTimeoutWithdraw","getAccountLastInteraction","getConfigUint","collateralUnlock","formatTimeToUnlock","accountCollateralUnlockDate","formatDistanceToNow","addSuffix","unlockDateString","intlFormat","year","month","day","hour","minute","useWithdrawBaseAndromeda","usdcCollateral","snxUSDCollateral","withdraw_sUSDC","withdraw_sUSD","buy_SUSD","buy","unwrapTxnPromised","toFixed","withdraw_sUSDC_Txn","withdraw_SUSD_Txn","sUSDCApproval_Txn","buy_SUSD_Txn","unwrapTxn","BaseAndromedaAvailableCollateral","accountCollaterals","Suspense","fallback","exact","AvailableCollateralUi","timeToUnlock","unlockDate","AlertTitle","AlertDescription","isLoaded","alignSelf","AvailableCollateralRow","AvailableCollateral","accountCollateralsData","isAccountCollateralsLoading","isAccountCollateralDateLoading","setTimeToUnlock","interval","setInterval","clearInterval","lazy","safeImport","AvailableCollateralRowUi","Home","collateralTypesLoading","isPoolsLoading","liquidityPositionLoading","Helmet","content","validatePosition","targetCRatio","newDebt","newCollateralAmount","newCollateralValue","newCRatio","maybeMaxDebt","maxDebt","isValid","hasChanges","NUMBER_REGEX","cleanupNumber","float","InputProps","inputValue","setInputValue","onInputChange","test","nextValue","_err","ref","useRef","current","setCustomValidity","autoFocus","placeholder","boxShadow","_placeholder","BorrowUi","isBase","isRequired","cursor","Borrow","RepayUi","currentDebt","snxUSDBalance","totalUsdBalance","neg","Repay","USDProxy","usdCollateral","balance","debtExists","flooredBalance","Wei","MarketConfigurationSchema","weight","maxDebtShareValue","isLocked","PoolConfigurationSchema","markets","isAnyMarketLocked","isLockedSchema","UndelegateUi","minDelegation","isLoadingRequiredData","onMaxClick","leftoverCollateral","isValidLeftover","Undelegate","poolConfiguration","getPoolConfiguration","marketId","maxDebtShareValueD18","weightD18","m","isMarketCapacityLocked","usePoolConfiguration","minCollateralRequired","maxWithdrawable","maxUndelegate","PercentBadges","onBadgePress","activeBadge","useTransferableSynthetix","snxCollateral","snxAddress","transferable","transferableSynthetix","CollateralAlert","tokenBalance","borderLeftColor","textDecor","DepositUi","snxBalance","setActiveBadge","combinedTokenBalance","badgeNum","Deposit","transferrableSnx","RepayAllDebt","sufficientBalance","execRepay","settleRepay","approvalLoading","submit","RepayModal","BorrowModal","UndelegateModal","ManageActionSchema","enum","ActionButton","activeAction","Action","manageAction","ManageActionUi","setActiveAction","ArrowDownIcon","ArrowUpIcon","ManageAction","txnModalOpen","setTxnModalOpen","parsedActionParam","safeParse","parsedAction","preventDefault","reportValidity","ChangeStat","formatFn","newValue","ArrowForwardIcon","ManageStatsUi","newCratio","InfoIcon","ManageStats","HomeLink","ArrowBackIcon","etherscanLink","chain","RewardsModal","setTimeout","CircularProgress","isIndeterminate","borderTop","borderTopColor","truncateAddress","first","last","RewardsRow","frequency","claimableAmount","lifetimeClaimed","hasClaimed","readOnly","collateralData","distributorAddress","claimRewards","claimedAmount","useClaimRewards","frequencyString","seconds","secondsInHour","secondsInWeek","secondsInMonth","months","weeks","days","hours","convertSecondsToDisplayString","totalAmount","backgroundImage","RewardsLoading","borderBottom","Rewards","rewards","empty","TableContainer","letterSpacing","projectedAmount","rate","GraphBigIntSchema","GraphBigDecimalSchema","calculateMarketPnl","netIssuance","reportedDebt","MarketSnapshotByWeekSchema","usd_deposited","usd_withdrawn","net_issuance","reported_debt","updated_at","updates_in_period","MarketSchema","max_debt_share_value","RewardDistributorSchema","total_distributed","rewards_distributions","null","total_weight","registered_distributors","PoolDataResultSchema","PoolsDataDocument","usePoolData","fetch","method","query","variables","json","errors","message","getPoolData","RewardsResponseSchema","instanceof","erc20Abi","useRewards","distributors","importRewardDistributor","ifaceRD","ifaceERC20","distributorReturnData","historicalData","distributor","distributorResult","rewardsClaimeds","ercReturnData","rewardRates","getRewardRate","rewardRate","balances","response","sortedBalances","ManageUi","Divider","minW","Manage","isCollateralLoading","isPoolGraphDataLoading","isRewardsLoading","rewardsData","useLiquidityPosition","positionDecoder","accountCollateralCalls","accountCollateralDecoder","endOfPrice","startOfPosition","endOfPosition","startOfAccountCollateral","decodedPosition","CollateralTypeSelectorUI","ChevronDownIcon","CollateralTypeSelector","DepositFormUi","staticCollateral","inputRef","inputAmount","setInputAmount","setAmount","isOpenDeposit","setIsOpenDeposit","onChangeCollateral","focus","DepositForm","transferrable","useAccountSpecificCollateral","PoolBoxUi","PoolBox","sevenDaysPoolPerformance","sevenDaysPoolPerformanceGrowth","collateralDisplaySymbol","PoolHeader","MarketNamesSchema","marketInterface","StyledTh","paddingBottom","paddingTop","paddingLeft","paddingRight","StyledTd","isLastItem","LoadingRow","MarketSectionUi","marketNamesById","poolDataFetched","colSpan","MarketSection","marketIdsAndAddresses","MultiCall3","select","marketNames","marketName","useMarketNamesById","VaultCollateralSchema","VaultDebtSchema","CollateralSectionUi","vaultsData","collateralPriceByAddress","zeroValues","calculateVaultTotals","vaultCollateral","flexBasis","CollateralSection","CoreProxyContract","collateralCallsP","getVaultCollateral","debtCallsP","getVaultDebt","collateralPriceUpdateCallsP","multicallResult","collateralResult","debtResult","debtBytes","useVaultsData","useCollateralPrices","prices","Pool","AccountSelector","PoolSelector","CollateralSelector","Playground","refetchAccounts","accountCollateralData","verticalAlign","TokenContract","$input","document","querySelector","Balance","onMax","hideBuyButton","buyAssetLink","toUpperCase","isExternal","TeleportMachine","teleport","TeleporterModalUi","toNetworkName","ccipErrors","TeleporterModal","toNetworkId","execTeleport","useTeleport","fee","transferCrossChain","estimateTeleport","errorParsingContract","SUPPORTED_NETWORKS","TeleporterUi","connectedWallet","setActiveNetwork","toNetworkBalance","toNetwork","setToNetwork","usdProxyAddress","onTeleportClick","Head","Teleporter","USDProxyForChain","toBalance","NotFoundPage","t","useTranslation","NavLink","TokenIcon","Image","alt","AssetsRow","walletBalance","walletBalance$","accountBalance","accountBalance$","delegatedBalance","delegatedBalance$","final","AssetTableHeader","mockAssets","AssetsTable","borderCollapse","borderSpacing","AssetRowLoading","SynthSkeleton","SynthCircle","AssetsList","setIsLoading","StatBox","PositionRow","delegated$","delegated","apy","pnlPercentage","borrowed","borrowed$","PositionsRowLoading","PositionTableHeader","mockPositions","PositionsTable","PositionsList","Dashboard","positions","prev","cur","Pools","shrink","Router","Routes","Route","element","i18n","initReactI18next","supportedLngs","lng","fallbackLng","ns","defaultNS","interpolation","escapeValue","react","useSuspense","resources","en","translation","enLocale","QueryClient","defaultOptions","queries","refetchOnWindowFocus","ColorMode","colorMode","toggleColorMode","useColorMode","App","QueryClientProvider","Web3OnboardProvider","web3Onboard","ChakraProvider","HashRouter","ReactQueryDevtools","bootstrap","ReactDOM","render","safeLazy","module","exports","importer"],"sourceRoot":""}