{"version":3,"file":"chunk/3495.9889561a.js","mappings":"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","sources":["webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/accounts/utils/parseAccount.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/constants/kzg.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/constants/number.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/constants/solidity.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/errors/blob.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/errors/chain.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/abi/formatAbiItemWithArgs.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/errors/contract.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/errors/cursor.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/errors/node.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/errors/stateOverride.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/errors/transaction.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/errors/utils.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/encoding/fromBytes.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/abi/decodeAbiParameters.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/abi/decodeErrorResult.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/blob/blobsToCommitments.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/blob/blobsToProofs.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/blob/commitmentToVersionedHash.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/blob/commitmentsToVersionedHashes.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/constants/blob.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/blob/toBlobSidecars.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/blob/toBlobs.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/chain/defineChain.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/cursor.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/encoding/toRlp.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/errors/getCallError.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/errors/getNodeError.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/formatters/block.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/formatters/extract.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/formatters/formatter.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/formatters/log.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/formatters/transaction.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/formatters/transactionReceipt.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/formatters/transactionRequest.js","webpack://@snx-v3/liquidity/../../node_modules/@noble/hashes/esm/_md.js","webpack://@snx-v3/liquidity/../../node_modules/@noble/hashes/esm/sha256.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/hash/sha256.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/transaction/assertRequest.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/transaction/getTransactionType.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/unit/formatGwei.js"],"sourcesContent":["export function parseAccount(account) {\n    if (typeof account === 'string')\n        return { address: account, type: 'json-rpc' };\n    return account;\n}\n//# sourceMappingURL=parseAccount.js.map","// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\nexport const versionedHashVersionKzg = 1;\n//# sourceMappingURL=kzg.js.map","export const maxInt8 = 2n ** (8n - 1n) - 1n;\nexport const maxInt16 = 2n ** (16n - 1n) - 1n;\nexport const maxInt24 = 2n ** (24n - 1n) - 1n;\nexport const maxInt32 = 2n ** (32n - 1n) - 1n;\nexport const maxInt40 = 2n ** (40n - 1n) - 1n;\nexport const maxInt48 = 2n ** (48n - 1n) - 1n;\nexport const maxInt56 = 2n ** (56n - 1n) - 1n;\nexport const maxInt64 = 2n ** (64n - 1n) - 1n;\nexport const maxInt72 = 2n ** (72n - 1n) - 1n;\nexport const maxInt80 = 2n ** (80n - 1n) - 1n;\nexport const maxInt88 = 2n ** (88n - 1n) - 1n;\nexport const maxInt96 = 2n ** (96n - 1n) - 1n;\nexport const maxInt104 = 2n ** (104n - 1n) - 1n;\nexport const maxInt112 = 2n ** (112n - 1n) - 1n;\nexport const maxInt120 = 2n ** (120n - 1n) - 1n;\nexport const maxInt128 = 2n ** (128n - 1n) - 1n;\nexport const maxInt136 = 2n ** (136n - 1n) - 1n;\nexport const maxInt144 = 2n ** (144n - 1n) - 1n;\nexport const maxInt152 = 2n ** (152n - 1n) - 1n;\nexport const maxInt160 = 2n ** (160n - 1n) - 1n;\nexport const maxInt168 = 2n ** (168n - 1n) - 1n;\nexport const maxInt176 = 2n ** (176n - 1n) - 1n;\nexport const maxInt184 = 2n ** (184n - 1n) - 1n;\nexport const maxInt192 = 2n ** (192n - 1n) - 1n;\nexport const maxInt200 = 2n ** (200n - 1n) - 1n;\nexport const maxInt208 = 2n ** (208n - 1n) - 1n;\nexport const maxInt216 = 2n ** (216n - 1n) - 1n;\nexport const maxInt224 = 2n ** (224n - 1n) - 1n;\nexport const maxInt232 = 2n ** (232n - 1n) - 1n;\nexport const maxInt240 = 2n ** (240n - 1n) - 1n;\nexport const maxInt248 = 2n ** (248n - 1n) - 1n;\nexport const maxInt256 = 2n ** (256n - 1n) - 1n;\nexport const minInt8 = -(2n ** (8n - 1n));\nexport const minInt16 = -(2n ** (16n - 1n));\nexport const minInt24 = -(2n ** (24n - 1n));\nexport const minInt32 = -(2n ** (32n - 1n));\nexport const minInt40 = -(2n ** (40n - 1n));\nexport const minInt48 = -(2n ** (48n - 1n));\nexport const minInt56 = -(2n ** (56n - 1n));\nexport const minInt64 = -(2n ** (64n - 1n));\nexport const minInt72 = -(2n ** (72n - 1n));\nexport const minInt80 = -(2n ** (80n - 1n));\nexport const minInt88 = -(2n ** (88n - 1n));\nexport const minInt96 = -(2n ** (96n - 1n));\nexport const minInt104 = -(2n ** (104n - 1n));\nexport const minInt112 = -(2n ** (112n - 1n));\nexport const minInt120 = -(2n ** (120n - 1n));\nexport const minInt128 = -(2n ** (128n - 1n));\nexport const minInt136 = -(2n ** (136n - 1n));\nexport const minInt144 = -(2n ** (144n - 1n));\nexport const minInt152 = -(2n ** (152n - 1n));\nexport const minInt160 = -(2n ** (160n - 1n));\nexport const minInt168 = -(2n ** (168n - 1n));\nexport const minInt176 = -(2n ** (176n - 1n));\nexport const minInt184 = -(2n ** (184n - 1n));\nexport const minInt192 = -(2n ** (192n - 1n));\nexport const minInt200 = -(2n ** (200n - 1n));\nexport const minInt208 = -(2n ** (208n - 1n));\nexport const minInt216 = -(2n ** (216n - 1n));\nexport const minInt224 = -(2n ** (224n - 1n));\nexport const minInt232 = -(2n ** (232n - 1n));\nexport const minInt240 = -(2n ** (240n - 1n));\nexport const minInt248 = -(2n ** (248n - 1n));\nexport const minInt256 = -(2n ** (256n - 1n));\nexport const maxUint8 = 2n ** 8n - 1n;\nexport const maxUint16 = 2n ** 16n - 1n;\nexport const maxUint24 = 2n ** 24n - 1n;\nexport const maxUint32 = 2n ** 32n - 1n;\nexport const maxUint40 = 2n ** 40n - 1n;\nexport const maxUint48 = 2n ** 48n - 1n;\nexport const maxUint56 = 2n ** 56n - 1n;\nexport const maxUint64 = 2n ** 64n - 1n;\nexport const maxUint72 = 2n ** 72n - 1n;\nexport const maxUint80 = 2n ** 80n - 1n;\nexport const maxUint88 = 2n ** 88n - 1n;\nexport const maxUint96 = 2n ** 96n - 1n;\nexport const maxUint104 = 2n ** 104n - 1n;\nexport const maxUint112 = 2n ** 112n - 1n;\nexport const maxUint120 = 2n ** 120n - 1n;\nexport const maxUint128 = 2n ** 128n - 1n;\nexport const maxUint136 = 2n ** 136n - 1n;\nexport const maxUint144 = 2n ** 144n - 1n;\nexport const maxUint152 = 2n ** 152n - 1n;\nexport const maxUint160 = 2n ** 160n - 1n;\nexport const maxUint168 = 2n ** 168n - 1n;\nexport const maxUint176 = 2n ** 176n - 1n;\nexport const maxUint184 = 2n ** 184n - 1n;\nexport const maxUint192 = 2n ** 192n - 1n;\nexport const maxUint200 = 2n ** 200n - 1n;\nexport const maxUint208 = 2n ** 208n - 1n;\nexport const maxUint216 = 2n ** 216n - 1n;\nexport const maxUint224 = 2n ** 224n - 1n;\nexport const maxUint232 = 2n ** 232n - 1n;\nexport const maxUint240 = 2n ** 240n - 1n;\nexport const maxUint248 = 2n ** 248n - 1n;\nexport const maxUint256 = 2n ** 256n - 1n;\n//# sourceMappingURL=number.js.map","// https://docs.soliditylang.org/en/v0.8.16/control-structures.html#panic-via-assert-and-error-via-require\nexport const panicReasons = {\n    1: 'An `assert` condition failed.',\n    17: 'Arithmetic operation resulted in underflow or overflow.',\n    18: 'Division or modulo by zero (e.g. `5 / 0` or `23 % 0`).',\n    33: 'Attempted to convert to an invalid type.',\n    34: 'Attempted to access a storage byte array that is incorrectly encoded.',\n    49: 'Performed `.pop()` on an empty array',\n    50: 'Array index is out of bounds.',\n    65: 'Allocated too much memory or created an array which is too large.',\n    81: 'Attempted to call a zero-initialized variable of internal function type.',\n};\nexport const solidityError = {\n    inputs: [\n        {\n            name: 'message',\n            type: 'string',\n        },\n    ],\n    name: 'Error',\n    type: 'error',\n};\nexport const solidityPanic = {\n    inputs: [\n        {\n            name: 'reason',\n            type: 'uint256',\n        },\n    ],\n    name: 'Panic',\n    type: 'error',\n};\n//# sourceMappingURL=solidity.js.map","import { versionedHashVersionKzg } from '../constants/kzg.js';\nimport { BaseError } from './base.js';\nexport class BlobSizeTooLargeError extends BaseError {\n    constructor({ maxSize, size }) {\n        super('Blob size is too large.', {\n            metaMessages: [`Max: ${maxSize} bytes`, `Given: ${size} bytes`],\n            name: 'BlobSizeTooLargeError',\n        });\n    }\n}\nexport class EmptyBlobError extends BaseError {\n    constructor() {\n        super('Blob data must not be empty.', { name: 'EmptyBlobError' });\n    }\n}\nexport class InvalidVersionedHashSizeError extends BaseError {\n    constructor({ hash, size, }) {\n        super(`Versioned hash \"${hash}\" size is invalid.`, {\n            metaMessages: ['Expected: 32', `Received: ${size}`],\n            name: 'InvalidVersionedHashSizeError',\n        });\n    }\n}\nexport class InvalidVersionedHashVersionError extends BaseError {\n    constructor({ hash, version, }) {\n        super(`Versioned hash \"${hash}\" version is invalid.`, {\n            metaMessages: [\n                `Expected: ${versionedHashVersionKzg}`,\n                `Received: ${version}`,\n            ],\n            name: 'InvalidVersionedHashVersionError',\n        });\n    }\n}\n//# sourceMappingURL=blob.js.map","import { BaseError } from './base.js';\nexport class ChainDoesNotSupportContract extends BaseError {\n    constructor({ blockNumber, chain, contract, }) {\n        super(`Chain \"${chain.name}\" does not support contract \"${contract.name}\".`, {\n            metaMessages: [\n                'This could be due to any of the following:',\n                ...(blockNumber &&\n                    contract.blockCreated &&\n                    contract.blockCreated > blockNumber\n                    ? [\n                        `- The contract \"${contract.name}\" was not deployed until block ${contract.blockCreated} (current block ${blockNumber}).`,\n                    ]\n                    : [\n                        `- The chain does not have the contract \"${contract.name}\" configured.`,\n                    ]),\n            ],\n            name: 'ChainDoesNotSupportContract',\n        });\n    }\n}\nexport class ChainMismatchError extends BaseError {\n    constructor({ chain, currentChainId, }) {\n        super(`The current chain of the wallet (id: ${currentChainId}) does not match the target chain for the transaction (id: ${chain.id} – ${chain.name}).`, {\n            metaMessages: [\n                `Current Chain ID:  ${currentChainId}`,\n                `Expected Chain ID: ${chain.id} – ${chain.name}`,\n            ],\n            name: 'ChainMismatchError',\n        });\n    }\n}\nexport class ChainNotFoundError extends BaseError {\n    constructor() {\n        super([\n            'No chain was provided to the request.',\n            'Please provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient.',\n        ].join('\\n'), {\n            name: 'ChainNotFoundError',\n        });\n    }\n}\nexport class ClientChainNotConfiguredError extends BaseError {\n    constructor() {\n        super('No chain was provided to the Client.', {\n            name: 'ClientChainNotConfiguredError',\n        });\n    }\n}\nexport class InvalidChainIdError extends BaseError {\n    constructor({ chainId }) {\n        super(typeof chainId === 'number'\n            ? `Chain ID \"${chainId}\" is invalid.`\n            : 'Chain ID is invalid.', { name: 'InvalidChainIdError' });\n    }\n}\n//# sourceMappingURL=chain.js.map","import { stringify } from '../stringify.js';\nexport function formatAbiItemWithArgs({ abiItem, args, includeFunctionName = true, includeName = false, }) {\n    if (!('name' in abiItem))\n        return;\n    if (!('inputs' in abiItem))\n        return;\n    if (!abiItem.inputs)\n        return;\n    return `${includeFunctionName ? abiItem.name : ''}(${abiItem.inputs\n        .map((input, i) => `${includeName && input.name ? `${input.name}: ` : ''}${typeof args[i] === 'object' ? stringify(args[i]) : args[i]}`)\n        .join(', ')})`;\n}\n//# sourceMappingURL=formatAbiItemWithArgs.js.map","import { parseAccount } from '../accounts/utils/parseAccount.js';\nimport { panicReasons } from '../constants/solidity.js';\nimport { decodeErrorResult, } from '../utils/abi/decodeErrorResult.js';\nimport { formatAbiItem } from '../utils/abi/formatAbiItem.js';\nimport { formatAbiItemWithArgs } from '../utils/abi/formatAbiItemWithArgs.js';\nimport { getAbiItem } from '../utils/abi/getAbiItem.js';\nimport { formatEther } from '../utils/unit/formatEther.js';\nimport { formatGwei } from '../utils/unit/formatGwei.js';\nimport { AbiErrorSignatureNotFoundError } from './abi.js';\nimport { BaseError } from './base.js';\nimport { prettyStateOverride } from './stateOverride.js';\nimport { prettyPrint } from './transaction.js';\nimport { getContractAddress } from './utils.js';\nexport class CallExecutionError extends BaseError {\n    constructor(cause, { account: account_, docsPath, chain, data, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, stateOverride, }) {\n        const account = account_ ? parseAccount(account_) : undefined;\n        let prettyArgs = prettyPrint({\n            from: account?.address,\n            to,\n            value: typeof value !== 'undefined' &&\n                `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n            data,\n            gas,\n            gasPrice: typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n            maxFeePerGas: typeof maxFeePerGas !== 'undefined' &&\n                `${formatGwei(maxFeePerGas)} gwei`,\n            maxPriorityFeePerGas: typeof maxPriorityFeePerGas !== 'undefined' &&\n                `${formatGwei(maxPriorityFeePerGas)} gwei`,\n            nonce,\n        });\n        if (stateOverride) {\n            prettyArgs += `\\n${prettyStateOverride(stateOverride)}`;\n        }\n        super(cause.shortMessage, {\n            cause,\n            docsPath,\n            metaMessages: [\n                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n                'Raw Call Arguments:',\n                prettyArgs,\n            ].filter(Boolean),\n            name: 'CallExecutionError',\n        });\n        Object.defineProperty(this, \"cause\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.cause = cause;\n    }\n}\nexport class ContractFunctionExecutionError extends BaseError {\n    constructor(cause, { abi, args, contractAddress, docsPath, functionName, sender, }) {\n        const abiItem = getAbiItem({ abi, args, name: functionName });\n        const formattedArgs = abiItem\n            ? formatAbiItemWithArgs({\n                abiItem,\n                args,\n                includeFunctionName: false,\n                includeName: false,\n            })\n            : undefined;\n        const functionWithParams = abiItem\n            ? formatAbiItem(abiItem, { includeName: true })\n            : undefined;\n        const prettyArgs = prettyPrint({\n            address: contractAddress && getContractAddress(contractAddress),\n            function: functionWithParams,\n            args: formattedArgs &&\n                formattedArgs !== '()' &&\n                `${[...Array(functionName?.length ?? 0).keys()]\n                    .map(() => ' ')\n                    .join('')}${formattedArgs}`,\n            sender,\n        });\n        super(cause.shortMessage ||\n            `An unknown error occurred while executing the contract function \"${functionName}\".`, {\n            cause,\n            docsPath,\n            metaMessages: [\n                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n                prettyArgs && 'Contract Call:',\n                prettyArgs,\n            ].filter(Boolean),\n            name: 'ContractFunctionExecutionError',\n        });\n        Object.defineProperty(this, \"abi\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"args\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"cause\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"contractAddress\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"formattedArgs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"functionName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"sender\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.abi = abi;\n        this.args = args;\n        this.cause = cause;\n        this.contractAddress = contractAddress;\n        this.functionName = functionName;\n        this.sender = sender;\n    }\n}\nexport class ContractFunctionRevertedError extends BaseError {\n    constructor({ abi, data, functionName, message, }) {\n        let cause;\n        let decodedData = undefined;\n        let metaMessages;\n        let reason;\n        if (data && data !== '0x') {\n            try {\n                decodedData = decodeErrorResult({ abi, data });\n                const { abiItem, errorName, args: errorArgs } = decodedData;\n                if (errorName === 'Error') {\n                    reason = errorArgs[0];\n                }\n                else if (errorName === 'Panic') {\n                    const [firstArg] = errorArgs;\n                    reason = panicReasons[firstArg];\n                }\n                else {\n                    const errorWithParams = abiItem\n                        ? formatAbiItem(abiItem, { includeName: true })\n                        : undefined;\n                    const formattedArgs = abiItem && errorArgs\n                        ? formatAbiItemWithArgs({\n                            abiItem,\n                            args: errorArgs,\n                            includeFunctionName: false,\n                            includeName: false,\n                        })\n                        : undefined;\n                    metaMessages = [\n                        errorWithParams ? `Error: ${errorWithParams}` : '',\n                        formattedArgs && formattedArgs !== '()'\n                            ? `       ${[...Array(errorName?.length ?? 0).keys()]\n                                .map(() => ' ')\n                                .join('')}${formattedArgs}`\n                            : '',\n                    ];\n                }\n            }\n            catch (err) {\n                cause = err;\n            }\n        }\n        else if (message)\n            reason = message;\n        let signature;\n        if (cause instanceof AbiErrorSignatureNotFoundError) {\n            signature = cause.signature;\n            metaMessages = [\n                `Unable to decode signature \"${signature}\" as it was not found on the provided ABI.`,\n                'Make sure you are using the correct ABI and that the error exists on it.',\n                `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${signature}.`,\n            ];\n        }\n        super((reason && reason !== 'execution reverted') || signature\n            ? [\n                `The contract function \"${functionName}\" reverted with the following ${signature ? 'signature' : 'reason'}:`,\n                reason || signature,\n            ].join('\\n')\n            : `The contract function \"${functionName}\" reverted.`, {\n            cause,\n            metaMessages,\n            name: 'ContractFunctionRevertedError',\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"reason\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"signature\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.data = decodedData;\n        this.reason = reason;\n        this.signature = signature;\n    }\n}\nexport class ContractFunctionZeroDataError extends BaseError {\n    constructor({ functionName }) {\n        super(`The contract function \"${functionName}\" returned no data (\"0x\").`, {\n            metaMessages: [\n                'This could be due to any of the following:',\n                `  - The contract does not have the function \"${functionName}\",`,\n                '  - The parameters passed to the contract function may be invalid, or',\n                '  - The address is not a contract.',\n            ],\n            name: 'ContractFunctionZeroDataError',\n        });\n    }\n}\nexport class CounterfactualDeploymentFailedError extends BaseError {\n    constructor({ factory }) {\n        super(`Deployment for counterfactual contract call failed${factory ? ` for factory \"${factory}\".` : ''}`, {\n            metaMessages: [\n                'Please ensure:',\n                '- The `factory` is a valid contract deployment factory (ie. Create2 Factory, ERC-4337 Factory, etc).',\n                '- The `factoryData` is a valid encoded function call for contract deployment function on the factory.',\n            ],\n            name: 'CounterfactualDeploymentFailedError',\n        });\n    }\n}\nexport class RawContractError extends BaseError {\n    constructor({ data, message, }) {\n        super(message || '', { name: 'RawContractError' });\n        Object.defineProperty(this, \"code\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 3\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.data = data;\n    }\n}\n//# sourceMappingURL=contract.js.map","import { BaseError } from './base.js';\nexport class NegativeOffsetError extends BaseError {\n    constructor({ offset }) {\n        super(`Offset \\`${offset}\\` cannot be negative.`, {\n            name: 'NegativeOffsetError',\n        });\n    }\n}\nexport class PositionOutOfBoundsError extends BaseError {\n    constructor({ length, position }) {\n        super(`Position \\`${position}\\` is out of bounds (\\`0 < position < ${length}\\`).`, { name: 'PositionOutOfBoundsError' });\n    }\n}\nexport class RecursiveReadLimitExceededError extends BaseError {\n    constructor({ count, limit }) {\n        super(`Recursive read limit of \\`${limit}\\` exceeded (recursive read count: \\`${count}\\`).`, { name: 'RecursiveReadLimitExceededError' });\n    }\n}\n//# sourceMappingURL=cursor.js.map","import { formatGwei } from '../utils/unit/formatGwei.js';\nimport { BaseError } from './base.js';\nexport class ExecutionRevertedError extends BaseError {\n    constructor({ cause, message, } = {}) {\n        const reason = message\n            ?.replace('execution reverted: ', '')\n            ?.replace('execution reverted', '');\n        super(`Execution reverted ${reason ? `with reason: ${reason}` : 'for an unknown reason'}.`, {\n            cause,\n            name: 'ExecutionRevertedError',\n        });\n    }\n}\nObject.defineProperty(ExecutionRevertedError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 3\n});\nObject.defineProperty(ExecutionRevertedError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /execution reverted/\n});\nexport class FeeCapTooHighError extends BaseError {\n    constructor({ cause, maxFeePerGas, } = {}) {\n        super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''}) cannot be higher than the maximum allowed value (2^256-1).`, {\n            cause,\n            name: 'FeeCapTooHighError',\n        });\n    }\n}\nObject.defineProperty(FeeCapTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max fee per gas higher than 2\\^256-1|fee cap higher than 2\\^256-1/\n});\nexport class FeeCapTooLowError extends BaseError {\n    constructor({ cause, maxFeePerGas, } = {}) {\n        super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)}` : ''} gwei) cannot be lower than the block base fee.`, {\n            cause,\n            name: 'FeeCapTooLowError',\n        });\n    }\n}\nObject.defineProperty(FeeCapTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/\n});\nexport class NonceTooHighError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is higher than the next one expected.`, { cause, name: 'NonceTooHighError' });\n    }\n}\nObject.defineProperty(NonceTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce too high/\n});\nexport class NonceTooLowError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super([\n            `Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is lower than the current nonce of the account.`,\n            'Try increasing the nonce or find the latest nonce with `getTransactionCount`.',\n        ].join('\\n'), { cause, name: 'NonceTooLowError' });\n    }\n}\nObject.defineProperty(NonceTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce too low|transaction already imported|already known/\n});\nexport class NonceMaxValueError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}exceeds the maximum allowed nonce.`, { cause, name: 'NonceMaxValueError' });\n    }\n}\nObject.defineProperty(NonceMaxValueError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce has max value/\n});\nexport class InsufficientFundsError extends BaseError {\n    constructor({ cause } = {}) {\n        super([\n            'The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.',\n        ].join('\\n'), {\n            cause,\n            metaMessages: [\n                'This error could arise when the account does not have enough funds to:',\n                ' - pay for the total gas fee,',\n                ' - pay for the value to send.',\n                ' ',\n                'The cost of the transaction is calculated as `gas * gas fee + value`, where:',\n                ' - `gas` is the amount of gas needed for transaction to execute,',\n                ' - `gas fee` is the gas fee,',\n                ' - `value` is the amount of ether to send to the recipient.',\n            ],\n            name: 'InsufficientFundsError',\n        });\n    }\n}\nObject.defineProperty(InsufficientFundsError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /insufficient funds|exceeds transaction sender account balance/\n});\nexport class IntrinsicGasTooHighError extends BaseError {\n    constructor({ cause, gas, } = {}) {\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction exceeds the limit allowed for the block.`, {\n            cause,\n            name: 'IntrinsicGasTooHighError',\n        });\n    }\n}\nObject.defineProperty(IntrinsicGasTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /intrinsic gas too high|gas limit reached/\n});\nexport class IntrinsicGasTooLowError extends BaseError {\n    constructor({ cause, gas, } = {}) {\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction is too low.`, {\n            cause,\n            name: 'IntrinsicGasTooLowError',\n        });\n    }\n}\nObject.defineProperty(IntrinsicGasTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /intrinsic gas too low/\n});\nexport class TransactionTypeNotSupportedError extends BaseError {\n    constructor({ cause }) {\n        super('The transaction type is not supported for this chain.', {\n            cause,\n            name: 'TransactionTypeNotSupportedError',\n        });\n    }\n}\nObject.defineProperty(TransactionTypeNotSupportedError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /transaction type not valid/\n});\nexport class TipAboveFeeCapError extends BaseError {\n    constructor({ cause, maxPriorityFeePerGas, maxFeePerGas, } = {}) {\n        super([\n            `The provided tip (\\`maxPriorityFeePerGas\\`${maxPriorityFeePerGas\n                ? ` = ${formatGwei(maxPriorityFeePerGas)} gwei`\n                : ''}) cannot be higher than the fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''}).`,\n        ].join('\\n'), {\n            cause,\n            name: 'TipAboveFeeCapError',\n        });\n    }\n}\nObject.defineProperty(TipAboveFeeCapError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max priority fee per gas higher than max fee per gas|tip higher than fee cap/\n});\nexport class UnknownNodeError extends BaseError {\n    constructor({ cause }) {\n        super(`An error occurred while executing: ${cause?.shortMessage}`, {\n            cause,\n            name: 'UnknownNodeError',\n        });\n    }\n}\n//# sourceMappingURL=node.js.map","import { BaseError } from './base.js';\nexport class AccountStateConflictError extends BaseError {\n    constructor({ address }) {\n        super(`State for account \"${address}\" is set multiple times.`, {\n            name: 'AccountStateConflictError',\n        });\n    }\n}\nexport class StateAssignmentConflictError extends BaseError {\n    constructor() {\n        super('state and stateDiff are set on the same account.', {\n            name: 'StateAssignmentConflictError',\n        });\n    }\n}\n/** @internal */\nexport function prettyStateMapping(stateMapping) {\n    return stateMapping.reduce((pretty, { slot, value }) => {\n        return `${pretty}        ${slot}: ${value}\\n`;\n    }, '');\n}\nexport function prettyStateOverride(stateOverride) {\n    return stateOverride\n        .reduce((pretty, { address, ...state }) => {\n        let val = `${pretty}    ${address}:\\n`;\n        if (state.nonce)\n            val += `      nonce: ${state.nonce}\\n`;\n        if (state.balance)\n            val += `      balance: ${state.balance}\\n`;\n        if (state.code)\n            val += `      code: ${state.code}\\n`;\n        if (state.state) {\n            val += '      state:\\n';\n            val += prettyStateMapping(state.state);\n        }\n        if (state.stateDiff) {\n            val += '      stateDiff:\\n';\n            val += prettyStateMapping(state.stateDiff);\n        }\n        return val;\n    }, '  State Override:\\n')\n        .slice(0, -1);\n}\n//# sourceMappingURL=stateOverride.js.map","import { formatEther } from '../utils/unit/formatEther.js';\nimport { formatGwei } from '../utils/unit/formatGwei.js';\nimport { BaseError } from './base.js';\nexport function prettyPrint(args) {\n    const entries = Object.entries(args)\n        .map(([key, value]) => {\n        if (value === undefined || value === false)\n            return null;\n        return [key, value];\n    })\n        .filter(Boolean);\n    const maxLength = entries.reduce((acc, [key]) => Math.max(acc, key.length), 0);\n    return entries\n        .map(([key, value]) => `  ${`${key}:`.padEnd(maxLength + 1)}  ${value}`)\n        .join('\\n');\n}\nexport class FeeConflictError extends BaseError {\n    constructor() {\n        super([\n            'Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.',\n            'Use `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others.',\n        ].join('\\n'), { name: 'FeeConflictError' });\n    }\n}\nexport class InvalidLegacyVError extends BaseError {\n    constructor({ v }) {\n        super(`Invalid \\`v\\` value \"${v}\". Expected 27 or 28.`, {\n            name: 'InvalidLegacyVError',\n        });\n    }\n}\nexport class InvalidSerializableTransactionError extends BaseError {\n    constructor({ transaction }) {\n        super('Cannot infer a transaction type from provided transaction.', {\n            metaMessages: [\n                'Provided Transaction:',\n                '{',\n                prettyPrint(transaction),\n                '}',\n                '',\n                'To infer the type, either provide:',\n                '- a `type` to the Transaction, or',\n                '- an EIP-1559 Transaction with `maxFeePerGas`, or',\n                '- an EIP-2930 Transaction with `gasPrice` & `accessList`, or',\n                '- an EIP-4844 Transaction with `blobs`, `blobVersionedHashes`, `sidecars`, or',\n                '- an EIP-7702 Transaction with `authorizationList`, or',\n                '- a Legacy Transaction with `gasPrice`',\n            ],\n            name: 'InvalidSerializableTransactionError',\n        });\n    }\n}\nexport class InvalidSerializedTransactionTypeError extends BaseError {\n    constructor({ serializedType }) {\n        super(`Serialized transaction type \"${serializedType}\" is invalid.`, {\n            name: 'InvalidSerializedTransactionType',\n        });\n        Object.defineProperty(this, \"serializedType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.serializedType = serializedType;\n    }\n}\nexport class InvalidSerializedTransactionError extends BaseError {\n    constructor({ attributes, serializedTransaction, type, }) {\n        const missing = Object.entries(attributes)\n            .map(([key, value]) => (typeof value === 'undefined' ? key : undefined))\n            .filter(Boolean);\n        super(`Invalid serialized transaction of type \"${type}\" was provided.`, {\n            metaMessages: [\n                `Serialized Transaction: \"${serializedTransaction}\"`,\n                missing.length > 0 ? `Missing Attributes: ${missing.join(', ')}` : '',\n            ].filter(Boolean),\n            name: 'InvalidSerializedTransactionError',\n        });\n        Object.defineProperty(this, \"serializedTransaction\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.serializedTransaction = serializedTransaction;\n        this.type = type;\n    }\n}\nexport class InvalidStorageKeySizeError extends BaseError {\n    constructor({ storageKey }) {\n        super(`Size for storage key \"${storageKey}\" is invalid. Expected 32 bytes. Got ${Math.floor((storageKey.length - 2) / 2)} bytes.`, { name: 'InvalidStorageKeySizeError' });\n    }\n}\nexport class TransactionExecutionError extends BaseError {\n    constructor(cause, { account, docsPath, chain, data, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, }) {\n        const prettyArgs = prettyPrint({\n            chain: chain && `${chain?.name} (id: ${chain?.id})`,\n            from: account?.address,\n            to,\n            value: typeof value !== 'undefined' &&\n                `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n            data,\n            gas,\n            gasPrice: typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n            maxFeePerGas: typeof maxFeePerGas !== 'undefined' &&\n                `${formatGwei(maxFeePerGas)} gwei`,\n            maxPriorityFeePerGas: typeof maxPriorityFeePerGas !== 'undefined' &&\n                `${formatGwei(maxPriorityFeePerGas)} gwei`,\n            nonce,\n        });\n        super(cause.shortMessage, {\n            cause,\n            docsPath,\n            metaMessages: [\n                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n                'Request Arguments:',\n                prettyArgs,\n            ].filter(Boolean),\n            name: 'TransactionExecutionError',\n        });\n        Object.defineProperty(this, \"cause\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.cause = cause;\n    }\n}\nexport class TransactionNotFoundError extends BaseError {\n    constructor({ blockHash, blockNumber, blockTag, hash, index, }) {\n        let identifier = 'Transaction';\n        if (blockTag && index !== undefined)\n            identifier = `Transaction at block time \"${blockTag}\" at index \"${index}\"`;\n        if (blockHash && index !== undefined)\n            identifier = `Transaction at block hash \"${blockHash}\" at index \"${index}\"`;\n        if (blockNumber && index !== undefined)\n            identifier = `Transaction at block number \"${blockNumber}\" at index \"${index}\"`;\n        if (hash)\n            identifier = `Transaction with hash \"${hash}\"`;\n        super(`${identifier} could not be found.`, {\n            name: 'TransactionNotFoundError',\n        });\n    }\n}\nexport class TransactionReceiptNotFoundError extends BaseError {\n    constructor({ hash }) {\n        super(`Transaction receipt with hash \"${hash}\" could not be found. The Transaction may not be processed on a block yet.`, {\n            name: 'TransactionReceiptNotFoundError',\n        });\n    }\n}\nexport class WaitForTransactionReceiptTimeoutError extends BaseError {\n    constructor({ hash }) {\n        super(`Timed out while waiting for transaction with hash \"${hash}\" to be confirmed.`, { name: 'WaitForTransactionReceiptTimeoutError' });\n    }\n}\n//# sourceMappingURL=transaction.js.map","export const getContractAddress = (address) => address;\nexport const getUrl = (url) => url;\n//# sourceMappingURL=utils.js.map","import { InvalidBytesBooleanError } from '../../errors/encoding.js';\nimport { trim } from '../data/trim.js';\nimport { assertSize, hexToBigInt, hexToNumber, } from './fromHex.js';\nimport { bytesToHex } from './toHex.js';\n/**\n * Decodes a byte array into a UTF-8 string, hex value, number, bigint or boolean.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes\n * - Example: https://viem.sh/docs/utilities/fromBytes#usage\n *\n * @param bytes Byte array to decode.\n * @param toOrOpts Type to convert to or options.\n * @returns Decoded value.\n *\n * @example\n * import { fromBytes } from 'viem'\n * const data = fromBytes(new Uint8Array([1, 164]), 'number')\n * // 420\n *\n * @example\n * import { fromBytes } from 'viem'\n * const data = fromBytes(\n *   new Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]),\n *   'string'\n * )\n * // 'Hello world'\n */\nexport function fromBytes(bytes, toOrOpts) {\n    const opts = typeof toOrOpts === 'string' ? { to: toOrOpts } : toOrOpts;\n    const to = opts.to;\n    if (to === 'number')\n        return bytesToNumber(bytes, opts);\n    if (to === 'bigint')\n        return bytesToBigInt(bytes, opts);\n    if (to === 'boolean')\n        return bytesToBool(bytes, opts);\n    if (to === 'string')\n        return bytesToString(bytes, opts);\n    return bytesToHex(bytes, opts);\n}\n/**\n * Decodes a byte array into a bigint.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes#bytestobigint\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns BigInt value.\n *\n * @example\n * import { bytesToBigInt } from 'viem'\n * const data = bytesToBigInt(new Uint8Array([1, 164]))\n * // 420n\n */\nexport function bytesToBigInt(bytes, opts = {}) {\n    if (typeof opts.size !== 'undefined')\n        assertSize(bytes, { size: opts.size });\n    const hex = bytesToHex(bytes, opts);\n    return hexToBigInt(hex, opts);\n}\n/**\n * Decodes a byte array into a boolean.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes#bytestobool\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns Boolean value.\n *\n * @example\n * import { bytesToBool } from 'viem'\n * const data = bytesToBool(new Uint8Array([1]))\n * // true\n */\nexport function bytesToBool(bytes_, opts = {}) {\n    let bytes = bytes_;\n    if (typeof opts.size !== 'undefined') {\n        assertSize(bytes, { size: opts.size });\n        bytes = trim(bytes);\n    }\n    if (bytes.length > 1 || bytes[0] > 1)\n        throw new InvalidBytesBooleanError(bytes);\n    return Boolean(bytes[0]);\n}\n/**\n * Decodes a byte array into a number.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes#bytestonumber\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns Number value.\n *\n * @example\n * import { bytesToNumber } from 'viem'\n * const data = bytesToNumber(new Uint8Array([1, 164]))\n * // 420\n */\nexport function bytesToNumber(bytes, opts = {}) {\n    if (typeof opts.size !== 'undefined')\n        assertSize(bytes, { size: opts.size });\n    const hex = bytesToHex(bytes, opts);\n    return hexToNumber(hex, opts);\n}\n/**\n * Decodes a byte array into a UTF-8 string.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes#bytestostring\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns String value.\n *\n * @example\n * import { bytesToString } from 'viem'\n * const data = bytesToString(new Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\n * // 'Hello world'\n */\nexport function bytesToString(bytes_, opts = {}) {\n    let bytes = bytes_;\n    if (typeof opts.size !== 'undefined') {\n        assertSize(bytes, { size: opts.size });\n        bytes = trim(bytes, { dir: 'right' });\n    }\n    return new TextDecoder().decode(bytes);\n}\n//# sourceMappingURL=fromBytes.js.map","import { AbiDecodingDataSizeTooSmallError, AbiDecodingZeroDataError, InvalidAbiDecodingTypeError, } from '../../errors/abi.js';\nimport { checksumAddress, } from '../address/getAddress.js';\nimport { createCursor, } from '../cursor.js';\nimport { size } from '../data/size.js';\nimport { sliceBytes } from '../data/slice.js';\nimport { trim } from '../data/trim.js';\nimport { bytesToBigInt, bytesToBool, bytesToNumber, bytesToString, } from '../encoding/fromBytes.js';\nimport { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\nimport { getArrayComponents } from './encodeAbiParameters.js';\nexport function decodeAbiParameters(params, data) {\n    const bytes = typeof data === 'string' ? hexToBytes(data) : data;\n    const cursor = createCursor(bytes);\n    if (size(bytes) === 0 && params.length > 0)\n        throw new AbiDecodingZeroDataError();\n    if (size(data) && size(data) < 32)\n        throw new AbiDecodingDataSizeTooSmallError({\n            data: typeof data === 'string' ? data : bytesToHex(data),\n            params: params,\n            size: size(data),\n        });\n    let consumed = 0;\n    const values = [];\n    for (let i = 0; i < params.length; ++i) {\n        const param = params[i];\n        cursor.setPosition(consumed);\n        const [data, consumed_] = decodeParameter(cursor, param, {\n            staticPosition: 0,\n        });\n        consumed += consumed_;\n        values.push(data);\n    }\n    return values;\n}\nfunction decodeParameter(cursor, param, { staticPosition }) {\n    const arrayComponents = getArrayComponents(param.type);\n    if (arrayComponents) {\n        const [length, type] = arrayComponents;\n        return decodeArray(cursor, { ...param, type }, { length, staticPosition });\n    }\n    if (param.type === 'tuple')\n        return decodeTuple(cursor, param, { staticPosition });\n    if (param.type === 'address')\n        return decodeAddress(cursor);\n    if (param.type === 'bool')\n        return decodeBool(cursor);\n    if (param.type.startsWith('bytes'))\n        return decodeBytes(cursor, param, { staticPosition });\n    if (param.type.startsWith('uint') || param.type.startsWith('int'))\n        return decodeNumber(cursor, param);\n    if (param.type === 'string')\n        return decodeString(cursor, { staticPosition });\n    throw new InvalidAbiDecodingTypeError(param.type, {\n        docsPath: '/docs/contract/decodeAbiParameters',\n    });\n}\n////////////////////////////////////////////////////////////////////\n// Type Decoders\nconst sizeOfLength = 32;\nconst sizeOfOffset = 32;\nfunction decodeAddress(cursor) {\n    const value = cursor.readBytes(32);\n    return [checksumAddress(bytesToHex(sliceBytes(value, -20))), 32];\n}\nfunction decodeArray(cursor, param, { length, staticPosition }) {\n    // If the length of the array is not known in advance (dynamic array),\n    // this means we will need to wonder off to the pointer and decode.\n    if (!length) {\n        // Dealing with a dynamic type, so get the offset of the array data.\n        const offset = bytesToNumber(cursor.readBytes(sizeOfOffset));\n        // Start is the static position of current slot + offset.\n        const start = staticPosition + offset;\n        const startOfData = start + sizeOfLength;\n        // Get the length of the array from the offset.\n        cursor.setPosition(start);\n        const length = bytesToNumber(cursor.readBytes(sizeOfLength));\n        // Check if the array has any dynamic children.\n        const dynamicChild = hasDynamicChild(param);\n        let consumed = 0;\n        const value = [];\n        for (let i = 0; i < length; ++i) {\n            // If any of the children is dynamic, then all elements will be offset pointer, thus size of one slot (32 bytes).\n            // Otherwise, elements will be the size of their encoding (consumed bytes).\n            cursor.setPosition(startOfData + (dynamicChild ? i * 32 : consumed));\n            const [data, consumed_] = decodeParameter(cursor, param, {\n                staticPosition: startOfData,\n            });\n            consumed += consumed_;\n            value.push(data);\n        }\n        // As we have gone wondering, restore to the original position + next slot.\n        cursor.setPosition(staticPosition + 32);\n        return [value, 32];\n    }\n    // If the length of the array is known in advance,\n    // and the length of an element deeply nested in the array is not known,\n    // we need to decode the offset of the array data.\n    if (hasDynamicChild(param)) {\n        // Dealing with dynamic types, so get the offset of the array data.\n        const offset = bytesToNumber(cursor.readBytes(sizeOfOffset));\n        // Start is the static position of current slot + offset.\n        const start = staticPosition + offset;\n        const value = [];\n        for (let i = 0; i < length; ++i) {\n            // Move cursor along to the next slot (next offset pointer).\n            cursor.setPosition(start + i * 32);\n            const [data] = decodeParameter(cursor, param, {\n                staticPosition: start,\n            });\n            value.push(data);\n        }\n        // As we have gone wondering, restore to the original position + next slot.\n        cursor.setPosition(staticPosition + 32);\n        return [value, 32];\n    }\n    // If the length of the array is known in advance and the array is deeply static,\n    // then we can just decode each element in sequence.\n    let consumed = 0;\n    const value = [];\n    for (let i = 0; i < length; ++i) {\n        const [data, consumed_] = decodeParameter(cursor, param, {\n            staticPosition: staticPosition + consumed,\n        });\n        consumed += consumed_;\n        value.push(data);\n    }\n    return [value, consumed];\n}\nfunction decodeBool(cursor) {\n    return [bytesToBool(cursor.readBytes(32), { size: 32 }), 32];\n}\nfunction decodeBytes(cursor, param, { staticPosition }) {\n    const [_, size] = param.type.split('bytes');\n    if (!size) {\n        // Dealing with dynamic types, so get the offset of the bytes data.\n        const offset = bytesToNumber(cursor.readBytes(32));\n        // Set position of the cursor to start of bytes data.\n        cursor.setPosition(staticPosition + offset);\n        const length = bytesToNumber(cursor.readBytes(32));\n        // If there is no length, we have zero data.\n        if (length === 0) {\n            // As we have gone wondering, restore to the original position + next slot.\n            cursor.setPosition(staticPosition + 32);\n            return ['0x', 32];\n        }\n        const data = cursor.readBytes(length);\n        // As we have gone wondering, restore to the original position + next slot.\n        cursor.setPosition(staticPosition + 32);\n        return [bytesToHex(data), 32];\n    }\n    const value = bytesToHex(cursor.readBytes(Number.parseInt(size), 32));\n    return [value, 32];\n}\nfunction decodeNumber(cursor, param) {\n    const signed = param.type.startsWith('int');\n    const size = Number.parseInt(param.type.split('int')[1] || '256');\n    const value = cursor.readBytes(32);\n    return [\n        size > 48\n            ? bytesToBigInt(value, { signed })\n            : bytesToNumber(value, { signed }),\n        32,\n    ];\n}\nfunction decodeTuple(cursor, param, { staticPosition }) {\n    // Tuples can have unnamed components (i.e. they are arrays), so we must\n    // determine whether the tuple is named or unnamed. In the case of a named\n    // tuple, the value will be an object where each property is the name of the\n    // component. In the case of an unnamed tuple, the value will be an array.\n    const hasUnnamedChild = param.components.length === 0 || param.components.some(({ name }) => !name);\n    // Initialize the value to an object or an array, depending on whether the\n    // tuple is named or unnamed.\n    const value = hasUnnamedChild ? [] : {};\n    let consumed = 0;\n    // If the tuple has a dynamic child, we must first decode the offset to the\n    // tuple data.\n    if (hasDynamicChild(param)) {\n        // Dealing with dynamic types, so get the offset of the tuple data.\n        const offset = bytesToNumber(cursor.readBytes(sizeOfOffset));\n        // Start is the static position of referencing slot + offset.\n        const start = staticPosition + offset;\n        for (let i = 0; i < param.components.length; ++i) {\n            const component = param.components[i];\n            cursor.setPosition(start + consumed);\n            const [data, consumed_] = decodeParameter(cursor, component, {\n                staticPosition: start,\n            });\n            consumed += consumed_;\n            value[hasUnnamedChild ? i : component?.name] = data;\n        }\n        // As we have gone wondering, restore to the original position + next slot.\n        cursor.setPosition(staticPosition + 32);\n        return [value, 32];\n    }\n    // If the tuple has static children, we can just decode each component\n    // in sequence.\n    for (let i = 0; i < param.components.length; ++i) {\n        const component = param.components[i];\n        const [data, consumed_] = decodeParameter(cursor, component, {\n            staticPosition,\n        });\n        value[hasUnnamedChild ? i : component?.name] = data;\n        consumed += consumed_;\n    }\n    return [value, consumed];\n}\nfunction decodeString(cursor, { staticPosition }) {\n    // Get offset to start of string data.\n    const offset = bytesToNumber(cursor.readBytes(32));\n    // Start is the static position of current slot + offset.\n    const start = staticPosition + offset;\n    cursor.setPosition(start);\n    const length = bytesToNumber(cursor.readBytes(32));\n    // If there is no length, we have zero data (empty string).\n    if (length === 0) {\n        cursor.setPosition(staticPosition + 32);\n        return ['', 32];\n    }\n    const data = cursor.readBytes(length, 32);\n    const value = bytesToString(trim(data));\n    // As we have gone wondering, restore to the original position + next slot.\n    cursor.setPosition(staticPosition + 32);\n    return [value, 32];\n}\nfunction hasDynamicChild(param) {\n    const { type } = param;\n    if (type === 'string')\n        return true;\n    if (type === 'bytes')\n        return true;\n    if (type.endsWith('[]'))\n        return true;\n    if (type === 'tuple')\n        return param.components?.some(hasDynamicChild);\n    const arrayComponents = getArrayComponents(param.type);\n    if (arrayComponents &&\n        hasDynamicChild({ ...param, type: arrayComponents[1] }))\n        return true;\n    return false;\n}\n//# sourceMappingURL=decodeAbiParameters.js.map","import { solidityError, solidityPanic } from '../../constants/solidity.js';\nimport { AbiDecodingZeroDataError, AbiErrorSignatureNotFoundError, } from '../../errors/abi.js';\nimport { slice } from '../data/slice.js';\nimport { toFunctionSelector, } from '../hash/toFunctionSelector.js';\nimport { decodeAbiParameters, } from './decodeAbiParameters.js';\nimport { formatAbiItem } from './formatAbiItem.js';\nexport function decodeErrorResult(parameters) {\n    const { abi, data } = parameters;\n    const signature = slice(data, 0, 4);\n    if (signature === '0x')\n        throw new AbiDecodingZeroDataError();\n    const abi_ = [...(abi || []), solidityError, solidityPanic];\n    const abiItem = abi_.find((x) => x.type === 'error' && signature === toFunctionSelector(formatAbiItem(x)));\n    if (!abiItem)\n        throw new AbiErrorSignatureNotFoundError(signature, {\n            docsPath: '/docs/contract/decodeErrorResult',\n        });\n    return {\n        abiItem,\n        args: 'inputs' in abiItem && abiItem.inputs && abiItem.inputs.length > 0\n            ? decodeAbiParameters(abiItem.inputs, slice(data, 4))\n            : undefined,\n        errorName: abiItem.name,\n    };\n}\n//# sourceMappingURL=decodeErrorResult.js.map","import { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Compute commitments from a list of blobs.\n *\n * @example\n * ```ts\n * import { blobsToCommitments, toBlobs } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * ```\n */\nexport function blobsToCommitments(parameters) {\n    const { kzg } = parameters;\n    const to = parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes');\n    const blobs = (typeof parameters.blobs[0] === 'string'\n        ? parameters.blobs.map((x) => hexToBytes(x))\n        : parameters.blobs);\n    const commitments = [];\n    for (const blob of blobs)\n        commitments.push(Uint8Array.from(kzg.blobToKzgCommitment(blob)));\n    return (to === 'bytes'\n        ? commitments\n        : commitments.map((x) => bytesToHex(x)));\n}\n//# sourceMappingURL=blobsToCommitments.js.map","import { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Compute the proofs for a list of blobs and their commitments.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const proofs = blobsToProofs({ blobs, commitments, kzg })\n * ```\n */\nexport function blobsToProofs(parameters) {\n    const { kzg } = parameters;\n    const to = parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes');\n    const blobs = (typeof parameters.blobs[0] === 'string'\n        ? parameters.blobs.map((x) => hexToBytes(x))\n        : parameters.blobs);\n    const commitments = (typeof parameters.commitments[0] === 'string'\n        ? parameters.commitments.map((x) => hexToBytes(x))\n        : parameters.commitments);\n    const proofs = [];\n    for (let i = 0; i < blobs.length; i++) {\n        const blob = blobs[i];\n        const commitment = commitments[i];\n        proofs.push(Uint8Array.from(kzg.computeBlobKzgProof(blob, commitment)));\n    }\n    return (to === 'bytes'\n        ? proofs\n        : proofs.map((x) => bytesToHex(x)));\n}\n//# sourceMappingURL=blobsToProofs.js.map","import { bytesToHex } from '../encoding/toHex.js';\nimport { sha256 } from '../hash/sha256.js';\n/**\n * Transform a commitment to it's versioned hash.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentToVersionedHash,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const [commitment] = blobsToCommitments({ blobs, kzg })\n * const versionedHash = commitmentToVersionedHash({ commitment })\n * ```\n */\nexport function commitmentToVersionedHash(parameters) {\n    const { commitment, version = 1 } = parameters;\n    const to = parameters.to ?? (typeof commitment === 'string' ? 'hex' : 'bytes');\n    const versionedHash = sha256(commitment, 'bytes');\n    versionedHash.set([version], 0);\n    return (to === 'bytes' ? versionedHash : bytesToHex(versionedHash));\n}\n//# sourceMappingURL=commitmentToVersionedHash.js.map","import { commitmentToVersionedHash, } from './commitmentToVersionedHash.js';\n/**\n * Transform a list of commitments to their versioned hashes.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentsToVersionedHashes,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const versionedHashes = commitmentsToVersionedHashes({ commitments })\n * ```\n */\nexport function commitmentsToVersionedHashes(parameters) {\n    const { commitments, version } = parameters;\n    const to = parameters.to ?? (typeof commitments[0] === 'string' ? 'hex' : 'bytes');\n    const hashes = [];\n    for (const commitment of commitments) {\n        hashes.push(commitmentToVersionedHash({\n            commitment,\n            to,\n            version,\n        }));\n    }\n    return hashes;\n}\n//# sourceMappingURL=commitmentsToVersionedHashes.js.map","// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\n/** Blob limit per transaction. */\nconst blobsPerTransaction = 6;\n/** The number of bytes in a BLS scalar field element. */\nexport const bytesPerFieldElement = 32;\n/** The number of field elements in a blob. */\nexport const fieldElementsPerBlob = 4096;\n/** The number of bytes in a blob. */\nexport const bytesPerBlob = bytesPerFieldElement * fieldElementsPerBlob;\n/** Blob bytes limit per transaction. */\nexport const maxBytesPerTransaction = bytesPerBlob * blobsPerTransaction -\n    // terminator byte (0x80).\n    1 -\n    // zero byte (0x00) appended to each field element.\n    1 * fieldElementsPerBlob * blobsPerTransaction;\n//# sourceMappingURL=blob.js.map","import { blobsToCommitments, } from './blobsToCommitments.js';\nimport { blobsToProofs } from './blobsToProofs.js';\nimport { toBlobs } from './toBlobs.js';\n/**\n * Transforms arbitrary data (or blobs, commitments, & proofs) into a sidecar array.\n *\n * @example\n * ```ts\n * import { toBlobSidecars, stringToHex } from 'viem'\n *\n * const sidecars = toBlobSidecars({ data: stringToHex('hello world') })\n * ```\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   toBlobs,\n *   blobsToProofs,\n *   toBlobSidecars,\n *   stringToHex\n * } from 'viem'\n *\n * const blobs = toBlobs({ data: stringToHex('hello world') })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const proofs = blobsToProofs({ blobs, commitments, kzg })\n *\n * const sidecars = toBlobSidecars({ blobs, commitments, proofs })\n * ```\n */\nexport function toBlobSidecars(parameters) {\n    const { data, kzg, to } = parameters;\n    const blobs = parameters.blobs ?? toBlobs({ data: data, to });\n    const commitments = parameters.commitments ?? blobsToCommitments({ blobs, kzg: kzg, to });\n    const proofs = parameters.proofs ?? blobsToProofs({ blobs, commitments, kzg: kzg, to });\n    const sidecars = [];\n    for (let i = 0; i < blobs.length; i++)\n        sidecars.push({\n            blob: blobs[i],\n            commitment: commitments[i],\n            proof: proofs[i],\n        });\n    return sidecars;\n}\n//# sourceMappingURL=toBlobSidecars.js.map","import { bytesPerBlob, bytesPerFieldElement, fieldElementsPerBlob, maxBytesPerTransaction, } from '../../constants/blob.js';\nimport { BlobSizeTooLargeError, EmptyBlobError, } from '../../errors/blob.js';\nimport { createCursor } from '../cursor.js';\nimport { size } from '../data/size.js';\nimport { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Transforms arbitrary data to blobs.\n *\n * @example\n * ```ts\n * import { toBlobs, stringToHex } from 'viem'\n *\n * const blobs = toBlobs({ data: stringToHex('hello world') })\n * ```\n */\nexport function toBlobs(parameters) {\n    const to = parameters.to ?? (typeof parameters.data === 'string' ? 'hex' : 'bytes');\n    const data = (typeof parameters.data === 'string'\n        ? hexToBytes(parameters.data)\n        : parameters.data);\n    const size_ = size(data);\n    if (!size_)\n        throw new EmptyBlobError();\n    if (size_ > maxBytesPerTransaction)\n        throw new BlobSizeTooLargeError({\n            maxSize: maxBytesPerTransaction,\n            size: size_,\n        });\n    const blobs = [];\n    let active = true;\n    let position = 0;\n    while (active) {\n        const blob = createCursor(new Uint8Array(bytesPerBlob));\n        let size = 0;\n        while (size < fieldElementsPerBlob) {\n            const bytes = data.slice(position, position + (bytesPerFieldElement - 1));\n            // Push a zero byte so the field element doesn't overflow the BLS modulus.\n            blob.pushByte(0x00);\n            // Push the current segment of data bytes.\n            blob.pushBytes(bytes);\n            // If we detect that the current segment of data bytes is less than 31 bytes,\n            // we can stop processing and push a terminator byte to indicate the end of the blob.\n            if (bytes.length < 31) {\n                blob.pushByte(0x80);\n                active = false;\n                break;\n            }\n            size++;\n            position += 31;\n        }\n        blobs.push(blob);\n    }\n    return (to === 'bytes'\n        ? blobs.map((x) => x.bytes)\n        : blobs.map((x) => bytesToHex(x.bytes)));\n}\n//# sourceMappingURL=toBlobs.js.map","export function defineChain(chain) {\n    return {\n        formatters: undefined,\n        fees: undefined,\n        serializers: undefined,\n        ...chain,\n    };\n}\n//# sourceMappingURL=defineChain.js.map","import { NegativeOffsetError, PositionOutOfBoundsError, RecursiveReadLimitExceededError, } from '../errors/cursor.js';\nconst staticCursor = {\n    bytes: new Uint8Array(),\n    dataView: new DataView(new ArrayBuffer(0)),\n    position: 0,\n    positionReadCount: new Map(),\n    recursiveReadCount: 0,\n    recursiveReadLimit: Number.POSITIVE_INFINITY,\n    assertReadLimit() {\n        if (this.recursiveReadCount >= this.recursiveReadLimit)\n            throw new RecursiveReadLimitExceededError({\n                count: this.recursiveReadCount + 1,\n                limit: this.recursiveReadLimit,\n            });\n    },\n    assertPosition(position) {\n        if (position < 0 || position > this.bytes.length - 1)\n            throw new PositionOutOfBoundsError({\n                length: this.bytes.length,\n                position,\n            });\n    },\n    decrementPosition(offset) {\n        if (offset < 0)\n            throw new NegativeOffsetError({ offset });\n        const position = this.position - offset;\n        this.assertPosition(position);\n        this.position = position;\n    },\n    getReadCount(position) {\n        return this.positionReadCount.get(position || this.position) || 0;\n    },\n    incrementPosition(offset) {\n        if (offset < 0)\n            throw new NegativeOffsetError({ offset });\n        const position = this.position + offset;\n        this.assertPosition(position);\n        this.position = position;\n    },\n    inspectByte(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position);\n        return this.bytes[position];\n    },\n    inspectBytes(length, position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + length - 1);\n        return this.bytes.subarray(position, position + length);\n    },\n    inspectUint8(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position);\n        return this.bytes[position];\n    },\n    inspectUint16(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 1);\n        return this.dataView.getUint16(position);\n    },\n    inspectUint24(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 2);\n        return ((this.dataView.getUint16(position) << 8) +\n            this.dataView.getUint8(position + 2));\n    },\n    inspectUint32(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 3);\n        return this.dataView.getUint32(position);\n    },\n    pushByte(byte) {\n        this.assertPosition(this.position);\n        this.bytes[this.position] = byte;\n        this.position++;\n    },\n    pushBytes(bytes) {\n        this.assertPosition(this.position + bytes.length - 1);\n        this.bytes.set(bytes, this.position);\n        this.position += bytes.length;\n    },\n    pushUint8(value) {\n        this.assertPosition(this.position);\n        this.bytes[this.position] = value;\n        this.position++;\n    },\n    pushUint16(value) {\n        this.assertPosition(this.position + 1);\n        this.dataView.setUint16(this.position, value);\n        this.position += 2;\n    },\n    pushUint24(value) {\n        this.assertPosition(this.position + 2);\n        this.dataView.setUint16(this.position, value >> 8);\n        this.dataView.setUint8(this.position + 2, value & ~4294967040);\n        this.position += 3;\n    },\n    pushUint32(value) {\n        this.assertPosition(this.position + 3);\n        this.dataView.setUint32(this.position, value);\n        this.position += 4;\n    },\n    readByte() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectByte();\n        this.position++;\n        return value;\n    },\n    readBytes(length, size) {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectBytes(length);\n        this.position += size ?? length;\n        return value;\n    },\n    readUint8() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint8();\n        this.position += 1;\n        return value;\n    },\n    readUint16() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint16();\n        this.position += 2;\n        return value;\n    },\n    readUint24() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint24();\n        this.position += 3;\n        return value;\n    },\n    readUint32() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint32();\n        this.position += 4;\n        return value;\n    },\n    get remaining() {\n        return this.bytes.length - this.position;\n    },\n    setPosition(position) {\n        const oldPosition = this.position;\n        this.assertPosition(position);\n        this.position = position;\n        return () => (this.position = oldPosition);\n    },\n    _touch() {\n        if (this.recursiveReadLimit === Number.POSITIVE_INFINITY)\n            return;\n        const count = this.getReadCount();\n        this.positionReadCount.set(this.position, count + 1);\n        if (count > 0)\n            this.recursiveReadCount++;\n    },\n};\nexport function createCursor(bytes, { recursiveReadLimit = 8_192 } = {}) {\n    const cursor = Object.create(staticCursor);\n    cursor.bytes = bytes;\n    cursor.dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    cursor.positionReadCount = new Map();\n    cursor.recursiveReadLimit = recursiveReadLimit;\n    return cursor;\n}\n//# sourceMappingURL=cursor.js.map","import { BaseError } from '../../errors/base.js';\nimport { createCursor, } from '../cursor.js';\nimport { hexToBytes } from './toBytes.js';\nimport { bytesToHex } from './toHex.js';\nexport function toRlp(bytes, to = 'hex') {\n    const encodable = getEncodable(bytes);\n    const cursor = createCursor(new Uint8Array(encodable.length));\n    encodable.encode(cursor);\n    if (to === 'hex')\n        return bytesToHex(cursor.bytes);\n    return cursor.bytes;\n}\nexport function bytesToRlp(bytes, to = 'bytes') {\n    return toRlp(bytes, to);\n}\nexport function hexToRlp(hex, to = 'hex') {\n    return toRlp(hex, to);\n}\nfunction getEncodable(bytes) {\n    if (Array.isArray(bytes))\n        return getEncodableList(bytes.map((x) => getEncodable(x)));\n    return getEncodableBytes(bytes);\n}\nfunction getEncodableList(list) {\n    const bodyLength = list.reduce((acc, x) => acc + x.length, 0);\n    const sizeOfBodyLength = getSizeOfLength(bodyLength);\n    const length = (() => {\n        if (bodyLength <= 55)\n            return 1 + bodyLength;\n        return 1 + sizeOfBodyLength + bodyLength;\n    })();\n    return {\n        length,\n        encode(cursor) {\n            if (bodyLength <= 55) {\n                cursor.pushByte(0xc0 + bodyLength);\n            }\n            else {\n                cursor.pushByte(0xc0 + 55 + sizeOfBodyLength);\n                if (sizeOfBodyLength === 1)\n                    cursor.pushUint8(bodyLength);\n                else if (sizeOfBodyLength === 2)\n                    cursor.pushUint16(bodyLength);\n                else if (sizeOfBodyLength === 3)\n                    cursor.pushUint24(bodyLength);\n                else\n                    cursor.pushUint32(bodyLength);\n            }\n            for (const { encode } of list) {\n                encode(cursor);\n            }\n        },\n    };\n}\nfunction getEncodableBytes(bytesOrHex) {\n    const bytes = typeof bytesOrHex === 'string' ? hexToBytes(bytesOrHex) : bytesOrHex;\n    const sizeOfBytesLength = getSizeOfLength(bytes.length);\n    const length = (() => {\n        if (bytes.length === 1 && bytes[0] < 0x80)\n            return 1;\n        if (bytes.length <= 55)\n            return 1 + bytes.length;\n        return 1 + sizeOfBytesLength + bytes.length;\n    })();\n    return {\n        length,\n        encode(cursor) {\n            if (bytes.length === 1 && bytes[0] < 0x80) {\n                cursor.pushBytes(bytes);\n            }\n            else if (bytes.length <= 55) {\n                cursor.pushByte(0x80 + bytes.length);\n                cursor.pushBytes(bytes);\n            }\n            else {\n                cursor.pushByte(0x80 + 55 + sizeOfBytesLength);\n                if (sizeOfBytesLength === 1)\n                    cursor.pushUint8(bytes.length);\n                else if (sizeOfBytesLength === 2)\n                    cursor.pushUint16(bytes.length);\n                else if (sizeOfBytesLength === 3)\n                    cursor.pushUint24(bytes.length);\n                else\n                    cursor.pushUint32(bytes.length);\n                cursor.pushBytes(bytes);\n            }\n        },\n    };\n}\nfunction getSizeOfLength(length) {\n    if (length < 2 ** 8)\n        return 1;\n    if (length < 2 ** 16)\n        return 2;\n    if (length < 2 ** 24)\n        return 3;\n    if (length < 2 ** 32)\n        return 4;\n    throw new BaseError('Length is too large.');\n}\n//# sourceMappingURL=toRlp.js.map","import { CallExecutionError, } from '../../errors/contract.js';\nimport { UnknownNodeError } from '../../errors/node.js';\nimport { getNodeError, } from './getNodeError.js';\nexport function getCallError(err, { docsPath, ...args }) {\n    const cause = (() => {\n        const cause = getNodeError(err, args);\n        if (cause instanceof UnknownNodeError)\n            return err;\n        return cause;\n    })();\n    return new CallExecutionError(cause, {\n        docsPath,\n        ...args,\n    });\n}\n//# sourceMappingURL=getCallError.js.map","import { BaseError } from '../../errors/base.js';\nimport { ExecutionRevertedError, FeeCapTooHighError, FeeCapTooLowError, InsufficientFundsError, IntrinsicGasTooHighError, IntrinsicGasTooLowError, NonceMaxValueError, NonceTooHighError, NonceTooLowError, TipAboveFeeCapError, TransactionTypeNotSupportedError, UnknownNodeError, } from '../../errors/node.js';\nimport { RpcRequestError } from '../../errors/request.js';\nimport { InvalidInputRpcError, TransactionRejectedRpcError, } from '../../errors/rpc.js';\nexport function containsNodeError(err) {\n    return (err instanceof TransactionRejectedRpcError ||\n        err instanceof InvalidInputRpcError ||\n        (err instanceof RpcRequestError && err.code === ExecutionRevertedError.code));\n}\nexport function getNodeError(err, args) {\n    const message = (err.details || '').toLowerCase();\n    const executionRevertedError = err instanceof BaseError\n        ? err.walk((e) => e?.code ===\n            ExecutionRevertedError.code)\n        : err;\n    if (executionRevertedError instanceof BaseError)\n        return new ExecutionRevertedError({\n            cause: err,\n            message: executionRevertedError.details,\n        });\n    if (ExecutionRevertedError.nodeMessage.test(message))\n        return new ExecutionRevertedError({\n            cause: err,\n            message: err.details,\n        });\n    if (FeeCapTooHighError.nodeMessage.test(message))\n        return new FeeCapTooHighError({\n            cause: err,\n            maxFeePerGas: args?.maxFeePerGas,\n        });\n    if (FeeCapTooLowError.nodeMessage.test(message))\n        return new FeeCapTooLowError({\n            cause: err,\n            maxFeePerGas: args?.maxFeePerGas,\n        });\n    if (NonceTooHighError.nodeMessage.test(message))\n        return new NonceTooHighError({ cause: err, nonce: args?.nonce });\n    if (NonceTooLowError.nodeMessage.test(message))\n        return new NonceTooLowError({ cause: err, nonce: args?.nonce });\n    if (NonceMaxValueError.nodeMessage.test(message))\n        return new NonceMaxValueError({ cause: err, nonce: args?.nonce });\n    if (InsufficientFundsError.nodeMessage.test(message))\n        return new InsufficientFundsError({ cause: err });\n    if (IntrinsicGasTooHighError.nodeMessage.test(message))\n        return new IntrinsicGasTooHighError({ cause: err, gas: args?.gas });\n    if (IntrinsicGasTooLowError.nodeMessage.test(message))\n        return new IntrinsicGasTooLowError({ cause: err, gas: args?.gas });\n    if (TransactionTypeNotSupportedError.nodeMessage.test(message))\n        return new TransactionTypeNotSupportedError({ cause: err });\n    if (TipAboveFeeCapError.nodeMessage.test(message))\n        return new TipAboveFeeCapError({\n            cause: err,\n            maxFeePerGas: args?.maxFeePerGas,\n            maxPriorityFeePerGas: args?.maxPriorityFeePerGas,\n        });\n    return new UnknownNodeError({\n        cause: err,\n    });\n}\n//# sourceMappingURL=getNodeError.js.map","import { defineFormatter } from './formatter.js';\nimport { formatTransaction } from './transaction.js';\nexport function formatBlock(block) {\n    const transactions = (block.transactions ?? []).map((transaction) => {\n        if (typeof transaction === 'string')\n            return transaction;\n        return formatTransaction(transaction);\n    });\n    return {\n        ...block,\n        baseFeePerGas: block.baseFeePerGas ? BigInt(block.baseFeePerGas) : null,\n        blobGasUsed: block.blobGasUsed ? BigInt(block.blobGasUsed) : undefined,\n        difficulty: block.difficulty ? BigInt(block.difficulty) : undefined,\n        excessBlobGas: block.excessBlobGas\n            ? BigInt(block.excessBlobGas)\n            : undefined,\n        gasLimit: block.gasLimit ? BigInt(block.gasLimit) : undefined,\n        gasUsed: block.gasUsed ? BigInt(block.gasUsed) : undefined,\n        hash: block.hash ? block.hash : null,\n        logsBloom: block.logsBloom ? block.logsBloom : null,\n        nonce: block.nonce ? block.nonce : null,\n        number: block.number ? BigInt(block.number) : null,\n        size: block.size ? BigInt(block.size) : undefined,\n        timestamp: block.timestamp ? BigInt(block.timestamp) : undefined,\n        transactions,\n        totalDifficulty: block.totalDifficulty\n            ? BigInt(block.totalDifficulty)\n            : null,\n    };\n}\nexport const defineBlock = /*#__PURE__*/ defineFormatter('block', formatBlock);\n//# sourceMappingURL=block.js.map","/**\n * @description Picks out the keys from `value` that exist in the formatter..\n */\nexport function extract(value_, { format }) {\n    if (!format)\n        return {};\n    const value = {};\n    function extract_(formatted) {\n        const keys = Object.keys(formatted);\n        for (const key of keys) {\n            if (key in value_)\n                value[key] = value_[key];\n            if (formatted[key] &&\n                typeof formatted[key] === 'object' &&\n                !Array.isArray(formatted[key]))\n                extract_(formatted[key]);\n        }\n    }\n    const formatted = format(value_ || {});\n    extract_(formatted);\n    return value;\n}\n//# sourceMappingURL=extract.js.map","export function defineFormatter(type, format) {\n    return ({ exclude, format: overrides, }) => {\n        return {\n            exclude,\n            format: (args) => {\n                const formatted = format(args);\n                if (exclude) {\n                    for (const key of exclude) {\n                        delete formatted[key];\n                    }\n                }\n                return {\n                    ...formatted,\n                    ...overrides(args),\n                };\n            },\n            type,\n        };\n    };\n}\n//# sourceMappingURL=formatter.js.map","export function formatLog(log, { args, eventName, } = {}) {\n    return {\n        ...log,\n        blockHash: log.blockHash ? log.blockHash : null,\n        blockNumber: log.blockNumber ? BigInt(log.blockNumber) : null,\n        logIndex: log.logIndex ? Number(log.logIndex) : null,\n        transactionHash: log.transactionHash ? log.transactionHash : null,\n        transactionIndex: log.transactionIndex\n            ? Number(log.transactionIndex)\n            : null,\n        ...(eventName ? { args, eventName } : {}),\n    };\n}\n//# sourceMappingURL=log.js.map","import { hexToNumber } from '../encoding/fromHex.js';\nimport { defineFormatter } from './formatter.js';\nexport const transactionType = {\n    '0x0': 'legacy',\n    '0x1': 'eip2930',\n    '0x2': 'eip1559',\n    '0x3': 'eip4844',\n    '0x4': 'eip7702',\n};\nexport function formatTransaction(transaction) {\n    const transaction_ = {\n        ...transaction,\n        blockHash: transaction.blockHash ? transaction.blockHash : null,\n        blockNumber: transaction.blockNumber\n            ? BigInt(transaction.blockNumber)\n            : null,\n        chainId: transaction.chainId ? hexToNumber(transaction.chainId) : undefined,\n        gas: transaction.gas ? BigInt(transaction.gas) : undefined,\n        gasPrice: transaction.gasPrice ? BigInt(transaction.gasPrice) : undefined,\n        maxFeePerBlobGas: transaction.maxFeePerBlobGas\n            ? BigInt(transaction.maxFeePerBlobGas)\n            : undefined,\n        maxFeePerGas: transaction.maxFeePerGas\n            ? BigInt(transaction.maxFeePerGas)\n            : undefined,\n        maxPriorityFeePerGas: transaction.maxPriorityFeePerGas\n            ? BigInt(transaction.maxPriorityFeePerGas)\n            : undefined,\n        nonce: transaction.nonce ? hexToNumber(transaction.nonce) : undefined,\n        to: transaction.to ? transaction.to : null,\n        transactionIndex: transaction.transactionIndex\n            ? Number(transaction.transactionIndex)\n            : null,\n        type: transaction.type\n            ? transactionType[transaction.type]\n            : undefined,\n        typeHex: transaction.type ? transaction.type : undefined,\n        value: transaction.value ? BigInt(transaction.value) : undefined,\n        v: transaction.v ? BigInt(transaction.v) : undefined,\n    };\n    if (transaction.authorizationList)\n        transaction_.authorizationList = formatAuthorizationList(transaction.authorizationList);\n    transaction_.yParity = (() => {\n        // If `yParity` is provided, we will use it.\n        if (transaction.yParity)\n            return Number(transaction.yParity);\n        // If no `yParity` provided, try derive from `v`.\n        if (typeof transaction_.v === 'bigint') {\n            if (transaction_.v === 0n || transaction_.v === 27n)\n                return 0;\n            if (transaction_.v === 1n || transaction_.v === 28n)\n                return 1;\n            if (transaction_.v >= 35n)\n                return transaction_.v % 2n === 0n ? 1 : 0;\n        }\n        return undefined;\n    })();\n    if (transaction_.type === 'legacy') {\n        delete transaction_.accessList;\n        delete transaction_.maxFeePerBlobGas;\n        delete transaction_.maxFeePerGas;\n        delete transaction_.maxPriorityFeePerGas;\n        delete transaction_.yParity;\n    }\n    if (transaction_.type === 'eip2930') {\n        delete transaction_.maxFeePerBlobGas;\n        delete transaction_.maxFeePerGas;\n        delete transaction_.maxPriorityFeePerGas;\n    }\n    if (transaction_.type === 'eip1559') {\n        delete transaction_.maxFeePerBlobGas;\n    }\n    return transaction_;\n}\nexport const defineTransaction = /*#__PURE__*/ defineFormatter('transaction', formatTransaction);\n//////////////////////////////////////////////////////////////////////////////\nfunction formatAuthorizationList(authorizationList) {\n    return authorizationList.map((authorization) => ({\n        contractAddress: authorization.address,\n        chainId: Number(authorization.chainId),\n        nonce: Number(authorization.nonce),\n        r: authorization.r,\n        s: authorization.s,\n        yParity: Number(authorization.yParity),\n    }));\n}\n//# sourceMappingURL=transaction.js.map","import { hexToNumber } from '../encoding/fromHex.js';\nimport { defineFormatter } from './formatter.js';\nimport { formatLog } from './log.js';\nimport { transactionType } from './transaction.js';\nexport const receiptStatuses = {\n    '0x0': 'reverted',\n    '0x1': 'success',\n};\nexport function formatTransactionReceipt(transactionReceipt) {\n    const receipt = {\n        ...transactionReceipt,\n        blockNumber: transactionReceipt.blockNumber\n            ? BigInt(transactionReceipt.blockNumber)\n            : null,\n        contractAddress: transactionReceipt.contractAddress\n            ? transactionReceipt.contractAddress\n            : null,\n        cumulativeGasUsed: transactionReceipt.cumulativeGasUsed\n            ? BigInt(transactionReceipt.cumulativeGasUsed)\n            : null,\n        effectiveGasPrice: transactionReceipt.effectiveGasPrice\n            ? BigInt(transactionReceipt.effectiveGasPrice)\n            : null,\n        gasUsed: transactionReceipt.gasUsed\n            ? BigInt(transactionReceipt.gasUsed)\n            : null,\n        logs: transactionReceipt.logs\n            ? transactionReceipt.logs.map((log) => formatLog(log))\n            : null,\n        to: transactionReceipt.to ? transactionReceipt.to : null,\n        transactionIndex: transactionReceipt.transactionIndex\n            ? hexToNumber(transactionReceipt.transactionIndex)\n            : null,\n        status: transactionReceipt.status\n            ? receiptStatuses[transactionReceipt.status]\n            : null,\n        type: transactionReceipt.type\n            ? transactionType[transactionReceipt.type] || transactionReceipt.type\n            : null,\n    };\n    if (transactionReceipt.blobGasPrice)\n        receipt.blobGasPrice = BigInt(transactionReceipt.blobGasPrice);\n    if (transactionReceipt.blobGasUsed)\n        receipt.blobGasUsed = BigInt(transactionReceipt.blobGasUsed);\n    return receipt;\n}\nexport const defineTransactionReceipt = /*#__PURE__*/ defineFormatter('transactionReceipt', formatTransactionReceipt);\n//# sourceMappingURL=transactionReceipt.js.map","import { bytesToHex, numberToHex } from '../encoding/toHex.js';\nimport { defineFormatter } from './formatter.js';\nexport const rpcTransactionType = {\n    legacy: '0x0',\n    eip2930: '0x1',\n    eip1559: '0x2',\n    eip4844: '0x3',\n    eip7702: '0x4',\n};\nexport function formatTransactionRequest(request) {\n    const rpcRequest = {};\n    if (typeof request.authorizationList !== 'undefined')\n        rpcRequest.authorizationList = formatAuthorizationList(request.authorizationList);\n    if (typeof request.accessList !== 'undefined')\n        rpcRequest.accessList = request.accessList;\n    if (typeof request.blobVersionedHashes !== 'undefined')\n        rpcRequest.blobVersionedHashes = request.blobVersionedHashes;\n    if (typeof request.blobs !== 'undefined') {\n        if (typeof request.blobs[0] !== 'string')\n            rpcRequest.blobs = request.blobs.map((x) => bytesToHex(x));\n        else\n            rpcRequest.blobs = request.blobs;\n    }\n    if (typeof request.data !== 'undefined')\n        rpcRequest.data = request.data;\n    if (typeof request.from !== 'undefined')\n        rpcRequest.from = request.from;\n    if (typeof request.gas !== 'undefined')\n        rpcRequest.gas = numberToHex(request.gas);\n    if (typeof request.gasPrice !== 'undefined')\n        rpcRequest.gasPrice = numberToHex(request.gasPrice);\n    if (typeof request.maxFeePerBlobGas !== 'undefined')\n        rpcRequest.maxFeePerBlobGas = numberToHex(request.maxFeePerBlobGas);\n    if (typeof request.maxFeePerGas !== 'undefined')\n        rpcRequest.maxFeePerGas = numberToHex(request.maxFeePerGas);\n    if (typeof request.maxPriorityFeePerGas !== 'undefined')\n        rpcRequest.maxPriorityFeePerGas = numberToHex(request.maxPriorityFeePerGas);\n    if (typeof request.nonce !== 'undefined')\n        rpcRequest.nonce = numberToHex(request.nonce);\n    if (typeof request.to !== 'undefined')\n        rpcRequest.to = request.to;\n    if (typeof request.type !== 'undefined')\n        rpcRequest.type = rpcTransactionType[request.type];\n    if (typeof request.value !== 'undefined')\n        rpcRequest.value = numberToHex(request.value);\n    return rpcRequest;\n}\nexport const defineTransactionRequest = /*#__PURE__*/ defineFormatter('transactionRequest', formatTransactionRequest);\n//////////////////////////////////////////////////////////////////////////////\nfunction formatAuthorizationList(authorizationList) {\n    return authorizationList.map((authorization) => ({\n        address: authorization.contractAddress,\n        r: authorization.r,\n        s: authorization.s,\n        chainId: numberToHex(authorization.chainId),\n        nonce: numberToHex(authorization.nonce),\n        ...(typeof authorization.yParity !== 'undefined'\n            ? { yParity: numberToHex(authorization.yParity) }\n            : {}),\n        ...(typeof authorization.v !== 'undefined' &&\n            typeof authorization.yParity === 'undefined'\n            ? { v: numberToHex(authorization.v) }\n            : {}),\n    }));\n}\n//# sourceMappingURL=transactionRequest.js.map","import { aexists, aoutput } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n/**\n * Polyfill for Safari 14\n */\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n/**\n * Choice: a ? b : c\n */\nexport const Chi = (a, b, c) => (a & b) ^ (~a & c);\n/**\n * Majority function, true if any two inputs is true\n */\nexport const Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        aexists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        aoutput(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_md.js.map","import { HashMD, Chi, Maj } from './_md.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per late 2024.\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state:\n// first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nexport class SHA256 extends HashMD {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\n/**\n * SHA2-224 hash function\n */\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","import { sha256 as noble_sha256 } from '@noble/hashes/sha256';\nimport { isHex } from '../data/isHex.js';\nimport { toBytes } from '../encoding/toBytes.js';\nimport { toHex } from '../encoding/toHex.js';\nexport function sha256(value, to_) {\n    const to = to_ || 'hex';\n    const bytes = noble_sha256(isHex(value, { strict: false }) ? toBytes(value) : value);\n    if (to === 'bytes')\n        return bytes;\n    return toHex(bytes);\n}\n//# sourceMappingURL=sha256.js.map","import { parseAccount, } from '../../accounts/utils/parseAccount.js';\nimport { maxUint256 } from '../../constants/number.js';\nimport { InvalidAddressError, } from '../../errors/address.js';\nimport { FeeCapTooHighError, TipAboveFeeCapError, } from '../../errors/node.js';\nimport { FeeConflictError, } from '../../errors/transaction.js';\nimport { isAddress } from '../address/isAddress.js';\nexport function assertRequest(args) {\n    const { account: account_, gasPrice, maxFeePerGas, maxPriorityFeePerGas, to, } = args;\n    const account = account_ ? parseAccount(account_) : undefined;\n    if (account && !isAddress(account.address))\n        throw new InvalidAddressError({ address: account.address });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (typeof gasPrice !== 'undefined' &&\n        (typeof maxFeePerGas !== 'undefined' ||\n            typeof maxPriorityFeePerGas !== 'undefined'))\n        throw new FeeConflictError();\n    if (maxFeePerGas && maxFeePerGas > maxUint256)\n        throw new FeeCapTooHighError({ maxFeePerGas });\n    if (maxPriorityFeePerGas &&\n        maxFeePerGas &&\n        maxPriorityFeePerGas > maxFeePerGas)\n        throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas });\n}\n//# sourceMappingURL=assertRequest.js.map","import { InvalidSerializableTransactionError, } from '../../errors/transaction.js';\nexport function getTransactionType(transaction) {\n    if (transaction.type)\n        return transaction.type;\n    if (typeof transaction.authorizationList !== 'undefined')\n        return 'eip7702';\n    if (typeof transaction.blobs !== 'undefined' ||\n        typeof transaction.blobVersionedHashes !== 'undefined' ||\n        typeof transaction.maxFeePerBlobGas !== 'undefined' ||\n        typeof transaction.sidecars !== 'undefined')\n        return 'eip4844';\n    if (typeof transaction.maxFeePerGas !== 'undefined' ||\n        typeof transaction.maxPriorityFeePerGas !== 'undefined') {\n        return 'eip1559';\n    }\n    if (typeof transaction.gasPrice !== 'undefined') {\n        if (typeof transaction.accessList !== 'undefined')\n            return 'eip2930';\n        return 'legacy';\n    }\n    throw new InvalidSerializableTransactionError({ transaction });\n}\n//# sourceMappingURL=getTransactionType.js.map","import { gweiUnits } from '../../constants/unit.js';\nimport { formatUnits } from './formatUnits.js';\n/**\n * Converts numerical wei to a string representation of gwei.\n *\n * - Docs: https://viem.sh/docs/utilities/formatGwei\n *\n * @example\n * import { formatGwei } from 'viem'\n *\n * formatGwei(1000000000n)\n * // '1'\n */\nexport function formatGwei(wei, unit = 'wei') {\n    return formatUnits(wei, gweiUnits[unit]);\n}\n//# sourceMappingURL=formatGwei.js.map"],"names":["parseAccount","account","address","type","versionedHashVersionKzg","maxUint16","maxUint256","panicReasons","solidityError","inputs","name","solidityPanic","BlobSizeTooLargeError","constructor","maxSize","size","super","metaMessages","EmptyBlobError","InvalidVersionedHashSizeError","hash","InvalidVersionedHashVersionError","version","ChainDoesNotSupportContract","blockNumber","chain","contract","blockCreated","ClientChainNotConfiguredError","InvalidChainIdError","chainId","formatAbiItemWithArgs","abiItem","args","includeFunctionName","includeName","map","input","i","stringify","join","CallExecutionError","cause","account_","docsPath","data","gas","gasPrice","maxFeePerGas","maxPriorityFeePerGas","nonce","to","value","stateOverride","undefined","prettyArgs","from","formatEther","nativeCurrency","symbol","formatGwei","shortMessage","filter","Boolean","Object","defineProperty","this","enumerable","configurable","writable","ContractFunctionExecutionError","abi","contractAddress","functionName","sender","getAbiItem","formattedArgs","functionWithParams","formatAbiItem","function","Array","length","keys","ContractFunctionRevertedError","message","decodedData","reason","signature","decodeErrorResult","errorName","errorArgs","firstArg","errorWithParams","err","ContractFunctionZeroDataError","CounterfactualDeploymentFailedError","factory","RawContractError","NegativeOffsetError","offset","PositionOutOfBoundsError","position","RecursiveReadLimitExceededError","count","limit","ExecutionRevertedError","replace","FeeCapTooHighError","FeeCapTooLowError","NonceTooHighError","NonceTooLowError","NonceMaxValueError","InsufficientFundsError","IntrinsicGasTooHighError","IntrinsicGasTooLowError","TransactionTypeNotSupportedError","TipAboveFeeCapError","UnknownNodeError","AccountStateConflictError","StateAssignmentConflictError","prettyStateMapping","stateMapping","reduce","pretty","slot","prettyStateOverride","state","val","balance","code","stateDiff","slice","prettyPrint","entries","key","maxLength","acc","Math","max","padEnd","FeeConflictError","InvalidLegacyVError","v","InvalidSerializableTransactionError","transaction","InvalidStorageKeySizeError","storageKey","floor","TransactionNotFoundError","blockHash","blockTag","index","identifier","TransactionReceiptNotFoundError","WaitForTransactionReceiptTimeoutError","getContractAddress","getUrl","url","bytesToBigInt","bytes","opts","hex","bytesToBool","bytes_","trim","bytesToNumber","bytesToString","dir","TextDecoder","decode","decodeAbiParameters","params","cursor","consumed","values","param","setPosition","consumed_","decodeParameter","staticPosition","push","arrayComponents","start","readBytes","sizeOfOffset","startOfData","sizeOfLength","dynamicChild","hasDynamicChild","decodeArray","hasUnnamedChild","components","some","component","decodeTuple","decodeAddress","decodeBool","startsWith","_","split","Number","parseInt","decodeBytes","signed","decodeNumber","decodeString","endsWith","parameters","find","x","blobsToCommitments","kzg","blobs","commitments","blob","Uint8Array","blobToKzgCommitment","blobsToProofs","proofs","commitment","computeBlobKzgProof","commitmentToVersionedHash","versionedHash","sha256","set","commitmentsToVersionedHashes","hashes","bytesPerFieldElement","fieldElementsPerBlob","bytesPerBlob","maxBytesPerTransaction","toBlobSidecars","size_","active","pushByte","pushBytes","toBlobs","sidecars","proof","defineChain","formatters","fees","serializers","staticCursor","dataView","DataView","ArrayBuffer","positionReadCount","Map","recursiveReadCount","recursiveReadLimit","POSITIVE_INFINITY","assertReadLimit","assertPosition","decrementPosition","getReadCount","get","incrementPosition","inspectByte","position_","inspectBytes","subarray","inspectUint8","inspectUint16","getUint16","inspectUint24","getUint8","inspectUint32","getUint32","byte","pushUint8","pushUint16","setUint16","pushUint24","setUint8","pushUint32","setUint32","readByte","_touch","readUint8","readUint16","readUint24","readUint32","remaining","oldPosition","createCursor","create","buffer","byteOffset","byteLength","toRlp","encodable","getEncodable","encode","isArray","list","bodyLength","sizeOfBodyLength","getSizeOfLength","getEncodableList","bytesOrHex","sizeOfBytesLength","getEncodableBytes","getCallError","getNodeError","details","toLowerCase","executionRevertedError","walk","e","nodeMessage","test","formatBlock","block","transactions","baseFeePerGas","BigInt","blobGasUsed","difficulty","excessBlobGas","gasLimit","gasUsed","logsBloom","number","timestamp","totalDifficulty","defineBlock","extract","value_","format","extract_","formatted","defineFormatter","exclude","overrides","formatLog","log","eventName","logIndex","transactionHash","transactionIndex","transactionType","formatTransaction","transaction_","maxFeePerBlobGas","typeHex","authorizationList","authorization","r","s","yParity","accessList","defineTransaction","receiptStatuses","formatTransactionReceipt","transactionReceipt","receipt","cumulativeGasUsed","effectiveGasPrice","logs","status","blobGasPrice","defineTransactionReceipt","rpcTransactionType","legacy","eip2930","eip1559","eip4844","eip7702","formatTransactionRequest","request","rpcRequest","blobVersionedHashes","defineTransactionRequest","Maj","a","b","c","HashMD","blockLen","outputLen","padOffset","isLE","finished","pos","destroyed","view","update","len","take","min","process","roundClean","digestInto","out","fill","setBigUint64","_32n","_u32_max","wh","wl","h","l","oview","Error","outLen","digest","res","destroy","_cloneInto","SHA256_K","Uint32Array","SHA256_IV","SHA256_W","SHA256","A","B","C","D","E","F","G","H","W15","W2","s0","s1","T1","T2","to_","isHex","strict","toBytes","toHex","assertRequest","getTransactionType","wei","unit"],"sourceRoot":""}