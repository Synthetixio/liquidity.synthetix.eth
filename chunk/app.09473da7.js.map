{"version":3,"file":"chunk/app.09473da7.js","mappings":"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","sources":["webpack://@snx-v3/liquidity/../../contracts/importers/importCoreProxy.js","webpack://@snx-v3/liquidity/../../contracts/importers/importMulticall3.js","webpack://@snx-v3/liquidity/../../contracts/importers/importOracleManagerProxy.js","webpack://@snx-v3/liquidity/../components/Amount/Amount.tsx","webpack://@snx-v3/liquidity/../components/BorderBox/BorderBox.tsx","webpack://@snx-v3/liquidity/../components/ContractError/ContractError.tsx","webpack://@snx-v3/liquidity/../lib/useWrapEth/useWrapEth.ts","webpack://@snx-v3/liquidity/../components/DepositModal/DepositMachine.ts","webpack://@snx-v3/liquidity/../components/DepositModal/DepositModal.tsx","webpack://@snx-v3/liquidity/../lib/useDeposit/useDeposit.tsx","webpack://@snx-v3/liquidity/../lib/useDepositBaseAndromeda/useDepositBaseAndromeda.tsx","webpack://@snx-v3/liquidity/../components/DepositModal/index.ts","webpack://@snx-v3/liquidity/../components/Multistep/StepIcon.tsx","webpack://@snx-v3/liquidity/../components/Multistep/statusColor.ts","webpack://@snx-v3/liquidity/../components/Multistep/Step.tsx","webpack://@snx-v3/liquidity/../components/Multistep/Multistep.tsx","webpack://@snx-v3/liquidity/../components/NumberInput/NumberInput.tsx","webpack://@snx-v3/liquidity/../components/Tooltip/Tooltip.tsx","webpack://@snx-v3/liquidity/../components/icons/SUSDCIcon/SUSDCIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/Logo/Logo.tsx","webpack://@snx-v3/liquidity/../components/icons/EthereumIcon/EthereumIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/OptimismIcon/OptimismIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/DollarCircle/DollarCircle.tsx","webpack://@snx-v3/liquidity/../components/icons/ArbitrumIcon/ArbitrumIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/FailedIcon/FailedIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/WalletIcon/WalletIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/LogoIcon/LogoIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/BaseIcon/BaseIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/DiscordIcon/DiscordIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/XIcon/XIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/GithubIcon/GithubIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/WarpcastIcon/WarpcastIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/YoutubeIcon/YoutubeIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/Sparkles/Sparkles.tsx","webpack://@snx-v3/liquidity/../components/icons/SNXChainIcon/SNXChainIcon.tsx","webpack://@snx-v3/liquidity/../lib/ManagePositionContext/ManagePositionContext.tsx","webpack://@snx-v3/liquidity/../lib/calculations/calculations.ts","webpack://@snx-v3/liquidity/../lib/constants/constants.ts","webpack://@snx-v3/liquidity/../lib/etherscanLink/etherscanLink.ts","webpack://@snx-v3/liquidity/../lib/fetchPythPrices/fetchPythPrices.ts","webpack://@snx-v3/liquidity/../lib/format/format.ts","webpack://@snx-v3/liquidity/../lib/format/currency.ts","webpack://@snx-v3/liquidity/../lib/formatters/number.ts","webpack://@snx-v3/liquidity/../lib/isBaseAndromeda/isBaseAndromeda.ts","webpack://@snx-v3/liquidity/../lib/parser/parseTxError.ts","webpack://@snx-v3/liquidity/../lib/tsHelpers/notNill.ts","webpack://@snx-v3/liquidity/../lib/tsHelpers/stringToHash.ts","webpack://@snx-v3/liquidity/../lib/txnReducer/txnReducer.ts","webpack://@snx-v3/liquidity/../lib/useAccountCollateral/useAccountCollateral.ts","webpack://@snx-v3/liquidity/../lib/useAccountProxy/useAccountProxy.ts","webpack://@snx-v3/liquidity/../../contracts/importers/importAccountProxy.js","webpack://@snx-v3/liquidity/../lib/useAccounts/useAccounts.ts","webpack://@snx-v3/liquidity/../lib/useAllCollateralPriceIds/useAllCollateralPriceIds.ts","webpack://@snx-v3/liquidity/../lib/useOracleManagerProxy/useOracleManagerProxy.ts","webpack://@snx-v3/liquidity/../lib/useAllowance/useAllowance.ts","webpack://@snx-v3/liquidity/../lib/useApprove/useApprove.ts","webpack://@snx-v3/liquidity/../lib/useApr/useApr.ts","webpack://@snx-v3/liquidity/../lib/useBlockchain/useBlockchain.tsx","webpack://@snx-v3/liquidity/../lib/useBorrow/useBorrow.tsx","webpack://@snx-v3/liquidity/../lib/useClearDebt/useClearDebt.tsx","webpack://@snx-v3/liquidity/../../contracts/importers/importExtras.js","webpack://@snx-v3/liquidity/../../contracts/importers/importPythERC7412Wrapper.js","webpack://@snx-v3/liquidity/../lib/useCollateralPriceUpdates/useCollateralPriceUpdates.ts","webpack://@snx-v3/liquidity/../lib/useCollateralPrices/useCollateralPrices.ts","webpack://@snx-v3/liquidity/../lib/useCollateralTypes/useCollateralTypes.ts","webpack://@snx-v3/liquidity/../../contracts/importers/importCollateralTokens.js","webpack://@snx-v3/liquidity/../lib/useContractErrorParser/useContractErrorParser.ts","webpack://@snx-v3/liquidity/../lib/useCoreProxy/useCoreProxy.ts","webpack://@snx-v3/liquidity/../lib/useEthBalance/useEthBalance.ts","webpack://@snx-v3/liquidity/../lib/useGasOptions/useGasOptions.ts","webpack://@snx-v3/liquidity/../lib/feeSuggestion/math.ts","webpack://@snx-v3/liquidity/../lib/feeSuggestion/utils.ts","webpack://@snx-v3/liquidity/../lib/feeSuggestion/feeSuggestion.ts","webpack://@snx-v3/liquidity/../lib/useGasPrice/useGasPrice.ts","webpack://@snx-v3/liquidity/../lib/useGasSpeed/GasSpeedContext.tsx","webpack://@snx-v3/liquidity/../lib/useGetUSDTokens/useGetUSDTokens.ts","webpack://@snx-v3/liquidity/../../contracts/importers/importLegacyMarket.js","webpack://@snx-v3/liquidity/../lib/useLegacyMarket/useLegacyMarket.ts","webpack://@snx-v3/liquidity/../lib/useLiquidityPosition/useLiquidityPosition.ts","webpack://@snx-v3/liquidity/../lib/useMulticall3/useMulticall3.ts","webpack://@snx-v3/liquidity/../lib/useOraclePrice/useOraclePrice.ts","webpack://@snx-v3/liquidity/../lib/useParams/useParams.ts","webpack://@snx-v3/liquidity/../lib/usePools/usePools.ts","webpack://@snx-v3/liquidity/../lib/usePoolsList/usePoolsList.ts","webpack://@snx-v3/liquidity/../lib/useRepay/useRepay.tsx","webpack://@snx-v3/liquidity/../lib/useRewardsDistributors/useRewardsDistributors.ts","webpack://@snx-v3/liquidity/../../contracts/importers/importRewardsDistributors.js","webpack://@snx-v3/liquidity/../../contracts/importers/importSpotMarketProxy.js","webpack://@snx-v3/liquidity/../lib/useSpotMarketProxy/useSpotMarketProxy.ts","webpack://@snx-v3/liquidity/../lib/useSystemToken/useSystemToken.ts","webpack://@snx-v3/liquidity/../../contracts/importers/importSystemToken.js","webpack://@snx-v3/liquidity/../lib/assertAddressType/assertAddressType.ts","webpack://@snx-v3/liquidity/../lib/useTokenBalance/useTokenBalance.ts","webpack://@snx-v3/liquidity/../lib/useTokenBalance/useTokenBalanceForChain.ts","webpack://@snx-v3/liquidity/../lib/useTokenPrice/useTokenPrice.ts","webpack://@snx-v3/liquidity/../../contracts/importers/importUSDProxy.js","webpack://@snx-v3/liquidity/../lib/useUSDProxy/useUSDProxy.ts","webpack://@snx-v3/liquidity/../lib/useUSDProxy/useUSDProxyForChain.ts","webpack://@snx-v3/liquidity/../lib/useUndelegate/useUndelegate.tsx","webpack://@snx-v3/liquidity/../lib/useUndelegateBaseAndromeda/useUndelegateBaseAndromeda.tsx","webpack://@snx-v3/liquidity/../../contracts/importers/importV2x.js","webpack://@snx-v3/liquidity/../lib/useV2xSynthetix/useV2xSynthetix.ts","webpack://@snx-v3/liquidity/../../contracts/importers/importAllErrors.js","webpack://@snx-v3/liquidity/../lib/withERC7412/withMemoryCache.ts","webpack://@snx-v3/liquidity/../lib/withERC7412/withERC7412.ts","webpack://@snx-v3/liquidity/../lib/zod/zod.ts","webpack://@snx-v3/liquidity/./src/components/CRatioBar/CRatioBadge.tsx","webpack://@snx-v3/liquidity/./src/components/CRatioBar/CRatioBar.utils.ts","webpack://@snx-v3/liquidity/./src/components/CRatioBar/CRatioChangeStat.tsx","webpack://@snx-v3/liquidity/./src/components/Manage/LiquidityPositionUpdated.tsx","webpack://@snx-v3/liquidity/./src/components/Manage/PositionTitle.tsx","webpack://@snx-v3/liquidity/../lib/useV2sUSD/useV2sUSD.ts","webpack://@snx-v3/liquidity/./src/components/MigrateUSD/StepIntro.tsx","webpack://@snx-v3/liquidity/./src/components/ChangeStat/ChangeStat.tsx","webpack://@snx-v3/liquidity/./src/components/MigrateUSD/StepSuccess.tsx","webpack://@snx-v3/liquidity/./src/components/MigrateUSD/MigrateUSDTransaction.tsx","webpack://@snx-v3/liquidity/../lib/useMigrateUSD/useMigrateUSD.ts","webpack://@snx-v3/liquidity/./src/components/Migration/StepSuccessFinal.tsx","webpack://@snx-v3/liquidity/./src/components/MigrateUSD/MigrateUSDModal.tsx","webpack://@snx-v3/liquidity/./src/components/Migration/StepIntro.tsx","webpack://@snx-v3/liquidity/./src/components/Migration/StepExplain.tsx","webpack://@snx-v3/liquidity/../lib/useV2Position/useV2Position.ts","webpack://@snx-v3/liquidity/./src/components/Migration/StepSuccess.tsx","webpack://@snx-v3/liquidity/./src/components/Migration/StepSummary.tsx","webpack://@snx-v3/liquidity/../lib/useMigrate/useMigrate.ts","webpack://@snx-v3/liquidity/../lib/useRates/useRates.ts","webpack://@snx-v3/liquidity/./src/components/Migration/MigrationDialog.tsx","webpack://@snx-v3/liquidity/./src/components/Migration/MigrationBanner.tsx","webpack://@snx-v3/liquidity/../lib/useVaultsData/useVaultsData.ts","webpack://@snx-v3/liquidity/./src/components/Pools/CollateralSection.tsx","webpack://@snx-v3/liquidity/./src/components/Pools/PoolCards/Specifics.tsx","webpack://@snx-v3/liquidity/./src/components/Pools/PoolCards/PoolRow.tsx","webpack://@snx-v3/liquidity/./src/components/Pools/PoolCards/PoolCard.tsx","webpack://@snx-v3/liquidity/./src/components/Pools/ChainFilter.tsx","webpack://@snx-v3/liquidity/./src/components/Pools/CollateralFilter.tsx","webpack://@snx-v3/liquidity/./src/components/Pools/PoolCards/TorosPoolCard.tsx","webpack://@snx-v3/liquidity/./src/components/Pools/PoolCards/PoolCardsLoading.tsx","webpack://@snx-v3/liquidity/./src/components/Pools/Balloon.tsx","webpack://@snx-v3/liquidity/./src/components/Pools/PoolsList.tsx","webpack://@snx-v3/liquidity/./src/components/Pools/PoolHeader.tsx","webpack://@snx-v3/liquidity/./src/components/TokenIcon/TokenIcon.tsx","webpack://@snx-v3/liquidity/./src/components/TransactionSummary/TransactionSummary.tsx","webpack://@snx-v3/liquidity/./src/components/SynthSkeleton/SynthSkeleton.tsx","webpack://@snx-v3/liquidity/../lib/useAccountCollateralUnlockDate/useAccountCollateralUnlockDate.ts","webpack://@snx-v3/liquidity/./src/components/CollateralAlert/CollateralAlert.tsx","webpack://@snx-v3/liquidity/./src/components/CollateralAlert/UnsupportedCollateralAlert.tsx","webpack://@snx-v3/liquidity/../lib/useRewards/useRewards.ts","webpack://@snx-v3/liquidity/./src/components/Rewards/RewardsLoading.tsx","webpack://@snx-v3/liquidity/../lib/formatters/string.ts","webpack://@snx-v3/liquidity/../components/WithdrawIncrease/WithdrawIncrease.tsx","webpack://@snx-v3/liquidity/./src/components/Rewards/RewardsModal.tsx","webpack://@snx-v3/liquidity/./src/components/Rewards/RewardsRow.tsx","webpack://@snx-v3/liquidity/../lib/useClaimRewards/useClaimRewards.ts","webpack://@snx-v3/liquidity/./src/components/Rewards/Rewards.tsx","webpack://@snx-v3/liquidity/./src/components/Stats/StatBox.tsx","webpack://@snx-v3/liquidity/../lib/tsHelpers/keyBy.ts","webpack://@snx-v3/liquidity/../lib/useLiquidityPositions/useLiquidityPositions.ts","webpack://@snx-v3/liquidity/./src/components/Stats/StatsList.tsx","webpack://@snx-v3/liquidity/./src/utils/assets.ts","webpack://@snx-v3/liquidity/./src/utils/positions.ts","webpack://@snx-v3/liquidity/../lib/useWithdrawTimer/useWithdrawTimer.ts","webpack://@snx-v3/liquidity/./src/components/CRatioBar/CRatioAmount.tsx","webpack://@snx-v3/liquidity/./src/components/Positions/PositionsTable/DebtAmount.tsx","webpack://@snx-v3/liquidity/./src/components/Positions/PositionsTable/PositionsRow.tsx","webpack://@snx-v3/liquidity/./src/components/Positions/PositionsTable/PositionsRowLoading.tsx","webpack://@snx-v3/liquidity/./src/components/Positions/PositionsTable/PositionsTable.tsx","webpack://@snx-v3/liquidity/./src/components/Positions/PositionsTable/PositionTableHeader.tsx","webpack://@snx-v3/liquidity/./src/components/Positions/PositionsTable/PositionNotConnected.tsx","webpack://@snx-v3/liquidity/./src/components/Positions/PositionsTable/PositionEmpty.tsx","webpack://@snx-v3/liquidity/./src/components/Positions/PositionsTable/TableDivider.tsx","webpack://@snx-v3/liquidity/./src/components/Positions/PositionsList.tsx","webpack://@snx-v3/liquidity/../lib/validatePosition/validatePosition.ts","webpack://@snx-v3/liquidity/./src/components/Borrow/Borrow.tsx","webpack://@snx-v3/liquidity/../lib/useTransferableSynthetix/useTransferableSynthetix.ts","webpack://@snx-v3/liquidity/./src/components/Deposit/Deposit.tsx","webpack://@snx-v3/liquidity/./src/components/Withdraw/Withdraw.tsx","webpack://@snx-v3/liquidity/./src/components/Manage/actions.tsx","webpack://@snx-v3/liquidity/./src/components/Manage/ManageActions.tsx","webpack://@snx-v3/liquidity/./src/components/CRatioBar/LineWithText.tsx","webpack://@snx-v3/liquidity/./src/components/CRatioBar/CRatioBar.tsx","webpack://@snx-v3/liquidity/./src/components/Manage/ChangeStat.tsx","webpack://@snx-v3/liquidity/./src/components/Manage/PnlStats.tsx","webpack://@snx-v3/liquidity/./src/components/Manage/DebtStats.tsx","webpack://@snx-v3/liquidity/./src/components/Manage/CollateralStats.tsx","webpack://@snx-v3/liquidity/./src/components/Manage/ManageStats.tsx","webpack://@snx-v3/liquidity/./src/components/InitialDeposit/InitialDeposit.tsx","webpack://@snx-v3/liquidity/./src/components/Manage/NoPosition.tsx","webpack://@snx-v3/liquidity/./src/components/Repay/Repay.tsx","webpack://@snx-v3/liquidity/./src/components/Repay/RepayAllDebt.tsx","webpack://@snx-v3/liquidity/../lib/usePoolConfiguration/usePoolConfiguration.ts","webpack://@snx-v3/liquidity/./src/components/Undelegate/Undelegate.tsx","webpack://@snx-v3/liquidity/./src/components/Claim/Claim.tsx","webpack://@snx-v3/liquidity/../../theme/src/theme.ts","webpack://@snx-v3/liquidity/../../theme/src/fonts.tsx","webpack://@snx-v3/liquidity/../components/TermsModal/TermsModal.tsx","webpack://@snx-v3/liquidity/../lib/useLocalStorage/useLocalStorage.ts","webpack://@snx-v3/liquidity/./src/layouts/Default/NetworkController.tsx","webpack://@snx-v3/liquidity/./src/components/MigrateUSD/MigrateUSDButton.tsx","webpack://@snx-v3/liquidity/./src/layouts/Default/Header.tsx","webpack://@snx-v3/liquidity/./src/layouts/Default/Footer.tsx","webpack://@snx-v3/liquidity/./src/layouts/Default/DefaultLayout.tsx","webpack://@snx-v3/liquidity/../lib/useManagePermissions/useManagePermissions.ts","webpack://@snx-v3/liquidity/./src/components/Address/Address.tsx","webpack://@snx-v3/liquidity/./src/components/Permissions/AccountPermissions.ts","webpack://@snx-v3/liquidity/../lib/useAccountInfo/useAccountPermissions.ts","webpack://@snx-v3/liquidity/./src/components/Permissions/PermissionsInfo.tsx","webpack://@snx-v3/liquidity/./src/components/Permissions/PermissionModal.tsx","webpack://@snx-v3/liquidity/./src/components/Permissions/PermissionRow.tsx","webpack://@snx-v3/liquidity/./src/components/Permissions/TransferOwnershipModal.tsx","webpack://@snx-v3/liquidity/../lib/useTransferAccountId/useTransferAccountId.ts","webpack://@snx-v3/liquidity/./src/components/Permissions/PermissionTableLoading.tsx","webpack://@snx-v3/liquidity/./src/components/Permissions/PermissionTable.tsx","webpack://@snx-v3/liquidity/./src/components/Permissions/DelegationIcon.tsx","webpack://@snx-v3/liquidity/./src/components/Permissions/Permissions.tsx","webpack://@snx-v3/liquidity/./src/pages/Account/Settings.tsx","webpack://@snx-v3/liquidity/./src/Router.tsx","webpack://@snx-v3/liquidity/./src/utils/onboard.ts","webpack://@snx-v3/liquidity/./src/App.tsx","webpack://@snx-v3/liquidity/./src/utils/theme.ts","webpack://@snx-v3/liquidity/./src/index.tsx","webpack://@snx-v3/liquidity/./src/pages/404.tsx","webpack://@snx-v3/liquidity/./src/components/WatchAccountBanner/WatchAccountBanner.tsx","webpack://@snx-v3/liquidity/./src/pages/Dashboard.tsx","webpack://@snx-v3/liquidity/./src/pages/Home.tsx","webpack://@snx-v3/liquidity/../lib/usePoolData/usePoolData.tsx","webpack://@snx-v3/liquidity/./src/components/ClosePosition/ClosePositionTransactions.tsx","webpack://@snx-v3/liquidity/./src/components/ClosePosition/ClosePosition.tsx","webpack://@snx-v3/liquidity/./src/components/Manage/ManageLoading.tsx","webpack://@snx-v3/liquidity/./src/pages/Manage.tsx","webpack://@snx-v3/liquidity/../components/HomeLink/HomeLink.tsx","webpack://@snx-v3/liquidity/./src/pages/Pool.tsx","webpack://@snx-v3/liquidity/./src/pages/Pools.tsx","webpack://@snx-v3/liquidity/../../tools/safe-import/index.js","webpack://@snx-v3/liquidity/../../tools/safe-import/safeLazy.js"],"sourcesContent":["export async function importCoreProxy(chainId, preset) {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/meta.json'),\n        import('@synthetixio/v3-contracts/1-main/CoreProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.CoreProxy, abi };\n    }\n    case '11155111-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/meta.json'),\n        import('@synthetixio/v3-contracts/11155111-main/CoreProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.CoreProxy, abi };\n    }\n    case '10-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/meta.json'),\n        import('@synthetixio/v3-contracts/10-main/CoreProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.CoreProxy, abi };\n    }\n    case '8453-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/8453-andromeda/CoreProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.CoreProxy, abi };\n    }\n    case '84532-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/84532-andromeda/CoreProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.CoreProxy, abi };\n    }\n    case '42161-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/meta.json'),\n        import('@synthetixio/v3-contracts/42161-main/CoreProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.CoreProxy, abi };\n    }\n    case '421614-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/meta.json'),\n        import('@synthetixio/v3-contracts/421614-main/CoreProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.CoreProxy, abi };\n    }\n    case '42161-arbthetix': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-arbthetix/meta.json'),\n        import('@synthetixio/v3-contracts/42161-arbthetix/CoreProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.CoreProxy, abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for CoreProxy`);\n    }\n  }\n}\n","const abi = [\n  'function aggregate(tuple(address target, bytes callData)[] calls) payable returns (uint256 blockNumber, bytes[] returnData)',\n  'function blockAndAggregate(tuple(address target, bytes callData)[] calls) payable returns (uint256 blockNumber, bytes32 blockHash, tuple(bool success, bytes returnData)[] returnData)',\n  'function getBasefee() view returns (uint256 basefee)',\n  'function getBlockHash(uint256 blockNumber) view returns (bytes32 blockHash)',\n  'function getBlockNumber() view returns (uint256 blockNumber)',\n  'function getChainId() view returns (uint256 chainid)',\n  'function getCurrentBlockCoinbase() view returns (address coinbase)',\n  'function getCurrentBlockDifficulty() view returns (uint256 difficulty)',\n  'function getCurrentBlockGasLimit() view returns (uint256 gaslimit)',\n  'function getCurrentBlockTimestamp() view returns (uint256 timestamp)',\n  'function getEthBalance(address addr) view returns (uint256 balance)',\n  'function getLastBlockHash() view returns (bytes32 blockHash)',\n  'function tryAggregate(bool requireSuccess, tuple(address target, bytes callData)[] calls) payable returns (tuple(bool success, bytes returnData)[] returnData)',\n  'function tryBlockAndAggregate(bool requireSuccess, tuple(address target, bytes callData)[] calls) payable returns (uint256 blockNumber, bytes32 blockHash, tuple(bool success, bytes returnData)[] returnData)',\n  'function aggregate3(tuple(address target, bool allowFailure, bytes callData)[] calls) payable returns (tuple(bool success, bytes returnData)[] returnData)',\n  'function aggregate3Value(tuple(address target, bool allowFailure, uint256 value, bytes callData)[] calls) payable returns (tuple(bool success, bytes returnData)[] returnData)',\n];\n\nexport async function importMulticall3(chainId, preset) {\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/meta.json'),\n        import('@synthetixio/v3-contracts/1-main/TrustedMulticallForwarder.readable.json'),\n      ]);\n      return { address: meta.contracts.TrustedMulticallForwarder, abi };\n    }\n    case '11155111-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/meta.json'),\n        import('@synthetixio/v3-contracts/11155111-main/TrustedMulticallForwarder.readable.json'),\n      ]);\n      return { address: meta.contracts.TrustedMulticallForwarder, abi };\n    }\n    case '10-main': {\n      const { optimism } = await import('viem/chains');\n      return { address: optimism.contracts.multicall3.address, abi: abi };\n    }\n    case '8453-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/8453-andromeda/TrustedMulticallForwarder.readable.json'),\n      ]);\n      return { address: meta.contracts.TrustedMulticallForwarder, abi };\n    }\n    case '84532-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/84532-andromeda/TrustedMulticallForwarder.readable.json'),\n      ]);\n      return { address: meta.contracts.TrustedMulticallForwarder, abi };\n    }\n    case '42161-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/meta.json'),\n        import('@synthetixio/v3-contracts/42161-main/TrustedMulticallForwarder.readable.json'),\n      ]);\n      return { address: meta.contracts.TrustedMulticallForwarder, abi };\n    }\n    case '42161-arbthetix': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-arbthetix/meta.json'),\n        import('@synthetixio/v3-contracts/42161-arbthetix/TrustedMulticallForwarder.readable.json'),\n      ]);\n      return { address: meta.contracts.TrustedMulticallForwarder, abi };\n    }\n    case '421614-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/meta.json'),\n        import('@synthetixio/v3-contracts/421614-main/TrustedMulticallForwarder.readable.json'),\n      ]);\n      return { address: meta.contracts.TrustedMulticallForwarder, abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for Multicall3`);\n    }\n  }\n}\n","export async function importOracleManagerProxy(chainId, preset) {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/meta.json'),\n        import('@synthetixio/v3-contracts/1-main/OracleManagerProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.OracleManagerProxy, abi };\n    }\n    case '11155111-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/meta.json'),\n        import('@synthetixio/v3-contracts/11155111-main/OracleManagerProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.OracleManagerProxy, abi };\n    }\n    case '10-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/meta.json'),\n        import('@synthetixio/v3-contracts/10-main/OracleManagerProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.OracleManagerProxy, abi };\n    }\n    case '8453-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/8453-andromeda/OracleManagerProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.OracleManagerProxy, abi };\n    }\n    case '84532-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/84532-andromeda/OracleManagerProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.OracleManagerProxy, abi };\n    }\n    case '42161-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/meta.json'),\n        import('@synthetixio/v3-contracts/42161-main/OracleManagerProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.OracleManagerProxy, abi };\n    }\n    case '421614-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/meta.json'),\n        import('@synthetixio/v3-contracts/421614-main/OracleManagerProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.OracleManagerProxy, abi };\n    }\n    case '42161-arbthetix': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-arbthetix/meta.json'),\n        import('@synthetixio/v3-contracts/42161-arbthetix/OracleManagerProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.OracleManagerProxy, abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for OracleManagerProxy`);\n    }\n  }\n}\n","import { useMemo } from 'react';\nimport { currency } from '@snx-v3/format';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { constants } from 'ethers';\nimport { Tooltip } from '@snx-v3/Tooltip';\n\nexport function Amount({\n  value,\n  prefix = '',\n  suffix = '',\n  'data-testid': testid,\n  showTooltip,\n}: {\n  prefix?: string;\n  value?: Wei;\n  suffix?: string;\n  'data-testid'?: string;\n  showTooltip?: boolean;\n}) {\n  const { formattedValue, preciseValue, isMaxUint } = useMemo(() => {\n    if (!value) {\n      return { formattedValue: '-', preciseValue: '-' };\n    }\n\n    const formattedValue = value.eq(0) ? '0.00' : currency(value);\n    const cleanNumber = wei(formattedValue.replaceAll(',', ''));\n\n    return {\n      isMaxUint: wei(constants.MaxInt256).lte(value),\n      formattedValue,\n      preciseValue: value.eq(cleanNumber) ? formattedValue : value.toString(),\n    };\n  }, [value]);\n\n  return (\n    <Tooltip\n      label={\n        <>\n          {isMaxUint ? (\n            'You cannot borrow sUSD against this collateral'\n          ) : (\n            <>\n              {prefix}\n              {preciseValue}\n              {suffix}\n            </>\n          )}\n        </>\n      }\n      isDisabled={formattedValue === preciseValue || !showTooltip}\n    >\n      <span data-testid={testid}>\n        {prefix}\n        {isMaxUint ? 'Infinite' : formattedValue}\n        {!isMaxUint && suffix}\n      </span>\n    </Tooltip>\n  );\n}\n","import { Flex, FlexProps } from '@chakra-ui/react';\n\nexport const BorderBox = (props: FlexProps) => (\n  <Flex bg=\"navy.700\" borderWidth=\"1px\" borderColor=\"gray.900\" borderRadius=\"base\" {...props} />\n);\n","import React from 'react';\nimport { Button, Collapse, Text } from '@chakra-ui/react';\nimport format from 'date-fns/format';\nimport { ContractErrorType } from '@snx-v3/useContractErrorParser';\n\nconst defaultOpen = window?.localStorage?.CONTRACT_ERROR_OPEN === 'true';\n\nexport function ContractError({ contractError }: { contractError: ContractErrorType }) {\n  const [isOpen, setIsOpen] = React.useState(defaultOpen);\n\n  return (\n    <>\n      {!isOpen ? (\n        <Button\n          variant=\"link\"\n          onClick={() => setIsOpen(true)}\n          color=\"inherit\"\n          fontWeight=\"normal\"\n          fontStyle=\"italic\"\n        >\n          details...\n        </Button>\n      ) : null}\n      <Collapse in={isOpen} animateOpacity>\n        <Text fontStyle=\"italic\" fontSize=\"0.8em\">\n          {contractError.name}\n        </Text>\n        <Text whiteSpace=\"pre\" fontSize=\"0.8em\" fontStyle=\"italic\" pl=\"0.5em\">\n          {Object.entries(contractError.args)\n            .map(\n              ([key, val]) =>\n                `${key}: ${val instanceof Date ? format(val, 'yyyy-MM-dd HH:mm:ss') : val}`\n            )\n            .join('\\n')}\n        </Text>\n      </Collapse>\n    </>\n  );\n}\n","import { useSigner } from '@snx-v3/useBlockchain';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useEthBalance } from '@snx-v3/useEthBalance';\nimport { useTokenBalance } from '@snx-v3/useTokenBalance';\nimport { Contract } from 'ethers';\nimport { useMutation } from '@tanstack/react-query';\nimport Wei from '@synthetixio/wei';\nimport { useCallback } from 'react';\n\nconst minimalWETHABI = ['function deposit() payable', 'function withdraw(uint256 wad)'];\n\nexport const useWrapEth = () => {\n  const signer = useSigner();\n\n  const { data: ethCollateral } = useCollateralType('WETH');\n  const { data: ethBalance, refetch: refetchETHBalance } = useEthBalance();\n  const { data: wethBalance, refetch: refetchWETHBalance } = useTokenBalance(\n    ethCollateral?.tokenAddress\n  );\n\n  const { mutateAsync, isPending } = useMutation({\n    mutationFn: async (amount: Wei) => {\n      if (!ethCollateral || !signer) return;\n      const contract = new Contract(ethCollateral?.tokenAddress, minimalWETHABI, signer);\n      const txn = await contract.deposit({ value: amount.toBN() });\n      await txn.wait();\n    },\n  });\n\n  const exec = useCallback(\n    async (amount: Wei) => {\n      if (!ethBalance) return;\n      if (ethBalance.lt(amount)) {\n        throw new Error('Amount exceeds balance');\n      }\n      await mutateAsync(amount);\n      refetchETHBalance();\n      refetchWETHBalance();\n    },\n    [ethBalance, mutateAsync, refetchETHBalance, refetchWETHBalance]\n  );\n\n  return {\n    exec,\n    isLoading: isPending,\n    wethBalance,\n    ethBalance,\n  };\n};\n\nexport const useUnWrapEth = () => {\n  const signer = useSigner();\n\n  const { data: ethCollateral } = useCollateralType('WETH');\n  const { data: ethBalance, refetch: refetchETHBalance } = useEthBalance();\n  const { data: wethBalance, refetch: refetchWETHBalance } = useTokenBalance(\n    ethCollateral?.tokenAddress\n  );\n\n  const { mutateAsync, isPending } = useMutation({\n    mutationFn: async (amount: Wei) => {\n      if (!ethCollateral || !signer) return;\n      const contract = new Contract(ethCollateral?.tokenAddress, minimalWETHABI, signer);\n      const txn = await contract.withdraw(amount.toBN());\n      await txn.wait();\n    },\n  });\n\n  const exec = useCallback(\n    async (amount: Wei) => {\n      if (!wethBalance) return;\n      if (wethBalance.lt(amount)) return;\n      await mutateAsync(amount);\n      await Promise.all([refetchETHBalance(), refetchWETHBalance()]);\n    },\n    [mutateAsync, refetchETHBalance, refetchWETHBalance, wethBalance]\n  );\n\n  return {\n    exec,\n    isLoading: isPending,\n    wethBalance,\n    ethBalance,\n  };\n};\n","import { Wei, wei } from '@synthetixio/wei';\nimport { createMachine, assign } from 'xstate';\n\nexport const Events = {\n  SET_REQUIRE_APPROVAL: 'SET_REQUIRE_APPROVAL',\n  SET_WRAP_AMOUNT: 'SET_WRAP_AMOUNT',\n  SET_INFINITE_APPROVAL: 'SET_INFINITE_APPROVAL',\n  RETRY: 'RETRY',\n  RUN: 'RUN',\n  SUCCESS: 'SUCCESS',\n  FAILURE: 'FAILURE',\n  RESET: 'RESET',\n} as const;\n\nexport const State = {\n  idle: 'idle',\n  wrap: 'wrap',\n  approve: 'approve',\n  deposit: 'deposit',\n  failed: 'failed',\n  success: 'success',\n} as const;\n\nconst FailedSteps = {\n  [State.approve]: State.approve,\n  [State.wrap]: State.wrap,\n  [State.deposit]: State.deposit,\n} as const;\n\nexport const ServiceNames = {\n  wrapEth: 'wrapEth',\n  approveWETH: 'approveWETH',\n  executeDeposit: 'executeDeposit',\n} as const;\n\ntype Context = {\n  error: {\n    error: Error;\n    step: keyof typeof FailedSteps;\n  } | null;\n  requireApproval: boolean;\n  wrapAmount: Wei;\n  infiniteApproval: boolean;\n};\n\ntype EventNamesType = typeof Events;\n\ntype DepositEvents =\n  | { type: EventNamesType['SET_REQUIRE_APPROVAL']; requireApproval: boolean }\n  | { type: EventNamesType['SET_WRAP_AMOUNT']; wrapAmount: Wei }\n  | { type: EventNamesType['SET_INFINITE_APPROVAL']; infiniteApproval: boolean }\n  | { type: EventNamesType['RETRY'] }\n  | { type: EventNamesType['RUN'] }\n  | { type: EventNamesType['SUCCESS'] }\n  | { type: EventNamesType['FAILURE'] }\n  | { type: EventNamesType['RESET'] };\n\ntype StateType = typeof State;\ntype MachineState =\n  | {\n      value: StateType['idle'];\n      context: Context & { error: null };\n    }\n  | {\n      value: StateType['wrap'];\n      context: Context & { error: null };\n    }\n  | {\n      value: StateType['approve'];\n      context: Context & { error: null };\n    }\n  | {\n      value: StateType['deposit'];\n      context: Context & { error: null };\n    }\n  | {\n      value: StateType['failed'];\n      context: Context & { error: { error: Error; step: keyof typeof FailedSteps } };\n    }\n  | {\n      value: StateType['success'];\n      context: Context & {\n        error: null;\n      };\n    };\n\nconst initialContext = {\n  wrapAmount: wei(0),\n  error: null,\n  requireApproval: false,\n  infiniteApproval: false,\n};\n\nexport const DepositMachine = createMachine<Context, DepositEvents, MachineState>({\n  id: 'DepositMachine',\n  initial: State.idle,\n  predictableActionArguments: true,\n  context: initialContext,\n  on: {\n    [Events.RUN]: {\n      target: State.deposit,\n      actions: assign({\n        wrapAmount: (_) => initialContext.wrapAmount,\n        error: (_) => initialContext.error,\n        requireApproval: (_) => initialContext.requireApproval,\n        infiniteApproval: (_) => initialContext.infiniteApproval,\n      }),\n    },\n    [Events.SET_REQUIRE_APPROVAL]: {\n      actions: assign({ requireApproval: (_context, event) => event.requireApproval }),\n    },\n    [Events.SET_WRAP_AMOUNT]: {\n      actions: assign({ wrapAmount: (_context, event) => event.wrapAmount }),\n    },\n    [Events.SET_INFINITE_APPROVAL]: {\n      actions: assign({ infiniteApproval: (_context, event) => event.infiniteApproval }),\n    },\n  },\n  states: {\n    [State.idle]: {\n      on: {\n        [Events.RUN]: [\n          { target: State.wrap, cond: (context) => context.wrapAmount.gt(0) },\n          { target: State.approve, cond: (context) => context.requireApproval },\n          { target: State.deposit },\n        ],\n      },\n    },\n    [State.wrap]: {\n      invoke: {\n        src: ServiceNames.wrapEth,\n        onError: {\n          target: State.failed,\n          actions: assign({\n            error: (_context, event) => ({ error: event.data, step: FailedSteps.wrap }),\n          }),\n        },\n        onDone: [\n          { target: State.approve, cond: (context) => context.requireApproval },\n          { target: State.deposit },\n        ],\n      },\n    },\n    [State.approve]: {\n      invoke: {\n        src: ServiceNames.approveWETH,\n        onDone: {\n          target: State.deposit,\n        },\n        onError: {\n          target: State.failed,\n          actions: assign({\n            error: (_context, event) => ({ error: event.data, step: FailedSteps.approve }),\n          }),\n        },\n      },\n    },\n    [State.deposit]: {\n      invoke: {\n        src: ServiceNames.executeDeposit,\n        onDone: {\n          target: State.success,\n        },\n        onError: {\n          target: State.failed,\n          actions: assign({\n            error: (_context, event) => ({ error: event.data, step: FailedSteps.deposit }),\n          }),\n        },\n      },\n    },\n    [State.failed]: {\n      on: {\n        [Events.RETRY]: [\n          {\n            target: State.approve,\n            cond: (c) => c.error?.step === FailedSteps.approve,\n            actions: assign({ error: (_) => null }),\n          },\n          {\n            target: State.wrap,\n            cond: (c) => c.error?.step === FailedSteps.wrap,\n            actions: assign({ error: (_) => null }),\n          },\n          {\n            target: State.deposit,\n            cond: (c) => c.error?.step === FailedSteps.deposit,\n            actions: assign({ error: (_) => null }),\n          },\n        ],\n      },\n    },\n    [State.success]: {},\n  },\n});\n","import { Button, Divider, Text, useToast, Link } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { ContractError } from '@snx-v3/ContractError';\nimport { getSpotMarketId, isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { Multistep } from '@snx-v3/Multistep';\nimport { useApprove } from '@snx-v3/useApprove';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { CollateralType, useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useDeposit } from '@snx-v3/useDeposit';\nimport { useDepositBaseAndromeda } from '@snx-v3/useDepositBaseAndromeda';\nimport { useGetWrapperToken } from '@snx-v3/useGetUSDTokens';\nimport { useParams } from '@snx-v3/useParams';\nimport { usePool } from '@snx-v3/usePools';\nimport { useSpotMarketProxy } from '@snx-v3/useSpotMarketProxy';\nimport { useWrapEth } from '@snx-v3/useWrapEth';\nimport { Wei, wei } from '@synthetixio/wei';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { useMachine } from '@xstate/react';\nimport { utils } from 'ethers';\nimport { FC, ReactNode, useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { generatePath, useLocation, useNavigate } from 'react-router-dom';\nimport type { StateFrom } from 'xstate';\nimport { DepositMachine, Events, ServiceNames, State } from './DepositMachine';\nimport { ArrowBackIcon } from '@chakra-ui/icons';\nimport { LiquidityPositionUpdated } from '../../ui/src/components/Manage/LiquidityPositionUpdated';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { LiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { ChangeStat } from '../../ui/src/components';\nimport { CRatioChangeStat } from '../../ui/src/components/CRatioBar/CRatioChangeStat';\nimport { TransactionSummary } from '../../ui/src/components/TransactionSummary/TransactionSummary';\nimport { currency } from '@snx-v3/format';\n\nexport const DepositModalUi: FC<{\n  collateralChange: Wei;\n  isOpen: boolean;\n  onClose: () => void;\n  collateralType?: CollateralType;\n  state: StateFrom<typeof DepositMachine>;\n  setInfiniteApproval: (x: boolean) => void;\n  onSubmit: () => void;\n  availableCollateral: Wei;\n  poolName: string;\n  title?: string;\n  txSummary?: ReactNode;\n}> = ({\n  collateralChange,\n  isOpen,\n  onClose,\n  collateralType,\n  setInfiniteApproval,\n  onSubmit,\n  state,\n  availableCollateral,\n  poolName,\n  title = 'Manage Collateral',\n  txSummary,\n}) => {\n  const wrapAmount = state.context.wrapAmount;\n  const infiniteApproval = state.context.infiniteApproval;\n  const requireApproval = state.context.requireApproval;\n  const error = state.context.error;\n  const isProcessing =\n    state.matches(State.approve) || state.matches(State.deposit) || state.matches(State.wrap);\n\n  const isWETH = collateralType?.symbol === 'WETH';\n\n  const stepNumbers = {\n    wrap: isWETH ? 1 : 0,\n    approve: isWETH ? 2 : 1,\n    deposit: isWETH ? 3 : 2,\n  };\n\n  if (isOpen) {\n    if (state.matches(State.success)) {\n      return (\n        <LiquidityPositionUpdated\n          onClose={onSubmit}\n          title=\"Collateral successfully Updated\"\n          subline={\n            <>\n              Your <b>Collateral</b> has been updated, read more about it in the{' '}\n              <Link\n                href=\"https://docs.synthetix.io/v/synthetix-v3-user-documentation\"\n                target=\"_blank\"\n                color=\"cyan.500\"\n              >\n                Synthetix V3 Documentation\n              </Link>\n            </>\n          }\n          alertText={\n            <>\n              <b>Collateral</b> successfully Updated\n            </>\n          }\n          summary={txSummary}\n        />\n      );\n    }\n\n    return (\n      <div>\n        <Text color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n          <ArrowBackIcon cursor=\"pointer\" onClick={onClose} mr={2} />\n          {title}\n        </Text>\n        <Divider my={4} />\n        {isWETH ? (\n          <Multistep\n            step={stepNumbers.wrap}\n            title=\"Wrap\"\n            subtitle={\n              wrapAmount.eq(0) ? (\n                <Text as=\"div\">\n                  <Amount value={collateralChange} suffix={` ${collateralType?.symbol}`} /> from\n                  balance will be used.\n                </Text>\n              ) : (\n                <Text as=\"div\">\n                  You must wrap additional <Amount value={wrapAmount} suffix=\" ETH\" /> before\n                  depositing.\n                </Text>\n              )\n            }\n            status={{\n              failed: error?.step === State.wrap,\n              disabled: collateralType?.symbol !== 'WETH',\n              success: wrapAmount.eq(0) || state.matches(State.success),\n              loading: state.matches(State.wrap) && !error,\n            }}\n          />\n        ) : null}\n\n        <Multistep\n          step={stepNumbers.approve}\n          title={`Approve ${collateralType?.symbol} transfer`}\n          status={{\n            failed: error?.step === State.approve,\n            success: !requireApproval || state.matches(State.success),\n            loading: state.matches(State.approve) && !error,\n          }}\n          checkboxLabel={\n            requireApproval\n              ? `Approve unlimited ${collateralType?.symbol} transfers to Synthetix.`\n              : undefined\n          }\n          checkboxProps={{\n            isChecked: infiniteApproval,\n            onChange: (e) => setInfiniteApproval(e.target.checked),\n          }}\n        />\n\n        <Multistep\n          step={stepNumbers.deposit}\n          title={`Deposit & Lock ${collateralType?.symbol}`}\n          subtitle={\n            <>\n              {state.matches(State.success) ? (\n                <Text>\n                  <Amount value={collateralChange} suffix={` ${collateralType?.symbol}`} />{' '}\n                  deposited & locked in {poolName}.\n                </Text>\n              ) : (\n                <>\n                  {availableCollateral && availableCollateral.gt(wei(0)) ? (\n                    <>\n                      {availableCollateral.gte(collateralChange) ? (\n                        <Text>\n                          This will deposit & lock{' '}\n                          <Amount value={collateralChange} suffix={` ${collateralType?.symbol}`} />{' '}\n                          in {poolName}.\n                        </Text>\n                      ) : (\n                        <>\n                          <Text>\n                            This will deposit & lock{' '}\n                            <Amount\n                              value={availableCollateral}\n                              suffix={` ${collateralType?.symbol}`}\n                            />{' '}\n                            to {poolName}.\n                          </Text>\n                          <Text>\n                            An additional{' '}\n                            <Amount\n                              value={collateralChange.sub(availableCollateral)}\n                              suffix={` ${collateralType?.symbol}`}\n                            />{' '}\n                            will be deposited and locked from your wallet.\n                          </Text>\n                        </>\n                      )}\n                    </>\n                  ) : (\n                    <Text>\n                      This will deposit and lock{' '}\n                      <Amount value={collateralChange} suffix={` ${collateralType?.symbol}`} /> to{' '}\n                      {poolName}.\n                    </Text>\n                  )}\n                </>\n              )}\n            </>\n          }\n          status={{\n            failed: error?.step === State.deposit,\n            disabled: state.matches(State.success) && requireApproval,\n            success: state.matches(State.success),\n            loading: state.matches(State.deposit) && !error,\n          }}\n        />\n        <Button\n          isDisabled={isProcessing}\n          onClick={onSubmit}\n          width=\"100%\"\n          mt=\"6\"\n          data-cy=\"deposit-confirm-button\"\n        >\n          {(() => {\n            switch (true) {\n              case Boolean(error):\n                return 'Retry';\n              case isProcessing:\n                return 'Processing...';\n              case state.matches(State.success):\n                return 'Continue';\n              default:\n                return 'Execute Transaction';\n            }\n          })()}\n        </Button>\n      </div>\n    );\n  }\n};\n\nexport type DepositModalProps = FC<{\n  isOpen: boolean;\n  onClose: () => void;\n  title?: string;\n  liquidityPosition?: LiquidityPosition;\n}>;\n\nexport const DepositModal: DepositModalProps = ({ onClose, isOpen, title, liquidityPosition }) => {\n  const { collateralChange, setCollateralChange } = useContext(ManagePositionContext);\n  const currentCollateral = liquidityPosition?.collateralAmount ?? ZEROWEI;\n  const availableCollateral = liquidityPosition?.accountCollateral.availableCollateral ?? ZEROWEI;\n\n  const [txSummary, setTxSummary] = useState({\n    currentCollateral: ZEROWEI,\n    collateralChange: ZEROWEI,\n    currentDebt: ZEROWEI,\n  });\n\n  const navigate = useNavigate();\n  const { collateralSymbol, poolId, accountId } = useParams();\n  const queryClient = useQueryClient();\n  const { network } = useNetwork();\n\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: SpotProxy } = useSpotMarketProxy();\n  const { data: collateralType } = useCollateralType(collateralSymbol);\n\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n  const { data: wrapperToken } = useGetWrapperToken(getSpotMarketId(collateralSymbol));\n\n  const collateralAddress = isBaseAndromeda(network?.id, network?.preset)\n    ? wrapperToken\n    : collateralType?.tokenAddress;\n\n  const collateralNeeded = collateralChange.sub(availableCollateral);\n\n  const { approve, requireApproval } = useApprove({\n    contractAddress: collateralAddress,\n    amount: collateralNeeded.gt(0)\n      ? isBase\n        ? // Base USDC and Base stataUSDC are 6 decimals\n          utils.parseUnits(collateralNeeded.toString(), 6)\n        : utils.parseUnits(collateralNeeded.toString(), collateralType?.decimals)\n      : 0,\n    spender: isBase ? SpotProxy?.address : CoreProxy?.address,\n  });\n\n  const toast = useToast({ isClosable: true, duration: 9000 });\n\n  // TODO: Update logic on new account id\n  const newAccountId = useMemo(() => `${Math.floor(Math.random() * 1000000000000)}`, []);\n\n  const { exec: wrapEth, wethBalance } = useWrapEth();\n\n  const wrapAmount =\n    collateralType?.symbol === 'WETH' && collateralNeeded.gt(wethBalance || 0)\n      ? collateralNeeded.sub(wethBalance || 0)\n      : wei(0);\n\n  const { data: pool } = usePool(poolId);\n\n  const { exec: execDeposit } = useDeposit({\n    accountId: accountId,\n    newAccountId,\n    poolId: poolId,\n    collateralTypeAddress: collateralAddress,\n    collateralChange,\n    currentCollateral,\n    availableCollateral: availableCollateral || wei(0),\n    decimals: Number(collateralType?.decimals) || 18,\n  });\n\n  const { exec: depositBaseAndromeda } = useDepositBaseAndromeda({\n    accountId,\n    newAccountId,\n    poolId,\n    collateralTypeAddress: collateralAddress,\n    collateralChange,\n    currentCollateral,\n    availableCollateral: availableCollateral || wei(0),\n    collateralSymbol,\n  });\n\n  const errorParserCoreProxy = useContractErrorParser(CoreProxy);\n\n  const [state, send] = useMachine(DepositMachine, {\n    services: {\n      [ServiceNames.wrapEth]: async () => {\n        try {\n          await wrapEth(state.context.wrapAmount);\n        } catch (error: any) {\n          const contractError = errorParserCoreProxy(error);\n          if (contractError) {\n            console.error(new Error(contractError.name), contractError);\n          }\n\n          toast.closeAll();\n          toast({\n            title: 'Wrapping ETH failed',\n            description: contractError ? (\n              <ContractError contractError={contractError} />\n            ) : (\n              error.message || 'Please try again.'\n            ),\n            status: 'error',\n            variant: 'left-accent',\n          });\n          throw Error('Wrapping failed', { cause: error });\n        }\n      },\n      [ServiceNames.approveWETH]: async () => {\n        try {\n          toast({\n            title: 'Approve collateral for transfer',\n            description: accountId\n              ? 'The next transaction will lock this collateral.'\n              : 'The next transaction will create your account and and lock this collateral',\n            status: 'info',\n            variant: 'left-accent',\n          });\n\n          await approve(Boolean(state.context.infiniteApproval));\n        } catch (error: any) {\n          const contractError = errorParserCoreProxy(error);\n          if (contractError) {\n            console.error(new Error(contractError.name), contractError);\n          }\n          toast.closeAll();\n          toast({\n            title: 'Approval failed',\n            description: contractError ? (\n              <ContractError contractError={contractError} />\n            ) : (\n              'Please try again.'\n            ),\n            status: 'error',\n            variant: 'left-accent',\n          });\n          throw Error('Approve failed', { cause: error });\n        }\n      },\n      [ServiceNames.executeDeposit]: async () => {\n        try {\n          toast.closeAll();\n          toast({\n            title: Boolean(accountId)\n              ? 'Locking your collateral'\n              : 'Creating your account and locking your collateral',\n            description: '',\n            variant: 'left-accent',\n          });\n\n          setTxSummary({\n            currentCollateral,\n            currentDebt: liquidityPosition?.debt || ZEROWEI,\n            collateralChange,\n          });\n\n          if (isBase) {\n            await depositBaseAndromeda();\n          } else {\n            await execDeposit();\n          }\n\n          await Promise.all([\n            queryClient.invalidateQueries({\n              queryKey: [`${network?.id}-${network?.preset}`, 'EthBalance'],\n            }),\n            queryClient.invalidateQueries({\n              queryKey: [`${network?.id}-${network?.preset}`, 'LiquidityPosition'],\n            }),\n            collateralType?.symbol === 'SNX'\n              ? queryClient.invalidateQueries({\n                  queryKey: [`${network?.id}-${network?.preset}`, 'TransferableSynthetix'],\n                })\n              : Promise.resolve(),\n            queryClient.invalidateQueries({\n              queryKey: [`${network?.id}-${network?.preset}`, 'Allowance'],\n            }),\n            queryClient.invalidateQueries({\n              queryKey: [`${network?.id}-${network?.preset}`, 'LiquidityPositions'],\n            }),\n            !accountId\n              ? queryClient.invalidateQueries({\n                  queryKey: [`${network?.id}-${network?.preset}`, 'Accounts'],\n                })\n              : Promise.resolve(),\n          ]);\n\n          setCollateralChange(ZEROWEI);\n\n          toast.closeAll();\n          toast({\n            title: 'Success',\n            description: 'Your locked collateral amount has been updated.',\n            status: 'success',\n            duration: 5000,\n            variant: 'left-accent',\n          });\n        } catch (error: any) {\n          const contractError = errorParserCoreProxy(error);\n          if (contractError) {\n            console.error(new Error(contractError.name), contractError);\n          }\n\n          toast.closeAll();\n          toast({\n            title: 'Could not complete locking collateral',\n            description: contractError ? (\n              <ContractError contractError={contractError} />\n            ) : (\n              'Please try again.'\n            ),\n            status: 'error',\n            variant: 'left-accent',\n          });\n          throw Error('Lock collateral failed', { cause: error });\n        }\n      },\n    },\n  });\n\n  const wrapAmountString = wrapAmount.toString();\n  const isSuccessOrDeposit = state.matches(State.success) || state.matches(State.deposit);\n\n  useEffect(() => {\n    if (isSuccessOrDeposit) {\n      // We do this to ensure the success state displays the wrap amount used before deposit\n      return;\n    }\n    send(Events.SET_WRAP_AMOUNT, { wrapAmount: wei(wrapAmountString) });\n  }, [wrapAmountString, send, isSuccessOrDeposit]);\n\n  useEffect(() => {\n    send(Events.SET_REQUIRE_APPROVAL, { requireApproval });\n  }, [requireApproval, send]);\n\n  const location = useLocation();\n\n  const handleClose = useCallback(() => {\n    const isSuccess = state.matches(State.success);\n\n    if (isSuccess && poolId && collateralType?.symbol) {\n      send(Events.RESET);\n      onClose();\n      navigate({\n        pathname: generatePath('/positions/:collateralType/:poolId', {\n          collateralType: collateralType.symbol,\n          poolId,\n        }),\n        search: location.search,\n      });\n    }\n    send(Events.RESET);\n    onClose();\n  }, [location.search, send, onClose, state, poolId, collateralType?.symbol, navigate]);\n\n  const onSubmit = useCallback(async () => {\n    if (state.matches(State.success)) {\n      handleClose();\n      return;\n    }\n    if (state.context.error) {\n      send(Events.RETRY);\n      return;\n    }\n    send(Events.RUN);\n  }, [handleClose, send, state]);\n\n  const txSummaryItems = useMemo(() => {\n    const items = [\n      {\n        label: 'Locked ' + collateralType?.symbol,\n        value: (\n          <ChangeStat\n            value={txSummary.currentCollateral}\n            newValue={txSummary.currentCollateral.add(txSummary.collateralChange)}\n            formatFn={(val: Wei) => currency(val)}\n            hasChanges={txSummary.collateralChange.abs().gt(0)}\n            size=\"sm\"\n          />\n        ),\n      },\n    ];\n\n    if (isBase) {\n      return items;\n    }\n\n    return [\n      ...items,\n      {\n        label: 'C-ratio',\n        value: (\n          <CRatioChangeStat\n            currentCollateral={txSummary.currentCollateral}\n            currentDebt={txSummary.currentDebt}\n            collateralChange={txSummary.collateralChange}\n            collateralPrice={liquidityPosition?.collateralPrice ?? ZEROWEI}\n            debtChange={ZEROWEI}\n            size=\"sm\"\n          />\n        ),\n      },\n    ];\n  }, [\n    collateralType?.symbol,\n    isBase,\n    liquidityPosition?.collateralPrice,\n    txSummary.collateralChange,\n    txSummary.currentCollateral,\n    txSummary.currentDebt,\n  ]);\n\n  return (\n    <DepositModalUi\n      collateralChange={collateralChange}\n      isOpen={isOpen}\n      onClose={onClose}\n      collateralType={collateralType}\n      state={state}\n      setInfiniteApproval={(infiniteApproval) => {\n        send(Events.SET_INFINITE_APPROVAL, { infiniteApproval });\n      }}\n      onSubmit={onSubmit}\n      poolName={pool?.name || ''}\n      availableCollateral={availableCollateral || wei(0)}\n      title={title}\n      txSummary={<TransactionSummary items={txSummaryItems} />}\n    />\n  );\n};\n","import { useReducer } from 'react';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useMutation } from '@tanstack/react-query';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { BigNumber } from 'ethers';\n\nimport { formatGasPriceForTransaction } from '@snx-v3/useGasOptions';\nimport { getGasPrice } from '@snx-v3/useGasPrice';\nimport { useGasSpeed } from '@snx-v3/useGasSpeed';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport { notNil } from '@snx-v3/tsHelpers';\nimport { useAllCollateralPriceIds } from '@snx-v3/useAllCollateralPriceIds';\nimport { fetchPriceUpdates, priceUpdatesToPopulatedTx } from '@snx-v3/fetchPythPrices';\nimport { parseUnits } from '@snx-v3/format';\n\nexport const useDeposit = ({\n  accountId,\n  newAccountId,\n  poolId,\n  collateralTypeAddress,\n  collateralChange,\n  currentCollateral,\n  availableCollateral,\n  decimals,\n}: {\n  accountId?: string;\n  newAccountId: string;\n  poolId?: string;\n  collateralTypeAddress?: string;\n  currentCollateral: Wei;\n  availableCollateral?: Wei;\n  collateralChange: Wei;\n  decimals: number;\n}) => {\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: collateralPriceUpdates } = useAllCollateralPriceIds();\n\n  const { gasSpeed } = useGasSpeed();\n\n  const { network } = useNetwork();\n  const signer = useSigner();\n  const provider = useProvider();\n\n  const mutation = useMutation({\n    mutationFn: async () => {\n      if (\n        !(\n          network &&\n          provider &&\n          signer &&\n          CoreProxy &&\n          poolId &&\n          collateralTypeAddress &&\n          availableCollateral &&\n          collateralPriceUpdates\n        )\n      ) {\n        return;\n      }\n      if (collateralChange.eq(0)) {\n        return;\n      }\n\n      try {\n        dispatch({ type: 'prompting' });\n        const walletAddress = await signer.getAddress();\n        const id = accountId ?? newAccountId;\n\n        // create account only when no account exists\n        const createAccount = accountId\n          ? undefined\n          : CoreProxy.populateTransaction['createAccount(uint128)'](BigNumber.from(id));\n\n        const amount = collateralChange.sub(availableCollateral);\n\n        const collateralAmount = amount.gt(0)\n          ? parseUnits(amount.toString(), decimals)\n          : BigNumber.from(0);\n\n        // optionally deposit if available collateral not enough\n        const deposit = collateralAmount.gt(0)\n          ? CoreProxy.populateTransaction.deposit(\n              BigNumber.from(id),\n              collateralTypeAddress,\n              collateralAmount // only deposit what's needed\n            )\n          : undefined;\n\n        const delegate = CoreProxy.populateTransaction.delegateCollateral(\n          BigNumber.from(id),\n          BigNumber.from(poolId),\n          collateralTypeAddress,\n          currentCollateral.add(collateralChange).toBN(),\n          wei(1).toBN()\n        );\n        const callsPromise = Promise.all([createAccount, deposit, delegate].filter(notNil));\n        const collateralPriceCallsPromise = fetchPriceUpdates(\n          collateralPriceUpdates,\n          network?.isTestnet\n        ).then((signedData) =>\n          priceUpdatesToPopulatedTx(walletAddress, collateralPriceUpdates, signedData)\n        );\n\n        const [calls, gasPrices, collateralPriceCalls] = await Promise.all([\n          callsPromise,\n          getGasPrice({ provider }),\n          collateralPriceCallsPromise,\n        ]);\n        const allCalls = collateralPriceCalls.concat(calls);\n\n        const erc7412Tx = await withERC7412(network, allCalls, 'useDeposit', walletAddress);\n\n        const gasOptionsForTransaction = formatGasPriceForTransaction({\n          gasLimit: erc7412Tx.gasLimit,\n          gasPrices,\n          gasSpeed,\n        });\n\n        const txn = await signer.sendTransaction({ ...erc7412Tx, ...gasOptionsForTransaction });\n        dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n        await txn.wait();\n        dispatch({ type: 'success' });\n      } catch (error: any) {\n        dispatch({ type: 'error', payload: { error } });\n        throw error;\n      }\n    },\n  });\n  return {\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n};\n","import { useReducer } from 'react';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useMutation } from '@tanstack/react-query';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { BigNumber, ethers } from 'ethers';\nimport { formatGasPriceForTransaction } from '@snx-v3/useGasOptions';\nimport { getGasPrice } from '@snx-v3/useGasPrice';\nimport { useGasSpeed } from '@snx-v3/useGasSpeed';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport { notNil } from '@snx-v3/tsHelpers';\nimport { useSpotMarketProxy } from '@snx-v3/useSpotMarketProxy';\nimport { parseUnits } from '@snx-v3/format';\nimport { getSpotMarketId } from '@snx-v3/isBaseAndromeda';\nimport { approveAbi } from '@snx-v3/useApprove';\nimport { useCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\nimport { useGetUSDTokens } from '@snx-v3/useGetUSDTokens';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\n\nexport const useDepositBaseAndromeda = ({\n  accountId,\n  newAccountId,\n  poolId,\n  collateralTypeAddress,\n  collateralChange,\n  currentCollateral,\n  availableCollateral,\n  collateralSymbol,\n}: {\n  accountId?: string;\n  newAccountId: string;\n  poolId?: string;\n  collateralTypeAddress?: string;\n  currentCollateral: Wei;\n  availableCollateral?: Wei;\n  collateralChange: Wei;\n  collateralSymbol?: string;\n}) => {\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: SpotMarketProxy } = useSpotMarketProxy();\n  const { data: priceUpdateTx } = useCollateralPriceUpdates();\n  const { data: usdTokens } = useGetUSDTokens();\n  const { data: collateralType } = useCollateralType(collateralSymbol);\n\n  const { gasSpeed } = useGasSpeed();\n\n  const { network } = useNetwork();\n  const signer = useSigner();\n  const provider = useProvider();\n\n  const mutation = useMutation({\n    mutationFn: async () => {\n      if (\n        !(\n          network &&\n          provider &&\n          signer &&\n          CoreProxy &&\n          SpotMarketProxy &&\n          poolId &&\n          collateralTypeAddress &&\n          availableCollateral &&\n          usdTokens?.sUSD\n        )\n      ) {\n        return;\n      }\n      if (collateralChange.eq(0)) return;\n\n      try {\n        // Steps:\n        // 1. Create an account if not exists\n        // 2. Wrap USDC or stataUSDC to sUSDC or sStataUSDC\n        // 3. Approve sUSDC or sStataUSDC\n        // 4. Deposit sUSDC or sStataUSDC\n        // 5. Delegate collateral\n\n        dispatch({ type: 'prompting' });\n        const id = accountId ?? newAccountId;\n\n        // create account only when no account exists\n        const createAccount = accountId\n          ? undefined\n          : CoreProxy.populateTransaction['createAccount(uint128)'](BigNumber.from(id));\n\n        const amount = collateralChange.sub(availableCollateral);\n\n        const collateralAmount = amount.gt(0)\n          ? parseUnits(amount.toString(), 6)\n          : BigNumber.from(0);\n\n        const spotMarketId = getSpotMarketId(collateralSymbol);\n        const amountD18 = amount.gt(0) ? parseUnits(amount.toString(), 18) : BigNumber.from(0);\n\n        // Wrap\n        const wrap = collateralAmount.gt(0)\n          ? SpotMarketProxy.populateTransaction.wrap(spotMarketId, collateralAmount, amountD18)\n          : undefined;\n\n        // Synth\n        const synthAddress = collateralType?.tokenAddress;\n        if (!synthAddress) {\n          throw 'synth not found';\n        }\n        const synthContract = new ethers.Contract(synthAddress, approveAbi, signer);\n\n        const synthApproval = amountD18.gt(0)\n          ? synthContract.populateTransaction.approve(CoreProxy.address, amountD18)\n          : undefined;\n\n        // optionally deposit if available collateral not enough\n        const deposit = amountD18.gt(0)\n          ? CoreProxy.populateTransaction.deposit(\n              BigNumber.from(id),\n              synthAddress,\n              amountD18 // only deposit what's needed\n            )\n          : undefined;\n\n        const delegate = CoreProxy.populateTransaction.delegateCollateral(\n          BigNumber.from(id),\n          BigNumber.from(poolId),\n          synthAddress,\n          currentCollateral.toBN().add(parseUnits(collateralChange.toString(), 18)).toString(),\n          wei(1).toBN()\n        );\n\n        const callsPromise = Promise.all(\n          [wrap, synthApproval, createAccount, deposit, delegate].filter(notNil)\n        );\n\n        const [calls, gasPrices] = await Promise.all([callsPromise, getGasPrice({ provider })]);\n\n        if (priceUpdateTx) {\n          calls.unshift(priceUpdateTx as any);\n        }\n\n        const walletAddress = await signer.getAddress();\n\n        const erc7412Tx = await withERC7412(\n          network,\n          calls,\n          'useDepositBaseAndromeda',\n          walletAddress\n        );\n\n        const gasOptionsForTransaction = formatGasPriceForTransaction({\n          gasLimit: erc7412Tx.gasLimit,\n          gasPrices,\n          gasSpeed,\n        });\n\n        const txn = await signer.sendTransaction({ ...erc7412Tx, ...gasOptionsForTransaction });\n        dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n        await txn.wait();\n        dispatch({ type: 'success' });\n      } catch (error: any) {\n        dispatch({ type: 'error', payload: { error } });\n        throw error;\n      }\n    },\n  });\n  return {\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n};\n","import { DepositModal } from './DepositModal';\nexport * from './DepositModal';\nexport default DepositModal;\n","import { Box, Spinner } from '@chakra-ui/react';\nimport { PropsWithChildren } from 'react';\nimport { MultistepStatus } from './MultistepStatus';\n\nimport { createIcon } from '@chakra-ui/icon';\n\nexport const CheckIcon = createIcon({\n  viewBox: '0 0 14 14',\n  path: (\n    <g fill=\"currentColor\">\n      <polygon points=\"5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039\" />\n    </g>\n  ),\n});\n\nexport const CloseIcon = createIcon({\n  d: 'M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z',\n});\n\nexport function StepIcon({ status, children }: PropsWithChildren<{ status: MultistepStatus }>) {\n  switch (true) {\n    case status.failed:\n      return <CloseIcon color=\"white\" />;\n    case status.success:\n      return <CheckIcon color=\"white\" />;\n    case status.loading:\n      return <Spinner color=\"white\" width={6} height={6} />;\n    case status.disabled:\n    default:\n      return (\n        <Box\n          __css={{\n            display: 'inline',\n            fontWeight: 'medium',\n            textAlign: 'center',\n            fontSize: 'md',\n          }}\n        >\n          {children}\n        </Box>\n      );\n  }\n}\n","import { MultistepStatus } from './MultistepStatus';\n\nexport function statusColor(status: MultistepStatus): string {\n  switch (true) {\n    // order matters\n    case status.failed:\n      return 'red.700';\n    case status.disabled:\n      return 'gray.900';\n    case status.loading:\n      return 'gray.900';\n    case status.success:\n      return 'green.700';\n    default:\n      return 'gray.900';\n  }\n}\n","import { Flex } from '@chakra-ui/react';\nimport { PropsWithChildren } from 'react';\nimport { MultistepStatus } from './MultistepStatus';\nimport { StepIcon } from './StepIcon';\nimport { statusColor } from './statusColor';\n\nexport function Step({ status, children }: PropsWithChildren<{ status: MultistepStatus }>) {\n  return (\n    <Flex\n      width={10}\n      height={10}\n      minWidth={10}\n      minHeight={10}\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      bg={statusColor(status)}\n      rounded=\"full\"\n      transitionProperty=\"background\"\n      transitionDuration=\"normal\"\n    >\n      <StepIcon status={status}>{children}</StepIcon>\n    </Flex>\n  );\n}\n","import { PropsWithChildren, ReactNode } from 'react';\nimport { Box, Checkbox, CheckboxProps, Flex, FlexProps, Text } from '@chakra-ui/react';\nimport { Step } from './Step';\nimport { statusColor } from './statusColor';\nimport { MultistepStatus } from './MultistepStatus';\n\nfunction StepCheckbox({ children, ...props }: PropsWithChildren<CheckboxProps>) {\n  return (\n    <Flex mt=\"0.5\">\n      <Checkbox size=\"sm\" {...props}>\n        <Box fontSize=\"xs\" opacity=\"0.66\">\n          {children}\n        </Box>\n      </Checkbox>\n    </Flex>\n  );\n}\ninterface Props extends Omit<FlexProps, 'title'> {\n  step: number;\n  title: string | ReactNode;\n  subtitle?: string | ReactNode;\n  checkboxLabel?: string;\n  checkboxProps?: CheckboxProps;\n  status: MultistepStatus;\n  children?: ReactNode | undefined;\n}\n\nexport function Multistep({\n  step,\n  title,\n  subtitle,\n  checkboxLabel,\n  checkboxProps,\n  status,\n  children,\n  ...props\n}: Props) {\n  return (\n    <Flex\n      position=\"relative\"\n      alignItems=\"center\"\n      gap={4}\n      rounded=\"lg\"\n      mt=\"6\"\n      p=\"4\"\n      border=\"1px solid\"\n      transitionProperty=\"border-color\"\n      transitionDuration=\"normal\"\n      borderColor={statusColor(status)}\n      {...props}\n    >\n      <Step status={status}>{step}</Step>\n      <Flex direction=\"column\">\n        <Text data-cy={`multistep-${step}`}>{title}</Text>\n        {subtitle ? (\n          <Text as=\"div\" fontSize=\"xs\" opacity=\"0.66\">\n            {subtitle}\n          </Text>\n        ) : null}\n        {checkboxLabel ? <StepCheckbox {...checkboxProps}>{checkboxLabel}</StepCheckbox> : null}\n        {children}\n      </Flex>\n    </Flex>\n  );\n}\n","import { Input, InputProps } from '@chakra-ui/react';\nimport { ChangeEvent, useCallback, useEffect, useRef, useState } from 'react';\nimport { Wei, wei } from '@synthetixio/wei';\n\nexport interface NumberInputProps extends InputProps {\n  'data-testid'?: string;\n  'data-max'?: string;\n}\n\nexport const NUMBER_REGEX = /^([0-9]*[.])?[0-9]{0,18}$/;\n\nfunction cleanupNumber(value: Wei) {\n  // Cleanup trailing precision zeroes\n  const float = parseFloat(value.toString());\n  if (float === value.toNumber()) {\n    return `${float}`;\n  }\n  return value.toString();\n}\n\nexport function NumberInput({\n  value,\n  onChange,\n  min,\n  max,\n  InputProps,\n  dataTestId,\n  disabled,\n}: {\n  onChange?: (value: Wei) => void;\n  value: Wei;\n  min?: Wei;\n  max?: Wei;\n  InputProps?: NumberInputProps;\n  dataTestId?: string;\n  disabled?: boolean;\n}) {\n  const [inputValue, setInputValue] = useState(value.gt(0) ? value.toString() : '');\n\n  const onInputChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      // Define max length here\n      if (e.target.value.length > 24) return;\n\n      let _value = e.target.value;\n\n      if (!isNaN(Number(e.target.value))) {\n        if (!!min && min.gt(Number(e.target.value))) {\n          _value = min.toNumber().toString();\n        }\n      }\n\n      setInputValue(_value);\n      if (!onChange) {\n        // Could be a read-only input\n        return;\n      }\n      if (!NUMBER_REGEX.test(`${_value}`)) {\n        return;\n      }\n      let nextValue = value;\n      try {\n        nextValue = wei(_value || 0);\n      } catch (_err) {\n        // whatever\n      }\n      if (!value.eq(nextValue)) {\n        onChange(nextValue);\n      }\n    },\n    [min, onChange, value]\n  );\n\n  const ref = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n    if (!NUMBER_REGEX.test(`${inputValue}`)) {\n      ref.current.setCustomValidity('Invalid number');\n      return;\n    }\n    if (value && value.eq(0)) {\n      ref.current.setCustomValidity('Value required');\n      return;\n    }\n    if (min && min.gte(0) && value && value.lt(min)) {\n      ref.current.setCustomValidity(`Value smaller than minimum of ${cleanupNumber(min)}`);\n      return;\n    }\n    if (max && max.gte(0) && value && value.gt(max)) {\n      ref.current.setCustomValidity(`Value greater than maximum of ${cleanupNumber(max)}`);\n      return;\n    }\n    ref.current.setCustomValidity('');\n  }, [inputValue, min, max, value]);\n\n  useEffect(() => {\n    if (value.eq(0)) {\n      return setInputValue('');\n    }\n    return setInputValue(cleanupNumber(value));\n  }, [value]);\n\n  return (\n    <Input\n      ref={ref}\n      flex=\"1\"\n      type=\"number\"\n      step=\"any\"\n      border=\"none\"\n      borderWidth=\"0px\"\n      textAlign=\"end\"\n      p={0}\n      outline=\"none\"\n      fontFamily=\"heading\"\n      fontSize=\"xl\"\n      fontWeight=\"700\"\n      lineHeight=\"2xl\"\n      color=\"white\"\n      height=\"unset\"\n      autoFocus={true}\n      placeholder=\"00.00\"\n      _focus={{ boxShadow: 'none !important' }}\n      _placeholder={{ color: 'whiteAlpha.700' }}\n      _disabled={{ color: 'white' }}\n      value={inputValue}\n      onChange={onInputChange}\n      disabled={disabled}\n      data-cy={dataTestId}\n      {...InputProps}\n      maxLength={10}\n    />\n  );\n}\n","import { Tooltip as ChakraTooltip, TooltipProps } from '@chakra-ui/react';\n\nexport const Tooltip = ({ ...props }: TooltipProps) => {\n  return <ChakraTooltip hasArrow bg=\"gray.900\" p={3} borderRadius=\"4px\" {...props} />;\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const SUSDCIcon = ({ width = '24px', height = '24px' }: IconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 30 30\" fill=\"none\">\n      <g clipPath=\"url(#clip0_10043_2361)\">\n        <path\n          d=\"M15 30C23.3125 30 30 23.3125 30 15C30 6.68745 23.3125 0 15 0C6.68745 0 0 6.68745 0 15C0 23.3125 6.68745 30 15 30Z\"\n          fill=\"#2775CA\"\n        />\n        <path\n          d=\"M19.125 17.375C19.125 15.1875 17.8125 14.4375 15.1875 14.1251C13.3125 13.875 12.9375 13.3751 12.9375 12.5C12.9375 11.6249 13.5625 11.0625 14.8125 11.0625C15.9375 11.0625 16.5625 11.4375 16.875 12.375C16.9375 12.5625 17.125 12.6875 17.3125 12.6875H18.3124C18.5625 12.6875 18.75 12.5 18.75 12.2501V12.1875C18.4999 10.8125 17.3749 9.75 15.9375 9.62505V8.12505C15.9375 7.875 15.75 7.6875 15.4375 7.62495H14.5C14.25 7.62495 14.0625 7.81245 13.9999 8.12505V9.5625C12.1249 9.81255 10.9375 11.0625 10.9375 12.6251C10.9375 14.6876 12.1875 15.5 14.8125 15.8126C16.5625 16.125 17.125 16.5 17.125 17.5001C17.125 18.5001 16.2499 19.1876 15.0625 19.1876C13.4374 19.1876 12.8749 18.5 12.6874 17.5625C12.625 17.3126 12.4375 17.1875 12.25 17.1875H11.1874C10.9375 17.1875 10.75 17.375 10.75 17.625V17.6876C10.9999 19.25 12 20.375 14.0625 20.6876V22.1876C14.0625 22.4375 14.25 22.625 14.5624 22.6875H15.4999C15.7499 22.6875 15.9375 22.5 16 22.1876V20.6876C17.875 20.375 19.125 19.0625 19.125 17.375Z\"\n          fill=\"white\"\n        />\n        <path\n          d=\"M11.8125 23.9374C6.9375 22.1875 4.43745 16.75 6.25005 11.9374C7.18755 9.31245 9.25005 7.3125 11.8125 6.375C12.0625 6.25005 12.1875 6.06255 12.1875 5.74995V4.875C12.1875 4.62495 12.0625 4.43745 11.8125 4.37505C11.7499 4.37505 11.625 4.37505 11.5624 4.43745C5.625 6.31245 2.37495 12.625 4.24995 18.5625C5.37495 22.0624 8.0625 24.75 11.5624 25.875C11.8125 25.9999 12.0625 25.875 12.1249 25.6249C12.1875 25.5625 12.1875 25.5 12.1875 25.375V24.4999C12.1875 24.3124 12 24.0625 11.8125 23.9374ZM18.4375 4.43745C18.1875 4.3125 17.9375 4.43745 17.875 4.6875C17.8125 4.75005 17.8125 4.81245 17.8125 4.93755V5.8125C17.8125 6.06255 18 6.31245 18.1875 6.43755C23.0625 8.18745 25.5625 13.6249 23.75 18.4375C22.8125 21.0625 20.75 23.0625 18.1875 24C17.9374 24.1249 17.8125 24.3124 17.8125 24.625V25.5C17.8125 25.75 17.9374 25.9375 18.1875 25.9999C18.25 25.9999 18.375 25.9999 18.4375 25.9375C24.375 24.0625 27.6251 17.7499 25.7501 11.8125C24.6251 8.25 21.875 5.56245 18.4375 4.43745Z\"\n          fill=\"white\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_10043_2361\">\n          <rect width=\"30\" height=\"30\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\ninterface LogoProps extends IconProps {\n  withText?: boolean;\n}\n\nexport const Logo = ({\n  color = '#00D1FF',\n  width = '126px',\n  height = '22px',\n  withText = true,\n}: LogoProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 126 22\" fill=\"none\" color={color}>\n      <path\n        d=\"M7.00677 4.80523C6.804 4.57155 6.55437 4.45443 6.25731 4.45443H0.182051C0.128089 4.45443 0.0839395 4.43722 0.0506907 4.40281C0.0168969 4.36895 0 4.33065 0 4.28957V0.164856C0 0.12378 0.0168969 0.0860357 0.0506907 0.0516214C0.0839395 0.0172071 0.128089 0 0.182051 0H6.60179C8.22171 0 9.61925 0.667193 10.7939 2.00047L12.3533 3.91823L9.31565 7.65107L7.00677 4.80523ZM18.2263 1.97993C19.4009 0.659977 20.805 0 22.4386 0H28.8381C28.8921 0 28.9324 0.0138767 28.9597 0.0410751C28.9864 0.0688286 29 0.109904 29 0.164856V4.28957C29 4.33065 28.9864 4.36895 28.9597 4.40281C28.9324 4.43722 28.8921 4.45443 28.8381 4.45443H22.7629C22.4658 4.45443 22.2162 4.57155 22.0134 4.80523L17.5379 10.291L22.0336 15.8178C22.2363 16.0382 22.4789 16.1481 22.7629 16.1481H28.8381C28.8921 16.1481 28.9324 16.1653 28.9597 16.1997C28.9864 16.2341 29 16.2791 29 16.3335V20.4582C29 20.4993 28.9864 20.5376 28.9597 20.5714C28.9324 20.6058 28.8921 20.623 28.8381 20.623H22.4386C20.805 20.623 19.4075 19.9564 18.2465 18.6226L14.5204 14.0444L10.7939 18.6226C9.61925 19.9564 8.21517 20.623 6.58162 20.623H0.182051C0.128089 20.623 0.0872099 20.6058 0.0605018 20.5714C0.0332488 20.537 0.0201673 20.4926 0.0201673 20.4371V16.3124C0.0201673 16.2713 0.0332488 16.2336 0.0605018 16.1991C0.0872099 16.1647 0.128089 16.1475 0.182051 16.1475H6.25731C6.54074 16.1475 6.79038 16.031 7.00677 15.7967L11.4011 10.3937L18.2263 1.97993Z\"\n        fill=\"#00D1FF\"\n      />\n      {withText && (\n        <g>\n          <path d=\"M42.9 3.86001V15.72H51.7V17.86H40.4V3.86001H42.9Z\" fill=\"white\" />\n          <path\n            d=\"M53.4645 7.02001H55.7845V17.86H53.4645V7.02001ZM53.4645 3.30001H55.7845V5.62001H53.4645V3.30001Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M61.0055 7.02001H68.5055V21.78H66.1855V16.38L64.4455 17.86H61.0055C59.4255 17.86 58.1655 16.54 58.1655 15.02V9.86002C58.1655 8.28002 59.4855 7.02001 61.0055 7.02001ZM61.6255 15.86H65.4855C65.8655 15.86 66.1855 15.56 66.1855 15.16V9.04002H61.6255C60.9855 9.04002 60.4655 9.54002 60.4655 10.18V14.7C60.4655 15.36 60.9855 15.86 61.6255 15.86Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M74.5408 15.86H78.3008C78.6808 15.86 79.0008 15.56 79.0008 15.16V7.02001H81.3208V17.86H79.0008V16.4L77.3208 17.86H73.9008C72.3808 17.86 71.0808 16.6 71.0808 15.02V7.02001H73.3808V14.7C73.3808 15.36 73.8808 15.86 74.5408 15.86Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M83.9333 7.02001H86.2533V17.86H83.9333V7.02001ZM83.9333 3.30001H86.2533V5.62001H83.9333V3.30001Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M96.6542 7.02001V3.14001H98.9742V17.86H96.6542V16.38L94.9142 17.86H91.4742C89.8942 17.86 88.6342 16.54 88.6342 15.02V9.86002C88.6342 8.28002 89.9542 7.02001 91.4742 7.02001H96.6542ZM92.0942 15.86H95.9542C96.3342 15.86 96.6542 15.56 96.6542 15.16V9.04002H92.0942C91.4542 9.04002 90.9342 9.54002 90.9342 10.18V14.7C90.9342 15.36 91.4542 15.86 92.0942 15.86Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M101.59 7.02001H103.91V17.86H101.59V7.02001ZM101.59 3.30001H103.91V5.62001H101.59V3.30001Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M113.09 15.86V17.86H110.31C108.77 17.86 107.51 16.66 107.51 15.08V9.04002H105.63V7.02001H107.51V4.64002H109.83V7.02001H113.11V9.04002H109.83V14.74C109.83 15.4 110.27 15.86 110.93 15.86H113.09Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M116.587 21.78L118.747 17.22L113.947 7.02001H116.467L119.947 14.74L123.267 7.02001H125.747L119.067 21.78H116.587Z\"\n            fill=\"white\"\n          />\n        </g>\n      )}\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const EthereumIcon = ({\n  width = '24px',\n  height = '24px',\n  fill = `#627EEA`,\n  ...props\n}: IconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 30 30\" fill=\"none\" {...props}>\n      <path\n        d=\"M15 30c8.284 0 15-6.716 15-15 0-8.284-6.716-15-15-15C6.716 0 0 6.716 0 15c0 8.284 6.716 15 15 15Z\"\n        fill={fill as string}\n      />\n      <path d=\"M15.467 3.75v8.316l7.028 3.14L15.467 3.75Z\" fill=\"#fff\" fillOpacity=\".602\" />\n      <path d=\"m15.467 3.75-7.03 11.456 7.03-3.14V3.75Z\" fill=\"#fff\" />\n      <path d=\"M15.467 20.595v5.65l7.033-9.73-7.033 4.08Z\" fill=\"#fff\" fillOpacity=\".602\" />\n      <path d=\"M15.467 26.245v-5.651l-7.03-4.08 7.03 9.731Z\" fill=\"#fff\" />\n      <path d=\"m15.467 19.287 7.028-4.08-7.028-3.14v7.22Z\" fill=\"#fff\" fillOpacity=\".2\" />\n      <path d=\"m8.438 15.206 7.029 4.081v-7.22l-7.03 3.14Z\" fill=\"#fff\" fillOpacity=\".602\" />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const OptimismIcon = ({\n  width = '24px',\n  height = '24px',\n  color = 'white',\n  fill = '#FF0420',\n  ...props\n}: IconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 34 34\" {...props}>\n      <path\n        d=\"M17 34C26.3888 34 34 26.3888 34 17C34 7.61116 26.3888 0 17 0C7.61116 0 0 7.61116 0 17C0 26.3888 7.61116 34 17 34Z\"\n        fill={fill as string}\n      />\n      <path\n        d=\"M12.3295 21.76C11.3042 21.76 10.4641 21.5131 9.80918 21.0195C9.16298 20.5171 8.83984 19.8031 8.83984 18.8775C8.83984 18.6836 8.8614 18.4456 8.90444 18.1635C9.01651 17.5289 9.1759 16.7664 9.38269 15.8761C9.96858 13.452 11.4808 12.24 13.9193 12.24C14.5828 12.24 15.1773 12.3546 15.7029 12.5838C16.2285 12.8041 16.6421 13.1391 16.9437 13.5886C17.2453 14.0294 17.3961 14.5583 17.3961 15.1753C17.3961 15.3604 17.3745 15.594 17.3314 15.8761C17.2022 16.6606 17.0471 17.4231 16.8662 18.1635C16.5646 19.3711 16.0433 20.2747 15.3022 20.8741C14.5612 21.4647 13.5703 21.76 12.3295 21.76ZM12.5105 19.856C12.993 19.856 13.4023 19.7105 13.7384 19.4196C14.083 19.1288 14.3286 18.6836 14.4751 18.0842C14.6732 17.2556 14.824 16.5328 14.9274 15.9158C14.9619 15.7306 14.9791 15.5411 14.9791 15.3472C14.9791 14.5451 14.5699 14.144 13.7513 14.144C13.2688 14.144 12.8552 14.2894 12.5105 14.5803C12.1744 14.8712 11.9332 15.3164 11.7867 15.9158C11.6316 16.5064 11.4765 17.2291 11.3214 18.0842C11.287 18.2605 11.2697 18.4456 11.2697 18.6395C11.2697 19.4505 11.6833 19.856 12.5105 19.856Z\"\n        fill={color as string}\n      />\n      <path\n        d=\"M17.9895 21.6278C17.8947 21.6278 17.8215 21.597 17.7698 21.5352C17.7267 21.4647 17.7138 21.3854 17.731 21.2972L19.5146 12.7028C19.5318 12.6059 19.5792 12.5265 19.6568 12.4648C19.7344 12.4031 19.8162 12.3722 19.9024 12.3722H23.3404C24.2968 12.3722 25.0636 12.575 25.641 12.9805C26.2269 13.386 26.5199 13.9721 26.5199 14.739C26.5199 14.9594 26.494 15.1886 26.4423 15.4266C26.2269 16.4403 25.7918 17.1895 25.1369 17.6744C24.4907 18.1592 23.6031 18.4016 22.4744 18.4016H20.7295L20.135 21.2972C20.1178 21.3942 20.0704 21.4735 19.9928 21.5352C19.9153 21.597 19.8334 21.6278 19.7473 21.6278H17.9895ZM22.5648 16.5769C22.9267 16.5769 23.2412 16.4755 23.5084 16.2728C23.7841 16.0701 23.965 15.7792 24.0513 15.4001C24.0771 15.2503 24.09 15.1181 24.09 15.0035C24.09 14.7479 24.0168 14.5539 23.8703 14.4217C23.7238 14.2806 23.4739 14.2101 23.1206 14.2101H21.5697L21.0785 16.5769H22.5648Z\"\n        fill={color as string}\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\ninterface DollarCircleProps extends IconProps {\n  fill?: string;\n}\n\nexport const DollarCircle = ({ width = '24px', height = '24px', ...props }: DollarCircleProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 19 18\" fill=\"none\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M9.79517 2.75357C6.44891 2.75357 3.73624 5.46625 3.73624 8.8125C3.73624 12.1588 6.44891 14.8714 9.79517 14.8714C13.1414 14.8714 15.8541 12.1588 15.8541 8.8125C15.8541 5.46625 13.1414 2.75357 9.79517 2.75357ZM2.48267 8.8125C2.48267 4.77392 5.75658 1.5 9.79517 1.5C13.8337 1.5 17.1077 4.77392 17.1077 8.8125C17.1077 12.8511 13.8337 16.125 9.79517 16.125C5.75658 16.125 2.48267 12.8511 2.48267 8.8125Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M9.03962 7.48711C9.04452 7.25329 9.11127 7.15806 9.15621 7.11271C9.21551 7.05288 9.33009 6.98862 9.54225 6.95486C9.98435 6.88451 10.5823 6.98693 11.0758 7.11688L11.6819 7.27652L12.0011 6.06428L11.395 5.90465C10.8745 5.76757 10.0611 5.60296 9.34526 5.71686C8.97845 5.77523 8.57742 5.91591 8.26586 6.23026C7.94168 6.55735 7.78576 6.99985 7.78576 7.51481V7.53855L7.78756 7.56221C7.83275 8.15802 8.18724 8.55401 8.55492 8.8144C8.89199 9.05311 9.30983 9.22697 9.64735 9.36742C9.66009 9.37272 9.67272 9.37797 9.68522 9.38318C10.0665 9.54198 10.3494 9.6643 10.5455 9.80792C10.7181 9.93436 10.7353 10.0108 10.7353 10.0783C10.7353 10.3402 10.6583 10.4442 10.5979 10.4988C10.5171 10.5719 10.3654 10.6431 10.1066 10.6754C9.57934 10.741 8.8945 10.6119 8.39035 10.4769L7.7849 10.3148L7.4606 11.5257L8.06605 11.6878C8.59887 11.8305 9.48099 12.0165 10.2615 11.9193C10.6565 11.8701 11.0939 11.7404 11.4387 11.4286C11.8039 11.0983 11.9889 10.6336 11.9889 10.0783C11.9889 9.47293 11.6504 9.06337 11.2862 8.79661C10.9547 8.55379 10.534 8.37864 10.1954 8.23769C10.1859 8.23376 10.1765 8.22986 10.1672 8.22598C9.78653 8.06741 9.49239 7.94221 9.27941 7.79139C9.09878 7.66347 9.051 7.56996 9.03962 7.48711Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M9.79517 11.0063C10.1413 11.0063 10.422 11.2869 10.422 11.633V13.2H9.16838V11.633C9.16838 11.2869 9.449 11.0063 9.79517 11.0063Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M10.422 4.425V5.99196C10.422 6.33813 10.1413 6.61875 9.79517 6.61875C9.449 6.61875 9.16838 6.33813 9.16838 5.99196V4.425H10.422Z\"\n        fill=\"white\"\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const ArbitrumIcon = ({ width = '24px', height = '24px', ...props }: IconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 42 42\" {...props}>\n      <circle cx=\"21\" cy=\"21\" r=\"21\" fill=\"#2D374B\" />\n      <path\n        d=\"M25.089 19.4942L27.7327 15.0085L34.8586 26.1072L34.8619 28.2365L34.8386 13.5798C34.8303 13.403 34.7795 13.2308 34.6907 13.0777C34.6018 12.9246 34.4774 12.7952 34.328 12.7003L21.4989 5.32125C21.3456 5.24842 21.1779 5.21102 21.0082 5.21182C20.8386 5.21262 20.6712 5.2516 20.5186 5.32587C20.479 5.34572 20.4407 5.3679 20.4037 5.39231L20.3591 5.42053L7.90602 12.6367L7.85753 12.6585C7.79299 12.6884 7.7314 12.7243 7.67359 12.7657C7.44004 12.9325 7.28088 13.1839 7.23002 13.4664C7.22223 13.5092 7.21692 13.5525 7.21411 13.5959L7.23361 25.5397L13.871 15.2522C14.7066 13.8881 16.5273 13.4487 18.2174 13.4725L20.201 13.5238L8.51275 32.2682L9.89067 33.0614L21.719 13.5426L26.9472 13.5236L15.1494 33.5342L20.0663 36.3639L20.6538 36.7018C20.9073 36.8025 21.1886 36.8081 21.4458 36.7175L34.4553 29.1783L31.9668 30.6196L25.089 19.4942ZM26.0978 34.0217L21.132 26.228L24.1631 21.0845L30.6846 31.3633L26.0978 34.0217Z\"\n        fill=\"#2D374B\"\n      />\n      <path\n        d=\"M21.1323 26.228L26.0981 34.0214L30.6851 31.363L24.1639 21.0845L21.1323 26.228Z\"\n        fill=\"#28A0F0\"\n      />\n      <path\n        d=\"M34.8623 28.2368L34.859 26.1074L27.7331 15.0087L25.0879 19.4939L31.9669 30.6193L34.4554 29.1781C34.5759 29.0804 34.6745 28.9584 34.7446 28.8201C34.8148 28.6818 34.855 28.5302 34.8626 28.3753L34.8623 28.2368Z\"\n        fill=\"#28A0F0\"\n      />\n      <path\n        d=\"M5.00171 30.2455L8.5141 32.2694L20.2024 13.5251L18.2187 13.4738C16.5286 13.4499 14.7079 13.8891 13.8723 15.2534L7.23495 25.541L5.00299 28.9718V30.2466L5.00171 30.2455Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M26.9474 13.5248L21.7195 13.5438L9.89111 33.0626L14.0254 35.4431L15.1496 33.5362L26.9474 13.5248Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M37.065 13.4979C37.0411 12.9583 36.8863 12.4327 36.614 11.9664C36.3417 11.5 35.96 11.1068 35.5019 10.8208L22.5047 3.34657C22.0407 3.11856 21.5306 3 21.0137 3C20.4967 3 19.9866 3.11856 19.5226 3.34657C19.4141 3.40121 6.88305 10.6689 6.88305 10.6689C6.70895 10.7525 6.54242 10.8511 6.38535 10.9634C5.97846 11.2528 5.64243 11.6306 5.40249 12.0684C5.16255 12.5063 5.02494 12.9928 5 13.4915V28.971L7.23196 25.5402L7.21477 13.5969C7.22521 13.4332 7.27184 13.2738 7.35129 13.1302C7.43074 12.9867 7.54104 12.8625 7.67424 12.7667C7.73325 12.7244 20.4782 5.34712 20.5188 5.32685C20.6714 5.25259 20.8387 5.21361 21.0084 5.21281C21.1781 5.21201 21.3458 5.24941 21.4991 5.32224L34.3282 12.7018C34.4776 12.7967 34.602 12.9261 34.6908 13.0792C34.7797 13.2323 34.8304 13.4045 34.8387 13.5813V28.3768C34.8356 28.5302 34.7998 28.6812 34.7337 28.8196C34.6675 28.9581 34.5726 29.0808 34.4552 29.1796L31.9667 30.6208L30.684 31.3648L26.0969 34.0232L21.4449 36.7192C21.1877 36.81 20.9064 36.8044 20.653 36.7036L15.1493 33.538L14.0251 35.4447L18.9713 38.2924C19.135 38.3852 19.2807 38.4678 19.4002 38.5351C19.5855 38.6377 19.7117 38.7082 19.7561 38.7298C20.1699 38.9111 20.6173 39.0032 21.0691 38.9999C21.4834 39.0005 21.8942 38.9232 22.28 38.7721L35.7915 30.9474C36.1727 30.6509 36.4843 30.2744 36.7042 29.8445C36.9242 29.4145 37.0471 28.9415 37.0645 28.4589L37.065 13.4979Z\"\n        fill=\"#96BEDC\"\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const FailedIcon = ({ w = '94px', h = '94px' }: IconProps) => {\n  return (\n    <Icon w={w} h={h} viewBox=\"0 0 94 94\" fill=\"none\">\n      <g filter=\"url(#filter0_d_1044_28165)\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M47 76.3333C63.2004 76.3333 76.3333 63.2004 76.3333 47C76.3333 30.7996 63.2004 17.6667 47 17.6667C30.7996 17.6667 17.6667 30.7996 17.6667 47C17.6667 63.2004 30.7996 76.3333 47 76.3333ZM47 79C64.6731 79 79 64.6731 79 47C79 29.3269 64.6731 15 47 15C29.3269 15 15 29.3269 15 47C15 64.6731 29.3269 79 47 79Z\"\n          fill=\"#FF4A60\"\n        />\n      </g>\n      <g filter=\"url(#filter1_d_1044_28165)\">\n        <path\n          d=\"M56.3334 39.5466L54.4534 37.6666L47.0001 45.12L39.5467 37.6666L37.6667 39.5466L45.1201 47L37.6667 54.4533L39.5467 56.3333L47.0001 48.88L54.4534 56.3333L56.3334 54.4533L48.8801 47L56.3334 39.5466Z\"\n          fill=\"#FF4A60\"\n        />\n      </g>\n      <defs>\n        <filter\n          id=\"filter0_d_1044_28165\"\n          x=\"0\"\n          y=\"0\"\n          width=\"94\"\n          height=\"94\"\n          filterUnits=\"userSpaceOnUse\"\n          colorInterpolationFilters=\"sRGB\"\n        >\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\n          <feColorMatrix\n            in=\"SourceAlpha\"\n            type=\"matrix\"\n            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n            result=\"hardAlpha\"\n          />\n          <feOffset />\n          <feGaussianBlur stdDeviation=\"7.5\" />\n          <feColorMatrix\n            type=\"matrix\"\n            values=\"0 0 0 0 1 0 0 0 0 0.116667 0 0 0 0 0.222667 0 0 0 0.6 0\"\n          />\n          <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow_1044_28165\" />\n          <feBlend\n            mode=\"normal\"\n            in=\"SourceGraphic\"\n            in2=\"effect1_dropShadow_1044_28165\"\n            result=\"shape\"\n          />\n        </filter>\n        <filter\n          id=\"filter1_d_1044_28165\"\n          x=\"22.6667\"\n          y=\"22.6666\"\n          width=\"48.6667\"\n          height=\"48.6666\"\n          filterUnits=\"userSpaceOnUse\"\n          colorInterpolationFilters=\"sRGB\"\n        >\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\n          <feColorMatrix\n            in=\"SourceAlpha\"\n            type=\"matrix\"\n            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n            result=\"hardAlpha\"\n          />\n          <feOffset />\n          <feGaussianBlur stdDeviation=\"7.5\" />\n          <feColorMatrix\n            type=\"matrix\"\n            values=\"0 0 0 0 1 0 0 0 0 0.116667 0 0 0 0 0.222667 0 0 0 0.6 0\"\n          />\n          <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow_1044_28165\" />\n          <feBlend\n            mode=\"normal\"\n            in=\"SourceGraphic\"\n            in2=\"effect1_dropShadow_1044_28165\"\n            result=\"shape\"\n          />\n        </filter>\n      </defs>\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const WalletIcon = ({\n  width = '20px',\n  height = '20ox',\n  color = 'whiteAlpha.700',\n  ...props\n}: IconProps) => {\n  return (\n    <Icon width={width} color={color} height={height} viewBox=\"0 0 20 20\" fill=\"none\" {...props}>\n      <path\n        d=\"M6.58154 6.2701C6.23637 6.2701 5.95654 6.54993 5.95654 6.8951C5.95654 7.24028 6.23637 7.5201 6.58154 7.5201H10.3101C10.6553 7.5201 10.9351 7.24028 10.9351 6.8951C10.9351 6.54993 10.6553 6.2701 10.3101 6.2701H6.58154Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M13.972 9.10498C13.6268 9.10498 13.347 9.38481 13.347 9.72998C13.347 10.0752 13.6268 10.355 13.972 10.355H14.1873C14.5324 10.355 14.8123 10.0752 14.8123 9.72998C14.8123 9.38481 14.5324 9.10498 14.1873 9.10498H13.972Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M17.2918 11.6311L17.2916 11.6447V12.3416C17.2916 14.6883 15.3892 16.5907 13.0426 16.5907H7.07331C4.72664 16.5907 2.82422 14.6883 2.82422 12.3416V7.38508C2.82422 5.0384 4.72664 3.13599 7.07331 3.13599H13.0426C15.3892 3.13599 17.2916 5.0384 17.2916 7.38508V7.90016L17.2918 7.91382L17.2916 7.92747V11.6174L17.2918 11.6311ZM7.07331 4.38599C5.41699 4.38599 4.07422 5.72876 4.07422 7.38508V12.3416C4.07422 13.9979 5.41699 15.3407 7.07331 15.3407H13.0426C14.6989 15.3407 16.0416 13.9979 16.0416 12.3416V12.2561H13.871C12.4998 12.2552 11.3876 11.1445 11.3867 9.77282C11.3867 8.40047 12.4998 7.28966 13.8706 7.28882H16.0401C15.9893 5.67705 14.6667 4.38599 13.0426 4.38599H7.07331ZM13.8714 11.0061H16.0416V8.53882H13.8712C13.1891 8.53932 12.6369 9.09162 12.6367 9.77223C12.6372 10.4535 13.1895 11.0056 13.8714 11.0061Z\"\n        fill=\"currentColor\"\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const LogoIcon = ({ color = 'cyan.400', width = '29', height = '21' }: IconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 29 21\" fill=\"none\" color={color}>\n      <path\n        d=\"M6.81239 5.45766C6.61525 5.22805 6.37254 5.11297 6.08372 5.11297H0.177C0.124536 5.11297 0.0816109 5.09606 0.0492845 5.06224C0.0164282 5.02898 0 4.99134 0 4.95098V0.89807C0 0.85771 0.0164282 0.820622 0.0492845 0.786807C0.0816109 0.752992 0.124536 0.736084 0.177 0.736084H6.41864C7.99362 0.736084 9.35239 1.39166 10.4944 2.70173L12.0106 4.58611L9.05721 8.25396L6.81239 5.45766ZM17.7207 2.68155C18.8627 1.38457 20.2278 0.736084 21.8161 0.736084H28.0381C28.0906 0.736084 28.1298 0.749719 28.1563 0.776444C28.1822 0.803714 28.1955 0.844074 28.1955 0.89807V4.95098C28.1955 4.99134 28.1822 5.02898 28.1563 5.06224C28.1298 5.09606 28.0906 5.11297 28.0381 5.11297H22.1314C21.8426 5.11297 21.5998 5.22805 21.4027 5.45766L17.0514 10.8479L21.4223 16.2785C21.6195 16.495 21.8553 16.603 22.1314 16.603H28.0381C28.0906 16.603 28.1298 16.6199 28.1563 16.6538C28.1822 16.6876 28.1955 16.7318 28.1955 16.7852V20.8381C28.1955 20.8785 28.1822 20.9161 28.1563 20.9494C28.1298 20.9832 28.0906 21.0001 28.0381 21.0001H21.8161C20.2278 21.0001 18.8691 20.3451 17.7403 19.0345L14.1176 14.5359L10.4944 19.0345C9.35239 20.3451 7.98727 21.0001 6.39903 21.0001H0.177C0.124536 21.0001 0.0847905 20.9832 0.0588234 20.9494C0.0323264 20.9156 0.0196078 20.8719 0.0196078 20.8174V16.7645C0.0196078 16.7241 0.0323264 16.687 0.0588234 16.6532C0.0847905 16.6194 0.124536 16.6025 0.177 16.6025H6.08372C6.35929 16.6025 6.602 16.488 6.81239 16.2578L11.0848 10.9488L17.7207 2.68155Z\"\n        fill=\"currentColor\"\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const BaseIcon = ({\n  width = '24px',\n  height = '24px',\n  fill = '#0052FF',\n  ...props\n}: IconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 24 24\" {...props}>\n      <circle cx=\"12\" cy=\"12\" r=\"12\" fill=\"white\" />\n      <g width=\"24\" height=\"24\" fill=\"white\">\n        <path\n          d=\"M11.9791 24C18.618 24 24 18.6274 24 12C24 5.37257 18.618 0 11.9791 0C5.6804 0 0.513182 4.8359 0 10.9913H15.8889V13.0087H8.6297e-08C0.513182 19.1641 5.6804 24 11.9791 24Z\"\n          fill={fill as string}\n        />\n      </g>\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\ninterface DiscordIcon extends IconProps {\n  fill?: string;\n}\n\nexport const DiscordIcon = ({ width = '15px', height = '15px', ...props }: DiscordIcon) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 24 24\" fill=\"none\" {...props}>\n      <path\n        d=\"M9.84893 10.3091C9.247 10.3091 8.77179 10.8341 8.77179 11.4746C8.77179 12.1151 9.25756 12.6401 9.84893 12.6401C10.4509 12.6401 10.9261 12.1151 10.9261 11.4746C10.9366 10.8341 10.4509 10.3091 9.84893 10.3091ZM13.7034 10.3091C13.1015 10.3091 12.6263 10.8341 12.6263 11.4746C12.6263 12.1151 13.112 12.6401 13.7034 12.6401C14.3053 12.6401 14.7806 12.1151 14.7806 11.4746C14.7806 10.8341 14.3053 10.3091 13.7034 10.3091Z\"\n        fill=\"#FEFEFF\"\n      />\n      <path\n        d=\"M18.8354 1.49976H4.68468C3.49138 1.49976 2.51984 2.46578 2.51984 3.6628V17.8591C2.51984 19.0561 3.49138 20.0222 4.68468 20.0222H16.66L16.1003 18.0796L17.452 19.3291L18.7298 20.5052L21.0002 22.5002V3.6628C21.0002 2.46578 20.0287 1.49976 18.8354 1.49976ZM14.7591 15.2131C14.7591 15.2131 14.379 14.7615 14.0622 14.3625C15.4456 13.974 15.9736 13.113 15.9736 13.113C15.5406 13.3965 15.1288 13.596 14.7591 13.7325C14.2311 13.953 13.7242 14.1 13.2279 14.184C12.2141 14.373 11.2848 14.3205 10.4928 14.1735C9.89088 14.058 9.37343 13.89 8.94046 13.722C8.69757 13.6275 8.43357 13.512 8.16956 13.365C8.13788 13.344 8.1062 13.3335 8.07452 13.3125C8.0534 13.302 8.04284 13.2915 8.03228 13.281C7.84219 13.176 7.73659 13.1025 7.73659 13.1025C7.73659 13.1025 8.24348 13.9425 9.58463 14.3415C9.26782 14.7405 8.8771 15.2131 8.8771 15.2131C6.54328 15.1396 5.65623 13.617 5.65623 13.617C5.65623 10.2359 7.1769 7.49539 7.1769 7.49539C8.69757 6.36136 10.1443 6.39286 10.1443 6.39286L10.2499 6.51887C8.34908 7.06488 7.47258 7.8944 7.47258 7.8944C7.47258 7.8944 7.70491 7.76839 8.09564 7.58989C9.22558 7.09638 10.1232 6.95988 10.4928 6.92838C10.5562 6.91788 10.609 6.90737 10.6723 6.90737C11.3165 6.82337 12.0452 6.80237 12.8055 6.88637C13.8087 7.00188 14.8859 7.29588 15.9841 7.8944C15.9841 7.8944 15.1499 7.10688 13.3546 6.56087L13.5025 6.39286C13.5025 6.39286 14.9492 6.36136 16.4699 7.49539C16.4699 7.49539 17.9906 10.2359 17.9906 13.617C17.9906 13.617 17.093 15.1396 14.7591 15.2131Z\"\n        fill=\"#FEFEFF\"\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const XIcon = ({ ...props }: IconProps) => {\n  return (\n    <Icon viewBox=\"0 0 24 24\" fill=\"none\" {...props}>\n      <g clipPath=\"url(#clip0_14230_11024)\">\n        <path\n          d=\"M10.573 13.5844L4.98887 20.25H6.31212L11.1608 14.4623L15.0334 20.25H19.5L13.6438 11.498L19.5 4.50809H18.1767L13.0564 10.6201L8.9666 4.50809H4.5L10.5733 13.5844H10.573ZM12.3854 11.4209L12.9788 12.2924L17.6999 19.227H15.6673L11.8573 13.6306L11.264 12.7591L6.3115 5.48454H8.34405L12.3854 11.4206V11.4209Z\"\n          fill=\"white\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_14230_11024\">\n          <rect width=\"15\" height=\"15.75\" fill=\"white\" transform=\"matrix(-1 0 0 -1 19.5 20.25)\" />\n        </clipPath>\n      </defs>\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const GithubIcon = ({ ...props }: IconProps) => {\n  return (\n    <Icon viewBox=\"0 0 24 24\" fill=\"none\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M12.0002 2.25049C6.61603 2.25049 2.25058 6.72675 2.25058 12.2476C2.25058 16.6642 5.04356 20.4121 8.91822 21.7331C9.40578 21.8258 9.58498 21.5163 9.58498 21.2514C9.58498 21.013 9.57529 20.2251 9.57207 19.3907C6.85819 19.995 6.28668 18.2121 6.28668 18.2121C5.84271 17.0566 5.20501 16.7487 5.20501 16.7487C4.32029 16.1279 5.2712 16.1411 5.2712 16.1411C6.24955 16.2123 6.76617 17.1708 6.76617 17.1708C7.63635 18.6988 9.04737 18.2568 9.60274 18.0018C9.68992 17.3562 9.94339 16.9142 10.2211 16.6642C8.05611 16.411 5.77975 15.5535 5.77975 11.7245C5.77975 10.6335 6.16075 9.74127 6.78393 9.04103C6.68222 8.7894 6.34964 7.77297 6.87757 6.39566C6.87757 6.39566 7.69609 6.12749 9.55915 7.42037C10.3373 7.19854 11.1704 7.08763 12.0002 7.08432C12.8284 7.08763 13.6631 7.19854 14.4428 7.42037C16.3043 6.12749 17.1212 6.39566 17.1212 6.39566C17.6523 7.77297 17.3181 8.7894 17.2164 9.04103C17.8412 9.74127 18.219 10.6335 18.219 11.7245C18.219 15.5634 15.9378 16.4093 13.768 16.6576C14.1183 16.9672 14.4299 17.5764 14.4299 18.5084C14.4299 19.846 14.4186 20.922 14.4186 21.2514C14.4186 21.5179 14.5946 21.8292 15.0886 21.7315C18.96 20.4088 21.7498 16.6626 21.7498 12.2476C21.7498 6.72675 17.3843 2.25049 12.0002 2.25049Z\"\n        fill=\"#FEFEFF\"\n      />\n      <path\n        d=\"M5.94295 16.6031C5.92196 16.6527 5.84447 16.6676 5.77505 16.6328C5.70401 16.5997 5.66526 16.5319 5.68787 16.4822C5.70885 16.4309 5.78473 16.4176 5.85577 16.4508C5.9268 16.4855 5.96716 16.5534 5.94295 16.6031Z\"\n        fill=\"#FEFEFF\"\n      />\n      <path\n        d=\"M6.33886 17.055C6.29204 17.0997 6.20163 17.0782 6.14028 17.0086C6.0757 16.9391 6.0644 16.8464 6.11122 16.8017C6.15965 16.757 6.24683 16.7785 6.31141 16.8481C6.37437 16.9176 6.38729 17.0103 6.33886 17.055Z\"\n        fill=\"#FEFEFF\"\n      />\n      <path\n        d=\"M6.72318 17.6313C6.66345 17.6743 6.56497 17.6346 6.50523 17.5452C6.4455 17.4558 6.4455 17.3498 6.50685 17.3068C6.56658 17.2638 6.66345 17.3018 6.7248 17.3912C6.78453 17.4806 6.78453 17.5882 6.72318 17.6313Z\"\n        fill=\"#FEFEFF\"\n      />\n      <path\n        d=\"M7.24861 18.1876C7.19533 18.2488 7.08071 18.2323 6.99837 18.1495C6.91281 18.0684 6.8902 17.9542 6.94348 17.8946C6.99837 17.8333 7.11138 17.8515 7.19533 17.9326C7.27928 18.0121 7.30512 18.128 7.24861 18.1876Z\"\n        fill=\"#FEFEFF\"\n      />\n      <path\n        d=\"M7.97585 18.5102C7.95164 18.588 7.84185 18.6244 7.73207 18.5913C7.62229 18.5565 7.54964 18.4655 7.57224 18.386C7.59484 18.3066 7.70463 18.2702 7.81602 18.3049C7.92742 18.3397 7.99846 18.4307 7.97585 18.5102Z\"\n        fill=\"#FEFEFF\"\n      />\n      <path\n        d=\"M8.77338 18.5695C8.77661 18.6523 8.68297 18.7202 8.56673 18.7218C8.45049 18.7251 8.35524 18.6573 8.35524 18.5762C8.35524 18.4934 8.44726 18.4255 8.5635 18.4239C8.67813 18.4222 8.77338 18.4884 8.77338 18.5695Z\"\n        fill=\"#FEFEFF\"\n      />\n      <path\n        d=\"M9.51542 18.4407C9.52995 18.5218 9.44923 18.6029 9.33299 18.6261C9.21998 18.6476 9.11504 18.598 9.10051 18.5185C9.08598 18.4357 9.16832 18.353 9.28133 18.3314C9.39757 18.3099 9.50089 18.3596 9.51542 18.4407Z\"\n        fill=\"#FEFEFF\"\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const WarpcastIcon = ({ ...props }: IconProps) => {\n  return (\n    <Icon viewBox=\"0 0 24 24\" fill=\"none\" {...props}>\n      <g clipPath=\"url(#clip0_14230_11037)\">\n        <path\n          d=\"M6.52381 7.30209C7.07677 9.37496 7.54202 11.0837 7.55756 11.0993C7.57316 11.1148 7.90732 9.92686 8.30024 8.45929L9.32137 4.64551L9.62823 3.5H12.0094C13.3191 3.5 14.3906 3.51182 14.3906 3.52623C14.3906 3.54974 16.36 10.9554 16.4034 11.0949C16.4133 11.1268 16.8207 9.64756 17.3088 7.80784C17.7969 5.96812 18.2549 4.24627 18.3265 3.98145L18.4566 3.5H21.1385C22.6135 3.5 23.8214 3.52245 23.8226 3.5498C23.8239 3.57716 22.7107 7.40183 21.349 12.0491L18.873 20.4985L16.5341 20.4993L14.1951 20.5L14.0945 20.1514C14.0392 19.9597 13.5453 18.2065 12.9969 16.2554C12.4485 14.3044 11.9924 12.7011 11.9833 12.6925C11.9742 12.6839 11.4737 14.4369 10.8711 16.5881L9.77539 20.4994L7.43902 20.4997C5.27152 20.5 5.10012 20.4916 5.06752 20.3838C5.04813 20.3199 3.93934 16.5472 2.60352 12C1.26769 7.45283 0.15877 3.67976 0.139312 3.61548C0.105777 3.50491 0.252535 3.49947 2.8111 3.51587L5.51842 3.5332L6.52381 7.30209Z\"\n          fill=\"white\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_14230_11037\">\n          <rect width=\"24\" height=\"24\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const YoutubeIcon = ({ ...props }: IconProps) => {\n  return (\n    <Icon viewBox=\"0 0 24 24\" fill=\"none\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M20.3943 4.94354C21.3075 5.18802 22.0253 5.90572 22.2697 6.81901C22.7115 8.47269 22.7133 11.925 22.7133 11.925C22.7133 11.925 22.7133 15.3773 22.2697 17.031C22.0253 17.9443 21.3075 18.662 20.3943 18.9064C18.7406 19.35 12.1066 19.35 12.1066 19.35C12.1066 19.35 5.47269 19.35 3.819 18.9064C2.90572 18.662 2.18802 17.9443 1.94354 17.031C1.5 15.3773 1.5 11.925 1.5 11.925C1.5 11.925 1.5 8.47269 1.94354 6.81901C2.18802 5.90572 2.90572 5.18802 3.819 4.94354C5.47269 4.5 12.1066 4.5 12.1066 4.5C12.1066 4.5 18.7406 4.5 20.3943 4.94354ZM15.4944 11.9254L9.98331 15.107V8.74375L15.4944 11.9254Z\"\n        fill=\"white\"\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const Sparkles = ({ ...props }: IconProps) => {\n  return (\n    <Icon width=\"15\" height=\"14\" viewBox=\"0 0 15 14\" fill=\"none\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M5.75 3.30322C5.93307 3.30322 6.09678 3.41547 6.16031 3.58454L7.03581 5.91453L9.40183 6.7767C9.57352 6.83926 9.6875 7.00048 9.6875 7.18076C9.6875 7.36104 9.57352 7.52226 9.40183 7.58482L7.03581 8.44699L6.16031 10.777C6.09678 10.9461 5.93307 11.0583 5.75 11.0583C5.56693 11.0583 5.40322 10.9461 5.33969 10.777L4.46419 8.44699L2.09817 7.58482C1.92648 7.52226 1.8125 7.36104 1.8125 7.18076C1.8125 7.00048 1.92648 6.83926 2.09817 6.7767L4.46419 5.91453L5.33969 3.58454C5.40322 3.41547 5.56693 3.30322 5.75 3.30322ZM5.75 4.97554L5.21499 6.39936C5.17068 6.51728 5.07626 6.61026 4.95651 6.6539L3.51067 7.18076L4.95651 7.70762C5.07626 7.75126 5.17068 7.84424 5.21499 7.96217L5.75 9.38598L6.28501 7.96217C6.32932 7.84424 6.42374 7.75126 6.54349 7.70762L7.98933 7.18076L6.54349 6.6539C6.42374 6.61026 6.32932 6.51728 6.28501 6.39936L5.75 4.97554Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M5.21499 6.39936L5.75 4.97554L6.28501 6.39936C6.32932 6.51728 6.42374 6.61026 6.54349 6.6539L7.98933 7.18076L6.54349 7.70762C6.42374 7.75126 6.32932 7.84424 6.28501 7.96217L5.75 9.38598L5.21499 7.96217C5.17068 7.84424 5.07626 7.75126 4.95651 7.70762L3.51067 7.18076L4.95651 6.6539C5.07626 6.61026 5.17068 6.51728 5.21499 6.39936Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M11.4103 2.14851C11.3468 1.97943 11.1831 1.86719 11 1.86719C10.8169 1.86719 10.6532 1.97943 10.5897 2.14851L10.1868 3.2206L9.09817 3.61731C8.92648 3.67988 8.8125 3.8411 8.8125 4.02138C8.8125 4.20166 8.92648 4.36287 9.09817 4.42544L10.1868 4.82215L10.5897 5.89424C10.6532 6.06332 10.8169 6.17556 11 6.17556C11.1831 6.17556 11.3468 6.06332 11.4103 5.89424L11.8132 4.82215L12.9018 4.42544C13.0735 4.36287 13.1875 4.20166 13.1875 4.02138C13.1875 3.8411 13.0735 3.67988 12.9018 3.61731L11.8132 3.2206L11.4103 2.14851Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M11.4103 8.46736C11.3468 8.29828 11.1831 8.18604 11 8.18604C10.8169 8.18604 10.6532 8.29828 10.5897 8.46736L10.1868 9.53945L9.09817 9.93616C8.92648 9.99872 8.8125 10.1599 8.8125 10.3402C8.8125 10.5205 8.92648 10.6817 9.09817 10.7443L10.1868 11.141L10.5897 12.2131C10.6532 12.3822 10.8169 12.4944 11 12.4944C11.1831 12.4944 11.3468 12.3822 11.4103 12.2131L11.8132 11.141L12.9018 10.7443C13.0735 10.6817 13.1875 10.5205 13.1875 10.3402C13.1875 10.1599 13.0735 9.99872 12.9018 9.93616L11.8132 9.53945L11.4103 8.46736Z\"\n        fill=\"white\"\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const SNXChainIcon = ({ ...props }: IconProps) => {\n  return (\n    <Icon width=\"178px\" height=\"178px\" viewBox=\"0 0 178 178\" fill=\"none\" {...props}>\n      <circle cx=\"89.0198\" cy=\"88.4095\" r=\"88.305\" fill=\"#06061B\" />\n      <path\n        d=\"M68.0815 75.158C67.5149 74.5153 66.8174 74.1932 65.9874 74.1932H49.0126C48.8618 74.1932 48.7384 74.1459 48.6455 74.0512C48.5511 73.9581 48.5039 73.8528 48.5039 73.7398V62.3958C48.5039 62.2828 48.5511 62.179 48.6455 62.0844C48.7384 61.9897 48.8618 61.9424 49.0126 61.9424H66.9499C71.4761 61.9424 75.381 63.7773 78.6629 67.4442L83.0201 72.7185L74.5327 82.9848L68.0815 75.158ZM99.4299 67.3877C102.712 63.7575 106.635 61.9424 111.199 61.9424H129.08C129.231 61.9424 129.344 61.9805 129.42 62.0553C129.495 62.1317 129.533 62.2446 129.533 62.3958V73.7398C129.533 73.8528 129.495 73.9581 129.42 74.0512C129.344 74.1459 129.231 74.1932 129.08 74.1932H112.105C111.275 74.1932 110.578 74.5153 110.011 75.158L97.5064 90.2452L110.068 105.445C110.634 106.051 111.312 106.354 112.105 106.354H129.08C129.231 106.354 129.344 106.401 129.42 106.496C129.495 106.59 129.533 106.714 129.533 106.864V118.208C129.533 118.321 129.495 118.426 129.42 118.519C129.344 118.614 129.231 118.661 129.08 118.661H111.199C106.635 118.661 102.73 116.828 99.4863 113.159L89.0754 100.568L78.6629 113.159C75.381 116.828 71.4578 118.661 66.8936 118.661H49.0126C48.8618 118.661 48.7476 118.614 48.673 118.519C48.5968 118.424 48.5603 118.302 48.5603 118.15V106.806C48.5603 106.693 48.5968 106.589 48.673 106.494C48.7476 106.399 48.8618 106.352 49.0126 106.352H65.9874C66.7793 106.352 67.4768 106.032 68.0815 105.387L80.3595 90.5276L99.4299 67.3877Z\"\n        fill=\"#00D1FF\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M1.62306 101.122C1.02459 96.9706 0.714844 92.7262 0.714844 88.4095C0.714844 85.5803 0.84789 82.7823 1.10807 80.0212L11.5198 67.3877C14.8017 63.7575 18.7248 61.9424 23.2891 61.9424H41.1701C41.3209 61.9424 41.4336 61.9805 41.5097 62.0553C41.5844 62.1317 41.6224 62.2446 41.6224 62.3958V73.7398C41.6224 73.8528 41.5844 73.9581 41.5097 74.0512C41.4336 74.1459 41.3209 74.1932 41.1701 74.1932H24.1953C23.3653 74.1932 22.6678 74.5153 22.1012 75.158L9.59627 90.2452L22.1576 105.445C22.7241 106.051 23.4018 106.354 24.1953 106.354H41.1701C41.3209 106.354 41.4336 106.401 41.5097 106.496C41.5844 106.59 41.6224 106.714 41.6224 106.864V118.208C41.6224 118.321 41.5844 118.426 41.5097 118.519C41.4336 118.614 41.3209 118.661 41.1701 118.661H23.2891C18.7248 118.661 14.82 116.828 11.5761 113.159L1.62306 101.122Z\"\n        fill=\"#00D1FF\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M176.393 101.284C177.007 97.0816 177.325 92.7827 177.325 88.4095C177.325 85.5791 177.192 82.7799 176.931 80.0176L168.27 90.5276L155.992 105.387C155.387 106.032 154.689 106.352 153.898 106.352H136.923C136.772 106.352 136.658 106.399 136.583 106.494C136.507 106.589 136.47 106.693 136.47 106.806V118.15C136.47 118.302 136.507 118.424 136.583 118.519C136.658 118.614 136.772 118.661 136.923 118.661H154.804C159.368 118.661 163.291 116.828 166.573 113.159L176.393 101.284ZM153.898 74.1932C154.728 74.1932 155.425 74.5153 155.992 75.158L162.443 82.9848L170.93 72.7185L166.573 67.4442C163.291 63.7773 159.386 61.9424 154.86 61.9424H136.923C136.772 61.9424 136.649 61.9897 136.556 62.0844C136.461 62.179 136.414 62.2828 136.414 62.3958V73.7398C136.414 73.8528 136.461 73.9581 136.556 74.0512C136.649 74.1459 136.772 74.1932 136.923 74.1932H153.898Z\"\n        fill=\"#00D1FF\"\n      />\n    </Icon>\n  );\n};\n","import Wei, { wei } from '@synthetixio/wei';\nimport React, { createContext, useState, PropsWithChildren, Dispatch, SetStateAction } from 'react';\n\nexport const ManagePositionContext = createContext<{\n  collateralChange: Wei;\n  debtChange: Wei;\n  withdrawAmount: Wei;\n  setDebtChange: Dispatch<SetStateAction<Wei>>;\n  setCollateralChange: Dispatch<SetStateAction<Wei>>;\n  setWithdrawAmount: Dispatch<SetStateAction<Wei>>;\n}>({\n  collateralChange: wei(0),\n  debtChange: wei(0),\n  withdrawAmount: wei(0),\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  setDebtChange: () => {},\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  setCollateralChange: () => {},\n  setWithdrawAmount: () => {},\n});\n\nexport const ManagePositionProvider: React.FC<PropsWithChildren> = ({ children }) => {\n  const [debtChange, setDebtChange] = useState(wei(0));\n  const [collateralChange, setCollateralChange] = useState(wei(0));\n  const [withdrawAmount, setWithdrawAmount] = useState(wei(0));\n\n  return (\n    <ManagePositionContext.Provider\n      value={{\n        debtChange,\n        setDebtChange,\n        collateralChange,\n        setCollateralChange,\n        withdrawAmount,\n        setWithdrawAmount,\n      }}\n    >\n      {children}\n    </ManagePositionContext.Provider>\n  );\n};\n","import type { MarketSnapshotByWeekSchema, PoolType } from '@snx-v3/usePoolData';\nimport { z } from 'zod';\nimport { wei, Wei } from '@synthetixio/wei';\nimport { ZEROWEI } from '@snx-v3/constants';\n\ntype MarketSnapshotByWeek = z.infer<typeof MarketSnapshotByWeekSchema>;\n\nexport const calculateSevenDaysPnlGrowth = (marketSnapshots?: MarketSnapshotByWeek[]) => {\n  if (!marketSnapshots || marketSnapshots.length === 0) return undefined;\n  const end = marketSnapshots[0].pnl;\n  const start = marketSnapshots[1]?.pnl || wei(0);\n\n  return {\n    value: end.sub(start),\n    percentage: start.eq(0) ? undefined : end.sub(start).div(start.abs()),\n  };\n};\n\nexport const calculatePoolPerformanceLifetime = (poolData?: PoolType) => {\n  return poolData?.configurations.reduce((acc, { market }) => {\n    return acc.add(market.pnl);\n  }, wei(0));\n};\n\nexport const calculatePoolPerformanceSevenDays = (poolData?: PoolType) => {\n  const total = calculatePoolPerformanceLifetime(poolData);\n\n  const totalSevenDaysAgo = poolData?.configurations.reduce((acc, { market }) => {\n    return acc.add(market.market_snapshots_by_week[1]?.pnl || wei(0));\n  }, wei(0));\n\n  if (!total || !totalSevenDaysAgo) {\n    return undefined;\n  }\n\n  return {\n    value: total.sub(totalSevenDaysAgo), // Not that this value does not take into account that other pools might have exposure to markets\n    growthPercentage: totalSevenDaysAgo.eq(0)\n      ? undefined\n      : total.sub(totalSevenDaysAgo).div(totalSevenDaysAgo.abs()),\n  };\n};\n\nexport const calculateCRatio = (debt: Wei, collateralValue: Wei) =>\n  debt.eq(0) || collateralValue.eq(0) ? ZEROWEI : collateralValue.div(debt);\n","import { constants } from 'ethers';\nimport Wei from '@synthetixio/wei';\n\nexport const LOCAL_STORAGE_KEYS = {\n  SHOW_TESTNETS: 'SHOW_TESTNETS',\n};\nexport const ZEROWEI = new Wei(0);\nexport const ONEWEI = new Wei(1);\nexport const MAXUINT = new Wei(constants.MaxUint256);\n\nexport const GWEI_DECIMALS = 9;\nexport const GAS_LIMIT_MULTIPLIER = 1.5;\n\nexport const DEFAULT_QUERY_REFRESH_INTERVAL = 600_000; // 10min\nexport const DEFAULT_QUERY_STALE_TIME = 300_000; // 5min\n\nexport const INFURA_KEY = process.env.INFURA_KEY || '8678fe160b1f4d45ad3f3f71502fc57b';\nexport const ONBOARD_KEY = 'sec_jykTuCK0ZuqXWf3wNYqizxs2';\n\nexport const getSubgraphUrl = (networkName = 'optimism-mainnet') => {\n  switch (networkName) {\n    case 'mainnet':\n      return 'https://subgraph.satsuma-prod.com/ce5e03f52f3b/synthetix/synthetix-mainnet/api';\n    case 'sepolia':\n      return 'https://subgraph.satsuma-prod.com/ce5e03f52f3b/synthetix/synthetix-sepolia/api';\n    case 'optimism-mainnet':\n      return 'https://subgraph.satsuma-prod.com/ce5e03f52f3b/synthetix/synthetix-optimism-mainnet/api';\n    case 'arbitrum':\n      return `https://subgraph.satsuma-prod.com/ce5e03f52f3b/synthetix/synthetix-arbitrum-mainnet/api`;\n    case 'base-sepolia':\n      return 'https://subgraph.satsuma-prod.com/ce5e03f52f3b/synthetix/synthetix-base-sepolia-andromeda/api';\n    case 'base':\n      return 'https://subgraph.satsuma-prod.com/ce5e03f52f3b/synthetix/synthetix-base-mainnet-andromeda/api';\n    default:\n      return `https://subgraph.satsuma-prod.com/ce5e03f52f3b/synthetix/synthetix-${networkName}/api`;\n  }\n};\n\nexport const getAprUrl = (networkId = 8453) => {\n  switch (networkId) {\n    case 1:\n      return 'https://api.synthetix.io/v3/mainnet/sc-pool-apy-all';\n    case 8453:\n      return 'https://api.synthetix.io/v3/base/sc-pool-apy-all';\n    case 42161:\n      return 'https://api.synthetix.io/v3/arbitrum/sc-pool-apy-all';\n    default:\n      return `https://api.synthetix.io/v3/base/sc-pool-apy-all`;\n  }\n};\n\nexport const SESSION_STORAGE_KEYS = {\n  TERMS_CONDITIONS_ACCEPTED: 'TERMS_CONDITIONS_ACCEPTED',\n};\n\nexport const offchainMainnetEndpoint =\n  process.env.PYTH_MAINNET_ENDPOINT || 'https://hermes.pyth.network';\n\nexport const offchainTestnetEndpoint =\n  process.env.PYTH_TESTNET_ENDPOINT || 'https://hermes.pyth.network';\n","export function etherscanLink({\n  chain,\n  address,\n  isTx = false,\n}: {\n  chain: string;\n  address: string;\n  isTx?: boolean;\n}): string {\n  switch (chain) {\n    case 'sepolia':\n      return `https://sepolia.etherscan.io/${isTx ? 'tx' : 'address'}/${address}`;\n    case 'arbitrum':\n      return `https://arbiscan.io/${isTx ? 'tx' : 'address'}/${address}`;\n    case 'optimism':\n      return `https://optimistic.etherscan.io/${isTx ? 'tx' : 'address'}/${address}`;\n    case 'base':\n      return `https://basescan.org/${isTx ? 'tx' : 'address'}/${address}`;\n    case 'base-sepolia':\n      return `https://sepolia.basescan.org/${isTx ? 'tx' : 'address'}/${address}`;\n    case 'mainnet':\n    default:\n      return `https://etherscan.io/${isTx ? 'tx' : 'address'}/${address}`;\n  }\n}\n","import { offchainMainnetEndpoint, offchainTestnetEndpoint } from '@snx-v3/constants';\nimport { EvmPriceServiceConnection } from '@pythnetwork/pyth-evm-js';\nimport { ethers, PopulatedTransaction, BigNumber } from 'ethers';\nimport { Wei } from '@synthetixio/wei';\n\nexport const fetchPriceUpdates = async (\n  requestedPriceUpdates: { priceFeedId: string; stalenessTolerance: Wei }[],\n  isTestnet: boolean\n) => {\n  if (requestedPriceUpdates.length === 0) return [];\n  const priceService = new EvmPriceServiceConnection(\n    isTestnet ? offchainTestnetEndpoint : offchainMainnetEndpoint\n  );\n  const signedPricesData = await priceService.getPriceFeedsUpdateData(\n    requestedPriceUpdates.map(({ priceFeedId }) => priceFeedId)\n  );\n\n  return signedPricesData.map((signedOffchainData, i) => {\n    const updateType = 1; // todo can I fetch this?\n\n    const { priceFeedId, stalenessTolerance } = requestedPriceUpdates[i];\n    return ethers.utils.defaultAbiCoder.encode(\n      ['uint8', 'uint64', 'bytes32[]', 'bytes[]'],\n      [updateType, stalenessTolerance.toBN(), [priceFeedId], [signedOffchainData]]\n    );\n  });\n};\n\nexport const priceUpdatesToPopulatedTx = (\n  from: string,\n  oracleAddresses: { address: string }[],\n  signedOffchainData: string[]\n) => {\n  if (oracleAddresses.length !== signedOffchainData.length) {\n    throw new Error('oracleAddresses and signedOffchainData must be the same length');\n  }\n  return signedOffchainData.map((signedOffchainDatum, i) => {\n    const tx: PopulatedTransaction = {\n      to: oracleAddresses[i].address,\n      from: from,\n      data: new ethers.utils.Interface([\n        'function fulfillOracleQuery(bytes calldata signedOffchainData) payable external',\n      ]).encodeFunctionData('fulfillOracleQuery', [signedOffchainDatum]),\n      // We set the value to 1 wei to avoid FeeRequired error from pyth, it's quite nice that their fee seems to be the lowest denominator on every network.\n      // If this ever changes, things wont break, but become slower.\n      value: BigNumber.from(1),\n    };\n    return tx;\n  });\n};\n","import { BigNumberish, utils } from 'ethers';\nimport { wei, WeiSource } from '@synthetixio/wei';\n\nexport const formatValue = (value: BigNumberish, decimals = 18) =>\n  parseFloat(utils.formatUnits(value, decimals));\n\nexport const parseUnits = (value: WeiSource, decimals = 18) => wei(value, decimals).toBN();\n\nexport const compareAddress = (add1: string | null = '', add2: string | null = '') =>\n  !!add1 && !!add2 && add1.toLowerCase() === add2.toLowerCase();\n\nexport const prettyString = (text: string, startLength = 6, endLength = 4) => {\n  if (text.length <= startLength + endLength) {\n    return text;\n  }\n  return `${text.substring(0, startLength)}...${text.substring(text.length - endLength)}`;\n};\n","import { Wei } from '@synthetixio/wei';\n\nexport function currency(\n  value: Wei,\n  options?: Intl.NumberFormatOptions,\n  minimumDigitsToShowAfterZeros = 2\n) {\n  try {\n    const stringValue = value.toString();\n    const numberValue = value.toNumber();\n\n    const decimals =\n      numberValue < 0\n        ? -numberValue - Math.floor(-numberValue)\n        : numberValue - Math.floor(numberValue);\n    const zeroDecimals = decimals !== 0 ? -Math.floor(Math.log10(decimals) + 1) : 0;\n\n    const maximumFractionDigits = zeroDecimals + minimumDigitsToShowAfterZeros;\n\n    return isNaN(numberValue)\n      ? stringValue\n      : numberValue.toLocaleString('en-US', {\n          minimumFractionDigits: 0,\n          maximumFractionDigits,\n          ...options,\n        });\n  } catch (error) {\n    return value + '';\n  }\n}\n","export function numberWithCommas(value: string, decimals?: number) {\n  const parts = value.split('.');\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  const joinedParts = parts.join('.');\n  return decimals ? joinedParts.substring(0, joinedParts.indexOf('.') + decimals + 1) : joinedParts;\n}\n\ninterface Options extends Intl.NumberFormatOptions {\n  locales?: string | string[];\n}\nexport const formatNumberToUsd = (val: number | string, options?: Options) => {\n  const optionsWithDefault = { style: 'currency', currency: 'USD', locales: 'en-EN', ...options };\n  return new Intl.NumberFormat(optionsWithDefault.locales, optionsWithDefault).format(Number(val));\n};\n\nexport const formatNumberToCurrencyBasedOnSize = (val: number | string) => {\n  const num = Number(val);\n  if (num < 0.0001) {\n    return formatNumberToUsd(num, { maximumFractionDigits: 8 });\n  }\n  if (num < 1) {\n    return formatNumberToUsd(num, { maximumFractionDigits: 4 });\n  }\n  return formatNumberToUsd(num, { maximumFractionDigits: 2 });\n};\n\nexport const formatNumber = (value: number | string, options?: Options) => {\n  const optionsWithDefault = {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n    locales: 'en-EN',\n    ...options,\n  };\n  return new Intl.NumberFormat(optionsWithDefault.locales, optionsWithDefault).format(\n    Number(value)\n  );\n};\n\nexport const formatPercent = (value: number | string, options?: Options) => {\n  const optionsWithDefault = {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2,\n    locales: 'en-EN',\n    style: 'percent',\n    ...options,\n  };\n  return new Intl.NumberFormat(optionsWithDefault.locales, optionsWithDefault).format(\n    Number(value)\n  );\n};\n","export const isBaseAndromeda = (id?: number | string, preset?: string) =>\n  (id?.toString() === '8453' || '84532') && preset === 'andromeda';\n\nexport function getRepayerContract(id?: number) {\n  switch (id) {\n    case 8453:\n      return '0xBD8004ea5c73E33d405d35d594221Efc733F7E37';\n    case 84532:\n      return '0xD00a601eafC2C131F46105827AFB02b925Adf62A';\n    default:\n      return '';\n  }\n}\n\nexport function getSpotMarketId(collateralSymbol?: string) {\n  switch (collateralSymbol?.toLowerCase()) {\n    case 'usdc':\n    case 'susdc':\n      return USDC_BASE_MARKET;\n\n    case 'statausdc':\n    case 'sstatausdc':\n      return STATA_BASE_MARKET;\n\n    default:\n      return USDC_BASE_MARKET;\n  }\n}\n\nexport const USDC_BASE_MARKET = '1';\nexport const STATA_BASE_MARKET = '3';\n","import { Hex } from 'viem';\n\nexport function parseTxError(error: any): Hex | undefined {\n  try {\n    if (error.cause?.data) {\n      return error.cause?.data;\n    }\n    if (error.cause?.cause?.data) {\n      return error.cause?.cause?.data;\n    }\n    if (error.cause?.cause?.cause?.data) {\n      return error.cause?.cause?.cause?.data;\n    }\n    if (error.cause?.cause?.error?.data) {\n      return error.cause?.cause?.error?.data;\n    }\n    if (error.cause?.cause?.cause?.error?.data) {\n      return error.cause?.cause?.cause?.error?.data;\n    }\n    if (error?.error?.error?.data) {\n      return error?.error?.error?.data;\n    }\n  } catch (err) {\n    console.error('exception error parser:', err);\n  }\n}\n","// This is a type guard function that checks if a value is not null and not undefined.\n// This is useful when filtering an array that might have null or undefined values.\nexport const notNil = <T>(x: T | null | undefined): x is T => x !== null && x !== undefined;\n","export function stringToHash(s: string | undefined) {\n  return (s || '').split('').reduce(function (a, b) {\n    a = (a << 5) - a + b.charCodeAt(0);\n    return a & a;\n  }, 0);\n}\n","export type TransactionStatus = 'unsent' | 'prompting' | 'pending' | 'success' | 'error';\n\ntype TxnState = {\n  error: Error | null;\n  modalOpen: boolean;\n  txnStatus: TransactionStatus;\n  txnHash: string | null;\n};\n\nexport const initialState: TxnState = {\n  error: null,\n  modalOpen: false,\n  txnStatus: 'unsent',\n  txnHash: null,\n};\n\nexport type Actions =\n  | { type: 'prompting' }\n  | { type: 'pending'; payload: { txnHash: string } }\n  | { type: 'success' }\n  | { type: 'error'; payload: { error: Error } }\n  | { type: 'settled' };\n\nexport function reducer(state: TxnState, action: Actions): TxnState {\n  switch (action.type) {\n    case 'prompting':\n      return {\n        ...state,\n        txnStatus: 'prompting',\n        modalOpen: true,\n        error: null,\n      };\n\n    case 'pending':\n      return {\n        ...state,\n        txnStatus: 'pending',\n        txnHash: action.payload.txnHash,\n      };\n\n    case 'success':\n      return {\n        ...state,\n        txnStatus: 'success',\n      };\n\n    case 'error':\n      return {\n        ...state,\n        txnStatus: 'error',\n        error: action.payload.error,\n      };\n\n    case 'settled':\n      return {\n        ...state,\n        modalOpen: false,\n        txnStatus: 'unsent',\n        error: null,\n        txnHash: null,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { stringToHash } from '@snx-v3/tsHelpers';\nimport { useDefaultProvider, useNetwork } from '@snx-v3/useBlockchain';\nimport { useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { erc7412Call } from '@snx-v3/withERC7412';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { Wei, wei } from '@synthetixio/wei';\nimport { useQuery } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\nimport { useAllCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\n\nexport type AccountCollateralType = {\n  tokenAddress: string;\n  availableCollateral: Wei;\n  totalAssigned: Wei;\n  totalDeposited: Wei;\n  totalLocked: Wei;\n  symbol: string;\n  displaySymbol: string;\n};\n\nexport const loadAccountCollateral = async ({\n  accountId,\n  tokenAddresses,\n  CoreProxy,\n}: {\n  accountId: string;\n  tokenAddresses: string[];\n  CoreProxy: ethers.Contract;\n}) => {\n  const callsP = tokenAddresses.flatMap((tokenAddress) => [\n    CoreProxy.populateTransaction.getAccountAvailableCollateral(accountId, tokenAddress),\n    CoreProxy.populateTransaction.getAccountCollateral(accountId, tokenAddress),\n  ]);\n  const calls = await Promise.all(callsP);\n  const decoder = (multicallEncoded: string | string[]) => {\n    if (!Array.isArray(multicallEncoded)) throw Error('Expected array');\n    return tokenAddresses.map((tokenAddress, i) => {\n      const [availableCollateral] = CoreProxy.interface.decodeFunctionResult(\n        'getAccountAvailableCollateral',\n        multicallEncoded[i * 2]\n      );\n      const { totalAssigned, totalDeposited, totalLocked } =\n        CoreProxy.interface.decodeFunctionResult(\n          'getAccountCollateral',\n          multicallEncoded[i * 2 + 1]\n        );\n\n      return {\n        tokenAddress,\n        availableCollateral: wei(availableCollateral),\n        totalAssigned: wei(totalAssigned),\n        totalDeposited: wei(totalDeposited),\n        totalLocked: wei(totalLocked),\n        symbol: '',\n        displaySymbol: '',\n        decimals: '',\n      };\n    });\n  };\n  return { decoder, calls };\n};\n\nexport type AccountCollateralWithSymbol = AccountCollateralType & { symbol: string };\n\nexport function useAccountCollateral({\n  accountId,\n  includeDelegationOff,\n}: {\n  accountId?: string;\n  includeDelegationOff?: boolean;\n}) {\n  const { data: CoreProxy } = useCoreProxy();\n  const { network } = useNetwork();\n  const { data: collateralTypes } = useCollateralTypes(includeDelegationOff);\n\n  const provider = useDefaultProvider();\n  const { data: priceUpdateTx } = useAllCollateralPriceUpdates();\n\n  const { data: systemToken } = useSystemToken();\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'AccountCollateral',\n      { accountId },\n      { systemToken: systemToken?.address },\n      { priceUpdateTx: stringToHash(priceUpdateTx?.data) },\n    ],\n    enabled: Boolean(\n      network &&\n        provider &&\n        CoreProxy &&\n        accountId &&\n        collateralTypes &&\n        collateralTypes.length > 0 &&\n        systemToken\n    ),\n    staleTime: 60000 * 5,\n    queryFn: async function () {\n      if (\n        !(\n          network &&\n          provider &&\n          CoreProxy &&\n          accountId &&\n          collateralTypes &&\n          collateralTypes.length > 0 &&\n          systemToken\n        )\n      ) {\n        throw new Error('OMG');\n      }\n\n      const tokenAddresses = collateralTypes\n        .map((c) => c.tokenAddress)\n        .concat([systemToken.address]);\n\n      const { calls, decoder } = await loadAccountCollateral({\n        accountId,\n        tokenAddresses,\n        CoreProxy,\n      });\n      const allCalls = [...calls];\n      if (priceUpdateTx) {\n        allCalls.unshift(priceUpdateTx as any);\n      }\n      const data = await erc7412Call(network, provider, allCalls, decoder, 'useAccountCollateral');\n\n      return data.map((x) => {\n        if (`${systemToken.address}`.toLowerCase() === `${x.tokenAddress}`.toLowerCase()) {\n          return Object.assign(x, {\n            symbol: systemToken.symbol,\n            displaySymbol: systemToken.name,\n            decimals: systemToken.decimals,\n          });\n        }\n        const collateralType = collateralTypes.find(\n          (c) => `${c.tokenAddress}`.toLowerCase() === `${x.tokenAddress}`.toLowerCase()\n        );\n        return Object.assign(x, {\n          symbol: collateralType?.symbol ?? '',\n          displaySymbol: collateralType?.displaySymbol ?? '',\n          decimals: collateralType?.decimals ?? '18',\n        });\n      });\n    },\n  });\n}\n\nexport function useAccountSpecificCollateral(accountId?: string, collateralAddress?: string) {\n  const { data: CoreProxy } = useCoreProxy();\n  const { network } = useNetwork();\n  const provider = useDefaultProvider();\n  const { data: priceUpdateTx } = useAllCollateralPriceUpdates();\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'AccountSpecificCollateral',\n      { accountId },\n      { token: collateralAddress, priceUpdateTx: stringToHash(priceUpdateTx?.data) },\n    ],\n    enabled: Boolean(CoreProxy && accountId && collateralAddress),\n    queryFn: async function () {\n      if (!CoreProxy || !accountId || !collateralAddress || !network || !provider) {\n        throw 'useAccountSpecificCollateral should not be enabled';\n      }\n      const { calls, decoder } = await loadAccountCollateral({\n        accountId,\n        tokenAddresses: [collateralAddress],\n        CoreProxy,\n      });\n      const allCalls = [...calls];\n      if (priceUpdateTx) {\n        allCalls.unshift(priceUpdateTx as any);\n      }\n\n      const data = await erc7412Call(\n        network,\n        provider,\n        calls,\n        decoder,\n        'useAccountSpecificCollateral'\n      );\n\n      return data.at(0);\n    },\n  });\n}\n","import { Contract } from '@ethersproject/contracts';\nimport { useQuery } from '@tanstack/react-query';\nimport { useDefaultProvider, useNetwork, useWallet } from '@snx-v3/useBlockchain';\nimport { importAccountProxy } from '@snx-v3/contracts';\n\nexport function useAccountProxy() {\n  const { network } = useNetwork();\n  const provider = useDefaultProvider();\n  const { activeWallet } = useWallet();\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'AccountProxy', activeWallet?.address],\n    queryFn: async function () {\n      if (!provider || !network) throw new Error('Should be disabled');\n      const { address, abi } = await importAccountProxy(network.id, network?.preset);\n      return new Contract(address, abi, provider);\n    },\n    enabled: Boolean(provider),\n    staleTime: Infinity,\n  });\n}\n","export async function importAccountProxy(chainId, preset) {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/meta.json'),\n        import('@synthetixio/v3-contracts/1-main/AccountProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.AccountProxy, abi };\n    }\n    case '11155111-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/meta.json'),\n        import('@synthetixio/v3-contracts/11155111-main/AccountProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.AccountProxy, abi };\n    }\n    case '10-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/meta.json'),\n        import('@synthetixio/v3-contracts/10-main/AccountProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.AccountProxy, abi };\n    }\n    case '8453-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/8453-andromeda/AccountProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.AccountProxy, abi };\n    }\n    case '84532-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/84532-andromeda/AccountProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.AccountProxy, abi };\n    }\n    case '42161-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/meta.json'),\n        import('@synthetixio/v3-contracts/42161-main/AccountProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.AccountProxy, abi };\n    }\n    case '421614-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/meta.json'),\n        import('@synthetixio/v3-contracts/421614-main/AccountProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.AccountProxy, abi };\n    }\n    case '42161-arbthetix': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-arbthetix/meta.json'),\n        import('@synthetixio/v3-contracts/42161-arbthetix/AccountProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.AccountProxy, abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for AccountProxy`);\n    }\n  }\n}\n","import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { useAccountProxy } from '@snx-v3/useAccountProxy';\nimport { useNetwork, useWallet } from '@snx-v3/useBlockchain';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useGasPrice } from '@snx-v3/useGasPrice';\nimport { wei } from '@synthetixio/wei';\n\nexport function useAccounts() {\n  const { activeWallet } = useWallet();\n  const { data: AccountProxy } = useAccountProxy();\n  const { network } = useNetwork();\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'Accounts',\n      { accountAddress: activeWallet?.address, AccountProxy: AccountProxy?.address },\n    ],\n    enabled: Boolean(AccountProxy && activeWallet?.address),\n    queryFn: async function () {\n      if (!(AccountProxy && activeWallet?.address)) throw new Error('Should be disabled');\n\n      const numberOfAccountTokens = await AccountProxy.balanceOf(activeWallet.address);\n\n      if (numberOfAccountTokens.eq(0)) {\n        // No accounts created yet\n        return [];\n      }\n      const accountIndexes = Array.from(Array(numberOfAccountTokens.toNumber()).keys());\n      const accounts = await Promise.all(\n        accountIndexes.map(async (i) => {\n          if (!activeWallet?.address) throw new Error('OMG!');\n          return await AccountProxy.tokenOfOwnerByIndex(activeWallet.address, i);\n        })\n      );\n      return accounts.map((accountId) => accountId.toString());\n    },\n    placeholderData: [],\n  });\n}\n\nexport function useCreateAccount() {\n  const { data: CoreProxy } = useCoreProxy({\n    isWrite: true,\n  });\n  const { network } = useNetwork();\n  const client = useQueryClient();\n  const { data: gasPrices } = useGasPrice();\n  return {\n    getTransactionCost: useQuery({\n      enabled: !!gasPrices,\n      queryKey: ['Transaction-Cost-Account'],\n      queryFn: async () => {\n        const gasUnits = await CoreProxy?.estimateGas['createAccount()']();\n        if (gasPrices) {\n          if ('baseFeePerGas' in gasPrices?.average && gasUnits) {\n            const { coins } = await (\n              await fetch('https://coins.llama.fi/prices/current/coingecko:ethereum?searchWidth=4h')\n            ).json();\n            return (\n              wei(gasPrices?.average.baseFeePerGas.mul(gasUnits), 18).toNumber() *\n              coins['coingecko:ethereum'].price\n            ).toFixed(2);\n          }\n        }\n        return '0.00';\n      },\n    }),\n    mutation: useMutation({\n      mutationFn: async function () {\n        try {\n          if (!CoreProxy) throw new Error('CoreProxy undefined');\n          const tx = await CoreProxy['createAccount()']();\n          const res = await tx.wait();\n\n          await client.invalidateQueries({\n            queryKey: [`${network?.id}-${network?.preset}`, 'Accounts'],\n          });\n\n          let newAccountId: string | undefined;\n\n          res.logs.forEach((log: any) => {\n            if (log.topics[0] === CoreProxy.interface.getEventTopic('AccountCreated')) {\n              const accountId = CoreProxy.interface.decodeEventLog(\n                'AccountCreated',\n                log.data,\n                log.topics\n              )?.accountId;\n              newAccountId = accountId?.toString();\n            }\n          });\n\n          return [newAccountId];\n        } catch (error) {\n          console.error(error);\n          throw error;\n        }\n      },\n    }),\n  };\n}\n","import { deploymentsWithERC7412, Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useMulticall3 } from '@snx-v3/useMulticall3';\nimport { useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { useOracleManagerProxy } from '@snx-v3/useOracleManagerProxy';\nimport { ZodBigNumber } from '@snx-v3/zod';\nimport { wei } from '@synthetixio/wei';\nimport { useQuery } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\nimport { z } from 'zod';\n\nconst NodeSchema = z.object({\n  nodeType: z.number(),\n  parameters: z.string(),\n  parents: z.array(z.string()),\n});\n\nconst PythParametersSchema = z.object({\n  address: z.string(),\n  priceFeedId: z.string(),\n  stalenessTolerance: ZodBigNumber.transform((x) => wei(x)),\n});\n\nconst EXTERNAL_NODE_TYPE = 2;\n\nexport const useAllCollateralPriceIds = (customNetwork?: Network) => {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n  const { data: Multicall3 } = useMulticall3(customNetwork);\n  const { data: OracleProxy } = useOracleManagerProxy(customNetwork);\n  const { data: CoreProxy } = useCoreProxy({ customNetwork });\n  const { data: collateralConfigs } = useCollateralTypes(false, customNetwork);\n\n  return useQuery({\n    enabled: Boolean(\n      targetNetwork?.id &&\n        targetNetwork?.preset &&\n        Multicall3 &&\n        OracleProxy &&\n        CoreProxy &&\n        !!collateralConfigs?.length\n    ),\n    staleTime: Infinity,\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'AllCollateralPriceIds'],\n    queryFn: async () => {\n      if (\n        !(\n          targetNetwork?.id &&\n          targetNetwork?.preset &&\n          Multicall3 &&\n          OracleProxy &&\n          CoreProxy &&\n          collateralConfigs\n        )\n      ) {\n        throw Error('useAllCollateralPriceIds should not be enabled ');\n      }\n\n      if (!deploymentsWithERC7412.includes(`${targetNetwork.id}-${targetNetwork.preset}`))\n        return [];\n\n      const oracleNodeIds = collateralConfigs.map((x: { oracleNodeId: string }) => x.oracleNodeId);\n\n      const calls = oracleNodeIds.map((oracleNodeId: string) => ({\n        target: OracleProxy.address,\n        callData: OracleProxy.interface.encodeFunctionData('getNode', [oracleNodeId]),\n      }));\n\n      const { returnData } = await Multicall3.callStatic.aggregate(calls);\n\n      const decoded = returnData\n        .map((bytes: ethers.utils.BytesLike, i: number) => {\n          const nodeResp = OracleProxy.interface.decodeFunctionResult('getNode', bytes)[0];\n\n          const { nodeType, parameters } = NodeSchema.parse({ ...nodeResp });\n\n          if (nodeType !== EXTERNAL_NODE_TYPE) return undefined;\n\n          try {\n            const [address, priceFeedId, stalenessTolerance] = ethers.utils.defaultAbiCoder.decode(\n              ['address', 'bytes32', 'uint256'],\n              parameters\n            );\n            const parametersDecoded = PythParametersSchema.parse({\n              address,\n              priceFeedId,\n              stalenessTolerance,\n            });\n            return {\n              parameters,\n              priceFeedId: parametersDecoded.priceFeedId,\n              address: parametersDecoded.address,\n              stalenessTolerance: parametersDecoded.stalenessTolerance,\n            };\n          } catch (error) {\n            console.error(`Decoding parameters failed, config:`, collateralConfigs[i]);\n            console.error('parameters: ', parameters);\n            console.error(error);\n            return null;\n          }\n        })\n        .filter(Boolean);\n\n      const seen = new Set();\n      return decoded.filter((item: { priceFeedId: string }) => {\n        if (seen.has(item.priceFeedId)) {\n          return false;\n        }\n        seen.add(item.priceFeedId);\n        return true;\n      });\n    },\n  });\n};\n","import { Contract } from '@ethersproject/contracts';\nimport { useQuery } from '@tanstack/react-query';\nimport {\n  Network,\n  useNetwork,\n  useProvider,\n  useProviderForChain,\n  useSigner,\n  useWallet,\n} from '@snx-v3/useBlockchain';\nimport { importOracleManagerProxy } from '@snx-v3/contracts';\n\nexport function useOracleManagerProxy(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const providerForChain = useProviderForChain(customNetwork);\n  const provider = useProvider();\n  const signer = useSigner();\n  const signerOrProvider = providerForChain || signer || provider;\n  const withSigner = Boolean(signer);\n  const { activeWallet } = useWallet();\n\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [\n      `${targetNetwork?.id}-${targetNetwork?.preset}`,\n      'OracleManagerProxy',\n      { withSigner },\n      activeWallet?.address,\n    ],\n    queryFn: async function () {\n      if (providerForChain && customNetwork) {\n        const { address, abi } = await importOracleManagerProxy(\n          customNetwork.id,\n          customNetwork.preset\n        );\n        return new Contract(address, abi, providerForChain);\n      }\n      if (!network || !signerOrProvider) throw new Error('Network or signer not available');\n      const { address, abi } = await importOracleManagerProxy(network?.id, network?.preset);\n      return new Contract(address, abi, signerOrProvider);\n    },\n    enabled: Boolean(signerOrProvider),\n    staleTime: Infinity,\n  });\n}\n","import { useQuery } from '@tanstack/react-query';\nimport { useWallet, useNetwork, useDefaultProvider } from '@snx-v3/useBlockchain';\nimport { Contract } from 'ethers';\nimport { ZodBigNumber } from '@snx-v3/zod';\nimport { wei } from '@synthetixio/wei';\n\nconst AllowanceSchema = ZodBigNumber.transform((x) => wei(x));\nconst abi = ['function allowance(address, address) view returns (uint256)'];\n\nexport const useAllowance = ({\n  contractAddress,\n  spender,\n}: {\n  contractAddress?: string;\n  spender?: string;\n}) => {\n  const { activeWallet } = useWallet();\n  const { network } = useNetwork();\n  const provider = useDefaultProvider();\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'Allowance',\n      { accountAddress: activeWallet?.address },\n      { contractAddress, spender },\n    ],\n    queryFn: async () => {\n      if (!(contractAddress && spender && activeWallet?.address && provider))\n        throw new Error('OMG');\n      const contract = new Contract(contractAddress, abi, provider);\n      const allowance = await contract.allowance(activeWallet.address, spender);\n      return AllowanceSchema.parse(allowance);\n    },\n    enabled: Boolean(activeWallet?.address && contractAddress && spender && provider),\n  });\n};\n","import { useReducer } from 'react';\nimport { useAllowance } from '@snx-v3/useAllowance';\nimport { BigNumberish, ethers } from 'ethers';\nimport { useMutation } from '@tanstack/react-query';\nimport { useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport { formatGasPriceForTransaction } from '@snx-v3/useGasOptions';\nimport { getGasPrice } from '@snx-v3/useGasPrice';\nimport { useGasSpeed } from '@snx-v3/useGasSpeed';\n\nexport const approveAbi = ['function approve(address spender, uint256 amount) returns (bool)'];\n\nexport const useApprove = (\n  {\n    contractAddress,\n    amount,\n    spender,\n  }: {\n    contractAddress?: string;\n    amount: BigNumberish;\n    spender?: string;\n  },\n  eventHandlers?: {\n    onSuccess?: () => void;\n    onMutate?: () => void;\n    onError?: (e: Error) => void;\n  }\n) => {\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n  const { data: allowance, refetch: refetchAllowance } = useAllowance({ contractAddress, spender });\n\n  const sufficientAllowance = Boolean(allowance?.gte(amount));\n\n  const signer = useSigner();\n  const { gasSpeed } = useGasSpeed();\n  const provider = useProvider();\n\n  const mutation = useMutation({\n    mutationFn: async (infiniteApproval: boolean) => {\n      if (!signer || !contractAddress || !spender || !provider)\n        throw new Error('Signer, contract address or spender is not defined');\n      if (sufficientAllowance) return;\n\n      try {\n        dispatch({ type: 'prompting' });\n\n        const contract = new ethers.Contract(contractAddress, approveAbi, signer);\n        const amountToAppove = infiniteApproval ? ethers.constants.MaxUint256 : amount;\n\n        const gasPricesPromised = getGasPrice({ provider });\n        const gasLimitPromised = contract.estimateGas.approve(spender, amountToAppove);\n\n        const populatedTxnPromised = contract.populateTransaction.approve(spender, amountToAppove, {\n          gasLimit: gasLimitPromised,\n        });\n\n        const [gasPrices, gasLimit, populatedTxn] = await Promise.all([\n          gasPricesPromised,\n          gasLimitPromised,\n          populatedTxnPromised,\n        ]);\n\n        const gasOptionsForTransaction = formatGasPriceForTransaction({\n          gasLimit,\n          gasPrices,\n          gasSpeed,\n        });\n\n        const txn = await signer.sendTransaction({ ...populatedTxn, ...gasOptionsForTransaction });\n        dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n        await txn.wait();\n        dispatch({ type: 'success' });\n        refetchAllowance();\n      } catch (error: any) {\n        dispatch({ type: 'error', payload: { error } });\n        throw error;\n      }\n    },\n    ...eventHandlers,\n  });\n  return {\n    mutation,\n    txnState,\n    isLoading: mutation.isPending,\n    approve: mutation.mutateAsync,\n    refetchAllowance,\n    requireApproval: !sufficientAllowance,\n  };\n};\n","import { getAprUrl } from '@snx-v3/constants';\nimport { ARBITRUM, BASE_ANDROMEDA, MAINNET, Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useApr(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const chain = customNetwork || network;\n\n  return useQuery({\n    queryKey: ['apr', chain?.id],\n    queryFn: async () => {\n      try {\n        return await fetchApr(chain?.id);\n      } catch (error) {\n        return;\n      }\n    },\n    staleTime: 60000,\n    enabled: Boolean(chain?.id),\n  });\n}\n\nconst supportedAprNetworks = [BASE_ANDROMEDA.id, ARBITRUM.id, MAINNET.id];\n\nexport async function fetchApr(networkId?: number) {\n  try {\n    const isSupported = networkId && supportedAprNetworks.includes(networkId);\n    if (!isSupported) {\n      throw new Error('Apr endpoint not supported for this network');\n    }\n\n    const response = await fetch(getAprUrl(networkId));\n\n    const data = await response.json();\n\n    const highestAprCollateral = data?.sort(\n      (a: { apr28d: number }, b: { apr28d: number }) => b.apr28d - a.apr28d\n    )[0];\n\n    return {\n      combinedApr: highestAprCollateral.apr28d * 100,\n      cumulativePnl: isSupported ? highestAprCollateral.cumulativePnl : 0,\n      collateralAprs: data,\n    };\n  } catch (error) {\n    console.error(error);\n    return {\n      combinedApr: 0,\n      cumulativePnl: 0,\n      collateralAprs: [],\n    };\n  }\n}\n","import { ethers } from 'ethers';\nimport React, { useMemo } from 'react';\nimport {\n  BaseIcon,\n  EthereumIcon,\n  FailedIcon,\n  LogoIcon,\n  OptimismIcon,\n  ArbitrumIcon,\n  SNXChainIcon,\n} from '@snx-v3/icons';\nimport { INFURA_KEY as DEFAULT_INFURA_KEY } from '@snx-v3/constants';\nimport SynthetixIcon from './SynthetixIcon.svg';\nimport SynthetixLogo from './SynthetixLogo.svg';\nimport { useConnectWallet, useSetChain } from '@web3-onboard/react';\nimport { useCallback } from 'react';\nimport { IconProps } from '@chakra-ui/react';\n\nexport type Network = {\n  id: number;\n  preset: string;\n  hexId: string;\n  token: string;\n  name: string;\n  rpcUrl: () => string;\n  label: string;\n  isSupported: boolean;\n  publicRpcUrl: string;\n  isTestnet: boolean;\n};\n\nexport const UNSUPPORTED_NETWORK: Network = {\n  id: 0,\n  preset: 'main',\n  hexId: `0x${Number(0).toString(16)}`,\n  token: 'ETH',\n  name: 'unsupported',\n  rpcUrl: () => '',\n  publicRpcUrl: '',\n  label: 'Unsupported',\n  isSupported: false,\n  isTestnet: false,\n};\n\ninterface NetworkIconProps extends IconProps {\n  networkId?: Network['id'];\n  size?: string;\n}\n\nexport const NetworkIcon = ({ networkId, size = '24px', ...props }: NetworkIconProps) => {\n  switch (networkId) {\n    case 1:\n      return <EthereumIcon w={size} h={size} {...props} />;\n    case 10:\n      return <OptimismIcon w={size} h={size} {...props} />;\n    case 11155111:\n      return <EthereumIcon w={size} h={size} {...props} />;\n    case 84531:\n      return <BaseIcon w={size} h={size} {...props} />;\n    case 84532:\n      return <BaseIcon w={size} h={size} {...props} />;\n    case 13370:\n      return <LogoIcon w=\"29px\" h=\"21px\" {...props} />;\n    case 8453:\n      return <BaseIcon w={size} h={size} {...props} />;\n    case 11155420:\n      return <OptimismIcon w={size} h={size} {...props} />;\n    case 421614:\n      return <ArbitrumIcon w={size} h={size} {...props} />;\n    case 42161:\n      return <ArbitrumIcon w={size} h={size} {...props} />;\n    case 2192:\n      return <SNXChainIcon w={size} h={size} {...props} />;\n    case 13001:\n      return <SNXChainIcon w={size} h={size} {...props} />;\n    default: {\n      return <FailedIcon w={size} h={size} {...props} />;\n    }\n  }\n};\n\nexport const BASE_ANDROMEDA: Network = {\n  id: 8453,\n  preset: 'andromeda',\n  hexId: `0x${Number(8453).toString(16)}`,\n  token: 'ETH',\n  name: 'base',\n  rpcUrl: (INFURA_KEY?: string) =>\n    `https://base-mainnet.infura.io/v3/${INFURA_KEY ?? DEFAULT_INFURA_KEY}`,\n  label: 'Base',\n  isSupported: true,\n  publicRpcUrl: 'https://base.publicnode.com',\n  isTestnet: false,\n};\n\nexport const MAINNET: Network = {\n  id: 1,\n  preset: 'main',\n  hexId: `0x${Number(1).toString(16)}`,\n  token: 'ETH',\n  name: 'mainnet',\n  rpcUrl: (INFURA_KEY?: string) =>\n    `https://mainnet.infura.io/v3/${INFURA_KEY ?? DEFAULT_INFURA_KEY}`,\n  label: 'Ethereum',\n  isSupported: true,\n  publicRpcUrl: 'https://ethereum.publicnode.com',\n  isTestnet: false,\n};\n\nexport const OPTIMISM: Network = {\n  id: 10,\n  preset: 'main',\n  hexId: `0x${Number(10).toString(16)}`,\n  token: 'ETH',\n  name: 'optimism-mainnet',\n  rpcUrl: (INFURA_KEY?: string) =>\n    `https://optimism-mainnet.infura.io/v3/${INFURA_KEY ?? DEFAULT_INFURA_KEY}`,\n  label: 'Optimism',\n  isSupported: true,\n  publicRpcUrl: 'https://mainnet.optimism.io',\n  isTestnet: false,\n};\n\nexport const SEPOLIA: Network = {\n  id: 11155111,\n  preset: 'main',\n  hexId: `0x${Number(11155111).toString(16)}`,\n  token: 'ETH',\n  name: 'sepolia',\n  rpcUrl: (INFURA_KEY?: string) =>\n    `https://sepolia.infura.io/v3/${INFURA_KEY ?? DEFAULT_INFURA_KEY}`,\n  label: 'Sepolia Testnet',\n  isSupported: true,\n  publicRpcUrl: 'https://ethereum-sepolia.publicnode.com',\n  isTestnet: true,\n};\n\nexport const BASE_SEPOLIA: Network = {\n  id: 84532,\n  preset: 'andromeda',\n  hexId: `0x${Number(84532).toString(16)}`,\n  token: 'ETH',\n  name: 'base-sepolia',\n  rpcUrl: (INFURA_KEY?: string) =>\n    `https://base-sepolia.infura.io/v3/${INFURA_KEY ?? DEFAULT_INFURA_KEY}`,\n  label: 'Base Sepolia',\n  isSupported: true,\n  publicRpcUrl: 'https://sepolia.base.org',\n  isTestnet: true,\n};\n\nexport const CANNON: Network = {\n  id: 13370,\n  preset: 'main',\n  hexId: `0x${Number(13370).toString(16)}`,\n  token: 'ETH',\n  name: 'cannon',\n  rpcUrl: () => `http://127.0.0.1:8545`,\n  label: 'Cannon',\n  isSupported: false, // hidden by default but if wallet switched to Cannon it will be visible\n  publicRpcUrl: 'http://127.0.0.1:8545',\n  isTestnet: true,\n};\n\nexport const OPTIMISM_SEPOLIA: Network = {\n  id: 11155420,\n  preset: 'main',\n  hexId: `0x${Number(11155420).toString(16)}`,\n  token: 'ETH',\n  name: 'optimism-sepolia',\n  rpcUrl: (INFURA_KEY?: string) =>\n    `https://optimism-sepolia.infura.io/v3/${INFURA_KEY ?? DEFAULT_INFURA_KEY}`,\n  label: 'Optimism Sepolia',\n  isSupported: false,\n  publicRpcUrl: 'https://sepolia.optimism.io/',\n  isTestnet: true,\n};\n\nexport const ARBITRUM_SEPOLIA: Network = {\n  id: 421614,\n  preset: 'main',\n  hexId: `0x${Number(421614).toString(16)}`,\n  token: 'ETH',\n  name: 'arbitrum-sepolia',\n  rpcUrl: (INFURA_KEY?: string) =>\n    `https://arbitrum-sepolia.infura.io/v3/${INFURA_KEY ?? DEFAULT_INFURA_KEY}`,\n  label: 'Arbitrum Sepolia',\n  isSupported: true,\n  publicRpcUrl: 'https://sepolia-rollup.arbitrum.io/rpc',\n  isTestnet: true,\n};\n\nexport const ARBITRUM: Network = {\n  id: 42161,\n  preset: 'main',\n  hexId: `0x${Number(42161).toString(16)}`,\n  token: 'ETH',\n  name: 'arbitrum',\n  rpcUrl: (INFURA_KEY?: string) =>\n    `https://arbitrum-mainnet.infura.io/v3/${INFURA_KEY ?? DEFAULT_INFURA_KEY}`,\n  label: 'Arbitrum',\n  isSupported: true,\n  publicRpcUrl: 'https://arb1.arbitrum.io/rpc',\n  isTestnet: false,\n};\n\nexport const ARBTHETIX: Network = {\n  id: 42161,\n  preset: 'arbthetix',\n  hexId: `0x${Number(42161).toString(16)}`,\n  token: 'ETH',\n  name: 'arbitrum',\n  rpcUrl: (INFURA_KEY?: string) =>\n    `https://arbitrum-mainnet.infura.io/v3/${INFURA_KEY ?? DEFAULT_INFURA_KEY}`,\n  label: 'Arbthetix (withdraw only)',\n  isSupported: false,\n  publicRpcUrl: 'https://arbiscan.io/',\n  isTestnet: false,\n};\n\nexport const SNAX: Network = {\n  id: 2192,\n  preset: 'main',\n  hexId: `0x${Number(2192).toString(16)}`,\n  token: 'ETH',\n  name: 'SNAX',\n  rpcUrl: () => 'https://mainnet.snaxchain.io/',\n  label: 'Snaxchain',\n  isSupported: true,\n  publicRpcUrl: 'https://mainnet.snaxchain.io/',\n  isTestnet: false,\n};\n\nexport const SNAXTESTNET: Network = {\n  id: 13001,\n  preset: 'main',\n  hexId: `0x${Number(13001).toString(16)}`,\n  token: 'ETH',\n  name: 'SNAX',\n  rpcUrl: () => 'https://testnet.snaxchain.io/',\n  label: 'Snaxchain',\n  isSupported: true,\n  publicRpcUrl: 'https://testnet.snaxchain.io/',\n  isTestnet: true,\n};\n\nexport const NETWORKS: Network[] = [\n  BASE_ANDROMEDA,\n  MAINNET,\n  OPTIMISM,\n  SEPOLIA,\n  BASE_SEPOLIA,\n  CANNON,\n  OPTIMISM_SEPOLIA,\n  ARBITRUM_SEPOLIA,\n  ARBITRUM,\n  ARBTHETIX,\n  SNAX,\n  SNAXTESTNET,\n];\n\nexport const deploymentsWithERC7412: string[] = [\n  '8453-andromeda',\n  '84532-andromeda',\n  '42161-main',\n  '421614-main',\n  '42161-arbthetix',\n];\n\nexport const DEFAULT_NETWORK =\n  NETWORKS.find(\n    (network) =>\n      `${network.id}-${network.preset}` === window.localStorage.getItem('DEFAULT_NETWORK')\n  ) ?? NETWORKS[1];\n\nexport const appMetadata = {\n  name: 'Synthetix',\n  icon: SynthetixIcon,\n  logo: SynthetixLogo,\n  description: 'Synthetix | The derivatives liquidity protocol.',\n  recommendedInjectedWallets: [\n    { name: 'MetaMask', url: 'https://metamask.io' },\n    { name: 'Brave Wallet', url: 'https://brave.com/wallet' },\n  ],\n  gettingStartedGuide: 'https://synthetix.io',\n  explore: 'https://blog.synthetix.io',\n};\n\nexport function useProviderForChain(network?: Network) {\n  return useMemo(\n    () => (network ? new ethers.providers.JsonRpcProvider(network.rpcUrl()) : undefined),\n    [network]\n  );\n}\n\nexport function useDefaultProvider() {\n  const { network } = useNetwork();\n  return useProviderForChain(network);\n}\n\nexport function useWallet() {\n  const [{ wallet }, conn, disconn] = useConnectWallet();\n\n  const connect = useCallback(conn, [conn]);\n  const disconnect = useCallback(disconn, [disconn]);\n\n  return useMemo(() => {\n    if (!wallet) {\n      return {\n        activeWallet: null,\n        walletsInfo: null,\n        connect,\n        disconnect,\n      };\n    }\n\n    const activeWallet = wallet?.accounts[0];\n\n    return {\n      activeWallet: activeWallet,\n      walletsInfo: wallet,\n      connect,\n      disconnect,\n    };\n  }, [connect, disconnect, wallet]);\n}\n\nexport function useGetNetwork(chainId: string) {\n  return useMemo(() => {\n    return NETWORKS.find((n) => n.hexId === chainId);\n  }, [chainId]);\n}\n\nexport function useNetwork() {\n  const [{ connectedChain }, setChain] = useSetChain();\n\n  // Hydrate the network info\n  const network = NETWORKS.find((n) => n.hexId === connectedChain?.id);\n\n  const setNetwork = useCallback(\n    async (networkId: number) => {\n      const newNetwork = NETWORKS.find((n) => n.id === networkId);\n      if (!newNetwork) return;\n      return await setChain({ chainId: newNetwork?.hexId });\n    },\n    [setChain]\n  );\n\n  if (!network) {\n    return {\n      network: undefined,\n      setNetwork,\n    };\n  }\n\n  return {\n    network,\n    setNetwork,\n  };\n}\n\nexport function useIsConnected(): boolean {\n  const [{ wallet }] = useConnectWallet();\n  return Boolean(wallet);\n}\n\nexport function useSigner() {\n  const [{ wallet }] = useConnectWallet();\n\n  return useMemo(() => {\n    if (!wallet) {\n      return null;\n    }\n\n    const provider = new ethers.providers.Web3Provider(wallet.provider, 'any');\n\n    return provider.getSigner();\n  }, [wallet]);\n}\n\nexport function useProvider() {\n  const [{ wallet }] = useConnectWallet();\n\n  return useMemo(() => {\n    if (!wallet) {\n      return null;\n    }\n\n    const provider = new ethers.providers.Web3Provider(wallet.provider, 'any');\n\n    return provider;\n  }, [wallet]);\n}\n","import { useReducer } from 'react';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useMutation } from '@tanstack/react-query';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport Wei from '@synthetixio/wei';\nimport { BigNumber } from 'ethers';\nimport { formatGasPriceForTransaction } from '@snx-v3/useGasOptions';\nimport { getGasPrice } from '@snx-v3/useGasPrice';\nimport { useGasSpeed } from '@snx-v3/useGasSpeed';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport { useCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\n\nexport const useBorrow = ({\n  accountId,\n  poolId,\n  collateralTypeAddress,\n  debtChange,\n}: {\n  accountId?: string;\n  poolId?: string;\n  collateralTypeAddress?: string;\n  debtChange: Wei;\n}) => {\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: priceUpdateTx } = useCollateralPriceUpdates();\n\n  const signer = useSigner();\n  const { gasSpeed } = useGasSpeed();\n  const provider = useProvider();\n  const { network } = useNetwork();\n\n  const mutation = useMutation({\n    mutationFn: async () => {\n      if (\n        !(\n          signer &&\n          CoreProxy &&\n          poolId &&\n          accountId &&\n          collateralTypeAddress &&\n          network &&\n          provider\n        )\n      ) {\n        return;\n      }\n\n      if (debtChange.eq(0)) {\n        return;\n      }\n\n      try {\n        dispatch({ type: 'prompting' });\n\n        const populatedTxnPromised = CoreProxy.populateTransaction.mintUsd(\n          BigNumber.from(accountId),\n          BigNumber.from(poolId),\n          collateralTypeAddress,\n          debtChange.abs().toBN()\n        );\n\n        const callsPromise = Promise.all([populatedTxnPromised]);\n        const [calls, gasPrices] = await Promise.all([callsPromise, getGasPrice({ provider })]);\n\n        if (priceUpdateTx) {\n          calls.unshift(priceUpdateTx as any);\n        }\n\n        const walletAddress = await signer.getAddress();\n        const erc7412Tx = await withERC7412(network, calls, 'borrow', walletAddress);\n\n        const gasOptionsForTransaction = formatGasPriceForTransaction({\n          gasLimit: erc7412Tx.gasLimit,\n          gasPrices,\n          gasSpeed,\n        });\n\n        const txn = await signer.sendTransaction({ ...erc7412Tx, ...gasOptionsForTransaction });\n\n        dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n        await txn.wait();\n        dispatch({ type: 'success' });\n      } catch (error: any) {\n        dispatch({ type: 'error', payload: { error } });\n        throw error;\n      }\n    },\n  });\n  return {\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n};\n","import { useReducer } from 'react';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { formatGasPriceForTransaction } from '@snx-v3/useGasOptions';\nimport { useMutation } from '@tanstack/react-query';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport Wei from '@synthetixio/wei';\nimport { BigNumber, Contract } from 'ethers';\nimport { getGasPrice } from '@snx-v3/useGasPrice';\nimport { useGasSpeed } from '@snx-v3/useGasSpeed';\nimport { notNil } from '@snx-v3/tsHelpers';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport { useAllCollateralPriceIds } from '@snx-v3/useAllCollateralPriceIds';\nimport { useSpotMarketProxy } from '@snx-v3/useSpotMarketProxy';\nimport { USDC_BASE_MARKET, getRepayerContract } from '@snx-v3/isBaseAndromeda';\nimport { useCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\n\nexport const DEBT_REPAYER_ABI = [\n  {\n    inputs: [\n      { internalType: 'contract ISynthetixCore', name: 'synthetixCore', type: 'address' },\n      { internalType: 'contract ISpotMarket', name: 'spotMarket', type: 'address' },\n      { internalType: 'uint128', name: 'accountId', type: 'uint128' },\n      { internalType: 'uint128', name: 'poolId', type: 'uint128' },\n      { internalType: 'address', name: 'collateralType', type: 'address' },\n      { internalType: 'uint128', name: 'spotMarketId', type: 'uint128' },\n    ],\n    name: 'depositDebtToRepay',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n];\n\nexport const useClearDebt = ({\n  accountId,\n  poolId,\n  collateralTypeAddress,\n  availableUSDCollateral,\n  debt,\n}: {\n  accountId?: string;\n  poolId?: string;\n  collateralTypeAddress?: string;\n  availableUSDCollateral?: Wei;\n  debt?: Wei;\n}) => {\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: SpotMarketProxy } = useSpotMarketProxy();\n  const { data: collateralPriceIds } = useAllCollateralPriceIds();\n  const { data: priceUpdateTx } = useCollateralPriceUpdates();\n\n  const signer = useSigner();\n  const { network } = useNetwork();\n  const { gasSpeed } = useGasSpeed();\n  const provider = useProvider();\n\n  const mutation = useMutation({\n    mutationFn: async () => {\n      if (!signer || !network || !provider) throw new Error('No signer or network');\n\n      if (\n        !(\n          CoreProxy &&\n          poolId &&\n          accountId &&\n          collateralTypeAddress &&\n          SpotMarketProxy &&\n          collateralPriceIds\n        )\n      ) {\n        return;\n      }\n\n      const repayer = new Contract(getRepayerContract(network.id), DEBT_REPAYER_ABI, signer);\n\n      if (!availableUSDCollateral) return;\n\n      try {\n        dispatch({ type: 'prompting' });\n\n        const depositDebtToRepay = repayer.populateTransaction.depositDebtToRepay(\n          CoreProxy.address,\n          SpotMarketProxy.address,\n          accountId,\n          poolId,\n          collateralTypeAddress,\n          USDC_BASE_MARKET\n        );\n\n        const burn = CoreProxy.populateTransaction.burnUsd(\n          BigNumber.from(accountId),\n          BigNumber.from(poolId),\n          collateralTypeAddress,\n          debt?.mul(110).div(100).toBN().toString() || '0'\n        );\n\n        const callsPromise = Promise.all([depositDebtToRepay, burn].filter(notNil));\n\n        const [calls, gasPrices] = await Promise.all([callsPromise, getGasPrice({ provider })]);\n\n        if (priceUpdateTx) {\n          calls.unshift(priceUpdateTx as any);\n        }\n        const walletAddress = await signer.getAddress();\n        const erc7412Tx = await withERC7412(network, calls, 'useRepay', walletAddress);\n\n        const gasOptionsForTransaction = formatGasPriceForTransaction({\n          gasLimit: erc7412Tx.gasLimit,\n          gasPrices,\n          gasSpeed,\n        });\n\n        const txn = await signer.sendTransaction({ ...erc7412Tx, ...gasOptionsForTransaction });\n        dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n        await txn.wait();\n        dispatch({ type: 'success' });\n      } catch (error: any) {\n        dispatch({ type: 'error', payload: { error } });\n        throw error;\n      }\n    },\n  });\n  return {\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n};\n","export async function importExtras(chainId, preset) {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: extras }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/extras.json'),\n      ]);\n      return extras;\n    }\n    case '11155111-main': {\n      const [{ default: extras }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/extras.json'),\n      ]);\n      return extras;\n    }\n    case '10-main': {\n      const [{ default: extras }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/extras.json'),\n      ]);\n      return extras;\n    }\n    case '8453-andromeda': {\n      const [{ default: extras }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/extras.json'),\n      ]);\n      return extras;\n    }\n    case '84532-andromeda': {\n      const [{ default: extras }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/extras.json'),\n      ]);\n      return extras;\n    }\n    case '42161-main': {\n      const [{ default: extras }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/extras.json'),\n      ]);\n      return extras;\n    }\n    case '421614-main': {\n      const [{ default: extras }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/extras.json'),\n      ]);\n      return extras;\n    }\n    case '42161-arbthetix': {\n      const [{ default: extras }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-arbthetix/extras.json'),\n      ]);\n      return extras;\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for Extras`);\n    }\n  }\n}\n","export async function importPythERC7412Wrapper(chainId, preset) {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '8453-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/8453-andromeda/PythERC7412Wrapper.readable.json'),\n      ]);\n      return { address: meta.contracts.PythERC7412Wrapper, abi };\n    }\n    case '84532-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/84532-andromeda/PythERC7412Wrapper.readable.json'),\n      ]);\n      return { address: meta.contracts.PythERC7412Wrapper, abi };\n    }\n    case '11155111-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/meta.json'),\n        import('@synthetixio/v3-contracts/11155111-main/PythERC7412Wrapper.readable.json'),\n      ]);\n      return { address: meta.contracts.PythERC7412Wrapper, abi };\n    }\n    case '42161-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/meta.json'),\n        import('@synthetixio/v3-contracts/42161-main/PythERC7412Wrapper.readable.json'),\n      ]);\n      return { address: meta.contracts.PythERC7412Wrapper, abi };\n    }\n    case '421614-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/meta.json'),\n        import('@synthetixio/v3-contracts/421614-main/PythERC7412Wrapper.readable.json'),\n      ]);\n      return { address: meta.contracts.PythERC7412Wrapper, abi };\n    }\n    case '42161-arbthetix': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-arbthetix/meta.json'),\n        import('@synthetixio/v3-contracts/42161-arbthetix/PythERC7412Wrapper.readable.json'),\n      ]);\n      return { address: meta.contracts.PythERC7412Wrapper, abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for PythERC7412Wrapper`);\n    }\n  }\n}\n","import { useQuery } from '@tanstack/react-query';\nimport { BigNumberish, ethers } from 'ethers';\nimport { Network, useDefaultProvider, useNetwork, useWallet } from '@snx-v3/useBlockchain';\nimport { EvmPriceServiceConnection } from '@pythnetwork/pyth-evm-js';\nimport { offchainMainnetEndpoint } from '@snx-v3/constants';\nimport { ERC7412_ABI } from '@snx-v3/withERC7412';\nimport { importMulticall3, importExtras } from '@snx-v3/contracts';\nimport { networksOffline } from '@snx-v3/usePoolsList';\nimport { wei } from '@synthetixio/wei';\nimport { importPythERC7412Wrapper } from '@snx-v3/contracts';\nimport { parseUnits } from '@snx-v3/format';\n\nconst priceService = new EvmPriceServiceConnection(offchainMainnetEndpoint);\n\nfunction getAllPriceIdsEntries(extras: any) {\n  return Object.entries(extras).filter(\n    ([key, value]) =>\n      String(value).length === 66 &&\n      (key.startsWith('pyth_feed_id_') || (key.startsWith('pyth') && key.endsWith('FeedId')))\n  );\n}\n\nasync function getPythFeedIds(network: Network) {\n  const extras = await importExtras(network.id, network.preset);\n  return getAllPriceIdsEntries(extras).map(([_key, value]) => value);\n}\n\nasync function getPythFeedIdsFromCollateralList(\n  collateralList: {\n    symbol: string;\n  }[]\n) {\n  const extras = await Promise.all(\n    networksOffline.map((network) => importExtras(network.id, network.preset))\n  );\n\n  // Go over extras and find everything that starts with pyth and ends with FeedId, store in array\n  const priceIds = extras.map(getAllPriceIdsEntries).flat();\n\n  const deduped = Array.from(\n    new Set(\n      priceIds\n        .map(([key, priceId]) => {\n          if (key.startsWith('pyth_feed_id_')) {\n            return {\n              symbol: key.replace('pyth_feed_id_', '').toUpperCase(),\n              priceId,\n            };\n          }\n          if (key.startsWith('pyth') && key.endsWith('FeedId')) {\n            return {\n              symbol: key.replace('pyth', '').replace('FeedId', '').toUpperCase(),\n              priceId,\n            };\n          }\n          return { symbol: null, priceId: null };\n        })\n        .filter(({ symbol, priceId }) => symbol && priceId)\n    )\n  );\n\n  // Find the corresponding price feed id for each symbol\n  return collateralList.map((collateral) => {\n    const symbol = collateral.symbol === 'WETH' ? 'ETH' : collateral.symbol;\n    const id = deduped.find((x) => x.symbol?.toUpperCase() === symbol.toUpperCase());\n    return {\n      ...collateral,\n      priceId: id?.priceId,\n    };\n  });\n}\n\nconst getPriceUpdates = async (\n  priceIds: string[],\n  stalenessTolerance: number,\n  network?: Network\n) => {\n  const signedOffchainData = await priceService.getPriceFeedsUpdateData(priceIds);\n  const updateType = 1;\n  const data = ethers.utils.defaultAbiCoder.encode(\n    ['uint8', 'uint64', 'bytes32[]', 'bytes[]'],\n    [updateType, stalenessTolerance, priceIds, signedOffchainData]\n  );\n  const erc7412Interface = new ethers.utils.Interface(ERC7412_ABI);\n\n  const { address } = await importPythERC7412Wrapper(network?.id, network?.preset);\n\n  return {\n    // pyth wrapper\n    to: address,\n    data: erc7412Interface.encodeFunctionData('fulfillOracleQuery', [data]),\n    value: priceIds.length,\n  };\n};\n\nexport const useAllCollateralPriceUpdates = (customNetwork?: Network) => {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'all-price-updates'],\n    enabled: Boolean(targetNetwork?.id && targetNetwork?.preset),\n    queryFn: async () => {\n      if (!(targetNetwork?.id && targetNetwork?.preset)) {\n        throw 'useAllCollateralPriceUpdates is missing required data';\n      }\n      const stalenessTolerance = 1;\n\n      const pythFeedIds = (await getPythFeedIds(targetNetwork)) as string[];\n      if (!pythFeedIds.length) {\n        return null;\n      }\n      const tx = await getPriceUpdates(pythFeedIds, stalenessTolerance, targetNetwork);\n\n      return {\n        ...tx,\n        value: tx.value,\n      };\n    },\n    refetchInterval: 5 * 60000,\n  });\n};\n\ninterface Collaterals {\n  symbol: string;\n  oracleId: string;\n  id: string;\n}\n\nexport const useOfflinePrices = (collaterals?: Collaterals[]) => {\n  return useQuery({\n    queryKey: ['offline-prices', collaterals?.map((collateral) => collateral.id).join('-')],\n    enabled: Boolean(collaterals && collaterals.length > 0),\n    queryFn: async () => {\n      if (!collaterals) {\n        throw 'useOfflinePrices is missing required data';\n      }\n\n      const stables = ['sUSDC', 'USDC'];\n      const filteredCollaterals = collaterals.filter((item) => !stables.includes(item.symbol));\n\n      const returnData: { symbol: string; price: BigNumberish }[] = [\n        {\n          symbol: 'sUSDC',\n          price: wei(1).toBN(),\n        },\n        {\n          symbol: 'USDC',\n          price: wei(1).toBN(),\n        },\n        {\n          symbol: 'USDx',\n          price: wei(1).toBN(),\n        },\n      ];\n\n      if (!filteredCollaterals.length) {\n        return returnData;\n      }\n\n      const collateralsWithPriceId = await getPythFeedIdsFromCollateralList(filteredCollaterals);\n      const prices = await priceService.getLatestPriceFeeds(\n        collateralsWithPriceId.map((x) => x.priceId) as string[]\n      );\n      prices?.forEach((item) => {\n        const col = collateralsWithPriceId.find(({ priceId }) => priceId === `0x${item.id}`);\n        const price = item.getPriceUnchecked();\n        if (col) {\n          returnData.push({\n            symbol: col.symbol,\n            price: parseUnits(price.price, 18 + price.expo),\n          });\n        }\n      });\n      return returnData;\n    },\n    refetchInterval: 60000,\n  });\n};\n\nexport const useCollateralPriceUpdates = () => {\n  const { network } = useNetwork();\n  const provider = useDefaultProvider();\n  const { activeWallet } = useWallet();\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'price-updates', activeWallet?.address],\n    enabled: Boolean(network?.id && network?.preset),\n    queryFn: async () => {\n      const stalenessTolerance = 600;\n      if (!(network?.id && network?.preset)) {\n        throw 'OMG';\n      }\n\n      try {\n        const { address: multicallAddress, abi: multiCallAbi } = await importMulticall3(\n          network.id,\n          network.preset\n        );\n\n        const multicallInterface = new ethers.utils.Interface(multiCallAbi);\n        const pythInterface = new ethers.utils.Interface([\n          'function getLatestPrice(bytes32 priceId, uint256 stalenessTolerance) external view returns (int256)',\n        ]);\n\n        const pythFeedIds = (await getPythFeedIds(network)) as string[];\n\n        if (pythFeedIds.length === 0) {\n          return null;\n        }\n\n        const { address } = await importPythERC7412Wrapper(network?.id, network?.preset);\n\n        const txs = [\n          ...pythFeedIds.map((priceId) => ({\n            target: address,\n            callData: pythInterface.encodeFunctionData('getLatestPrice', [\n              priceId,\n              stalenessTolerance,\n            ]),\n            value: 0,\n            requireSuccess: false,\n          })),\n        ];\n\n        const getPricesTx = multicallInterface.encodeFunctionData('aggregate3Value', [txs]);\n\n        const result = await provider?.call({\n          data: getPricesTx,\n          to: multicallAddress,\n        });\n\n        const decodedMultiCall: { success: boolean }[] = multicallInterface.decodeFunctionResult(\n          'aggregate3Value',\n          result || ''\n        )[0];\n\n        const outdatedPriceIds: string[] = [];\n\n        decodedMultiCall.forEach(({ success }, i) => {\n          if (!success) {\n            outdatedPriceIds.push(pythFeedIds[i]);\n          }\n        });\n\n        if (outdatedPriceIds.length) {\n          return {\n            ...(await getPriceUpdates(outdatedPriceIds, stalenessTolerance, network)),\n            from: activeWallet?.address,\n          };\n        }\n\n        return null;\n      } catch (error) {\n        return null;\n      }\n    },\n    refetchInterval: 60000,\n  });\n};\n","import { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { stringToHash } from '@snx-v3/tsHelpers';\nimport {\n  Network,\n  useDefaultProvider,\n  useNetwork,\n  useProviderForChain,\n} from '@snx-v3/useBlockchain';\nimport { useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useGetUSDTokens } from '@snx-v3/useGetUSDTokens';\nimport { erc7412Call } from '@snx-v3/withERC7412';\nimport { ZodBigNumber } from '@snx-v3/zod';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { useQuery } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\nimport { useAllCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\n\nconst PriceSchema = ZodBigNumber.transform((x) => wei(x));\n\nexport async function loadPrices({\n  CoreProxy,\n  collateralAddresses,\n}: {\n  CoreProxy: ethers.Contract;\n  collateralAddresses: string[];\n}) {\n  const calls = await Promise.all(\n    collateralAddresses.map((address) => {\n      return CoreProxy.populateTransaction.getCollateralPrice(address);\n    })\n  );\n  if (calls.length === 0) return { calls: [], decoder: () => [] };\n\n  const decoder = (multicallEncoded: string | string[]) => {\n    if (Array.isArray(multicallEncoded)) {\n      return multicallEncoded.map((encoded) => {\n        const pricesEncoded = CoreProxy.interface.decodeFunctionResult(\n          'getCollateralPrice',\n          encoded\n        )[0];\n\n        return PriceSchema.parse(pricesEncoded);\n      });\n    } else {\n      const pricesEncoded = CoreProxy.interface.decodeFunctionResult(\n        'getCollateralPrice',\n        multicallEncoded\n      )[0];\n      return PriceSchema.parse(pricesEncoded);\n    }\n  };\n  return { calls, decoder };\n}\n\nexport const useCollateralPrices = (customNetwork?: Network) => {\n  const { network } = useNetwork();\n  const { data: CoreProxy } = useCoreProxy({ customNetwork });\n  const { data: collateralData } = useCollateralTypes(false, customNetwork);\n  const { data: usdTokens } = useGetUSDTokens(customNetwork);\n\n  const targetNetwork = customNetwork || network;\n  const isBase = isBaseAndromeda(targetNetwork?.id, targetNetwork?.preset);\n\n  const collateralAddresses =\n    isBase && usdTokens?.sUSD\n      ? collateralData?.map((x) => x.tokenAddress).concat(usdTokens.sUSD)\n      : collateralData?.map((x) => x.tokenAddress);\n\n  const connectedProvider = useDefaultProvider();\n  const offlineProvider = useProviderForChain(customNetwork);\n  const { data: priceUpdateTx } = useAllCollateralPriceUpdates(customNetwork);\n\n  const provider = customNetwork ? offlineProvider : connectedProvider;\n\n  return useQuery({\n    enabled: Boolean(CoreProxy && collateralAddresses && collateralAddresses?.length > 0),\n    queryKey: [\n      `${targetNetwork?.id}-${targetNetwork?.preset}`,\n      'CollateralPrices',\n      {\n        collateralAddresses: collateralAddresses?.filter(\n          (item, pos) => collateralAddresses.indexOf(item) === pos\n        ),\n        priceUpdateTx: stringToHash(priceUpdateTx?.data),\n      },\n    ],\n    queryFn: async () => {\n      if (\n        !CoreProxy ||\n        !collateralAddresses ||\n        collateralAddresses.length == 0 ||\n        !targetNetwork ||\n        !provider\n      ) {\n        throw 'useCollateralPrices missing required data';\n      }\n\n      const { calls, decoder } = await loadPrices({ CoreProxy, collateralAddresses });\n\n      const allCalls = [...calls];\n      if (priceUpdateTx) {\n        allCalls.unshift(priceUpdateTx as any);\n      }\n\n      const prices = await erc7412Call(\n        targetNetwork,\n        provider,\n        allCalls,\n        decoder,\n        'useCollateralPrices'\n      );\n\n      return collateralAddresses.reduce((acc: Record<string, Wei | undefined>, address, i) => {\n        if (Array.isArray(prices)) {\n          acc[address] = prices[i];\n        } else {\n          acc[address] = prices;\n        }\n        return acc;\n      }, {});\n    },\n  });\n};\n","import { importCollateralTokens } from '@snx-v3/contracts';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { ZodBigNumber } from '@snx-v3/zod';\nimport { wei } from '@synthetixio/wei';\nimport { useQuery } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\nimport { z } from 'zod';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\n\nconst CollateralConfigurationSchema = z.object({\n  symbol: z.string(),\n  name: z.string(),\n  decimals: z.number().transform((x) => String(x)),\n  depositingEnabled: z.boolean(),\n  issuanceRatioD18: ZodBigNumber.transform((x) => wei(x)),\n  liquidationRatioD18: ZodBigNumber.transform((x) => wei(x)),\n  liquidationRewardD18: ZodBigNumber.transform((x) => wei(x)),\n  oracleNodeId: z.string(),\n  tokenAddress: z.string().startsWith('0x'), // As of current version in zod this will be a string: https://github.com/colinhacks/zod/issues/1747\n  minDelegationD18: ZodBigNumber.transform((x) => wei(x)),\n});\n\nconst CollateralTypeSchema = CollateralConfigurationSchema.extend({\n  displaySymbol: z.string(),\n});\n\nexport type CollateralType = z.infer<typeof CollateralTypeSchema>;\n\nasync function loadCollateralTypes(chainId: number, preset: string): Promise<CollateralType[]> {\n  const tokenConfigsRaw = await importCollateralTokens(chainId, preset);\n\n  const tokenConfigs = tokenConfigsRaw\n    .map((config) => ({\n      ...config,\n      issuanceRatioD18: ethers.BigNumber.from(config.issuanceRatioD18),\n      liquidationRatioD18: ethers.BigNumber.from(config.liquidationRatioD18),\n      liquidationRewardD18: ethers.BigNumber.from(config.liquidationRewardD18),\n      minDelegationD18: ethers.BigNumber.from(config.minDelegationD18),\n    }))\n    .map((x) => CollateralConfigurationSchema.parse({ ...x }))\n    .filter(({ depositingEnabled }) => depositingEnabled);\n\n  return tokenConfigs.map((config) => ({\n    ...config,\n    displaySymbol: config.symbol,\n  }));\n}\n\nexport function useCollateralTypes(includeDelegationOff = false, customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n  const { data: systemToken } = useSystemToken(customNetwork);\n\n  const query = useQuery({\n    enabled: Boolean(targetNetwork?.id && targetNetwork?.preset && systemToken),\n    queryKey: [\n      `${targetNetwork?.id}-${targetNetwork?.preset}`,\n      'CollateralTypes',\n      { systemToken: systemToken?.symbol, includeDelegationOff },\n    ],\n    queryFn: async () => {\n      if (!(targetNetwork?.id && targetNetwork?.preset && systemToken))\n        throw Error('useCollateralTypes should not be enabled when contracts missing');\n\n      const collateralTypes = (await loadCollateralTypes(targetNetwork.id, targetNetwork.preset))\n        .map((collateralType) => {\n          const isBase = isBaseAndromeda(targetNetwork?.id, targetNetwork?.preset);\n          if (isBase && collateralType.symbol === 'sUSDC') {\n            return {\n              ...collateralType,\n              symbol: 'USDC',\n              displaySymbol: 'USDC',\n              name: 'USD Coin',\n            };\n          }\n          if (isBase && collateralType.symbol === 'sStataUSDC') {\n            return {\n              ...collateralType,\n              symbol: 'stataUSDC',\n              displaySymbol: 'stataUSDC',\n              name: 'Static aUSDC',\n            };\n          }\n          return {\n            ...collateralType,\n            displaySymbol: collateralType.displaySymbol ?? collateralType.symbol,\n          };\n        })\n        .filter((collateralType) => collateralType.tokenAddress !== systemToken.address);\n\n      if (includeDelegationOff) {\n        return collateralTypes;\n      }\n\n      // By default we only return collateral types that have minDelegationD18 < MaxUint256\n      // When minDelegationD18 === MaxUint256, delegation is effectively disabled\n      return collateralTypes.filter((collateralType) =>\n        collateralType.minDelegationD18.lt(ethers.constants.MaxUint256)\n      ) as CollateralType[];\n    },\n    // one hour in ms\n    staleTime: Infinity,\n    placeholderData: [],\n  });\n\n  return {\n    ...query,\n    isLoading:\n      query.isLoading || !Boolean(targetNetwork?.id && targetNetwork?.preset && systemToken),\n  };\n}\n\nexport function useCollateralType(collateralSymbol?: string) {\n  const { data: collateralTypes, isFetching: isCollateralTypesFetching } = useCollateralTypes();\n\n  function getCollateralType(collateralSymbol?: string) {\n    if (!collateralTypes || !collateralTypes?.length) {\n      return;\n    }\n\n    if (!collateralSymbol) {\n      return collateralTypes[0];\n    }\n\n    return collateralTypes?.find(\n      (collateral) => `${collateral.symbol}`.toLowerCase() === `${collateralSymbol}`.toLowerCase()\n    );\n  }\n\n  return {\n    isFetching: isCollateralTypesFetching,\n    data: getCollateralType(collateralSymbol),\n  };\n}\n","export async function importCollateralTokens(chainId, preset) {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: collateralTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/collateralTokens.json'),\n      ]);\n      return collateralTokens;\n    }\n    case '11155111-main': {\n      const [{ default: collateralTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/collateralTokens.json'),\n      ]);\n      return collateralTokens;\n    }\n    case '10-main': {\n      const [{ default: collateralTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/collateralTokens.json'),\n      ]);\n      return collateralTokens;\n    }\n    case '8453-andromeda': {\n      const [{ default: collateralTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/collateralTokens.json'),\n      ]);\n      return collateralTokens;\n    }\n    case '84532-andromeda': {\n      const [{ default: collateralTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/collateralTokens.json'),\n      ]);\n      return collateralTokens;\n    }\n    case '42161-main': {\n      const [{ default: collateralTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/collateralTokens.json'),\n      ]);\n      return collateralTokens;\n    }\n    case '421614-main': {\n      const [{ default: collateralTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/collateralTokens.json'),\n      ]);\n      return collateralTokens;\n    }\n    case '42161-arbthetix': {\n      const [{ default: collateralTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-arbthetix/collateralTokens.json'),\n      ]);\n      return collateralTokens;\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for CollateralTokens`);\n    }\n  }\n}\n","import { ethers, utils } from 'ethers';\nimport { useCallback } from 'react';\nimport { ERC7412_ABI } from '@snx-v3/withERC7412';\n\nexport type ContractErrorType = {\n  data: string;\n  name: string;\n  signature: string;\n  args: Record<string, any>;\n};\n\nexport function useContractErrorParser(Contract?: ethers.Contract) {\n  return useCallback(\n    (error: any): ContractErrorType | undefined => {\n      if (!Contract) {\n        return undefined;\n      }\n      try {\n        const errorData = error?.error?.data?.data || error?.error?.error?.data; // add more options as we find them\n        if (!errorData) {\n          console.error({ error }); // intentional logging as object so we can inspect all properties\n          return undefined;\n        }\n\n        const contractAbi = Contract.interface.format(utils.FormatTypes.full) as string[];\n        const newContract = new ethers.Contract(\n          Contract.address,\n          Array.from(\n            new Set(\n              contractAbi.concat(ERC7412_ABI).concat([\n                // ERC721 errors\n                'error CannotSelfApprove(address addr)',\n                'error InvalidTransferRecipient(address addr)',\n                'error InvalidOwner(address addr)',\n                'error TokenDoesNotExist(uint256 id)',\n                'error TokenAlreadyMinted(uint256 id)',\n              ])\n            )\n          ), // uniq\n          Contract.signer || Contract.provider\n        );\n        const errorParsed = newContract.interface.parseError(errorData);\n        const errorArgs = Object.fromEntries(\n          Object.entries(errorParsed.args)\n            .filter(([key]) => `${parseInt(key)}` !== key)\n            .map(([key, value]) => {\n              if (value instanceof ethers.BigNumber) {\n                // Guess wei\n                const unwei = parseFloat(ethers.utils.formatEther(value.toString()));\n                if (unwei > 0.001) {\n                  // must be wei\n                  return [key, unwei];\n                }\n\n                // Guess date\n                if (\n                  value.toNumber() > new Date(2000, 1, 1).getTime() / 1000 &&\n                  value.toNumber() < new Date(2100, 1, 1).getTime() / 1000\n                ) {\n                  return [key, new Date(value.toNumber() * 1000)];\n                }\n\n                // Just a number\n                return [key, parseFloat(value.toString())];\n              }\n\n              // Not a number\n              return [key, value];\n            })\n        );\n\n        return {\n          data: errorData,\n          name: errorParsed.name,\n          signature: errorParsed.signature,\n          args: errorArgs,\n        };\n      } catch (e) {\n        console.error(e);\n        return undefined;\n      }\n    },\n    [Contract]\n  );\n}\n","import { Contract } from '@ethersproject/contracts';\nimport { useQuery } from '@tanstack/react-query';\nimport {\n  Network,\n  useNetwork,\n  useProvider,\n  useProviderForChain,\n  useSigner,\n  useWallet,\n} from '@snx-v3/useBlockchain';\nimport { importCoreProxy } from '@snx-v3/contracts';\n\nexport function useCoreProxy({\n  customNetwork,\n  isWrite = false,\n}: {\n  customNetwork?: Network;\n  isWrite?: boolean;\n} = {}) {\n  const { network } = useNetwork();\n  const provider = useProvider();\n  const signer = useSigner();\n  const { activeWallet } = useWallet();\n  const targetNetwork = customNetwork || network;\n  const providerForChain = useProviderForChain(targetNetwork);\n\n  return useQuery({\n    queryKey: [\n      `${targetNetwork?.id}-${targetNetwork?.preset}`,\n      'CoreProxy',\n      isWrite,\n      activeWallet?.address,\n    ],\n    queryFn: async function () {\n      const signerOrProvider = signer || provider;\n      if (isWrite && signerOrProvider) {\n        const { address, abi } = await importCoreProxy(network?.id, network?.preset);\n        return new Contract(address, abi, signerOrProvider);\n      }\n      if (targetNetwork) {\n        const { address, abi } = await importCoreProxy(targetNetwork.id, targetNetwork.preset);\n        return new Contract(address, abi, providerForChain || provider || undefined);\n      }\n\n      if (!signerOrProvider || !network) throw new Error('Should be disabled CP');\n    },\n    enabled: Boolean(signer || provider || providerForChain),\n    staleTime: Infinity,\n  });\n}\n","import { useQuery } from '@tanstack/react-query';\nimport { useWallet, useNetwork, useDefaultProvider } from '@snx-v3/useBlockchain';\nimport { ZodBigNumber } from '@snx-v3/zod';\nimport { wei } from '@synthetixio/wei';\n\nconst BalanceSchema = ZodBigNumber.transform((x) => wei(x));\n\nexport function useEthBalance(networkId?: number) {\n  const { activeWallet } = useWallet();\n  const provider = useDefaultProvider();\n  const { network } = useNetwork();\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'EthBalance',\n      { accountAddress: activeWallet?.address },\n    ],\n    queryFn: async () => {\n      if (!activeWallet || !provider) throw Error('useEthBalance should not be enabled');\n      return BalanceSchema.parse(await provider.getBalance(activeWallet.address));\n    },\n    enabled: Boolean((networkId ?? network?.id) && activeWallet?.address),\n  });\n}\n","import type { GasPrices } from '@snx-v3/useGasPrice';\nimport type { BigNumber } from '@ethersproject/bignumber';\nimport { wei } from '@synthetixio/wei';\nimport { GWEI_DECIMALS, GAS_LIMIT_MULTIPLIER } from '@snx-v3/constants';\n\n// Note it looks like gas limit estimation is coming in higher slightly higher than what gets used according to etherscan\n// Will try without a buffer, if we get user report of out of gas we can increase it again.\nconst GAS_LIMIT_BUFFER = wei(GAS_LIMIT_MULTIPLIER, GWEI_DECIMALS);\n\nfunction addGasLimitBuffer(gasLimit?: BigNumber) {\n  return wei(gasLimit ?? 0, GWEI_DECIMALS)\n    .mul(GAS_LIMIT_BUFFER)\n    .toBN();\n}\n\nexport function formatGasPriceForTransaction({\n  gasPrices,\n  gasSpeed,\n  gasLimit,\n}: {\n  gasPrices: GasPrices;\n  gasSpeed: keyof GasPrices;\n  gasLimit: BigNumber;\n}) {\n  const gasPrice = gasPrices[gasSpeed];\n  if ('baseFeePerGas' in gasPrice) {\n    const { baseFeePerGas: _baseFeePerGas, ...gasPriceToReturn } = gasPrice;\n    return { ...gasPriceToReturn, gasLimit: addGasLimitBuffer(gasLimit) };\n  }\n  return { ...gasPrice, gasLimit: addGasLimitBuffer(gasLimit) };\n}\n","// copied from npm package: moving-averages\n// Only grabbed what we needed and added types\nexport const isNumber = (subject: unknown) =>\n  typeof subject === 'number' &&\n  // is not NaN: `NaN === NaN` => `false`\n  subject === subject;\n\nexport const dma = (data: number[], alpha: number, noHead?: boolean): number[] => {\n  const length = data.length;\n\n  if (alpha > 1) {\n    return Array(length);\n  }\n\n  if (alpha === 1) {\n    return data.slice();\n  }\n\n  const noArrayWeight = !Array.isArray(alpha);\n  const ret = [];\n\n  let datum;\n\n  // period `i`\n  let i = 0;\n\n  // `s` is the value of the DWMA at any time period `i`\n  let s = 0;\n\n  // Handles head\n  for (; i < length; i++) {\n    datum = data[i];\n\n    if (isNumber(datum) && (noArrayWeight || isNumber(datum))) {\n      ret[i] = noHead ? 0 : datum;\n\n      s = datum;\n      i++;\n\n      break;\n    }\n  }\n\n  // Dynamic weights: an array of weights\n  // Ref:\n  // https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\n  // with a dynamic alpha\n  if (!noArrayWeight) {\n    for (; i < length; i++) {\n      datum = data[i];\n\n      isNumber(datum) && isNumber(alpha[i])\n        ? (s = ret[i] = alpha[i] * datum + (1 - alpha[i]) * s)\n        : (ret[i] = ret[i - 1]);\n    }\n\n    return ret;\n  }\n\n  const o = 1 - alpha;\n\n  // Fixed alpha\n  for (; i < length; i++) {\n    datum = data[i];\n\n    isNumber(datum) ? (s = ret[i] = alpha * datum + o * s) : (ret[i] = ret[i - 1]);\n  }\n\n  return ret;\n};\n\nexport const ema = (data: number[], size: number) => dma(data, 2 / (size + 1));\n","import { Wei } from '@synthetixio/wei';\n\nexport const rewardsFilterOutliers = (\n  blocksRewards: Wei[][],\n  outlierBlocks: number[],\n  rewardIndex: number\n) =>\n  blocksRewards\n    .filter((_, index) => !outlierBlocks.includes(index))\n    .map((reward) => reward[rewardIndex].toNumber());\n\nexport const getOutlierBlocksToRemove = (blocksRewards: Wei[][], index: number) => {\n  const blocks: number[] = [];\n  blocksRewards\n    .map((reward) => reward[index])\n    .forEach((gweiReward, i) => {\n      if (gweiReward.gt(5)) {\n        blocks.push(i);\n      }\n    });\n  return blocks;\n};\n","/**\n * This module is heavily inspired by https://github.com/rainbow-me/fee-suggestions\n * That library have some hardcoded min and max that doesn't make sense for optimism. See: https://github.com/rainbow-me/fee-suggestions/blob/main/src/index.ts#L165\n *\n * So I changed min max a bit\n *\n * That library is also a bit overkill in how it calculates maxFeePerGas per gas. It's using linear regression and sampling curves.\n * Instead of doing that, this module calculates max by taking  (previous baseFeePerGas * 2) + maxPriorityFeePerGas.\n *\n * The calculation for maxPriorityFeePerGas I kept quite complex since that will affect what the user actually pay..\n * It's calculated based on the Exponential Moving Average (EMA) of the block rewards at the 15th, 30th, and 45th percentiles, after removing the outliers.\n *\n * The other differences is that I also rely on our Wei library.\n *\n */\nimport { ethers } from 'ethers';\nimport { ema } from './math';\nimport { getOutlierBlocksToRemove, rewardsFilterOutliers } from './utils';\nimport { wei, Wei } from '@synthetixio/wei';\nimport { GWEI_DECIMALS } from '@snx-v3/constants';\n\ntype Reward = string[];\ntype GasUsedRatio = number[];\ninterface FeeHistoryResponse {\n  baseFeePerGas: string[];\n  gasUsedRatio: GasUsedRatio;\n  oldestBlock: number;\n  reward: Reward[];\n}\n\nconst defaultForLocalProvider = () => {\n  const baseFeePerGas = wei(1, 9).toBN();\n  const maxFeePerGas = wei(5, 9).toBN();\n  const maxPriorityFeePerGas = wei(1, 9).toBN();\n  return {\n    average: {\n      maxPriorityFeePerGas,\n      maxFeePerGas,\n      baseFeePerGas,\n    },\n    fast: {\n      maxPriorityFeePerGas,\n      maxFeePerGas,\n      baseFeePerGas,\n    },\n    fastest: {\n      maxPriorityFeePerGas,\n      maxFeePerGas,\n      baseFeePerGas,\n    },\n  };\n};\nexport const feeSuggestion = async (\n  provider: ethers.providers.JsonRpcProvider,\n  fromBlock = 'latest'\n) => {\n  // If local or base-goerli, use defaults\n  // Base goerli sometimes doesn't have enough tx we can use to estimate the priority fee, when this happens the tx will get \"tx underprices\"\n  if (provider.network.chainId === 13370 || provider.network.chainId === 84531) {\n    return defaultForLocalProvider();\n  }\n  const feeHistory = await provider\n    .send('eth_feeHistory', [\n      ethers.utils.hexStripZeros(ethers.utils.hexlify(10)),\n      fromBlock,\n      [15, 30, 45],\n    ])\n    .then((feeHistoryResponse: FeeHistoryResponse) => {\n      return {\n        baseFeePerGas: feeHistoryResponse.baseFeePerGas.map((x) => wei(x, GWEI_DECIMALS, true)),\n        reward: feeHistoryResponse.reward.map((x) => x.map((num) => wei(num, GWEI_DECIMALS, true))),\n      };\n    });\n  const blocksRewards = feeHistory.reward;\n  const baseFeePerGas = feeHistory.baseFeePerGas.at(-1);\n\n  if (!blocksRewards.length) throw new Error('Error: block reward was empty');\n  if (!baseFeePerGas) throw new Error('Error: currentBaseFee was empty');\n\n  const outlierBlocks = getOutlierBlocksToRemove(blocksRewards, 0);\n\n  const blocksRewardsPerc15 = rewardsFilterOutliers(blocksRewards, outlierBlocks, 0);\n  const blocksRewardsPerc30 = rewardsFilterOutliers(blocksRewards, outlierBlocks, 1);\n  const blocksRewardsPerc45 = rewardsFilterOutliers(blocksRewards, outlierBlocks, 2);\n\n  const emaPerc15 = ema(blocksRewardsPerc15, blocksRewardsPerc15.length)[\n    blocksRewardsPerc15.length - 1\n  ];\n  const emaPerc30 = ema(blocksRewardsPerc30, blocksRewardsPerc30.length)[\n    blocksRewardsPerc30.length - 1\n  ];\n  const emaPerc45 = ema(blocksRewardsPerc45, blocksRewardsPerc45.length)[\n    blocksRewardsPerc45.length - 1\n  ];\n\n  if (emaPerc15 === undefined || emaPerc30 === undefined || emaPerc45 === undefined) {\n    throw new Error('Error: ema was undefined');\n  }\n\n  const averageMaxPriorityFee = wei(Math.min(emaPerc15, 1), GWEI_DECIMALS);\n  const fastMaxPriorityFee = wei(Math.min(emaPerc30, 2), GWEI_DECIMALS);\n  const fastestMaxPriorityFee = wei(Math.min(emaPerc45, 4), GWEI_DECIMALS);\n\n  const baseFeeToMax = (base: Wei, prio: Wei) => base.mul(wei(2, GWEI_DECIMALS)).add(prio);\n  return {\n    average: {\n      maxPriorityFeePerGas: averageMaxPriorityFee.toBN(),\n      maxFeePerGas: baseFeeToMax(baseFeePerGas, averageMaxPriorityFee).toBN(),\n      baseFeePerGas: baseFeePerGas.toBN(),\n    },\n    fast: {\n      maxPriorityFeePerGas: fastMaxPriorityFee.toBN(),\n      maxFeePerGas: baseFeeToMax(baseFeePerGas, fastMaxPriorityFee).toBN(),\n      baseFeePerGas: baseFeePerGas.toBN(),\n    },\n    fastest: {\n      maxPriorityFeePerGas: fastestMaxPriorityFee.toBN(),\n      maxFeePerGas: baseFeeToMax(baseFeePerGas, fastestMaxPriorityFee).toBN(),\n      baseFeePerGas: baseFeePerGas.toBN(),\n    },\n  };\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\nimport { useNetwork, useProvider } from '@snx-v3/useBlockchain';\nimport { feeSuggestion } from '@snx-v3/feeSuggestion';\n\nconst getGasPriceFromProvider = async (provider: ethers.providers.JsonRpcProvider) => {\n  try {\n    const gasPrice = await provider.getGasPrice();\n    return {\n      fastest: { gasPrice },\n      fast: { gasPrice },\n      average: { gasPrice },\n    };\n  } catch (e) {\n    throw new Error('Could not retrieve gas price from provider');\n  }\n};\n\nexport const getGasPrice = async ({ provider }: { provider: ethers.providers.JsonRpcProvider }) => {\n  try {\n    const block = await provider.getBlock('latest');\n    if (block.baseFeePerGas) {\n      return feeSuggestion(provider);\n    }\n    // When missing baseFeePerGas we get the Gas Price through the provider\n    return getGasPriceFromProvider(provider);\n  } catch (e) {\n    throw new Error(`Could not fetch and compute network fee. ${e}`);\n  }\n};\n\nexport type GasPrices = Awaited<ReturnType<typeof getGasPrice>>;\n\nexport const useGasPrice = () => {\n  const { network } = useNetwork();\n  const provider = useProvider();\n\n  return useQuery({\n    enabled: Boolean(provider),\n    queryKey: [`${network?.id}-${network?.preset}`, 'GasPrice'],\n    queryFn: () => {\n      if (!provider) throw new Error('useGasPrice should not be enabled');\n      return getGasPrice({ provider });\n    },\n  });\n};\n","import React, {\n  createContext,\n  useState,\n  PropsWithChildren,\n  Dispatch,\n  SetStateAction,\n  useContext,\n} from 'react';\n\nexport type GasSpeed = 'average' | 'fast' | 'fastest';\n\nexport const GasSpeedContext = createContext<{\n  gasSpeed: GasSpeed;\n  setGasSpeed: Dispatch<SetStateAction<GasSpeed>>;\n}>({\n  gasSpeed: 'average',\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  setGasSpeed: () => {},\n});\n\nexport const GasSpeedProvider: React.FC<PropsWithChildren> = ({ children }) => {\n  const [gasSpeed, setGasSpeed] = useState<GasSpeed>('average');\n  return (\n    <GasSpeedContext.Provider value={{ gasSpeed, setGasSpeed }}>\n      {children}\n    </GasSpeedContext.Provider>\n  );\n};\n\nexport const useGasSpeed = () => {\n  return useContext(GasSpeedContext);\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { useSpotMarketProxy } from '@snx-v3/useSpotMarketProxy';\nimport { USDC_BASE_MARKET, isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\n\nexport function useGetUSDTokens(customNetwork?: Network) {\n  const { network } = useNetwork();\n\n  const targetNetwork = customNetwork || network;\n\n  const isBase = isBaseAndromeda(targetNetwork?.id, targetNetwork?.preset);\n\n  const { data: collateralTypes } = useCollateralTypes(false, customNetwork);\n  const { data: SpotMarket } = useSpotMarketProxy(customNetwork);\n  const { data: systemToken } = useSystemToken(customNetwork);\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'GetUSDTokens'],\n    enabled: Boolean(targetNetwork?.id && collateralTypes?.length && systemToken && SpotMarket),\n    queryFn: async () => {\n      if (!targetNetwork?.id || !systemToken || !SpotMarket) {\n        throw 'useGetUSDTokens queries are not ready';\n      }\n      const USDC: string = isBase\n        ? (await (SpotMarket as any)?.getWrapper(USDC_BASE_MARKET))?.wrapCollateralType\n        : undefined;\n\n      return {\n        snxUSD: systemToken.address,\n        sUSD: collateralTypes?.find((type) =>\n          isBase ? type.symbol.toLowerCase() === 'usdc' : type.symbol.toLowerCase() === 'susdc'\n        )?.tokenAddress,\n        USDC,\n      };\n    },\n  });\n}\n\nexport const useGetWrapperToken = (marketId: string, customNetwork?: Network) => {\n  const { network } = useNetwork();\n\n  const targetNetwork = customNetwork || network;\n\n  const isBase = isBaseAndromeda(targetNetwork?.id, targetNetwork?.preset);\n\n  const { data: SpotMarket } = useSpotMarketProxy(customNetwork);\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'GetWrapperToken', marketId],\n    enabled: Boolean(targetNetwork?.id && SpotMarket && isBase),\n    queryFn: async () => {\n      if (!targetNetwork?.id || !SpotMarket) {\n        throw 'useGetWrapperToken queries are not ready';\n      }\n\n      return isBase\n        ? (await (SpotMarket as any)?.getWrapper(marketId))?.wrapCollateralType\n        : undefined;\n    },\n  });\n};\n","export async function importLegacyMarket(chainId, preset) {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/meta.json'),\n        import('@synthetixio/v3-contracts/1-main/LegacyMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.LegacyMarketProxy, abi };\n    }\n    case '11155111-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/meta.json'),\n        import('@synthetixio/v3-contracts/11155111-main/LegacyMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.LegacyMarketProxy, abi };\n    }\n    /*case '10-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/meta.json'),\n        import('@synthetixio/v3-contracts/10-main/LegacyMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.LegacyMarketProxy, abi };\n\t\t}*/\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for Extras`);\n    }\n  }\n}\n","import { Contract } from '@ethersproject/contracts';\nimport { useQuery } from '@tanstack/react-query';\nimport {\n  Network,\n  useNetwork,\n  useProvider,\n  useProviderForChain,\n  useSigner,\n} from '@snx-v3/useBlockchain';\nimport { importLegacyMarket } from '@snx-v3/contracts';\n\nexport function useLegacyMarket(customNetwork?: Network) {\n  const providerForChain = useProviderForChain(customNetwork);\n  const { network } = useNetwork();\n  const provider = useProvider();\n  const signer = useSigner();\n  const targetNetwork = customNetwork || network;\n\n  const withSigner = Boolean(signer);\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'LegacyMarket', { withSigner }],\n    queryFn: async function () {\n      if (providerForChain && customNetwork) {\n        const { address: lmAddress, abi: lmAbi } = await importLegacyMarket(\n          customNetwork.id,\n          customNetwork.preset\n        );\n        return new Contract(lmAddress, lmAbi, providerForChain);\n      }\n\n      const signerOrProvider = signer || provider;\n      if (!signerOrProvider || !network) throw new Error('Should be disabled CP');\n\n      const { address: lmAddress, abi: lmAbi } = await importLegacyMarket(\n        network?.id,\n        network?.preset\n      );\n\n      return new Contract(lmAddress, lmAbi, signerOrProvider);\n    },\n    enabled: Boolean(signer || provider || providerForChain),\n    staleTime: Infinity,\n  });\n}\n","import { useMemo } from 'react';\nimport { stringToHash } from '@snx-v3/tsHelpers';\nimport { AccountCollateralType, loadAccountCollateral } from '@snx-v3/useAccountCollateral';\nimport { useNetwork, useProviderForChain } from '@snx-v3/useBlockchain';\nimport { loadPrices } from '@snx-v3/useCollateralPrices';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { erc7412Call } from '@snx-v3/withERC7412';\nimport { ZodBigNumber } from '@snx-v3/zod';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { useQuery } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\nimport { z } from 'zod';\nimport { useAllCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\nimport { useCollateralTypes } from '@snx-v3/useCollateralTypes';\n\nconst PositionCollateralSchema = z.object({\n  value: ZodBigNumber.transform((x) => wei(x)).optional(), // This is currently only removed on base-goreli\n  amount: ZodBigNumber.transform((x) => wei(x)),\n});\n\nconst DebtSchema = ZodBigNumber.transform((x) => wei(x));\n\nexport const loadPosition = async ({\n  CoreProxy,\n  accountId,\n  poolId,\n  tokenAddress,\n}: {\n  CoreProxy: ethers.Contract;\n  accountId: string;\n  poolId: string;\n  tokenAddress: string;\n}) => {\n  const calls = await Promise.all([\n    CoreProxy.populateTransaction.getPositionCollateral(accountId, poolId, tokenAddress),\n    CoreProxy.populateTransaction.getPositionDebt(accountId, poolId, tokenAddress),\n  ]);\n\n  const decoder = (multicallEncoded: string | string[]) => {\n    if (Array.isArray(multicallEncoded) && multicallEncoded.length === 2) {\n      const decodedCollateral = CoreProxy.interface.decodeFunctionResult(\n        'getPositionCollateral',\n        multicallEncoded[0]\n      );\n      const decodedDebt = CoreProxy.interface.decodeFunctionResult(\n        'getPositionDebt',\n        multicallEncoded[1]\n      )[0];\n      return {\n        debt: DebtSchema.parse(decodedDebt),\n        collateral: PositionCollateralSchema.parse({ ...decodedCollateral }),\n      };\n    }\n    throw Error('Expected array with two items');\n  };\n\n  return { calls, decoder };\n};\n\nexport type LiquidityPosition = {\n  collateralAmount: Wei;\n  collateralPrice: Wei;\n  collateralValue: Wei;\n  debt: Wei;\n  accountCollateral: AccountCollateralType;\n  usdCollateral: AccountCollateralType;\n  tokenAddress: string;\n  accountId: string;\n};\n\nexport const useLiquidityPosition = ({\n  tokenAddress,\n  accountId,\n  poolId,\n}: {\n  tokenAddress?: string;\n  accountId?: string;\n  poolId?: string;\n}) => {\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: systemToken } = useSystemToken();\n  const { network } = useNetwork();\n  const { data: priceUpdateTx } = useAllCollateralPriceUpdates();\n  const provider = useProviderForChain(network!);\n  const { data: collateralTypes } = useCollateralTypes(true);\n\n  const priceUpdateTxHash = useMemo(\n    () => (priceUpdateTx?.data ? stringToHash(priceUpdateTx?.data) : null),\n    [priceUpdateTx?.data]\n  );\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'LiquidityPosition',\n      { accountId },\n      {\n        pool: poolId,\n        token: tokenAddress,\n        systemToken: systemToken?.address,\n        provider: !!provider,\n      },\n      { priceUpdateTxHash },\n    ],\n    staleTime: 60000 * 5,\n    enabled: !!tokenAddress && !!accountId,\n    queryFn: async () => {\n      if (\n        !(CoreProxy && accountId && poolId && tokenAddress && systemToken && network && provider)\n      ) {\n        throw Error('useLiquidityPosition not ready');\n      }\n      const { calls: priceCalls, decoder: priceDecoder } = await loadPrices({\n        collateralAddresses: [tokenAddress],\n        CoreProxy,\n      });\n\n      const { calls: positionCalls, decoder: positionDecoder } = await loadPosition({\n        CoreProxy,\n        accountId,\n        poolId,\n        tokenAddress,\n      });\n\n      const { calls: accountCollateralCalls, decoder: accountCollateralDecoder } =\n        await loadAccountCollateral({\n          accountId,\n          tokenAddresses: [tokenAddress, systemToken.address],\n          CoreProxy,\n        });\n\n      const allCalls = priceCalls.concat(positionCalls).concat(accountCollateralCalls);\n\n      if (priceUpdateTx) {\n        allCalls.unshift(priceUpdateTx as any);\n      }\n\n      return await erc7412Call(\n        network,\n        provider,\n        allCalls,\n        (encoded) => {\n          if (!Array.isArray(encoded)) throw Error('Expected array');\n\n          const startOfPrice = 0;\n          const endOfPrice = priceCalls.length;\n          const startOfPosition = endOfPrice;\n          const endOfPosition = startOfPosition + positionCalls.length;\n\n          const startOfAccountCollateral = endOfPosition;\n          const collateralPrice = priceDecoder(encoded.slice(startOfPrice, endOfPrice));\n          const decodedPosition = positionDecoder(encoded.slice(startOfPosition, endOfPosition));\n          const [accountCollateral, usdCollateral] = accountCollateralDecoder(\n            encoded.slice(startOfAccountCollateral)\n          );\n\n          const collateralType = collateralTypes?.find(\n            (x) => x.tokenAddress.toLowerCase() === accountCollateral.tokenAddress.toLowerCase()\n          );\n          if (collateralType) {\n            accountCollateral.symbol = collateralType.symbol;\n            accountCollateral.displaySymbol = collateralType.displaySymbol;\n            accountCollateral.decimals = collateralType.decimals;\n          }\n\n          return {\n            collateralPrice: Array.isArray(collateralPrice) ? collateralPrice[0] : collateralPrice,\n            collateralAmount: decodedPosition.collateral.amount,\n            collateralValue: decodedPosition.collateral.amount.mul(collateralPrice),\n            debt: decodedPosition.debt,\n            tokenAddress,\n            accountCollateral,\n            usdCollateral,\n            accountId,\n          };\n        },\n        `useLiquidityPosition`\n      );\n    },\n  });\n};\n","import { Contract } from '@ethersproject/contracts';\nimport { useQuery } from '@tanstack/react-query';\nimport {\n  Network,\n  useNetwork,\n  useProvider,\n  useProviderForChain,\n  useSigner,\n  useWallet,\n} from '@snx-v3/useBlockchain';\nimport { importMulticall3 } from '@snx-v3/contracts';\n\nexport function useMulticall3(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const providerForChain = useProviderForChain(customNetwork);\n  const provider = useProvider();\n  const signer = useSigner();\n  const signerOrProvider = signer || provider || providerForChain;\n  const withSigner = Boolean(signer);\n  const { activeWallet } = useWallet();\n\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [\n      `${targetNetwork?.id}-${targetNetwork?.preset}`,\n      'Multicall3',\n      { withSigner },\n      activeWallet?.address,\n    ],\n    queryFn: async function () {\n      if (providerForChain && customNetwork) {\n        const { address, abi } = await importMulticall3(customNetwork.id, customNetwork.preset);\n        return new Contract(address, abi, providerForChain);\n      }\n\n      if (!network || !signerOrProvider) throw new Error('Network or signer not available');\n      const { address, abi } = await importMulticall3(network.id, network.preset);\n      return new Contract(address, abi, signerOrProvider);\n    },\n    enabled: Boolean(signerOrProvider),\n    staleTime: Infinity,\n  });\n}\n","import { useQuery } from '@tanstack/react-query';\nimport { Network, useNetwork, useProviderForChain } from '@snx-v3/useBlockchain';\nimport { erc7412Call, getDefaultFromAddress } from '@snx-v3/withERC7412';\nimport { importOracleManagerProxy } from '@snx-v3/contracts';\nimport { Contract } from 'ethers';\nimport { Wei } from '@synthetixio/wei';\n\nexport function useOraclePrice(nodeId?: string, customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n  const provider = useProviderForChain(targetNetwork);\n\n  return useQuery({\n    refetchInterval: 15000,\n    retry: false,\n    staleTime: 99999,\n    enabled: !!targetNetwork && !!provider && !!nodeId,\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'oracle-price'],\n    queryFn: async () => {\n      if (targetNetwork && provider) {\n        try {\n          const { address, abi } = await importOracleManagerProxy(\n            targetNetwork.id,\n            targetNetwork.preset\n          );\n\n          const OracleManagerProxy = new Contract(address, abi, provider);\n\n          const price = [await OracleManagerProxy.populateTransaction.process(nodeId)];\n\n          price[0].from = getDefaultFromAddress(targetNetwork?.name || '');\n\n          return await erc7412Call(\n            targetNetwork,\n            provider,\n            price,\n            (txs) => {\n              const result = OracleManagerProxy.interface.decodeFunctionResult(\n                'process',\n                Array.isArray(txs) ? txs[0] : txs\n              );\n              if (result?.node) {\n                return {\n                  price: new Wei(result.node.price),\n                  timestamp: new Date(Number(result.node.timestamp.mul(1000).toString())),\n                };\n              } else {\n                return {\n                  price: new Wei(result.price),\n                  timestamp: new Date(Number(result.timestamp.mul(1000).toString())),\n                };\n              }\n            },\n            'oraclePriceCall'\n          );\n        } catch (error) {\n          console.error(error);\n          throw error;\n        }\n      } else {\n        throw new Error('BaseProvider and BaseNetwork undefined');\n      }\n    },\n  });\n}\n","import { useParams as useParamsRouter, useSearchParams } from 'react-router-dom';\nimport { useMemo } from 'react';\n\nexport function searchParamsToObject(searchParams: URLSearchParams) {\n  return Object.fromEntries(Array.from(searchParams));\n}\n\nexport function sortObject(params: Record<string, string>): Record<string, string> {\n  return Object.fromEntries(Object.entries(params).sort(([a], [b]) => a.localeCompare(b)));\n}\n\nexport function cleanObject(params: Record<string, string | undefined>): Record<string, string> {\n  const cleaned = Object.entries(params).filter(([, value]) => value !== undefined) as [\n    [string, string],\n  ];\n  return Object.fromEntries(cleaned);\n}\n\nexport const useParams = (): Record<string, string | undefined> => {\n  const pathParams = useParamsRouter();\n  const [queryParams] = useSearchParams();\n\n  return useMemo(\n    () => sortObject({ ...cleanObject(pathParams), ...searchParamsToObject(queryParams) }),\n    [pathParams, queryParams]\n  );\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { NETWORKS, Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { ZodBigNumber } from '@snx-v3/zod';\nimport { z } from 'zod';\nimport { ethers } from 'ethers';\nimport { importCoreProxy } from '@snx-v3/contracts';\n\nexport const PoolIdSchema = ZodBigNumber.transform((x) => x.toString());\n\nexport const PoolSchema = z.object({\n  id: PoolIdSchema,\n  name: z.string().default('Unnamed Pool'),\n  isPreferred: z.boolean(),\n});\n\nexport type PoolType = z.infer<typeof PoolSchema>;\n\nexport const PoolsSchema = z.array(PoolSchema);\nexport type PoolsType = z.infer<typeof PoolsSchema>;\n\nexport function usePools(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  const { data: CoreProxy } = useCoreProxy({ customNetwork: targetNetwork });\n\n  return useQuery({\n    enabled: Boolean(targetNetwork),\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, CoreProxy?.address, 'Pools'],\n    queryFn: async () => {\n      if (!CoreProxy) {\n        throw 'usePools is missing required data';\n      }\n\n      const [prefferedPoolId, approvedPoolIds] = await Promise.all([\n        CoreProxy.callStatic.getPreferredPool(),\n        CoreProxy.callStatic.getApprovedPools(),\n      ]);\n\n      const incompletePools = [\n        {\n          id: prefferedPoolId,\n          isPreferred: true,\n        },\n      ].concat(\n        approvedPoolIds.map((id: ethers.BigNumber) => ({\n          id: id,\n          isPreferred: false,\n        }))\n      );\n\n      const poolNames = await Promise.all(\n        incompletePools.map(async ({ id }) => await CoreProxy.getPoolName(id))\n      );\n\n      const poolsRaw = incompletePools.map(({ id, isPreferred }, i) => ({\n        id,\n        isPreferred,\n        name: poolNames[i],\n      }));\n\n      return PoolsSchema.parse(poolsRaw);\n    },\n  });\n}\n\nexport function usePool(poolId?: string, customNetwork?: Network) {\n  const { isFetching, error, data } = usePools(customNetwork);\n\n  return {\n    isLoading: isFetching,\n    error,\n    data: data?.find((item) => item.id === poolId),\n  };\n}\n\nexport function usePreferredPool(customNetwork?: Network) {\n  const { isLoading, error, data } = usePools(customNetwork);\n\n  return {\n    isLoading,\n    error,\n    data: data?.find((item) => item.isPreferred),\n  };\n}\n\nconst supportedNetworks = [1, 8453, 42161];\nconst supportedTestNetworks = [1, 11155111, 8453, 84532, 421614, 42161];\n\nexport function useGetAllPools(withTestnets: boolean) {\n  const networks = NETWORKS.filter((n) =>\n    withTestnets ? supportedTestNetworks.includes(n.id) : supportedNetworks.includes(n.id)\n  ).map((n) => ({\n    id: n.id,\n    token: n.token,\n    label: n.label,\n    rpcUrl: n.rpcUrl(),\n    preset: n.preset,\n  }));\n\n  return useQuery({\n    queryKey: ['AllPools'],\n    queryFn: async () => {\n      const allCoreProxies = (await Promise.all(\n        networks.map((network) => importCoreProxy(network.id, network.preset))\n      )) as any[];\n\n      const allCoreProxiesConnected = allCoreProxies.map(\n        (proxies, index) =>\n          new ethers.Contract(\n            proxies.address,\n            proxies.abi,\n            new ethers.providers.JsonRpcProvider(networks[index].rpcUrl)\n          )\n      );\n\n      const prefferedPools = await Promise.all(\n        allCoreProxiesConnected.map((contract) => {\n          return contract.callStatic.getPreferredPool();\n        })\n      );\n      // TODO @dev reimplement when used\n      // const approvedPoolIds: ethers.BigNumber[][] = await Promise.all(\n      //   allCoreProxiesConnected.map((contract) => {\n      //     return contract.callStatic.getApprovedPools();\n      //   })\n      // );\n\n      const incompletePools = prefferedPools.map((prefferedPool, index) => ({\n        id: prefferedPool,\n        isPreferred: true,\n        network: networks[index].label,\n      }));\n\n      const poolNames = await Promise.all(\n        incompletePools.map(\n          async ({ id }, index) => await allCoreProxiesConnected[index].getPoolName(id)\n        )\n      );\n\n      const poolsRaw = incompletePools.map(({ id, isPreferred, network }, i) => ({\n        id,\n        isPreferred,\n        name: poolNames[i] as string,\n        network,\n      }));\n\n      return poolsRaw;\n    },\n  });\n}\n","import { getSubgraphUrl } from '@snx-v3/constants';\nimport { ARBITRUM, BASE_ANDROMEDA, MAINNET, NETWORKS } from '@snx-v3/useBlockchain';\nimport { compactInteger } from 'humanize-plus';\nimport { fetchApr } from '@snx-v3/useApr';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function usePoolsList() {\n  return useQuery({\n    queryKey: ['poolsList'],\n    queryFn: async () => {\n      try {\n        const [pools, aprs, toros] = await Promise.all([\n          fetchPoolsList(),\n          fetchAprs(),\n          fetchTorosPool(),\n        ]);\n\n        const synthetixPools = pools.map((p, i) => ({\n          ...p,\n          apr: aprs[i],\n        }));\n\n        return { synthetixPools, toros };\n      } catch (error) {\n        throw error;\n      }\n    },\n    staleTime: 60000 * 10,\n  });\n}\n\nexport function usePool(networkId: number, poolId: string) {\n  const { data, isLoading } = usePoolsList();\n\n  // TODO: In the future if we have multiple pools per network filter by poolId also\n  return {\n    data: data?.synthetixPools.find(\n      (p) => p.network.id === networkId && p.poolInfo[0].pool.id === poolId\n    ),\n    isLoading,\n  };\n}\n\nconst supportedNetworks = [MAINNET.id, BASE_ANDROMEDA.id, ARBITRUM.id];\n\nasync function fetchTorosPool() {\n  return fetch('https://api-v2.dhedge.org/graphql', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      query: `\n          query GetFund($address: String!) {\n              fund(address: $address) {\n                totalValue\n                apy {\n                  monthly\n                  weekly\n                }\n              }\n            }`,\n      variables: { address: '0xc1e02884af4a283ca25ab63c45360d220d69da52' },\n    }),\n  })\n    .then((response) => response.json())\n    .then(({ data }) => {\n      return {\n        tvl: compactInteger(data.fund.totalValue / 1e18, 1),\n        apy: data.fund.apy.monthly,\n      };\n    });\n}\n\nexport const networksOffline = NETWORKS.filter(\n  (n) => supportedNetworks.includes(n.id) && n.isSupported\n).map((n) => n);\n\nasync function fetchAprs() {\n  return Promise.all(networksOffline.map((network) => fetchApr(network.id)));\n}\n\nasync function fetchPoolsList() {\n  const urls = networksOffline.map((network) => getSubgraphUrl(network.name));\n\n  // Fetch all the pools from the subgraphs\n  const responses = await Promise.all(\n    urls.map((url) =>\n      fetch(url, { method: 'POST', body: JSON.stringify({ query: PoolsListData }) }).then((res) =>\n        res.json()\n      )\n    )\n  );\n\n  return responses.map((response, i) => ({\n    network: networksOffline[i],\n    poolInfo: response.data.vaults as PoolInfo[],\n  }));\n}\n\nconst gql = (data: TemplateStringsArray) => data[0];\n\nconst PoolsListData = gql`\n  query PoolsListData {\n    vaults(where: { pool: \"1\" }) {\n      collateral_type {\n        id\n        oracle_node_id\n        total_amount_deposited\n      }\n      pool {\n        name\n        id\n      }\n    }\n  }\n`;\n\ninterface PoolInfo {\n  collateral_type: {\n    id: string;\n    oracle_node_id: string;\n    total_amount_deposited: string;\n  };\n  pool: {\n    name: string;\n    id: string;\n  };\n}\n","import { useReducer } from 'react';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { formatGasPriceForTransaction } from '@snx-v3/useGasOptions';\nimport { useMutation } from '@tanstack/react-query';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport Wei from '@synthetixio/wei';\nimport { BigNumber } from 'ethers';\nimport { getGasPrice } from '@snx-v3/useGasPrice';\nimport { useGasSpeed } from '@snx-v3/useGasSpeed';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { notNil } from '@snx-v3/tsHelpers';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport { useAllCollateralPriceIds } from '@snx-v3/useAllCollateralPriceIds';\nimport { fetchPriceUpdates, priceUpdatesToPopulatedTx } from '@snx-v3/fetchPythPrices';\nimport { ZEROWEI } from '@snx-v3/constants';\n\nexport const useRepay = ({\n  accountId,\n  poolId,\n  collateralTypeAddress,\n  debtChange,\n  availableUSDCollateral,\n}: {\n  accountId?: string;\n  poolId?: string;\n  collateralTypeAddress?: string;\n  balance?: Wei;\n  availableUSDCollateral?: Wei;\n  debtChange: Wei;\n}) => {\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: systemToken } = useSystemToken();\n  const { data: collateralPriceIds } = useAllCollateralPriceIds();\n\n  const signer = useSigner();\n  const { network } = useNetwork();\n  const { gasSpeed } = useGasSpeed();\n  const provider = useProvider();\n\n  const mutation = useMutation({\n    mutationFn: async () => {\n      if (!signer || !network || !provider) throw new Error('No signer or network');\n      if (\n        !(\n          CoreProxy &&\n          poolId &&\n          accountId &&\n          collateralTypeAddress &&\n          systemToken &&\n          collateralPriceIds\n        )\n      ) {\n        return;\n      }\n      if (debtChange.eq(0)) {\n        return;\n      }\n\n      const debtChangeAbs = debtChange.abs();\n      const amountToDeposit = debtChangeAbs.sub(availableUSDCollateral || ZEROWEI);\n\n      try {\n        dispatch({ type: 'prompting' });\n\n        // Only deposit if user doesn't have enough sUSD collateral\n        const deposit = amountToDeposit.lte(0)\n          ? undefined\n          : CoreProxy.populateTransaction.deposit(\n              BigNumber.from(accountId),\n              systemToken.address,\n              amountToDeposit.toBN() // only deposit what's needed\n            );\n\n        const burn = CoreProxy.populateTransaction.burnUsd(\n          BigNumber.from(accountId),\n          BigNumber.from(poolId),\n          collateralTypeAddress,\n          debtChangeAbs.toBN()\n        );\n\n        const callsPromise = Promise.all([deposit, burn].filter(notNil));\n        const walletAddress = await signer.getAddress();\n        const collateralPriceCallsPromise = fetchPriceUpdates(\n          collateralPriceIds,\n          network.isTestnet\n        ).then((signedData) =>\n          priceUpdatesToPopulatedTx(walletAddress, collateralPriceIds, signedData)\n        );\n\n        const [calls, gasPrices, collateralPriceCalls] = await Promise.all([\n          callsPromise,\n          getGasPrice({ provider }),\n          collateralPriceCallsPromise,\n        ]);\n        const allCalls = collateralPriceCalls.concat(calls);\n\n        const erc7412Tx = await withERC7412(network, allCalls, 'useRepay', walletAddress);\n\n        const gasOptionsForTransaction = formatGasPriceForTransaction({\n          gasLimit: erc7412Tx.gasLimit,\n          gasPrices,\n          gasSpeed,\n        });\n\n        const txn = await signer.sendTransaction({ ...erc7412Tx, ...gasOptionsForTransaction });\n        dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n        await txn.wait();\n        dispatch({ type: 'success' });\n      } catch (error: any) {\n        dispatch({ type: 'error', payload: { error } });\n        throw error;\n      }\n    },\n  });\n  return {\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n};\n","import { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\nimport { importRewardsDistributors } from '@snx-v3/contracts';\n\nexport function useRewardsDistributors(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    enabled: Boolean(targetNetwork),\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'RewardsDistributors'],\n    queryFn: async function () {\n      if (!targetNetwork) {\n        throw new Error('OMG');\n      }\n      const rewardDistributors = await importRewardsDistributors(\n        targetNetwork?.id,\n        targetNetwork?.preset\n      );\n      return rewardDistributors;\n    },\n    staleTime: Infinity,\n  });\n}\n","export async function importRewardsDistributors(chainId, preset) {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: rewardsDistributors }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/rewardsDistributors.json'),\n      ]);\n      return rewardsDistributors;\n    }\n    case '11155111-main': {\n      const [{ default: rewardsDistributors }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/rewardsDistributors.json'),\n      ]);\n      return rewardsDistributors;\n    }\n    case '10-main': {\n      const [{ default: rewardsDistributors }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/rewardsDistributors.json'),\n      ]);\n      return rewardsDistributors;\n    }\n    case '8453-andromeda': {\n      const [{ default: rewardsDistributors }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/rewardsDistributors.json'),\n      ]);\n      return rewardsDistributors;\n    }\n    case '84532-andromeda': {\n      const [{ default: rewardsDistributors }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/rewardsDistributors.json'),\n      ]);\n      return rewardsDistributors;\n    }\n    case '42161-main': {\n      const [{ default: rewardsDistributors }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/rewardsDistributors.json'),\n      ]);\n      return rewardsDistributors;\n    }\n    case '421614-main': {\n      const [{ default: rewardsDistributors }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/rewardsDistributors.json'),\n      ]);\n      return rewardsDistributors;\n    }\n    case '42161-arbthetix': {\n      const [{ default: rewardsDistributors }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-arbthetix/rewardsDistributors.json'),\n      ]);\n      return rewardsDistributors;\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for RewardsDistributors`);\n    }\n  }\n}\n","export async function importSpotMarketProxy(chainId, preset) {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/meta.json'),\n        import('@synthetixio/v3-contracts/1-main/SpotMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.SpotMarketProxy, abi };\n    }\n    case '11155111-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/meta.json'),\n        import('@synthetixio/v3-contracts/11155111-main/SpotMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.SpotMarketProxy, abi };\n    }\n    case '10-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/meta.json'),\n        import('@synthetixio/v3-contracts/10-main/SpotMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.SpotMarketProxy, abi };\n    }\n    case '8453-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/8453-andromeda/SpotMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.SpotMarketProxy, abi };\n    }\n    case '84532-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/84532-andromeda/SpotMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.SpotMarketProxy, abi };\n    }\n    case '42161-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/meta.json'),\n        import('@synthetixio/v3-contracts/42161-main/SpotMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.SpotMarketProxy, abi };\n    }\n    case '421614-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/meta.json'),\n        import('@synthetixio/v3-contracts/421614-main/SpotMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.SpotMarketProxy, abi };\n    }\n    case '42161-arbthetix': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-arbthetix/meta.json'),\n        import('@synthetixio/v3-contracts/42161-arbthetix/SpotMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.SpotMarketProxy, abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for SpotMarketProxy`);\n    }\n  }\n}\n","import { Contract } from '@ethersproject/contracts';\nimport { useQuery } from '@tanstack/react-query';\nimport {\n  Network,\n  useNetwork,\n  useProvider,\n  useProviderForChain,\n  useSigner,\n  useWallet,\n} from '@snx-v3/useBlockchain';\nimport { importSpotMarketProxy } from '@snx-v3/contracts';\n\nexport function useSpotMarketProxy(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const provider = useProvider();\n  const signer = useSigner();\n  const providerForChain = useProviderForChain(customNetwork);\n  const signerOrProvider = signer || provider;\n  const { activeWallet } = useWallet();\n\n  const targetNetwork = customNetwork || network;\n\n  const withSigner = Boolean(signer);\n\n  return useQuery({\n    queryKey: [\n      `${targetNetwork?.id}-${targetNetwork?.preset}`,\n      'SpotMarketProxy',\n      { withSigner },\n      activeWallet?.address,\n    ],\n    queryFn: async function () {\n      if (!signerOrProvider || !targetNetwork) throw new Error('Should be disabled');\n\n      if (providerForChain && customNetwork) {\n        const { address, abi } = await importSpotMarketProxy(\n          targetNetwork.id,\n          targetNetwork.preset\n        );\n        return new Contract(address, abi, providerForChain);\n      }\n\n      const { address, abi } = await importSpotMarketProxy(\n        targetNetwork?.id,\n        targetNetwork?.preset\n      );\n\n      return new Contract(address, abi, signerOrProvider);\n    },\n    enabled: Boolean(signerOrProvider && ![1, 10].includes(targetNetwork?.id || 0)),\n    staleTime: Infinity,\n  });\n}\n","import { importSystemToken } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useSystemToken(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'SystemToken'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) {\n        throw new Error('OMFG');\n      }\n      return await importSystemToken(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n  });\n}\n","export async function importSystemToken(chainId, preset) {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: systemToken }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/systemToken.json'),\n      ]);\n      return systemToken;\n    }\n    case '11155111-main': {\n      const [{ default: systemToken }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/systemToken.json'),\n      ]);\n      return systemToken;\n    }\n    case '10-main': {\n      const [{ default: systemToken }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/systemToken.json'),\n      ]);\n      return systemToken;\n    }\n    case '8453-andromeda': {\n      const [{ default: systemToken }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/systemToken.json'),\n      ]);\n      return systemToken;\n    }\n    case '84532-andromeda': {\n      const [{ default: systemToken }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/systemToken.json'),\n      ]);\n      return systemToken;\n    }\n    case '42161-main': {\n      const [{ default: systemToken }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/systemToken.json'),\n      ]);\n      return systemToken;\n    }\n    case '421614-main': {\n      const [{ default: systemToken }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/systemToken.json'),\n      ]);\n      return systemToken;\n    }\n    case '42161-arbthetix': {\n      const [{ default: systemToken }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-arbthetix/systemToken.json'),\n      ]);\n      return systemToken;\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for SystemToken`);\n    }\n  }\n}\n","export function assertAddressType(tokenAddress?: string): tokenAddress is `0x${string}` {\n  return tokenAddress ? tokenAddress.startsWith('0x') : false;\n}\n","import { assertAddressType } from '@snx-v3/assertAddressType';\nimport { wei } from '@synthetixio/wei';\nimport { useQuery } from '@tanstack/react-query';\nimport {\n  Network,\n  useDefaultProvider,\n  useNetwork,\n  useProviderForChain,\n  useWallet,\n} from '@snx-v3/useBlockchain';\nimport { ethers, providers } from 'ethers';\nimport { ZodBigNumber } from '@snx-v3/zod';\nimport { ZEROWEI } from '@snx-v3/constants';\n\nexport const BalanceSchema = ZodBigNumber.transform((x) => wei(x));\n\nexport const abi = [\n  'function balanceOf(address) view returns (uint256)',\n  'function decimals() view returns (uint8)',\n];\n\nexport const useTokenBalance = (address?: string, customNetwork?: Network) => {\n  const { activeWallet } = useWallet();\n  const { network } = useNetwork();\n\n  const targetNetwork = customNetwork || network;\n  const provider = useProviderForChain(targetNetwork);\n\n  const tokenAddress = assertAddressType(address) ? address : undefined;\n  return useQuery({\n    queryKey: [\n      `${targetNetwork?.id}-${targetNetwork?.preset}`,\n      'TokenBalance',\n      { accountAddress: activeWallet?.address },\n      { tokenAddress },\n    ],\n    queryFn: async () => await fetchTokenBalance(address!, activeWallet!.address, provider!),\n    enabled: Boolean(activeWallet?.address && tokenAddress && provider && targetNetwork?.id),\n    refetchInterval: 15000,\n  });\n};\n\nexport const useTokenBalances = (addresses: string[], customNetwork?: Network) => {\n  const { activeWallet } = useWallet();\n  const defaultProvider = useDefaultProvider();\n\n  const provider = customNetwork\n    ? new ethers.providers.JsonRpcProvider(customNetwork.rpcUrl())\n    : defaultProvider;\n\n  const { network } = useNetwork();\n\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [\n      `${targetNetwork?.id}-${targetNetwork?.preset}`,\n      'TokenBalance',\n      { accountAddress: activeWallet?.address },\n      addresses.toString(),\n    ],\n    queryFn: async () =>\n      await Promise.all(\n        addresses.map((address) => fetchTokenBalance(address, activeWallet!.address, provider!))\n      ),\n    enabled: Boolean(activeWallet?.address && addresses.length && provider && targetNetwork?.id),\n    refetchInterval: 15000,\n  });\n};\n\nexport async function fetchTokenBalance(\n  tokenAddress: string,\n  walletAddress: string,\n  provider: providers.JsonRpcProvider\n) {\n  if (!tokenAddress) {\n    return ZEROWEI;\n  }\n  const contract = new ethers.Contract(tokenAddress, abi, provider);\n  const balance = wei(await contract.balanceOf(walletAddress), await contract.decimals());\n  return balance;\n}\n","import { assertAddressType } from '@snx-v3/assertAddressType';\nimport { useQuery } from '@tanstack/react-query';\nimport { Network, useProviderForChain, useWallet } from '@snx-v3/useBlockchain';\nimport { fetchTokenBalance } from './useTokenBalance';\n\nexport const useTokenBalanceForChain = (address?: string, network?: Network) => {\n  const { activeWallet } = useWallet();\n  const provider = useProviderForChain(network);\n  const tokenAddress = assertAddressType(address) ? address : undefined;\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'TokenBalanceForChain',\n      { accountAddress: activeWallet?.address },\n      { tokenAddress },\n    ],\n    queryFn: async () => {\n      if (activeWallet?.address && tokenAddress && provider) {\n        return await fetchTokenBalance(tokenAddress, activeWallet?.address, provider);\n      }\n    },\n    enabled: Boolean(activeWallet?.address && tokenAddress && provider),\n    refetchInterval: 5000,\n  });\n};\n","import { useOfflinePrices } from '@snx-v3/useCollateralPriceUpdates';\nimport { useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { useMemo } from 'react';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { wei } from '@synthetixio/wei';\nimport { useOraclePrice } from '@snx-v3/useOraclePrice';\n\n// TODO: Update this hook to use a multicall through the oracle manager proxy\nexport const useTokenPrice = (symbol?: string) => {\n  const { data: collateralTypes } = useCollateralTypes(true);\n\n  const pythCollateralPrices = collateralTypes?.filter((item) => item.symbol !== 'stataUSDC');\n  const omCollateralPrices = collateralTypes?.filter((item) => item.symbol === 'stataUSDC');\n\n  const { data: collateralPrices } = useOfflinePrices(\n    (pythCollateralPrices || []).map((item) => ({\n      id: item.tokenAddress,\n      oracleId: item.oracleNodeId,\n      symbol: item.symbol,\n    }))\n  );\n\n  const { data: omPrices } = useOraclePrice(omCollateralPrices?.[0]?.oracleNodeId);\n\n  return useMemo(() => {\n    if (!collateralTypes || !collateralPrices) {\n      return ZEROWEI;\n    }\n\n    const collateralPrice = collateralPrices\n      .concat(omPrices ? [{ symbol: 'stataUSDC', price: omPrices.price.toString() }] : [])\n      .find((price) => `${price?.symbol}`.toUpperCase() === `${symbol}`.toUpperCase());\n\n    return collateralPrice?.price ? wei(collateralPrice?.price) : ZEROWEI;\n  }, [collateralPrices, collateralTypes, symbol, omPrices]);\n};\n","export async function importUSDProxy(chainId, preset) {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/meta.json'),\n        import('@synthetixio/v3-contracts/1-main/USDProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.USDProxy, abi };\n    }\n    case '11155111-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/meta.json'),\n        import('@synthetixio/v3-contracts/11155111-main/USDProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.USDProxy, abi };\n    }\n    case '10-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/meta.json'),\n        import('@synthetixio/v3-contracts/10-main/USDProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.USDProxy, abi };\n    }\n    case '8453-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/8453-andromeda/USDProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.USDProxy, abi };\n    }\n    case '84532-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/84532-andromeda/USDProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.USDProxy, abi };\n    }\n    case '42161-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/meta.json'),\n        import('@synthetixio/v3-contracts/42161-main/USDProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.USDProxy, abi };\n    }\n    case '421614-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/meta.json'),\n        import('@synthetixio/v3-contracts/421614-main/USDProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.USDProxy, abi };\n    }\n    case '42161-arbthetix': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-arbthetix/meta.json'),\n        import('@synthetixio/v3-contracts/42161-arbthetix/USDProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.USDProxy, abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for USDProxy`);\n    }\n  }\n}\n","import { Contract } from '@ethersproject/contracts';\nimport { useQuery } from '@tanstack/react-query';\nimport { useNetwork, useProvider, useSigner, useWallet } from '@snx-v3/useBlockchain';\nimport { importUSDProxy } from '@snx-v3/contracts';\n\nexport function useUSDProxy() {\n  const { network } = useNetwork();\n  const provider = useProvider();\n  const signer = useSigner();\n  const signerOrProvider = signer || provider;\n  const withSigner = Boolean(signer);\n  const { activeWallet } = useWallet();\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'USDProxy',\n      { withSigner },\n      activeWallet?.address,\n    ],\n    queryFn: async function () {\n      if (!signerOrProvider || !network) throw new Error('Should be disabled');\n      const { address, abi } = await importUSDProxy(network.id, network.preset);\n      return new Contract(address, abi, signerOrProvider);\n    },\n    enabled: Boolean(signerOrProvider),\n    staleTime: Infinity,\n  });\n}\n","import { Contract } from '@ethersproject/contracts';\nimport { useQuery } from '@tanstack/react-query';\nimport { Network, useProviderForChain } from '@snx-v3/useBlockchain';\nimport { importUSDProxy } from '@snx-v3/contracts';\n\nexport function useUSDProxyForChain(network?: Network) {\n  const provider = useProviderForChain(network);\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'USDProxyForChain'],\n    queryFn: async function () {\n      if (network && provider) {\n        const { address, abi } = await importUSDProxy(network.id, network.preset);\n        return new Contract(address, abi, provider);\n      }\n    },\n    enabled: Boolean(network && provider),\n    staleTime: Infinity,\n  });\n}\n","import { useReducer } from 'react';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useMutation } from '@tanstack/react-query';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { BigNumber } from 'ethers';\nimport { formatGasPriceForTransaction } from '@snx-v3/useGasOptions';\nimport { getGasPrice } from '@snx-v3/useGasPrice';\nimport { useGasSpeed } from '@snx-v3/useGasSpeed';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport { useAllCollateralPriceIds } from '@snx-v3/useAllCollateralPriceIds';\nimport { fetchPriceUpdates, priceUpdatesToPopulatedTx } from '@snx-v3/fetchPythPrices';\n\nexport const useUndelegate = ({\n  accountId,\n  poolId,\n  collateralTypeAddress,\n  collateralChange,\n  currentCollateral,\n}: {\n  accountId?: string;\n  poolId?: string;\n  collateralTypeAddress?: string;\n  currentCollateral: Wei;\n  collateralChange: Wei;\n}) => {\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n  const { data: CoreProxy } = useCoreProxy();\n  const signer = useSigner();\n  const { gasSpeed } = useGasSpeed();\n  const provider = useProvider();\n  const { data: collateralPriceUpdates } = useAllCollateralPriceIds();\n  const { network } = useNetwork();\n\n  const mutation = useMutation({\n    mutationFn: async () => {\n      if (!signer || !network || !provider) throw new Error('No signer or network');\n      if (!(CoreProxy && poolId && collateralTypeAddress && collateralPriceUpdates)) return;\n      if (collateralChange.eq(0)) return;\n      if (currentCollateral.eq(0)) return;\n      try {\n        dispatch({ type: 'prompting' });\n\n        const populatedTxnPromised = CoreProxy.populateTransaction.delegateCollateral(\n          BigNumber.from(accountId),\n          BigNumber.from(poolId),\n          collateralTypeAddress,\n          currentCollateral.add(collateralChange).toBN(),\n          wei(1).toBN()\n        );\n\n        const walletAddress = await signer.getAddress();\n\n        const collateralPriceCallsPromise = fetchPriceUpdates(\n          collateralPriceUpdates,\n          network.isTestnet\n        ).then((signedData) =>\n          priceUpdatesToPopulatedTx(walletAddress, collateralPriceUpdates, signedData)\n        );\n        const [calls, gasPrices, collateralPriceCalls] = await Promise.all([\n          populatedTxnPromised,\n          getGasPrice({ provider }),\n          collateralPriceCallsPromise,\n        ]);\n        const allCalls = collateralPriceCalls.concat(calls);\n\n        const erc7412Tx = await withERC7412(network, allCalls, 'useUndelegate', walletAddress);\n\n        const gasOptionsForTransaction = formatGasPriceForTransaction({\n          gasLimit: erc7412Tx.gasLimit,\n          gasPrices,\n          gasSpeed,\n        });\n\n        const txn = await signer.sendTransaction({ ...erc7412Tx, ...gasOptionsForTransaction });\n        dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n        await txn.wait();\n        dispatch({ type: 'success' });\n      } catch (error: any) {\n        dispatch({ type: 'error', payload: { error } });\n        throw error;\n      }\n    },\n  });\n  return {\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n};\n","import { useReducer } from 'react';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useMutation } from '@tanstack/react-query';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { BigNumber, Contract, PopulatedTransaction } from 'ethers';\nimport { formatGasPriceForTransaction } from '@snx-v3/useGasOptions';\nimport { getGasPrice } from '@snx-v3/useGasPrice';\nimport { useGasSpeed } from '@snx-v3/useGasSpeed';\nimport { TransactionRequest, withERC7412 } from '@snx-v3/withERC7412';\nimport { useAllCollateralPriceIds } from '@snx-v3/useAllCollateralPriceIds';\nimport { LiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { useApprove } from '@snx-v3/useApprove';\nimport { USDC_BASE_MARKET, getRepayerContract } from '@snx-v3/isBaseAndromeda';\nimport { parseUnits } from '@snx-v3/format';\nimport { DEBT_REPAYER_ABI } from '@snx-v3/useClearDebt';\nimport { useSpotMarketProxy } from '@snx-v3/useSpotMarketProxy';\nimport { notNil } from '@snx-v3/tsHelpers';\nimport { useCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\nimport { useGetUSDTokens } from '@snx-v3/useGetUSDTokens';\n\nexport const useUndelegateBaseAndromeda = ({\n  accountId,\n  poolId,\n  collateralTypeAddress,\n  collateralChange,\n  currentCollateral,\n  liquidityPosition,\n}: {\n  accountId?: string;\n  poolId?: string;\n  collateralTypeAddress?: string;\n  currentCollateral: Wei;\n  collateralChange: Wei;\n  liquidityPosition?: LiquidityPosition;\n}) => {\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: SpotMarketProxy } = useSpotMarketProxy();\n  const { data: priceUpdateTx } = useCollateralPriceUpdates();\n\n  const signer = useSigner();\n  const { gasSpeed } = useGasSpeed();\n  const provider = useProvider();\n  const { data: collateralPriceUpdates } = useAllCollateralPriceIds();\n  const { network } = useNetwork();\n  const { data: usdTokens } = useGetUSDTokens();\n\n  const debtExists = liquidityPosition?.debt.gt(0);\n  const currentDebt = debtExists && liquidityPosition ? liquidityPosition.debt : wei(0);\n\n  const { approve, requireApproval } = useApprove({\n    contractAddress: usdTokens?.USDC,\n    //slippage for approval\n    amount: parseUnits(currentDebt.toString(), 6).mul(110).div(100),\n    spender: getRepayerContract(network?.id),\n  });\n\n  const mutation = useMutation({\n    mutationFn: async () => {\n      if (!signer || !network || !provider) throw new Error('No signer or network');\n      if (\n        !(CoreProxy && poolId && collateralTypeAddress && collateralPriceUpdates && SpotMarketProxy)\n      )\n        return;\n      if (collateralChange.eq(0)) return;\n      if (currentCollateral.eq(0)) return;\n      try {\n        dispatch({ type: 'prompting' });\n\n        if (debtExists && requireApproval) {\n          await approve(false);\n        }\n\n        const transactions: Promise<PopulatedTransaction>[] = [];\n\n        const repayer = new Contract(getRepayerContract(network.id), DEBT_REPAYER_ABI, signer);\n\n        const depositDebtToRepay = repayer.populateTransaction.depositDebtToRepay(\n          CoreProxy.address,\n          SpotMarketProxy.address,\n          accountId,\n          poolId,\n          collateralTypeAddress,\n          USDC_BASE_MARKET\n        );\n        transactions.push(depositDebtToRepay);\n\n        const burn = CoreProxy.populateTransaction.burnUsd(\n          BigNumber.from(accountId),\n          BigNumber.from(poolId),\n          collateralTypeAddress,\n          currentDebt.abs().mul(10).toBN()\n        );\n        transactions.push(burn);\n\n        const populatedTxnPromised = CoreProxy.populateTransaction.delegateCollateral(\n          BigNumber.from(accountId),\n          BigNumber.from(poolId),\n          collateralTypeAddress,\n          currentCollateral.add(collateralChange).toBN(),\n          wei(1).toBN()\n        );\n        transactions.push(populatedTxnPromised);\n\n        const callsPromise = Promise.all([...transactions].filter(notNil));\n\n        const [calls, gasPrices] = await Promise.all([callsPromise, getGasPrice({ provider })]);\n\n        const allCalls: TransactionRequest[] = [...calls];\n\n        allCalls[1].requireSuccess = false;\n        if (priceUpdateTx) {\n          allCalls.unshift(priceUpdateTx as any);\n        }\n\n        const walletAddress = await signer.getAddress();\n\n        const erc7412Tx = await withERC7412(network, allCalls, 'useUndelegateBase', walletAddress);\n\n        const gasOptionsForTransaction = formatGasPriceForTransaction({\n          gasLimit: erc7412Tx.gasLimit,\n          gasPrices,\n          gasSpeed,\n        });\n\n        const txn = await signer.sendTransaction({ ...erc7412Tx, ...gasOptionsForTransaction });\n        dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n        await txn.wait();\n        dispatch({ type: 'success' });\n      } catch (error: any) {\n        dispatch({ type: 'error', payload: { error } });\n        throw error;\n      }\n    },\n  });\n  return {\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n};\n","export async function importV2x(chainId, preset) {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/meta.json'),\n        import('@synthetixio/v3-contracts/1-main/V2x.readable.json'),\n      ]);\n      return { address: meta.contracts.V2x, abi };\n    }\n    case '11155111-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/meta.json'),\n        import('@synthetixio/v3-contracts/11155111-main/V2x.readable.json'),\n      ]);\n      return { address: meta.contracts.V2x, abi };\n    }\n    /*case '10-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/meta.json'),\n        import('@synthetixio/v3-contracts/10-main/V2x.readable.json'),\n      ]);\n      return { address: meta.contracts.V2x, abi };\n\t\t}*/\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for V2x`);\n    }\n  }\n}\n","import { Contract } from '@ethersproject/contracts';\nimport { useQuery } from '@tanstack/react-query';\nimport {\n  Network,\n  useNetwork,\n  useProvider,\n  useProviderForChain,\n  useSigner,\n} from '@snx-v3/useBlockchain';\nimport { importV2x } from '@snx-v3/contracts';\n\nexport function useV2xSynthetix(customNetwork?: Network) {\n  const providerForChain = useProviderForChain(customNetwork);\n  const { network } = useNetwork();\n  const provider = useProvider();\n  const signer = useSigner();\n  const targetNetwork = customNetwork || network;\n\n  const withSigner = Boolean(signer);\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'V2xSynthetix', { withSigner }],\n    queryFn: async function () {\n      if (providerForChain && customNetwork) {\n        const { address: v2xAddress, abi: v2xAbi } = await importV2x(\n          customNetwork.id,\n          customNetwork.preset\n        );\n        return new Contract(v2xAddress, v2xAbi, providerForChain);\n      }\n\n      const signerOrProvider = signer || provider;\n      if (!signerOrProvider || !network) throw new Error('Should be disabled CP');\n\n      const { address: v2xAddress, abi: v2xAbi } = await importV2x(network?.id, network?.preset);\n      return new Contract(v2xAddress, v2xAbi, signerOrProvider);\n    },\n    enabled: Boolean(signer || provider || providerForChain),\n    staleTime: Infinity,\n  });\n}\n","export async function importAllErrors(chainId, preset) {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/AllErrors.readable.json'),\n      ]);\n      return { address: undefined, abi };\n    }\n    case '11155111-main': {\n      const [{ default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/AllErrors.readable.json'),\n      ]);\n      return { address: undefined, abi };\n    }\n    case '10-main': {\n      const [{ default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/AllErrors.readable.json'),\n      ]);\n      return { address: undefined, abi };\n    }\n    case '8453-andromeda': {\n      const [{ default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/AllErrors.readable.json'),\n      ]);\n      return { address: undefined, abi };\n    }\n    case '84532-andromeda': {\n      const [{ default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/AllErrors.readable.json'),\n      ]);\n      return { address: undefined, abi };\n    }\n    case '42161-main': {\n      const [{ default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/AllErrors.readable.json'),\n      ]);\n      return { address: undefined, abi };\n    }\n    case '421614-main': {\n      const [{ default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/AllErrors.readable.json'),\n      ]);\n      return { address: undefined, abi };\n    }\n    case '42161-arbthetix': {\n      const [{ default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-arbthetix/AllErrors.readable.json'),\n      ]);\n      return { address: undefined, abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for AllErrors`);\n    }\n  }\n}\n","interface CacheItem<T> {\n  timestamp: number;\n  value: T;\n}\n\ninterface Cache<T> {\n  [key: string]: CacheItem<T> | undefined;\n}\n\nconst cache: Cache<unknown> = {};\ntype MaybeString = 'no-cache' | undefined;\n\n/**\n * This function, `withMemoryCache`, takes a function as an argument.\n * The passed function can optionally be given an extra argument to bypass the cache.\n * If the last argument passed to `func` is `true`, the cache will be bypassed.\n * Otherwise, the function will use the cache, if available.\n */\nexport const withMemoryCache = <T extends unknown[], R>(\n  func: (...args: T) => Promise<R>,\n  cacheDuration: number\n) => {\n  return async (...args: [...T, MaybeString]): Promise<R> => {\n    const lastArg = args[args.length - 1];\n    const bypassCache = lastArg === 'no-cache';\n    const funcArgs = (bypassCache ? args.slice(0, -1) : args) as T;\n    const cacheKey = JSON.stringify(funcArgs);\n    const currentTime = Date.now();\n\n    if (!bypassCache) {\n      const cacheItem = cache[cacheKey] as CacheItem<R> | undefined;\n      if (cacheItem && currentTime - cacheItem.timestamp < cacheDuration) {\n        return cacheItem.value;\n      }\n    }\n\n    const result = await func(...funcArgs);\n\n    cache[cacheKey] = {\n      timestamp: currentTime,\n      value: result,\n    };\n\n    return result;\n  };\n};\n","/* eslint-disable no-console */\nimport { BigNumber, ethers, providers } from 'ethers';\nimport { EvmPriceServiceConnection } from '@pythnetwork/pyth-evm-js';\nimport { z } from 'zod';\nimport { ZodBigNumber } from '@snx-v3/zod';\nimport { offchainMainnetEndpoint, offchainTestnetEndpoint } from '@snx-v3/constants';\nimport { Network } from '@snx-v3/useBlockchain';\nimport type { Modify } from '@snx-v3/tsHelpers';\nimport { importCoreProxy, importMulticall3, importAllErrors } from '@snx-v3/contracts';\nimport { withMemoryCache } from './withMemoryCache';\nimport * as viem from 'viem';\nimport { parseTxError } from '@snx-v3/parser';\n\nexport const ERC7412_ABI = [\n  'error OracleDataRequired(address oracleContract, bytes oracleQuery)',\n  'error FeeRequired(uint feeAmount)',\n  'function oracleId() view external returns (bytes32)',\n  'function fulfillOracleQuery(bytes calldata signedOffchainData) payable external',\n];\n\nexport const PYTH_ERRORS = [\n  // Function arguments are invalid (e.g., the arguments lengths mismatch)\n  // Signature: 0xa9cb9e0d\n  'error InvalidArgument()',\n  // Update data is coming from an invalid data source.\n  // Signature: 0xe60dce71\n  'error InvalidUpdateDataSource()',\n  // Update data is invalid (e.g., deserialization error)\n  // Signature: 0xe69ffece\n  'error InvalidUpdateData()',\n  // Insufficient fee is paid to the method.\n  // Signature: 0x025dbdd4\n  'error InsufficientFee()',\n  // There is no fresh update, whereas expected fresh updates.\n  // Signature: 0xde2c57fa\n  'error NoFreshUpdate()',\n  // There is no price feed found within the given range or it does not exists.\n  // Signature: 0x45805f5d\n  'error PriceFeedNotFoundWithinRange()',\n  // Price feed not found or it is not pushed on-chain yet.\n  // Signature: 0x14aebe68\n  'error PriceFeedNotFound()',\n  // Requested price is stale.\n  // Signature: 0x19abf40e\n  'error StalePrice()',\n  // Given message is not a valid Wormhole VAA.\n  // Signature: 0x2acbe915\n  'error InvalidWormholeVaa()',\n  // Governance message is invalid (e.g., deserialization error).\n  // Signature: 0x97363b35\n  'error InvalidGovernanceMessage()',\n  // Governance message is not for this contract.\n  // Signature: 0x63daeb77\n  'error InvalidGovernanceTarget()',\n  // Governance message is coming from an invalid data source.\n  // Signature: 0x360f2d87\n  'error InvalidGovernanceDataSource()',\n  // Governance message is old.\n  // Signature: 0x88d1b847\n  'error OldGovernanceMessage()',\n  // The wormhole address to set in SetWormholeAddress governance is invalid.\n  // Signature: 0x13d3ed82\n  'error InvalidWormholeAddressToSet()',\n];\n\nexport type TransactionRequest = ethers.providers.TransactionRequest & {\n  requireSuccess?: boolean;\n};\ntype TransactionRequestWithGasLimit = Modify<TransactionRequest, { gasLimit: ethers.BigNumber }>;\n\nconst PRICE_CACHE_LENGTH = 5000;\n\nconst fetchOffchainData = withMemoryCache(\n  async (oracleQuery: string, isTestnet: boolean, logLabel: string) => {\n    const priceService = new EvmPriceServiceConnection(\n      isTestnet ? offchainTestnetEndpoint : offchainMainnetEndpoint\n    );\n\n    const OracleQuerySchema = z.tuple([z.number(), ZodBigNumber, z.array(z.string())]);\n    const decoded = ethers.utils.defaultAbiCoder.decode(\n      ['uint8', 'uint64', 'bytes32[]'],\n      oracleQuery\n    );\n    const [updateType, stalenessTolerance, priceIds] = OracleQuerySchema.parse(decoded);\n    console.log(`[${logLabel}] stale price for priceFeedId: ${priceIds[0]}`);\n    if (updateType !== 1) {\n      throw new Error(`update type ${updateType} not supported`);\n    }\n    const signedOffchainData = await priceService.getPriceFeedsUpdateData(priceIds);\n\n    return ethers.utils.defaultAbiCoder.encode(\n      ['uint8', 'uint64', 'bytes32[]', 'bytes[]'],\n      [updateType, stalenessTolerance, priceIds, signedOffchainData]\n    );\n  },\n  PRICE_CACHE_LENGTH\n);\n\nfunction makeMulticall(\n  calls: TransactionRequest[],\n  senderAddr: string,\n  multicallAddress: string,\n  multiCallAbi: string[]\n): TransactionRequest {\n  const multicallInterface = new ethers.utils.Interface(multiCallAbi);\n\n  const encodedData = multicallInterface.encodeFunctionData('aggregate3Value', [\n    calls.map((call) => ({\n      target: call.to,\n      callData: call.data,\n      value: call.value || ethers.BigNumber.from(0),\n      requireSuccess: call.requireSuccess ?? true,\n      allowFailure: !(call.requireSuccess ?? true),\n    })),\n  ]);\n\n  let totalValue = ethers.BigNumber.from(0);\n  for (const call of calls) {\n    totalValue = totalValue.add(call.value || ethers.BigNumber.from(0));\n  }\n\n  return {\n    from: senderAddr,\n    to: multicallAddress,\n    data: encodedData,\n    value: totalValue,\n  };\n}\n\n// This should be used for networks that doesn't have a multicall setup as a trusted forwarder\n// TODO remove when all networks have a trusted forwarder\nexport const makeCoreProxyMulticall = (\n  calls: TransactionRequest[],\n  senderAddr: string,\n  coreProxyAddress: string,\n  coreProxyAbi: string[]\n) => {\n  const CoreProxyInterface = new ethers.utils.Interface(coreProxyAbi);\n  const encodedData = CoreProxyInterface.encodeFunctionData('multicall', [\n    calls.map((call) => call.data),\n  ]);\n\n  let totalValue = ethers.BigNumber.from(0);\n  for (const call of calls) {\n    totalValue = totalValue.add(call.value || ethers.BigNumber.from(0));\n  }\n\n  return {\n    from: senderAddr,\n    to: coreProxyAddress,\n    data: encodedData,\n    value: totalValue,\n  };\n};\n\nconst parseError = async (error: any, provider: providers.JsonRpcProvider, network: Network) => {\n  let errorData = error.data || error.error?.data?.data || error.error?.error?.data;\n  if (!errorData) {\n    try {\n      console.log('Error is missing revert data, trying provider.call, instead of estimate gas..');\n      // Some wallets swallows the revert reason when calling estimate gas,try to get the error by using provider.call\n      // provider.call wont actually revert, instead the error data is just returned\n      const lookedUpError = await provider.call(error.transaction);\n      errorData = lookedUpError;\n    } catch (newError: any) {\n      console.log('provider.call(error.transaction) failed, trying to extract error');\n      console.log('Error data: ', errorData);\n    }\n  }\n\n  if (`${errorData}`.startsWith('0x08c379a0')) {\n    const content = `0x${errorData.substring(10)}`;\n    // reason: string; for standard revert error string\n    const reason = ethers.utils.defaultAbiCoder.decode(['string'], content);\n    console.log(`Reason`, reason);\n    return {\n      name: reason[0],\n      args: [],\n    };\n  }\n\n  try {\n    const AllErrors = await importAllErrors(network.id, network.preset);\n    const AllErrorsInterface = new ethers.utils.Interface([...AllErrors.abi, ...PYTH_ERRORS]);\n    const decodedError = AllErrorsInterface.parseError(errorData);\n    return decodedError;\n    // return ERC7412ErrorSchema.parse(decodedError);\n  } catch (parseError) {\n    console.error(\n      'Error is not a ERC7412 error, re-throwing original error, for better parsing. Parse error reason: ',\n      parseError\n    );\n    // If we cant parse it, throw the original error\n    throw error;\n  }\n};\n\n// simulate w/ wETH contract because it will have eth balance\n// This is useful when we do read/static calls but still need an balance for the price update\n// TODO: this probably need to be network aware, maybe look into a different solution even.\nexport const getDefaultFromAddress = (chainName: string) => {\n  switch (chainName) {\n    case 'cannon':\n      return '0x4200000000000000000000000000000000000006'; // TODO, unclear what to put here\n    case 'mainnet':\n      return '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2';\n    case 'sepolia':\n      return '0x7b79995e5f793a07bc00c21412e50ecae098e7f9';\n    case 'arbitrum':\n      return '0x82aF49447D8a07e3bd95BD0d56f35241523fBab1';\n    case 'arbitrum-sepolia':\n      return '0x980B62Da83eFf3D4576C647993b0c1D7faf17c73';\n    case 'optimism-mainnet':\n    case 'base':\n    case 'base-sepolia':\n      return '0x4200000000000000000000000000000000000006';\n\n    default:\n      throw new Error(`Unsupported chain ${chainName}`);\n  }\n};\n\n/**\n * If a tx requires ERC7412 pattern, wrap your tx with this function.\n */\nexport const withERC7412 = async (\n  network: Network,\n  tx: TransactionRequest | TransactionRequest[],\n  logLabel?: string,\n  _from?: string\n): Promise<TransactionRequestWithGasLimit> => {\n  const initialMulticallLength = Array.isArray(tx) ? tx.length : 1;\n\n  const from = ([tx].flat()[0].from || _from) as string;\n  // eslint-disable-next-line prefer-const\n  let multicallCalls = [...[tx].flat()].map((tx) => ({ from, ...tx })); // Use let to communicate that we mutate this array\n\n  if (multicallCalls.some((x) => !x.to)) {\n    throw Error(`Make sure all txs have 'to' field set`);\n  }\n  if (multicallCalls.some((x) => !x.from)) {\n    throw Error(`Make sure all txs have 'from' field set`);\n  }\n\n  // Make sure we're always using JSONRpcProvider, the web3 provider coming from the signer might have bugs causing errors to miss revert data\n  const jsonRpcProvider = new ethers.providers.JsonRpcProvider(network?.rpcUrl());\n\n  // If from is set to the default address (wETH) we can assume it's a read rather than a write\n  const isRead = from === getDefaultFromAddress(network.name);\n  // const networkHaveERC7412 = deploymentsWithERC7412.includes(`${network.id}-${network.preset}`);\n\n  const { address: multicallAddress, abi: multiCallAbi } = await importMulticall3(\n    network.id,\n    network.preset\n  );\n\n  while (true) {\n    try {\n      if (window.localStorage.getItem('DEBUG') === 'true') {\n        const CoryProxyInfo = await importCoreProxy(network.id, network.preset);\n        const CoreProxyInterface = new ethers.utils.Interface(CoryProxyInfo.abi);\n        console.log(\n          `withERC7412`,\n          multicallCalls.map(({ data, value, ...rest }) => {\n            try {\n              // @ts-ignore\n              const { name, args } = CoreProxyInterface.parseTransaction({ data, value });\n              if (Object.keys(args).filter(([key]) => `${key}` !== `${parseInt(key)}`).length > 0) {\n                const namedArgs = Object.fromEntries(\n                  Object.entries(args).filter(([key]) => `${key}` !== `${parseInt(key)}`)\n                );\n                return { $: name, ...namedArgs };\n              }\n\n              const unnamedArgs = Object.entries(args)\n                .filter(([key]) => `${key}` === `${parseInt(key)}`)\n                .map(([, value]) => value);\n              return { $: name, ...unnamedArgs };\n            } catch {\n              return { $: 'unknown', data, value, ...rest };\n            }\n          })\n        );\n      }\n\n      if (multicallCalls.length == 1) {\n        const initialCall = multicallCalls[0];\n        // The normal flow would go in here, then if the estimate call fail, we catch the error and handle ERC7412\n        const gasLimit = await jsonRpcProvider.estimateGas(initialCall);\n        console.log(`Estimated gas succeeded, with no price updates`);\n        return { ...initialCall, gasLimit };\n      }\n      // If we're here it means we now added a tx to do .\n      // Some networks doesn't have ERC7412 and a trusted forwarder setup, on write calls we still need to use the coreproxy for those\n      const multicallTxn = makeMulticall(multicallCalls, from, multicallAddress, multiCallAbi);\n      const gasLimit = await jsonRpcProvider.estimateGas(multicallTxn);\n\n      console.log(\n        `[${logLabel}] Estimated gas succeeded, with ${\n          multicallCalls.length - initialMulticallLength\n        } price updates`\n      );\n\n      return { ...multicallTxn, gasLimit };\n    } catch (error: any) {\n      console.error(error);\n      const parsedError = await parseError(error, jsonRpcProvider, network);\n      if (window.localStorage.getItem('DEBUG') === 'true') {\n        console.error('withERC7412', parsedError);\n      }\n      if (parsedError.name === 'OracleDataRequired') {\n        const [oracleAddress, oracleQuery] = parsedError.args;\n        const ignoreCache = !isRead;\n        const signedRequiredData = await fetchOffchainData(\n          oracleQuery,\n          network.isTestnet,\n          logLabel || '',\n          ignoreCache ? 'no-cache' : undefined\n        );\n        const newTransactionRequest = {\n          from,\n          to: oracleAddress,\n          data: new ethers.utils.Interface(ERC7412_ABI).encodeFunctionData('fulfillOracleQuery', [\n            signedRequiredData,\n          ]),\n          // If from is set to the default address we can add a value directly, before getting FeeRequired revert.\n          // This will be a static call so no money would be withdrawn either way.\n          value: isRead ? ethers.utils.parseEther('0.1') : BigNumber.from(0),\n        };\n        // If we get OracleDataRequired, add an extra transaction request just before the last element\n        multicallCalls.splice(\n          multicallCalls.length - initialMulticallLength,\n          0,\n          newTransactionRequest\n        );\n      } else if (parsedError.name === 'FeeRequired') {\n        const requiredFee = parsedError.args[0];\n\n        const txToUpdate = multicallCalls.find(({ value }) => requiredFee.gt(value || 0)); // The first tx with value less than the required fee, is the one we need to update\n        if (txToUpdate === undefined) {\n          throw Error(\n            `Didn't find any tx with a value less than the required fee ${multicallCalls}`\n          );\n        }\n        txToUpdate.value = requiredFee;\n      } else {\n        const parsedError = parseTxError(error);\n\n        if (parsedError) {\n          const AllErrors = await importAllErrors(network.id, network.preset);\n          try {\n            const errorResult = viem.decodeErrorResult({\n              abi: [...AllErrors.abi, ...PYTH_ERRORS],\n              data: parsedError,\n            });\n            console.log('error: ', errorResult.errorName, errorResult.args);\n          } catch (_error) {}\n        }\n        throw error;\n      }\n    }\n  }\n};\n\n/**\n * This can be used to do reads plus decoding. The return type will be whatever the type of the decode function is. And the arguments passed will have the multicall decoded and price updates removed\n */\nexport async function erc7412Call<T>(\n  network: Network,\n  provider: ethers.providers.Provider,\n  txRequests: TransactionRequest | TransactionRequest[],\n  decode: (x: string[] | string) => T,\n  logLabel?: string\n) {\n  const { address: multicallAddress, abi: multicallAbi } = await importMulticall3(\n    network.id,\n    network.preset\n  );\n\n  const reqs = [txRequests].flat();\n\n  for (const txRequest of reqs) {\n    txRequest.from = getDefaultFromAddress(network.name); // Reads can always use WETH\n  }\n  const newCall = await withERC7412(network, reqs, logLabel);\n\n  const res = await provider.call(newCall);\n\n  if (newCall.to?.toLowerCase() === multicallAddress.toLowerCase()) {\n    // If this was a multicall, decode and remove price updates.\n    const decodedMultiCall: { returnData: string }[] = new ethers.utils.Interface(\n      multicallAbi\n    ).decodeFunctionResult('aggregate3Value', res)[0];\n\n    // Remove the price updates\n    const responseWithoutPriceUpdates = decodedMultiCall.filter(\n      ({ returnData }) => returnData !== '0x' // price updates have 0x as return data\n    );\n\n    return decode(responseWithoutPriceUpdates.map(({ returnData }) => returnData));\n  }\n\n  return decode(res);\n}\n","import { BigNumber } from 'ethers';\nimport { z } from 'zod';\nimport { wei } from '@synthetixio/wei';\n\nexport const ZodBigNumber = z.custom<BigNumber>((val) => BigNumber.isBigNumber(val));\n\nexport const SmallIntSchema = ZodBigNumber.transform((x) => wei(x, 0).toNumber());\nexport const WeiSchema = ZodBigNumber.transform((x) => wei(x));\n","import { Badge } from '@chakra-ui/react';\nimport { FC } from 'react';\nimport { getHealthVariant } from './CRatioBar.utils';\n\nconst badgeColors = {\n  success: {\n    colorScheme: 'green',\n    bg: 'green.900',\n    label: 'HEALTHY',\n  },\n  error: {\n    colorScheme: 'red',\n    bg: 'red.900',\n    label: 'Unhealthy',\n  },\n  warning: {\n    colorScheme: 'orange',\n    bg: 'orange.900',\n    label: 'MANAGE',\n  },\n};\n\nexport const CRatioBadge: FC<{\n  liquidationCratio: number;\n  targetCratio: number;\n  cRatio: number;\n}> = ({ liquidationCratio, targetCratio, cRatio }) => {\n  const variant = getHealthVariant({\n    targetCratio,\n    liquidationCratio,\n    cRatio,\n  });\n  return (\n    <Badge\n      colorScheme={badgeColors[variant].colorScheme}\n      border=\"1px solid\"\n      bg={badgeColors[variant].bg}\n    >\n      {badgeColors[variant].label}\n    </Badge>\n  );\n};\n","export const getHealthVariant = ({\n  targetCratio,\n  liquidationCratio,\n  cRatio,\n}: {\n  liquidationCratio: number | undefined;\n  targetCratio: number | undefined;\n  cRatio: number | undefined;\n}) => {\n  if (!liquidationCratio || !targetCratio || !cRatio) {\n    return 'success';\n  }\n  if (cRatio <= 0) {\n    return 'success';\n  }\n  if (cRatio < liquidationCratio) {\n    return 'error';\n  }\n  if (cRatio < targetCratio) {\n    return 'warning';\n  }\n  return 'success';\n};\n\nexport const ratioIsMaxUInt = (ratio: number) => ratio >= Number.MAX_SAFE_INTEGER;\n\nexport const getProgressSize = ({\n  targetCratio,\n  liquidationCratio,\n  cRatio,\n}: {\n  liquidationCratio: number | undefined;\n  targetCratio: number | undefined;\n  cRatio: number | undefined;\n}) => {\n  if (!liquidationCratio || !targetCratio || !cRatio) {\n    return 0;\n  }\n\n  if (cRatio < 0) {\n    return 0;\n  }\n\n  if (cRatio >= targetCratio) {\n    return 75 + (25 * (cRatio - targetCratio)) / liquidationCratio;\n  }\n\n  if (cRatio >= liquidationCratio) {\n    return 25 + (50 * (cRatio - liquidationCratio)) / (targetCratio - liquidationCratio);\n  }\n\n  return (25 * cRatio) / liquidationCratio;\n};\n","import { Text, Flex } from '@chakra-ui/react';\nimport { FC } from 'react';\nimport Wei from '@synthetixio/wei';\nimport { calculateCRatio } from '@snx-v3/calculations';\nimport { Amount } from '@snx-v3/Amount';\nimport { ZEROWEI } from '@snx-v3/constants';\n\nexport const CRatioChangeStat: FC<{\n  collateralChange: Wei;\n  currentCollateral?: Wei;\n  debtChange: Wei;\n  currentDebt?: Wei;\n  size?: 'sm' | 'lg';\n  collateralPrice?: Wei;\n}> = ({ size, currentCollateral, currentDebt, collateralChange, debtChange, collateralPrice }) => (\n  <Flex alignItems=\"center\" gap={1.5}>\n    <Text\n      color=\"white\"\n      fontSize={size === 'lg' ? '20px' : '12px'}\n      fontWeight={size === 'lg' ? '800' : '700'}\n    >\n      {!currentCollateral || !currentDebt ? (\n        ' N/A'\n      ) : currentCollateral.gt(0) && currentDebt.eq(0) ? (\n        'Infinite'\n      ) : (\n        <Amount\n          value={calculateCRatio(currentDebt, currentCollateral.mul(collateralPrice)).mul(100)}\n          suffix=\"%\"\n        />\n      )}\n    </Text>\n\n    {(!collateralChange?.eq(0) || !debtChange.eq(0)) && (\n      <>\n        <span>&rarr;</span>\n\n        <Text\n          color=\"white\"\n          fontSize={size === 'lg' ? '20px' : '12px'}\n          fontWeight={size === 'lg' ? '800' : '700'}\n        >\n          {(currentCollateral || ZEROWEI).add(collateralChange).gt(0) &&\n          (currentDebt || ZEROWEI).add(debtChange).eq(0) ? (\n            'Infinite'\n          ) : (\n            <Amount\n              value={calculateCRatio(\n                (currentDebt || ZEROWEI).add(debtChange),\n                (currentCollateral || ZEROWEI).add(collateralChange).mul(collateralPrice)\n              ).mul(100)}\n              suffix=\"%\"\n            />\n          )}\n        </Text>\n      </>\n    )}\n  </Flex>\n);\n","import { Alert, Button, Divider, Flex, Heading, Text } from '@chakra-ui/react';\nimport { CheckIcon } from '@snx-v3/Multistep';\nimport { ReactNode } from 'react';\n\nexport function LiquidityPositionUpdated({\n  title,\n  subline,\n  alertText,\n  summary,\n  onClose,\n}: {\n  title?: ReactNode;\n  subline?: ReactNode;\n  alertText?: ReactNode;\n  summary?: ReactNode;\n  onClose: () => void;\n}) {\n  return (\n    <Flex flexDir=\"column\" gap=\"6\" borderColor=\"gray.900\" rounded=\"base\" height=\"fit-content\">\n      {title && (\n        <>\n          <Heading color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n            {title}\n          </Heading>\n          <Divider />\n        </>\n      )}\n      {subline && (\n        <Text color=\"white\" fontSize=\"14px\" fontWeight={400}>\n          {subline}\n        </Text>\n      )}\n      <Alert colorScheme=\"green\" rounded=\"base\" borderRadius=\"6px\">\n        <Flex bg=\"green.500\" p=\"1\" rounded=\"full\" mr=\"2\">\n          <CheckIcon w=\"12px\" h=\"12px\" color=\"green.900\" />\n        </Flex>\n        <Text color=\"white\" fontSize=\"16px\" fontWeight={400}>\n          {alertText}\n        </Text>\n      </Alert>\n\n      {summary}\n\n      <Button w=\"100%\" onClick={onClose} data-cy=\"liquidity-position-success-button\">\n        Continue\n      </Button>\n    </Flex>\n  );\n}\n","import { Flex, Heading, Text } from '@chakra-ui/react';\nimport { FC } from 'react';\nimport { useCollateralDisplayName } from '../../pages';\nimport { NetworkIcon, useNetwork } from '@snx-v3/useBlockchain';\nimport { useNavigate } from 'react-router-dom';\nimport { TokenIcon } from '../TokenIcon';\n\nexport const PositionTitle: FC<{\n  collateralSymbol?: string;\n  poolName?: string;\n  isOpen?: boolean;\n  poolId?: string;\n}> = ({ collateralSymbol, poolName, isOpen, poolId }) => {\n  const collateralDisplayName = useCollateralDisplayName(collateralSymbol);\n  const { network } = useNetwork();\n  const navigate = useNavigate();\n\n  return (\n    <Flex alignItems=\"center\">\n      <Flex\n        bg=\"linear-gradient(180deg, #08021E 0%, #1F0777 100%)\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        borderRadius=\"100%\"\n        display=\"flex\"\n      >\n        <TokenIcon\n          symbol={collateralDisplayName || ''}\n          height={42}\n          width={42}\n          fill=\"#0B0B22\"\n          color=\"#00D1FF\"\n        />\n      </Flex>\n      <Flex direction=\"column\" gap={0.5}>\n        <Heading\n          ml={4}\n          fontWeight={700}\n          fontSize={['18px', '20px', '24px']}\n          color=\"gray.50\"\n          display=\"flex\"\n          alignItems=\"center\"\n          data-cy=\"manage-position-title\"\n        >\n          {isOpen ? 'Open ' : ''} {collateralDisplayName} Liquidity Position\n        </Heading>\n        <Heading\n          ml={4}\n          fontWeight={700}\n          fontSize={['12px', '16px']}\n          color=\"gray.50\"\n          display=\"flex\"\n          alignItems=\"center\"\n          data-cy=\"manage-position-subtitle\"\n          _hover={{ cursor: 'pointer' }}\n          onClick={() => navigate(`/pools/${network?.id}/${poolId}`)}\n        >\n          {poolName && <Text mr={2}>{poolName}</Text>}\n          <Flex\n            mt={0.25}\n            alignItems=\"center\"\n            fontSize={['10px', '12px']}\n            color=\"gray.500\"\n            fontWeight=\"500\"\n          >\n            <NetworkIcon size=\"14px\" networkId={network?.id} mr={1} />\n            <Text mt={0.5}>{network?.label} Network</Text>\n          </Flex>\n        </Heading>\n      </Flex>\n    </Flex>\n  );\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useV2xSynthetix } from '@snx-v3/useV2xSynthetix';\nimport { utils } from 'ethers';\n\nexport function useV2sUSD(customNetwork?: Network) {\n  const { data: v2xSynthetix } = useV2xSynthetix(customNetwork);\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'v2-sUSD'],\n    queryFn: async function () {\n      if (!v2xSynthetix) {\n        return;\n      }\n      return (await v2xSynthetix.synths(utils.formatBytes32String('sUSD'))) as string;\n    },\n    enabled: Boolean(v2xSynthetix),\n  });\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  VStack,\n  Text,\n  Button,\n  Flex,\n  Collapse,\n  Alert,\n  AlertIcon,\n  AlertDescription,\n} from '@chakra-ui/react';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { Network } from '@snx-v3/useBlockchain';\nimport { useTokenBalance } from '@snx-v3/useTokenBalance';\nimport Wei from '@synthetixio/wei';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { TokenIcon } from '../TokenIcon';\nimport { useUSDProxyForChain } from '@snx-v3/useUSDProxy';\nimport { useV2sUSD } from '@snx-v3/useV2sUSD';\n\nexport const StepIntro = ({\n  onClose,\n  onConfirm,\n  setAmount,\n  amount,\n  network,\n}: {\n  onClose: () => void;\n  onConfirm: () => void;\n  setAmount: (val: Wei) => void;\n  amount: Wei;\n  network: Network;\n}) => {\n  const [loaded, setLoaded] = useState(false);\n  const { data: v2_sUSD } = useV2sUSD(network);\n  const { data: v2_balance } = useTokenBalance(v2_sUSD, network);\n  const { data: v3_sUSD } = useUSDProxyForChain(network);\n  const { data: v3_balance } = useTokenBalance(v3_sUSD?.address, network);\n\n  useEffect(() => {\n    if (v2_balance && amount.eq(0) && !loaded) {\n      setAmount(v2_balance);\n      setLoaded(true);\n    }\n  }, [amount, loaded, setAmount, v2_balance]);\n\n  return (\n    <VStack gap={2.5}>\n      <Text width=\"100%\" textAlign=\"left\" fontSize=\"14px\">\n        Convert your sUSD to V3 compatible sUSD. You will need V3 compatible sUSD to interact with\n        the new Synthetix products.\n      </Text>\n\n      <BorderBox width=\"100%\" display=\"flex\" flexDirection=\"column\" p={3}>\n        <Flex alignItems=\"center\">\n          <Flex flexDir=\"column\" gap=\"1\">\n            <Flex flexDir=\"column\" gap=\"1\">\n              <BorderBox\n                display=\"flex\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                py={1.5}\n                px={2.5}\n                width=\"fit-content\"\n              >\n                <Text display=\"flex\" gap={2} alignItems=\"center\" fontWeight=\"600\">\n                  <TokenIcon symbol=\"susd\" width={16} height={16} />\n                  V2 sUSD\n                </Text>\n              </BorderBox>\n              <Flex fontSize=\"xs\" color=\"whiteAlpha.700\" gap=\"1\">\n                Balance: <Amount value={v2_balance} />\n                <Text\n                  as=\"span\"\n                  cursor=\"pointer\"\n                  onClick={() => {\n                    if (!v2_balance) {\n                      return;\n                    }\n                    setAmount(v2_balance);\n                  }}\n                  color={v2_balance?.eq(amount) ? 'gray.600' : 'cyan.500'}\n                  fontWeight={700}\n                >\n                  &nbsp;Max\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n          <Flex flexDir=\"column\" flexGrow={1}>\n            <NumberInput\n              InputProps={{\n                isRequired: true,\n                'data-max': v2_balance?.toString(),\n                type: 'number',\n                min: 0,\n              }}\n              value={amount}\n              onChange={(val) => setAmount(val)}\n              min={ZEROWEI}\n            />\n          </Flex>\n        </Flex>\n      </BorderBox>\n\n      <BorderBox width=\"100%\" display=\"flex\" flexDirection=\"column\" p={3}>\n        <Flex alignItems=\"center\">\n          <Flex flexDir=\"column\" gap=\"1\">\n            <BorderBox\n              display=\"flex\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              py={1.5}\n              px={2.5}\n              width=\"fit-content\"\n            >\n              <Text display=\"flex\" gap={2} alignItems=\"center\" fontWeight=\"600\">\n                <TokenIcon symbol=\"susd\" width={16} height={16} />\n                V3 sUSD\n              </Text>\n            </BorderBox>\n            <Flex fontSize=\"xs\" color=\"whiteAlpha.700\" gap=\"1\">\n              Balance: <Amount value={v3_balance} />\n            </Flex>\n          </Flex>\n          <Flex flexDir=\"column\" flexGrow={1}>\n            <NumberInput disabled value={amount} />\n          </Flex>\n        </Flex>\n      </BorderBox>\n\n      <Collapse in={v2_balance?.lt(amount)} animateOpacity>\n        <Alert borderRadius=\"6px\" status=\"error\">\n          <AlertIcon />\n          <AlertDescription>You cannot convert more than your v2 sUSD balance</AlertDescription>\n        </Alert>\n      </Collapse>\n\n      <Button\n        isDisabled={v2_balance?.lt(amount) || amount.lte(0)}\n        mt={3}\n        width=\"100%\"\n        onClick={onConfirm}\n      >\n        Convert\n      </Button>\n      <Button variant=\"outline\" colorScheme=\"gray\" onClick={onClose} width=\"100%\">\n        Later\n      </Button>\n    </VStack>\n  );\n};\n","import { FC, ReactNode } from 'react';\nimport { Flex, Text } from '@chakra-ui/react';\nimport Wei from '@synthetixio/wei';\nimport { ArrowForwardIcon } from '@chakra-ui/icons';\n\nconst styles = {\n  sm: {\n    fontSize: '12px',\n    fontWeight: '700',\n    lineHeight: '14px',\n  },\n  md: {\n    fontSize: '16px',\n    fontWeight: '400',\n    lineHeight: '16px',\n  },\n  lg: {\n    fontSize: '18px',\n    fontWeight: '800',\n    lineHeight: '32px',\n  },\n};\nexport const ChangeStat: FC<{\n  value: Wei;\n  newValue: Wei;\n  hasChanges: boolean;\n  dataTestId?: string;\n  formatFn: (val: Wei) => ReactNode;\n  withColor?: boolean;\n  size?: 'sm' | 'md' | 'lg';\n}> = ({ formatFn, value, newValue, hasChanges, dataTestId, withColor, size = 'lg' }) => {\n  return (\n    <Flex\n      gap=\"1\"\n      alignItems=\"center\"\n      color=\"white\"\n      fontSize={styles[size].fontSize}\n      fontWeight={styles[size].fontWeight}\n      lineHeight={styles[size].lineHeight}\n    >\n      <Text\n        data-cy={dataTestId}\n        textAlign=\"center\"\n        opacity={value.eq(0) ? '70%' : undefined}\n        color={withColor && value.gt(0) ? 'green.700' : value.lt(0) ? 'red.700' : 'gray.50'}\n      >\n        {formatFn(value)}\n      </Text>\n      {hasChanges && !value.eq(newValue) ? (\n        <>\n          <ArrowForwardIcon />\n          <Text\n            textAlign=\"center\"\n            opacity={newValue.eq(0) ? '70%' : undefined}\n            color={\n              withColor && newValue.gt(0) ? 'green.700' : newValue.lt(0) ? 'red.700' : 'gray.50'\n            }\n          >\n            {formatFn(newValue)}\n          </Text>\n        </>\n      ) : null}\n    </Flex>\n  );\n};\n","import React from 'react';\nimport { VStack, Text, Button, Alert, Flex } from '@chakra-ui/react';\nimport { ArrowUpIcon, CheckIcon } from '@chakra-ui/icons';\nimport { TransactionSummary } from '../TransactionSummary/TransactionSummary';\nimport Wei from '@synthetixio/wei';\nimport { currency } from '@snx-v3/format';\nimport { ChangeStat } from '../ChangeStat';\n\nexport const StepSuccess = ({\n  onConfirm,\n  v2Balance,\n  v3Balance,\n  amount,\n}: {\n  onConfirm: () => void;\n  v2Balance: Wei;\n  v3Balance: Wei;\n  amount: Wei;\n}) => {\n  return (\n    <VStack spacing={6}>\n      <Text width=\"100%\" textAlign=\"left\" fontSize=\"14px\">\n        Your <b>V2 sUSD</b> has been converted to <b>V3 sUSD</b>\n      </Text>\n\n      <Alert rounded=\"base\" colorScheme=\"green\" borderRadius=\"6px\">\n        <Flex bg=\"green.500\" p=\"1\" rounded=\"full\" mr=\"3.5\">\n          <CheckIcon w=\"12px\" h=\"12px\" color=\"green.900\" />\n        </Flex>\n        <Text fontSize=\"16px\">\n          <b>sUSD</b> successfully converted\n        </Text>\n      </Alert>\n\n      <TransactionSummary\n        width=\"100%\"\n        items={[\n          {\n            label: 'Total V2 sUSD',\n            value: (\n              <ChangeStat\n                value={v2Balance}\n                newValue={v2Balance.sub(amount)}\n                formatFn={(val: Wei) => currency(val)}\n                hasChanges\n                size=\"sm\"\n              />\n            ),\n          },\n          {\n            label: 'Total V3 sUSD',\n            value: (\n              <ChangeStat\n                value={v3Balance}\n                newValue={v3Balance.add(amount)}\n                formatFn={(val: Wei) => currency(val)}\n                hasChanges\n                size=\"sm\"\n              />\n            ),\n          },\n        ]}\n      />\n\n      <Button mb={-2} width=\"100%\" onClick={onConfirm}>\n        Continue\n      </Button>\n\n      <Button\n        display=\"flex\"\n        alignItems=\"center\"\n        gap={1}\n        variant=\"outline\"\n        colorScheme=\"gray\"\n        width=\"100%\"\n      >\n        Deposit sUSD to Curve\n        <ArrowUpIcon transform=\"rotate(45deg)\" />\n      </Button>\n    </VStack>\n  );\n};\n","import { Button, Text, useToast, VStack } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { Multistep } from '@snx-v3/Multistep';\nimport { useApprove } from '@snx-v3/useApprove';\nimport { Wei } from '@synthetixio/wei';\nimport { FC, useCallback, useState } from 'react';\nimport { Network } from '@snx-v3/useBlockchain';\nimport { useV2sUSD } from '@snx-v3/useV2sUSD';\nimport { useLegacyMarket } from '@snx-v3/useLegacyMarket';\nimport { useMigrateUSD } from '@snx-v3/useMigrateUSD';\nimport { StepSuccess } from './StepSuccess';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { useTokenBalance } from '@snx-v3/useTokenBalance';\nimport { useUSDProxyForChain } from '@snx-v3/useUSDProxy';\n\ntype Props = FC<{\n  amount: Wei;\n  network: Network;\n  onSuccess: () => void;\n  onBack: () => void;\n}>;\n\nexport const MigrateUSDTransaction: Props = ({ onSuccess, amount, network, onBack }) => {\n  const { data: legacyMarket } = useLegacyMarket();\n\n  const { data: v2_sUSD } = useV2sUSD(network);\n  const { data: v2_balance } = useTokenBalance(v2_sUSD, network);\n  const { data: v3_sUSD } = useUSDProxyForChain(network);\n  const { data: v3_balance } = useTokenBalance(v3_sUSD?.address, network);\n\n  const [infiniteApproval, setInfiniteApproval] = useState(false);\n  const [txState, setTxState] = useState({\n    step: 1,\n    status: 'idle',\n  });\n  const [txSummary, setTxSummary] = useState({\n    amount: ZEROWEI,\n    v2Balance: ZEROWEI,\n    v3Balance: ZEROWEI,\n  });\n\n  const { approve, refetchAllowance, requireApproval } = useApprove({\n    contractAddress: v2_sUSD,\n    amount: amount.toBN(),\n    spender: legacyMarket?.address,\n  });\n\n  const toast = useToast({ isClosable: true, duration: 9000 });\n\n  const { migrate, isSuccess } = useMigrateUSD({\n    amount,\n  });\n\n  const onSubmit = useCallback(async () => {\n    try {\n      if (txState.step > 2) {\n        onSuccess();\n        return;\n      }\n\n      if (txState.step === 1 && requireApproval) {\n        setTxState({\n          step: 1,\n          status: 'pending',\n        });\n\n        await approve(infiniteApproval);\n        refetchAllowance();\n      }\n\n      setTxState({\n        step: 2,\n        status: 'pending',\n      });\n\n      setTxSummary({\n        amount,\n        v2Balance: v2_balance || ZEROWEI,\n        v3Balance: v3_balance || ZEROWEI,\n      });\n      await migrate();\n\n      setTxState({\n        step: 2,\n        status: 'success',\n      });\n\n      toast.closeAll();\n      toast({\n        title: 'Success',\n        description: 'Migration executed.',\n        status: 'success',\n        duration: 5000,\n        variant: 'left-accent',\n      });\n    } catch (error) {\n      setTxState((state) => ({\n        step: state.step,\n        status: 'error',\n      }));\n      toast({\n        title: 'Migration failed',\n        description: 'Please try again.',\n        status: 'error',\n        variant: 'left-accent',\n      });\n    }\n  }, [\n    amount,\n    approve,\n    infiniteApproval,\n    migrate,\n    onSuccess,\n    refetchAllowance,\n    requireApproval,\n    toast,\n    txState.step,\n    v2_balance,\n    v3_balance,\n  ]);\n\n  if (isSuccess) {\n    return <StepSuccess {...txSummary} onConfirm={onSuccess} />;\n  }\n\n  return (\n    <VStack spacing={0}>\n      <Multistep\n        width=\"100%\"\n        step={1}\n        title=\"Approve sUSD transfer\"\n        status={{\n          failed: txState.step === 1 && txState.status === 'error',\n          success: txState.step > 1,\n          loading: txState.step === 1 && txState.status === 'pending',\n        }}\n        checkboxLabel=\"Approve unlimited sUSD transfers to Synthetix\"\n        checkboxProps={{\n          isChecked: infiniteApproval,\n          onChange: (e) => setInfiniteApproval(e.target.checked),\n        }}\n        mt={0}\n      />\n\n      <Multistep\n        width=\"100%\"\n        step={2}\n        title=\"Convert sUSD\"\n        mb={4}\n        mt={4}\n        subtitle={\n          <Text>\n            This will convert <Amount value={amount} suffix={` v2 sUSD`} /> to v3 sUSD\n          </Text>\n        }\n        status={{\n          failed: txState.step === 2 && txState.status === 'error',\n          success: txState.step === 2 && txState.status === 'sucess',\n          loading: txState.step === 2 && txState.status === 'pending',\n        }}\n      />\n\n      <Button isDisabled={txState.status === 'pending'} onClick={onSubmit} width=\"100%\" mb={2}>\n        {(() => {\n          switch (true) {\n            case txState.status === 'error':\n              return 'Retry';\n            case txState.status === 'pending':\n              return 'Processing...';\n            case txState.step === 2 && txState.status === 'sucess':\n              return 'Done';\n            default:\n              return 'Execute Transaction';\n          }\n        })()}\n      </Button>\n\n      {txState.status !== 'pending' && (\n        <Button variant=\"outline\" colorScheme=\"gray\" width=\"100%\" onClick={onBack}>\n          Back\n        </Button>\n      )}\n    </VStack>\n  );\n};\n","import { useDefaultProvider, useNetwork, useSigner } from '@snx-v3/useBlockchain';\nimport { useLegacyMarket } from '@snx-v3/useLegacyMarket';\nimport { useCallback, useState } from 'react';\nimport { getGasPrice } from '@snx-v3/useGasPrice';\nimport { formatGasPriceForTransaction } from '@snx-v3/useGasOptions';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { useGasSpeed } from '@snx-v3/useGasSpeed';\nimport { parseTxError } from '@snx-v3/parser';\nimport { useQueryClient } from '@tanstack/react-query';\n\nexport function useMigrateUSD({ amount }: { amount: Wei }) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const signer = useSigner();\n  const { data: legacyMarket } = useLegacyMarket();\n  const { gasSpeed } = useGasSpeed();\n  const provider = useDefaultProvider();\n  const queryClient = useQueryClient();\n  const { network } = useNetwork();\n\n  const migrate = useCallback(async () => {\n    try {\n      if (!legacyMarket || !signer) {\n        return;\n      }\n      setIsLoading(true);\n      setIsSuccess(false);\n      const gasPrices = await getGasPrice({ provider: signer!.provider });\n\n      const transaction = await legacyMarket.populateTransaction.convertUSD(amount.toBN());\n      const gasLimit = await provider?.estimateGas(transaction);\n\n      const gasOptionsForTransaction = formatGasPriceForTransaction({\n        gasLimit: wei(gasLimit || ZEROWEI).toBN(),\n        gasPrices,\n        gasSpeed,\n      });\n\n      const txn = await signer.sendTransaction({ ...transaction, ...gasOptionsForTransaction });\n\n      await txn.wait();\n\n      setIsLoading(false);\n      setIsSuccess(true);\n\n      queryClient.invalidateQueries({\n        queryKey: [`${network?.id}-${network?.preset}`, 'TokenBalance'],\n      });\n    } catch (error) {\n      const parsedError = parseTxError(error);\n      const errorResult = legacyMarket?.interface.parseError(parsedError as string);\n      console.error('error:', errorResult);\n      setIsLoading(false);\n      throw error;\n    }\n  }, [amount, gasSpeed, legacyMarket, network?.id, network?.preset, provider, queryClient, signer]);\n\n  return {\n    migrate,\n    isLoading,\n    isSuccess,\n  };\n}\n","import React from 'react';\nimport { VStack, Text, Button, Alert, Flex, Image } from '@chakra-ui/react';\nimport { CheckIcon } from '@chakra-ui/icons';\nimport { Network } from '@snx-v3/useBlockchain';\n\nexport const StepSuccessFinal = ({\n  onConfirm,\n  network,\n}: {\n  onConfirm: () => void;\n  network: Network;\n}) => {\n  return (\n    <VStack spacing={6}>\n      <Text width=\"100%\" textAlign=\"left\" fontSize=\"14px\">\n        Your migration to Synthetix V3 on {network.name} has been successfully Completed.\n      </Text>\n\n      <Flex width=\"100%\" alignItems=\"center\" justifyContent=\"center\" flex={1}>\n        <Image maxWidth=\"455px\" width=\"100%\" src=\"/Migrate Launch.png\" alt=\"Synthetix V3 Launch\" />\n      </Flex>\n\n      <Alert borderRadius=\"6px\" colorScheme=\"green\">\n        <Flex bg=\"green.500\" p=\"1\" rounded=\"full\" mr=\"3.5\">\n          <CheckIcon w=\"12px\" h=\"12px\" color=\"green.900\" />\n        </Flex>\n        <Text fontSize=\"16px\">Migration successfully Completed</Text>\n      </Alert>\n\n      <VStack width=\"100%\" spacing={4}>\n        <Button width=\"100%\" onClick={onConfirm}>\n          See Position on V3\n        </Button>\n      </VStack>\n    </VStack>\n  );\n};\n","import {\n  CloseButton,\n  Divider,\n  Flex,\n  Heading,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalOverlay,\n} from '@chakra-ui/react';\nimport { FC, useCallback, useEffect, useState } from 'react';\nimport { StepIntro } from './StepIntro';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { MigrateUSDTransaction } from './MigrateUSDTransaction';\nimport { Network } from '@snx-v3/useBlockchain';\nimport { StepSuccessFinal } from '../Migration/StepSuccessFinal';\nimport { generatePath, useLocation, useNavigate } from 'react-router-dom';\n\ninterface Props {\n  onClose: () => void;\n  isOpen: boolean;\n  network: Network;\n  type: 'migration' | 'convert';\n  accountId?: string;\n}\n\nexport const MigrateUSDModal: FC<Props> = ({ onClose, isOpen, network, type, accountId }) => {\n  const [step, setStep] = useState(0);\n  const [amount, setAmount] = useState(ZEROWEI);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!isOpen) {\n      setStep(0);\n      setAmount(ZEROWEI);\n    }\n  }, [isOpen]);\n\n  const handleConfirm = useCallback(() => {\n    if (accountId) {\n      const queryParams = new URLSearchParams(location.search);\n\n      queryParams.set('accountId', accountId);\n\n      navigate(\n        {\n          pathname: generatePath('/dashboard'),\n          search: queryParams.toString(),\n        },\n        { replace: true }\n      );\n    }\n    onClose();\n  }, [accountId, location.search, navigate, onClose]);\n\n  return (\n    <Modal size=\"lg\" isOpen={isOpen} onClose={onClose} closeOnOverlayClick={false}>\n      <ModalOverlay />\n      <ModalContent mt=\"100px\" borderWidth=\"1px\" borderColor=\"gray.900\" bg=\"navy.900\" color=\"white\">\n        <Flex justifyContent=\"space-between\" p={6} alignItems=\"center\">\n          <Heading fontSize=\"20px\">\n            {step === 2 ? 'Migration successful' : 'Convert your sUSD to V3'}\n          </Heading>\n          <CloseButton onClick={onClose} color=\"gray\" />\n        </Flex>\n        <Flex width=\"100%\" px={6}>\n          <Divider colorScheme=\"gray\" />\n        </Flex>\n        <ModalBody p={6} pt={2}>\n          {isOpen && (\n            <>\n              {step === 0 && (\n                <StepIntro\n                  amount={amount}\n                  setAmount={setAmount}\n                  onClose={onClose}\n                  onConfirm={() => setStep(1)}\n                  network={network}\n                />\n              )}\n              {step === 1 && (\n                <MigrateUSDTransaction\n                  network={network}\n                  onSuccess={() => {\n                    if (type === 'migration') {\n                      setStep(2);\n                    } else {\n                      onClose();\n                    }\n                  }}\n                  onBack={() => setStep(0)}\n                  amount={amount}\n                />\n              )}\n              {step === 2 && <StepSuccessFinal network={network} onConfirm={handleConfirm} />}\n            </>\n          )}\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n","import React from 'react';\nimport {\n  Flex,\n  Spacer,\n  VStack,\n  Heading,\n  Text,\n  ListItem,\n  Button,\n  Image,\n  ListIcon,\n  List,\n  Link,\n} from '@chakra-ui/react';\nimport { CheckIcon } from '@chakra-ui/icons';\n\nexport const StepIntro = ({\n  onClose,\n  onConfirm,\n}: {\n  onClose: () => void;\n  onConfirm: () => void;\n}) => {\n  return (\n    <VStack spacing={2} align=\"start\">\n      <Flex>\n        <VStack gap={6} flex={1} align=\"start\" fontWeight=\"400\" fontSize=\"14px\">\n          <Heading size=\"sm\">Synthetix V3 is now live!</Heading>\n\n          <Text>\n            Migrate to Synthetix V3 to <b>earn fees from both V2 and V3 </b>markets and much more:\n          </Text>\n\n          <List spacing={2}>\n            <ListItem>\n              <ListIcon as={CheckIcon} color=\"cyan.500\" />\n              V2 Legacy Market Fees\n            </ListItem>\n            <ListItem>\n              <ListIcon as={CheckIcon} color=\"cyan.500\" />\n              V3 SC Pool Fees\n            </ListItem>\n            <ListItem>\n              <ListIcon as={CheckIcon} color=\"cyan.500\" />\n              LP Incentives\n            </ListItem>\n            <ListItem>\n              <ListIcon as={CheckIcon} color=\"cyan.500\" />\n              Improved LP experience\n            </ListItem>\n          </List>\n          <Text fontSize=\"sm\">\n            Learn more about{' '}\n            <Link\n              target=\"_blank\"\n              color=\"cyan.500\"\n              href=\"https://docs.synthetix.io/v/synthetix-v3-user-documentation/liquidity-providers-aka-staking/providing-liquidity-and-earning-rewards/staking-snx-on-eth-mainnet-v3-via-migration-to-legacy-market\"\n            >\n              Synthetix V3 migration process\n            </Link>\n          </Text>\n        </VStack>\n        <Flex alignItems=\"center\" justifyContent=\"center\" flex={1}>\n          <Image width=\"165px\" src=\"/synthetix-rocket.png\" alt=\"Synthetix V3 Launch\" />\n        </Flex>\n      </Flex>\n\n      <Spacer />\n      <Spacer />\n      <Spacer />\n      <Spacer />\n\n      <Button width=\"100%\" onClick={onConfirm}>\n        Start Migration\n      </Button>\n      <Button variant=\"outline\" colorScheme=\"gray\" width=\"100%\" onClick={onClose}>\n        Later\n      </Button>\n    </VStack>\n  );\n};\n","import React from 'react';\nimport { VStack, Alert, Text, Button, AlertIcon, Link, Flex } from '@chakra-ui/react';\n\nexport const StepExplain = ({\n  onClose,\n  onConfirm,\n}: {\n  onClose: () => void;\n  onConfirm: () => void;\n}) => {\n  return (\n    <VStack spacing={2} align=\"start\">\n      <Text fontWeight=\"700\">Migrating to Synthetix V3 consists of:</Text>\n      <Flex mt={2.5} flexDir=\"column\" gap={2.5} fontSize=\"14px\" fontWeight=\"400\">\n        <Flex alignItems=\"center\" gap={2.5}>\n          <Flex width={4}>\n            <svg\n              width=\"12\"\n              height=\"12\"\n              viewBox=\"0 0 12 12\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M8.66602 3.33464C8.66602 4.80739 7.47211 6.0013 5.99935 6.0013C4.52659 6.0013 3.33268 4.80739 3.33268 3.33464C3.33268 1.86188 4.52659 0.667969 5.99935 0.667969C7.47211 0.667969 8.66602 1.86188 8.66602 3.33464ZM7.66602 3.33464C7.66602 4.27782 6.90541 5.01653 5.99935 5.01653C5.09329 5.01653 4.33268 4.27782 4.33268 3.33464C4.33268 2.39145 5.09329 1.65274 5.99935 1.65274C6.90541 1.65274 7.66602 2.39145 7.66602 3.33464Z\"\n                fill=\"white\"\n              />\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M5.99935 6.66797C3.05383 6.66797 0.666016 8.06086 0.666016 9.77908V10.3499C0.666016 10.8937 1.11373 11.3346 1.66602 11.3346H10.3327C10.885 11.3346 11.3327 10.8937 11.3327 10.3499V9.77908C11.3327 8.06086 8.94487 6.66797 5.99935 6.66797ZM1.66602 9.77908C1.66602 9.40806 1.92996 8.89769 2.73776 8.42647C3.52361 7.96806 4.67444 7.65274 5.99935 7.65274C7.32426 7.65274 8.47509 7.96806 9.26093 8.42647C10.0687 8.89769 10.3327 9.40806 10.3327 9.77908V10.3499H1.66602V9.77908Z\"\n                fill=\"white\"\n              />\n            </svg>\n          </Flex>\n          <Text flex={1}>Creation of an Account on Synthetix V3</Text>\n        </Flex>\n        <Flex alignItems=\"center\" gap={2.5}>\n          <Flex width={4}>\n            <svg\n              width=\"16\"\n              height=\"16\"\n              viewBox=\"0 0 16 16\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M12.5701 3.50845C11.9243 2.86259 10.8771 2.86259 10.2313 3.50845C9.58542 4.1543 9.58542 5.20144 10.2313 5.8473C10.8771 6.49315 11.9243 6.49315 12.5701 5.8473C13.216 5.20144 13.216 4.1543 12.5701 3.50845ZM10.9384 4.21555C11.1937 3.96022 11.6077 3.96022 11.863 4.21555C12.1184 4.47089 12.1184 4.88486 11.863 5.14019C11.6077 5.39552 11.1937 5.39552 10.9384 5.14019C10.6831 4.88486 10.6831 4.47089 10.9384 4.21555Z\"\n                fill=\"white\"\n              />\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M14.4058 1.67272C14.2735 1.54042 14.1066 1.46073 13.9626 1.40881C13.8117 1.35441 13.6425 1.31534 13.4696 1.28623C13.1236 1.22799 12.7119 1.20147 12.2952 1.19264C10.2345 1.14896 8.39798 2.27302 7.20433 3.86456L6.48635 4.82186L6.43706 4.92045L3.84686 3.81037C3.65893 3.72983 3.44091 3.77182 3.29634 3.91639L1.0527 6.16003C0.857434 6.3553 0.857434 6.67188 1.0527 6.86714L1.52372 7.33816C2.18804 8.00248 3.23127 8.05696 3.95773 7.50159L4.71241 7.80346L4.31617 8.1997C4.12091 8.39496 4.12091 8.71155 4.31617 8.90681L4.37057 8.9612L3.50031 9.83146C3.30505 10.0267 3.30505 10.3433 3.50031 10.5386C3.69558 10.7338 4.01216 10.7338 4.20742 10.5386L5.07767 9.66831L6.41025 11.0009L5.54001 11.8711C5.34474 12.0664 5.34474 12.383 5.54001 12.5782C5.73527 12.7735 6.05185 12.7735 6.24711 12.5782L7.11736 11.708L7.17172 11.7624C7.36698 11.9576 7.68356 11.9576 7.87883 11.7624L8.27507 11.3661L8.57696 12.1208C8.02159 12.8473 8.07606 13.8905 8.74038 14.5548L9.21141 15.0259C9.40667 15.2211 9.72325 15.2211 9.91851 15.0259L12.1622 12.7822C12.3067 12.6377 12.3487 12.4196 12.2682 12.2317L11.1581 9.6415L11.2567 9.5922L12.214 8.87423C13.8055 7.68057 14.9296 5.84407 14.8859 3.78334C14.8771 3.36665 14.8506 2.95499 14.7923 2.60896C14.7632 2.43601 14.7241 2.26687 14.6697 2.11599C14.6178 1.97199 14.5381 1.80503 14.4058 1.67272ZM12.274 2.19241C12.6699 2.2008 13.0267 2.22574 13.3036 2.27236C13.4422 2.29568 13.5481 2.3224 13.6234 2.34953C13.6631 2.36383 13.6859 2.37534 13.6971 2.38149C13.7032 2.39263 13.7147 2.4155 13.729 2.45518C13.7562 2.53041 13.7829 2.6364 13.8062 2.77495C13.8528 3.05189 13.8778 3.40864 13.8861 3.80452C13.9215 5.4747 13.0078 7.02884 11.614 8.07423L10.7288 8.7381L8.64387 9.78058L6.29798 7.43468L7.34045 5.34972L8.00433 4.46456C9.04972 3.07071 10.6038 2.15702 12.274 2.19241ZM3.76408 4.86286L5.98907 5.81643L5.39713 7.00031L4.1224 6.49042C3.88643 6.39603 3.61693 6.45135 3.43722 6.63106C3.10409 6.96419 2.56396 6.96419 2.23083 6.63106L2.11336 6.51359L3.76408 4.86286ZM10.2621 10.0895L9.07823 10.6814L9.58813 11.9562C9.68251 12.1921 9.62719 12.4616 9.44749 12.6413C9.11435 12.9745 9.11435 13.5146 9.44749 13.8477L9.56496 13.9652L11.2157 12.3145L10.2621 10.0895ZM5.68956 8.24052L5.37683 8.55325L7.52527 10.7017L7.83801 10.389L5.68956 8.24052Z\"\n                fill=\"white\"\n              />\n              <path\n                d=\"M5.22726 11.5584C5.42252 11.3631 5.42252 11.0466 5.22726 10.8513C5.032 10.656 4.71542 10.656 4.52015 10.8513L3.50031 11.8711C3.30505 12.0664 3.30505 12.383 3.50031 12.5782C3.69558 12.7735 4.01216 12.7735 4.20742 12.5782L5.22726 11.5584Z\"\n                fill=\"white\"\n              />\n            </svg>\n          </Flex>\n          <Text flex={1}>\n            Migration of your SNX Collateral (including escrowed SNX) and your debt to a New\n            Liquidity Position on the Liquidity App\n          </Text>\n        </Flex>\n        <Flex alignItems=\"center\" gap={2.5}>\n          <Flex width={4}>\n            <svg\n              width=\"12\"\n              height=\"12\"\n              viewBox=\"0 0 12 12\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M0.833984 6.0013C0.833984 4.98878 1.6548 4.16797 2.66732 4.16797H9.33398C10.3465 4.16797 11.1673 4.98878 11.1673 6.0013V10.0013C11.1673 11.0138 10.3465 11.8346 9.33398 11.8346H2.66732C1.6548 11.8346 0.833984 11.0138 0.833984 10.0013V6.0013ZM2.66732 5.16797C2.20708 5.16797 1.83398 5.54106 1.83398 6.0013V10.0013C1.83398 10.4615 2.20708 10.8346 2.66732 10.8346H9.33398C9.79422 10.8346 10.1673 10.4615 10.1673 10.0013V6.0013C10.1673 5.54106 9.79422 5.16797 9.33398 5.16797H2.66732Z\"\n                fill=\"white\"\n              />\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M2.83398 3.33464C2.83398 1.58573 4.25175 0.167969 6.00065 0.167969C7.74955 0.167969 9.16732 1.58573 9.16732 3.33464V5.16797H2.83398V3.33464ZM6.00065 1.16797C4.80403 1.16797 3.83398 2.13802 3.83398 3.33464V4.16797H8.16732V3.33464C8.16732 2.13802 7.19727 1.16797 6.00065 1.16797Z\"\n                fill=\"white\"\n              />\n            </svg>\n          </Flex>\n          <Text flex={1}>Lock of funds for 7 days</Text>\n        </Flex>\n        <Flex alignItems=\"center\" gap={2.5}>\n          <Flex width={4}>\n            <svg\n              width=\"10\"\n              height=\"11\"\n              viewBox=\"0 0 10 11\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M3.43675 4.45617L2.13565 3.15508L9.26758 3.15508L9.26758 2.42138L2.13565 2.42138L3.43675 1.12028L2.91803 0.601562L0.731365 2.78823L2.91803 4.9749L3.43675 4.45617ZM6.56219 6.08028L7.86329 7.38138L0.731363 7.38138L0.731363 8.11508L7.86329 8.11508L6.56219 9.41617L7.08091 9.9349L9.26758 7.74823L7.08091 5.56156L6.56219 6.08028Z\"\n                fill=\"white\"\n              />\n              <path\n                d=\"M2.13565 3.15508L2.13565 2.95508L1.65281 2.95508L1.99423 3.2965L2.13565 3.15508ZM3.43675 4.45617L3.57817 4.5976L3.7196 4.45617L3.57817 4.31475L3.43675 4.45617ZM9.26758 3.15508L9.26758 3.35508L9.46758 3.35508L9.46758 3.15508L9.26758 3.15508ZM9.26758 2.42138L9.46758 2.42138L9.46758 2.22138L9.26758 2.22138L9.26758 2.42138ZM2.13565 2.42138L1.99423 2.27996L1.65281 2.62138L2.13565 2.62138L2.13565 2.42138ZM3.43675 1.12028L3.57817 1.2617L3.7196 1.12028L3.57817 0.978862L3.43675 1.12028ZM2.91803 0.601562L3.05945 0.460141L2.91803 0.31872L2.77661 0.460141L2.91803 0.601562ZM0.731365 2.78823L0.589943 2.64681L0.448522 2.78823L0.589943 2.92965L0.731365 2.78823ZM2.91803 4.9749L2.77661 5.11632L2.91803 5.25774L3.05945 5.11632L2.91803 4.9749ZM7.86329 7.38138L7.86329 7.58138L8.34613 7.58138L8.00471 7.23996L7.86329 7.38138ZM6.56219 6.08028L6.42077 5.93886L6.27935 6.08028L6.42077 6.22171L6.56219 6.08028ZM0.731363 7.38138L0.731364 7.18138L0.531363 7.18138L0.531363 7.38138L0.731363 7.38138ZM0.731363 8.11508L0.531363 8.11508L0.531363 8.31508L0.731363 8.31508L0.731363 8.11508ZM7.86329 8.11508L8.00471 8.2565L8.34613 7.91508L7.86329 7.91508L7.86329 8.11508ZM6.56219 9.41617L6.42077 9.27475L6.27935 9.41617L6.42077 9.5576L6.56219 9.41617ZM7.08091 9.9349L6.93949 10.0763L7.08091 10.2177L7.22233 10.0763L7.08091 9.9349ZM9.26758 7.74823L9.409 7.88965L9.55042 7.74823L9.409 7.60681L9.26758 7.74823ZM7.08091 5.56156L7.22233 5.42014L7.08091 5.27872L6.93949 5.42014L7.08091 5.56156ZM1.99423 3.2965L3.29533 4.5976L3.57817 4.31475L2.27707 3.01365L1.99423 3.2965ZM9.26758 2.95508L2.13565 2.95508L2.13565 3.35508L9.26758 3.35508L9.26758 2.95508ZM9.06758 2.42138L9.06758 3.15508L9.46758 3.15508L9.46758 2.42138L9.06758 2.42138ZM2.13565 2.62138L9.26758 2.62138L9.26758 2.22138L2.13565 2.22138L2.13565 2.62138ZM3.29533 0.978862L1.99423 2.27996L2.27707 2.5628L3.57817 1.2617L3.29533 0.978862ZM2.77661 0.742984L3.29533 1.2617L3.57817 0.978862L3.05945 0.460141L2.77661 0.742984ZM0.872786 2.92965L3.05945 0.742984L2.77661 0.460141L0.589943 2.64681L0.872786 2.92965ZM3.05945 4.83347L0.872786 2.64681L0.589943 2.92965L2.77661 5.11632L3.05945 4.83347ZM3.29533 4.31475L2.77661 4.83347L3.05945 5.11632L3.57817 4.5976L3.29533 4.31475ZM8.00471 7.23996L6.70361 5.93886L6.42077 6.22171L7.72187 7.5228L8.00471 7.23996ZM0.731363 7.58138L7.86329 7.58138L7.86329 7.18138L0.731364 7.18138L0.731363 7.58138ZM0.931364 8.11508L0.931364 7.38138L0.531363 7.38138L0.531363 8.11508L0.931364 8.11508ZM7.86329 7.91508L0.731364 7.91507L0.731363 8.31508L7.86329 8.31508L7.86329 7.91508ZM6.70361 9.5576L8.00471 8.2565L7.72187 7.97366L6.42077 9.27475L6.70361 9.5576ZM7.22233 9.79347L6.70361 9.27475L6.42077 9.5576L6.93949 10.0763L7.22233 9.79347ZM9.12616 7.60681L6.93949 9.79347L7.22233 10.0763L9.409 7.88965L9.12616 7.60681ZM6.93949 5.70298L9.12616 7.88965L9.409 7.60681L7.22233 5.42014L6.93949 5.70298ZM6.70361 6.22171L7.22233 5.70298L6.93949 5.42014L6.42077 5.93886L6.70361 6.22171Z\"\n                fill=\"white\"\n              />\n            </svg>\n          </Flex>\n          <Text flex={1}>\n            (optional) Conversion of your sUSD into V3 compatible sUSD. You can\n            <Link\n              color=\"cyan.500\"\n              target=\"_blank\"\n              href={`${window.location.origin}/#/?convert=snxusd`}\n            >\n              &nbsp;convert your sUSD&nbsp;\n            </Link>\n            at anytime\n          </Text>\n        </Flex>\n      </Flex>\n\n      <Alert my={6} status=\"info\" borderRadius=\"6px\">\n        <AlertIcon />\n        <Text fontSize=\"14px\">\n          Migration to V3 is currently only available on <b>Ethereum Mainnet</b>. Learn more about\n          <Link\n            color=\"cyan.500\"\n            href=\"https://blog.synthetix.io/synthetix-v3-migration-treasury-council-initiates-transition/\"\n            isExternal\n          >\n            &nbsp;migrating to V3.\n          </Link>\n        </Text>\n      </Alert>\n\n      <Button width=\"100%\" onClick={onConfirm}>\n        Continue\n      </Button>\n      <Button width=\"100%\" variant=\"outline\" colorScheme=\"gray\" onClick={onClose}>\n        Back\n      </Button>\n    </VStack>\n  );\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { Network, useNetwork, useWallet } from '@snx-v3/useBlockchain';\nimport { useV2xSynthetix } from '@snx-v3/useV2xSynthetix';\nimport { wei } from '@synthetixio/wei';\nimport { utils } from 'ethers';\n\nexport function useV2Position(customNetwork?: Network) {\n  const { data: v2xSynthetix } = useV2xSynthetix(customNetwork);\n  const { network } = useNetwork();\n  const { activeWallet } = useWallet();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [\n      `${targetNetwork?.id}-${targetNetwork?.preset}`,\n      'V2Position',\n      {\n        wallet: activeWallet?.address,\n      },\n    ],\n    queryFn: async function () {\n      if (!v2xSynthetix) {\n        return;\n      }\n      const [collateral, balance, debt, cratio, transferableSynthetix] = await Promise.all([\n        wei(await v2xSynthetix.collateral(activeWallet?.address)),\n        wei(await v2xSynthetix.balanceOf(activeWallet?.address)),\n        wei(\n          await v2xSynthetix.debtBalanceOf(activeWallet?.address, utils.formatBytes32String('sUSD'))\n        ),\n        wei(await v2xSynthetix.collateralisationRatio(activeWallet?.address)),\n        wei(await v2xSynthetix.transferableSynthetix(activeWallet?.address)),\n      ]);\n\n      return {\n        collateral,\n        balance,\n        debt,\n        cratio,\n        transferableSynthetix,\n      };\n    },\n    enabled: Boolean(v2xSynthetix && activeWallet?.address),\n    staleTime: Infinity,\n  });\n}\n","import React, { useState } from 'react';\nimport { VStack, Text, Button, Alert, Flex, Tooltip } from '@chakra-ui/react';\nimport { CheckIcon, CopyIcon } from '@chakra-ui/icons';\nimport { TransactionSummary } from '../TransactionSummary/TransactionSummary';\n\nexport const StepSuccess = ({\n  onConfirm,\n  collateral,\n  cRatio,\n  accountId,\n}: {\n  onConfirm: () => void;\n  cRatio: string;\n  collateral: string;\n  accountId: string;\n}) => {\n  const [toolTipLabel, setTooltipLabel] = useState('Copy');\n  return (\n    <VStack spacing={6}>\n      <Text width=\"100%\" textAlign=\"left\" fontSize=\"14px\">\n        Your <b>Collateral</b> has been migrated to Synthetix V3 System\n      </Text>\n\n      <Alert rounded=\"base\" colorScheme=\"green\" borderRadius=\"6px\">\n        <Flex bg=\"green.500\" p=\"1\" rounded=\"full\" mr=\"3.5\">\n          <CheckIcon w=\"12px\" h=\"12px\" color=\"green.900\" />\n        </Flex>\n        <Text fontSize=\"16px\">\n          <b>Collateral</b> successfully migrated\n        </Text>\n      </Alert>\n\n      <TransactionSummary\n        width=\"100%\"\n        items={[\n          {\n            label: 'Total Collateral',\n            value: collateral,\n          },\n          {\n            label: 'C-ratio',\n            value: `${cRatio}%`,\n          },\n          {\n            label: 'Account Id',\n            value: (\n              <>\n                {`#${accountId}`}\n                <Tooltip label={toolTipLabel} closeOnClick={false}>\n                  <CopyIcon\n                    ml=\"2\"\n                    onClick={() => {\n                      navigator.clipboard.writeText(accountId);\n                      setTooltipLabel('Copied');\n                      setTimeout(() => {\n                        setTooltipLabel('Copy');\n                      }, 10000);\n                    }}\n                    cursor=\"pointer\"\n                  />\n                </Tooltip>\n              </>\n            ),\n          },\n        ]}\n      />\n\n      <Button width=\"100%\" onClick={onConfirm}>\n        Continue\n      </Button>\n    </VStack>\n  );\n};\n","import React, { useCallback, useState } from 'react';\nimport {\n  VStack,\n  Text,\n  Heading,\n  Box,\n  HStack,\n  Tooltip,\n  Checkbox,\n  Button,\n  Spinner,\n  Link,\n  Flex,\n  Collapse,\n  AlertIcon,\n  Alert,\n  AlertDescription,\n} from '@chakra-ui/react';\nimport { wei } from '@synthetixio/wei';\nimport { useV2Position } from '@snx-v3/useV2Position';\nimport { Network } from '@snx-v3/useBlockchain';\nimport { InfoIcon } from '@chakra-ui/icons';\nimport { useMigrate } from '@snx-v3/useMigrate';\nimport { StepSuccess } from './StepSuccess';\nimport { formatEther } from 'ethers/lib/utils';\nimport { Amount } from '@snx-v3/Amount';\nimport { CRatioBadge } from '../CRatioBar/CRatioBadge';\nimport { useRates } from '@snx-v3/useRates';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\n\nexport const StepSummary = ({\n  onClose,\n  network,\n  onConfirm,\n}: {\n  onClose: () => void;\n  onConfirm: (accountId: string) => void;\n  network: Network;\n}) => {\n  const { data: snxCollateral } = useCollateralType('SNX');\n  const [isUnderstanding, setIsUnderstanding] = useState(false);\n  const { data } = useV2Position(network);\n  const { migrate, transaction, isLoading, isSuccess, accountId } = useMigrate();\n\n  const { data: rates } = useRates();\n  const snxPrice = rates?.snx || ZEROWEI;\n  const ethPrice = rates?.eth || ZEROWEI;\n\n  const [txSummary, setTxSummary] = useState({\n    collateral: '0',\n    cRatio: '0',\n    accountId: '',\n  });\n\n  const cRatio = data?.cratio.eq(0)\n    ? '0'\n    : wei(1)\n        .div(data?.cratio || wei(1))\n        .mul(100)\n        .toString(2);\n\n  const handleSubmit = useCallback(() => {\n    setTxSummary({\n      cRatio,\n      collateral: data?.collateral?.toString(2) || '0',\n      accountId,\n    });\n\n    migrate();\n  }, [accountId, cRatio, data?.collateral, migrate]);\n\n  if (isSuccess) {\n    return (\n      <StepSuccess\n        onConfirm={() => onConfirm(txSummary.accountId)}\n        cRatio={txSummary.cRatio}\n        collateral={txSummary.collateral}\n        accountId={txSummary.accountId}\n      />\n    );\n  }\n\n  return (\n    <VStack spacing={2.5} align=\"start\" fontSize=\"12px\">\n      <Heading size=\"sm\">Summary of your migration</Heading>\n\n      <Box p={3.5} borderRadius=\"4px\" background=\"#1F1F34\" width=\"100%\">\n        <HStack fontWeight=\"700\" justifyContent=\"space-between\">\n          <Text>C-Ratio</Text>\n          <HStack>\n            <Text>{cRatio}%</Text>\n            <CRatioBadge cRatio={Number(cRatio)} liquidationCratio={105} targetCratio={500} />\n            {/* <Tag colorScheme=\"green\">HEALTHY</Tag> */}\n          </HStack>\n        </HStack>\n      </Box>\n\n      <Text fontSize=\"12px\" fontWeight=\"400\" color=\"gray\" as=\"i\">\n        Warning: if your c-ratio is below V3 liquidation ratio (105%), your account will be{' '}\n        <Link\n          target=\"_blank\"\n          color=\"cyan.500\"\n          href=\"https://docs.synthetix.io/v/v3/for-liquidity-integrators/liquidity-positions/position-liquidations\"\n        >\n          liquidated\n        </Link>{' '}\n        during the migration. We recommend to commence this migration only if you have a healthy\n        c-ratio.\n      </Text>\n\n      <Box p={3.5} borderRadius=\"4px\" background=\"#1F1F34\" width=\"100%\">\n        <VStack align=\"stretch\" spacing={3}>\n          <HStack fontWeight=\"700\" justifyContent=\"space-between\">\n            <Text>\n              SNX Collateral{' '}\n              <Tooltip\n                hasArrow\n                textAlign=\"left\"\n                label=\"Your SNX Collateral will not appear on your wallet anymore as it will be deposited in your Account. You can see the details on your Dashboard.\"\n              >\n                <InfoIcon />\n              </Tooltip>\n            </Text>\n            <Text>\n              {data?.collateral?.toString(2)} SNX\n              {snxPrice?.gt(0) && <>&nbsp;(${snxPrice.mul(data?.collateral).toString(2)})</>}\n            </Text>\n          </HStack>\n          <HStack color=\"gray\" justifyContent=\"space-between\">\n            <Text>Balance</Text>\n            <Text>\n              {data?.balance?.toString(2)} SNX\n              {snxPrice?.gt(0) && <>&nbsp;(${snxPrice.mul(data?.balance).toString(2)})</>}\n            </Text>\n          </HStack>\n          <HStack color=\"gray\" justifyContent=\"space-between\">\n            <Text>\n              Escrowed{' '}\n              <Tooltip\n                hasArrow\n                textAlign=\"left\"\n                label=\"Escrowed SNX will be locked in the V3 system until the escrowed date. It can still be delegated but not withdrawn.\"\n              >\n                <InfoIcon />\n              </Tooltip>\n            </Text>\n            <Text>\n              {data?.collateral?.sub(data?.balance)?.toString(2)} SNX\n              {snxPrice?.gt(0) && (\n                <>&nbsp;(${snxPrice.mul(data?.collateral?.sub(data?.balance)).toString(2)})</>\n              )}\n            </Text>\n          </HStack>\n          <HStack fontWeight=\"700\" justifyContent=\"space-between\">\n            <Text>\n              Debt{' '}\n              <Tooltip\n                hasArrow\n                label={\n                  <Text textAlign=\"left\">\n                    Your debt amount will be the same on V3. Debt is however now determined by the\n                    collateral deposited.\n                  </Text>\n                }\n              >\n                <InfoIcon />\n              </Tooltip>\n            </Text>\n            <Text>${data?.debt?.toString(2)}</Text>\n          </HStack>\n        </VStack>\n      </Box>\n\n      <Checkbox size=\"sm\" onChange={(e) => setIsUnderstanding(e.currentTarget.checked)}>\n        I understand that this action cannot be undone\n      </Checkbox>\n\n      <Box mb={3.5} p={3.5} borderRadius=\"4px\" background=\"#1F1F34\" width=\"100%\">\n        <HStack justifyContent=\"space-between\">\n          <Text>Estimated Gas</Text>\n\n          {transaction !== undefined && (\n            <>\n              {transaction?.gasLimit.gt(0) ? (\n                <Text>\n                  <Amount\n                    value={wei(\n                      formatEther(\n                        transaction?.gasLimit.mul(transaction.gasPrice || 1).toString() || 0\n                      )\n                    )}\n                    suffix=\" ETH\"\n                  />\n\n                  {ethPrice?.gt(0) && (\n                    <>\n                      &nbsp;($\n                      {ethPrice\n                        .mul(\n                          formatEther(\n                            transaction?.gasLimit.mul(transaction.gasPrice || 1).toString() || 0\n                          )\n                        )\n                        .toString(2)}\n                      )\n                    </>\n                  )}\n                </Text>\n              ) : (\n                <Text color=\"red\">Transaction error occured, please seek support</Text>\n              )}\n            </>\n          )}\n        </HStack>\n      </Box>\n\n      <Collapse in={data?.balance.lt(snxCollateral?.minDelegationD18)} animateOpacity>\n        <Alert mb={3.5} status=\"error\" borderRadius=\"6px\">\n          <AlertIcon />\n          <AlertDescription fontSize=\"16px\">\n            The minimal locked amount on V3 is <Amount value={snxCollateral?.minDelegationD18} />{' '}\n            SNX. You can manually unstaked your V2 SNX on the{' '}\n            <Link\n              textDecoration=\"underline\"\n              href=\"https://staking.synthetix.io/staking/burn\"\n              target=\"_blank\"\n            >\n              Staking App\n            </Link>\n          </AlertDescription>\n        </Alert>\n      </Collapse>\n\n      {!isLoading ? (\n        <>\n          <Button\n            width=\"100%\"\n            isDisabled={!(transaction?.gasLimit && transaction?.gasLimit.gt(0) && isUnderstanding)}\n            onClick={handleSubmit}\n          >\n            Migrate\n          </Button>\n          <Button variant=\"outline\" colorScheme=\"gray\" onClick={onClose} width=\"100%\">\n            Cancel\n          </Button>\n        </>\n      ) : (\n        <Flex\n          fontSize=\"14px\"\n          fontWeight={700}\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          width=\"100%\"\n          gap={2}\n          p={3}\n          color=\"cyan.500\"\n        >\n          <Spinner />\n          Loading\n        </Flex>\n      )}\n    </VStack>\n  );\n};\n","import { useQuery, useQueryClient } from '@tanstack/react-query';\nimport { useDefaultProvider, useNetwork, useSigner } from '@snx-v3/useBlockchain';\nimport { useCallback, useMemo, useState } from 'react';\nimport { getGasPrice } from '@snx-v3/useGasPrice';\nimport { formatGasPriceForTransaction } from '@snx-v3/useGasOptions';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { wei } from '@synthetixio/wei';\nimport { useGasSpeed } from '@snx-v3/useGasSpeed';\nimport { parseTxError } from '@snx-v3/parser';\nimport { useLegacyMarket } from '@snx-v3/useLegacyMarket';\n\nexport function useMigrate() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const { network } = useNetwork();\n  const provider = useDefaultProvider();\n  const signer = useSigner();\n  const { data: legacyMarket } = useLegacyMarket();\n  const { gasSpeed } = useGasSpeed();\n  const queryClient = useQueryClient();\n\n  const accountId = useMemo(() => Math.floor(Math.random() * 1000000000000).toString(), []);\n\n  const { data: transaction } = useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'MigrateTxn'],\n    queryFn: async function () {\n      if (!legacyMarket || !signer) {\n        return;\n      }\n      const signerAddress = await signer!.getAddress();\n      const populateTransaction = await legacyMarket.populateTransaction.migrate(accountId, {\n        from: signerAddress,\n      });\n      try {\n        const [gasLimit, feeData] = await Promise.all([\n          await provider?.estimateGas(populateTransaction),\n          await provider?.getFeeData(),\n        ]);\n\n        const gasPrices = await getGasPrice({ provider: signer!.provider });\n        const gasOptionsForTransaction = formatGasPriceForTransaction({\n          gasLimit: wei(gasLimit || ZEROWEI).toBN(),\n          gasPrices,\n          gasSpeed,\n        });\n\n        return {\n          ...populateTransaction,\n          gasLimit: gasOptionsForTransaction.gasLimit,\n          gasPrice: feeData?.gasPrice,\n        };\n      } catch (error) {\n        const parsedError = parseTxError(error);\n        const errorResult = legacyMarket.interface.parseError(parsedError as string);\n        console.error('error:', errorResult);\n\n        return null;\n      }\n    },\n    enabled: Boolean(signer && !!legacyMarket),\n    staleTime: 60 * 1000,\n  });\n\n  const migrate = useCallback(async () => {\n    try {\n      if (!legacyMarket || !transaction) {\n        return;\n      }\n      setIsLoading(true);\n      setIsSuccess(false);\n      const gasPrices = await getGasPrice({ provider: signer!.provider });\n      const signerAddress = await signer!.getAddress();\n\n      const populateTransaction = await legacyMarket.populateTransaction.migrate(accountId, {\n        from: signerAddress,\n      });\n      const gasLimit = await provider?.estimateGas(populateTransaction);\n\n      const gasOptionsForTransaction = formatGasPriceForTransaction({\n        gasLimit: wei(gasLimit || ZEROWEI).toBN(),\n        gasPrices,\n        gasSpeed,\n      });\n\n      const txn = await legacyMarket\n        .connect(signer!)\n        .migrate(accountId, { ...gasOptionsForTransaction });\n      await txn.wait();\n\n      setIsLoading(false);\n      setIsSuccess(true);\n\n      queryClient.invalidateQueries({\n        queryKey: [`${network?.id}-${network?.preset}`, 'Accounts'],\n      });\n    } catch (error) {\n      setIsLoading(false);\n      throw error;\n    }\n  }, [\n    accountId,\n    gasSpeed,\n    legacyMarket,\n    network?.id,\n    network?.preset,\n    provider,\n    queryClient,\n    signer,\n    transaction,\n  ]);\n\n  return {\n    migrate,\n    transaction,\n    isLoading,\n    isSuccess,\n    accountId,\n  };\n}\n","import { useQuery } from '@tanstack/react-query';\nimport { MAINNET, useProviderForChain } from '@snx-v3/useBlockchain';\nimport { Contract } from 'ethers';\nimport { formatBytes32String } from 'ethers/lib/utils';\nimport { wei } from '@synthetixio/wei';\n\nexport function useRates() {\n  const mainnetProvider = useProviderForChain(MAINNET);\n\n  return useQuery({\n    queryKey: ['rates-mainnet'],\n    queryFn: async function () {\n      const { address, abi } = await import(\n        '@synthetixio/contracts/build/mainnet/deployment/ExchangeRates'\n      );\n      const ExchangeRates = new Contract(address, abi, mainnetProvider);\n\n      const result = await ExchangeRates.ratesForCurrencies([\n        formatBytes32String('SNX'),\n        formatBytes32String('ETH'),\n      ]);\n      return {\n        snx: wei(result[0] || 0),\n        eth: wei(result[1] || 0),\n      };\n    },\n    staleTime: Infinity,\n    refetchInterval: 60000,\n  });\n}\n","import {\n  CloseButton,\n  Divider,\n  Flex,\n  Heading,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalOverlay,\n  Text,\n} from '@chakra-ui/react';\nimport { FC, useEffect, useState } from 'react';\nimport { Network } from '@snx-v3/useBlockchain';\nimport { StepIntro } from './StepIntro';\nimport { StepExplain } from './StepExplain';\nimport { StepSummary } from './StepSummary';\nimport { useQueryClient } from '@tanstack/react-query';\ninterface Props {\n  network: Network;\n  onClose: () => void;\n  onSuccess: (accountId: string) => void;\n  isOpen: boolean;\n}\n\nexport const MigrationDialog: FC<Props> = ({ network, onClose, isOpen, onSuccess }) => {\n  const queryClient = useQueryClient();\n  const [step, setStep] = useState(0);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setStep(0);\n    }\n  }, [isOpen]);\n\n  return (\n    <Modal size=\"lg\" isOpen={isOpen} onClose={onClose} closeOnOverlayClick={false}>\n      <ModalOverlay />\n      <ModalContent mt=\"100px\" borderWidth=\"1px\" borderColor=\"gray.900\" bg=\"navy.900\" color=\"white\">\n        <Flex justifyContent=\"space-between\" p={6} alignItems=\"center\">\n          <Heading fontSize=\"20px\">\n            Migrate to Synthetix V3 on{' '}\n            <Text as=\"span\" textTransform=\"capitalize\">\n              {network.name}\n            </Text>\n          </Heading>\n          <CloseButton onClick={onClose} color=\"gray\" />\n        </Flex>\n        <Flex width=\"100%\" px={6}>\n          <Divider borderColor=\"gray.900\" mb={6} colorScheme=\"gray\" />\n        </Flex>\n        <ModalBody pt={0} pb={6}>\n          {step === 0 && <StepIntro onConfirm={() => setStep(1)} onClose={onClose} />}\n          {step === 1 && <StepExplain onConfirm={() => setStep(2)} onClose={() => setStep(0)} />}\n          {step === 2 && (\n            <StepSummary\n              onConfirm={(accountId) => {\n                queryClient.invalidateQueries({\n                  queryKey: [`${network?.id}-${network?.preset}`, 'V2Position'],\n                });\n\n                onSuccess(accountId);\n                onClose();\n              }}\n              onClose={onClose}\n              network={network}\n            />\n          )}\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n","import {\n  Alert,\n  AlertIcon,\n  Button,\n  Divider,\n  Fade,\n  Flex,\n  Heading,\n  Image,\n  Link,\n  Text,\n} from '@chakra-ui/react';\nimport { FC, useCallback, useEffect, useState } from 'react';\nimport { Network, useNetwork, useWallet } from '@snx-v3/useBlockchain';\nimport { Amount } from '@snx-v3/Amount';\nimport { MigrationDialog } from './MigrationDialog';\nimport { MigrateUSDModal } from '../MigrateUSD/MigrateUSDModal';\nimport { useV2Position } from '@snx-v3/useV2Position';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\ninterface Props {\n  network: Network;\n  type?: 'banner' | 'alert';\n}\n\nexport const MigrationBanner: FC<Props> = ({ network, type = 'banner' }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [accountId, setAccountId] = useState('');\n  const [isUSDModalOpen, setIsUSDModalOpen] = useState(false);\n  const { data } = useV2Position(network);\n  const { network: currentNetwork, setNetwork } = useNetwork();\n  const { connect, activeWallet } = useWallet();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const onClick = useCallback(async () => {\n    try {\n      if (!activeWallet) {\n        connect();\n        return;\n      }\n\n      if (!currentNetwork || currentNetwork.id !== network.id) {\n        if (!(await setNetwork(network.id))) {\n          return;\n        }\n      }\n\n      setIsOpen(true);\n    } catch (error) {}\n  }, [activeWallet, connect, currentNetwork, network.id, setNetwork]);\n\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search);\n\n    const convert = queryParams.get('migrate');\n\n    if (convert && convert.toLowerCase() === 'snx') {\n      setIsOpen(true);\n\n      const queryParams = new URLSearchParams(location.search);\n      queryParams.delete('migrate');\n      navigate({\n        pathname: location.pathname,\n        search: queryParams.toString(),\n      });\n    }\n  }, [location.pathname, location.search, navigate]);\n\n  return (\n    <>\n      <MigrationDialog\n        onSuccess={(accountId) => {\n          setAccountId(accountId);\n          setIsUSDModalOpen(true);\n        }}\n        network={network}\n        onClose={() => setIsOpen(false)}\n        isOpen={isOpen}\n      />\n      <MigrateUSDModal\n        network={network}\n        onClose={() => setIsUSDModalOpen(false)}\n        isOpen={isUSDModalOpen}\n        type=\"migration\"\n        accountId={accountId}\n      />\n\n      {!!data && data?.collateral.gt(0) && (\n        <Fade in>\n          {type === 'banner' && (\n            <>\n              <Divider my={4} />\n\n              <Flex justifyContent={['center', 'space-between']} w=\"100%\" flexWrap=\"wrap\" gap={4}>\n                <Image src=\"/Rocket.png\" />\n\n                <Flex mt={1} flex={1} alignItems=\"flex-start\" flexDir=\"column\" gap={6}>\n                  <Heading fontSize=\"20px\" fontWeight={700} color=\"white\">\n                    You have a <Amount value={data?.collateral} /> SNX position on Synthetix V2 on{' '}\n                    <Text as=\"span\" textTransform=\"capitalize\">\n                      {network.name}\n                    </Text>\n                  </Heading>\n                  <Text maxW=\"484px\" fontSize=\"14px\" color=\"gray.500\">\n                    Migrate your SNX to Synthetix V3 to earn fees from both V2 and V3 markets and\n                    much more.\n                  </Text>\n                </Flex>\n\n                <Flex mt=\"auto\" alignItems=\"flex-center\" gap={2}>\n                  <Button\n                    fontSize=\"sm\"\n                    fontWeight={700}\n                    colorScheme=\"gray\"\n                    variant=\"outline\"\n                    onClick={onClick}\n                  >\n                    {!activeWallet\n                      ? 'Connect'\n                      : currentNetwork?.id !== network.id\n                        ? 'Switch Network'\n                        : 'Migrate to V3'}\n                  </Button>\n                  <Link\n                    href=\"https://blog.synthetix.io/synthetix-v3-migration-treasury-council-initiates-transition/\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                  >\n                    <Button fontSize=\"sm\" fontWeight={700} variant=\"outline\" colorScheme=\"gray\">\n                      Learn More\n                    </Button>\n                  </Link>\n                </Flex>\n              </Flex>\n            </>\n          )}\n\n          {type === 'alert' && (\n            <Alert mb={6} borderLeftColor=\"cyan.500\" borderRadius=\"6px\">\n              <AlertIcon color=\"cyan.500\" />\n              <Text color=\"white\" fontFamily=\"heading\" fontSize=\"16px\" lineHeight=\"24px\">\n                You have a <Amount value={data?.collateral} /> SNX active staking position on V2 on{' '}\n                <Text as=\"span\" textTransform=\"capitalize\">\n                  {network.name}\n                </Text>\n                .\n                <Text onClick={onClick} as=\"span\" color=\"cyan.500\" cursor=\"pointer\">\n                  &nbsp;Migrate to V3\n                </Text>\n              </Text>\n            </Alert>\n          )}\n        </Fade>\n      )}\n    </>\n  );\n};\n","import { useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { wei } from '@synthetixio/wei';\nimport { useQuery } from '@tanstack/react-query';\nimport { z } from 'zod';\nimport { ZodBigNumber } from '@snx-v3/zod';\nimport { Network, useNetwork, useProviderForChain } from '@snx-v3/useBlockchain';\nimport { erc7412Call } from '@snx-v3/withERC7412';\nimport { useAllCollateralPriceIds } from '@snx-v3/useAllCollateralPriceIds';\nimport { fetchPriceUpdates, priceUpdatesToPopulatedTx } from '@snx-v3/fetchPythPrices';\nimport { useAllCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\nimport { stringToHash } from '@snx-v3/tsHelpers';\n\nconst VaultCollateralSchema = z\n  .object({ value: ZodBigNumber, amount: ZodBigNumber })\n  .transform(({ value, amount }) => ({ value: wei(value), amount: wei(amount) }));\nconst VaultDebtSchema = ZodBigNumber.transform((x) => wei(x));\n\nexport const useVaultsData = (poolId?: number, customNetwork?: Network) => {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  const { data: collateralTypes } = useCollateralTypes(false, customNetwork);\n  const { data: CoreProxy } = useCoreProxy({ customNetwork });\n  const { data: collateralPriceUpdates } = useAllCollateralPriceIds(customNetwork);\n\n  const provider = useProviderForChain(targetNetwork);\n\n  const { data: priceUpdateTx } = useAllCollateralPriceUpdates(customNetwork);\n\n  return useQuery({\n    queryKey: [\n      `${targetNetwork?.id}-${targetNetwork?.preset}`,\n      'VaultCollaterals',\n      {\n        pool: poolId,\n        tokens: collateralTypes ? collateralTypes?.map((x) => x.tokenAddress).sort() : [],\n        priceUpdateTx: stringToHash(priceUpdateTx?.data),\n      },\n    ],\n    queryFn: async () => {\n      if (\n        !CoreProxy ||\n        !collateralTypes ||\n        !poolId ||\n        !collateralPriceUpdates ||\n        !targetNetwork ||\n        !provider\n      ) {\n        throw Error('useVaultsData should not be enabled when missing data');\n      }\n\n      const collateralCallsP = Promise.all(\n        collateralTypes.map((collateralType) =>\n          CoreProxy.populateTransaction.getVaultCollateral(poolId, collateralType.tokenAddress)\n        )\n      );\n\n      const debtCallsP = Promise.all(\n        collateralTypes.map((collateralType) =>\n          CoreProxy.populateTransaction.getVaultDebt(poolId, collateralType.tokenAddress)\n        )\n      );\n\n      const collateralPriceUpdateCallsP = fetchPriceUpdates(\n        collateralPriceUpdates,\n        targetNetwork.isTestnet\n      ).then((signedData) => priceUpdatesToPopulatedTx('0x', collateralPriceUpdates, signedData));\n\n      const calls = await Promise.all([collateralPriceUpdateCallsP, collateralCallsP, debtCallsP]);\n\n      if (priceUpdateTx) {\n        calls.unshift(priceUpdateTx as any);\n      }\n\n      return await erc7412Call(\n        targetNetwork,\n        provider,\n        calls.flat(),\n        (multicallResult) => {\n          if (!Array.isArray(multicallResult)) throw Error('Expected array');\n\n          const collateralResult = multicallResult.slice(0, collateralTypes.length);\n          const debtResult = multicallResult.slice(collateralTypes.length);\n\n          return collateralResult.map((bytes: string, i: number) => {\n            const debtBytes =\n              debtResult[i] || '0x0000000000000000000000000000000000000000000000000000000000000000';\n\n            const decodedDebt = CoreProxy.interface.decodeFunctionResult('getVaultDebt', debtBytes);\n\n            const decodedCollateral = CoreProxy.interface.decodeFunctionResult(\n              'getVaultCollateral',\n              bytes\n            );\n            const collateral = VaultCollateralSchema.parse({ ...decodedCollateral });\n            const debt = VaultDebtSchema.parse(decodedDebt[0]);\n            return {\n              debt,\n              collateral,\n              collateralType: collateralTypes[i],\n            };\n          });\n        },\n        'useVaultsData'\n      );\n    },\n    enabled: Boolean(collateralTypes?.length && CoreProxy && poolId && collateralPriceUpdates),\n  });\n};\n\nexport type VaultsDataType = ReturnType<typeof useVaultsData>['data'];\n","import {\n  Button,\n  Table,\n  Fade,\n  Flex,\n  Skeleton,\n  TableContainer,\n  Text,\n  Tbody,\n  Th,\n  Thead,\n  Tr,\n  Td,\n} from '@chakra-ui/react';\nimport { useVaultsData, VaultsDataType } from '@snx-v3/useVaultsData';\nimport React, { FC, useMemo } from 'react';\nimport { wei } from '@synthetixio/wei';\nimport { formatNumber, formatNumberToUsd, formatPercent } from '@snx-v3/formatters';\nimport { useParams } from '@snx-v3/useParams';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { useApr } from '@snx-v3/useApr';\nimport { Tooltip } from '@snx-v3/Tooltip';\nimport {\n  ARBITRUM,\n  BASE_ANDROMEDA,\n  NETWORKS,\n  Network,\n  useNetwork,\n  useWallet,\n} from '@snx-v3/useBlockchain';\nimport { useOfflinePrices } from '@snx-v3/useCollateralPriceUpdates';\nimport { BigNumberish } from 'ethers';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { TokenIcon } from '../TokenIcon';\nimport { CollateralType, useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { calculateCRatio } from '@snx-v3/calculations';\nimport { Sparkles } from '@snx-v3/icons';\n\nexport const calculateVaultTotals = (vaultsData: VaultsDataType) => {\n  const zeroValues = { collateral: { value: wei(0), amount: wei(0) }, debt: wei(0) };\n  if (!vaultsData) return zeroValues;\n\n  return vaultsData.reduce((acc, { collateral, debt }) => {\n    acc.collateral = {\n      value: acc.collateral.value.add(collateral.value),\n      amount: acc.collateral.amount.add(collateral.amount),\n    };\n    acc.debt = acc.debt.add(debt);\n    return acc;\n  }, zeroValues);\n};\n\nexport const CollateralSectionUi: FC<{\n  vaultsData: VaultsDataType;\n  collateralPrices?: { symbol: string; price: BigNumberish }[];\n  apr?: {\n    combinedApr: number;\n    cumulativePnl: number;\n    collateralAprs: any[];\n  };\n  isAprLoading?: boolean;\n  isVaultsLoading?: boolean;\n  network: Network | undefined;\n  poolId: string | undefined;\n}> = ({ vaultsData, apr, isAprLoading, isVaultsLoading, network, poolId }) => {\n  const navigate = useNavigate();\n  const [queryParams] = useSearchParams();\n\n  const { network: currentNetwork, setNetwork } = useNetwork();\n  const { connect } = useWallet();\n\n  const { collateral: totalCollateral, debt: totalDebt } = calculateVaultTotals(vaultsData);\n\n  const isInTotalProfit = totalDebt.lt(0);\n\n  return (\n    <Flex\n      bg=\"navy.700\"\n      borderWidth=\"1px\"\n      borderColor=\"gray.900\"\n      borderRadius=\"base\"\n      padding={6}\n      flexDirection=\"column\"\n      data-testid=\"pool collateral types\"\n    >\n      <Text fontWeight={700} fontSize=\"xl\">\n        Pool Collateralization\n      </Text>\n      <BorderBox padding={4} mt={4} flexDirection=\"column\">\n        {/* Total TVL */}\n        <Flex justifyContent=\"space-between\" mb={2}>\n          <Text\n            display=\"flex\"\n            alignItems=\"center\"\n            fontWeight={700}\n            fontSize=\"md\"\n            gap={1}\n            color=\"white\"\n          >\n            Total TVL\n          </Text>\n          <Skeleton\n            startColor=\"whiteAlpha.500\"\n            endColor=\"whiteAlpha.200\"\n            borderRadius={4}\n            isLoaded={Boolean(!isVaultsLoading && vaultsData)}\n            placeholder=\"$147,654,901.78\"\n            width=\"163px\"\n            height=\"26px\"\n          >\n            <Fade in>\n              <Text\n                fontWeight={700}\n                fontSize=\"xl\"\n                color=\"white\"\n                data-testid=\"pool tvl\"\n                textAlign=\"end\"\n              >\n                {formatNumberToUsd(totalCollateral.value.toNumber(), { maximumFractionDigits: 0 })}\n              </Text>\n            </Fade>\n          </Skeleton>\n        </Flex>\n        {/* Total Debt */}\n        <Flex justifyContent=\"space-between\" mb={2}>\n          <Text\n            display=\"flex\"\n            alignItems=\"center\"\n            fontWeight={700}\n            fontSize=\"md\"\n            gap={1}\n            color=\"white\"\n          >\n            Total Debt/Profit\n          </Text>\n          <Skeleton\n            startColor=\"whiteAlpha.500\"\n            endColor=\"whiteAlpha.200\"\n            borderRadius={4}\n            isLoaded={Boolean(!isVaultsLoading && vaultsData)}\n            placeholder=\"$147,654,901.78\"\n            width=\"163px\"\n            height=\"26px\"\n          >\n            <Fade in>\n              <Text\n                fontWeight={700}\n                fontSize=\"xl\"\n                data-testid=\"pool total debt\"\n                textAlign=\"end\"\n                color={isInTotalProfit ? 'green.500' : 'white'}\n              >\n                {isInTotalProfit ? '+' : '-'}\n                {formatNumberToUsd(totalDebt.abs().toNumber(), { maximumFractionDigits: 0 })}\n              </Text>\n            </Fade>\n          </Skeleton>\n        </Flex>\n        {/* APR */}\n        <Flex justifyContent=\"space-between\">\n          <Text\n            display=\"flex\"\n            alignItems=\"center\"\n            fontWeight={700}\n            fontSize=\"md\"\n            gap={1}\n            color=\"white\"\n          >\n            APR\n          </Text>\n          <Skeleton\n            startColor=\"whiteAlpha.500\"\n            endColor=\"whiteAlpha.200\"\n            borderRadius={4}\n            isLoaded={!isAprLoading}\n            width=\"163px\"\n            height=\"26px\"\n          >\n            <Fade in>\n              <Tooltip label=\"APR is averaged over the trailing 28 days and is comprised of both performance and rewards\">\n                <Text fontWeight={700} fontSize=\"xl\" color=\"white\" textAlign=\"end\">\n                  {network?.id === ARBITRUM.id ? 'Up to ' : ''}\n                  {formatApr(apr?.combinedApr, network?.id)}\n                </Text>\n              </Tooltip>\n            </Fade>\n          </Skeleton>\n        </Flex>\n      </BorderBox>\n      <TableContainer\n        maxW=\"100%\"\n        mt={4}\n        borderRadius=\"5px\"\n        sx={{\n          borderCollapse: 'separate !important',\n          borderSpacing: 0,\n        }}\n      >\n        <Table>\n          <Thead>\n            <Tr>\n              <Th\n                borderBottom=\"none\"\n                fontFamily=\"heading\"\n                fontSize=\"12px\"\n                fontWeight={700}\n                lineHeight=\"16px\"\n                letterSpacing={0.6}\n                color=\"gray.600\"\n                textTransform=\"none\"\n              >\n                Asset\n              </Th>\n              <Th\n                borderBottom=\"none\"\n                fontFamily=\"heading\"\n                fontSize=\"12px\"\n                fontWeight={700}\n                lineHeight=\"16px\"\n                letterSpacing={0.6}\n                color=\"gray.600\"\n                textTransform=\"none\"\n              >\n                TVL\n              </Th>\n              <Th\n                borderBottom=\"none\"\n                fontFamily=\"heading\"\n                fontSize=\"12px\"\n                fontWeight={700}\n                lineHeight=\"16px\"\n                letterSpacing={0.6}\n                color=\"gray.600\"\n                textTransform=\"none\"\n              >\n                Debt/Profit\n              </Th>\n              <Th\n                borderBottom=\"none\"\n                fontFamily=\"heading\"\n                fontSize=\"12px\"\n                fontWeight={700}\n                lineHeight=\"16px\"\n                letterSpacing={0.6}\n                color=\"gray.600\"\n                textTransform=\"none\"\n              >\n                APR\n              </Th>\n              <Th\n                borderBottom=\"none\"\n                fontFamily=\"heading\"\n                fontSize=\"12px\"\n                fontWeight={700}\n                lineHeight=\"16px\"\n                letterSpacing={0.6}\n                color=\"gray.600\"\n                textTransform=\"none\"\n              >\n                {' '}\n              </Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {(isAprLoading || isVaultsLoading || !vaultsData) && (\n              <React.Fragment>\n                {[1, 2, 3].map((index) => (\n                  <Tr\n                    key={index}\n                    textAlign=\"left\"\n                    borderBottomColor=\"gray.900\"\n                    borderBottomWidth=\"1px\"\n                  >\n                    <Th borderBottom=\"none\">\n                      <Skeleton\n                        startColor=\"whiteAlpha.500\"\n                        endColor=\"whiteAlpha.200\"\n                        borderRadius={4}\n                        height=\"26px\"\n                        width=\"92px\"\n                      />\n                    </Th>\n                    <Th borderBottom=\"none\">\n                      <Skeleton\n                        startColor=\"whiteAlpha.500\"\n                        endColor=\"whiteAlpha.200\"\n                        borderRadius={4}\n                        height=\"26px\"\n                        width=\"92px\"\n                      />\n                    </Th>\n                    <Th borderBottom=\"none\">\n                      <Skeleton\n                        startColor=\"whiteAlpha.500\"\n                        endColor=\"whiteAlpha.200\"\n                        borderRadius={4}\n                        height=\"26px\"\n                        width=\"92px\"\n                      />\n                    </Th>\n                    <Th borderBottom=\"none\">\n                      <Skeleton\n                        startColor=\"whiteAlpha.500\"\n                        endColor=\"whiteAlpha.200\"\n                        borderRadius={4}\n                        height=\"26px\"\n                        width=\"92px\"\n                      />\n                    </Th>\n                    <Th borderBottom=\"none\">\n                      <Skeleton\n                        startColor=\"whiteAlpha.500\"\n                        endColor=\"whiteAlpha.200\"\n                        borderRadius={4}\n                        height=\"26px\"\n                        width=\"92px\"\n                      />\n                    </Th>\n                  </Tr>\n                ))}\n              </React.Fragment>\n            )}\n            {vaultsData?.map((vaultCollateral, i) => {\n              // Calculate c-ratio\n              const cRatio = calculateCRatio(\n                vaultCollateral.debt,\n                vaultCollateral.collateral.value\n              );\n\n              const collateralApr = apr?.collateralAprs.find(\n                (a) =>\n                  a.collateralType.toLowerCase() ===\n                  vaultCollateral.collateralType.tokenAddress.toLowerCase()\n              );\n\n              const { apr28d, apr28dRewards, apr28dPnl } = collateralApr || {\n                apr28d: 0,\n                apr28dRewards: 0,\n                apr28dPnl: 0,\n              };\n\n              const isInProfit = vaultCollateral.debt.lt(0);\n\n              const borderTopWidth = i === 0 ? '1px' : '0px';\n\n              return (\n                <Tr\n                  key={vaultCollateral.collateralType.tokenAddress}\n                  borderTopWidth={borderTopWidth}\n                  borderTopColor=\"gray.900\"\n                  borderBottomWidth=\"1px\"\n                  borderBottomColor=\"gray.900\"\n                >\n                  <Td borderBottom=\"none\" py={1}>\n                    <Fade in>\n                      <Flex alignItems=\"center\" gap={2}>\n                        <TokenIcon symbol={vaultCollateral.collateralType.symbol} w={30} h={30} />\n                        <Flex>\n                          <Flex direction=\"column\">\n                            <Text fontWeight={700} lineHeight=\"20px\" fontSize=\"14px\" color=\"white\">\n                              {vaultCollateral.collateralType.displaySymbol}\n                            </Text>\n                            <Text\n                              fontFamily=\"heading\"\n                              fontSize=\"12px\"\n                              lineHeight=\"16px\"\n                              color=\"gray.500\"\n                            >\n                              {vaultCollateral.collateralType.name}\n                            </Text>\n                          </Flex>\n                        </Flex>\n                      </Flex>\n                    </Fade>\n                  </Td>\n                  <Td borderBottom=\"none\">\n                    <Fade in>\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"14px\"\n                          fontWeight={500}\n                          color=\"white\"\n                          lineHeight=\"20px\"\n                          fontFamily=\"heading\"\n                          data-testid=\"collateral value\"\n                        >\n                          {formatNumberToUsd(vaultCollateral.collateral.value.toNumber(), {\n                            maximumFractionDigits: 0,\n                            minimumFractionDigits: 0,\n                          })}\n                        </Text>\n                        <Text\n                          fontSize=\"12px\"\n                          color=\"gray.500\"\n                          lineHeight=\"16px\"\n                          fontFamily=\"heading\"\n                          data-testid=\"collateral value\"\n                        >\n                          {formatNumber(vaultCollateral.collateral.amount.toNumber(), {\n                            maximumFractionDigits: 0,\n                            minimumFractionDigits: 0,\n                          })}{' '}\n                          {vaultCollateral.collateralType.symbol}\n                        </Text>\n                      </Flex>\n                    </Fade>\n                  </Td>\n                  <Td borderBottom=\"none\">\n                    <Fade in>\n                      <Tooltip\n                        label={\n                          isInProfit\n                            ? `This vault has a profit of ${formatNumberToUsd(\n                                vaultCollateral.debt.abs().toNumber(),\n                                {\n                                  maximumFractionDigits: 0,\n                                  minimumFractionDigits: 0,\n                                }\n                              )}`\n                            : ''\n                        }\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"14px\"\n                            color={isInProfit ? 'green.500' : 'white'}\n                            data-testid=\"collateral debt\"\n                            fontWeight={500}\n                          >\n                            {isInProfit ? '+' : '-'}\n                            {formatNumberToUsd(vaultCollateral.debt.abs().toNumber(), {\n                              maximumFractionDigits: 0,\n                              minimumFractionDigits: 0,\n                            })}\n                          </Text>\n                          <Text\n                            fontFamily=\"heading\"\n                            fontSize=\"12px\"\n                            lineHeight=\"14px\"\n                            color=\"gray.500\"\n                          >\n                            C-ratio: {cRatio.lte(0) ? 'Infinite' : formatPercent(cRatio.toNumber())}\n                          </Text>\n                        </Flex>\n                      </Tooltip>\n                    </Fade>\n                  </Td>\n                  <Td borderBottom=\"none\">\n                    <Fade in>\n                      <Tooltip\n                        label={\n                          <Flex direction=\"column\">\n                            <Flex justifyContent=\"space-between\">\n                              <Text fontWeight={700} mr={2}>\n                                Total APR:\n                              </Text>\n                              <Text fontWeight={700}>{formatApr(apr28d * 100, network?.id)}</Text>\n                            </Flex>\n                            <Flex justifyContent=\"space-between\">\n                              <Text mr={2}>Performance:</Text>\n                              <Text>{formatApr(apr28dPnl * 100, network?.id)}</Text>\n                            </Flex>\n                            <Flex justifyContent=\"space-between\">\n                              <Text mr={2}>Rewards: </Text>\n                              <Text>{formatApr(apr28dRewards * 100, network?.id)}</Text>\n                            </Flex>\n                          </Flex>\n                        }\n                      >\n                        <Flex alignItems=\"center\">\n                          <Text\n                            fontSize=\"sm\"\n                            fontWeight={500}\n                            color=\"white\"\n                            data-testid=\"collateral apr\"\n                          >\n                            {formatApr(apr28d * 100, network?.id)}\n                          </Text>\n                          <Sparkles w=\"14px\" h=\"14px\" mb={1} ml=\"0.5px\" mt=\"1px\" />\n                        </Flex>\n                      </Tooltip>\n                    </Fade>\n                  </Td>\n                  <Td borderBottom=\"none\" textAlign=\"end\">\n                    <Fade in>\n                      <Button\n                        onClick={async (e) => {\n                          try {\n                            e.stopPropagation();\n\n                            if (!currentNetwork) {\n                              connect();\n                              return;\n                            }\n\n                            if (network && currentNetwork.id !== network.id) {\n                              if (!(await setNetwork(network.id))) {\n                                return;\n                              }\n                            }\n\n                            queryParams.set('manageAction', 'deposit');\n                            navigate({\n                              pathname: `/positions/${vaultCollateral.collateralType.symbol}/${poolId}`,\n                              search: queryParams.toString(),\n                            });\n                          } catch (error) {}\n                        }}\n                        height=\"32px\"\n                        py=\"10px\"\n                        px=\"12px\"\n                        whiteSpace=\"nowrap\"\n                        borderRadius=\"4px\"\n                        fontFamily=\"heading\"\n                        fontWeight={700}\n                        fontSize=\"14px\"\n                        lineHeight=\"20px\"\n                      >\n                        Deposit\n                      </Button>\n                    </Fade>\n                  </Td>\n                </Tr>\n              );\n            })}\n          </Tbody>\n        </Table>\n      </TableContainer>\n    </Flex>\n  );\n};\n\nexport const CollateralSection = () => {\n  const { poolId, networkId } = useParams();\n\n  const network = NETWORKS.find((n) => n.id === Number(networkId));\n\n  const { data: vaultsData, isLoading: isVaultsLoading } = useVaultsData(Number(poolId), network);\n  const { data: aprData, isLoading: isAprLoading } = useApr(network);\n\n  const { data: BaseCollateralTypes } = useCollateralTypes(false, BASE_ANDROMEDA);\n  const { data: ArbitrumCollateralTypes } = useCollateralTypes(false, ARBITRUM);\n\n  const allCollaterals: CollateralType[] = useMemo(() => {\n    if (!BaseCollateralTypes || !ArbitrumCollateralTypes) {\n      return [];\n    }\n\n    return BaseCollateralTypes.concat(ArbitrumCollateralTypes);\n  }, [ArbitrumCollateralTypes, BaseCollateralTypes]);\n\n  const { data: collateralPrices } = useOfflinePrices(\n    allCollaterals.map((item) => ({\n      id: item.tokenAddress,\n      oracleId: item.oracleNodeId,\n      symbol: item.symbol,\n    }))\n  );\n\n  return (\n    <CollateralSectionUi\n      vaultsData={vaultsData}\n      collateralPrices={collateralPrices}\n      apr={aprData}\n      isAprLoading={isAprLoading}\n      isVaultsLoading={isVaultsLoading}\n      network={network}\n      poolId={poolId}\n    />\n  );\n};\n\nexport function formatApr(apr?: number, networkId?: number) {\n  if (!networkId || !apr || apr <= 0) return '-';\n\n  return `${apr.toFixed(2)}%`;\n}\n","import { Flex, Text, Tooltip } from '@chakra-ui/react';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { Network } from '@snx-v3/useBlockchain';\nimport { CollateralType } from '@snx-v3/useCollateralTypes';\n\nexport const Specifics: React.FC<{\n  network?: Network;\n  isToros?: boolean;\n  collateralType?: CollateralType;\n}> = ({ network, isToros, collateralType }) => {\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n\n  if (isToros) {\n    return (\n      <Tooltip\n        textAlign=\"left\"\n        label=\"This vault is earning OP tokens via the Optimism Superfest\"\n        hasArrow\n      >\n        <Flex alignItems=\"center\" gap={1}>\n          <svg\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M9.88064 4.06846L11.3748 2.15234L13.0991 3.8503L15.2155 2.65124L16.1537 4.88353L18.5638 4.583L18.5764 7.01033L20.9153 7.65218L19.9966 9.90465L21.911 11.393L20.2043 13.1261L21.3988 15.2346L19.1624 16.1874L19.4585 18.5929L17.0302 18.6198L16.3803 20.9583L14.1346 20.051L12.6404 21.9669L10.9161 20.2691L8.8048 21.4668L7.86152 19.2358L5.45645 19.535L5.44384 17.1077L3.10504 16.4658L4.01854 14.2147L2.10938 12.725L3.81606 10.9919L2.62139 8.88343L4.85283 7.93191L4.56173 5.52507L6.98502 5.49955L7.63501 3.16113L9.88064 4.06846Z\"\n              fill=\"#FF0420\"\n            />\n            <path\n              d=\"M10.3028 5.5633L11.5158 4.00781L12.9156 5.3862L14.6337 4.41282L15.3953 6.22499L17.3518 5.981L17.3621 7.95153L19.2608 8.47257L18.515 10.3011L20.069 11.5093L18.6835 12.9163L19.6534 14.628L17.8378 15.4015L18.0782 17.3543L16.1069 17.3761L15.5792 19.2745L13.7562 18.5379L12.5432 20.0934L11.1434 18.7149L9.42948 19.6873L8.66372 17.8762L6.71129 18.1191L6.70105 16.1485L4.80241 15.6275L5.544 13.8L3.99414 12.5907L5.37961 11.1838L4.40979 9.4721L6.22128 8.69967L5.98494 6.74578L7.95217 6.72508L8.47984 4.82674L10.3028 5.5633Z\"\n              fill=\"#FFF2AF\"\n            />\n            <path\n              d=\"M10.7261 7.08202L11.649 5.89844L12.7141 6.94727L14.0214 6.2066L14.6009 7.58549L16.0896 7.39984L16.0975 8.89921L17.5421 9.29568L16.9747 10.687L18.1571 11.6064L17.1029 12.6769L17.8408 13.9793L16.4594 14.5679L16.6424 16.0538L15.1423 16.0704L14.7408 17.5148L13.3537 16.9543L12.4308 18.138L11.3657 17.0891L10.0615 17.8289L9.47887 16.4509L7.99325 16.6357L7.98548 15.1363L6.54081 14.7398L7.10506 13.3493L5.92578 12.4292L6.97999 11.3586L6.24205 10.0562L7.62041 9.46846L7.44058 7.98177L8.93746 7.96601L9.33895 6.52157L10.7261 7.08202Z\"\n              fill=\"#69D7FF\"\n            />\n          </svg>\n\n          <svg\n            width=\"18\"\n            height=\"18\"\n            viewBox=\"0 0 18 18\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M13.0174 5.43933L15.5565 5.4607L15.0114 4.65886C14.199 3.44599 13.0368 2.5094 11.6789 1.97498C10.3209 1.44054 8.83247 1.33405 7.41236 1.66991C5.9923 2.00576 4.70896 2.76772 3.73297 3.85315C3.07438 4.58558 2.57681 5.44183 2.26542 6.36621L1.01824 5.51595C2.28007 2.28873 5.41556 4.87321e-06 9.05782 5.23486e-06C10.3077 -0.00137571 11.5437 0.270478 12.6786 0.796884C13.3279 1.09804 14.2005 1.79177 14.8284 2.33033C15.3725 2.79694 15.8344 3.34704 16.238 3.93781L16.5875 4.44947V1.79811H18V6.87641H13.0174V5.43933Z\"\n              fill=\"white\"\n            />\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M4.98265 12.5607L2.44347 12.5393L2.98862 13.3411C3.801 14.554 4.96324 15.4906 6.32114 16.025C7.67912 16.5595 9.16753 16.666 10.5876 16.3301C12.0077 15.9942 13.291 15.2323 14.267 14.1469C14.9256 13.4144 15.4232 12.5582 15.7346 11.6338L16.9818 12.484C15.7199 15.7113 12.5844 18 8.94218 18C7.69234 18.0014 6.45634 17.7295 5.3214 17.2031C4.67209 16.902 3.79947 16.2082 3.17156 15.6697C2.62753 15.2031 2.16563 14.653 1.76203 14.0622L1.41246 13.5505V16.2019H0V11.1236H4.98265V12.5607Z\"\n              fill=\"white\"\n            />\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M8.15203 7.43259C8.15749 7.17392 8.23184 7.06855 8.2819 7.01839C8.34795 6.9522 8.47557 6.8811 8.71189 6.84375C9.20433 6.76593 9.87038 6.87923 10.42 7.02301L11.0951 7.19961L11.4508 5.8585L10.7756 5.6819C10.1959 5.53025 9.28981 5.34813 8.49247 5.47415C8.08389 5.53872 7.63721 5.69436 7.29017 6.04213C6.92908 6.40398 6.75541 6.89352 6.75541 7.46324V7.48949L6.75741 7.51568C6.80774 8.17482 7.2026 8.61291 7.61215 8.90098C7.9876 9.16507 8.453 9.35742 8.82896 9.51279C8.84315 9.51866 8.85721 9.52447 8.87114 9.53023C9.2958 9.70592 9.61093 9.84124 9.82934 10.0001C10.0216 10.14 10.0408 10.2246 10.0408 10.2993C10.0408 10.589 9.95496 10.7041 9.88771 10.7645C9.79772 10.8453 9.62873 10.9241 9.34044 10.9598C8.75321 11.0324 7.99039 10.8896 7.42884 10.7403L6.75445 10.5609L6.39323 11.9005L7.06761 12.0799C7.66109 12.2377 8.64365 12.4435 9.51303 12.336C9.95306 12.2815 10.4402 12.138 10.8242 11.7931C11.231 11.4277 11.4371 10.9136 11.4371 10.2993C11.4371 9.62952 11.0601 9.17643 10.6544 8.8813C10.2852 8.61267 9.81651 8.4189 9.43937 8.26297C9.42885 8.25862 9.4184 8.2543 9.40803 8.25001C8.98398 8.07458 8.65635 7.93607 8.41913 7.76921C8.21793 7.62769 8.1647 7.52425 8.15203 7.43259Z\"\n              fill=\"white\"\n            />\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M8.9936 11.3259C9.37918 11.3259 9.69176 11.6363 9.69176 12.0193V13.7528H8.29545V12.0193C8.29545 11.6363 8.60803 11.3259 8.9936 11.3259Z\"\n              fill=\"white\"\n            />\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M9.69176 4.04495V5.77849C9.69176 6.16146 9.37918 6.47191 8.9936 6.47191C8.60803 6.47191 8.29545 6.16146 8.29545 5.77849V4.04495H9.69176Z\"\n              fill=\"white\"\n            />\n          </svg>\n        </Flex>\n      </Tooltip>\n    );\n  }\n\n  if (isBase) {\n    if (collateralType?.symbol.toUpperCase() === 'stataUSDC'.toUpperCase()) {\n      return (\n        <Tooltip textAlign=\"left\" label=\"Yield on yield\" hasArrow>\n          <svg\n            width=\"15\"\n            height=\"20\"\n            viewBox=\"0 0 15 20\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M14.75 0.25V1C14.75 2.77196 14.3798 4.34748 13.5301 5.58602C12.7165 6.77204 11.5079 7.58328 9.93146 7.97585C9.92778 7.19348 9.80594 6.88671 9.715 6.65775C9.69278 6.6018 9.6724 6.55049 9.65605 6.49803C10.874 6.1769 11.7254 5.56518 12.2932 4.73746C12.8164 3.9749 13.1334 2.97787 13.2234 1.75H13C11.1969 1.75 9.6271 2.75473 8.82235 4.23727C8.43446 3.61825 8.21504 3.35622 7.82135 3C8.94447 1.34139 10.8442 0.25 13 0.25H14.75ZM2.5 2.25H0.75V3C0.75 5.11524 1.27886 6.95375 2.51724 8.26497C3.62925 9.44239 5.22292 10.0995 7.25 10.227V14.0471C6.71977 14.1139 6.19971 14.2513 5.7039 14.4567C4.97595 14.7583 4.31451 15.2002 3.75736 15.7574C3.20021 16.3145 2.75825 16.9759 2.45672 17.7039C2.34927 17.9633 2.26041 18.2293 2.19052 18.5C2.0643 18.9889 2 19.4928 2 20H14C14 19.4928 13.9357 18.9889 13.8095 18.5C13.7396 18.2293 13.6507 17.9633 13.5433 17.7039C13.2417 16.9759 12.7998 16.3145 12.2426 15.7574C11.6855 15.2002 11.0241 14.7583 10.2961 14.4567C9.80029 14.2513 9.28023 14.1139 8.75 14.0471V8.5C8.75 5.04822 5.95178 2.25 2.5 2.25ZM7.25 8.5V8.72377C5.54931 8.60061 4.37854 8.05115 3.60776 7.23503C2.84294 6.42522 2.38729 5.26367 2.27653 3.75H2.5C5.12335 3.75 7.25 5.87665 7.25 8.5ZM12.1575 18.2779C12.1878 18.3513 12.2162 18.4253 12.2426 18.5H3.75736C3.78376 18.4253 3.81216 18.3513 3.84254 18.2779C4.06869 17.732 4.40016 17.2359 4.81802 16.818C5.23588 16.4002 5.73196 16.0687 6.27792 15.8425C6.82389 15.6164 7.40905 15.5 8 15.5C8.59095 15.5 9.17611 15.6164 9.72208 15.8425C10.268 16.0687 10.7641 16.4002 11.182 16.818C11.5998 17.2359 11.9313 17.732 12.1575 18.2779Z\"\n              fill=\"white\"\n            />\n          </svg>\n        </Tooltip>\n      );\n    }\n\n    return (\n      <Text fontFamily=\"heading\" fontSize=\"14px\" lineHeight=\"20px\" fontWeight={500} color=\"white\">\n        N/A\n      </Text>\n    );\n  }\n\n  return (\n    <Tooltip textAlign=\"left\" label=\"Interest free loan\" hasArrow>\n      <svg\n        width=\"14\"\n        height=\"20\"\n        viewBox=\"0 0 14 20\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M7.44509 0.394593L7 0.0664062L6.55491 0.394593C4.84836 1.6529 3.22055 3.82713 2.02366 6.14401C0.827692 8.45912 0 11.0367 0 13.1482C0 15.211 0.767278 16.884 2.06527 18.0335C3.35213 19.1731 5.10272 19.7482 7 19.7482C8.88834 19.7482 10.6379 19.2031 11.9276 18.0897C13.2313 16.9642 14 15.3126 14 13.2482C14 11.1379 13.1731 8.5362 11.9779 6.197C10.7821 3.85674 9.15429 1.65485 7.44509 0.394593ZM1.5 13.1482C1.5 11.3698 2.21731 9.03736 3.35634 6.83247C4.18293 5.23239 5.19892 3.76279 6.25 2.66758V18.2116C4.96858 18.0839 3.86898 17.6271 3.05973 16.9105C2.10772 16.0675 1.5 14.8154 1.5 13.1482ZM7.75 18.2134C9.03848 18.0912 10.1398 17.6515 10.9474 16.9543C11.8937 16.1373 12.5 14.9139 12.5 13.2482C12.5 13.0369 12.4899 12.8175 12.4701 12.591L7.75 15.4222V18.2134ZM7.75 13.673V12.4229L11.9057 9.92948C12.0207 10.2932 12.1205 10.6516 12.2038 11.0016L7.75 13.673ZM7.75 10.6736L11.3839 8.49326C11.1635 7.95448 10.9149 7.41333 10.6421 6.87948C9.81513 5.2609 8.79954 3.77491 7.75 2.67273V10.6736Z\"\n          fill=\"white\"\n        />\n      </svg>\n    </Tooltip>\n  );\n};\n","import { Flex, Button, Text, Fade } from '@chakra-ui/react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport {\n  MAINNET,\n  Network,\n  NetworkIcon,\n  SEPOLIA,\n  useNetwork,\n  useWallet,\n} from '@snx-v3/useBlockchain';\nimport { wei } from '@synthetixio/wei';\nimport { BigNumberish } from 'ethers';\nimport { TokenIcon } from '../../TokenIcon';\nimport { CollateralType } from '@snx-v3/useCollateralTypes';\nimport { Sparkles } from '@snx-v3/icons';\nimport { formatNumber, formatNumberToUsd } from '@snx-v3/formatters';\nimport { formatApr } from '../CollateralSection';\nimport { Tooltip } from '@snx-v3/Tooltip';\nimport { useTokenBalanceForChain } from '@snx-v3/useTokenBalance';\nimport { getSpotMarketId, isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { useGetWrapperToken } from '@snx-v3/useGetUSDTokens';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { MigrationBanner } from '../../Migration/MigrationBanner';\nimport { Specifics } from './Specifics';\n\ninterface CollateralTypeWithDeposited extends CollateralType {\n  collateralDeposited: string;\n}\n\nexport interface Props {\n  collateralType: CollateralTypeWithDeposited;\n  pool: {\n    name: string;\n    id: string;\n  };\n  network: Network;\n  collateralPrices?: {\n    symbol: string;\n    price: BigNumberish;\n  }[];\n  apr: {\n    combinedApr: number;\n    cumulativePnl: number;\n    collateralAprs: any[];\n  };\n}\n\nexport const PoolRow = ({ pool, network, apr, collateralType, collateralPrices }: Props) => {\n  const { data: wrapperToken } = useGetWrapperToken(\n    getSpotMarketId(collateralType.symbol),\n    network\n  );\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n  // TODO: This will need refactoring\n  const balanceAddress = isBase ? wrapperToken : collateralType?.tokenAddress;\n\n  const { data: balance } = useTokenBalanceForChain(balanceAddress, network);\n  const navigate = useNavigate();\n  const [queryParams] = useSearchParams();\n\n  const { network: currentNetwork, setNetwork } = useNetwork();\n  const { connect } = useWallet();\n\n  const price = wei(\n    collateralPrices?.find(\n      (price) => price.symbol.toUpperCase() === collateralType.symbol.toUpperCase()\n    )?.price || ZEROWEI\n  );\n\n  const collateralApr = apr.collateralAprs.find(\n    (apr) => apr.collateralType === collateralType.tokenAddress.toLowerCase()\n  ) || { apr28d: 0, apr28dRewards: 0, apr28dPnl: 0 };\n\n  const { apr28d, apr28dRewards, apr28dPnl } = collateralApr;\n\n  const onClick = async () => {\n    try {\n      if (!currentNetwork) {\n        connect();\n        return;\n      }\n\n      if (currentNetwork.id !== network.id) {\n        if (!(await setNetwork(network.id))) {\n          return;\n        }\n      }\n\n      queryParams.set('manageAction', 'deposit');\n      navigate({\n        pathname: `/positions/${collateralType.symbol}/${pool.id}`,\n        search: queryParams.toString(),\n      });\n    } catch (error) {}\n  };\n\n  const buttonText = !currentNetwork ? 'Connect Wallet' : 'Deposit';\n\n  return (\n    <Fade in>\n      <Flex\n        flexDir=\"column\"\n        w=\"100%\"\n        border=\"1px solid\"\n        borderColor=\"gray.900\"\n        rounded=\"base\"\n        bg=\"navy.700\"\n        px={3}\n        py={4}\n      >\n        <Flex px={4} flexDir=\"row\" w=\"100%\" gap={4}>\n          <Flex width=\"190px\" alignItems=\"center\" _hover={{ cursor: 'pointer' }} onClick={onClick}>\n            <Flex position=\"relative\">\n              <TokenIcon w={40} h={40} symbol={collateralType.symbol} />\n              <NetworkIcon\n                position=\"absolute\"\n                right={0}\n                bottom={0}\n                networkId={network.id}\n                size=\"14px\"\n              />\n            </Flex>\n            <Flex flexDirection=\"column\" ml={3} mr=\"auto\">\n              <Text\n                fontSize=\"14px\"\n                color=\"white\"\n                fontWeight={700}\n                lineHeight=\"1.25rem\"\n                fontFamily=\"heading\"\n              >\n                {collateralType.symbol}\n              </Text>\n              <Text\n                textTransform=\"capitalize\"\n                fontSize=\"xs\"\n                color=\"gray.500\"\n                fontFamily=\"heading\"\n                lineHeight=\"1rem\"\n              >\n                {network.name} Network\n              </Text>\n            </Flex>\n          </Flex>\n          <Flex width=\"220px\" direction=\"column\" alignItems=\"flex-end\">\n            <Text\n              fontFamily=\"heading\"\n              fontSize=\"14px\"\n              fontWeight={500}\n              lineHeight=\"28px\"\n              color=\"white\"\n            >\n              {balance ? formatNumberToUsd(balance.mul(price).toNumber()) : '-'}\n            </Text>\n            <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"12px\" lineHeight=\"16px\">\n              {balance ? formatNumber(balance.toNumber()) : ''} {collateralType.symbol}\n            </Text>\n          </Flex>\n          <Flex width=\"189px\" flexDir=\"column\" justifyContent=\"cetner\" alignItems=\"flex-end\">\n            <Text\n              fontFamily=\"heading\"\n              fontSize=\"14px\"\n              fontWeight={500}\n              lineHeight=\"28px\"\n              color=\"white\"\n            >\n              SC Pool\n            </Text>\n            <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"12px\" lineHeight=\"16px\">\n              Spartan Council\n            </Text>\n          </Flex>\n          <Flex width=\"144px\" alignItems=\"center\" justifyContent=\"flex-end\">\n            <Text\n              fontFamily=\"heading\"\n              fontSize=\"14px\"\n              lineHeight=\"20px\"\n              fontWeight={500}\n              color=\"white\"\n              textAlign=\"right\"\n            >\n              {price\n                ? formatNumberToUsd(\n                    wei(collateralType.collateralDeposited, Number(collateralType.decimals), true)\n                      .mul(price)\n                      .toNumber()\n                  )\n                : 0}\n            </Text>\n          </Flex>\n          <Flex width=\"144px\" alignItems=\"center\" justifyContent=\"flex-end\">\n            <Text\n              fontFamily=\"heading\"\n              fontSize=\"14px\"\n              lineHeight=\"20px\"\n              fontWeight={500}\n              color=\"white\"\n            >\n              {formatApr(apr28d * 100, network?.id)}\n              <Tooltip\n                label={\n                  <Flex direction=\"column\">\n                    <Flex justifyContent=\"space-between\">\n                      <Text fontWeight={700} mr={2}>\n                        Total APR:\n                      </Text>\n                      <Text fontWeight={700}>{formatApr(apr28d * 100, network?.id)}</Text>\n                    </Flex>\n                    <Flex justifyContent=\"space-between\">\n                      <Text mr={2}>Performance:</Text>\n                      <Text>{formatApr(apr28dPnl * 100, network?.id)}</Text>\n                    </Flex>\n                    <Flex justifyContent=\"space-between\">\n                      <Text mr={2}>Rewards: </Text>\n                      <Text>{formatApr(apr28dRewards * 100, network?.id)}</Text>\n                    </Flex>\n                  </Flex>\n                }\n              >\n                <Flex as=\"span\" display=\"inline\">\n                  <Sparkles w=\"14px\" h=\"14px\" mb={1} ml=\"0.5px\" mt=\"1px\" />\n                </Flex>\n              </Tooltip>\n            </Text>\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"flex-end\" width=\"121px\" textAlign=\"right\">\n            <Specifics network={network} collateralType={collateralType} />\n          </Flex>\n          <Flex minW=\"159px\" flex=\"1\" justifyContent=\"flex-end\">\n            <Button\n              onClick={onClick}\n              size=\"sm\"\n              height=\"32px\"\n              py=\"10px\"\n              px={2}\n              whiteSpace=\"nowrap\"\n              borderRadius=\"4px\"\n              fontFamily=\"heading\"\n              fontWeight={700}\n              fontSize=\"14px\"\n              lineHeight=\"20px\"\n            >\n              {buttonText}\n            </Button>\n          </Flex>\n        </Flex>\n\n        {[MAINNET.id, SEPOLIA.id].includes(network.id) && (\n          <MigrationBanner network={network} type=\"banner\" />\n        )}\n      </Flex>\n    </Fade>\n  );\n};\n","import { Network } from '@snx-v3/useBlockchain';\nimport { BigNumberish } from 'ethers';\nimport { CollateralType } from '@snx-v3/useCollateralTypes';\nimport { PoolRow } from './PoolRow';\n\ninterface CollateralTypeWithDeposited extends CollateralType {\n  collateralDeposited: string;\n}\n\nexport interface PoolCardProps {\n  pool: {\n    name: string;\n    id: string;\n  };\n  network: Network;\n  collateralTypes?: CollateralTypeWithDeposited[];\n  collateralPrices?: {\n    symbol: string;\n    price: BigNumberish;\n  }[];\n  apr: {\n    combinedApr: number;\n    cumulativePnl: number;\n    collateralAprs: any[];\n  };\n  rewardsPayoutTokens?: string[];\n}\n\nexport const PoolCard = ({\n  pool,\n  network,\n  apr,\n  collateralTypes,\n  collateralPrices,\n}: PoolCardProps) => {\n  return (\n    <>\n      {collateralTypes?.map((collateralType) => {\n        return (\n          <PoolRow\n            key={collateralType.tokenAddress + network.id}\n            pool={pool}\n            network={network}\n            apr={apr}\n            collateralType={collateralType}\n            collateralPrices={collateralPrices}\n          />\n        );\n      })}\n    </>\n  );\n};\n","import { Dispatch } from 'react';\nimport { Flex, Button } from '@chakra-ui/react';\nimport { PoolsFilterAction } from './PoolsList';\nimport { NETWORKS, NetworkIcon } from '@snx-v3/useBlockchain';\n\ninterface ChainFilterProps {\n  activeChains: number[];\n  dispatch: Dispatch<PoolsFilterAction>;\n}\n\n// TODO: Remove filter when mainnet and optimism are supported\nconst mainnets = NETWORKS.filter(({ isSupported, isTestnet }) => isSupported && !isTestnet).filter(\n  ({ id }) => id !== 10 && id !== 1\n);\n\nexport const ChainFilter = ({ activeChains, dispatch }: ChainFilterProps) => {\n  const isAllActive = activeChains.length === 0;\n\n  return (\n    <Flex justifyContent=\"center\">\n      <Flex\n        variant=\"unstyled\"\n        bg={isAllActive ? 'whiteAlpha.300' : 'transparent'}\n        onClick={() => dispatch({ type: 'RESET_CHAIN' })}\n        color=\"gray.50\"\n        as={Button}\n        px=\"16px\"\n        py=\"6px\"\n        fontWeight={600}\n        borderRadius=\"9999px\"\n        mr={1.5}\n        fontSize=\"sm\"\n      >\n        All Networks\n      </Flex>\n      {mainnets.map((chain) => {\n        const isActive = activeChains.includes(chain.id);\n\n        const toggle = () => {\n          if (isActive) {\n            dispatch({ type: 'REMOVE_CHAIN', payload: { chain: chain.id } });\n          } else {\n            dispatch({ type: 'ADD_CHAIN', payload: { chain: chain.id } });\n          }\n        };\n\n        return (\n          <Flex\n            key={chain.id}\n            onClick={toggle}\n            variant=\"unstyled\"\n            bg={isActive ? 'whiteAlpha.300' : 'transparent'}\n            justifyContent=\"center\"\n            display=\"flex\"\n            mr={1.5}\n            as={Button}\n            px=\"16px\"\n            py=\"6px\"\n            fontWeight={600}\n            borderRadius=\"9999px\"\n          >\n            <NetworkIcon size=\"18px\" networkId={chain.id} />\n          </Flex>\n        );\n      })}\n    </Flex>\n  );\n};\n","import { Dispatch } from 'react';\nimport { Flex, Button } from '@chakra-ui/react';\nimport { TokenIcon } from '../TokenIcon';\nimport { PoolsFilterAction } from './PoolsList';\n\nconst supportedCollateralTypes = ['WETH', 'SNX', 'USDC', 'ARB'];\n\ninterface CollateralFilterProps {\n  activeCollateral: string[];\n  dispatch: Dispatch<PoolsFilterAction>;\n}\n\nexport const CollateralFilter = ({ activeCollateral, dispatch }: CollateralFilterProps) => {\n  const isAllActive = activeCollateral.length === 0;\n\n  return (\n    <Flex justifyContent=\"center\">\n      <Flex\n        variant=\"unstyled\"\n        bg={isAllActive ? 'whiteAlpha.300' : 'transparent'}\n        onClick={() => dispatch({ type: 'RESET_COLLATERAL' })}\n        color=\"gray.50\"\n        as={Button}\n        px=\"16px\"\n        py=\"6px\"\n        fontWeight={600}\n        borderRadius=\"9999px\"\n        mr={1.5}\n        fontSize=\"sm\"\n      >\n        All Collaterals\n      </Flex>\n      {supportedCollateralTypes.map((collateral) => {\n        const isActive = activeCollateral.includes(collateral);\n\n        const toggle = () => {\n          if (isActive) {\n            dispatch({ type: 'REMOVE_COLLATERAL', payload: { collateral } });\n          } else {\n            dispatch({ type: 'ADD_COLLATERAL', payload: { collateral } });\n          }\n        };\n\n        return (\n          <Flex\n            key={collateral}\n            onClick={toggle}\n            variant=\"unstyled\"\n            bg={isActive ? 'whiteAlpha.300' : 'transparent'}\n            justifyContent=\"center\"\n            display=\"flex\"\n            mr={1.5}\n            as={Button}\n            px=\"16px\"\n            py=\"6px\"\n            fontWeight={600}\n            borderRadius=\"9999px\"\n          >\n            <TokenIcon width={18} height={18} symbol={collateral} />\n          </Flex>\n        );\n      })}\n    </Flex>\n  );\n};\n","import { Flex, Text, Button, Link, Fade, Icon, IconProps } from '@chakra-ui/react';\nimport { BASE_ANDROMEDA, NetworkIcon } from '@snx-v3/useBlockchain';\nimport { TokenIcon } from '../../TokenIcon';\nimport { useGetWrapperToken } from '@snx-v3/useGetUSDTokens';\nimport { getSpotMarketId } from '@snx-v3/isBaseAndromeda';\nimport { useTokenBalanceForChain } from '@snx-v3/useTokenBalance';\nimport { formatNumberToUsd } from '@snx-v3/formatters';\nimport { formatNumber } from 'humanize-plus';\nimport { Specifics } from './Specifics';\n\ninterface TorosPoolCardProps {\n  tvl: string;\n  apy: number;\n}\n\nexport function TorosPoolCard({ tvl, apy }: TorosPoolCardProps) {\n  const { data: wrapperToken } = useGetWrapperToken(getSpotMarketId('USDC'), BASE_ANDROMEDA);\n  const { data: balance } = useTokenBalanceForChain(wrapperToken, BASE_ANDROMEDA);\n\n  return (\n    <Fade in>\n      <Flex\n        flexDir=\"row\"\n        w=\"100%\"\n        border=\"1px solid\"\n        borderColor=\"gray.900\"\n        rounded=\"base\"\n        bg=\"navy.700\"\n        gap={4}\n        px={7}\n        py={4}\n      >\n        <Flex width=\"190px\" alignItems=\"center\">\n          <Flex position=\"relative\">\n            <TokenIcon w={40} h={40} symbol=\"USDC\" />\n            <NetworkIcon\n              position=\"absolute\"\n              right={0}\n              bottom={0}\n              networkId={BASE_ANDROMEDA.id}\n              size=\"14px\"\n            />\n          </Flex>\n          <Flex flexDirection=\"column\" ml={3} mr=\"auto\">\n            <Text\n              fontSize=\"14px\"\n              color=\"white\"\n              fontWeight={700}\n              lineHeight=\"1.25rem\"\n              fontFamily=\"heading\"\n            >\n              USDC\n            </Text>\n            <Text\n              textTransform=\"capitalize\"\n              fontSize=\"xs\"\n              color=\"gray.500\"\n              fontFamily=\"heading\"\n              lineHeight=\"1rem\"\n            >\n              Base Network\n            </Text>\n          </Flex>\n        </Flex>\n        <Flex width=\"220px\" direction=\"column\" alignItems=\"flex-end\">\n          <Text\n            fontFamily=\"heading\"\n            fontSize=\"14px\"\n            fontWeight={500}\n            lineHeight=\"28px\"\n            color=\"white\"\n          >\n            {balance ? formatNumberToUsd(balance.toNumber()) : '-'}\n          </Text>\n          <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"12px\" lineHeight=\"16px\">\n            {balance ? formatNumber(balance.toNumber()) : ''} USDC\n          </Text>\n        </Flex>\n        <Flex width=\"189px\" flexDir=\"column\" justifyContent=\"cetner\" alignItems=\"flex-end\">\n          <Text\n            fontFamily=\"heading\"\n            fontSize=\"14px\"\n            fontWeight={500}\n            lineHeight=\"28px\"\n            color=\"white\"\n          >\n            Toros Yield Vault\n          </Text>\n          <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"12px\" lineHeight=\"16px\">\n            Toros\n          </Text>\n        </Flex>\n        <Flex width=\"144px\" alignItems=\"center\" justifyContent=\"flex-end\">\n          <Text\n            fontFamily=\"heading\"\n            fontSize=\"14px\"\n            lineHeight=\"20px\"\n            fontWeight={500}\n            color=\"white\"\n            textAlign=\"right\"\n          >\n            ${tvl}\n          </Text>\n        </Flex>\n        <Flex width=\"144px\" alignItems=\"center\" justifyContent=\"flex-end\">\n          <Text\n            fontFamily=\"heading\"\n            fontSize=\"14px\"\n            lineHeight=\"20px\"\n            fontWeight={500}\n            color=\"white\"\n          >\n            {apy}%\n          </Text>\n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"flex-end\" width=\"121px\" textAlign=\"right\">\n          <Specifics isToros />\n        </Flex>\n        <Flex flex={1} minWidth=\"159px\" alignItems=\"center\" justifyContent=\"flex-end\">\n          <Link\n            href=\"https://toros.finance/synthetix-usdc-andromeda-yield\"\n            rel=\"noopener\"\n            target=\"_blank\"\n            _hover={{ textDecoration: 'none' }}\n          >\n            <Button\n              size=\"sm\"\n              height=\"32px\"\n              py=\"10px\"\n              px={2}\n              whiteSpace=\"nowrap\"\n              borderRadius=\"4px\"\n              fontFamily=\"heading\"\n              fontWeight={700}\n              fontSize=\"14px\"\n              lineHeight=\"20px\"\n            >\n              Deposit\n              <LinkOffIcon ml={1} />\n            </Button>\n          </Link>\n        </Flex>\n      </Flex>\n    </Fade>\n  );\n}\n\nconst LinkOffIcon = ({ ...props }: IconProps) => (\n  <Icon width=\"14px\" height=\"14px\" viewBox=\"0 0 14 14\" fill=\"none\" {...props}>\n    <g clipPath=\"url(#clip0_13614_19286)\">\n      <path\n        d=\"M9.07955 4.47121L4.65447 4.47121L4.65447 3.30472L11.071 3.30472L11.071 9.72124L9.90451 9.72124L9.90451 5.29617L4.11719 11.325L3.29224 10.5L9.07955 4.47121Z\"\n        fill=\"currentColor\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_13614_19286\">\n        <rect width=\"14\" height=\"14\" fill=\"white\" />\n      </clipPath>\n    </defs>\n  </Icon>\n);\n","import { Flex, Skeleton } from '@chakra-ui/react';\n\nexport const PoolCardsLoading = () => (\n  <>\n    {Array.from(Array(6).keys()).map((i) => (\n      <Flex\n        w=\"100%\"\n        border=\"1px solid\"\n        borderColor=\"gray.900\"\n        rounded=\"base\"\n        bg=\"navy.700\"\n        gap={4}\n        py={6}\n        px={4}\n        key={i}\n      >\n        <Flex alignItems=\"center\" justifyContent=\"flex-start\" width=\"190px\" gap={3}>\n          <Skeleton width=\"40px\" height=\"40px\" rounded=\"full\" />\n          <Flex flex={1} flexDirection=\"column\" gap={1}>\n            <Skeleton height={6} />\n            <Skeleton height={3.5} />\n          </Flex>\n        </Flex>\n        <Flex justifyContent=\"flex-end\" alignItems=\"center\" width=\"220px\">\n          <Skeleton height={6} width=\"92px\" />\n        </Flex>\n        <Flex justifyContent=\"flex-end\" alignItems=\"center\" width=\"189px\">\n          <Skeleton height={6} width=\"92px\" />\n        </Flex>\n        <Flex justifyContent=\"flex-end\" alignItems=\"center\" width=\"144px\">\n          <Skeleton height={6} width=\"92px\" />\n        </Flex>\n        <Flex justifyContent=\"flex-end\" alignItems=\"center\" width=\"144px\">\n          <Skeleton height={6} width=\"92px\" />\n        </Flex>\n        <Flex justifyContent=\"flex-end\" alignItems=\"center\" width=\"121px\">\n          <Skeleton height={6} width=\"53px\" />\n        </Flex>\n        <Flex justifyContent=\"flex-end\" alignItems=\"center\" minW=\"159px\" flex=\"1\">\n          <Skeleton height={6} width=\"139px\" />\n        </Flex>\n      </Flex>\n    ))}\n  </>\n);\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const Balloon = ({ ...props }: IconProps) => (\n  <Icon width=\"242px\" height=\"294px\" viewBox=\"0 0 242 294\" fill=\"none\" {...props}>\n    <path\n      d=\"M35.5978 98.5483C53.9696 117.348 91.5399 175.897 98.468 215.303\"\n      stroke=\"white\"\n      strokeWidth=\"1.5\"\n    />\n    <path\n      d=\"M51.7158 58.1003C67.1932 95.8157 92.3605 137.627 95.7502 212.037\"\n      stroke=\"white\"\n      strokeWidth=\"1.5\"\n    />\n    <path\n      d=\"M91.4891 51.3845C94.7773 92.4947 101.899 151.755 93.6153 220.766\"\n      stroke=\"white\"\n      strokeWidth=\"1.5\"\n    />\n    <path\n      d=\"M117.383 100.944C113.854 128.734 113.664 172.383 87.1345 216.569\"\n      stroke=\"white\"\n      strokeWidth=\"1.5\"\n    />\n    <path\n      d=\"M36.1586 97.9597C54.5304 116.759 92.1006 175.309 99.0288 214.715\"\n      stroke=\"#C9C9D9\"\n      strokeWidth=\"1.5\"\n    />\n    <path\n      d=\"M118.229 100.917C114.7 128.707 114.51 172.356 87.9809 216.542\"\n      stroke=\"#C9C9D9\"\n      strokeWidth=\"1.5\"\n    />\n    <path\n      d=\"M52.4117 57.5923C67.889 95.3077 93.0564 137.119 96.446 211.529\"\n      stroke=\"#C9C9D9\"\n      strokeWidth=\"1.5\"\n    />\n    <path\n      d=\"M92.2393 51.2368C95.5276 92.347 102.65 151.608 94.3656 220.618\"\n      stroke=\"#C9C9D9\"\n      strokeWidth=\"1.5\"\n    />\n    <path\n      d=\"M125.029 216.256L168.984 241.78L168.973 245.837L125.05 271.379L118.049 271.364L74.088 245.836L74.0802 241.788L118.042 216.258L125.029 216.256Z\"\n      fill=\"#6B59FF\"\n    />\n    <rect\n      width=\"44.1452\"\n      height=\"44.1452\"\n      transform=\"matrix(0.864779 0.502153 -0.864779 0.502153 121.393 221.28)\"\n      fill=\"#00B0D6\"\n    />\n    <path\n      d=\"M87.2931 245.809L121.424 225.977L121.424 230.667L91.3375 248.161L87.2931 245.809Z\"\n      fill=\"#008EAD\"\n    />\n    <path\n      d=\"M121.393 225.995L155.533 245.81L151.479 248.145L121.393 230.689L121.393 225.995Z\"\n      fill=\"#008EAD\"\n    />\n    <path\n      d=\"M83.2195 243.449L121.397 221.28L121.397 223.743L85.3475 244.688L83.2195 243.449Z\"\n      fill=\"#2D1EA6\"\n    />\n    <path\n      d=\"M121.393 221.28L159.567 243.447L157.459 244.689L121.393 223.747L121.393 221.28Z\"\n      fill=\"#402FC8\"\n    />\n    <path\n      d=\"M85.1845 244.579L121.401 223.531L121.401 225.994L87.2849 245.816L85.1845 244.579Z\"\n      fill=\"#2D1EA6\"\n    />\n    <path\n      d=\"M121.393 223.531L157.65 244.565L155.51 245.809L121.393 225.998L121.393 223.531Z\"\n      fill=\"#402FC8\"\n    />\n    <mask id=\"path-17-inside-1_14871_157174\" fill=\"white\">\n      <path d=\"M74.0897 245.837L118.042 271.358L118.042 293.445L74.0897 267.923L74.0897 245.837Z\" />\n    </mask>\n    <path\n      d=\"M74.0897 245.837L118.042 271.358L118.042 293.445L74.0897 267.923L74.0897 245.837Z\"\n      fill=\"#402FC8\"\n    />\n    <path\n      d=\"M117.609 271.107L117.609 293.194L118.474 293.696L118.474 271.61L117.609 271.107Z\"\n      fill=\"#AEA4FF\"\n      mask=\"url(#path-17-inside-1_14871_157174)\"\n    />\n    <mask id=\"path-19-inside-2_14871_157174\" fill=\"white\">\n      <path d=\"M125.023 271.359L168.974 245.837L168.974 267.924L125.023 293.445L125.023 271.359Z\" />\n    </mask>\n    <path\n      d=\"M125.023 271.359L168.974 245.837L168.974 267.924L125.023 293.445L125.023 271.359Z\"\n      fill=\"#2D1EA6\"\n    />\n    <path\n      d=\"M125.455 293.194L125.455 271.108L124.59 271.61L124.59 293.696L125.455 293.194Z\"\n      fill=\"#AEA4FF\"\n      mask=\"url(#path-19-inside-2_14871_157174)\"\n    />\n    <mask id=\"path-21-inside-3_14871_157174\" fill=\"white\">\n      <path d=\"M118.039 271.371H125.027V293.445H118.039V271.371Z\" />\n    </mask>\n    <path d=\"M118.039 271.371H125.027V293.445H118.039V271.371Z\" fill=\"#2D1EA6\" />\n    <path\n      d=\"M118.039 271.371V270.871H117.539V271.371H118.039ZM125.027 271.371H125.527V270.871H125.027V271.371ZM118.039 271.871H125.027V270.871H118.039V271.871ZM124.527 271.371V293.445H125.527V271.371H124.527ZM118.539 293.445V271.371H117.539V293.445H118.539Z\"\n      fill=\"#AEA4FF\"\n      mask=\"url(#path-21-inside-3_14871_157174)\"\n    />\n    <path\n      d=\"M142.396 265.149L140.962 265.977L140.962 279.389L142.396 278.561L142.396 265.149Z\"\n      fill=\"#06061B\"\n    />\n    <path\n      d=\"M143.831 264.317L142.396 265.146L142.396 278.561L143.831 279.389L143.831 264.317Z\"\n      fill=\"#402FC8\"\n    />\n    <path\n      d=\"M143.83 279.39L140.96 281.05L140.961 279.39L142.395 278.561L143.83 279.39Z\"\n      fill=\"#6B59FF\"\n    />\n    <path\n      d=\"M146.704 262.66L145.269 263.489L145.269 276.901L146.704 276.073L146.704 262.66Z\"\n      fill=\"#06061B\"\n    />\n    <path\n      d=\"M148.138 261.828L146.703 262.657L146.703 276.073L148.138 276.901L148.138 261.828Z\"\n      fill=\"#402FC8\"\n    />\n    <path\n      d=\"M148.137 276.901L145.267 278.562L145.268 276.901L146.702 276.073L148.137 276.901Z\"\n      fill=\"#6B59FF\"\n    />\n    <path\n      d=\"M151.009 260.172L149.574 261L149.574 274.412L151.009 273.584L151.009 260.172Z\"\n      fill=\"#06061B\"\n    />\n    <path\n      d=\"M152.443 259.34L151.008 260.169L151.008 273.584L152.443 274.412L152.443 259.34Z\"\n      fill=\"#402FC8\"\n    />\n    <path\n      d=\"M152.442 274.413L149.573 276.073L149.573 274.413L151.008 273.584L152.442 274.413Z\"\n      fill=\"#6B59FF\"\n    />\n    <path\n      d=\"M155.314 257.683L153.879 258.512L153.879 271.924L155.314 271.096L155.314 257.683Z\"\n      fill=\"#06061B\"\n    />\n    <path\n      d=\"M156.748 256.851L155.314 257.68L155.314 271.096L156.748 271.924L156.748 256.851Z\"\n      fill=\"#402FC8\"\n    />\n    <path\n      d=\"M156.747 271.924L153.878 273.585L153.878 271.924L155.313 271.096L156.747 271.924Z\"\n      fill=\"#6B59FF\"\n    />\n    <path d=\"M74.0921 245.839L118.046 271.374H125.014L168.974 245.838\" stroke=\"#AEA4FF\" />\n    <path\n      d=\"M121.533 261.713L166.418 235.65L166.418 243.578L121.533 269.641L121.533 261.713Z\"\n      fill=\"#C9C9D9\"\n    />\n    <path\n      d=\"M76.6477 235.531L121.533 261.594L121.533 269.641L76.6477 243.578L76.6477 235.531Z\"\n      fill=\"#E2E2F0\"\n    />\n    <path\n      d=\"M125.029 187.193L168.984 212.716L168.973 216.774L125.05 242.316L118.049 242.3L74.088 216.773L74.0802 212.724L118.042 187.195L125.029 187.193Z\"\n      fill=\"#6B59FF\"\n    />\n    <rect\n      width=\"44.1452\"\n      height=\"44.1452\"\n      transform=\"matrix(0.864779 0.502153 -0.864779 0.502153 121.393 192.216)\"\n      fill=\"#00D1FF\"\n    />\n    <path\n      d=\"M87.2931 216.746L121.424 196.913L121.424 201.604L91.3375 219.097L87.2931 216.746Z\"\n      fill=\"#008EAD\"\n    />\n    <path\n      d=\"M121.393 196.932L155.533 216.746L151.479 219.082L121.393 201.625L121.393 196.932Z\"\n      fill=\"#008EAD\"\n    />\n    <path\n      d=\"M83.2195 214.385L121.397 192.216L121.397 194.68L85.3475 215.624L83.2195 214.385Z\"\n      fill=\"#2D1EA6\"\n    />\n    <path\n      d=\"M121.393 192.216L159.567 214.383L157.459 215.626L121.393 194.683L121.393 192.216Z\"\n      fill=\"#402FC8\"\n    />\n    <path\n      d=\"M85.1845 215.516L121.401 194.467L121.401 196.93L87.2849 216.752L85.1845 215.516Z\"\n      fill=\"#2D1EA6\"\n    />\n    <path\n      d=\"M121.393 194.468L157.65 215.502L155.51 216.746L121.393 196.935L121.393 194.468Z\"\n      fill=\"#402FC8\"\n    />\n    <mask id=\"path-46-inside-4_14871_157174\" fill=\"white\">\n      <path d=\"M74.0897 216.773L118.042 242.295L118.042 264.382L74.0897 238.86L74.0897 216.773Z\" />\n    </mask>\n    <path\n      d=\"M74.0897 216.773L118.042 242.295L118.042 264.382L74.0897 238.86L74.0897 216.773Z\"\n      fill=\"#402FC8\"\n    />\n    <path\n      d=\"M117.609 242.044L117.609 264.13L118.474 264.633L118.474 242.546L117.609 242.044Z\"\n      fill=\"#AEA4FF\"\n      mask=\"url(#path-46-inside-4_14871_157174)\"\n    />\n    <mask id=\"path-48-inside-5_14871_157174\" fill=\"white\">\n      <path d=\"M125.023 242.295L168.974 216.774L168.974 238.86L125.023 264.382L125.023 242.295Z\" />\n    </mask>\n    <path\n      d=\"M125.023 242.295L168.974 216.774L168.974 238.86L125.023 264.382L125.023 242.295Z\"\n      fill=\"#2D1EA6\"\n    />\n    <path\n      d=\"M125.455 264.131L125.455 242.044L124.59 242.546L124.59 264.633L125.455 264.131Z\"\n      fill=\"#AEA4FF\"\n      mask=\"url(#path-48-inside-5_14871_157174)\"\n    />\n    <mask id=\"path-50-inside-6_14871_157174\" fill=\"white\">\n      <path d=\"M118.039 242.307H125.027V264.382H118.039V242.307Z\" />\n    </mask>\n    <path d=\"M118.039 242.307H125.027V264.382H118.039V242.307Z\" fill=\"#2D1EA6\" />\n    <path\n      d=\"M118.039 242.307V241.807H117.539V242.307H118.039ZM125.027 242.307H125.527V241.807H125.027V242.307ZM118.039 242.807H125.027V241.807H118.039V242.807ZM124.527 242.307V264.382H125.527V242.307H124.527ZM118.539 264.382V242.307H117.539V264.382H118.539Z\"\n      fill=\"#AEA4FF\"\n      mask=\"url(#path-50-inside-6_14871_157174)\"\n    />\n    <path d=\"M74.0921 216.776L118.046 242.31H125.014L168.974 216.775\" stroke=\"#AEA4FF\" />\n    <path\n      d=\"M153.163 239.714L149.356 237.516L149.356 239.519L153.163 241.717L153.163 239.714Z\"\n      fill=\"#E2E2F0\"\n    />\n    <path\n      d=\"M142.551 245.872L138.745 243.674L138.745 245.677L142.551 247.875L142.551 245.872Z\"\n      fill=\"#E2E2F0\"\n    />\n    <path\n      d=\"M144.596 244.692L142.552 245.872L138.746 243.674L140.79 242.494L144.596 244.692Z\"\n      fill=\"#FEFEFF\"\n    />\n    <path\n      d=\"M155.195 238.55L153.162 239.724L149.356 237.526L151.389 236.353L155.195 238.55Z\"\n      fill=\"#FEFEFF\"\n    />\n    <path\n      d=\"M155.208 238.563L142.549 245.872L142.549 247.894L155.208 240.586L155.208 238.563Z\"\n      fill=\"#C9C9D9\"\n    />\n    <path\n      d=\"M155.214 238.56L142.551 245.871L140.186 244.506L152.849 237.195L155.214 238.56Z\"\n      fill=\"#FEFEFF\"\n    />\n    <path\n      d=\"M120.924 138.238C129.139 157.525 148.205 203.913 144.403 242.749\"\n      stroke=\"white\"\n      strokeWidth=\"1.5\"\n    />\n    <path\n      d=\"M121.512 137.516C129.726 156.803 148.792 203.191 144.991 242.026\"\n      stroke=\"#C9C9D9\"\n      strokeWidth=\"1.5\"\n    />\n    <path\n      d=\"M205.82 97.4355C179.333 130.637 153.721 194.747 146.117 242.106\"\n      stroke=\"white\"\n      strokeWidth=\"1.5\"\n    />\n    <path\n      d=\"M206.306 98.1211C179.874 131.32 154.313 195.425 146.725 242.78\"\n      stroke=\"#C9C9D9\"\n      strokeWidth=\"1.5\"\n    />\n    <path\n      d=\"M182.309 111.502C166.048 141.342 150.323 198.962 145.655 241.526\"\n      stroke=\"white\"\n      strokeWidth=\"1.5\"\n    />\n    <path\n      d=\"M182.898 112.201C166.637 142.042 150.912 199.661 146.244 242.225\"\n      stroke=\"#C9C9D9\"\n      strokeWidth=\"1.5\"\n    />\n    <path\n      d=\"M198.946 51.5159C135.775 104.355 147.359 193.927 144.901 242.205\"\n      stroke=\"white\"\n      strokeWidth=\"1.5\"\n    />\n    <path\n      d=\"M199.781 51.4807C136.61 104.319 148.194 193.892 145.736 242.17\"\n      stroke=\"#C9C9D9\"\n      strokeWidth=\"1.5\"\n    />\n    <path\n      d=\"M174.533 30.1777L173.854 36.575L175.185 41.876L172.745 43.2919L171.466 40.6093L170.915 38.2281L170.54 36.2234L171.466 31.8229L174.533 30.1777Z\"\n      fill=\"#FEFEFF\"\n    />\n    <path\n      d=\"M234.234 74.8176C239.761 63.3438 229.095 53.7159 224.713 52.8425C222.443 45.1597 218.376 42.6613 216.557 42.3267C213.002 27.5427 201.65 25.8931 200.559 32.5614C194.25 21.3759 187.567 23.5273 187.315 29.5831C181.554 23.3398 171.893 24.0898 174.818 36.7916L222.33 69.6932L229.478 77.5694L234.234 74.8176Z\"\n      fill=\"#FEFEFF\"\n    />\n    <path d=\"M172.304 29.1663L176.995 26.4646L175.784 29.1574L172.304 29.1663Z\" fill=\"#FEFEFF\" />\n    <path d=\"M184.517 27.9732L189.208 25.2715L187.997 27.9643L184.517 27.9732Z\" fill=\"#FEFEFF\" />\n    <path d=\"M197.765 32.2154L202.456 29.5137L201.245 32.2065L197.765 32.2154Z\" fill=\"#FEFEFF\" />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M175.13 41.9072L230.339 73.7824C230.642 72.9418 230.791 71.8492 230.791 70.528C229.835 65.3978 227.096 61.3545 223.791 58.0503C222.251 57.1613 220.931 56.7546 219.877 56.8368C219.881 56.7078 219.883 56.5745 219.883 56.437C219.177 55.5737 218.629 54.1485 218.043 52.626C217.124 50.2373 216.113 47.6091 214.256 46.537C212.964 45.7912 211.997 45.5545 211.312 45.7983C211.322 45.5973 211.327 45.3899 211.327 45.1762C211.327 41.9214 208.874 39.0744 206.722 36.5775C205.972 35.7078 205.259 34.8806 204.699 34.0934C200.899 31.8992 198.503 32.804 198.503 37.1924C198.503 37.2362 198.503 37.28 198.504 37.3239L196.146 38.6918C196.038 38.3899 195.933 38.0735 195.824 37.7452C195.124 35.6363 194.259 33.0317 191.58 30.5709C188.065 28.5415 186.226 28.9241 186.226 32.9828C186.226 33.5311 186.278 34.0954 186.377 34.6664L184.031 36.0288C182.99 34.0786 181.986 32.4106 179.981 31.2531C175.42 28.62 173.301 29.6001 173.301 34.8663C173.301 37.133 173.986 39.6104 175.13 41.9072Z\"\n      fill=\"#E2E2F0\"\n    />\n    <path\n      d=\"M230.09 73.6617L229.924 74.9156L228.742 75.598L172.756 43.2745L175.12 41.9097L230.09 73.6617Z\"\n      fill=\"#FEFEFF\"\n    />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M172.011 44.3916L229.478 77.5699C230.753 76.5168 231.519 74.6672 231.519 72.169C231.519 66.4468 227.502 59.4886 222.546 56.6275C221.653 56.112 220.791 55.7647 219.977 55.5752C219.391 51.7703 216.746 47.6275 213.572 45.7952C212.969 45.4469 212.385 45.2041 211.83 45.0609C211.169 40.2433 207.822 34.9354 203.791 32.6084C199.934 30.3812 196.701 31.6072 195.852 35.2718C194.517 32.3924 192.358 29.7767 189.923 28.3706C185.954 26.0791 182.72 27.8491 182.586 32.3163C181.563 31.308 180.463 30.4453 179.317 29.7834C173.911 26.6622 169.528 29.1925 169.528 35.4349C169.528 38.3239 170.467 41.5017 172.011 44.3916Z\"\n      fill=\"#E2E2F0\"\n    />\n    <path\n      d=\"M155.208 238.562L142.547 245.872L140.182 244.506L152.843 237.197L155.208 238.562Z\"\n      fill=\"#FEFEFF\"\n    />\n    <path\n      d=\"M48.7564 14.2131L48.0777 20.6098L49.4084 25.9103L46.9688 27.3261L45.6899 24.6437L45.1389 22.2628L44.7635 20.2582L45.6899 15.8581L48.7564 14.2131Z\"\n      fill=\"#FEFEFF\"\n    />\n    <path\n      d=\"M108.469 58.8484C113.995 47.3756 103.33 37.7486 98.948 36.8753C96.6782 29.1932 92.6117 26.695 90.7932 26.3604C87.238 11.5778 75.8879 9.92841 74.7963 16.5961C68.4882 5.41162 61.8056 7.56277 61.5542 13.618C55.7928 7.37532 46.1331 8.12529 49.058 20.8259L96.5656 53.7244L103.713 61.5999L108.469 58.8484Z\"\n      fill=\"#FEFEFF\"\n    />\n    <path d=\"M46.5424 13.2022L51.2334 10.5007L50.0225 13.1933L46.5424 13.2022Z\" fill=\"#FEFEFF\" />\n    <path d=\"M58.7401 12.0076L63.4311 9.30615L62.2202 11.9987L58.7401 12.0076Z\" fill=\"#FEFEFF\" />\n    <path d=\"M71.9872 16.2505L76.6782 13.5491L75.4673 16.2416L71.9872 16.2505Z\" fill=\"#FEFEFF\" />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M49.3423 25.9443L104.548 57.8174C104.852 56.9765 105.001 55.883 105.001 54.5603C104.045 49.4305 101.306 45.3876 98.0023 42.0838C96.4571 41.1917 95.1328 40.7853 94.0772 40.8712C94.0815 40.7414 94.0836 40.6073 94.0836 40.4688C93.3776 39.6057 92.8292 38.1805 92.2435 36.6582C91.3244 34.2697 90.3133 31.6418 88.4565 30.5698C87.1726 29.8286 86.2098 29.5903 85.5257 29.8268C85.5356 29.6278 85.5406 29.4225 85.5406 29.2111C85.5406 25.9565 83.0872 23.1098 80.9355 20.6132C80.1861 19.7436 79.4732 18.9164 78.9134 18.1293C75.1132 15.9353 72.7172 16.84 72.7172 21.2281C72.7172 21.2707 72.7175 21.3134 72.7181 21.3562L72.7175 21.3558L70.3614 22.7225C70.2546 22.4217 70.15 22.1067 70.0415 21.7797L70.0415 21.7797C69.3414 19.671 68.4767 17.0666 65.7972 14.606C62.2826 12.5769 60.4442 12.9594 60.4442 17.0177C60.4442 17.5646 60.496 18.1275 60.5942 18.6971L58.2411 20.0635C57.2003 18.1138 56.1963 16.4462 54.1919 15.289C49.6317 12.6561 47.5125 13.6361 47.5125 18.9018C47.5125 21.169 48.1978 23.6471 49.3423 25.9443Z\"\n      fill=\"#E2E2F0\"\n    />\n    <path\n      d=\"M104.313 57.693L104.147 58.9468L102.965 59.6291L46.984 27.3086L49.3477 25.9439L104.313 57.693Z\"\n      fill=\"#FEFEFF\"\n    />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M46.2452 28.4261L103.708 61.6024C104.985 60.5499 105.752 58.6994 105.752 56.1992C105.752 50.4776 101.736 43.5201 96.7804 40.6593C95.8854 40.1425 95.021 39.7948 94.2053 39.6056C93.6185 35.8015 90.9745 31.6602 87.8017 29.8283C87.1965 29.4789 86.6104 29.2357 86.0543 29.0927C85.3931 24.276 82.046 18.9695 78.0165 16.643C74.1606 14.4168 70.9297 15.641 70.079 19.302C68.7435 16.424 66.5859 13.8099 64.1514 12.4044C60.1835 10.1136 56.9509 11.8824 56.8151 16.3475C55.7936 15.3403 54.6942 14.4784 53.5489 13.8172C48.1433 10.6962 43.7612 13.2262 43.7612 19.4681C43.7612 22.3575 44.7003 25.5359 46.2452 28.4261Z\"\n      fill=\"#E2E2F0\"\n    />\n    <path\n      d=\"M120.852 17.0082C111.091 13.6038 97.9605 15.5897 92.6154 17.0082L120.852 24.9519V17.0082Z\"\n      fill=\"#CFC9FF\"\n    />\n    <path\n      d=\"M120.851 17.0082C130.611 13.6038 143.742 15.5897 149.087 17.0082L120.851 24.9519V17.0082Z\"\n      fill=\"#10104E\"\n    />\n    <path\n      d=\"M68.909 27.0796L51.4791 47.7899L120.85 23.6752C91.4285 10.0575 73.9637 20.2708 68.909 27.0796Z\"\n      fill=\"#AEA4FF\"\n    />\n    <path\n      d=\"M172.789 27.0796L190.219 47.7899L120.848 23.6752C150.27 10.0575 167.734 20.2708 172.789 27.0796Z\"\n      fill=\"#1D1084\"\n    />\n    <path\n      d=\"M190.219 47.7899L172.789 27.0796C167.734 20.2708 150.27 10.0575 120.848 23.6752\"\n      stroke=\"#AEA4FF\"\n    />\n    <path\n      d=\"M181.379 52.0454L206.389 80.4156L181.379 108.786L121 120.537L60.621 108.786L35.6112 80.4156L60.621 52.0454L121 40.2941L181.379 52.0454Z\"\n      fill=\"#156800\"\n    />\n    <path d=\"M120.849 120.417L120.849 23.6753\" stroke=\"white\" />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M120.845 23.6763C88.7742 23.6763 37.8788 39.8472 35.613 80.4166L35.6157 80.4196L35.5957 98.4081C41.1312 95.5975 56.7965 102.256 60.6077 126.777L60.5355 108.784L58.1177 106.032L60.5378 108.787L120.845 23.6763Z\"\n      fill=\"#8D7EFF\"\n    />\n    <path\n      d=\"M35.5978 98.4081L35.0978 98.4075L35.0969 99.2232L35.8241 98.8539L35.5978 98.4081ZM120.847 23.1763C104.743 23.1763 83.9179 27.2334 66.8182 36.3922C49.7151 45.5528 36.2621 59.8659 35.1158 80.3887L36.1143 80.4444C37.2339 60.3979 50.3615 46.3409 67.2903 37.2737C84.2226 28.2046 104.881 24.1763 120.847 24.1763V23.1763ZM35.8241 98.8539C37.0607 98.226 38.9407 98.0965 41.177 98.69C43.4017 99.2803 45.9317 100.576 48.4242 102.722C53.4041 107.01 58.2252 114.69 60.1157 126.854L61.1038 126.7C59.1832 114.343 54.266 106.433 49.0767 101.964C46.4844 99.732 43.822 98.3572 41.4335 97.7234C39.0566 97.0926 36.9026 97.1848 35.3714 97.9622L35.8241 98.8539ZM36.0978 98.4086L36.1178 80.4181L35.1178 80.417L35.0978 98.4075L36.0978 98.4086Z\"\n      fill=\"#AEA4FF\"\n    />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M120.859 23.6763C100.812 32.9368 61.5942 65.2385 60.5512 108.787L120.859 120.56V23.6763ZM60.6132 126.752C69.3539 119.96 99.9127 113.848 120.99 138.516L120.854 120.56L60.5424 108.785L60.6132 126.752Z\"\n      fill=\"#6B59FF\"\n    />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M120.853 23.6765C152.924 23.6765 203.819 39.8475 206.085 80.4168L181.16 108.787L120.853 23.6765ZM181.382 126.762C183.433 115.91 191.984 94.0802 206.389 98.3929L206.092 80.4143L181.164 108.787L181.382 126.762Z\"\n      fill=\"#2D1EA6\"\n    />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M120.844 23.6765C140.891 32.937 180.108 65.2388 181.151 108.787L120.844 120.561V23.6765ZM120.999 138.501C129.93 128.3 155.534 111.235 181.375 126.761L181.161 108.786L120.853 120.559L120.999 138.501Z\"\n      fill=\"#3726C2\"\n    />\n    <path\n      d=\"M120.651 23.2224C110.558 27.8847 95.6841 38.3213 83.1989 53.0503C70.7116 67.782 60.5784 86.8505 60.0532 108.775L61.0529 108.799C61.5709 87.1747 71.5679 68.3183 83.9618 53.6969C96.3578 39.0729 111.116 28.7283 121.07 24.1302L120.651 23.2224ZM61.1155 126.749L61.0444 108.783L60.0444 108.787L60.1155 126.753L61.1155 126.749Z\"\n      fill=\"#AEA4FF\"\n    />\n    <path\n      d=\"M120.634 24.1304C130.588 28.7286 145.347 39.0732 157.743 53.6972C170.137 68.3185 180.134 87.175 180.652 108.799L181.651 108.775C181.126 86.8507 170.993 67.7822 158.506 53.0506C146.021 38.3215 131.147 27.885 121.054 23.2226L120.634 24.1304ZM180.652 108.792L180.866 126.767L181.866 126.755L181.651 108.78L180.652 108.792Z\"\n      fill=\"#AEA4FF\"\n    />\n    <path d=\"M120.819 27.2769L121.025 138.512\" stroke=\"#AEA4FF\" />\n    <path\n      d=\"M120.851 24.1763C136.818 24.1763 157.476 28.2046 174.408 37.2737C191.337 46.3409 204.465 60.3979 205.584 80.4444L206.583 80.3887C205.436 59.8659 191.983 45.5528 174.88 36.3922C157.781 27.2334 136.955 23.1763 120.851 23.1763V24.1763ZM205.583 80.4223L205.881 98.4009L206.88 98.3844L206.583 80.4058L205.583 80.4223Z\"\n      fill=\"#AEA4FF\"\n    />\n    <path\n      d=\"M113.914 23.937L115.936 26.2316L120.82 27.1821L125.703 26.2316L127.726 23.937L125.703 21.6424L120.82 20.692L115.936 21.6424L113.914 23.937Z\"\n      fill=\"#6B59FF\"\n      stroke=\"#AEA4FF\"\n    />\n    <path d=\"M60.7169 126.719C69.4481 119.7 99.9736 113.384 121.028 138.878\" stroke=\"#AEA4FF\" />\n    <path\n      d=\"M121.203 139.2C125.631 133.968 134.216 126.953 144.898 123.25C155.562 119.554 168.297 119.163 181.101 127.122L181.629 126.273C168.52 118.124 155.461 118.531 144.57 122.306C133.697 126.074 124.967 133.204 120.439 138.554L121.203 139.2Z\"\n      fill=\"#AEA4FF\"\n    />\n    <path\n      d=\"M181.865 126.851C182.882 121.283 185.52 113.082 189.674 106.845C191.75 103.728 194.184 101.134 196.951 99.5899C199.703 98.0548 202.799 97.5486 206.26 98.6207L206.556 97.6654C202.814 96.5065 199.436 97.0585 196.464 98.7166C193.508 100.366 190.967 103.1 188.842 106.291C184.592 112.672 181.915 121.011 180.882 126.671L181.865 126.851Z\"\n      fill=\"#AEA4FF\"\n    />\n    <path\n      d=\"M148.213 102.493L147.647 107.824L148.756 112.241L146.723 113.421L145.657 111.186L145.198 109.201L144.885 107.531L145.657 103.864L148.213 102.493Z\"\n      fill=\"#FEFEFF\"\n    />\n    <path\n      d=\"M197.968 139.691C202.574 130.13 193.685 122.107 190.034 121.379C188.142 114.977 184.753 112.895 183.238 112.616C180.275 100.297 170.816 98.922 169.906 104.479C164.649 95.1578 159.08 96.9505 158.871 101.997C154.069 96.7943 146.019 97.4193 148.456 108.004L188.048 135.421L194.005 141.984L197.968 139.691Z\"\n      fill=\"#FEFEFF\"\n    />\n    <path d=\"M146.36 101.65L150.269 99.3984L149.26 101.642L146.36 101.65Z\" fill=\"#FEFEFF\" />\n    <path d=\"M156.536 100.655L160.446 98.4038L159.437 100.648L156.536 100.655Z\" fill=\"#FEFEFF\" />\n    <path d=\"M167.572 104.19L171.481 101.939L170.472 104.183L167.572 104.19Z\" fill=\"#FEFEFF\" />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M148.715 112.272L194.716 138.83C194.968 138.13 195.093 137.219 195.093 136.118C194.296 131.843 192.013 128.473 189.26 125.72C187.976 124.979 186.876 124.64 185.997 124.709C186.001 124.601 186.002 124.489 186.002 124.374C185.414 123.655 184.957 122.467 184.469 121.198C183.703 119.208 182.86 117.018 181.313 116.124C180.241 115.505 179.437 115.307 178.867 115.506C178.875 115.34 178.879 115.168 178.879 114.991C178.879 112.279 176.835 109.906 175.042 107.826C174.417 107.101 173.823 106.412 173.356 105.756C170.189 103.927 168.193 104.681 168.193 108.338C168.193 108.374 168.193 108.41 168.193 108.447L166.224 109.589C166.134 109.337 166.047 109.073 165.956 108.799C165.372 107.042 164.652 104.871 162.419 102.82C159.49 101.129 157.958 101.448 157.958 104.83C157.958 105.288 158.001 105.759 158.083 106.235L156.13 107.369C155.263 105.744 154.426 104.354 152.755 103.389C148.955 101.195 147.189 102.012 147.189 106.4C147.189 108.29 147.761 110.357 148.715 112.272Z\"\n      fill=\"#E2E2F0\"\n    />\n    <path\n      d=\"M194.51 138.728L194.371 139.773L193.386 140.342L146.733 113.407L148.703 112.269L194.51 138.728Z\"\n      fill=\"#FEFEFF\"\n    />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M146.115 114.337L194.002 141.985C195.064 141.107 195.702 139.566 195.702 137.484C195.702 132.716 192.355 126.918 188.225 124.534C187.482 124.105 186.765 123.816 186.088 123.657C185.599 120.487 183.396 117.034 180.751 115.507C180.248 115.217 179.761 115.015 179.299 114.895C178.749 110.881 175.959 106.458 172.6 104.519C169.385 102.662 166.691 103.685 165.984 106.74C164.871 104.34 163.072 102.159 161.042 100.987C157.735 99.0777 155.04 100.553 154.928 104.277C154.076 103.436 153.159 102.716 152.203 102.165C147.698 99.5638 144.046 101.672 144.046 106.874C144.046 109.281 144.828 111.929 146.115 114.337Z\"\n      fill=\"#E2E2F0\"\n    />\n    <path\n      d=\"M15.3343 54.8779L14.8818 59.1424L15.7689 62.6761L14.1425 63.6199L13.2899 61.8317L12.9226 60.2444L12.6724 58.908L13.2899 55.9746L15.3343 54.8779Z\"\n      fill=\"#FEFEFF\"\n    />\n    <path\n      d=\"M55.1391 84.6344C58.8233 76.9859 51.713 70.5679 48.7919 69.9857C47.2787 64.8643 44.5678 63.1989 43.3554 62.9758C40.9853 53.1207 33.4185 52.0211 32.6908 56.4663C28.4854 49.0099 24.0303 50.444 23.8627 54.4809C20.0218 50.3191 13.582 50.819 15.532 59.2861L47.2037 81.2184L51.9684 86.4688L55.1391 84.6344Z\"\n      fill=\"#FEFEFF\"\n    />\n    <path d=\"M13.8534 54.2036L16.9808 52.4026L16.1735 54.1976L13.8534 54.2036Z\" fill=\"#FEFEFF\" />\n    <path d=\"M21.99 53.4074L25.1174 51.6064L24.3101 53.4015L21.99 53.4074Z\" fill=\"#FEFEFF\" />\n    <path d=\"M30.8207 56.2358L33.9481 54.4348L33.1408 56.2298L30.8207 56.2358Z\" fill=\"#FEFEFF\" />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M15.7329 62.7006L52.5359 83.9488C52.7385 83.388 52.8385 82.6585 52.8385 81.7759C52.2009 78.3561 50.3751 75.6609 48.1725 73.4583C47.143 72.8639 46.2606 72.593 45.5571 72.6498C45.5599 72.5633 45.5614 72.4738 45.5614 72.3814C45.0907 71.806 44.7251 70.8559 44.3346 69.841C43.7219 68.2487 43.0478 66.4968 41.8099 65.7821C40.9523 65.2869 40.3095 65.1284 39.8533 65.2877C39.8599 65.1547 39.8632 65.0175 39.8632 64.8762C39.8632 62.7065 38.2276 60.8087 36.7932 59.1443C36.2935 58.5646 35.8183 58.0131 35.4451 57.4884C32.9116 56.0257 31.3143 56.6288 31.3143 59.5542C31.3143 59.5827 31.3145 59.6112 31.3149 59.6398L29.7434 60.5514C29.6721 60.3508 29.6023 60.1405 29.5299 59.9224L29.5298 59.9222C29.0631 58.5164 28.4866 56.7802 26.7003 55.1397C24.3572 53.787 23.1317 54.042 23.1317 56.7475C23.1317 57.1124 23.1662 57.4879 23.2317 57.8679L21.6644 58.7781C20.9705 57.4781 20.3012 56.3663 18.9648 55.5948C15.9247 53.8395 14.5118 54.4929 14.5118 58.0033C14.5118 59.5156 14.9692 61.1685 15.7329 62.7006Z\"\n      fill=\"#E2E2F0\"\n    />\n    <path\n      d=\"M52.3682 83.8642L52.2572 84.7L51.4693 85.1549L14.1488 63.6079L15.7246 62.6981L52.3682 83.8642Z\"\n      fill=\"#FEFEFF\"\n    />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M13.6572 64.3522L51.9658 86.4697C52.817 85.768 53.3281 84.5344 53.3281 82.8679C53.3281 79.0535 50.6502 74.4152 47.3468 72.5079C46.7496 72.1632 46.1729 71.9313 45.6287 71.8052C45.2375 69.2691 43.4749 66.508 41.3596 65.2867C40.9574 65.0545 40.5679 64.8927 40.1982 64.7972C39.7576 61.586 37.5261 58.0479 34.8396 56.4968C32.2686 55.0124 30.1143 55.8291 29.5476 58.2707C28.6574 56.3516 27.2187 54.6085 25.5955 53.6713C22.95 52.144 20.7948 53.3235 20.7046 56.3007C20.0234 55.6289 19.2903 55.0541 18.5264 54.6131C14.9227 52.5325 12.0013 54.2192 12.0013 58.3804C12.0013 60.3066 12.6273 62.4255 13.6572 64.3522Z\"\n      fill=\"#E2E2F0\"\n    />\n  </Icon>\n);\n","import { useReducer, useMemo } from 'react';\nimport { Flex, Heading, Text, Divider } from '@chakra-ui/react';\nimport { ChainFilter, CollateralFilter, PoolCard } from './';\nimport { TorosPoolCard } from './PoolCards/TorosPoolCard';\nimport { usePoolsList } from '@snx-v3/usePoolsList';\nimport { PoolCardsLoading } from './PoolCards/PoolCardsLoading';\nimport { useOfflinePrices } from '@snx-v3/useCollateralPriceUpdates';\nimport { CollateralType, useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { ARBITRUM, BASE_ANDROMEDA, MAINNET } from '@snx-v3/useBlockchain';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { useRewardsDistributors } from '@snx-v3/useRewardsDistributors';\nimport { useOraclePrice } from '@snx-v3/useOraclePrice';\nimport { Balloon } from './Balloon';\n\nexport const PoolsList = () => {\n  const [state, dispatch] = useReducer(poolsReducer, { collateral: [], chain: [] });\n  const { data, isLoading: isPoolsListLoading } = usePoolsList();\n\n  const { data: BaseCollateralTypes, isLoading: isBaseCollateralLoading } = useCollateralTypes(\n    false,\n    BASE_ANDROMEDA\n  );\n\n  const { data: ArbitrumCollateralTypes, isLoading: isArbCollateralLoading } = useCollateralTypes(\n    false,\n    ARBITRUM\n  );\n\n  const { data: MainnetCollateralTypes, isLoading: isMainCollateralLoading } = useCollateralTypes(\n    false,\n    MAINNET\n  );\n\n  const allCollaterals: CollateralType[] = useMemo(() => {\n    if (!BaseCollateralTypes || !ArbitrumCollateralTypes || !MainnetCollateralTypes) {\n      return [];\n    }\n\n    // We want to filter out assets that don't have a pyth price feed\n\n    return BaseCollateralTypes.concat(ArbitrumCollateralTypes)\n      .concat(MainnetCollateralTypes)\n      .filter((item) => item.displaySymbol !== 'stataUSDC');\n  }, [ArbitrumCollateralTypes, BaseCollateralTypes, MainnetCollateralTypes]);\n\n  const { data: collateralPrices, isLoading: isLoadingCollateralPrices } = useOfflinePrices(\n    allCollaterals.map((item) => ({\n      id: item.tokenAddress,\n      oracleId: item.oracleNodeId,\n      symbol: item.symbol,\n    }))\n  );\n\n  // Fetch stata price from oracle manager\n  const stata = BaseCollateralTypes?.find((item) => item.symbol === 'stataUSDC');\n\n  const { data: stataPrice, isLoading: isStataPriceLoading } = useOraclePrice(\n    stata?.oracleNodeId,\n    BASE_ANDROMEDA\n  );\n\n  // Arb Rewards\n  const { data: ArbitrumRewards, isLoading: isArbitrumRewardsLoading } =\n    useRewardsDistributors(ARBITRUM);\n\n  // Base Rewards\n  const { data: BaseRewards, isLoading: isBaseRewardsLoading } =\n    useRewardsDistributors(BASE_ANDROMEDA);\n\n  // Mainnet Rewards\n  const { data: MainRewards, isLoading: isMainRewardsLoading } = useRewardsDistributors(MAINNET);\n\n  const { collateral, chain } = state;\n\n  const showToros =\n    (chain.length === 0 || chain.includes(BASE_ANDROMEDA.id)) &&\n    (collateral.length === 0 || collateral.includes('USDC'));\n\n  const isLoading =\n    isPoolsListLoading ||\n    isLoadingCollateralPrices ||\n    isBaseCollateralLoading ||\n    isArbCollateralLoading ||\n    isMainCollateralLoading ||\n    isArbitrumRewardsLoading ||\n    isBaseRewardsLoading ||\n    isMainRewardsLoading ||\n    isStataPriceLoading;\n\n  const filteredPools = useMemo(() => {\n    return (\n      data?.synthetixPools\n        .map(({ network, poolInfo, apr }) => {\n          const collateralDeposited = poolInfo.map(({ collateral_type }) => ({\n            collateralDeposited: collateral_type.total_amount_deposited,\n            tokenAddress: collateral_type.id,\n          }));\n\n          let collaterals: typeof ArbitrumCollateralTypes = [];\n          let rewardsDistributors: any = {};\n\n          if (network.id === ARBITRUM.id) {\n            collaterals = ArbitrumCollateralTypes;\n            rewardsDistributors = ArbitrumRewards;\n          } else if (network.id === BASE_ANDROMEDA.id) {\n            collaterals = BaseCollateralTypes;\n            rewardsDistributors = BaseRewards;\n          } else if (network.id === MAINNET.id) {\n            collaterals = MainnetCollateralTypes;\n            rewardsDistributors = MainRewards;\n          }\n\n          const collateralTypes = collaterals?.map((item) => ({\n            ...item,\n            collateralDeposited:\n              collateralDeposited.find(\n                ({ tokenAddress }) => tokenAddress.toLowerCase() === item.tokenAddress.toLowerCase()\n              )?.collateralDeposited || '0',\n          }));\n\n          return {\n            network,\n            poolInfo,\n            apr,\n            collateralDeposited,\n            collateralTypes,\n            rewardsDistributors,\n          };\n        })\n        .filter((pool) => {\n          const { network, collateralTypes } = pool;\n          if (chain.length > 0 && !chain.includes(network.id)) {\n            return false;\n          }\n\n          const isCollateralFiltered = collateralTypes?.some((collateralType) =>\n            collateral.length\n              ? !!collateral.find((collateral) => {\n                  if (\n                    isBaseAndromeda(network.id, network.preset) &&\n                    collateralType.symbol.toUpperCase() === 'SUSDC'\n                  ) {\n                    return collateral.toUpperCase() === 'USDC';\n                  }\n                  return collateral.toUpperCase() === collateralType.symbol.toUpperCase();\n                })\n              : true\n          );\n\n          if (!isCollateralFiltered) {\n            return false;\n          }\n\n          return true;\n        }) || []\n    );\n  }, [\n    data?.synthetixPools,\n    ArbitrumCollateralTypes,\n    ArbitrumRewards,\n    BaseCollateralTypes,\n    BaseRewards,\n    MainnetCollateralTypes,\n    MainRewards,\n    chain,\n    collateral,\n  ]);\n\n  const allCollateralPrices = useMemo(() => {\n    if (stata && stataPrice) {\n      return collateralPrices?.concat({ symbol: 'stataUSDC', price: stataPrice?.price.toBN() });\n    }\n  }, [stata, collateralPrices, stataPrice]);\n\n  return (\n    <Flex mt={6} flexDirection=\"column\">\n      <Heading fontWeight={700} fontSize={24}>\n        Pools\n      </Heading>\n      <Flex flexWrap=\"wrap\" gap={4} justifyContent=\"space-between\" my={6}>\n        <ChainFilter activeChains={state.chain} dispatch={dispatch} />\n        <CollateralFilter activeCollateral={state.collateral} dispatch={dispatch} />\n      </Flex>\n      <Flex minW=\"1200px\" overflowX=\"auto\" direction=\"column\" gap={4}>\n        <Divider width=\"100%\" />\n        <Flex gap={4} px={4} py={3}>\n          <Text\n            color=\"gray.600\"\n            fontFamily=\"heading\"\n            fontSize=\"12px\"\n            lineHeight=\"16px\"\n            letterSpacing={0.6}\n            fontWeight={700}\n            width=\"190px\"\n          >\n            Collateral/Network\n          </Text>\n\n          <Text\n            color=\"gray.600\"\n            fontFamily=\"heading\"\n            fontSize=\"12px\"\n            lineHeight=\"16px\"\n            letterSpacing={0.6}\n            fontWeight={700}\n            width=\"220px\"\n            textAlign=\"right\"\n          >\n            Wallet Balance\n          </Text>\n\n          <Text\n            color=\"gray.600\"\n            fontFamily=\"heading\"\n            fontSize=\"12px\"\n            lineHeight=\"16px\"\n            letterSpacing={0.6}\n            fontWeight={700}\n            width=\"189px\"\n            textAlign=\"right\"\n          >\n            Pool / Owner\n          </Text>\n\n          <Text\n            color=\"gray.600\"\n            fontFamily=\"heading\"\n            fontSize=\"12px\"\n            lineHeight=\"16px\"\n            letterSpacing={0.6}\n            fontWeight={700}\n            width=\"144px\"\n            textAlign=\"right\"\n          >\n            TVL\n          </Text>\n\n          <Text\n            color=\"gray.600\"\n            fontFamily=\"heading\"\n            fontSize=\"12px\"\n            lineHeight=\"16px\"\n            letterSpacing={0.6}\n            fontWeight={700}\n            width=\"144px\"\n            textAlign=\"right\"\n          >\n            APY/APR\n          </Text>\n          <Text\n            color=\"gray.600\"\n            fontFamily=\"heading\"\n            fontSize=\"12px\"\n            lineHeight=\"16px\"\n            letterSpacing={0.6}\n            fontWeight={700}\n            width=\"121px\"\n            textAlign=\"right\"\n          >\n            Specifics\n          </Text>\n          <Flex minW=\"159px\" flex=\"1\" />\n        </Flex>\n        {isLoading && !filteredPools?.length ? <PoolCardsLoading /> : null}\n        {showToros ? <TorosPoolCard tvl={data?.toros.tvl || ''} apy={data?.toros.apy} /> : null}\n        {filteredPools?.length > 0\n          ? filteredPools.map(\n              ({ network, poolInfo, apr, collateralTypes, rewardsDistributors }) => {\n                const { pool } = poolInfo[0];\n\n                const rewardsPayoutTokens = [\n                  ...new Set(\n                    rewardsDistributors?.map(({ payoutToken }: any) =>\n                      payoutToken.symbol.toUpperCase()\n                    )\n                  ),\n                ] as string[];\n\n                return (\n                  <PoolCard\n                    key={network.hexId}\n                    collateralTypes={collateralTypes}\n                    collateralPrices={allCollateralPrices}\n                    apr={apr}\n                    network={network}\n                    pool={pool}\n                    rewardsPayoutTokens={rewardsPayoutTokens}\n                  />\n                );\n              }\n            )\n          : null}\n\n        {!isLoading && !filteredPools?.length && (\n          <Flex flexDir=\"column\" alignItems=\"center\">\n            <Balloon mb={12} mt={6} />\n            <Text mb={2} color=\"gray.500\">\n              No results found, select a different network or collateral\n            </Text>\n\n            <Text\n              onClick={() => {\n                dispatch({ type: 'RESET_CHAIN' });\n                dispatch({ type: 'RESET_COLLATERAL' });\n              }}\n              cursor=\"pointer\"\n              fontWeight={700}\n              color=\"cyan.500\"\n            >\n              Clear Filters\n            </Text>\n          </Flex>\n        )}\n      </Flex>\n    </Flex>\n  );\n};\n\ninterface PoolsFilterState {\n  collateral: string[];\n  chain: number[];\n}\n\nexport interface PoolsFilterAction {\n  type:\n    | 'ADD_COLLATERAL'\n    | 'REMOVE_COLLATERAL'\n    | 'ADD_CHAIN'\n    | 'REMOVE_CHAIN'\n    | 'RESET_COLLATERAL'\n    | 'RESET_CHAIN';\n  payload?: {\n    collateral?: string;\n    chain?: number;\n  };\n}\n\nfunction poolsReducer(state: PoolsFilterState, action: PoolsFilterAction): PoolsFilterState {\n  switch (action.type) {\n    case 'ADD_COLLATERAL':\n      if (action.payload?.collateral) {\n        return {\n          ...state,\n          // Only one collateral active at once\n          collateral: [action.payload.collateral],\n        };\n      }\n\n    case 'REMOVE_COLLATERAL':\n      return {\n        ...state,\n        collateral: state.collateral.filter((item) => item !== action.payload?.collateral),\n      };\n\n    case 'ADD_CHAIN':\n      if (action.payload?.chain) {\n        // Only one chain active at once\n        return {\n          ...state,\n          chain: [action.payload.chain],\n        };\n      }\n\n    case 'REMOVE_CHAIN':\n      return {\n        ...state,\n        chain: state.chain.filter((item) => item !== action.payload?.chain),\n      };\n\n    case 'RESET_COLLATERAL':\n      return {\n        collateral: [],\n        chain: state.chain,\n      };\n\n    case 'RESET_CHAIN':\n      return {\n        collateral: state.collateral,\n        chain: [],\n      };\n\n    default:\n      return state;\n  }\n}\n","import { Flex, Heading, Skeleton, FlexProps, Tag, Text } from '@chakra-ui/react';\nimport { MAINNET, ARBITRUM, Network, NetworkIcon } from '@snx-v3/useBlockchain';\n\ninterface PoolHeaderProps extends FlexProps {\n  name?: string;\n  network: Network;\n}\n\nexport const PoolHeader = ({ name, network, ...props }: PoolHeaderProps) => {\n  return (\n    <>\n      <Flex mt={2} flexWrap=\"wrap\" gap={4} alignItems=\"center\" {...props}>\n        <Skeleton isLoaded={!!name}>\n          <Heading fontWeight={700} fontSize=\"3xl\">\n            {name ? name : 'Unknown Pool'}\n          </Heading>\n        </Skeleton>\n        {[MAINNET.id, ARBITRUM.id].includes(network?.id) && (\n          <Tag size=\"sm\" bg=\"purple.500\" mr=\"auto\" color=\"white\" height=\"fit-content\">\n            Borrow Interest-Free\n          </Tag>\n        )}\n      </Flex>\n      <Flex mt={2}>\n        <NetworkIcon w=\"14px\" h=\"14px\" networkId={network?.id} />\n        <Text ml={1} fontSize=\"xs\" color=\"gray.500\" fontFamily=\"heading\" lineHeight=\"16px\">\n          {network?.name.charAt(0).toUpperCase() + network?.name.slice(1)} Network\n        </Text>\n      </Flex>\n    </>\n  );\n};\n","import { Image, ImageProps } from '@chakra-ui/react';\n\ninterface TokenIconProps extends ImageProps {\n  symbol?: string;\n  width?: number;\n  height?: number;\n}\n\nexport const TokenIcon = ({ symbol, width = 30, height = 30, ...props }: TokenIconProps) => {\n  return symbol ? (\n    <Image\n      src={`https://synthetixio.github.io/synthetix-assets/collateral/${`${symbol}`.toUpperCase()}.svg`}\n      fallbackSrc=\"https://synthetixio.github.io/synthetix-assets/collateral/UNKNOWN.svg\"\n      alt={symbol}\n      style={{ width, height }}\n      {...props}\n    />\n  ) : (\n    <Image\n      src=\"https://synthetixio.github.io/synthetix-assets/collateral/UNKNOWN.svg\"\n      fallbackSrc=\"https://synthetixio.github.io/synthetix-assets/collateral/UNKNOWN.svg\"\n      alt={symbol}\n      style={{ width, height }}\n      {...props}\n    />\n  );\n};\n","import { Flex, FlexProps } from '@chakra-ui/react';\nimport { ReactNode } from 'react';\n\ninterface Props extends FlexProps {\n  items: {\n    label: ReactNode;\n    value: ReactNode;\n  }[];\n}\n\nexport const TransactionSummary = ({ items, ...props }: Props) => (\n  <Flex p={3.5} borderRadius=\"4px\" background=\"#1F1F34\" flexDir=\"column\" gap={3} {...props}>\n    {items.map(({ value, label }, i) => (\n      <Flex fontWeight={700} fontSize=\"12px\" key={i} flex={1} width=\"100%\">\n        <Flex alignItems=\"center\" justify=\"flex-start\" textAlign=\"left\" flexGrow={1}>\n          {label}\n        </Flex>\n        <Flex alignItems=\"center\" justify=\"flex-end\" textAlign=\"right\" flexGrow={1}>\n          {value}\n        </Flex>\n      </Flex>\n    ))}\n  </Flex>\n);\n","import { Skeleton, SkeletonCircle, SkeletonProps } from '@chakra-ui/react';\n\ninterface SynthSkeletonProps extends SkeletonProps {\n  children: React.ReactNode;\n}\n\nexport const SynthSkeleton = ({ children, ...props }: SynthSkeletonProps) => {\n  return (\n    <Skeleton startColor=\"gray.700\" endColor=\"navy.800\" {...props}>\n      {children}\n    </Skeleton>\n  );\n};\n\nexport const SynthCircle = ({ children, ...props }: SkeletonProps) => {\n  return (\n    <SkeletonCircle startColor=\"gray.700\" endColor=\"navy.800\" {...props}>\n      {children}\n    </SkeletonCircle>\n  );\n};\n","import { ethers } from 'ethers';\nimport { useQuery } from '@tanstack/react-query';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useNetwork } from '@snx-v3/useBlockchain';\n\nexport function useAccountCollateralUnlockDate({ accountId }: { accountId?: string }) {\n  const { data: CoreProxy } = useCoreProxy();\n  const { network } = useNetwork();\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'AccountCollateralUnlockDate', { accountId }],\n    enabled: Boolean(CoreProxy && accountId),\n    queryFn: async function () {\n      if (!CoreProxy || !accountId) throw new Error('Core Proxy or account id is not defined');\n\n      const [lastInteraction, accountTimeoutWithdraw] = await Promise.all([\n        CoreProxy.getAccountLastInteraction(accountId),\n        CoreProxy.getConfigUint(ethers.utils.formatBytes32String('accountTimeoutWithdraw')),\n      ]);\n\n      const collateralUnlock = lastInteraction.add(accountTimeoutWithdraw);\n\n      return new Date(collateralUnlock.toNumber() * 1000);\n    },\n  });\n}\n","import { Alert, AlertIcon, AlertProps, Text } from '@chakra-ui/react';\nimport Wei from '@synthetixio/wei';\n\ninterface CollateralAlertProps extends AlertProps {\n  tokenBalance: Wei;\n}\n\nexport const CollateralAlert = ({ tokenBalance, ...props }: CollateralAlertProps) => {\n  return (\n    <Alert borderLeftColor=\"cyan.500\" borderRadius=\"6px\" {...props}>\n      <AlertIcon color=\"cyan.500\" />\n      <Text color=\"white\" fontFamily=\"heading\" fontSize=\"16px\" lineHeight=\"24px\">\n        You have a {tokenBalance.toString(2)} SNX active staking position on V2.\n        <Text as=\"span\" color=\"cyan.500\" cursor=\"pointer\">\n          &nbsp;Migrate to V3\n        </Text>\n      </Text>\n    </Alert>\n  );\n};\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  Text,\n  Divider,\n  Button,\n} from '@chakra-ui/react';\nimport { Link } from 'react-router-dom';\n\nexport const UnsupportedCollateralAlert = ({ isOpen }: { isOpen: boolean }) => {\n  return (\n    <Modal isOpen={isOpen} onClose={() => {}}>\n      <ModalOverlay />\n      <ModalContent p={6} borderWidth=\"1px\" borderColor=\"gray.900\" mt=\"17.5%\" bg=\"navy.700\">\n        <ModalHeader p={0}>Collateral Not Supported</ModalHeader>\n        <Divider my={6} />\n        <Text color=\"white\" fontFamily=\"heading\" fontSize=\"14px\" lineHeight=\"20px\">\n          This collateral is not supported on this network. Go back to your dashboard to see your\n          active positions on this network.\n        </Text>\n        <Button\n          as={Link}\n          mt={6}\n          to={{\n            pathname: '/dashboard',\n            search: location.search,\n          }}\n        >\n          Back to Dashboard\n        </Button>\n      </ModalContent>\n    </Modal>\n  );\n};\n","import { getSubgraphUrl } from '@snx-v3/constants';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useMulticall3 } from '@snx-v3/useMulticall3';\nimport { useRewardsDistributors } from '@snx-v3/useRewardsDistributors';\nimport { Wei, wei } from '@synthetixio/wei';\nimport { useQuery } from '@tanstack/react-query';\nimport { BigNumber } from 'ethers';\nimport { z } from 'zod';\n\nconst RewardsResponseSchema = z.array(\n  z.object({\n    address: z.string(),\n    name: z.string(),\n    symbol: z.string(),\n    distributorAddress: z.string(),\n    decimals: z.number(),\n    claimableAmount: z.instanceof(Wei),\n    lifetimeClaimed: z.number(),\n  })\n);\n\nexport type RewardsResponseType = z.infer<typeof RewardsResponseSchema>;\n\nconst RewardsDataDocument = `\n  query RewardsData($accountId: String!, $distributor: String!) {\n    rewardsClaimeds(where: { distributor: $distributor, account: $accountId }) {\n      id\n      amount\n    }\n  }\n`;\n\nconst RewardsDistributionsDocument = `\n  query RewardsDistributions($distributor: String!) {\n    rewardsDistributions(where: { distributor: $distributor}) {\n      collateral_type\n      amount\n      duration\n      start\n      created_at\n    }\n  }\n`;\n\nexport function useRewards({\n  poolId,\n  collateralSymbol,\n  accountId,\n}: {\n  poolId?: string;\n  collateralSymbol?: string;\n  accountId?: string;\n}) {\n  const { data: collateralType } = useCollateralType(collateralSymbol);\n  const collateralAddress = collateralType?.tokenAddress;\n  const { network } = useNetwork();\n\n  const { data: Multicall3 } = useMulticall3(network);\n  const { data: CoreProxy } = useCoreProxy({ customNetwork: network });\n  const { data: rewardsDistributors } = useRewardsDistributors(network);\n\n  // We need to filter the distributors, so we only query for this particular collateral type\n  // Also include all pool level distributors\n  const filteredDistributors =\n    rewardsDistributors && collateralAddress\n      ? rewardsDistributors\n          .filter((distributor) => distributor.isRegistered)\n          .filter(\n            (distributor) =>\n              !distributor.collateralType ||\n              (distributor.collateralType &&\n                distributor.collateralType.address.toLowerCase() ===\n                  collateralAddress.toLowerCase())\n          )\n      : [];\n\n  const distributorsCacheKey = filteredDistributors.map((distributor) =>\n    distributor.address.slice(2, 6)\n  );\n\n  return useQuery({\n    enabled: Boolean(\n      network &&\n        CoreProxy &&\n        Multicall3 &&\n        rewardsDistributors &&\n        poolId &&\n        collateralAddress &&\n        accountId\n    ),\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'Rewards',\n      { accountId },\n      { collateralAddress },\n      { distributors: distributorsCacheKey },\n    ],\n    queryFn: async () => {\n      if (\n        !(\n          network &&\n          CoreProxy &&\n          Multicall3 &&\n          filteredDistributors &&\n          poolId &&\n          collateralAddress &&\n          accountId\n        )\n      ) {\n        throw new Error('OMG');\n      }\n\n      if (filteredDistributors.length === 0) return [];\n\n      try {\n        const returnData = await Promise.all([\n          // Historical data for account id / distributor address pair\n          ...filteredDistributors.map((distributor) =>\n            fetch(getSubgraphUrl(network?.name), {\n              method: 'POST',\n              body: JSON.stringify({\n                query: RewardsDataDocument,\n                variables: { accountId, distributor: distributor.address.toLowerCase() },\n              }),\n            }).then((res) => res.json())\n          ),\n          // Metadata for each distributor\n          ...filteredDistributors.map((distributor) =>\n            fetch(getSubgraphUrl(network?.name), {\n              method: 'POST',\n              body: JSON.stringify({\n                query: RewardsDistributionsDocument,\n                variables: { distributor: distributor.address.toLowerCase() },\n              }),\n            }).then((res) => res.json())\n          ),\n        ]);\n\n        const historicalData = returnData.slice(0, filteredDistributors.length);\n        const metaData = returnData.slice(filteredDistributors.length);\n\n        // Get claimable amount for each distributor\n        const calls = filteredDistributors.map(({ address }: { address: string }) =>\n          CoreProxy.populateTransaction.getAvailableRewards(\n            BigNumber.from(accountId),\n            BigNumber.from(poolId),\n            collateralAddress.toLowerCase(),\n            address.toLowerCase()\n          )\n        );\n\n        const txs = await Promise.all(calls);\n\n        const multicallData = txs.map((tx) => ({\n          target: CoreProxy.address,\n          callData: tx.data,\n        }));\n\n        const data = await Multicall3.callStatic.aggregate(multicallData);\n\n        const amounts = data.returnData.map((data: string) => {\n          const amount = CoreProxy.interface.decodeFunctionResult('getAvailableRewards', data)[0];\n          return wei(amount);\n        });\n\n        const results: RewardsResponseType = filteredDistributors.map((item: any, i: number) => {\n          // Amount claimable for this distributor\n          const claimableAmount = amounts[i];\n          const historicalClaims = historicalData[i]?.data?.rewardsClaimeds;\n          const distributions = metaData[i]?.data?.rewardsDistributions;\n\n          if (!distributions || !distributions.length) {\n            return {\n              address: item.address,\n              name: item.name,\n              symbol: item.payoutToken.symbol,\n              distributorAddress: item.address,\n              decimals: item.payoutToken.decimals,\n              claimableAmount: wei(0),\n              lifetimeClaimed: historicalClaims\n                .reduce(\n                  (acc: Wei, item: { amount: string }) => acc.add(wei(item.amount, 18, true)),\n                  wei(0)\n                )\n                .toNumber(),\n            };\n          }\n\n          return {\n            address: item.address,\n            name: item.name,\n            symbol: item.payoutToken.symbol,\n            distributorAddress: item.address,\n            decimals: item.payoutToken.decimals,\n            claimableAmount,\n            lifetimeClaimed: historicalClaims\n              .reduce(\n                (acc: Wei, item: { amount: string }) => acc.add(wei(item.amount, 18, true)),\n                wei(0)\n              )\n              .toNumber(),\n          };\n        });\n\n        const sortedBalances = results.sort(\n          (a, b) => b.claimableAmount.toNumber() - a.claimableAmount.toNumber()\n        );\n\n        return RewardsResponseSchema.parse(sortedBalances);\n      } catch (error) {\n        console.error(error);\n        return [];\n      }\n    },\n  });\n}\n","import { Tbody, Tr, Td, SkeletonCircle, Skeleton, Text } from '@chakra-ui/react';\n\nexport const RewardsLoading = () => (\n  <Tbody width=\"100%\">\n    <Tr borderBottom=\"1px solid #2D2D38\">\n      <Td pl=\"16px\" border=\"none\">\n        <SkeletonCircle startColor=\"whiteAlpha.500\" endColor=\"whiteAlpha.200\" h=\"30px\" w=\"30px\" />\n      </Td>\n      <Td pl=\"16px\" border=\"none\">\n        <Skeleton startColor=\"whiteAlpha.500\" endColor=\"whiteAlpha.200\" height=\"30px\">\n          <Text mr={4}>Loading</Text>\n        </Skeleton>\n      </Td>\n      <Td textAlign=\"end\" pr=\"0px\" border=\"none\">\n        <Skeleton startColor=\"whiteAlpha.500\" endColor=\"whiteAlpha.200\" height=\"30px\">\n          <Text>Loading</Text>\n        </Skeleton>\n      </Td>\n    </Tr>\n    <Tr borderBottom=\"1px solid #2D2D38\">\n      <Td pl=\"16px\" border=\"none\">\n        <SkeletonCircle startColor=\"whiteAlpha.200\" endColor=\"whiteAlpha.500\" h=\"30px\" w=\"30px\" />\n      </Td>\n      <Td pl=\"16px\" border=\"none\">\n        <Skeleton startColor=\"whiteAlpha.200\" endColor=\"whiteAlpha.500\" height=\"30px\">\n          <Text mr={4}>Loading</Text>\n        </Skeleton>\n      </Td>\n      <Td textAlign=\"end\" pr=\"0px\" border=\"none\">\n        <Skeleton startColor=\"whiteAlpha.200\" endColor=\"whiteAlpha.500\" height=\"30px\">\n          <Text>Loading</Text>\n        </Skeleton>\n      </Td>\n    </Tr>\n    <Tr borderBottom=\"1px solid #2D2D38\">\n      <Td pl=\"16px\" border=\"none\">\n        <SkeletonCircle startColor=\"whiteAlpha.500\" endColor=\"whiteAlpha.200\" h=\"30px\" w=\"30px\" />\n      </Td>\n      <Td pl=\"16px\" border=\"none\">\n        <Skeleton startColor=\"whiteAlpha.500\" endColor=\"whiteAlpha.200\" height=\"30px\">\n          <Text mr={4}>Loading</Text>\n        </Skeleton>\n      </Td>\n      <Td textAlign=\"end\" pr=\"0px\" border=\"none\">\n        <Skeleton startColor=\"whiteAlpha.500\" endColor=\"whiteAlpha.200\" height=\"30px\">\n          <Text>Loading</Text>\n        </Skeleton>\n      </Td>\n    </Tr>\n  </Tbody>\n);\n","export const truncateAddress = (address: string, first = 5, last = 5) => {\n  if (address.length <= first + last) {\n    return address;\n  }\n  return `${address.slice(0, first)}...${address.slice(-last)}`;\n};\n\nexport const parseFloatWithCommas = (numberWithCommas: string) =>\n  parseFloat(numberWithCommas.replaceAll(',', ''));\n","import { Alert, AlertIcon, Text } from '@chakra-ui/react';\n\nexport function WithdrawIncrease() {\n  return (\n    <Alert borderRadius=\"6px\" status=\"warning\" mb=\"6\">\n      <AlertIcon />\n      <Text>This action will reset the withdrawal waiting period to 24 hours</Text>\n    </Alert>\n  );\n}\n","import { CheckIcon } from '@chakra-ui/icons';\nimport {\n  Button,\n  CircularProgress,\n  Divider,\n  Flex,\n  Link,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalOverlay,\n  Text,\n} from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { etherscanLink } from '@snx-v3/etherscanLink';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { WithdrawIncrease } from '@snx-v3/WithdrawIncrease';\nimport { wei } from '@synthetixio/wei';\nimport { useEffect, useState } from 'react';\n\ninterface RewardsModalInterface {\n  collateralSymbol?: string;\n  amount?: number;\n  txnStatus?: string;\n  txnHash: string | null;\n}\n\nexport const RewardsModal = ({\n  collateralSymbol,\n  amount,\n  txnStatus,\n  txnHash,\n}: RewardsModalInterface) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const { network } = useNetwork();\n\n  useEffect(() => {\n    if (txnStatus === 'prompting') {\n      setIsOpen(true);\n    }\n    if (txnStatus === 'error') {\n      setIsOpen(false);\n    }\n    if (txnStatus === 'success') {\n      setTimeout(() => {\n        setIsOpen(false);\n      }, 1200);\n    }\n  }, [txnStatus]);\n\n  return (\n    <Modal isOpen={isOpen} onClose={() => setIsOpen(false)}>\n      <ModalOverlay bg=\"#06061B80\" />\n      <ModalContent\n        bg=\"navy.700\"\n        mt=\"10%\"\n        borderWidth=\"1px\"\n        borderColor=\"gray.900\"\n        minWidth=\"384px\"\n      >\n        <ModalBody p={6}>\n          <Text color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n            Claiming Rewards\n          </Text>\n\n          <Divider my={4} />\n\n          <Flex\n            position=\"relative\"\n            alignItems=\"center\"\n            gap={4}\n            mb={6}\n            rounded=\"lg\"\n            mt=\"6\"\n            p=\"4\"\n            border=\"2px solid\"\n            transitionProperty=\"border-color\"\n            transitionDuration=\"normal\"\n            borderColor={txnStatus === 'success' ? 'green.500' : 'gray.900'}\n          >\n            <Flex\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              borderRadius=\"100px\"\n              bg={txnStatus === 'success' ? 'green.600' : 'gray.900'}\n              width=\"40px\"\n              height=\"40px\"\n              p={3}\n            >\n              {txnStatus === 'success' ? (\n                <CheckIcon color=\"white\" />\n              ) : (\n                <CircularProgress size=\"25px\" isIndeterminate color=\"gray.700\" />\n              )}\n            </Flex>\n            <Flex\n              flexDirection=\"column\"\n              alignItems=\"space-between\"\n              justifyContent=\"space-between\"\n              ml={2}\n            >\n              <Text fontSize=\"14px\" fontWeight={700} lineHeight=\"20px\" color=\"white\">\n                <Amount\n                  value={wei(amount)}\n                  prefix=\"Claiming \"\n                  suffix={collateralSymbol ? ` ${collateralSymbol}` : undefined}\n                />\n              </Text>\n              <Text fontSize=\"12px\" lineHeight=\"16px\" color=\"gray.500\">\n                Claim your rewards\n              </Text>\n            </Flex>\n          </Flex>\n          <WithdrawIncrease />\n          {txnStatus === 'success' && (\n            <Button\n              mt={5}\n              variant=\"solid\"\n              justifyContent=\"center\"\n              px={3}\n              py={3}\n              width=\"100%\"\n              textAlign=\"center\"\n            >\n              Done\n            </Button>\n          )}\n          {txnHash && (\n            <Flex\n              justifyContent=\"center\"\n              px={3}\n              py={3}\n              mt={6}\n              mb={1}\n              borderTop=\"1px solid\"\n              borderTopColor=\"gray.900\"\n            >\n              <Link\n                variant=\"outline\"\n                href={etherscanLink({ chain: network?.name || '', address: txnHash, isTx: true })}\n                fontFamily=\"heading\"\n                color=\"cyan.500\"\n                fontWeight={700}\n                lineHeight=\"20px\"\n                fontSize=\"14px\"\n                target=\"_blank\"\n                mt={3}\n              >\n                View Transaction\n              </Link>\n            </Flex>\n          )}\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n","import { Button, Fade, Flex, Link, Td, Text, Tr } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { etherscanLink } from '@snx-v3/etherscanLink';\nimport { truncateAddress } from '@snx-v3/formatters';\nimport { Tooltip } from '@snx-v3/Tooltip';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useClaimRewards } from '@snx-v3/useClaimRewards';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useParams } from '@snx-v3/useParams';\nimport { wei } from '@synthetixio/wei';\nimport { TokenIcon } from '../TokenIcon';\nimport { RewardsModal } from './RewardsModal';\n\ninterface RewardsRowInterface {\n  symbol: string;\n  claimableAmount: number; // The immediate amount claimable as read from the contracts\n  lifetimeClaimed: number;\n  address: string;\n}\n\nexport const RewardsRow = ({\n  symbol,\n  claimableAmount,\n  lifetimeClaimed,\n  address,\n}: RewardsRowInterface) => {\n  const { accountId, collateralSymbol, poolId } = useParams();\n\n  const { data: collateralData } = useCollateralType(collateralSymbol);\n  const { network } = useNetwork();\n\n  const { exec, txnState } = useClaimRewards(\n    poolId || '',\n    collateralData?.tokenAddress || '',\n    accountId,\n    address,\n    claimableAmount\n  );\n\n  const onClick = () => {\n    exec();\n  };\n\n  const { txnStatus, txnHash } = txnState;\n\n  return (\n    <>\n      <RewardsModal\n        amount={claimableAmount}\n        collateralSymbol={symbol}\n        txnStatus={txnStatus}\n        txnHash={txnHash}\n      />\n      <Tr>\n        <Td display=\"flex\" alignItems=\"center\" px=\"14px\" border=\"none\" w=\"100%\">\n          <Fade in>\n            <TokenIcon height={30} width={30} symbol={symbol} />\n          </Fade>\n          <Fade in>\n            <Flex flexDirection=\"column\" ml=\"12px\">\n              <Link\n                href={etherscanLink({ chain: network?.name || 'mainnet', address })}\n                target=\"_blank\"\n              >\n                <Tooltip label={`Distributed by ${truncateAddress(address)}`}>\n                  <Text\n                    color=\"gray.50\"\n                    fontSize=\"14px\"\n                    fontFamily=\"heading\"\n                    fontWeight={500}\n                    lineHeight=\"20px\"\n                  >\n                    {symbol}\n                  </Text>\n                </Tooltip>\n              </Link>\n            </Flex>\n          </Fade>\n        </Td>\n        <Td alignItems=\"center\" px=\"14px\" border=\"none\">\n          <Fade in>\n            <Text\n              color=\"gray.50\"\n              fontSize=\"14px\"\n              fontFamily=\"heading\"\n              fontWeight={500}\n              lineHeight=\"20px\"\n            >\n              <Amount value={wei(claimableAmount)} />\n            </Text>\n            {lifetimeClaimed > 0 && (\n              <Text color=\"gray.500\" fontSize=\"12px\" fontFamily=\"heading\" lineHeight=\"16px\">\n                <Tooltip label=\"Total claimed over lifetime\">Lifetime: &nbsp;</Tooltip>\n                <Amount value={wei(lifetimeClaimed)} />\n              </Text>\n            )}\n          </Fade>\n        </Td>\n        <Td border=\"none\" px=\"0px\">\n          <Fade in>\n            <Button\n              w=\"100%\"\n              size=\"sm\"\n              variant=\"solid\"\n              isDisabled={claimableAmount === 0}\n              _disabled={{\n                bg: 'gray.900',\n                backgroundImage: 'none',\n                color: 'gray.500',\n                opacity: 0.5,\n                cursor: 'not-allowed',\n              }}\n              onClick={onClick}\n            >\n              {claimableAmount > 0 || !lifetimeClaimed ? 'Claim' : 'Claimed'}\n            </Button>\n          </Fade>\n        </Td>\n      </Tr>\n    </>\n  );\n};\n","import { useReducer } from 'react';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { BigNumber } from 'ethers';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport { useNetwork } from '@snx-v3/useBlockchain';\n\nimport { useToast } from '@chakra-ui/react';\n\nexport function useClaimRewards(\n  poolId?: string,\n  collateralAddress?: string,\n  accountId?: string,\n  distributorAddress?: string,\n  amount?: number\n) {\n  const toast = useToast({ isClosable: true, duration: 9000 });\n\n  const { network } = useNetwork();\n  const { data: CoreProxy } = useCoreProxy({\n    isWrite: true,\n  });\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n  const client = useQueryClient();\n\n  const mutation = useMutation({\n    mutationFn: async function () {\n      try {\n        if (!amount) return;\n        if (!poolId || !collateralAddress || !accountId || !distributorAddress || !network)\n          throw new Error('Parameters Undefined');\n        if (!CoreProxy) throw new Error('CoreProxy undefined');\n\n        dispatch({ type: 'prompting' });\n\n        const tx = await CoreProxy.claimRewards(\n          BigNumber.from(accountId),\n          BigNumber.from(poolId),\n          collateralAddress,\n          distributorAddress\n        );\n\n        dispatch({ type: 'pending', payload: { txnHash: tx.hash } });\n\n        const res = await tx.wait();\n\n        let claimedAmount: BigNumber | undefined;\n\n        res.logs.forEach((log: any) => {\n          if (log.topics[0] === CoreProxy.interface.getEventTopic('RewardsClaimed')) {\n            const { amount } = CoreProxy.interface.decodeEventLog(\n              'RewardsClaimed',\n              log.data,\n              log.topics\n            );\n            claimedAmount = amount;\n          }\n        });\n\n        dispatch({ type: 'success' });\n        client.invalidateQueries({ queryKey: [`${network?.id}-${network?.preset}`, 'Rewards'] });\n\n        toast.closeAll();\n        toast({\n          title: 'Success',\n          description: 'Your rewards has been claimed.',\n          status: 'success',\n          duration: 5000,\n          variant: 'left-accent',\n        });\n\n        return claimedAmount;\n      } catch (error) {\n        const err = error as Error;\n        dispatch({ type: 'error', payload: { error: err } });\n\n        toast.closeAll();\n        toast({\n          title: 'Claiming failed',\n          description: 'Please try again.',\n          status: 'error',\n          variant: 'left-accent',\n        });\n\n        return 0;\n      }\n    },\n  });\n\n  return {\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n}\n","import { InfoIcon } from '@chakra-ui/icons';\nimport {\n  Fade,\n  Flex,\n  FlexProps,\n  Table,\n  TableContainer,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n} from '@chakra-ui/react';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { Tooltip } from '@snx-v3/Tooltip';\nimport { useParams } from '@snx-v3/useParams';\nimport { useRewards } from '@snx-v3/useRewards';\nimport { RewardsLoading } from './RewardsLoading';\nimport { RewardsRow } from './RewardsRow';\n\nexport const Rewards = ({ ...props }: FlexProps) => {\n  const { accountId, collateralSymbol, poolId } = useParams();\n  const { isLoading, data: rewards } = useRewards({ poolId, collateralSymbol, accountId });\n\n  const hasRewards = rewards && rewards.length > 0;\n\n  return (\n    <BorderBox bg=\"navy.700\" py={4} px={4} flexDir=\"column\" {...props}>\n      <Text color=\"gray.500\" fontFamily=\"heading\" lineHeight=\"4\" fontSize=\"xs\" mb=\"8px\">\n        Rewards\n      </Text>\n\n      {!isLoading && !hasRewards ? (\n        <Fade in>\n          <Flex mt=\"20px\" mb=\"8px\" justifyContent=\"center\">\n            <Text color=\"gray.500\" fontFamily=\"heading\" lineHeight=\"4\" fontSize=\"xs\">\n              No Rewards Available\n            </Text>\n          </Flex>\n        </Fade>\n      ) : null}\n\n      {hasRewards ? (\n        <TableContainer width=\"100%\" mb=\"8px\">\n          <Table>\n            <Thead>\n              <Tr borderBottom=\"1px solid #2D2D38\">\n                <Th\n                  textTransform=\"unset\"\n                  color=\"gray.600\"\n                  border=\"none\"\n                  fontFamily=\"heading\"\n                  fontSize=\"12px\"\n                  lineHeight=\"16px\"\n                  letterSpacing={0.6}\n                  fontWeight={700}\n                  px={4}\n                  py={3}\n                >\n                  Rewards type\n                  <Tooltip label=\"Total rewards active for the Pool\">\n                    <InfoIcon ml={1} mb=\"1px\" />\n                  </Tooltip>\n                </Th>\n                <Th\n                  textTransform=\"unset\"\n                  color=\"gray.600\"\n                  border=\"none\"\n                  fontFamily=\"heading\"\n                  fontSize=\"12px\"\n                  lineHeight=\"16px\"\n                  letterSpacing={0.6}\n                  fontWeight={700}\n                  px={4}\n                  py={3}\n                >\n                  Earnings\n                </Th>\n                <Th\n                  textTransform=\"unset\"\n                  color=\"transparent\"\n                  border=\"none\"\n                  fontFamily=\"heading\"\n                  fontSize=\"12px\"\n                  lineHeight=\"16px\"\n                  letterSpacing={0.6}\n                  fontWeight={700}\n                  px={4}\n                  py={3}\n                >\n                  Claim\n                </Th>\n              </Tr>\n            </Thead>\n            {isLoading && !rewards?.length ? <RewardsLoading /> : null}\n            {rewards?.length ? (\n              <Tbody>\n                {rewards?.map((item) => (\n                  <RewardsRow\n                    key={item.address}\n                    symbol={item.symbol}\n                    claimableAmount={item.claimableAmount.toNumber()}\n                    lifetimeClaimed={item.lifetimeClaimed}\n                    address={item.distributorAddress}\n                  />\n                ))}\n              </Tbody>\n            ) : null}\n          </Table>\n        </TableContainer>\n      ) : null}\n    </BorderBox>\n  );\n};\n","import { InfoIcon } from '@chakra-ui/icons';\nimport { Flex, Text, Fade } from '@chakra-ui/react';\nimport { SynthSkeleton as Skeleton } from '../SynthSkeleton';\nimport { ReactNode } from 'react';\nimport { Tooltip } from '@snx-v3/Tooltip';\n\ninterface StatBoxProps {\n  isLoading: boolean;\n  title: string;\n  label?: string | ReactNode;\n  value?: ReactNode;\n}\n\nexport const StatBox = ({ isLoading, title, label, value }: StatBoxProps) => {\n  return (\n    <Flex\n      bg=\"navy.700\"\n      border=\"1px solid\"\n      borderColor=\"gray.900\"\n      rounded=\"base\"\n      flexDir=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      minWidth=\"200px\"\n      flex={1}\n      height=\"88px\"\n      px={6}\n      py={4}\n    >\n      <Flex alignItems=\"center\" mb={1}>\n        <Text fontSize=\"14px\" color=\"gray.500\" mr={1}>\n          {title}\n        </Text>\n        {label && (\n          <Tooltip label={label} p={3} mt={1}>\n            <InfoIcon w=\"10px\" h=\"10px\" />\n          </Tooltip>\n        )}\n      </Flex>\n      <Flex w=\"100%\" justifyContent=\"center\" height=\"36px\" alignItems=\"center\">\n        <Skeleton\n          isLoaded={!isLoading}\n          height=\"24px\"\n          minWidth={isLoading ? '40%' : 'initial'}\n          startColor=\"gray.700\"\n          endColor=\"navy.800\"\n        >\n          <Fade in>\n            <Text fontSize=\"24px\" lineHeight=\"24px\" fontWeight={800} data-cy={`${title}-stats-box`}>\n              {value || '$0.00'}\n            </Text>\n          </Fade>\n        </Skeleton>\n      </Flex>\n    </Flex>\n  );\n};\n","export function keyBy<T extends Record<K, PropertyKey>, K extends keyof T>(key: K, array: T[]) {\n  return array.reduce(\n    (acc, item) => {\n      const keyValue = item[key];\n      acc[keyValue] = item;\n      return acc;\n    },\n    {} as Record<T[K], T>\n  );\n}\n","import { CollateralType, useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { loadPosition } from '@snx-v3/useLiquidityPosition';\nimport { usePools } from '@snx-v3/usePools';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { useQuery } from '@tanstack/react-query';\nimport { useNetwork, useProviderForChain } from '@snx-v3/useBlockchain';\nimport { loadPrices } from '@snx-v3/useCollateralPrices';\nimport { calculateCRatio } from '@snx-v3/calculations';\nimport { erc7412Call } from '@snx-v3/withERC7412';\nimport { keyBy, stringToHash } from '@snx-v3/tsHelpers';\nimport { useAllCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\n\nexport type LiquidityPositionType = {\n  id: `${string}-${string}`;\n  accountId: string;\n  poolId: string;\n  isPreferred: boolean;\n  poolName: string;\n  collateralAmount: Wei;\n  collateralPrice: Wei;\n  collateralValue: Wei;\n  collateralType: CollateralType;\n  availableCollateral: Wei;\n  cRatio: Wei;\n  debt: Wei;\n};\n\nexport type LiquidityPositionsById = {\n  [poolIdDashSymbol: `${string}-${string}`]: LiquidityPositionType;\n};\n\nfunction toPairs<T>(array: T[]): [T, T][] {\n  return Array.from(\n    { length: array.length / 2 },\n    (_, i) => [array[i * 2], array[i * 2 + 1]] as [T, T]\n  );\n}\n\nexport const useLiquidityPositions = ({ accountId }: { accountId?: string }) => {\n  const { data: CoreProxy } = useCoreProxy();\n\n  const { data: pools } = usePools();\n  const { data: collateralTypes } = useCollateralTypes();\n  const { data: priceUpdateTx, isLoading: collateralPriceUpdatesIsLoading } =\n    useAllCollateralPriceUpdates();\n\n  const { network } = useNetwork();\n  const provider = useProviderForChain(network!);\n\n  const query = useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'LiquidityPositions',\n      { accountId },\n      {\n        pools: pools ? pools.map((pool) => pool.id).sort() : [],\n        tokens: collateralTypes ? collateralTypes.map((x) => x.tokenAddress).sort() : [],\n        priceUpdateTx: stringToHash(priceUpdateTx?.data),\n        CoreProxy: !!CoreProxy,\n      },\n    ],\n    staleTime: 60000 * 5,\n    enabled: !!accountId,\n    queryFn: async () => {\n      if (!pools || !collateralTypes || !CoreProxy || !accountId || !network || !provider) {\n        throw Error('Query should not be enabled');\n      }\n\n      const positionCallsAndDataNested = await Promise.all(\n        pools.map(async ({ id: poolId, name: poolName, isPreferred }) =>\n          Promise.all(\n            collateralTypes.map(async (collateralType) => {\n              const { calls, decoder } = await loadPosition({\n                CoreProxy,\n                accountId,\n                poolId,\n                tokenAddress: collateralType.tokenAddress,\n              });\n              return { calls, decoder, poolName, collateralType, poolId, isPreferred };\n            })\n          )\n        )\n      );\n\n      const positionCallsAndData = positionCallsAndDataNested.flat();\n\n      const { calls: priceCalls, decoder: priceDecoder } = await loadPrices({\n        collateralAddresses: collateralTypes.map((x) => x.tokenAddress),\n        CoreProxy,\n      });\n\n      const positionCalls = positionCallsAndData.map((x) => x.calls).flat();\n\n      const availableCollateralCalls = await Promise.all(\n        collateralTypes.map(\n          (collateralType) =>\n            CoreProxy.populateTransaction.getAccountAvailableCollateral(\n              accountId,\n              collateralType.tokenAddress\n            ),\n          []\n        )\n      );\n\n      const allCalls = priceCalls.concat(positionCalls).concat(availableCollateralCalls);\n      const singlePositionDecoder = positionCallsAndData.at(0)?.decoder;\n\n      if (priceUpdateTx) {\n        allCalls.unshift(priceUpdateTx as any);\n      }\n\n      return await erc7412Call(\n        network,\n        provider!,\n        allCalls,\n        (encoded) => {\n          if (!Array.isArray(encoded)) throw Error('Expected array');\n          if (!singlePositionDecoder) return {};\n\n          const prices = priceDecoder(encoded.slice(0, priceCalls.length));\n          const pricesByAddress = keyBy(\n            'address',\n            Array.isArray(prices)\n              ? prices.map((price, i) => ({\n                  price,\n                  address: collateralTypes[i].tokenAddress,\n                }))\n              : [{ price: prices, address: collateralTypes[0].tokenAddress }]\n          );\n\n          const pairedPositionsEncoded = toPairs(\n            encoded.slice(priceCalls.length, priceCalls.length + positionCalls.length)\n          );\n          const positionData = pairedPositionsEncoded.map((x) => singlePositionDecoder(x));\n\n          const availableCollaterals = encoded\n            .slice(priceCalls.length + positionCalls.length)\n            .map((encode) =>\n              CoreProxy.interface.decodeFunctionResult('getAccountAvailableCollateral', encode)\n            );\n          const availableCollateralByAddress = keyBy(\n            'address',\n            Array.isArray(availableCollaterals)\n              ? availableCollaterals.map((availableCollateral, i) => ({\n                  availableCollateral: wei(availableCollateral[0]),\n                  address: collateralTypes[i].tokenAddress,\n                }))\n              : [\n                  {\n                    availableCollateral: wei(availableCollaterals[0]),\n                    address: collateralTypes[0].tokenAddress,\n                  },\n                ]\n          );\n\n          const positions = positionData.map(({ debt, collateral }, index) => {\n            const { poolName, collateralType, poolId, isPreferred } = positionCallsAndData[index];\n            // Value will be removed from the collateral call in next release, so to prepare for that calculate it manually\n            const collateralAmount = collateral.amount;\n            const collateralPrice = pricesByAddress?.[collateralType.tokenAddress].price;\n            const collateralValue = collateralPrice\n              ? collateralAmount.mul(collateralPrice)\n              : wei(0);\n            const availableCollateral =\n              availableCollateralByAddress?.[collateralType.tokenAddress].availableCollateral;\n            const cRatio = calculateCRatio(debt, collateralValue);\n\n            return {\n              id: `${poolId}-${collateralType.symbol}` as const,\n              accountId,\n              poolId,\n              poolName,\n              collateralPrice,\n              collateralAmount,\n              collateralValue,\n              collateralType,\n              cRatio,\n              debt,\n              isPreferred,\n              availableCollateral,\n            };\n          });\n          return keyBy('id', positions);\n        },\n        'useLiquidityPositions'\n      );\n    },\n  });\n\n  return {\n    ...query,\n    isLoading: query.isLoading || collateralPriceUpdatesIsLoading,\n  };\n};\n","import { useMemo } from 'react';\nimport { Flex, Text } from '@chakra-ui/react';\nimport { StatBox } from './StatBox';\nimport { useSearchParams } from 'react-router-dom';\nimport { useAccountCollateral } from '@snx-v3/useAccountCollateral';\nimport { useCollateralPrices } from '@snx-v3/useCollateralPrices';\nimport { useLiquidityPositions } from '@snx-v3/useLiquidityPositions';\nimport { useTokenBalances } from '@snx-v3/useTokenBalance';\nimport {\n  calculateAssets,\n  calculateTotalAssetsAvailable,\n  calculateTotalAssetsLocked,\n} from '../../utils/assets';\nimport { calculateDebt } from '../../utils/positions';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { useGetUSDTokens } from '@snx-v3/useGetUSDTokens';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { Amount } from '@snx-v3/Amount';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { wei } from '@synthetixio/wei';\n\nexport const StatsList = () => {\n  const [params] = useSearchParams();\n  const { network } = useNetwork();\n\n  const { data: usdTokens } = useGetUSDTokens();\n\n  const { data: positions, isLoading: isLiquidityPositionLoading } = useLiquidityPositions({\n    accountId: params.get('accountId') || undefined,\n  });\n\n  const { data: collateralTypes, isLoading: isCollateralTypesLoading } = useCollateralTypes();\n\n  const { data: accountCollaterals, isLoading: isAccountCollateralsLoading } = useAccountCollateral(\n    {\n      accountId: params.get('accountId') || undefined,\n    }\n  );\n\n  const collateralAddresses =\n    isBaseAndromeda(network?.id, network?.preset) && usdTokens?.USDC\n      ? accountCollaterals?.map((collateral) => collateral.tokenAddress).concat(usdTokens.USDC) ||\n        []\n      : accountCollaterals?.map((collateral) => collateral.tokenAddress) || [];\n\n  const { data: userTokenBalances, isLoading: tokenBalancesIsLoading } = useTokenBalances(\n    collateralAddresses.filter((a) => !!a)\n  );\n\n  const associatedUserBalances = userTokenBalances?.map((balance, index) => {\n    return {\n      balance,\n      tokenAddress: collateralAddresses[index],\n    };\n  });\n\n  const { data: collateralPrices, isLoading: isCollateralPricesLoading } = useCollateralPrices();\n\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n\n  const { data: systemToken } = useSystemToken();\n  const assets = useMemo(\n    () =>\n      calculateAssets(\n        accountCollaterals,\n        associatedUserBalances,\n        collateralPrices,\n        collateralTypes,\n        isBase,\n        usdTokens?.USDC,\n        systemToken\n      ),\n    [\n      accountCollaterals,\n      associatedUserBalances,\n      collateralPrices,\n      collateralTypes,\n      isBase,\n      usdTokens?.USDC,\n      systemToken,\n    ]\n  );\n\n  const debt = calculateDebt(positions);\n  const totalAssets = calculateTotalAssetsAvailable(assets);\n  const totalLocked = calculateTotalAssetsLocked(assets);\n\n  const isLoading =\n    isAccountCollateralsLoading ||\n    tokenBalancesIsLoading ||\n    isCollateralPricesLoading ||\n    isLiquidityPositionLoading ||\n    isCollateralTypesLoading;\n\n  return (\n    <Flex flexWrap=\"wrap\" w=\"100%\" gap=\"4\" mt={6}>\n      <StatBox\n        title=\"Available to Lock\"\n        isLoading={isLoading}\n        value={<Amount prefix=\"$\" value={wei(totalAssets || '0')} />}\n        label={\n          <>\n            <Text textAlign=\"left\">\n              Total assets that can be Locked, including:\n              <br /> - Unlocked assets not yet withdrawn\n              <br /> - Available assets in your wallet\n            </Text>\n          </>\n        }\n      />\n      <StatBox\n        title=\"Total Locked\"\n        isLoading={isLoading}\n        value={<Amount prefix=\"$\" value={wei(totalLocked || '0')} />}\n        label={\n          <>\n            <Text textAlign=\"left\">All assets locked in Positions </Text>\n          </>\n        }\n      />\n      <StatBox\n        title={`Total ${isBase ? 'PNL' : 'Debt'}`}\n        isLoading={isLoading}\n        value={<Amount prefix=\"$\" value={debt?.abs() || ZEROWEI} />}\n        label={\n          <>\n            <Text textAlign=\"left\">\n              Aggregated {isBase ? 'PNL' : 'Debt'} of all your open Positions\n            </Text>\n          </>\n        }\n      />\n    </Flex>\n  );\n};\n","import { AccountCollateralType } from '@snx-v3/useAccountCollateral';\nimport { CollateralType } from '@snx-v3/useCollateralTypes';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { ONEWEI, ZEROWEI } from '@snx-v3/constants';\n\nexport interface Asset {\n  collateral: AccountCollateralType;\n  balance: Wei;\n  price: Wei | undefined;\n}\n\nexport function calculateAssets(\n  accountCollaterals?: AccountCollateralType[],\n  associatedUserBalances?:\n    | {\n        balance: Wei;\n        tokenAddress: string;\n      }[]\n    | undefined,\n  collateralPrices?: Record<string, Wei | undefined>,\n  collateralTypes?: CollateralType[],\n  isBase?: boolean,\n  USDCAddress?: string,\n  systemToken?: { address: string }\n): Asset[] | undefined {\n  if (!(accountCollaterals && associatedUserBalances && collateralPrices && systemToken)) return;\n\n  const filteredAccountCollaterals = accountCollaterals?.filter(\n    (item) => item.tokenAddress !== systemToken.address\n  );\n\n  // Empty state\n  if (collateralTypes && !filteredAccountCollaterals) {\n    // Because we are mapping over collateral types we need to convert sUSDC symbol to USDC\n    return collateralTypes.map((collateral) => {\n      if (isBase && collateral.symbol === 'USDC') {\n        return {\n          collateral: {\n            ...collateral,\n            availableCollateral: ZEROWEI,\n            totalDeposited: ZEROWEI,\n            totalAssigned: ZEROWEI,\n            totalLocked: ZEROWEI,\n          },\n          balance: associatedUserBalances\n            ? associatedUserBalances.find(\n                (balance) => balance.tokenAddress === collateral.tokenAddress\n              )?.balance || ZEROWEI\n            : ZEROWEI,\n          price: ONEWEI,\n        };\n      }\n\n      return {\n        collateral: {\n          tokenAddress: collateral.tokenAddress,\n          symbol: collateral.symbol,\n          displaySymbol: collateral.displaySymbol,\n          availableCollateral: ZEROWEI,\n          totalDeposited: ZEROWEI,\n          totalAssigned: ZEROWEI,\n          totalLocked: ZEROWEI,\n        },\n        balance: ZEROWEI,\n        price: ZEROWEI,\n      };\n    });\n  }\n\n  if (associatedUserBalances && collateralPrices) {\n    return filteredAccountCollaterals?.map((collateral) => {\n      let balance =\n        associatedUserBalances.find(\n          (item) => item.tokenAddress.toLowerCase() === collateral.tokenAddress.toLowerCase()\n        )?.balance || wei(0);\n      const price = collateralPrices[collateral.tokenAddress] ?? ONEWEI;\n\n      // ANDROMEDA CASE\n      if (isBase && collateral.symbol === 'USDC') {\n        // We also want to show the USDC balance, not the sUSDC balance\n        balance =\n          associatedUserBalances.find((balance) => balance.tokenAddress === USDCAddress)?.balance ||\n          wei(0);\n      }\n\n      return {\n        collateral,\n        balance,\n        price,\n      };\n    });\n  }\n}\n\nexport function calculateTotalAssets(assets?: Asset[]) {\n  return assets\n    ?.map((asset) => {\n      const assigned = asset.collateral.totalAssigned.mul(asset.price);\n      const deposited = asset.collateral.totalDeposited.mul(asset.price);\n      const wallet = asset.balance.mul(asset.price);\n      // if already assigned to pool, we dont add it\n      return assigned !== deposited ? assigned.add(wallet) : assigned.add(wallet).add(deposited);\n    })\n    .reduce((prev, cur) => prev.add(cur), ZEROWEI)\n    .toNumber()\n    .toFixed(2);\n}\n\nexport function calculateTotalAssetsLocked(assets?: Asset[]) {\n  return assets\n    ?.map((asset) => asset.collateral.totalAssigned.mul(asset.price))\n    .reduce((prev, cur) => prev.add(cur), ZEROWEI)\n    .toNumber()\n    .toFixed(2);\n}\n\nexport function calculateTotalAssetsAvailable(assets?: Asset[]) {\n  return assets\n    ?.map((asset) => asset.collateral.availableCollateral.add(asset.balance).mul(asset.price))\n    .reduce((prev, cur) => prev.add(cur), ZEROWEI)\n    .toNumber()\n    .toFixed(2);\n}\n","import { LiquidityPositionType } from '@snx-v3/useLiquidityPositions';\nimport Wei from '@synthetixio/wei';\n\ntype DebtPositions = Record<`${string}-${string}`, LiquidityPositionType>;\n\nexport function calculateDebt(positions?: DebtPositions) {\n  return (\n    positions && Object.values(positions).reduce((prev, cur) => prev.add(cur.debt), new Wei(0))\n  );\n}\n\nexport function calculatePositions(positionsByKey?: DebtPositions, isBase = false) {\n  const positionsIds = !!positionsByKey\n    ? (Object.keys(positionsByKey) as `${string}-${string}`[])\n    : [];\n\n  if (!positionsByKey) return [];\n\n  return positionsIds.map((id) => {\n    const position = positionsByKey[id];\n\n    if (isBase && position.collateralType.symbol === 'sUSDC') {\n      position.collateralType.symbol = 'USDC';\n      position.collateralType.displaySymbol = 'USDC';\n      position.collateralType.name = 'USD Coin';\n    }\n\n    return position;\n  });\n}\n","import { useEffect } from 'react';\nimport { useAccountCollateralUnlockDate } from '@snx-v3/useAccountCollateralUnlockDate';\nimport { useTimer } from 'react-timer-hook';\n\nexport function useWithdrawTimer(accountId: string | undefined) {\n  const { data: accountCollateralUnlockDate, isLoading: isLoadingDate } =\n    useAccountCollateralUnlockDate({\n      accountId,\n    });\n  const { minutes, hours, seconds, isRunning, restart } = useTimer({\n    expiryTimestamp: new Date(),\n    autoStart: false,\n  });\n\n  useEffect(() => {\n    if (accountCollateralUnlockDate && !isLoadingDate) {\n      restart(accountCollateralUnlockDate, true);\n    }\n  }, [accountCollateralUnlockDate, isLoadingDate, restart]);\n\n  return {\n    minutes,\n    hours,\n    seconds,\n    isRunning: isRunning && !![minutes, hours, seconds].find((a) => a > 0),\n    accountCollateralUnlockDate,\n  };\n}\n","import { FC } from 'react';\nimport { ratioIsMaxUInt } from './CRatioBar.utils';\nimport { Amount } from '@snx-v3/Amount';\nimport { wei } from '@synthetixio/wei';\n\nexport const CRatioAmount: FC<{\n  value: number;\n}> = ({ value }) => {\n  if (!value || value < 0) {\n    return <>N/A</>;\n  }\n\n  if (ratioIsMaxUInt(value)) {\n    return <>Infinite</>;\n  }\n\n  return <Amount value={wei(value)} suffix=\"%\" />;\n};\n","import { Text, TextProps } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport Wei from '@synthetixio/wei';\nimport { FC } from 'react';\n\ninterface Props extends TextProps {\n  debt: Wei;\n  showPNL?: boolean;\n}\n\nexport const DebtAmount: FC<Props> = ({ debt, showPNL, ...props }) => {\n  const amount = showPNL ? debt.mul(-1) : debt;\n\n  return (\n    <Text {...props} color={debt.eq(0) ? 'white.500' : debt.lt(0) ? 'green.500' : 'red.500'}>\n      <Amount prefix={`${amount.gte(0) ? '' : '-'}$`} value={amount.abs()} />\n    </Text>\n  );\n};\n","import { TimeIcon } from '@chakra-ui/icons';\nimport { Box, Button, Collapse, Fade, Flex, Td, Text, Tooltip, Tr } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { LiquidityPositionType } from '@snx-v3/useLiquidityPositions';\nimport { useRewards } from '@snx-v3/useRewards';\nimport { useTokenPrice } from '@snx-v3/useTokenPrice';\nimport { useWithdrawTimer } from '@snx-v3/useWithdrawTimer';\nimport { useMemo } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { CRatioAmount } from '../../CRatioBar/CRatioAmount';\nimport { CRatioBadge } from '../../CRatioBar/CRatioBadge';\nimport { TokenIcon } from '../../TokenIcon';\nimport { DebtAmount } from './DebtAmount';\n\ninterface PositionRow extends LiquidityPositionType {\n  final: boolean;\n  isBase: boolean;\n  apr?: number;\n  systemTokenSymbol?: string;\n}\n\nexport function PositionRow({\n  poolId,\n  collateralType,\n  debt,\n  final,\n  cRatio,\n  isBase,\n  apr,\n  collateralAmount,\n  availableCollateral,\n  accountId,\n}: PositionRow) {\n  const { data: rewardsData } = useRewards({\n    poolId,\n    collateralSymbol: collateralType?.symbol,\n    accountId,\n  });\n  const collateralPrice = useTokenPrice(collateralType.symbol);\n  const [queryParams] = useSearchParams();\n  const navigate = useNavigate();\n  const { minutes, hours, isRunning } = useWithdrawTimer(accountId);\n\n  const handleNavigate = (actions: string) => {\n    queryParams.set('manageAction', actions);\n    navigate({\n      pathname: `/positions/${collateralType.symbol}/${poolId}`,\n      search: queryParams.toString(),\n    });\n  };\n\n  const hasRewards = useMemo(\n    () => (rewardsData || []).reduce((curr, acc) => curr + acc.claimableAmount.toNumber(), 0) > 0,\n    [rewardsData]\n  );\n\n  return (\n    <Tr borderBottomWidth={final ? 'none' : '1px'}>\n      <Td border=\"none\">\n        <Fade in>\n          <Flex\n            alignItems=\"center\"\n            _hover={{ textDecoration: 'underline', cursor: 'pointer' }}\n            onClick={() => handleNavigate(debt.gt(0) ? 'repay' : 'claim')}\n          >\n            <TokenIcon symbol={collateralType.symbol} />\n            <Flex flexDirection=\"column\" ml={3}>\n              <Text\n                color=\"white\"\n                fontWeight={700}\n                lineHeight=\"1.25rem\"\n                fontFamily=\"heading\"\n                fontSize=\"sm\"\n              >\n                {collateralType.symbol}\n              </Text>\n              <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n                {collateralType.displaySymbol}\n              </Text>\n            </Flex>\n          </Flex>\n        </Fade>\n      </Td>\n      <Td border=\"none\">\n        <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n          <Text color=\"white\" lineHeight=\"1.25rem\" fontFamily=\"heading\" fontSize=\"sm\">\n            {collateralPrice.gt(0) && (\n              <Amount prefix=\"$\" value={collateralAmount.mul(collateralPrice)} />\n            )}\n          </Text>\n          <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n            <Amount value={collateralAmount} suffix={` ${collateralType.symbol.toString()}`} />\n          </Text>\n        </Flex>\n      </Td>\n      <Td border=\"none\">\n        <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n          <Text\n            display=\"flex\"\n            alignItems=\"center\"\n            color=\"white\"\n            lineHeight=\"1.25rem\"\n            fontFamily=\"heading\"\n            fontSize=\"sm\"\n            gap={1.5}\n          >\n            {collateralPrice.gt(0) && (\n              <Amount prefix=\"$\" value={availableCollateral.mul(collateralPrice)} />\n            )}\n\n            {availableCollateral.gt(0) && isRunning && (\n              <Tooltip label={`Withdrawal available in ${hours}H${minutes}M`}>\n                <TimeIcon />\n              </Tooltip>\n            )}\n          </Text>\n          <Box color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n            {availableCollateral.gt(0) && !isRunning ? (\n              <Text\n                color=\"cyan.500\"\n                fontFamily=\"heading\"\n                fontSize=\"0.75rem\"\n                lineHeight=\"1rem\"\n                cursor=\"pointer\"\n                onClick={() => handleNavigate('withdraw')}\n              >\n                Withdraw\n              </Text>\n            ) : (\n              <Amount value={availableCollateral} suffix={` ${collateralType.symbol.toString()}`} />\n            )}\n          </Box>\n        </Flex>\n      </Td>\n      <Td border=\"none\">\n        <Fade in>\n          <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n            <Text color=\"white\" lineHeight=\"1.25rem\" fontFamily=\"heading\" fontSize=\"sm\">\n              {!!apr ? apr.toFixed(2).concat('%') : '-'}\n            </Text>\n            {hasRewards && (\n              <Text\n                color=\"cyan.500\"\n                fontFamily=\"heading\"\n                fontSize=\"0.75rem\"\n                lineHeight=\"1rem\"\n                cursor=\"pointer\"\n                onClick={() => handleNavigate('deposit')}\n              >\n                Claim Rewards\n              </Text>\n            )}\n          </Flex>\n        </Fade>\n      </Td>\n\n      <Td border=\"none\">\n        <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n          <DebtAmount\n            debt={debt}\n            showPNL={isBase}\n            lineHeight=\"1.25rem\"\n            fontFamily=\"heading\"\n            fontSize=\"sm\"\n          />\n          <Collapse in={!debt.eq(0)}>\n            <Text\n              color=\"cyan.500\"\n              fontFamily=\"heading\"\n              fontSize=\"0.75rem\"\n              lineHeight=\"1rem\"\n              cursor=\"pointer\"\n              onClick={() => handleNavigate(debt.gt(0) ? 'repay' : 'claim')}\n            >\n              {debt.gt(0) ? 'Repay Debt' : 'Claim Credit'}\n            </Text>\n          </Collapse>\n        </Flex>\n      </Td>\n      {!isBase && (\n        <Td border=\"none\">\n          <Fade in>\n            <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n              <Text color=\"white\" fontSize=\"sm\" lineHeight=\"1.25rem\" fontFamily=\"heading\">\n                <CRatioAmount value={cRatio.toNumber() * 100} />\n              </Text>\n              <CRatioBadge\n                cRatio={cRatio.toNumber() * 100}\n                liquidationCratio={(collateralType?.liquidationRatioD18?.toNumber() || 0) * 100}\n                targetCratio={(collateralType?.issuanceRatioD18.toNumber() || 0) * 100}\n              />\n            </Flex>\n          </Fade>\n        </Td>\n      )}\n      <Td border=\"none\" pr={0}>\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            fontSize=\"sm\"\n            lineHeight=\"1.25rem\"\n            height=\"2rem\"\n            fontWeight={700}\n            pt=\"5px\"\n            pb=\"5px\"\n            pl=\"12px\"\n            pr=\"12px\"\n            borderWidth=\"1px\"\n            borderColor=\"gray.900\"\n            borderRadius=\"4px\"\n            onClick={() => handleNavigate('deposit')}\n            data-cy=\"manage-position-row-button\"\n          >\n            Manage\n          </Button>\n        </Flex>\n      </Td>\n    </Tr>\n  );\n}\n","import { Badge, Button, Flex, Td, Text, Tr } from '@chakra-ui/react';\nimport { SynthSkeleton as Skeleton, SynthCircle as SkeletonCircle } from '../../';\nimport { TokenIcon } from '../../';\n\nexport function PositionsRowLoading() {\n  const rows = Array.from({ length: 2 }, (_, i) => i);\n  return (\n    <>\n      {rows.map((row) => {\n        return (\n          <Tr borderBottomWidth={row === 1 ? 'none' : '1px'} key={row}>\n            <Td border=\"none\">\n              <Flex alignItems=\"center\">\n                <SkeletonCircle>\n                  <TokenIcon symbol=\"SNX\" />\n                </SkeletonCircle>\n                <Flex flexDirection=\"column\" ml={3}>\n                  <Skeleton height=\"1rem\" mb={1} width=\"70%\">\n                    <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n                      sUSDC\n                    </Text>\n                  </Skeleton>\n                  <Skeleton height=\"0.75rem\">\n                    <Text\n                      color=\"gray.500\"\n                      fontFamily=\"heading\"\n                      fontSize=\"0.75rem\"\n                      lineHeight=\"1rem\"\n                    >\n                      Synthetic USDC\n                    </Text>\n                  </Skeleton>\n                </Flex>\n              </Flex>\n            </Td>\n\n            <Td border=\"none\">\n              <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n                <Skeleton height=\"1rem\" mb={1}>\n                  <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n                    $100,000\n                  </Text>\n                </Skeleton>\n                <Skeleton height=\"0.75rem\">\n                  <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n                    200 SNX\n                  </Text>\n                </Skeleton>\n              </Flex>\n            </Td>\n\n            <Td border=\"none\">\n              <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n                <Skeleton height=\"1rem\" mb={1}>\n                  <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n                    $100,000\n                  </Text>\n                </Skeleton>\n                <Skeleton height=\"0.75rem\">\n                  <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n                    200 SNX\n                  </Text>\n                </Skeleton>\n              </Flex>\n            </Td>\n            <Td border=\"none\">\n              <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n                <Skeleton height=\"1rem\" mb={1} width=\"70%\">\n                  <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n                    $20,000\n                  </Text>\n                </Skeleton>\n                <Skeleton height=\"0.75rem\">\n                  <Text color=\"cyan.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n                    Claim Credit\n                  </Text>\n                </Skeleton>\n              </Flex>\n            </Td>\n            <Td border=\"none\">\n              <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n                <Skeleton height=\"1rem\" mb={1}>\n                  <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n                    5000%\n                  </Text>\n                </Skeleton>\n                <Skeleton height=\"0.75rem\">\n                  <Badge colorScheme=\"green\" border=\"1px solid\" bg=\"green.900\">\n                    HEALTHY\n                  </Badge>\n                </Skeleton>\n              </Flex>\n            </Td>\n            <Td border=\"none\">\n              <Flex flexDirection=\"column\">\n                <Skeleton height=\"1.75rem\">\n                  <Button\n                    fontSize=\"0.75rem\"\n                    lineHeight=\"1rem\"\n                    height=\"1.75rem\"\n                    fontWeight={700}\n                    borderWidth=\"1px\"\n                    borderColor=\"gray.900\"\n                    borderRadius=\"4px\"\n                    disabled\n                  >\n                    Manage\n                  </Button>\n                </Skeleton>\n              </Flex>\n            </Td>\n          </Tr>\n        );\n      })}\n    </>\n  );\n}\n","import { Button, Fade, Flex, Heading, Table, TableContainer, Tbody } from '@chakra-ui/react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { NetworkIcon, useNetwork, useWallet } from '@snx-v3/useBlockchain';\nimport { LiquidityPositionType } from '@snx-v3/useLiquidityPositions';\nimport {\n  PositionsNotConnected,\n  PositionRow,\n  PositionTableHeader,\n  PositionsRowLoading,\n  PositionsEmpty,\n  TableDivider,\n} from './';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\n\ninterface PositionsTableInterface {\n  isLoading: boolean;\n  positions?: LiquidityPositionType[];\n  apr?: any[];\n  systemToken?: {\n    symbol?: string;\n    name?: string;\n    address?: string;\n  };\n}\n\nexport const PositionsTable = ({\n  isLoading,\n  positions,\n  apr,\n  systemToken,\n}: PositionsTableInterface) => {\n  const navigate = useNavigate();\n  const { activeWallet } = useWallet();\n  const { network } = useNetwork();\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n\n  return (\n    <TableContainer\n      maxW=\"100%\"\n      mt={4}\n      borderColor=\"gray.900\"\n      borderWidth=\"1px\"\n      borderRadius=\"5px\"\n      p={6}\n      sx={{\n        borderCollapse: 'separate !important',\n        borderSpacing: 0,\n      }}\n      bg=\"navy.700\"\n    >\n      {!activeWallet?.address ? (\n        <PositionsNotConnected />\n      ) : positions?.length === 0 && !isLoading ? (\n        <PositionsEmpty />\n      ) : (\n        <>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Heading\n              _hover={{ cursor: 'pointer', opacity: 0.9 }}\n              onClick={() => navigate(`/pools/${network?.id}/1`)}\n              fontSize=\"18px\"\n              fontWeight={700}\n              lineHeight=\"28px\"\n              color=\"gray.50\"\n            >\n              Spartan Council Pool\n              {network && (\n                <Flex alignItems=\"center\" fontSize=\"12px\" color=\"gray.500\" gap={1}>\n                  <Flex\n                    alignItems=\"center\"\n                    fontSize=\"12px\"\n                    fontWeight=\"500\"\n                    color=\"gray.500\"\n                    gap={1}\n                  >\n                    <NetworkIcon size=\"14px\" networkId={network.id} mr={1} />\n                    {network.label} Network\n                  </Flex>\n                </Flex>\n              )}\n            </Heading>\n            <Fade in>\n              <Button\n                as={Link}\n                mt={{ base: 2, md: 0 }}\n                size=\"sm\"\n                to={{\n                  pathname: `/pools/${network?.id}/1`,\n                  search: location.search,\n                }}\n                variant=\"outline\"\n                colorScheme=\"gray\"\n                color=\"white\"\n              >\n                Details\n              </Button>\n            </Fade>\n          </Flex>\n          <Table variant=\"simple\">\n            <PositionTableHeader isBase={isBase} />\n            <Tbody>\n              <TableDivider />\n              {isLoading ? (\n                <PositionsRowLoading />\n              ) : (\n                <>\n                  {positions?.map((position, index) => {\n                    const positionApr = apr?.find(\n                      (apr) =>\n                        apr.collateralType.toLowerCase() ===\n                        position.collateralType.tokenAddress.toLowerCase()\n                    );\n\n                    return (\n                      <PositionRow\n                        key={position.poolName.concat(index.toString())}\n                        {...position}\n                        final={index === positions.length - 1}\n                        isBase={isBase}\n                        apr={positionApr?.apr28d * 100}\n                        systemTokenSymbol={systemToken?.symbol}\n                      />\n                    );\n                  })}\n                </>\n              )}\n            </Tbody>\n          </Table>\n        </>\n      )}\n    </TableContainer>\n  );\n};\n","import { InfoIcon } from '@chakra-ui/icons';\nimport { Thead, Tr, Th, Flex, Text } from '@chakra-ui/react';\nimport { Tooltip } from '@snx-v3/Tooltip';\n\nexport function PositionTableHeader({ isBase }: { isBase: boolean }) {\n  return (\n    <Thead>\n      <Tr>\n        <Th\n          py={5}\n          textTransform=\"unset\"\n          color=\"gray.600\"\n          border=\"none\"\n          fontFamily=\"heading\"\n          fontSize=\"12px\"\n          lineHeight=\"16px\"\n        >\n          Collateral\n        </Th>\n        <Th textAlign=\"right\" border=\"none\" textTransform=\"unset\" py={5}>\n          <Flex justifyContent=\"flex-end\" alignItems=\"center\">\n            <Text color=\"gray.600\" fontFamily=\"heading\" fontSize=\"12px\" lineHeight=\"16px\" mr={1}>\n              Locked\n            </Text>\n            <Tooltip\n              label={\n                <Text textAlign=\"left\">\n                  Unlocked assets can be locked into a position at any time or withdrawn after 24h\n                  since last activity\n                </Text>\n              }\n            >\n              <InfoIcon w=\"10px\" h=\"10px\" />\n            </Tooltip>\n          </Flex>\n        </Th>\n        <Th textAlign=\"right\" border=\"none\" textTransform=\"unset\" py={5}>\n          <Text color=\"gray.600\" fontFamily=\"heading\" fontSize=\"12px\" lineHeight=\"16px\" mr={1}>\n            Unlocked\n          </Text>\n        </Th>\n        <Th border=\"none\" textTransform=\"unset\" py={5}>\n          <Flex justifyContent=\"flex-end\" alignItems=\"center\">\n            <Text color=\"gray.600\" fontFamily=\"heading\" fontSize=\"12px\" lineHeight=\"16px\" mr={1}>\n              APR\n            </Text>\n            <Tooltip\n              label={\n                <Flex flexDirection=\"column\" alignItems=\"start\">\n                  <Text textAlign=\"left\" fontSize=\"14px\">\n                    APR is averaged over the trailing 28 days and is comprised of both performance\n                    and rewards\n                  </Text>\n                </Flex>\n              }\n            >\n              <InfoIcon w=\"10px\" h=\"10px\" />\n            </Tooltip>\n          </Flex>\n        </Th>\n        <Th border=\"none\" textTransform=\"unset\" py={5}>\n          <Flex justifyContent=\"flex-end\" alignItems=\"center\">\n            <Text color=\"gray.600\" fontFamily=\"heading\" fontSize=\"12px\" lineHeight=\"16px\" mr={1}>\n              {isBase ? 'PNL' : 'Debt'}\n            </Text>\n            <Tooltip\n              label={\n                isBase ? (\n                  \"Your portion of the pool's total debt, which fluctuates based on trader performance and market conditions\"\n                ) : (\n                  <Text textAlign=\"left\">\n                    Debt consists of:\n                    <br />\n                    - Your portion of the pool&apos;s total debt, which fluctuates based on trader\n                    performance and market conditions\n                    <br />- The amount you&apos;ve borrowed against your collateral without\n                    incurring interest\n                  </Text>\n                )\n              }\n            >\n              <InfoIcon w=\"10px\" h=\"10px\" />\n            </Tooltip>\n          </Flex>\n        </Th>\n        {!isBase && (\n          <Th border=\"none\" textTransform=\"unset\" py={5}>\n            <Flex justifyContent=\"flex-end\" alignItems=\"center\">\n              <Text color=\"gray.600\" fontFamily=\"heading\" fontSize=\"12px\" lineHeight=\"16px\" mr={1}>\n                C-Ratio\n              </Text>\n              <Tooltip\n                label={\n                  <Flex flexDirection=\"column\" alignItems=\"start\">\n                    <Text textAlign=\"left\" fontSize=\"14px\">\n                      C-ratio is a dynamic number that represents a ratio between your locked\n                      collateral and your debt\n                    </Text>\n                  </Flex>\n                }\n              >\n                <InfoIcon w=\"10px\" h=\"10px\" />\n              </Tooltip>\n            </Flex>\n          </Th>\n        )}\n        <Th\n          py={5}\n          textTransform=\"unset\"\n          color=\"gray.600\"\n          border=\"none\"\n          fontFamily=\"heading\"\n          fontSize=\"12px\"\n          lineHeight=\"16px\"\n        >\n          {' '}\n        </Th>\n      </Tr>\n    </Thead>\n  );\n}\n","import { Flex, Button, Text } from '@chakra-ui/react';\nimport { useWallet } from '@snx-v3/useBlockchain';\n\nexport const PositionsNotConnected = () => {\n  const { connect } = useWallet();\n  return (\n    <Flex w=\"100%\" justifyContent=\"space-between\" alignItems=\"center\">\n      <Text color=\"gray.500\" fontWeight={500} fontSize=\"14px\" lineHeight=\"14px\" my=\"4\" pl=\"3\">\n        Please connect wallet to view active positions\n      </Text>\n      <Button\n        size=\"sm\"\n        data-cy=\"connect-button-position-table\"\n        onClick={() => {\n          connect();\n        }}\n      >\n        Connect Wallet\n      </Button>\n    </Flex>\n  );\n};\n","import { Flex, Button, Text } from '@chakra-ui/react';\nimport { Link } from 'react-router-dom';\n\nexport const PositionsEmpty = () => {\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"baseline\" w=\"100%\">\n      <Text color=\"gray.500\" fontWeight={500} fontSize=\"14px\" my=\"4\" pl=\"3\">\n        You can open a new position by browsing the different Pools and choosing a vault for\n        collateral type\n      </Text>\n      <Link to=\"/pools\">\n        <Button size=\"sm\" data-cy=\"position-empty-button\">\n          Explore all Pools\n        </Button>\n      </Link>\n    </Flex>\n  );\n};\n","import { Tr, Td } from '@chakra-ui/react';\n\nexport const TableDivider = () => {\n  return (\n    <Tr border=\"none\" borderTop=\"1px\" borderTopColor=\"gray.900\" width=\"100%\" height=\"0px\">\n      <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={4} />\n      <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={4} />\n      <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={4} />\n      <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={4} />\n      <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={4} />\n      <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={4} />\n      <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={4} />\n      <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={4} />\n    </Tr>\n  );\n};\n","import { Heading, Flex } from '@chakra-ui/react';\nimport { PositionsTable } from './PositionsTable';\nimport { useLiquidityPositions } from '@snx-v3/useLiquidityPositions';\nimport { calculatePositions } from '../../utils/positions';\nimport { useParams } from '@snx-v3/useParams';\nimport { useApr } from '@snx-v3/useApr';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\n\nexport const PositionsList = () => {\n  const { accountId } = useParams();\n  const { network } = useNetwork();\n\n  const { data: positionsByKey, isLoading: isLiquidityPositionsLoading } = useLiquidityPositions({\n    accountId,\n  });\n\n  const { data: apr } = useApr();\n  const { data: systemToken, isLoading: isSystemTokenLoading } = useSystemToken();\n\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n  const positions = calculatePositions(positionsByKey, isBase);\n\n  const parsedPositions = positions.filter(\n    (position) => position.collateralAmount?.gt(0) || position.availableCollateral?.gt(0)\n  );\n\n  const isLoading = isLiquidityPositionsLoading || isSystemTokenLoading;\n\n  return (\n    <Flex flexDir=\"column\">\n      <Heading fontSize=\"1.25rem\" fontFamily=\"heading\" lineHeight=\"1.75rem\" mt={4}>\n        Positions\n      </Heading>\n      <PositionsTable\n        isLoading={isLoading}\n        positions={parsedPositions}\n        apr={apr?.collateralAprs}\n        systemToken={systemToken}\n      />\n    </Flex>\n  );\n};\n","import { calculateCRatio } from '@snx-v3/calculations';\nimport { Wei, wei } from '@synthetixio/wei';\n\nexport const validatePosition = ({\n  issuanceRatioD18,\n  collateralAmount,\n  collateralPrice,\n  debt,\n  collateralChange,\n  debtChange,\n}: {\n  issuanceRatioD18?: Wei;\n  collateralAmount?: Wei;\n  collateralPrice?: Wei;\n  debt?: Wei;\n  collateralChange: Wei;\n  debtChange: Wei;\n}) => {\n  const targetCRatio = issuanceRatioD18 ? issuanceRatioD18 : wei(1);\n  const newDebt = wei(debt || 0).add(debtChange);\n  const newCollateralAmount = wei(collateralAmount || 0).add(collateralChange);\n  const newCollateralValue = newCollateralAmount.mul(collateralPrice || 0);\n\n  const newCRatio = calculateCRatio(newDebt, newCollateralValue);\n\n  const maybeMaxDebt = wei(newCollateralAmount)\n    .mul(collateralPrice || 0)\n    .div(targetCRatio)\n    .sub(debt || 0);\n\n  const maxDebt = maybeMaxDebt.gte(0) ? maybeMaxDebt : wei(0);\n\n  const isValid =\n    (debtChange.lte(0) && collateralChange.gte(0)) ||\n    ((newCRatio.gte(targetCRatio) || newCRatio.lte(0)) &&\n      (newDebt.lte(0) || newCollateralAmount.gt(0)));\n\n  return {\n    isValid,\n    hasChanges: !collateralChange.eq(0) || !debtChange.eq(0),\n    newCRatio,\n    newDebt,\n    newCollateralAmount,\n    maxDebt,\n  };\n};\n","import { Alert, AlertIcon, Button, Collapse, Flex, Text } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { DollarCircle } from '@snx-v3/icons';\nimport { SUSDCIcon } from '@snx-v3/icons/SUSDCIcon';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { LiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { useParams } from '@snx-v3/useParams';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { validatePosition } from '@snx-v3/validatePosition';\nimport { wei } from '@synthetixio/wei';\nimport { useContext } from 'react';\nimport { ZEROWEI } from '@snx-v3/constants';\n\nexport const Borrow = ({ liquidityPosition }: { liquidityPosition?: LiquidityPosition }) => {\n  const params = useParams();\n  const { network } = useNetwork();\n  const { data: systemToken } = useSystemToken();\n\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n\n  const { debtChange, collateralChange, setDebtChange } = useContext(ManagePositionContext);\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n\n  const { maxDebt: actualMaxDebt } = validatePosition({\n    issuanceRatioD18: collateralType?.issuanceRatioD18,\n    collateralAmount: liquidityPosition?.collateralAmount,\n    collateralPrice: liquidityPosition?.collateralPrice,\n    debt: liquidityPosition?.debt,\n    collateralChange: collateralChange,\n    debtChange: debtChange,\n  });\n\n  const maxDebt = wei(actualMaxDebt.toBN().sub(1));\n  const symbol = isBase ? params.collateralSymbol : systemToken?.symbol;\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Text fontSize=\"md\" fontWeight=\"700\" mb=\"2\">\n        {isBase ? 'Claim' : 'Borrow'}\n      </Text>\n\n      <BorderBox display=\"flex\" p={3} mb=\"6\">\n        <Text display=\"flex\" gap={2} alignItems=\"center\" fontWeight=\"600\" mx=\"2\">\n          {isBase ? <SUSDCIcon /> : <DollarCircle />}\n          {symbol}\n        </Text>\n        <Flex flexDirection=\"column\" justifyContent=\"flex-end\" flexGrow={1}>\n          <NumberInput\n            InputProps={{\n              isRequired: true,\n              'data-testid': 'borrow amount input',\n              'data-max': maxDebt.toString(),\n              type: 'number',\n              min: 0,\n            }}\n            value={debtChange}\n            onChange={(val) => setDebtChange(val)}\n            max={maxDebt}\n            min={ZEROWEI}\n          />\n          <Flex flexDirection=\"column\" alignItems=\"flex-end\" fontSize=\"xs\" color=\"whiteAlpha.700\">\n            <Flex\n              gap=\"1\"\n              cursor=\"pointer\"\n              onClick={() => {\n                if (!maxDebt) {\n                  return;\n                }\n                setDebtChange(maxDebt);\n              }}\n            >\n              <Text>Max:</Text>\n              <Amount value={maxDebt} /> {isBase ? 'USDC' : systemToken?.symbol}\n            </Flex>\n          </Flex>\n        </Flex>\n      </BorderBox>\n\n      <Collapse in={debtChange.gt(0)} animateOpacity>\n        <Alert borderRadius=\"6px\" colorScheme=\"orange\" mb=\"6\">\n          <AlertIcon />\n          <Text>\n            As a security precaution, borrowed assets can only be withdrawn to your wallet after 24\n            hs since your previous account activity.\n          </Text>\n        </Alert>\n      </Collapse>\n\n      <Button isDisabled={debtChange.lte(0)} data-testid=\"borrow submit\" type=\"submit\">\n        {debtChange.lte(0) ? 'Enter Amount' : isBase ? 'Claim' : 'Borrow'}\n      </Button>\n    </Flex>\n  );\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { useNetwork, useProvider, useWallet } from '@snx-v3/useBlockchain';\nimport { Wei, wei } from '@synthetixio/wei';\nimport { ethers } from 'ethers';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\n\nexport function useTransferableSynthetix() {\n  const { network } = useNetwork();\n  const { activeWallet } = useWallet();\n  const provider = useProvider();\n  const { data: snxCollateral } = useCollateralType('SNX');\n\n  const accountAddress = activeWallet?.address;\n  const snxAddress = snxCollateral?.tokenAddress;\n\n  return useQuery({\n    enabled: Boolean(provider && accountAddress && snxAddress),\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'TransferableSynthetix',\n      { address: activeWallet?.address },\n    ],\n    queryFn: async function (): Promise<{ transferable: Wei; collateral?: Wei }> {\n      if (!(provider && accountAddress && snxAddress)) {\n        throw 'useTransferableSynthetix should not be enabled';\n      }\n      const contract = new ethers.Contract(\n        snxAddress,\n        [\n          'function balanceOf(address owner) view returns (uint256)',\n          'function transferableSynthetix(address account) view returns (uint256 transferable)',\n          'function collateral(address account) view returns (uint256 collateral)',\n        ],\n        provider\n      );\n      try {\n        // Cannon case\n        if (network?.name === 'cannon') {\n          const balanceOf = await contract.balanceOf(accountAddress);\n          return {\n            transferable: wei(balanceOf),\n          };\n        }\n\n        // Normal case for SNX case\n        const [transferableSynthetix, collateral] = await Promise.all([\n          contract.transferableSynthetix(accountAddress),\n          contract.collateral(accountAddress),\n        ]);\n\n        return {\n          transferable: wei(transferableSynthetix),\n          collateral: wei(collateral),\n        };\n      } catch (e) {\n        console.error(e);\n        throw e;\n      }\n    },\n  });\n}\n","import {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  Button,\n  Collapse,\n  Flex,\n  Text,\n  Tooltip,\n} from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useEthBalance } from '@snx-v3/useEthBalance';\nimport Wei from '@synthetixio/wei';\nimport { FC, useContext, useMemo } from 'react';\nimport { useParams } from '@snx-v3/useParams';\nimport { AccountCollateralType } from '@snx-v3/useAccountCollateral';\nimport { useTransferableSynthetix } from '@snx-v3/useTransferableSynthetix';\nimport { ChangeStat, CollateralAlert, TokenIcon } from '../';\nimport { useTokenBalance } from '@snx-v3/useTokenBalance';\nimport { LiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { getSpotMarketId, isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { useGetWrapperToken } from '@snx-v3/useGetUSDTokens';\nimport { WithdrawIncrease } from '@snx-v3/WithdrawIncrease';\nimport { formatNumber } from '@snx-v3/formatters';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { useTokenPrice } from '@snx-v3/useTokenPrice';\nimport { TransactionSummary } from '../TransactionSummary/TransactionSummary';\nimport { currency } from '@snx-v3/format';\nimport { CRatioChangeStat } from '../CRatioBar/CRatioChangeStat';\n\nexport const DepositUi: FC<{\n  accountCollateral: AccountCollateralType;\n  collateralChange: Wei;\n  ethBalance?: Wei;\n  snxBalance?: {\n    transferable: Wei;\n    collateral?: Wei;\n  };\n  tokenBalance?: Wei;\n  displaySymbol: string;\n  symbol: string;\n  setCollateralChange: (val: Wei) => void;\n  minDelegation: Wei;\n  currentCollateral: Wei;\n  currentDebt: Wei;\n  collateralPrice: Wei;\n  isBase: boolean;\n}> = ({\n  accountCollateral,\n  collateralChange,\n  setCollateralChange,\n  displaySymbol,\n  symbol,\n  tokenBalance,\n  ethBalance,\n  snxBalance,\n  minDelegation,\n  currentCollateral,\n  currentDebt,\n  collateralPrice,\n  isBase,\n}) => {\n  const price = useTokenPrice(symbol);\n\n  const combinedTokenBalance = useMemo(() => {\n    if (symbol === 'SNX') {\n      return snxBalance?.transferable || ZEROWEI;\n    }\n    if (symbol !== 'WETH') {\n      return tokenBalance || ZEROWEI;\n    }\n    if (!tokenBalance || !ethBalance) {\n      return ZEROWEI;\n    }\n    return tokenBalance.add(ethBalance);\n  }, [symbol, tokenBalance, ethBalance, snxBalance?.transferable]);\n\n  const maxAmount = useMemo(\n    () => combinedTokenBalance?.add(accountCollateral.availableCollateral.toString()),\n    [accountCollateral.availableCollateral, combinedTokenBalance]\n  );\n\n  const txSummaryItems = useMemo(() => {\n    const items = [\n      {\n        label: 'Locked ' + symbol,\n        value: (\n          <ChangeStat\n            value={currentCollateral}\n            newValue={currentCollateral.add(collateralChange)}\n            formatFn={(val: Wei) => currency(val)}\n            hasChanges={collateralChange.abs().gt(0)}\n            size=\"sm\"\n          />\n        ),\n      },\n    ];\n\n    if (isBase) {\n      return items;\n    }\n\n    return [\n      ...items,\n      {\n        label: 'C-ratio',\n        value: (\n          <CRatioChangeStat\n            currentCollateral={currentCollateral}\n            currentDebt={currentDebt}\n            collateralChange={collateralChange}\n            collateralPrice={collateralPrice}\n            debtChange={ZEROWEI}\n            size=\"sm\"\n          />\n        ),\n      },\n    ];\n  }, [collateralChange, collateralPrice, currentCollateral, currentDebt, isBase, symbol]);\n\n  const overAvailableBalance = collateralChange.abs().gt(maxAmount);\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Text color=\"gray./50\" fontSize=\"sm\" fontWeight=\"700\" mb=\"3\">\n        Deposit & Lock Collateral\n      </Text>\n      <BorderBox display=\"flex\" p={3} mb=\"6\">\n        <Flex alignItems=\"flex-start\" flexDir=\"column\" gap=\"1\">\n          <BorderBox display=\"flex\" py={1.5} px={2.5}>\n            <Text display=\"flex\" gap={2} alignItems=\"center\" fontWeight=\"600\">\n              <TokenIcon symbol={symbol} width={16} height={16} />\n              {displaySymbol}\n            </Text>\n          </BorderBox>\n          <Tooltip\n            label={\n              <Flex\n                flexDirection=\"column\"\n                alignItems=\"flex-start\"\n                fontSize=\"xs\"\n                color=\"whiteAlpha.700\"\n              >\n                <Flex gap=\"1\">\n                  <Text>Unlocked Balance:</Text>\n                  <Amount value={accountCollateral?.availableCollateral} />\n                </Flex>\n                <Flex gap=\"1\">\n                  <Text>Wallet Balance:</Text>\n                  <Amount value={symbol === 'SNX' ? snxBalance?.transferable : tokenBalance} />\n                </Flex>\n                {symbol === 'WETH' ? (\n                  <Flex gap=\"1\">\n                    <Text>ETH Balance:</Text>\n                    <Amount value={ethBalance} />\n                  </Flex>\n                ) : null}\n              </Flex>\n            }\n          >\n            <Text fontSize=\"12px\">\n              Balance: <Amount value={maxAmount} />\n              {maxAmount?.gt(0) && (\n                <Text\n                  as=\"span\"\n                  cursor=\"pointer\"\n                  onClick={() => {\n                    if (!maxAmount) {\n                      return;\n                    }\n                    setCollateralChange(maxAmount);\n                  }}\n                  color=\"cyan.500\"\n                  fontWeight={700}\n                >\n                  &nbsp;Max\n                </Text>\n              )}\n            </Text>\n          </Tooltip>\n        </Flex>\n        <Flex flexDir=\"column\" flexGrow={1}>\n          <NumberInput\n            InputProps={{\n              'data-testid': 'deposit amount input',\n              'data-max': maxAmount?.toString(),\n              min: 0,\n            }}\n            value={collateralChange}\n            onChange={(value) => {\n              setCollateralChange(value);\n            }}\n            max={maxAmount}\n            min={ZEROWEI}\n            dataTestId=\"deposit-number-input\"\n          />\n          <Flex fontSize=\"xs\" color=\"whiteAlpha.700\" alignSelf=\"flex-end\" gap=\"1\">\n            {price.gt(0) && <Amount prefix=\"$\" value={collateralChange.abs().mul(price)} />}\n          </Flex>\n        </Flex>\n      </BorderBox>\n      {snxBalance?.collateral && snxBalance?.collateral.gt(0) && symbol === 'SNX' && (\n        <CollateralAlert mb=\"6\" tokenBalance={snxBalance.collateral} />\n      )}\n      <Collapse in={collateralChange.gt(0) && !overAvailableBalance} animateOpacity>\n        <WithdrawIncrease />\n      </Collapse>\n\n      <Collapse\n        in={collateralChange.gt(0) && collateralChange.add(currentCollateral).lt(minDelegation)}\n        animateOpacity\n      >\n        <Alert mb={6} status=\"error\" borderRadius=\"6px\">\n          <AlertIcon />\n          <AlertDescription>\n            Your deposit must be {formatNumber(minDelegation.toString())} {symbol} or higher\n          </AlertDescription>\n        </Alert>\n      </Collapse>\n      <Collapse in={overAvailableBalance} animateOpacity>\n        <Alert mb={6} status=\"error\" borderRadius=\"6px\">\n          <AlertIcon />\n          <AlertDescription>\n            You cannot Deposit & Lock more Collateral than your Balance amount\n          </AlertDescription>\n        </Alert>\n      </Collapse>\n\n      <Collapse\n        in={\n          collateralChange.abs().gt(0) &&\n          !overAvailableBalance &&\n          collateralChange.add(currentCollateral).gte(minDelegation)\n        }\n        animateOpacity\n      >\n        <TransactionSummary mb={6} items={txSummaryItems} />\n      </Collapse>\n      <Button\n        data-testid=\"deposit submit\"\n        data-cy=\"deposit-submit-button\"\n        type=\"submit\"\n        isDisabled={\n          collateralChange.lte(0) ||\n          combinedTokenBalance === undefined ||\n          collateralChange.add(currentCollateral).lt(minDelegation) ||\n          overAvailableBalance\n        }\n      >\n        {collateralChange.lte(0) ? 'Enter Amount' : 'Deposit & Lock Collateral'}\n      </Button>\n    </Flex>\n  );\n};\n\nexport const Deposit = ({ liquidityPosition }: { liquidityPosition?: LiquidityPosition }) => {\n  const { collateralChange, setCollateralChange } = useContext(ManagePositionContext);\n  const { network } = useNetwork();\n\n  const { collateralSymbol } = useParams();\n\n  const { data: collateralType } = useCollateralType(collateralSymbol);\n  const { data: transferrableSnx } = useTransferableSynthetix();\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n  const { data: wrapperToken } = useGetWrapperToken(getSpotMarketId(collateralSymbol));\n\n  // TODO: This will need refactoring\n  const balanceAddress = isBase ? wrapperToken : collateralType?.tokenAddress;\n\n  const { data: tokenBalance } = useTokenBalance(balanceAddress);\n\n  const { data: ethBalance } = useEthBalance();\n\n  if (!collateralType || !liquidityPosition?.accountCollateral) {\n    return null;\n  }\n\n  return (\n    <DepositUi\n      accountCollateral={liquidityPosition.accountCollateral}\n      displaySymbol={collateralType?.displaySymbol || ''}\n      tokenBalance={tokenBalance}\n      snxBalance={transferrableSnx}\n      ethBalance={ethBalance}\n      symbol={collateralType?.symbol || ''}\n      setCollateralChange={setCollateralChange}\n      collateralChange={collateralChange}\n      minDelegation={collateralType.minDelegationD18}\n      currentCollateral={liquidityPosition?.collateralAmount ?? ZEROWEI}\n      currentDebt={liquidityPosition?.debt ?? ZEROWEI}\n      collateralPrice={liquidityPosition?.collateralPrice ?? ZEROWEI}\n      isBase={isBase}\n    />\n  );\n};\n","import { Alert, AlertIcon, Button, Collapse, Flex, Text } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { useAccountSpecificCollateral } from '@snx-v3/useAccountCollateral';\nimport { useAccountCollateralUnlockDate } from '@snx-v3/useAccountCollateralUnlockDate';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { LiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { useTokenPrice } from '@snx-v3/useTokenPrice';\nimport { useWithdrawTimer } from '@snx-v3/useWithdrawTimer';\nimport { useContext, useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { TokenIcon } from '../TokenIcon';\n\nexport const Withdraw = ({\n  liquidityPosition,\n  isDebtWithdrawal = false,\n}: {\n  liquidityPosition?: LiquidityPosition;\n  isDebtWithdrawal?: boolean;\n}) => {\n  const { setWithdrawAmount, withdrawAmount } = useContext(ManagePositionContext);\n  const accountId = liquidityPosition?.accountId;\n  const params = useParams();\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { network } = useNetwork();\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n\n  const { data: systemToken } = useSystemToken();\n  const { data: systemTokenBalance } = useAccountSpecificCollateral(\n    accountId,\n    systemToken?.address\n  );\n\n  const maxWithdrawable = useMemo(() => {\n    if (isBase) {\n      return (liquidityPosition?.accountCollateral.availableCollateral || ZEROWEI).add(\n        systemTokenBalance?.availableCollateral || ZEROWEI\n      );\n    }\n    if (isDebtWithdrawal) {\n      return systemTokenBalance?.availableCollateral || ZEROWEI;\n    }\n    return liquidityPosition?.accountCollateral.availableCollateral || ZEROWEI;\n  }, [\n    isBase,\n    isDebtWithdrawal,\n    liquidityPosition?.accountCollateral.availableCollateral,\n    systemTokenBalance?.availableCollateral,\n  ]);\n\n  const { data: accountCollateralUnlockDate, isLoading: isLoadingDate } =\n    useAccountCollateralUnlockDate({\n      accountId,\n    });\n\n  const symbol = isDebtWithdrawal ? systemToken?.symbol : collateralType?.symbol;\n  const price = useTokenPrice(symbol);\n  const { minutes, hours, isRunning } = useWithdrawTimer(accountId);\n  const unlockDate = !isLoadingDate ? accountCollateralUnlockDate : null;\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Text color=\"gray./50\" fontSize=\"sm\" fontWeight=\"700\" mb=\"3\">\n        Withdraw {!isDebtWithdrawal ? 'Collateral' : ''}\n      </Text>\n      <BorderBox display=\"flex\" p={3} mb=\"6\">\n        <Flex alignItems=\"flex-start\" flexDir=\"column\" gap=\"1\">\n          <BorderBox display=\"flex\" py={1.5} px={2.5}>\n            <Text display=\"flex\" gap={2} fontSize=\"16px\" alignItems=\"center\" fontWeight=\"600\">\n              <TokenIcon symbol={symbol} width={16} height={16} />\n              {symbol}\n            </Text>\n          </BorderBox>\n          <Flex fontSize=\"12px\" gap=\"1\">\n            <Text>{isDebtWithdrawal ? 'Max Withdraw:' : 'Unlocked:'}</Text>\n            <Amount value={maxWithdrawable} />\n            {maxWithdrawable.gt(0) && (\n              <Text\n                cursor=\"pointer\"\n                onClick={() => {\n                  if (!maxWithdrawable) {\n                    return;\n                  }\n                  setWithdrawAmount(maxWithdrawable);\n                }}\n                color=\"cyan.500\"\n                fontWeight={700}\n              >\n                Max\n              </Text>\n            )}\n          </Flex>\n        </Flex>\n        <Flex flexDir=\"column\" flexGrow={1}>\n          <NumberInput\n            InputProps={{\n              isRequired: true,\n              'data-testid': 'withdraw amount input',\n              'data-max': maxWithdrawable.toString(),\n              type: 'number',\n              min: 0,\n            }}\n            value={withdrawAmount}\n            onChange={(val) => setWithdrawAmount(val)}\n            max={maxWithdrawable}\n            min={ZEROWEI}\n          />\n          <Flex fontSize=\"xs\" color=\"whiteAlpha.700\" alignSelf=\"flex-end\" gap=\"1\">\n            {price.gt(0) && <Amount prefix=\"$\" value={withdrawAmount.abs().mul(price)} />}\n          </Flex>\n        </Flex>\n      </BorderBox>\n\n      <Collapse in={maxWithdrawable.gt(0) && isRunning} animateOpacity>\n        <Alert status=\"warning\" mb=\"6\" borderRadius=\"6px\">\n          <AlertIcon />\n          <Text>\n            You will be able to withdraw assets in {hours}H{minutes}M. Any account activity will\n            reset this timer to 24H.\n          </Text>\n        </Alert>\n      </Collapse>\n\n      <Collapse in={maxWithdrawable.gt(0) && !isRunning} animateOpacity>\n        <Alert status=\"success\" mb=\"6\" borderRadius=\"6px\">\n          <AlertIcon />\n          <Text>\n            You can now withdraw <Amount value={maxWithdrawable} suffix={` ${symbol}`} />\n          </Text>\n        </Alert>\n      </Collapse>\n\n      <Collapse in={withdrawAmount.gt(maxWithdrawable)} animateOpacity>\n        <Alert colorScheme=\"red\" mb=\"6\" borderRadius=\"6px\">\n          <AlertIcon />\n          <Text>\n            You cannot Withdraw more {!isDebtWithdrawal ? 'Collateral' : ''} than your Unlocked\n            Balance\n          </Text>\n        </Alert>\n      </Collapse>\n\n      <Button\n        isDisabled={\n          withdrawAmount.lte(0) || isRunning || !unlockDate || withdrawAmount.gt(maxWithdrawable)\n        }\n        data-testid=\"claim submit\"\n        type=\"submit\"\n      >\n        {withdrawAmount.gt(0) ? 'Withdraw' : 'Enter Amount'}\n      </Button>\n    </Flex>\n  );\n};\n","export const COLLATERALACTIONS = [\n  {\n    title: 'Deposit & Lock',\n    link: 'deposit',\n    icon: (fill: 'white' | 'cyan') => (\n      <svg\n        width=\"37\"\n        height=\"36\"\n        viewBox=\"0 0 37 36\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M6.875 18C6.875 15.7218 8.72183 13.875 11 13.875H26C28.2782 13.875 30.125 15.7218 30.125 18V27C30.125 29.2782 28.2782 31.125 26 31.125H11C8.72183 31.125 6.875 29.2782 6.875 27V18ZM11 16.125C9.96447 16.125 9.125 16.9645 9.125 18V27C9.125 28.0355 9.96447 28.875 11 28.875H26C27.0355 28.875 27.875 28.0355 27.875 27V18C27.875 16.9645 27.0355 16.125 26 16.125H11Z\"\n          fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M11.375 12C11.375 8.06497 14.565 4.875 18.5 4.875C22.435 4.875 25.625 8.06497 25.625 12V16.125H11.375V12ZM18.5 7.125C15.8076 7.125 13.625 9.30761 13.625 12V13.875H23.375V12C23.375 9.30761 21.1924 7.125 18.5 7.125Z\"\n          fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n        />\n      </svg>\n    ),\n  },\n  {\n    title: 'Unlock',\n    link: 'undelegate',\n    icon: (fill: 'white' | 'cyan') => (\n      <svg\n        width=\"32\"\n        height=\"28\"\n        viewBox=\"0 0 32 28\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M0.375 14C0.375 11.7218 2.22183 9.875 4.5 9.875H19.5C21.7782 9.875 23.625 11.7218 23.625 14V23C23.625 25.2782 21.7782 27.125 19.5 27.125H4.5C2.22183 27.125 0.375 25.2782 0.375 23V14ZM4.5 12.125C3.46447 12.125 2.625 12.9645 2.625 14V23C2.625 24.0355 3.46447 24.875 4.5 24.875H19.5C20.5355 24.875 21.375 24.0355 21.375 23V14C21.375 12.9645 20.5355 12.125 19.5 12.125H4.5Z\"\n          fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M16.875 8C16.875 4.06497 20.065 0.875 24 0.875C27.935 0.875 31.125 4.06497 31.125 8V11H28.875V8C28.875 5.30761 26.6924 3.125 24 3.125C21.3076 3.125 19.125 5.30761 19.125 8V11H16.875V8Z\"\n          fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n        />\n      </svg>\n    ),\n  },\n  {\n    title: 'Withdraw',\n    link: 'withdraw',\n    icon: (fill: 'white' | 'cyan') => (\n      <svg\n        width=\"37\"\n        height=\"36\"\n        viewBox=\"0 0 37 36\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M6.60986 29.7349C6.60986 29.942 6.77776 30.1099 6.98486 30.1099L28.7349 30.1099C28.942 30.1099 29.1099 29.942 29.1099 29.7349L29.1099 21.1099L31.3599 21.1099L31.3599 29.7349C31.3599 31.1846 30.1846 32.3599 28.7349 32.3599L6.98486 32.3599C5.53512 32.3599 4.35986 31.1846 4.35986 29.7349L4.35986 21.1099L6.60986 21.1099L6.60986 22.2348L6.60986 29.7349Z\"\n          fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n        />\n        <path\n          d=\"M18.9849 26.7349L16.7349 26.7349L16.7349 7.94653L12.3555 12.3259L10.8728 10.6273L17.8599 3.64019L24.8469 10.6273L23.3643 12.3259L18.9849 7.94653L18.9849 26.7349Z\"\n          fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n        />\n      </svg>\n    ),\n  },\n];\n\nexport const DEBTACTIONS = (isBase: boolean) => {\n  const actions = [\n    {\n      title: isBase ? 'Claim' : 'Claim/Borrow',\n      link: 'claim',\n      icon: (fill: 'white' | 'cyan') => (\n        <svg\n          width=\"37\"\n          height=\"36\"\n          viewBox=\"0 0 37 36\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <g clipPath=\"url(#clip0_11314_79978)\">\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M16.0903 8.50714C9.39782 8.50714 3.97247 13.9325 3.97247 20.625C3.97247 27.3175 9.39782 32.7429 16.0903 32.7429C22.7828 32.7429 28.2082 27.3175 28.2082 20.625C28.2082 13.9325 22.7828 8.50714 16.0903 8.50714ZM1.46533 20.625C1.46533 12.5478 8.01317 6 16.0903 6C24.1675 6 30.7153 12.5478 30.7153 20.625C30.7153 28.7022 24.1675 35.25 16.0903 35.25C8.01317 35.25 1.46533 28.7022 1.46533 20.625Z\"\n              fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n            />\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M14.5792 17.9742C14.589 17.5066 14.7225 17.3161 14.8124 17.2254C14.931 17.1058 15.1602 16.9772 15.5845 16.9097C16.4687 16.769 17.6646 16.9739 18.6515 17.2338L19.8638 17.553L20.5023 15.1286L19.29 14.8093C18.2491 14.5351 16.6222 14.2059 15.1905 14.4337C14.4569 14.5505 13.6548 14.8318 13.0317 15.4605C12.3834 16.1147 12.0715 16.9997 12.0715 18.0296V18.0771L12.0751 18.1244C12.1655 19.316 12.8745 20.108 13.6098 20.6288C14.284 21.1062 15.1197 21.4539 15.7947 21.7348C15.8202 21.7454 15.8454 21.7559 15.8704 21.7664C16.6329 22.084 17.1988 22.3286 17.591 22.6158C17.9362 22.8687 17.9707 23.0216 17.9707 23.1567C17.9707 23.6803 17.8165 23.8884 17.6957 23.9976C17.5342 24.1438 17.2307 24.2862 16.7131 24.3507C15.6587 24.482 14.289 24.2239 13.2807 23.9538L12.0698 23.6296L11.4212 26.0513L12.6321 26.3756C13.6977 26.661 15.462 27.0331 17.023 26.8386C17.8131 26.7402 18.6878 26.4808 19.3774 25.8572C20.1078 25.1967 20.4778 24.2672 20.4778 23.1567C20.4778 21.9459 19.8008 21.1267 19.0724 20.5932C18.4094 20.1076 17.5679 19.7573 16.8907 19.4754C16.8718 19.4675 16.8531 19.4597 16.8345 19.452C16.0731 19.1348 15.4848 18.8844 15.0588 18.5828C14.6976 18.3269 14.602 18.1399 14.5792 17.9742Z\"\n              fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n            />\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M16.0903 25.0125C16.7827 25.0125 17.3439 25.5737 17.3439 26.2661V29.4H14.8368V26.2661C14.8368 25.5737 15.398 25.0125 16.0903 25.0125Z\"\n              fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n            />\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M17.3439 11.85V14.9839C17.3439 15.6763 16.7827 16.2375 16.0903 16.2375C15.398 16.2375 14.8368 15.6763 14.8368 14.9839V11.85H17.3439Z\"\n              fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n            />\n            <path\n              d=\"M30.5 4.5V1.5H33.5V4.5H36.5V7.5H33.5V10.5H30.5V7.5H27.5V4.5H30.5Z\"\n              fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n            />\n          </g>\n          <defs>\n            <clipPath id=\"clip0_11314_79978\">\n              <rect\n                width=\"36\"\n                height=\"36\"\n                fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n                transform=\"translate(0.5)\"\n              />\n            </clipPath>\n          </defs>\n        </svg>\n      ),\n    },\n    {\n      title: 'Repay Debt',\n      link: 'repay',\n      icon: (fill: 'white' | 'cyan') => (\n        <svg\n          width=\"37\"\n          height=\"36\"\n          viewBox=\"0 0 37 36\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <g clipPath=\"url(#clip0_11314_79981)\">\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M16.0903 8.50714C9.39782 8.50714 3.97247 13.9325 3.97247 20.625C3.97247 27.3175 9.39782 32.7429 16.0903 32.7429C22.7828 32.7429 28.2082 27.3175 28.2082 20.625C28.2082 13.9325 22.7828 8.50714 16.0903 8.50714ZM1.46533 20.625C1.46533 12.5478 8.01317 6 16.0903 6C24.1675 6 30.7153 12.5478 30.7153 20.625C30.7153 28.7022 24.1675 35.25 16.0903 35.25C8.01317 35.25 1.46533 28.7022 1.46533 20.625Z\"\n              fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n            />\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M14.5792 17.9742C14.589 17.5066 14.7225 17.3161 14.8124 17.2254C14.931 17.1058 15.1602 16.9772 15.5845 16.9097C16.4687 16.769 17.6646 16.9739 18.6515 17.2338L19.8638 17.553L20.5023 15.1286L19.29 14.8093C18.2491 14.5351 16.6222 14.2059 15.1905 14.4337C14.4569 14.5505 13.6548 14.8318 13.0317 15.4605C12.3834 16.1147 12.0715 16.9997 12.0715 18.0296V18.0771L12.0751 18.1244C12.1655 19.316 12.8745 20.108 13.6098 20.6288C14.284 21.1062 15.1197 21.4539 15.7947 21.7348C15.8202 21.7454 15.8454 21.7559 15.8704 21.7664C16.6329 22.084 17.1988 22.3286 17.591 22.6158C17.9362 22.8687 17.9707 23.0216 17.9707 23.1567C17.9707 23.6803 17.8165 23.8884 17.6957 23.9976C17.5342 24.1438 17.2307 24.2862 16.7131 24.3507C15.6587 24.482 14.289 24.2239 13.2807 23.9538L12.0698 23.6296L11.4212 26.0513L12.6321 26.3756C13.6977 26.661 15.462 27.0331 17.023 26.8386C17.8131 26.7402 18.6878 26.4808 19.3774 25.8572C20.1078 25.1967 20.4778 24.2672 20.4778 23.1567C20.4778 21.9459 19.8008 21.1267 19.0724 20.5932C18.4094 20.1076 17.5679 19.7573 16.8907 19.4754C16.8718 19.4675 16.8531 19.4597 16.8345 19.452C16.0731 19.1348 15.4848 18.8844 15.0588 18.5828C14.6976 18.3269 14.602 18.1399 14.5792 17.9742Z\"\n              fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n            />\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M16.0903 25.0125C16.7827 25.0125 17.3439 25.5737 17.3439 26.2661V29.4H14.8368V26.2661C14.8368 25.5737 15.398 25.0125 16.0903 25.0125Z\"\n              fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n            />\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M17.3439 11.85V14.9839C17.3439 15.6763 16.7827 16.2375 16.0903 16.2375C15.398 16.2375 14.8368 15.6763 14.8368 14.9839V11.85H17.3439Z\"\n              fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n            />\n            <path\n              d=\"M30.5 4.5H33.5H36.5V7.5H33.5H30.5H27.5V4.5H30.5Z\"\n              fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n            />\n          </g>\n          <defs>\n            <clipPath id=\"clip0_11314_79981\">\n              <rect\n                width=\"36\"\n                height=\"36\"\n                fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n                transform=\"translate(0.5)\"\n              />\n            </clipPath>\n          </defs>\n        </svg>\n      ),\n    },\n  ];\n\n  if (isBase) {\n    return actions;\n  }\n\n  return [\n    ...actions,\n    {\n      title: 'Withdraw',\n      link: 'withdraw-debt',\n      icon: (fill: 'white' | 'cyan') => (\n        <svg\n          width=\"37\"\n          height=\"36\"\n          viewBox=\"0 0 37 36\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M6.60986 29.7349C6.60986 29.942 6.77776 30.1099 6.98486 30.1099L28.7349 30.1099C28.942 30.1099 29.1099 29.942 29.1099 29.7349L29.1099 21.1099L31.3599 21.1099L31.3599 29.7349C31.3599 31.1846 30.1846 32.3599 28.7349 32.3599L6.98486 32.3599C5.53512 32.3599 4.35986 31.1846 4.35986 29.7349L4.35986 21.1099L6.60986 21.1099L6.60986 22.2348L6.60986 29.7349Z\"\n            fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n          />\n          <path\n            d=\"M18.9849 26.7349L16.7349 26.7349L16.7349 7.94653L12.3555 12.3259L10.8728 10.6273L17.8599 3.64019L24.8469 10.6273L23.3643 12.3259L18.9849 7.94653L18.9849 26.7349Z\"\n            fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n          />\n        </svg>\n      ),\n    },\n  ];\n};\n","import {\n  Box,\n  Divider,\n  Flex,\n  Skeleton,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Text,\n} from '@chakra-ui/react';\nimport { calculateCRatio } from '@snx-v3/calculations';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { LiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { useParams } from '@snx-v3/useParams';\nimport { validatePosition } from '@snx-v3/validatePosition';\nimport { safeImport } from '@synthetixio/safe-import';\nimport { wei } from '@synthetixio/wei';\nimport { FormEvent, lazy, Suspense, useCallback, useContext, useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { z } from 'zod';\nimport { Borrow, Claim, Deposit, Repay, Undelegate } from '../';\nimport { Withdraw } from '../Withdraw/Withdraw';\nimport { COLLATERALACTIONS, DEBTACTIONS } from './actions';\n\nconst RepayModal = lazy(() => safeImport(() => import('@snx-v3/RepayModal')));\nconst BorrowModal = lazy(() => safeImport(() => import('@snx-v3/BorrowModal')));\nconst ClaimModal = lazy(() => safeImport(() => import('@snx-v3/ClaimModal')));\nconst DepositModal = lazy(() => safeImport(() => import('@snx-v3/DepositModal')));\nconst UndelegateModal = lazy(() => safeImport(() => import('@snx-v3/UndelegateModal')));\nconst WithdrawModal = lazy(() => safeImport(() => import('@snx-v3/WithdrawModal')));\n\nconst validActions = [\n  'borrow',\n  'deposit',\n  'repay',\n  'claim',\n  'undelegate',\n  'withdraw',\n  'withdraw-debt',\n] as const;\nconst ManageActionSchema = z.enum(validActions);\nexport type ManageAction = z.infer<typeof ManageActionSchema>;\n\nconst getInitialTab = (manageAction?: ManageAction) => {\n  if (!manageAction || COLLATERALACTIONS.find((aciton) => aciton.link === manageAction)) {\n    return 'collateral';\n  }\n\n  return 'debt';\n};\n\nexport const ManageAction = ({\n  liquidityPosition,\n  setTxnModalOpen,\n  txnModalOpen,\n}: {\n  liquidityPosition?: LiquidityPosition;\n  setTxnModalOpen: (action?: ManageAction) => void;\n  txnModalOpen?: ManageAction;\n}) => {\n  const params = useParams();\n  const { network } = useNetwork();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const { debtChange, collateralChange, setCollateralChange, setDebtChange, setWithdrawAmount } =\n    useContext(ManagePositionContext);\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n\n  const { isValid } = validatePosition({\n    issuanceRatioD18: collateralType?.issuanceRatioD18,\n    collateralAmount: liquidityPosition?.collateralAmount,\n    collateralPrice: liquidityPosition?.collateralPrice,\n    debt: liquidityPosition?.debt,\n    collateralChange,\n    debtChange,\n  });\n\n  const parsedActionParam = ManageActionSchema.safeParse(params.manageAction);\n  const parsedAction = parsedActionParam.success ? parsedActionParam.data : undefined;\n\n  const isFormValid = isBase ? true : isValid;\n\n  const onSubmit = useCallback(\n    (e: FormEvent) => {\n      e.preventDefault();\n      const form = e.target as HTMLFormElement;\n      if (!form.reportValidity() || !isFormValid) {\n        return;\n      }\n      setTxnModalOpen(parsedAction);\n    },\n    [isFormValid, parsedAction, setTxnModalOpen]\n  );\n\n  useEffect(() => {\n    // This is just for initial state, if we have a manage action selected return\n    const queryParams = new URLSearchParams(location.search);\n\n    if (queryParams.get('manageAction')) {\n      return;\n    }\n    if (!liquidityPosition) return;\n    if (!collateralType) return;\n\n    const cRatio = calculateCRatio(liquidityPosition.debt, liquidityPosition.collateralValue);\n    const canBorrow =\n      !isBase && (liquidityPosition.debt.eq(0) || cRatio.gt(collateralType.issuanceRatioD18));\n\n    if (canBorrow) {\n      queryParams.set('manageAction', 'borrow');\n      navigate({ pathname: location.pathname, search: queryParams.toString() }, { replace: true });\n      return;\n    }\n\n    const cRatioIsCloseToLiqRatio = cRatio.mul(0.9).lt(collateralType.liquidationRatioD18);\n\n    if (cRatioIsCloseToLiqRatio) {\n      queryParams.set('manageAction', isBase ? 'deposit' : 'repay');\n      navigate({ pathname: location.pathname, search: queryParams.toString() }, { replace: true });\n      return;\n    }\n\n    queryParams.set('manageAction', 'deposit');\n    navigate({ pathname: location.pathname, search: queryParams.toString() }, { replace: true });\n  }, [collateralType, isBase, liquidityPosition, location.pathname, location.search, navigate]);\n\n  const setActiveAction = (action: string) => {\n    setCollateralChange(wei(0));\n    setDebtChange(wei(0));\n    const queryParams = new URLSearchParams(location.search);\n    queryParams.set('manageAction', action);\n    navigate({ pathname: location.pathname, search: queryParams.toString() }, { replace: true });\n  };\n  const manageAction = parsedAction;\n\n  const [tab, setTab] = useState(getInitialTab(manageAction));\n  const debtActions = DEBTACTIONS(isBase);\n\n  useEffect(() => {\n    setTab(getInitialTab(manageAction));\n  }, [manageAction]);\n\n  return (\n    <>\n      {!txnModalOpen ? (\n        <Box as=\"form\" onSubmit={onSubmit}>\n          <Tabs isFitted index={tab === 'collateral' ? 0 : 1}>\n            <TabList>\n              <Tab\n                color={tab === 'collateral' ? 'white' : 'gray.500'}\n                data-cy=\"tab-button-collateral\"\n                fontWeight={700}\n                fontSize={['12px', '16px']}\n                onClick={() => {\n                  if (tab !== 'collateral') {\n                    setActiveAction(COLLATERALACTIONS[0].link);\n                  }\n                }}\n              >\n                Manage Collateral\n              </Tab>\n              <Tab\n                color={tab === 'debt' ? 'white' : 'gray.500'}\n                fontWeight={700}\n                fontSize={['12px', '16px']}\n                data-cy=\"tab-button-debt\"\n                onClick={() => {\n                  if (tab !== 'debt') {\n                    setActiveAction(debtActions[0].link);\n                  }\n                }}\n              >\n                {`Manage ${isBase ? 'PnL' : 'Debt'}`}\n              </Tab>\n            </TabList>\n\n            <TabPanels>\n              <TabPanel px=\"0\">\n                <Flex flexDir={['column', 'row']} gap={4}>\n                  {COLLATERALACTIONS.map((action) => (\n                    <Flex\n                      h=\"84px\"\n                      minH={['90px', '84px']}\n                      justifyContent=\"center\"\n                      key={action.title.concat('-tab-actions')}\n                      border=\"1px solid\"\n                      flexDir=\"column\"\n                      alignItems=\"center\"\n                      borderColor={manageAction === action.link ? 'cyan.500' : 'gray.900'}\n                      rounded=\"base\"\n                      cursor=\"pointer\"\n                      data-cy={`collateral-action-${action.link}`}\n                      onClick={() => setActiveAction(action.link)}\n                      flex=\"1\"\n                      minWidth={['100%', 'auto']}\n                    >\n                      {action.icon(manageAction === action.link ? 'cyan' : 'white')}\n                      <Text\n                        fontSize=\"14px\"\n                        fontWeight={700}\n                        mt=\"2\"\n                        color={manageAction === action.link ? 'cyan.500' : 'white'}\n                      >\n                        {action.title}\n                      </Text>\n                    </Flex>\n                  ))}\n                </Flex>\n              </TabPanel>\n              <TabPanel px=\"0\">\n                <Flex flexDir={['column', 'row']} gap={4}>\n                  {debtActions.map((action) => (\n                    <Flex\n                      flex=\"1\"\n                      h=\"84px\"\n                      minH={['90px', '84px']}\n                      justifyContent=\"center\"\n                      key={action.title.concat('-tab-actions')}\n                      border=\"1px solid\"\n                      flexDir=\"column\"\n                      alignItems=\"center\"\n                      borderColor={manageAction === action.link ? 'cyan.500' : 'gray.900'}\n                      rounded=\"base\"\n                      cursor=\"pointer\"\n                      data-cy={`debt-actions-${action.link}`}\n                      onClick={() => setActiveAction(action.link)}\n                      minWidth={['100%', 'auto']}\n                    >\n                      {action.icon(manageAction === action.link ? 'cyan' : 'white')}\n                      <Text\n                        fontSize=\"14px\"\n                        fontWeight={700}\n                        mt=\"2\"\n                        color={manageAction === action.link ? 'cyan.500' : 'white'}\n                      >\n                        {action.title}\n                      </Text>\n                    </Flex>\n                  ))}\n                </Flex>\n              </TabPanel>\n            </TabPanels>\n          </Tabs>\n\n          <Flex direction=\"column\">\n            {manageAction === 'borrow' ? <Borrow liquidityPosition={liquidityPosition} /> : null}\n            {manageAction === 'claim' ? <Claim liquidityPosition={liquidityPosition} /> : null}\n            {manageAction === 'withdraw' ? (\n              <Withdraw liquidityPosition={liquidityPosition} />\n            ) : null}\n            {manageAction === 'withdraw-debt' ? (\n              <Withdraw liquidityPosition={liquidityPosition} isDebtWithdrawal />\n            ) : null}\n            {manageAction === 'deposit' ? <Deposit liquidityPosition={liquidityPosition} /> : null}\n            {manageAction === 'repay' ? <Repay liquidityPosition={liquidityPosition} /> : null}\n            {manageAction === 'undelegate' ? (\n              <Undelegate liquidityPosition={liquidityPosition} />\n            ) : null}\n          </Flex>\n        </Box>\n      ) : null}\n\n      <Suspense\n        fallback={\n          <Flex gap={4} flexDirection=\"column\">\n            <Skeleton maxW=\"232px\" width=\"100%\" height=\"20px\" />\n            <Divider my={4} />\n            <Skeleton width=\"100%\" height=\"20px\" />\n            <Skeleton width=\"100%\" height=\"20px\" />\n          </Flex>\n        }\n      >\n        {txnModalOpen === 'repay' ? (\n          <RepayModal\n            availableCollateral={liquidityPosition?.usdCollateral.availableCollateral}\n            onClose={() => {\n              setCollateralChange(wei(0));\n              setDebtChange(wei(0));\n              setTxnModalOpen(undefined);\n            }}\n            isOpen={txnModalOpen === 'repay'}\n          />\n        ) : null}\n        {txnModalOpen === 'borrow' ? (\n          <BorrowModal\n            onClose={() => {\n              setCollateralChange(wei(0));\n              setDebtChange(wei(0));\n              setTxnModalOpen(undefined);\n            }}\n            isOpen={txnModalOpen === 'borrow'}\n          />\n        ) : null}\n        {txnModalOpen === 'claim' ? (\n          <ClaimModal\n            onClose={() => {\n              setCollateralChange(wei(0));\n              setDebtChange(wei(0));\n              setTxnModalOpen(undefined);\n            }}\n            isOpen={txnModalOpen === 'claim'}\n            liquidityPosition={liquidityPosition}\n          />\n        ) : null}\n        {txnModalOpen === 'deposit' ? (\n          <DepositModal\n            onClose={() => {\n              setCollateralChange(wei(0));\n              setDebtChange(wei(0));\n              setTxnModalOpen(undefined);\n            }}\n            isOpen={txnModalOpen === 'deposit'}\n            liquidityPosition={liquidityPosition}\n          />\n        ) : null}\n        {txnModalOpen === 'undelegate' ? (\n          <UndelegateModal\n            liquidityPosition={liquidityPosition}\n            onClose={() => {\n              setCollateralChange(wei(0));\n              setDebtChange(wei(0));\n              setTxnModalOpen(undefined);\n            }}\n            isOpen={txnModalOpen === 'undelegate'}\n          />\n        ) : null}\n        {txnModalOpen === 'withdraw' ? (\n          <WithdrawModal\n            liquidityPosition={liquidityPosition}\n            onClose={() => {\n              setCollateralChange(wei(0));\n              setDebtChange(wei(0));\n              setWithdrawAmount(wei(0));\n              setTxnModalOpen(undefined);\n            }}\n            isOpen={txnModalOpen === 'withdraw'}\n            account\n          />\n        ) : null}\n\n        {txnModalOpen === 'withdraw-debt' ? (\n          <WithdrawModal\n            liquidityPosition={liquidityPosition}\n            onClose={() => {\n              setCollateralChange(wei(0));\n              setDebtChange(wei(0));\n              setWithdrawAmount(wei(0));\n              setTxnModalOpen(undefined);\n            }}\n            isOpen={txnModalOpen === 'withdraw-debt'}\n            account\n            isDebtWithdrawal\n          />\n        ) : null}\n      </Suspense>\n    </>\n  );\n};\n","import { InfoIcon } from '@chakra-ui/icons';\nimport { Box, Tooltip, Text } from '@chakra-ui/react';\nimport { FC } from 'react';\n\nexport const LineWithText: FC<{\n  left: string;\n  text: string;\n  tooltipText: string;\n}> = ({ left, text, tooltipText }) => {\n  return (\n    <>\n      <Box\n        position=\"absolute\"\n        height=\"40%\"\n        transform=\"translateX(-50%)\"\n        left={left}\n        top={0}\n        bottom={0}\n        margin=\"auto\"\n      >\n        <Text\n          color=\"gray.700\"\n          whiteSpace=\"nowrap\"\n          fontSize=\"xx-small\"\n          transform=\"translateY(calc(-100% - 10px) )\"\n        >\n          {text}{' '}\n          <Tooltip label={tooltipText} hasArrow>\n            <InfoIcon />\n          </Tooltip>\n        </Text>\n      </Box>\n      <Box\n        position=\"absolute\"\n        height=\"40%\"\n        width=\"1px\"\n        bg=\"gray.900\"\n        left={left}\n        top={0}\n        bottom={0}\n        margin=\"auto\"\n      />\n    </>\n  );\n};\n","import { TriangleDownIcon, TriangleUpIcon, InfoIcon } from '@chakra-ui/icons';\nimport { Box, Flex, Progress, Skeleton, Text, Tooltip } from '@chakra-ui/react';\nimport { FC } from 'react';\nimport { LineWithText } from './LineWithText';\nimport { getHealthVariant, getProgressSize, ratioIsMaxUInt } from './CRatioBar.utils';\nimport { CRatioBadge } from './CRatioBadge';\nimport { CRatioAmount } from './CRatioAmount';\n\nexport const CRatioBarUi: FC<{\n  liquidationCratio: number;\n  targetCratio: number;\n  currentCRatio: number;\n  newCratio?: number;\n  isLoading: boolean;\n  hasChanges: boolean;\n}> = ({ targetCratio, liquidationCratio, currentCRatio, newCratio, isLoading, hasChanges }) => {\n  const variant = hasChanges\n    ? getHealthVariant({\n        targetCratio: targetCratio,\n        liquidationCratio: liquidationCratio,\n        cRatio: newCratio,\n      })\n    : getHealthVariant({\n        targetCratio: targetCratio,\n        liquidationCratio: liquidationCratio,\n        cRatio: currentCRatio,\n      });\n\n  const newBarSize = getProgressSize({\n    cRatio: newCratio,\n    targetCratio: targetCratio,\n    liquidationCratio: liquidationCratio,\n  });\n\n  const currentBarSize = getProgressSize({\n    cRatio: currentCRatio,\n    targetCratio: targetCratio,\n    liquidationCratio: liquidationCratio,\n  });\n\n  return (\n    <Flex flexDir=\"column\" gap=\"2\">\n      <Text color=\"gray.500\" fontSize=\"xs\">\n        C-Ratio{' '}\n        <Tooltip\n          textAlign=\"left\"\n          label=\"C-ratio is a dynamic number that represents a ratio between your locked collateral and your debt\"\n          p=\"3\"\n        >\n          <InfoIcon w=\"10px\" h=\"10px\" />\n        </Tooltip>\n      </Text>\n      <Flex\n        color=\"white\"\n        fontWeight={800}\n        fontSize=\"20px\"\n        flexDir={['column', 'row']}\n        alignItems=\"center\"\n        gap={2}\n      >\n        <CRatioAmount value={currentCRatio} />\n\n        {!!hasChanges && (\n          <>\n            <span>&rarr;</span>\n            <Text>\n              {!newCratio || newCratio < 0\n                ? 'N/A'\n                : ratioIsMaxUInt(newCratio)\n                  ? 'Infinite'\n                  : `${newCratio.toFixed(2)} %`}\n            </Text>\n          </>\n        )}\n\n        {(hasChanges ? newCratio || 0 : currentCRatio) !== 0 && (\n          <CRatioBadge\n            cRatio={hasChanges ? newCratio || 0 : currentCRatio}\n            liquidationCratio={liquidationCratio}\n            targetCratio={targetCratio}\n          />\n        )}\n      </Flex>\n\n      <Box\n        position=\"relative\"\n        height=\"100px\"\n        width=\"full\"\n        data-testid=\"c ratio progressbar\"\n        overflowX=\"hidden\"\n      >\n        <>\n          <LineWithText\n            left=\"25%\"\n            text={!isLoading ? `Liquidation < ${liquidationCratio.toFixed(0)}%` : 'Liquidation'}\n            tooltipText=\"Point at which your Position gets liquidated\"\n          />\n          <LineWithText\n            left=\"75%\"\n            text={\n              !isLoading\n                ? `Borrowing Ratio ${\n                    ratioIsMaxUInt(targetCratio) ? 'Infinite' : targetCratio.toFixed(0)\n                  }%`\n                : 'Borrowing Ratio'\n            }\n            tooltipText=\"Min point at which you can borrow assets\"\n          />\n        </>\n        <Skeleton\n          variant={variant}\n          top={0}\n          bottom={0}\n          height=\"12px\"\n          position=\"absolute\"\n          margin=\"auto\"\n          width=\"100%\"\n          isLoaded={!isLoading}\n        >\n          <Progress\n            variant={\n              currentBarSize < newBarSize && !(currentBarSize >= 100 && newBarSize > 100)\n                ? `update-${variant}`\n                : variant\n            }\n            top={0}\n            bottom={0}\n            height=\"12px\"\n            position=\"absolute\"\n            margin=\"auto\"\n            left=\"0\"\n            width=\"100%\"\n            value={Math.min(newBarSize, currentBarSize)}\n          />\n          <Progress\n            variant={currentBarSize >= newBarSize ? `update-${variant}` : variant}\n            top={0}\n            bottom={0}\n            height=\"12px\"\n            position=\"absolute\"\n            margin=\"auto\"\n            width=\"100%\"\n            left={`${Math.min(newBarSize, currentBarSize)}%`}\n            display={newCratio === 0 ? 'none' : 'block'}\n            value={Math.abs(newBarSize - currentBarSize)}\n          />\n        </Skeleton>\n        <Box\n          bg={variant}\n          height=\"12px\"\n          position=\"absolute\"\n          left={`${getProgressSize({\n            cRatio: newCratio,\n            targetCratio: targetCratio,\n            liquidationCratio: liquidationCratio,\n          })}%`}\n          top={0}\n          bottom={0}\n          margin=\"auto\"\n          display={newCratio === 0 ? 'none' : 'block'}\n        >\n          {currentCRatio > 0 && !isLoading && (\n            <>\n              <TriangleDownIcon\n                position=\"absolute\"\n                right={0}\n                top={0}\n                transform=\"translate(50%,-100%)\"\n                color={variant}\n              />\n              <TriangleUpIcon\n                data-testid=\"current c-ration triangle\"\n                position=\"absolute\"\n                right={0}\n                bottom={0}\n                transform=\"translate(50%,100%)\"\n                color={variant}\n              />\n            </>\n          )}\n        </Box>\n      </Box>\n    </Flex>\n  );\n};\n\nexport const CRatioBar: FC<{\n  liquidationCratio?: number;\n  targetCratio?: number;\n  currentCRatio?: number;\n  newCratio?: number;\n  isLoading: boolean;\n  hasChanges: boolean;\n}> = ({ newCratio, currentCRatio, targetCratio, liquidationCratio, isLoading, hasChanges }) => {\n  return (\n    <CRatioBarUi\n      liquidationCratio={liquidationCratio || 100}\n      targetCratio={targetCratio || 100}\n      currentCRatio={currentCRatio || 0}\n      newCratio={newCratio}\n      isLoading={isLoading}\n      hasChanges={hasChanges}\n    />\n  );\n};\n","import { FC, ReactNode } from 'react';\nimport { Flex, Text } from '@chakra-ui/react';\nimport Wei from '@synthetixio/wei';\nimport { ArrowForwardIcon } from '@chakra-ui/icons';\n\nconst styles = {\n  sm: {\n    fontSize: '12px',\n    fontWeight: '700',\n    lineHeight: '14px',\n  },\n  md: {\n    fontSize: '16px',\n    fontWeight: '400',\n    lineHeight: '16px',\n  },\n  lg: {\n    fontSize: '18px',\n    fontWeight: '800',\n    lineHeight: '32px',\n  },\n};\nexport const ChangeStat: FC<{\n  value: Wei;\n  newValue: Wei;\n  hasChanges: boolean;\n  dataTestId?: string;\n  formatFn: (val: Wei) => ReactNode;\n  withColor?: boolean;\n  size?: 'sm' | 'md' | 'lg';\n}> = ({ formatFn, value, newValue, hasChanges, dataTestId, withColor, size = 'lg' }) => {\n  return (\n    <Flex\n      gap=\"1\"\n      alignItems=\"center\"\n      color=\"white\"\n      fontSize={styles[size].fontSize}\n      fontWeight={styles[size].fontWeight}\n      lineHeight={styles[size].lineHeight}\n    >\n      <Text\n        data-cy={dataTestId}\n        textAlign=\"center\"\n        opacity={value.eq(0) ? '70%' : undefined}\n        color={withColor && value.gt(0) ? 'green.700' : value.lt(0) ? 'red.700' : 'gray.50'}\n      >\n        {formatFn(value)}\n      </Text>\n      {hasChanges && !value.eq(newValue) ? (\n        <>\n          <ArrowForwardIcon />\n          <Text\n            textAlign=\"center\"\n            opacity={newValue.eq(0) ? '70%' : undefined}\n            color={\n              withColor && newValue.gt(0) ? 'green.700' : newValue.lt(0) ? 'red.700' : 'gray.50'\n            }\n          >\n            {formatFn(newValue)}\n          </Text>\n        </>\n      ) : null}\n    </Flex>\n  );\n};\n","import { InfoIcon } from '@chakra-ui/icons';\nimport { Flex, Skeleton, Text } from '@chakra-ui/react';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { FC } from 'react';\nimport { currency } from '@snx-v3/format';\nimport { LiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { CollateralType } from '@snx-v3/useCollateralTypes';\nimport Wei from '@synthetixio/wei';\nimport { ChangeStat } from './ChangeStat';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { Tooltip } from '@snx-v3/Tooltip';\n\nexport const PnlStats: FC<{\n  liquidityPosition?: LiquidityPosition;\n  collateralType?: CollateralType;\n  newDebt: Wei;\n  hasChanges: boolean;\n}> = ({ liquidityPosition, collateralType, newDebt, hasChanges }) => {\n  const { network } = useNetwork();\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n  return (\n    <BorderBox p={4} flex=\"1\" flexDirection=\"row\" bg=\"navy.700\" justifyContent=\"space-between\">\n      <Flex flexDirection=\"column\" width=\"100%\">\n        <Flex alignItems=\"center\" mb=\"4px\">\n          <Text color=\"gray.500\" fontSize=\"xs\" fontFamily=\"heading\" lineHeight=\"16px\">\n            PnL\n          </Text>\n          <Tooltip\n            label={\n              isBase ? (\n                \"Your portion of the pool's total debt, which fluctuates based on trader performance and market conditions\"\n              ) : (\n                <Text>\n                  Debt consists of:\n                  <br />\n                  - Your portion of the pool&apos;s total debt, which fluctuates based on trader\n                  performance and market conditions\n                  <br />- The amount you&apos;ve borrowed against your collateral without incurring\n                  interest\n                </Text>\n              )\n            }\n            textAlign=\"start\"\n            py={2}\n            px={3}\n          >\n            <Flex height=\"12px\" width=\"12px\" ml=\"4px\" alignItems=\"center\" justifyContent=\"center\">\n              <InfoIcon color=\"white\" height=\"9px\" width=\"9px\" />\n            </Flex>\n          </Tooltip>\n        </Flex>\n        <Flex width=\"100%\">\n          {liquidityPosition && collateralType ? (\n            <ChangeStat\n              value={liquidityPosition.debt.mul(-1)}\n              newValue={newDebt.mul(-1)}\n              formatFn={(val: Wei) =>\n                currency(val, {\n                  currency: 'USD',\n                  style: 'currency',\n                  maximumFractionDigits: 4,\n                })\n              }\n              withColor\n              hasChanges={hasChanges}\n              dataTestId=\"manage-stats-debt-value\"\n            />\n          ) : (\n            <Skeleton width=\"100%\">Lorem ipsum (this wont be displaye debt) </Skeleton>\n          )}\n        </Flex>\n      </Flex>\n    </BorderBox>\n  );\n};\n","import { InfoIcon } from '@chakra-ui/icons';\nimport { Flex, Skeleton, Text, Tooltip } from '@chakra-ui/react';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { FC } from 'react';\nimport { currency } from '@snx-v3/format';\nimport { LiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { CollateralType } from '@snx-v3/useCollateralTypes';\nimport Wei from '@synthetixio/wei';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { ChangeStat } from './ChangeStat';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { DebtAmount } from '../Positions/PositionsTable/DebtAmount';\n\nexport const DebtStats: FC<{\n  liquidityPosition?: LiquidityPosition;\n  collateralType?: CollateralType;\n  newDebt: Wei;\n  hasChanges: boolean;\n  isLoading?: boolean;\n}> = ({ liquidityPosition, collateralType, newDebt, hasChanges, isLoading }) => {\n  const { network } = useNetwork();\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n  return (\n    <BorderBox p={4} flex=\"1\" flexDirection=\"row\" bg=\"navy.700\">\n      <Flex\n        opacity={!liquidityPosition && !isLoading ? '40%' : '100%'}\n        flexDirection=\"column\"\n        width=\"100%\"\n      >\n        <Flex alignItems=\"center\" mb=\"4px\">\n          <Text color=\"gray.500\" fontSize=\"xs\" fontFamily=\"heading\" lineHeight=\"16px\">\n            Debt\n          </Text>\n          <Tooltip\n            label={\n              isBase ? (\n                \"Your portion of the pool's total debt, which fluctuates based on trader performance and market conditions\"\n              ) : (\n                <Text>\n                  Debt consists of:\n                  <br />\n                  - Your portion of the pool&apos;s total debt, which fluctuates based on trader\n                  performance and market conditions\n                  <br />- The amount you&apos;ve borrowed against your collateral without incurring\n                  interest\n                </Text>\n              )\n            }\n            textAlign=\"start\"\n            py={2}\n            px={3}\n          >\n            <Flex height=\"12px\" width=\"12px\" ml=\"4px\" alignItems=\"center\" justifyContent=\"center\">\n              <InfoIcon color=\"gray.500\" height=\"10px\" width=\"10px\" />\n            </Flex>\n          </Tooltip>\n        </Flex>\n        <Flex width=\"100%\">\n          {isLoading ? (\n            <Skeleton width=\"100%\">Lorem ipsum (this wont be displaye debt) </Skeleton>\n          ) : liquidityPosition && collateralType ? (\n            <ChangeStat\n              value={liquidityPosition.debt}\n              newValue={newDebt}\n              formatFn={(val: Wei) => <DebtAmount debt={val} as=\"span\" />}\n              hasChanges={hasChanges}\n              dataTestId=\"manage-stats-debt-value\"\n            />\n          ) : (\n            <ChangeStat\n              value={ZEROWEI}\n              newValue={ZEROWEI}\n              formatFn={(val: Wei) =>\n                currency(val, {\n                  currency: 'USD',\n                  style: 'currency',\n                  maximumFractionDigits: 4,\n                })\n              }\n              hasChanges={false}\n            />\n          )}\n        </Flex>\n      </Flex>\n    </BorderBox>\n  );\n};\n","import { Flex, Skeleton, Text } from '@chakra-ui/react';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { FC } from 'react';\nimport { currency } from '@snx-v3/format';\nimport { LiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { CollateralType } from '@snx-v3/useCollateralTypes';\nimport Wei from '@synthetixio/wei';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { ChangeStat } from './ChangeStat';\n\nexport const CollateralStats: FC<{\n  liquidityPosition?: LiquidityPosition;\n  collateralType?: CollateralType;\n  newCollateralAmount: Wei;\n  collateralValue: Wei;\n  hasChanges: boolean;\n  isLoading?: boolean;\n}> = ({ liquidityPosition, collateralType, newCollateralAmount, hasChanges, isLoading }) => (\n  <BorderBox p={4} flex=\"1\" flexDirection=\"row\" bg=\"navy.700\">\n    <Flex\n      opacity={!liquidityPosition && !isLoading && !hasChanges ? '40%' : '100%'}\n      flexDirection=\"column\"\n      width=\"100%\"\n    >\n      <Flex alignItems=\"center\" mb=\"4px\">\n        <Text color=\"gray.500\" fontSize=\"xs\" fontFamily=\"heading\" lineHeight=\"16px\">\n          Collateral\n        </Text>\n      </Flex>\n      <Flex width=\"100%\">\n        {isLoading ? (\n          <Skeleton width=\"100%\">Lorem ipsum (this wont be displaye debt) </Skeleton>\n        ) : liquidityPosition && collateralType ? (\n          <Flex direction=\"column\">\n            <ChangeStat\n              value={liquidityPosition.collateralAmount}\n              newValue={newCollateralAmount}\n              formatFn={(val: Wei) => `${currency(val)} ${collateralType.displaySymbol}`}\n              hasChanges={hasChanges}\n              dataTestId=\"manage stats collateral\"\n            />\n            <ChangeStat\n              value={liquidityPosition.collateralAmount.mul(liquidityPosition.collateralPrice)}\n              newValue={newCollateralAmount.mul(liquidityPosition.collateralPrice)}\n              formatFn={(val: Wei) =>\n                currency(val, {\n                  currency: 'USD',\n                  style: 'currency',\n                })\n              }\n              size=\"md\"\n              hasChanges={hasChanges}\n              dataTestId=\"manage stats collateral\"\n            />\n          </Flex>\n        ) : (\n          <Flex direction=\"column\">\n            <ChangeStat\n              value={ZEROWEI}\n              newValue={newCollateralAmount}\n              formatFn={(val: Wei) => `${currency(val)} ${collateralType?.displaySymbol || ''}`}\n              hasChanges={hasChanges}\n            />\n            <Text fontWeight=\"400\" color=\"white\" fontSize=\"16px\">\n              {currency(ZEROWEI, {\n                currency: 'USD',\n                style: 'currency',\n              })}\n            </Text>\n          </Flex>\n        )}\n      </Flex>\n    </Flex>\n  </BorderBox>\n);\n","import { FC, useContext } from 'react';\nimport { Flex, Text } from '@chakra-ui/react';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { LiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { CollateralType, useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useParams } from '@snx-v3/useParams';\nimport { validatePosition } from '@snx-v3/validatePosition';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { calculateCRatio } from '@snx-v3/calculations';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { CRatioBar } from '../CRatioBar/CRatioBar';\nimport { PnlStats } from './PnlStats';\nimport { DebtStats } from './DebtStats';\nimport { CollateralStats } from './CollateralStats';\nimport { ZEROWEI } from '@snx-v3/constants';\n\nexport const ManageStatsUi: FC<{\n  liquidityPosition?: LiquidityPosition;\n  collateralType?: CollateralType;\n  newCollateralAmount: Wei;\n  newDebt: Wei;\n  newCratio: Wei;\n  collateralValue: Wei;\n  debt: Wei;\n  cRatio: Wei;\n  hasChanges: boolean;\n}> = ({\n  liquidityPosition,\n  collateralType,\n  collateralValue,\n  cRatio,\n  newCollateralAmount,\n  newCratio,\n  newDebt,\n  hasChanges,\n  debt,\n}) => {\n  const { network } = useNetwork();\n\n  return (\n    <Flex direction=\"column\" gap={4}>\n      <Text color=\"white\" fontSize=\"lg\" fontFamily=\"heading\" fontWeight=\"bold\" lineHeight=\"16px\">\n        Overview\n      </Text>\n      <Flex flexWrap=\"wrap\" direction={['column', 'row']} gap={4}>\n        <CollateralStats\n          liquidityPosition={liquidityPosition}\n          collateralType={collateralType}\n          newCollateralAmount={newCollateralAmount}\n          collateralValue={collateralValue}\n          hasChanges={hasChanges}\n        />\n\n        {isBaseAndromeda(network?.id, network?.preset) && (\n          <PnlStats\n            liquidityPosition={liquidityPosition}\n            collateralType={collateralType}\n            newDebt={newDebt}\n            hasChanges={hasChanges}\n          />\n        )}\n        {!isBaseAndromeda(network?.id, network?.preset) && (\n          <DebtStats\n            liquidityPosition={liquidityPosition}\n            collateralType={collateralType}\n            newDebt={newDebt}\n            hasChanges={hasChanges}\n          />\n        )}\n      </Flex>\n      {!isBaseAndromeda(network?.id, network?.preset) && (\n        <BorderBox py={4} px={6} flexDirection=\"column\" bg=\"navy.700\">\n          <CRatioBar\n            hasChanges={hasChanges}\n            currentCRatio={\n              collateralValue.gt(0) && debt.eq(0)\n                ? Number.MAX_SAFE_INTEGER\n                : cRatio.toNumber() * 100\n            }\n            liquidationCratio={(collateralType?.liquidationRatioD18?.toNumber() || 0) * 100}\n            newCratio={\n              newCollateralAmount.gt(0) && newDebt.eq(0)\n                ? Number.MAX_SAFE_INTEGER\n                : newCratio.toNumber() * 100\n            }\n            targetCratio={(collateralType?.issuanceRatioD18.toNumber() || 0) * 100}\n            isLoading={false}\n          />\n        </BorderBox>\n      )}\n    </Flex>\n  );\n};\n\nexport const ManageStats = ({ liquidityPosition }: { liquidityPosition?: LiquidityPosition }) => {\n  const { collateralSymbol } = useParams();\n  const { debtChange, collateralChange } = useContext(ManagePositionContext);\n\n  const { data: collateralType } = useCollateralType(collateralSymbol);\n\n  const collateralValue = liquidityPosition?.collateralValue || wei(0);\n\n  const cRatio = calculateCRatio(liquidityPosition?.debt || wei(0), collateralValue);\n\n  const { newCRatio, newCollateralAmount, newDebt, hasChanges } = validatePosition({\n    issuanceRatioD18: collateralType?.issuanceRatioD18,\n    collateralAmount: liquidityPosition?.collateralAmount,\n    collateralPrice: liquidityPosition?.collateralPrice,\n    debt: liquidityPosition?.debt,\n    collateralChange: collateralChange,\n    debtChange: debtChange,\n  });\n\n  return (\n    <ManageStatsUi\n      hasChanges={hasChanges}\n      newCratio={newCRatio}\n      newDebt={newDebt}\n      newCollateralAmount={newCollateralAmount}\n      liquidityPosition={liquidityPosition}\n      collateralType={collateralType}\n      cRatio={cRatio}\n      collateralValue={collateralValue}\n      debt={liquidityPosition?.debt || ZEROWEI}\n    />\n  );\n};\n","import {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  Button,\n  Collapse,\n  Divider,\n  Flex,\n  ListItem,\n  Text,\n  Tooltip,\n  UnorderedList,\n  Link,\n} from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useEthBalance } from '@snx-v3/useEthBalance';\nimport Wei from '@synthetixio/wei';\nimport { FC, useContext, useMemo, useState } from 'react';\nimport { useParams } from '@snx-v3/useParams';\nimport { useTransferableSynthetix } from '@snx-v3/useTransferableSynthetix';\nimport { TokenIcon } from '..';\nimport { useTokenBalance } from '@snx-v3/useTokenBalance';\nimport { MAINNET, SEPOLIA, useNetwork } from '@snx-v3/useBlockchain';\nimport { getSpotMarketId, isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { useGetWrapperToken } from '@snx-v3/useGetUSDTokens';\nimport { WithdrawIncrease } from '@snx-v3/WithdrawIncrease';\nimport { formatNumber } from '@snx-v3/formatters';\nimport { ArrowBackIcon } from '@chakra-ui/icons';\nimport { LiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { useTokenPrice } from '@snx-v3/useTokenPrice';\nimport { MigrationBanner } from '../Migration/MigrationBanner';\n\nexport const InitialDepositUi: FC<{\n  collateralChange: Wei;\n  ethBalance?: Wei;\n  snxBalance?: {\n    transferable: Wei;\n    collateral?: Wei;\n  };\n  tokenBalance?: Wei;\n  displaySymbol: string;\n  symbol: string;\n  setCollateralChange: (val: Wei) => void;\n  onSubmit: () => void;\n  minDelegation: Wei;\n  hasAccount: boolean;\n  availableCollateral: Wei;\n}> = ({\n  collateralChange,\n  setCollateralChange,\n  displaySymbol,\n  symbol,\n  tokenBalance,\n  ethBalance,\n  snxBalance,\n  onSubmit,\n  minDelegation,\n  hasAccount,\n  availableCollateral,\n}) => {\n  const [step, setStep] = useState(0);\n\n  const price = useTokenPrice(symbol);\n  const { network } = useNetwork();\n\n  const combinedTokenBalance = useMemo(() => {\n    if (symbol === 'SNX') {\n      return snxBalance?.transferable || ZEROWEI;\n    }\n    if (symbol !== 'WETH') {\n      return tokenBalance || ZEROWEI;\n    }\n    if (!tokenBalance || !ethBalance) {\n      return ZEROWEI;\n    }\n    return tokenBalance.add(ethBalance);\n  }, [symbol, tokenBalance, ethBalance, snxBalance?.transferable]);\n\n  const maxAmount = useMemo(() => {\n    return combinedTokenBalance?.add(availableCollateral);\n  }, [availableCollateral, combinedTokenBalance]);\n\n  const overAvailableBalance = collateralChange.gt(maxAmount);\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Text color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n        {step > 0 && <ArrowBackIcon cursor=\"pointer\" onClick={() => setStep(0)} mr={2} />}\n        Open Liquidity Position\n      </Text>\n      <Divider my={5} bg=\"gray.900\" />\n      {step === 0 && (\n        <>\n          <Text color=\"gray.50\" fontSize=\"sm\" fontWeight=\"700\" mb={2}>\n            Deposit & Lock Collateral\n          </Text>\n          <BorderBox display=\"flex\" flexDirection=\"column\" p={3} mb=\"6\">\n            <Flex alignItems=\"center\">\n              <Flex alignItems=\"flex-start\" flexDir=\"column\" gap=\"1\">\n                <BorderBox\n                  display=\"flex\"\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                  py={1.5}\n                  px={2.5}\n                  width=\"fit-content\"\n                >\n                  <Text display=\"flex\" gap={2} alignItems=\"center\" fontWeight=\"600\">\n                    <TokenIcon symbol={symbol} width={16} height={16} />\n                    {displaySymbol}\n                  </Text>\n                </BorderBox>\n                <Tooltip\n                  label={\n                    <Flex\n                      flexDirection=\"column\"\n                      alignItems=\"flex-start\"\n                      fontSize=\"xs\"\n                      color=\"whiteAlpha.700\"\n                    >\n                      <Flex gap=\"1\">\n                        <Text>Unlocked Balance:</Text>\n                        <Amount value={availableCollateral} />\n                      </Flex>\n                      <Flex gap=\"1\">\n                        <Text>Wallet Balance:</Text>\n                        <Amount\n                          value={symbol === 'SNX' ? snxBalance?.transferable : tokenBalance}\n                        />\n                      </Flex>\n                      {symbol === 'WETH' ? (\n                        <Flex gap=\"1\">\n                          <Text>ETH Balance:</Text>\n                          <Amount value={ethBalance} />\n                        </Flex>\n                      ) : null}\n                    </Flex>\n                  }\n                >\n                  <Text fontSize=\"12px\">\n                    Balance: <Amount value={maxAmount} />\n                    <Text\n                      as=\"span\"\n                      cursor=\"pointer\"\n                      onClick={() => {\n                        if (!maxAmount) {\n                          return;\n                        }\n                        setCollateralChange(maxAmount);\n                      }}\n                      color=\"cyan.500\"\n                      fontWeight={700}\n                    >\n                      &nbsp;Max\n                    </Text>\n                  </Text>\n                </Tooltip>\n              </Flex>\n              <Flex flexDir=\"column\" flexGrow={1}>\n                <NumberInput\n                  InputProps={{\n                    'data-testid': 'deposit amount input',\n                    'data-max': combinedTokenBalance?.toString(),\n                    type: 'number',\n                    min: 0,\n                  }}\n                  value={collateralChange}\n                  onChange={(value) => {\n                    setCollateralChange(value);\n                  }}\n                  max={combinedTokenBalance}\n                  dataTestId=\"deposit-number-input\"\n                  min={ZEROWEI}\n                />\n                <Flex fontSize=\"xs\" color=\"whiteAlpha.700\" alignSelf=\"flex-end\" gap=\"1\">\n                  {price.gt(0) && <Amount prefix=\"$\" value={collateralChange.abs().mul(price)} />}\n                </Flex>\n              </Flex>\n            </Flex>\n          </BorderBox>\n          {symbol === 'SNX' && network && [MAINNET.id, SEPOLIA.id].includes(network.id) && (\n            <MigrationBanner network={network} type=\"alert\" />\n          )}\n          <Collapse\n            in={\n              collateralChange.gt(0) && !overAvailableBalance && collateralChange.gte(minDelegation)\n            }\n            animateOpacity\n          >\n            <WithdrawIncrease />\n          </Collapse>\n          <Collapse\n            in={\n              collateralChange.gt(0) && collateralChange.lt(minDelegation) && !overAvailableBalance\n            }\n            animateOpacity\n          >\n            <Alert mb={6} status=\"error\" borderRadius=\"6px\">\n              <AlertIcon />\n              <AlertDescription>\n                Your deposit must be {formatNumber(minDelegation.toString())} {symbol} or higher\n              </AlertDescription>\n            </Alert>\n          </Collapse>\n          <Collapse in={overAvailableBalance} animateOpacity>\n            <Alert mb={6} status=\"error\" borderRadius=\"6px\">\n              <AlertIcon />\n              <AlertDescription>\n                You cannot Deposit & Lock more Collateral than your Balance amount\n              </AlertDescription>\n            </Alert>\n          </Collapse>\n          <Button\n            data-testid=\"deposit submit\"\n            data-cy=\"deposit-submit-button\"\n            onClick={() => {\n              if (hasAccount) {\n                onSubmit();\n              } else {\n                setStep(1);\n              }\n            }}\n            isDisabled={\n              collateralChange.lte(0) ||\n              combinedTokenBalance === undefined ||\n              collateralChange.lt(minDelegation) ||\n              overAvailableBalance\n            }\n          >\n            {collateralChange.lte(0) ? 'Enter Amount' : 'Deposit & Lock'}\n          </Button>\n        </>\n      )}\n      {step === 1 && (\n        <>\n          <Text>\n            In order to open a position on Synthetix Liquidity, you need an Account. It’s a one time\n            action needed that you won’t have to reproduce for the next positions. Accounts are\n            represented as ERC-721 compliant tokens (NFTs). Read more about it in the{' '}\n            <Link\n              href=\"https://docs.synthetix.io/v/synthetix-v3-user-documentation\"\n              target=\"_blank\"\n              color=\"cyan.500\"\n            >\n              Synthetix V3 Documentation\n            </Link>\n          </Text>\n          <br />\n          <UnorderedList>\n            <ListItem>Transferable like any NFT</ListItem>\n            <br />\n            <ListItem>Improve security by delegating permissions</ListItem>\n            <br />\n            <ListItem>Simplify collaborative liquidity positions management</ListItem>\n          </UnorderedList>\n          <Button\n            onClick={() => {\n              onSubmit();\n              setStep(0);\n            }}\n            mt={8}\n          >\n            Accept & Continue\n          </Button>\n        </>\n      )}\n    </Flex>\n  );\n};\n\nexport const InitialDeposit: FC<{\n  submit: () => void;\n  hasAccount: boolean;\n  liquidityPosition?: LiquidityPosition;\n}> = ({ submit, hasAccount, liquidityPosition }) => {\n  const { collateralChange, setCollateralChange } = useContext(ManagePositionContext);\n  const { network } = useNetwork();\n  const { collateralSymbol } = useParams();\n\n  const { data: collateralType } = useCollateralType(collateralSymbol);\n\n  const { data: transferrableSnx } = useTransferableSynthetix();\n\n  const { data: wrapperToken } = useGetWrapperToken(getSpotMarketId(collateralSymbol));\n  // TODO: This will need refactoring\n  const balanceAddress = isBaseAndromeda(network?.id, network?.preset)\n    ? wrapperToken\n    : collateralType?.tokenAddress;\n\n  const { data: tokenBalance } = useTokenBalance(balanceAddress);\n\n  const { data: ethBalance } = useEthBalance();\n\n  if (!collateralType) return null;\n\n  return (\n    <InitialDepositUi\n      displaySymbol={collateralType?.displaySymbol || ''}\n      tokenBalance={tokenBalance}\n      snxBalance={transferrableSnx}\n      ethBalance={ethBalance}\n      symbol={collateralType?.symbol || ''}\n      minDelegation={collateralType.minDelegationD18}\n      setCollateralChange={setCollateralChange}\n      collateralChange={collateralChange}\n      onSubmit={submit}\n      hasAccount={hasAccount}\n      availableCollateral={liquidityPosition?.accountCollateral.availableCollateral || ZEROWEI}\n    />\n  );\n};\n","import { Box, Flex } from '@chakra-ui/react';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport DepositModal from '@snx-v3/DepositModal';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { useAccounts } from '@snx-v3/useAccounts';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { LiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { useParams } from '@snx-v3/useParams';\nimport { FC, useContext, useState } from 'react';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { CRatioBar } from '../CRatioBar/CRatioBar';\nimport { InitialDeposit } from '../InitialDeposit';\nimport { Rewards } from '../Rewards';\nimport { CollateralStats } from './CollateralStats';\nimport { DebtStats } from './DebtStats';\nimport { PnlStats } from './PnlStats';\nimport { PositionTitle } from './PositionTitle';\n\nexport const NoPosition: FC<{\n  poolName?: string;\n  liquidityPosition?: LiquidityPosition;\n}> = ({ liquidityPosition, poolName }) => {\n  const { collateralSymbol, accountId } = useParams();\n  const { data: collateralType } = useCollateralType(collateralSymbol);\n\n  const { refetch } = useAccounts();\n  const { collateralChange, setCollateralChange, setDebtChange } =\n    useContext(ManagePositionContext);\n  const [txnModalOpen, setTxnModalOpen] = useState<'deposit' | null>(null);\n  const { network } = useNetwork();\n\n  return (\n    <Box mb={12} mt={8}>\n      <Box px={[0, 6]}>\n        <PositionTitle collateralSymbol={collateralSymbol} poolName={poolName} isOpen />\n      </Box>\n      <Flex mt={6} flexDirection={['column', 'column', 'row']} gap={4}>\n        <BorderBox gap={4} flex={1} p={6} flexDirection=\"column\" bg=\"navy.700\" height=\"fit-content\">\n          <Flex direction={['column', 'row']} gap={4}>\n            <CollateralStats\n              liquidityPosition={liquidityPosition}\n              collateralType={collateralType}\n              newCollateralAmount={collateralChange}\n              collateralValue={ZEROWEI}\n              hasChanges={collateralChange.gt(0)}\n            />\n\n            {isBaseAndromeda(network?.id, network?.preset) && (\n              <PnlStats\n                liquidityPosition={liquidityPosition}\n                collateralType={collateralType}\n                newDebt={ZEROWEI}\n                hasChanges={false}\n              />\n            )}\n            {!isBaseAndromeda(network?.id, network?.preset) && (\n              <DebtStats\n                liquidityPosition={liquidityPosition}\n                collateralType={collateralType}\n                newDebt={ZEROWEI}\n                hasChanges={false}\n              />\n            )}\n          </Flex>\n\n          {!isBaseAndromeda(network?.id, network?.preset) && (\n            <BorderBox py={4} px={6} flexDirection=\"column\" bg=\"navy.700\">\n              <CRatioBar\n                hasChanges={collateralChange.gt(0)}\n                currentCRatio={0}\n                liquidationCratio={(collateralType?.liquidationRatioD18?.toNumber() || 0) * 100}\n                newCratio={collateralChange.gt(0) ? Number.MAX_SAFE_INTEGER : 0}\n                targetCratio={(collateralType?.issuanceRatioD18.toNumber() || 0) * 100}\n                isLoading={false}\n              />\n            </BorderBox>\n          )}\n          <Rewards />\n        </BorderBox>\n        <BorderBox\n          flex={1}\n          maxW={['100%', '100%', '501px']}\n          p={6}\n          flexDirection=\"column\"\n          bg=\"navy.700\"\n          height=\"fit-content\"\n        >\n          {!txnModalOpen && (\n            <InitialDeposit\n              submit={() => {\n                setTxnModalOpen('deposit');\n              }}\n              hasAccount={!!accountId}\n              liquidityPosition={liquidityPosition}\n            />\n          )}\n\n          {txnModalOpen === 'deposit' ? (\n            <DepositModal\n              liquidityPosition={liquidityPosition}\n              onClose={() => {\n                setCollateralChange(ZEROWEI);\n                setDebtChange(ZEROWEI);\n                setTxnModalOpen(null);\n                refetch();\n              }}\n              isOpen={txnModalOpen === 'deposit'}\n              title=\"Open Liquidity Position\"\n            />\n          ) : null}\n        </BorderBox>\n      </Flex>\n    </Box>\n  );\n};\n","import { Button, Flex, Text } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { LiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { useTokenBalance } from '@snx-v3/useTokenBalance';\nimport { useTokenPrice } from '@snx-v3/useTokenPrice';\nimport { wei } from '@synthetixio/wei';\nimport { useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { TokenIcon } from '../TokenIcon';\nimport { RepayAllDebt } from './';\n\nexport const Repay = ({ liquidityPosition }: { liquidityPosition?: LiquidityPosition }) => {\n  const { debtChange, setDebtChange } = useContext(ManagePositionContext);\n  const { network } = useNetwork();\n  const { collateralSymbol } = useParams();\n\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n  const availableUSDCollateral = liquidityPosition?.usdCollateral.availableCollateral;\n  const { data: systemToken } = useSystemToken();\n  const { data: balance } = useTokenBalance(systemToken?.address);\n\n  const symbol = isBase ? collateralSymbol : systemToken?.symbol;\n\n  const price = useTokenPrice(symbol);\n\n  if (liquidityPosition?.debt.gt(0.01) && isBaseAndromeda(network?.id, network?.preset)) {\n    return <RepayAllDebt liquidityPosition={liquidityPosition} />;\n  }\n\n  const debtExists = liquidityPosition?.debt.gt(0);\n  const snxUSDBalance = balance?.gt(0.01) ? balance : wei(0);\n  const currentDebt = debtExists ? liquidityPosition?.debt : wei(0);\n  const max = debtExists ? liquidityPosition?.debt : ZEROWEI;\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Text color=\"gray./50\" fontSize=\"sm\" fontWeight=\"700\" mb=\"3\">\n        Repay Debt\n      </Text>\n      <BorderBox display=\"flex\" p={3} mb=\"6\">\n        <Flex alignItems=\"flex-start\" flexDir=\"column\" gap=\"1\">\n          <BorderBox display=\"flex\" py={1.5} px={2.5}>\n            <Text display=\"flex\" gap={2} fontSize=\"16px\" alignItems=\"center\" fontWeight=\"600\">\n              <TokenIcon symbol={symbol} width={16} height={16} />\n              {symbol}\n            </Text>\n          </BorderBox>\n          <Flex fontSize=\"12px\" gap=\"1\">\n            <Flex gap=\"1\" mr=\"3\" cursor=\"pointer\">\n              <Text>Debt:</Text>\n              <Text display=\"flex\" alignItems=\"center\">\n                $<Amount value={currentDebt} data-testid=\"current debt\" />\n                {currentDebt?.gt(0) && (\n                  <Text\n                    cursor=\"pointer\"\n                    onClick={() => {\n                      if (!currentDebt) {\n                        return;\n                      }\n                      setDebtChange(currentDebt.neg());\n                    }}\n                    color=\"cyan.500\"\n                    fontWeight={700}\n                  >\n                    &nbsp;Max\n                  </Text>\n                )}\n              </Text>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex flexDirection=\"column\" flexGrow={1}>\n          <NumberInput\n            InputProps={{\n              isRequired: true,\n              'data-testid': 'repay amount input',\n              'data-max': max?.toString(),\n              type: 'number',\n              min: 0,\n            }}\n            value={debtChange.abs()}\n            onChange={(val) => setDebtChange(val.mul(-1))}\n            max={max}\n            min={ZEROWEI}\n          />\n          <Flex fontSize=\"xs\" color=\"whiteAlpha.700\" alignSelf=\"flex-end\" gap=\"1\">\n            {price.gt(0) && <Amount prefix=\"$\" value={debtChange.abs().mul(price)} />}\n          </Flex>\n        </Flex>\n      </BorderBox>\n      <Button\n        data-testid=\"repay submit\"\n        type=\"submit\"\n        isDisabled={\n          !(max && snxUSDBalance && currentDebt && availableUSDCollateral) || debtChange.gte(0)\n        }\n      >\n        {debtChange.gte(0) ? 'Enter Amount' : 'Repay'}\n      </Button>\n    </Flex>\n  );\n};\n","import { Button, Flex, Text } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { parseUnits } from '@snx-v3/format';\nimport { getRepayerContract, getSpotMarketId, isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { useApprove } from '@snx-v3/useApprove';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useClearDebt } from '@snx-v3/useClearDebt';\nimport { useGetWrapperToken } from '@snx-v3/useGetUSDTokens';\nimport { LiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { useTokenBalance } from '@snx-v3/useTokenBalance';\nimport { wei } from '@synthetixio/wei';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { useCallback, useMemo } from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\n\nexport const RepayAllDebt = ({ liquidityPosition }: { liquidityPosition: LiquidityPosition }) => {\n  const { network } = useNetwork();\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n  const params = useParams();\n  const [searchParams] = useSearchParams();\n\n  const queryClient = useQueryClient();\n\n  const debtExists = liquidityPosition.debt.gt(0.01);\n  const currentDebt = debtExists ? liquidityPosition.debt : wei(0);\n  const { data: systemToken } = useSystemToken();\n  const { data: wrapperToken } = useGetWrapperToken(getSpotMarketId(params.collateralSymbol));\n\n  const { data: tokenBalance } = useTokenBalance(\n    isBase ? wrapperToken : liquidityPosition.tokenAddress\n  );\n\n  const sufficientBalance = useMemo(\n    () => Number(tokenBalance?.toString()) >= currentDebt.toNumber(),\n    [currentDebt, tokenBalance]\n  );\n\n  const {\n    exec: execRepay,\n    settle: settleRepay,\n    isLoading,\n  } = useClearDebt({\n    accountId: searchParams.get('accountId') || '',\n    poolId: params.poolId,\n    collateralTypeAddress: liquidityPosition?.tokenAddress,\n    availableUSDCollateral: liquidityPosition.accountCollateral.availableCollateral,\n    debt: currentDebt,\n  });\n\n  const {\n    approve,\n    requireApproval,\n    isLoading: approvalLoading,\n  } = useApprove({\n    contractAddress: wrapperToken,\n    //slippage for approval\n    amount: parseUnits(currentDebt.toString(), 6).mul(110).div(100),\n    spender: getRepayerContract(network?.id),\n  });\n\n  const submit = useCallback(async () => {\n    try {\n      if (requireApproval) {\n        await approve(false);\n      }\n      await execRepay();\n\n      await Promise.all([\n        queryClient.invalidateQueries({\n          queryKey: [`${network?.id}-${network?.preset}`, 'TokenBalance'],\n        }),\n        queryClient.invalidateQueries({\n          queryKey: [`${network?.id}-${network?.preset}`, 'Allowance'],\n        }),\n        queryClient.invalidateQueries({\n          queryKey: [`${network?.id}-${network?.preset}`, 'LiquidityPosition'],\n        }),\n        queryClient.invalidateQueries({\n          queryKey: [`${network?.id}-${network?.preset}`, 'AccountCollateralUnlockDate'],\n        }),\n      ]);\n\n      settleRepay();\n    } catch (error) {}\n  }, [approve, execRepay, network?.id, network?.preset, queryClient, requireApproval, settleRepay]);\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Text fontSize=\"md\" fontWeight=\"700\" mb=\"0.5\">\n        Repay {isBase ? params.collateralSymbol : systemToken?.symbol}\n      </Text>\n      <Text fontSize=\"sm\" color=\"gray.400\" mb=\"4\">\n        Your account currently has a positive debt. This amount must be paid to initiate collateral\n        withdrawal.\n      </Text>\n      <Button\n        isDisabled={!sufficientBalance}\n        isLoading={isLoading || approvalLoading}\n        onClick={submit}\n        data-testid=\"repay\"\n      >\n        Repay USDC $<Amount value={currentDebt} data-testid=\"current debt\" />\n        {sufficientBalance ? '' : '(Insufficient Balance)'}\n      </Button>\n    </Flex>\n  );\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useDefaultProvider, useNetwork } from '@snx-v3/useBlockchain';\nimport { z } from 'zod';\nimport { SmallIntSchema, WeiSchema } from '@snx-v3/zod';\nimport { ethers } from 'ethers';\nimport { erc7412Call } from '@snx-v3/withERC7412';\nimport { fetchPriceUpdates, priceUpdatesToPopulatedTx } from '@snx-v3/fetchPythPrices';\nimport { useAllCollateralPriceIds } from '@snx-v3/useAllCollateralPriceIds';\nimport { useAllCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\n\nexport const MarketConfigurationSchema = z.object({\n  id: SmallIntSchema,\n  weight: WeiSchema,\n  maxDebtShareValue: WeiSchema,\n  isLocked: z.boolean(),\n});\n\nexport const PoolConfigurationSchema = z.object({\n  id: z.number(),\n  markets: MarketConfigurationSchema.array(),\n  isAnyMarketLocked: z.boolean(),\n});\n\nconst isLockedSchema = z.boolean();\n\nexport const usePoolConfiguration = (poolId?: string) => {\n  const { network } = useNetwork();\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: collateralPriceUpdates } = useAllCollateralPriceIds();\n  const provider = useDefaultProvider();\n  const { data: priceUpdateTx } = useAllCollateralPriceUpdates();\n\n  return useQuery({\n    enabled: Boolean(CoreProxy && poolId && collateralPriceUpdates),\n    queryKey: [`${network?.id}-${network?.preset}`, 'PoolConfiguration', { poolId }],\n    queryFn: async () => {\n      if (!CoreProxy || !poolId || !collateralPriceUpdates || !network || !provider) {\n        throw Error('usePoolConfiguration should not be enabled');\n      }\n      const marketsData: {\n        marketId: ethers.BigNumber;\n        maxDebtShareValueD18: ethers.BigNumber;\n        weightD18: ethers.BigNumber;\n      }[] = await CoreProxy.getPoolConfiguration(ethers.BigNumber.from(poolId));\n      const markets = marketsData.map(({ marketId, maxDebtShareValueD18, weightD18 }) => ({\n        id: marketId,\n        weight: maxDebtShareValueD18,\n        maxDebtShareValue: weightD18,\n      }));\n\n      const collateralPriceCalls = await fetchPriceUpdates(\n        collateralPriceUpdates,\n        network.isTestnet\n      ).then((signedData) => priceUpdatesToPopulatedTx('0x', collateralPriceUpdates, signedData));\n\n      const calls = await Promise.all(\n        markets.map((m) => CoreProxy.populateTransaction.isMarketCapacityLocked(m.id))\n      );\n\n      const allCalls = collateralPriceCalls.concat(calls);\n      if (priceUpdateTx) {\n        allCalls.unshift(priceUpdateTx as any);\n      }\n\n      const decoded = await erc7412Call(\n        network,\n        provider,\n        allCalls,\n        (encoded) => {\n          const result = Array.isArray(encoded) ? encoded : [encoded];\n          return result.map((x) =>\n            isLockedSchema.parse(\n              CoreProxy.interface.decodeFunctionResult('isMarketCapacityLocked', x)[0]\n            )\n          );\n        },\n        'isMarketCapacityLocked'\n      );\n\n      return PoolConfigurationSchema.parse({\n        id: parseInt(poolId),\n        markets: markets.map((market, i) => ({\n          ...market,\n          isLocked: decoded[i],\n        })),\n        isAnyMarketLocked: decoded.some(Boolean),\n      });\n    },\n  });\n};\n","import {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertTitle,\n  Button,\n  Collapse,\n  Flex,\n  Text,\n} from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { LiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { validatePosition } from '@snx-v3/validatePosition';\nimport { usePoolConfiguration } from '@snx-v3/usePoolConfiguration';\nimport Wei, { wei } from '@synthetixio/wei';\nimport React, { FC, useCallback, useContext, useMemo } from 'react';\nimport { useParams } from '@snx-v3/useParams';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { TokenIcon } from '../TokenIcon';\nimport { useTokenPrice } from '@snx-v3/useTokenPrice';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { CRatioChangeStat } from '../CRatioBar/CRatioChangeStat';\nimport { ChangeStat } from '../Manage';\nimport { currency } from '@snx-v3/format';\nimport { TransactionSummary } from '../TransactionSummary/TransactionSummary';\nimport { useWithdrawTimer } from '@snx-v3/useWithdrawTimer';\nimport { useAccountSpecificCollateral } from '@snx-v3/useAccountCollateral';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\nexport const UndelegateUi: FC<{\n  collateralChange: Wei;\n  currentCollateral?: Wei;\n  minDelegation?: Wei;\n  currentDebt?: Wei;\n  max?: Wei;\n  collateralPrice?: Wei;\n  displaySymbol: string;\n  symbol: string;\n  setCollateralChange: (val: Wei) => void;\n  isAnyMarketLocked?: boolean;\n  isLoadingRequiredData: boolean;\n  isBase: boolean;\n  accountId: string | undefined;\n  maxWithdrawable?: Wei;\n  navigate: (action: string) => void;\n}> = ({\n  collateralChange,\n  setCollateralChange,\n  max,\n  displaySymbol,\n  symbol,\n  currentCollateral,\n  minDelegation,\n  isLoadingRequiredData,\n  isAnyMarketLocked,\n  isBase,\n  currentDebt,\n  collateralPrice,\n  accountId,\n  maxWithdrawable,\n  navigate,\n}) => {\n  const price = useTokenPrice(symbol);\n\n  const onMaxClick = useCallback(() => {\n    if (!max) {\n      return;\n    }\n    setCollateralChange(max.mul(-1));\n  }, [max, setCollateralChange]);\n\n  const { minutes, hours, isRunning } = useWithdrawTimer(accountId);\n\n  const leftoverCollateral = currentCollateral?.add(collateralChange) || wei(0);\n  const isValidLeftover =\n    leftoverCollateral.gte(minDelegation || wei(0)) || leftoverCollateral.eq(0);\n\n  const isInputDisabled = isAnyMarketLocked === true;\n  const overAvailableBalance = collateralChange.abs().gt(max);\n  const isSubmitDisabled =\n    isLoadingRequiredData ||\n    isAnyMarketLocked === true ||\n    collateralChange.gte(0) ||\n    !isValidLeftover ||\n    overAvailableBalance ||\n    (currentDebt?.gt(0) && isBase);\n\n  const txSummaryItems = useMemo(() => {\n    const items = [\n      {\n        label: 'Locked ' + symbol,\n        value: (\n          <ChangeStat\n            value={currentCollateral || ZEROWEI}\n            newValue={leftoverCollateral}\n            formatFn={(val: Wei) => currency(val)}\n            hasChanges={collateralChange.abs().gt(0)}\n            size=\"sm\"\n          />\n        ),\n      },\n    ];\n\n    if (isBase) {\n      return items;\n    }\n\n    return [\n      ...items,\n      {\n        label: 'C-ratio',\n        value: (\n          <CRatioChangeStat\n            currentCollateral={currentCollateral}\n            currentDebt={currentDebt}\n            collateralChange={collateralChange}\n            collateralPrice={collateralPrice}\n            debtChange={ZEROWEI}\n            size=\"sm\"\n          />\n        ),\n      },\n    ];\n  }, [\n    collateralChange,\n    collateralPrice,\n    currentCollateral,\n    currentDebt,\n    isBase,\n    leftoverCollateral,\n    symbol,\n  ]);\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Text color=\"gray./50\" fontSize=\"sm\" fontWeight=\"700\" mb=\"3\">\n        Unlock Collateral\n      </Text>\n      <BorderBox display=\"flex\" p={3} mb=\"6\">\n        <Flex alignItems=\"flex-start\" flexDir=\"column\" gap=\"1\">\n          <BorderBox display=\"flex\" py={1.5} px={2.5}>\n            <Text display=\"flex\" gap={2} alignItems=\"center\" fontWeight=\"600\">\n              <TokenIcon symbol={symbol} width={16} height={16} />\n              {displaySymbol}\n            </Text>\n          </BorderBox>\n          <Flex gap=\"1\" fontSize=\"12px\">\n            <Text display=\"flex\" alignItems=\"center\" gap={1}>\n              Locked:\n            </Text>\n            <Amount value={max} data-testid=\"available to unlock\" />\n            {max?.gt(0) && (\n              <Text\n                as=\"span\"\n                cursor=\"pointer\"\n                onClick={onMaxClick}\n                color=\"cyan.500\"\n                fontWeight={700}\n              >\n                Max\n              </Text>\n            )}\n          </Flex>\n        </Flex>\n        <Flex flexDir=\"column\" flexGrow={1}>\n          <NumberInput\n            InputProps={{\n              isDisabled: isInputDisabled,\n              isRequired: true,\n              'data-testid': 'undelegate amount input',\n              'data-max': max?.toString(),\n              type: 'number',\n              min: 0,\n            }}\n            value={collateralChange.abs()}\n            onChange={(val) => setCollateralChange(val.mul(-1))}\n            max={max}\n            min={ZEROWEI}\n          />\n          <Flex fontSize=\"xs\" color=\"whiteAlpha.700\" alignSelf=\"flex-end\" gap=\"1\">\n            {price.gt(0) && <Amount prefix=\"$\" value={collateralChange.abs().mul(price)} />}\n          </Flex>\n        </Flex>\n      </BorderBox>\n      <Collapse in={isInputDisabled} animateOpacity>\n        <Alert mb={6} status=\"warning\" borderRadius=\"6px\">\n          <AlertIcon />\n          <Flex direction=\"column\">\n            <AlertTitle>Credit capacity reached</AlertTitle>\n            <AlertDescription>\n              One of the markets has reached its credit capacity and is currently in a locked state.\n              You cannot unlock collateral from the pool at this time.\n            </AlertDescription>\n          </Flex>\n        </Alert>\n      </Collapse>\n\n      <Collapse in={!isValidLeftover && !collateralChange.eq(0)} animateOpacity>\n        <Alert mb={6} status=\"info\" borderRadius=\"6px\">\n          <AlertIcon />\n          <Flex direction=\"column\">\n            <AlertTitle>\n              The minimal locked amount is <Amount value={minDelegation} suffix={` ${symbol}`} />\n            </AlertTitle>\n            <AlertDescription>\n              You can close your position by removing all the collateral.\n            </AlertDescription>\n          </Flex>\n        </Alert>\n      </Collapse>\n\n      <Collapse in={collateralChange.abs().gt(0) && isValidLeftover && isRunning} animateOpacity>\n        <Alert status=\"warning\" mb=\"6\">\n          <AlertIcon />\n          <Text>\n            You will be able to withdraw assets in {hours}H{minutes}M. Any account activity will\n            reset this timer to 24H.\n          </Text>\n        </Alert>\n      </Collapse>\n\n      <Collapse\n        in={collateralChange.abs().gt(0) && isValidLeftover && !isRunning && maxWithdrawable?.gt(0)}\n        animateOpacity\n      >\n        <Alert status=\"info\" mb=\"6\" borderRadius=\"6px\">\n          <AlertIcon />\n          <Text>\n            You already have <Amount value={maxWithdrawable} suffix={` ${symbol}`} /> unlocked.\n            &nbsp;\n            <Text\n              onClick={() => navigate('withdraw')}\n              cursor=\"pointer\"\n              as=\"span\"\n              textDecoration=\"underline\"\n            >\n              Withdraw\n            </Text>{' '}\n            before unlocking again as it will restart the 24h withdrawal timeout.\n          </Text>\n        </Alert>\n      </Collapse>\n\n      <Collapse in={currentDebt?.gt(0) && isBase} animateOpacity>\n        <Alert status=\"error\" mb=\"6\" borderRadius=\"6px\">\n          <AlertIcon />\n          <Text>\n            To Unlock this amount, you need to &nbsp;\n            <Text\n              onClick={() => navigate('repay')}\n              cursor=\"pointer\"\n              as=\"span\"\n              textDecoration=\"underline\"\n            >\n              repay <Amount value={currentDebt} suffix={` ${symbol}`} />\n            </Text>{' '}\n            to your position\n          </Text>\n        </Alert>\n      </Collapse>\n\n      <Collapse in={collateralChange.abs().gt(0)} animateOpacity>\n        <TransactionSummary mb={6} items={txSummaryItems} />\n      </Collapse>\n\n      <Button data-testid=\"undelegate submit\" type=\"submit\" isDisabled={isSubmitDisabled}>\n        {collateralChange.gte(0) ? 'Enter Amount' : 'Unlock Collateral'}\n      </Button>\n    </Flex>\n  );\n};\n\nexport const Undelegate = ({ liquidityPosition }: { liquidityPosition?: LiquidityPosition }) => {\n  const { collateralChange, debtChange, setCollateralChange } = useContext(ManagePositionContext);\n  const { poolId, accountId, collateralSymbol } = useParams();\n  const { data: collateralType } = useCollateralType(collateralSymbol);\n\n  const poolConfiguration = usePoolConfiguration(poolId);\n  const { network } = useNetwork();\n\n  const collateralPrice = liquidityPosition?.collateralPrice;\n\n  const { newDebt } = validatePosition({\n    issuanceRatioD18: collateralType?.issuanceRatioD18,\n    collateralAmount: liquidityPosition?.collateralAmount,\n    collateralPrice,\n    debt: liquidityPosition?.debt,\n    collateralChange: collateralChange,\n    debtChange: debtChange,\n  });\n\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n  const { data: systemToken } = useSystemToken();\n  const { data: systemTokenBalance } = useAccountSpecificCollateral(\n    accountId,\n    systemToken?.address\n  );\n\n  const [queryParams] = useSearchParams();\n  const navigate = useNavigate();\n  const handleNavigate = (actions: string) => {\n    queryParams.set('manageAction', actions);\n    navigate({\n      pathname: `/positions/${collateralType?.symbol}/${poolId}`,\n      search: queryParams.toString(),\n    });\n  };\n\n  const maxWithdrawable = useMemo(() => {\n    if (isBase) {\n      return (liquidityPosition?.accountCollateral.availableCollateral || ZEROWEI).add(\n        systemTokenBalance?.availableCollateral || ZEROWEI\n      );\n    }\n    return liquidityPosition?.accountCollateral.availableCollateral || ZEROWEI;\n  }, [\n    isBase,\n    liquidityPosition?.accountCollateral.availableCollateral,\n    systemTokenBalance?.availableCollateral,\n  ]);\n\n  // To get the max withdrawable collateral we look at the new debt and the issuance ratio.\n  // This gives us the amount in dollar. We then divide by the collateral price.\n  // To avoid the transaction failing due to small price deviations, we also apply a 2% buffer by multiplying with 0.98\n  const max = (() => {\n    if (!liquidityPosition || !collateralType) {\n      return undefined;\n    }\n    const { collateralAmount, collateralValue } = liquidityPosition;\n\n    if (isBase) {\n      return collateralAmount;\n    }\n\n    // if debt is negative it's actually credit, which means we can undelegate all collateral\n    if (newDebt.lte(0)) return collateralAmount;\n\n    const minCollateralRequired = newDebt.mul(collateralType.liquidationRatioD18);\n\n    if (collateralValue.lt(minCollateralRequired))\n      // If you're below issuance ratio, you can't withdraw anything\n      return wei(0);\n\n    const maxWithdrawable = collateralValue.sub(minCollateralRequired).mul(0.98);\n\n    return Wei.min(collateralAmount, maxWithdrawable);\n  })();\n\n  if (!collateralType) {\n    return null;\n  }\n\n  return (\n    <UndelegateUi\n      displaySymbol={collateralType.displaySymbol}\n      symbol={collateralType.symbol}\n      minDelegation={collateralType.minDelegationD18}\n      setCollateralChange={setCollateralChange}\n      collateralChange={collateralChange}\n      currentCollateral={liquidityPosition?.collateralAmount}\n      currentDebt={liquidityPosition?.debt}\n      max={max}\n      isLoadingRequiredData={poolConfiguration.isLoading || !max}\n      isAnyMarketLocked={poolConfiguration.data?.isAnyMarketLocked}\n      isBase={isBase}\n      collateralPrice={liquidityPosition?.collateralPrice}\n      accountId={accountId}\n      maxWithdrawable={maxWithdrawable}\n      navigate={handleNavigate}\n    />\n  );\n};\n","import { Alert, AlertIcon, Box, Button, Collapse, Flex, Text } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { FC, useContext, useMemo } from 'react';\nimport { LiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { TokenIcon } from '../TokenIcon';\nimport { validatePosition } from '@snx-v3/validatePosition';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useParams } from 'react-router-dom';\nimport { useTokenPrice } from '@snx-v3/useTokenPrice';\n\nconst ClaimUi: FC<{\n  maxClaimble: Wei;\n  maxDebt: Wei;\n  debtChange: Wei;\n  setDebtChange: (val: Wei) => void;\n  collateralSymbol: string;\n}> = ({ collateralSymbol, maxDebt, debtChange, setDebtChange, maxClaimble }) => {\n  const { network } = useNetwork();\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n  const { data: systemToken } = useSystemToken();\n  const max = useMemo(() => maxClaimble.add(maxDebt), [maxClaimble, maxDebt]);\n  const symbol = isBase ? collateralSymbol : systemToken?.symbol;\n  const price = useTokenPrice(symbol);\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Text color=\"gray./50\" fontSize=\"sm\" fontWeight=\"700\" mb=\"3\">\n        Claim{isBase ? ' Profit' : '/Borrow'}\n      </Text>\n      <BorderBox display=\"flex\" p={3} mb=\"6\">\n        <Flex alignItems=\"flex-start\" flexDir=\"column\" gap=\"1\">\n          <BorderBox display=\"flex\" py={1.5} px={2.5}>\n            <Text display=\"flex\" gap={2} fontSize=\"16px\" alignItems=\"center\" fontWeight=\"600\">\n              <TokenIcon symbol={symbol} width={16} height={16} />\n              {symbol}\n            </Text>\n          </BorderBox>\n          <Flex fontSize=\"12px\" gap=\"1\">\n            <Text>Credit:</Text>\n            <Amount value={maxClaimble} />\n            {maxClaimble?.gt(0) && (\n              <Text\n                cursor=\"pointer\"\n                onClick={() => {\n                  if (!maxClaimble) {\n                    return;\n                  }\n                  setDebtChange(maxClaimble);\n                }}\n                color=\"cyan.500\"\n                fontWeight={700}\n              >\n                &nbsp;Max\n              </Text>\n            )}\n          </Flex>\n        </Flex>\n        <Flex flexDir=\"column\" flexGrow={1}>\n          <NumberInput\n            InputProps={{\n              isRequired: true,\n              'data-testid': 'claim amount input',\n              'data-max': maxClaimble.toString(),\n              type: 'number',\n              min: 0,\n            }}\n            value={debtChange}\n            onChange={(val) => setDebtChange(val)}\n            max={max}\n            min={ZEROWEI}\n          />\n          <Flex fontSize=\"xs\" color=\"whiteAlpha.700\" alignSelf=\"flex-end\" gap=\"1\">\n            {price.gt(0) && <Amount prefix=\"$\" value={debtChange.abs().mul(price)} />}\n          </Flex>\n        </Flex>\n      </BorderBox>\n      <Collapse in={debtChange.lte(0) && maxClaimble.gt(0)} animateOpacity>\n        <Alert colorScheme=\"green\" mb=\"6\" borderRadius=\"6px\">\n          <AlertIcon />\n          <Text>\n            Positive market performance has credited your position. Claim up to{' '}\n            <Box\n              onClick={() => {\n                if (!maxClaimble) {\n                  return;\n                }\n                setDebtChange(maxClaimble);\n              }}\n              cursor=\"pointer\"\n              as=\"span\"\n              textDecoration=\"underline\"\n            >\n              <Amount value={maxClaimble} prefix=\"$\" />\n            </Box>\n            &nbsp;without accruing debt.\n          </Text>\n        </Alert>\n      </Collapse>\n      <Collapse in={debtChange.gt(0)} animateOpacity>\n        <Alert status=\"warning\" mb=\"6\" borderRadius=\"6px\">\n          <AlertIcon />\n          <Text>\n            Assets will be available to withdraw 24 hours after your last interaction with this\n            position.\n          </Text>\n        </Alert>\n      </Collapse>\n      <Collapse in={debtChange.lte(0) && !isBase && maxDebt.gt(0)} animateOpacity>\n        <Alert colorScheme=\"blue\" mb=\"6\" borderRadius=\"6px\">\n          <AlertIcon />\n          <Text>\n            You can take an interest-free loan up to &nbsp;\n            <Box\n              onClick={() => {\n                if (!maxDebt) {\n                  return;\n                }\n                setDebtChange(maxDebt.add(maxClaimble));\n              }}\n              cursor=\"pointer\"\n              as=\"span\"\n              textDecoration=\"underline\"\n            >\n              <Amount value={maxDebt} prefix=\"$\" />\n            </Box>\n          </Text>\n        </Alert>\n      </Collapse>\n      <Collapse\n        in={!debtChange.gt(max) && debtChange.gt(0) && debtChange.gt(maxClaimble) && !isBase}\n        animateOpacity\n      >\n        <Alert colorScheme=\"info\" mb=\"6\" borderRadius=\"6px\">\n          <AlertIcon />\n          <Text>\n            You are about to take a <Amount value={debtChange.sub(maxClaimble)} prefix=\"$\" />{' '}\n            interest-free loan\n          </Text>\n        </Alert>\n      </Collapse>\n      <Button\n        isDisabled={debtChange.lte(0) || debtChange.gt(max)}\n        data-testid=\"claim submit\"\n        type=\"submit\"\n      >\n        {debtChange.lte(0)\n          ? 'Enter Amount'\n          : debtChange.gt(maxClaimble) && !isBase\n            ? 'Borrow'\n            : 'Claim Profit'}\n      </Button>\n    </Flex>\n  );\n};\n\nexport const Claim = ({ liquidityPosition }: { liquidityPosition?: LiquidityPosition }) => {\n  const { network } = useNetwork();\n  const { debtChange, collateralChange, setDebtChange } = useContext(ManagePositionContext);\n  const { collateralSymbol } = useParams();\n\n  const maxClaimble = useMemo(() => {\n    if (!liquidityPosition || liquidityPosition?.debt.gte(0)) {\n      return ZEROWEI;\n    } else {\n      return wei(liquidityPosition.debt.abs().toBN().mul(99).div(100));\n    }\n  }, [liquidityPosition]);\n\n  const { data: collateralType } = useCollateralType(collateralSymbol);\n\n  const { maxDebt } = validatePosition({\n    issuanceRatioD18: collateralType?.issuanceRatioD18,\n    collateralAmount: liquidityPosition?.collateralAmount,\n    collateralPrice: liquidityPosition?.collateralPrice,\n    debt: liquidityPosition?.debt,\n    collateralChange: collateralChange,\n    debtChange: debtChange,\n  });\n\n  return (\n    <ClaimUi\n      setDebtChange={setDebtChange}\n      debtChange={debtChange}\n      maxClaimble={maxClaimble}\n      maxDebt={isBaseAndromeda(network?.id, network?.preset) ? ZEROWEI : maxDebt.mul(99).div(100)}\n      collateralSymbol={collateralSymbol!}\n    />\n  );\n};\n","import {\n  ComponentMultiStyleConfig,\n  ComponentStyleConfig,\n  defineStyle,\n  extendTheme,\n} from '@chakra-ui/react';\nimport { mode } from '@chakra-ui/theme-tools';\n\nconst gradients = {\n  'green-cyan': {\n    500: 'linear(to-tr, green.500, cyan.500)',\n    600: 'linear(to-tr, green.600, cyan.600)',\n    700: 'linear(to-tr, green.700, cyan.800)',\n  },\n\n  grey: {\n    900: 'linear(to-tr, grey.900, blackAlpha.900)',\n  },\n  dark: {\n    500: 'linear(to-tr, #171923, #141414)',\n  },\n\n  'pink-purple': {\n    500: 'linear(to-tr, pink.500, purple.500)',\n    600: 'linear(to-tr, pink.600, purple.600)',\n    700: 'linear(to-tr, pink.700, purple.800)',\n  },\n\n  'pink-blue': {\n    500: 'linear(to-tr, pink.500, blue.500)',\n    600: 'linear(to-tr, pink.600, blue.600)',\n    700: 'linear(to-tr, pink.700, blue.800)',\n  },\n  'pink-cyan': {\n    500: 'linear(to-tr, pink.500, cyan.500)',\n    600: 'linear(to-tr, pink.600, cyan.600)',\n    700: 'linear(to-tr, pink.700, cyan.800)',\n  },\n\n  orange: {\n    500: 'linear(to-tr, orange.500, orange.300)',\n    600: 'linear(to-tr, orange.600, orange.400)',\n    700: 'linear(to-tr, orange.700, orange.500)',\n  },\n};\n\n// adapted from https://github.com/chakra-ui/chakra-ui/blob/main/packages/components/theme/src/components/button.ts#L90\nconst variantSolid = defineStyle((props) => {\n  const { colorScheme: c } = props;\n\n  if (c === 'gray') {\n    const bg = mode(`gray.100`, `whiteAlpha.200`)(props);\n\n    return {\n      borderRadius: 'base',\n      color: mode(`black`, `whiteAlpha.900`)(props),\n      bg,\n      _hover: {\n        bg: mode(`gray.200`, `whiteAlpha.300`)(props),\n        _disabled: {\n          bg,\n        },\n      },\n      _active: { bg: mode(`gray.300`, `whiteAlpha.400`)(props) },\n    };\n  }\n\n  if (c === 'cyan') {\n    return {\n      borderRadius: 'base',\n      bgGradient: gradients['green-cyan'][500],\n      color: 'black',\n      _hover: {\n        bgGradient: gradients['green-cyan'][600],\n        _disabled: {\n          background: gradients['green-cyan'][500],\n        },\n      },\n      _active: {\n        bgGradient: gradients['green-cyan'][700],\n      },\n    };\n  }\n\n  const bg = `${c}.500`;\n  const color = 'white';\n  const hoverBg = `${c}.600`;\n  const activeBg = `${c}.700`;\n  const background = mode(bg, `${c}.600`)(props);\n\n  return {\n    borderRadius: 'base',\n    bg: background,\n    color: mode(color, `white`)(props),\n    _hover: {\n      bg: mode(hoverBg, `${c}.500`)(props),\n      _disabled: {\n        bg: background,\n      },\n    },\n    _active: { bg: mode(activeBg, `${c}.400`)(props) },\n  };\n});\n\nconst Button: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n  },\n  variants: {\n    solid: variantSolid,\n    outline: (props) => {\n      if (props.colorScheme === 'gray' || props.colorScheme === 'grey') {\n        return {\n          color: 'white',\n          borderColor: 'gray.900',\n          _hover: { bg: 'whiteAlpha.200' },\n          _active: { bg: 'whiteAlpha.400' },\n          borderRadius: 'base',\n        };\n      }\n      return {\n        color: 'cyan.500', // needed for storybook for some reason\n        border: '1px solid', // needed for storybook for some reason\n        borderColor: 'cyan.500', // needed for storybook for some reason\n        _hover: { bg: 'rgb(0, 209, 255, 0.12)' }, // cyan.500 0.12 opacity\n        _active: { bg: 'rgb(0, 209, 255, 0.24)' }, // cyan.500 0.24 opacity\n        borderRadius: 'base',\n      };\n    },\n    ghost: {\n      color: 'cyan.500', // needed for storybook for some reason\n      _hover: { bg: 'rgb(0, 209, 255, 0.12)' }, // cyan.500 0.12 opacity\n      _active: { bg: 'rgb(0, 209, 255, 0.24)' }, // cyan.500 0.24 opacity\n      borderRadius: 'base',\n    },\n  },\n};\n\nconst Menu: ComponentMultiStyleConfig = {\n  parts: ['button', 'list', 'item'],\n  baseStyle: {\n    button: {\n      borderRadius: 'base',\n      color: 'white',\n      span: {\n        display: 'flex',\n        alignItems: 'center',\n        px: 2,\n      },\n      height: '100%',\n    },\n    list: {\n      mt: 2,\n      bgColor: 'navy.900',\n      padding: 0,\n      border: 'none',\n      borderRadius: 'md',\n      py: 0,\n    },\n    item: {\n      bgColor: 'blackAlpha.300',\n      color: 'whiteAlpha.900',\n      p: 3,\n      _hover: {\n        bgColor: 'whiteAlpha.400',\n      },\n      _active: {\n        bgColor: 'navy.900',\n      },\n      _first: {\n        borderTopLeftRadius: 'md',\n        borderTopRightRadius: 'md',\n      },\n      _last: {\n        borderBottomLeftRadius: 'md',\n        borderBottomRightRadius: 'md',\n      },\n      _focus: {\n        bgColor: 'blackAlpha.400',\n      },\n    },\n  },\n};\n\nconst Input: ComponentStyleConfig = {\n  defaultProps: {\n    focusBorderColor: 'cyan.500',\n    errorBorderColor: 'red.500',\n  },\n};\n\nconst Select: ComponentStyleConfig = {\n  defaultProps: {\n    focusBorderColor: 'cyan.500',\n    iconColor: 'cyan.500',\n    errorBorderColor: 'red.500',\n  },\n};\n\nconst NumberInput: ComponentStyleConfig = {\n  defaultProps: {\n    focusBorderColor: 'cyan.500',\n    errorBorderColor: 'red.500',\n  },\n};\n\nconst Textarea: ComponentStyleConfig = {\n  defaultProps: {\n    focusBorderColor: 'cyan.500',\n    colorScheme: 'cyan',\n    errorBorderColor: 'red.500',\n  },\n};\n\nconst Alert: ComponentStyleConfig = {\n  defaultProps: {\n    variant: 'left-accent',\n  },\n  variants: {\n    'left-accent': (props) => {\n      return {\n        container: {\n          bg: `${props.colorScheme}.900`,\n          borderInlineStartColor: `${props.colorScheme}.500`,\n        },\n      };\n    },\n    solid: (props) => {\n      return {\n        icon: { color: 'white' },\n        container: { bg: `${props.colorScheme}.500`, color: 'white' },\n      };\n    },\n  },\n};\n\nconst Skeleton: ComponentStyleConfig = {\n  defaultProps: {\n    startColor: 'gray.900',\n    endColor: 'gray.800',\n  },\n};\n\nconst Checkbox: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n  },\n  baseStyle: {\n    control: {\n      borderColor: 'cyan.500',\n      _checked: {\n        bg: 'cyan.500',\n        borderColor: 'cyan.500',\n        _hover: {\n          bg: 'cyan.600',\n          borderColor: 'cyan.600',\n        },\n      },\n      _invalid: {\n        borderColor: 'red.500',\n      },\n      _disabled: {\n        _hover: {\n          borderColor: 'transparent',\n        },\n      },\n      _hover: {\n        borderColor: 'cyan.600',\n      },\n    },\n  },\n};\n\nconst Radio: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n  },\n  baseStyle: {\n    control: {\n      borderColor: 'cyan.500',\n      _checked: {\n        bg: 'cyan.500',\n        borderColor: 'cyan.500',\n        _hover: {\n          bg: 'cyan.600',\n          borderColor: 'cyan.600',\n        },\n      },\n      _invalid: {\n        borderColor: 'red.500',\n      },\n      _disabled: {\n        _hover: {\n          borderColor: 'transparent',\n        },\n      },\n      _hover: {\n        borderColor: 'cyan.600',\n      },\n    },\n  },\n};\n\nconst Badge: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n  },\n  variants: {\n    subtle: (props) => ({\n      color: `${props.colorScheme}.500`,\n      border: '0px',\n      display: 'flex',\n      alignItems: 'center',\n    }),\n    solid: (props) => ({\n      background: `${props.colorScheme}.500`,\n      color: 'black',\n    }),\n    outline: (props) => ({\n      borderColor: `${props.colorScheme}.500`,\n      color: `${props.colorScheme}.500`,\n      boxShadow: 'unset',\n    }),\n  },\n};\n\nconst Tag: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n    variant: 'solid',\n  },\n  variants: {\n    solid: (props) => ({\n      container: {\n        background: `${props.colorScheme}.500`,\n        color: 'black',\n      },\n    }),\n  },\n};\n\nconst Accordion: ComponentStyleConfig = {\n  baseStyle: {\n    container: {\n      borderColor: 'gray.900',\n      borderWidth: '1px',\n      borderRadius: 'base',\n    },\n  },\n};\n\nconst Progress: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n    variant: 'solid',\n    borderRadius: 'full',\n  },\n  variants: {\n    solid: (props) => ({\n      filledTrack: {\n        background: `${props.colorScheme}.500`,\n        borderRadius: 'full',\n      },\n      track: {\n        borderRadius: 'full',\n      },\n    }),\n  },\n};\n\nconst Tabs: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n  },\n  variants: {\n    'solid-rounded': (props) => ({\n      tab: {\n        _selected: {\n          background: `${props.colorScheme}.500`,\n          color: 'black',\n        },\n        color: `${props.colorScheme}.500`,\n      },\n    }),\n    'soft-rounded': {\n      tab: {\n        _selected: {\n          background: 'whiteAlpha.300',\n          color: 'cyan.500',\n        },\n        color: 'cyan.500',\n      },\n    },\n  },\n};\n\nconst Tooltip: ComponentStyleConfig = {\n  baseStyle: {\n    textAlign: 'center',\n    bg: 'gray.900',\n    color: 'white.500',\n    '--popper-arrow-bg': 'var(--chakra-colors-gray-900)',\n  },\n};\n\nconst Switch: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n  },\n  baseStyle: {\n    track: {\n      _checked: {\n        background: 'cyan.500',\n      },\n    },\n  },\n};\n\nconst Spinner: ComponentStyleConfig = {\n  baseStyle: {\n    color: 'cyan.500',\n  },\n};\n\nexport const theme = extendTheme({\n  useSystemColorMode: false,\n  initialColorMode: 'dark',\n  colors: {\n    gray: {\n      50: '#F6F6F6',\n      100: '#F1F1F1',\n      200: '#DDDDDF',\n      300: '#C3C3C9',\n      400: '#AAAAB2',\n      500: '#91919B',\n      600: '#7A7A85',\n      700: '#63636E',\n      800: '#4D4D57',\n      900: '#303037',\n    },\n    red: {\n      50: '#FFEDEF',\n      100: '#FFC4CB',\n      200: '#FF9BA7',\n      300: '#FF7384',\n      400: '#FF4A60',\n      500: '#E4364B',\n      600: '#C53030',\n      700: '#9B2C2C',\n      800: '#822727',\n      900: '#63171B',\n    },\n    orange: {\n      50: '#FFF3EB',\n      100: '#FFD8BE',\n      200: '#FFBE92',\n      300: '#FFA365',\n      400: '#FF9A54',\n      500: '#FC8738',\n      600: '#DC732D',\n      700: '#96420A',\n      800: '#743002',\n      900: '#522100',\n    },\n    yellow: {\n      50: '#FFFBEF',\n      100: '#FFF2CA',\n      200: '#FFF5A8',\n      300: '#FFF889',\n      400: '#FFF458',\n      500: '#FAE527',\n      600: '#EAD516',\n      700: '#B5932B',\n      800: '#776017',\n      900: '#55430D',\n    },\n    green: {\n      50: '#EDFFF9',\n      100: '#C3FFEC',\n      200: '#9AE6B4',\n      300: '#72FFD3',\n      400: '#47FAC2',\n      500: '#34EDB3',\n      600: '#2BD39F',\n      700: '#11946B',\n      800: '#077250',\n      900: '#015037',\n    },\n    blue: {\n      50: '#EDF6FF',\n      100: '#C4E2FF',\n      200: '#9CCFFF',\n      300: '#73BBFF',\n      400: '#479EF0',\n      500: '#3182CE',\n      600: '#1F68AC',\n      700: '#11508A',\n      800: '#073968',\n      900: '#012546',\n    },\n    cyan: {\n      50: '#E5FAFF',\n      100: '#B7F2FF',\n      200: '#8AEAFF',\n      300: '#5CE1FF',\n      400: '#2ED9FF',\n      500: '#00D1FF',\n      600: '#00B0D6',\n      700: '#008EAD',\n      800: '#006D85',\n      900: '#004B5C',\n    },\n    purple: {\n      50: '#F0EEFF',\n      100: '#CFC9FF',\n      200: '#AEA4FF',\n      300: '#8D7EFF',\n      400: '#6B59FF',\n      500: '#5744EA',\n      600: '#402FC8',\n      700: '#2D1EA6',\n      800: '#1D1084',\n      900: '#10104E',\n    },\n    pink: {\n      50: '#FDE8FF',\n      100: '#F9B6FF',\n      200: '#F583FF',\n      300: '#F471FF',\n      400: '#EB46FF',\n      500: '#EE2EFF',\n      600: '#BE02CE',\n      700: '#8D0099',\n      800: '#6E0077',\n      900: '#4E0055',\n    },\n    navy: {\n      50: '#522ED1',\n      100: '#401FB7',\n      200: '#3719A6',\n      300: '#2F1298',\n      400: '#1F0777',\n      500: '#150942',\n      600: '#0E052F',\n      700: '#0B0B22',\n      800: '#0A0A25',\n      900: '#06061B',\n    },\n    error: '#FF4A60', // red.400,\n    success: '#34EDB3', //green.500\n    warning: '#FC8738', // orange.500\n  },\n  shadows: {\n    outline: '0 0 0 3px rgba(0, 209, 255, 1)',\n  },\n  fonts: {\n    heading:\n      'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n    body: 'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n    display:\n      '\"GT America Condensed\", Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n    mono: '\"GT America Mono\", SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace',\n  },\n  components: {\n    Popover: {\n      variants: {\n        responsive: {\n          popper: {\n            maxWidth: 'unset',\n            width: 'unset',\n          },\n        },\n      },\n    },\n    Button,\n    Input,\n    Select,\n    NumberInput,\n    Alert,\n    Textarea,\n    Skeleton,\n    Checkbox,\n    Radio,\n    Badge,\n    Tag,\n    Accordion,\n    Progress,\n    Tabs,\n    Tooltip,\n    Switch,\n    Spinner,\n    Menu,\n  },\n  // To be imported and used with the bgGradient prop\n  // See: https://chakra-ui.com/docs/styled-system/gradient#background-gradient-api\n  gradients,\n  textStyles: {\n    'heading-4xl': {\n      fontSize: { base: '60px', lg: '72px' },\n      fontFamily: 'heading',\n      lineHeight: { base: '57.6px', lg: '72px' },\n      fontWeight: 700,\n    },\n    'heading-3xl': {\n      fontSize: { base: '48px', md: '60px' },\n      fontFamily: 'heading',\n      lineHeight: { base: '57.6px', md: '72px', lg: '60px' },\n      fontWeight: 700,\n    },\n    'heading-2xl': {\n      fontSize: { base: '36px', md: '48px' },\n      fontFamily: 'heading',\n      lineHeight: { base: '120%' },\n      fontWeight: 700,\n    },\n    'heading-xl': {\n      fontSize: { base: '30px', lg: '36px' },\n      fontFamily: 'heading',\n      lineHeight: { base: '36px', lg: '120%' },\n      fontWeight: 700,\n    },\n    'heading-lg': {\n      fontSize: { base: '24px', lg: '30px' },\n      fontFamily: 'heading',\n      lineHeight: { base: '28.8px', lg: '36px' },\n      fontWeight: 700,\n    },\n    'heading-md': {\n      fontSize: { base: '20px', lg: '24px' },\n      fontFamily: 'heading',\n      lineHeight: '24px',\n      fontWeight: 700,\n    },\n    'heading-sm': {\n      fontSize: '16px',\n      fontFamily: 'heading',\n      lineHeight: '19.2px',\n      fontWeight: 700,\n    },\n    'heading-xs': {\n      fontSize: '14px',\n      fontFamily: 'heading',\n      lineHeight: '16.8px',\n      fontWeight: 700,\n    },\n  },\n  sizes: {\n    px: '1px',\n    0.5: '0.125rem',\n    1: '0.25rem',\n    1.5: '0.375rem',\n    2: '0.5rem',\n    2.5: '0.625rem',\n    3: '0.75rem',\n    3.5: '0.875rem',\n    4: '1rem',\n    5: '1.25rem',\n    6: '1.5rem',\n    7: '1.75rem',\n    8: '2rem',\n    9: '2.25rem',\n    10: '2.5rem',\n    12: '3rem',\n    14: '3.5rem',\n    16: '4rem',\n    20: '5rem',\n    24: '6rem',\n    28: '7rem',\n    32: '8rem',\n    36: '9rem',\n    40: '10rem',\n    44: '11rem',\n    48: '12rem',\n    52: '13rem',\n    56: '14rem',\n    60: '15rem',\n    64: '16rem',\n    72: '18rem',\n    80: '20rem',\n    96: '24rem',\n    max: 'max-content',\n    min: 'min-content',\n    full: '100%',\n    '3xs': '14rem',\n    '2xs': '16rem',\n    xs: '20rem',\n    sm: '24rem',\n    md: '28rem',\n    lg: '32rem',\n    xl: '36rem',\n    '2xl': '42rem',\n    '3xl': '48rem',\n    '4xl': '56rem',\n    '5xl': '64rem',\n    '6xl': '72rem',\n    '7xl': '80rem',\n    '8xl': '90rem',\n    container: {\n      sm: '640px',\n      md: '768px',\n      lg: '1024px',\n      xl: '1280px',\n    },\n  },\n  styles: {\n    global: {\n      body: {\n        bg: 'navy.900',\n      },\n    },\n  },\n});\n","import { Global } from '@emotion/react';\n\nexport const Fonts = () => (\n  <Global\n    styles={`\n      @import url('https://fonts.googleapis.com/css2?family=Inter:wght@200..700&display=swap');\n      @font-face {\n        font-family: 'GT America Condensed';\n        font-style: normal;\n        font-display: swap;\n        font-weight: 700;\n        src: local('GT America Condensed'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Bold.woff2') format('woff2'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Bold.woff') format('woff'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Bold.otf') format('opentype');\n      }\n      @font-face {\n        font-family: 'GT America Condensed';\n        font-style: italic;\n        font-display: swap;\n        font-weight: 700;\n        src: local('GT America Condensed'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Bold%20Italic.woff2')\n            format('woff2'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Bold%20Italic.woff')\n            format('woff'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Bold%20Italic.otf')\n            format('opentype');\n      }\n      @font-face {\n        font-family: 'GT America Condensed';\n        font-style: normal;\n        font-display: swap;\n        font-weight: 100;\n        src: local('GT America Condensed'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Thin.woff2') format('woff2'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Thin.woff') format('woff'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Thin.otf') format('opentype');\n      }\n      @font-face {\n        font-family: 'GT America Condensed';\n        font-style: italic;\n        font-display: swap;\n        font-weight: 100;\n        src: local('GT America Condensed'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Thin%20Italic.woff2')\n            format('woff2'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Thin%20Italic.woff')\n            format('woff'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Thin%20Italic.otf')\n            format('opentype');\n      }\n      @font-face {\n        font-family: 'GT America Mono';\n        font-style: normal;\n        font-display: swap;\n        font-weight: 700;\n        src: local('GT America Mono'),\n          url('https://fonts.synthetix.io/GT%20America%20Mono%20Bold.woff2') format('woff2'),\n          url('https://fonts.synthetix.io/GT%20America%20Mono%20Bold.woff') format('woff'),\n          url('https://fonts.synthetix.io/GT%20America%20Mono%20Bold.otf') format('opentype');\n      }\n      @font-face {\n        font-family: 'Lustra Text';\n        font-style: normal;\n        font-display: swap;\n        font-weight: 400;\n        src: local('Lustra Text'),\n          url('https://fonts.synthetix.io/Lustra%20Text%20Thin.otf') format('opentype');\n      }\n    `}\n  />\n);\n","import { useState } from 'react';\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  Text,\n  Button,\n  Box,\n  Link,\n  ListItem,\n  UnorderedList,\n} from '@chakra-ui/react';\nimport { Link as ReactRouterLink } from 'react-router-dom';\nimport { theme } from '@synthetixio/v3-theme';\nimport { SESSION_STORAGE_KEYS } from '@snx-v3/constants';\n\ninterface TermsModalProps {\n  defaultOpen: boolean;\n}\n\nexport const TermsModal = ({ defaultOpen = true }: TermsModalProps) => {\n  const [isOpen, setOpen] = useState(defaultOpen);\n  const [enabled, setEnabled] = useState(false);\n\n  const onSubmit = () => {\n    if (enabled) {\n      localStorage.setItem(SESSION_STORAGE_KEYS.TERMS_CONDITIONS_ACCEPTED, JSON.stringify(true));\n      setOpen(false);\n    }\n  };\n\n  return (\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    <Modal isOpen={isOpen} onClose={() => {}}>\n      <ModalOverlay />\n      <ModalContent\n        bgGradient={theme.gradients['dark'][500]}\n        pt=\"10\"\n        pb=\"3\"\n        borderWidth=\"1px\"\n        borderColor=\"gray.900\"\n        data-testid=\"transaction modal\"\n      >\n        <ModalHeader py={0} textAlign=\"center\">\n          Synthetix Terms of Service\n        </ModalHeader>\n        <ModalBody fontSize=\"xs\" color=\"gray.600\">\n          <Text fontSize=\"sm\">\n            By clicking “I Agree” below, you agree to be bound by the terms of this Agreement. As\n            such, you fully understand that:\n          </Text>\n          <Box\n            onScroll={(e) => {\n              const div = e.currentTarget;\n              const scrollTopWithTolerance = div.scrollTop + 10;\n              if (scrollTopWithTolerance >= div.scrollHeight - div.offsetHeight) {\n                setEnabled(true);\n              } else {\n                setEnabled(false);\n              }\n            }}\n            as=\"div\"\n            my={2}\n            py={3}\n            height=\"350px\"\n            overflow=\"auto\"\n            overflowX=\"scroll\"\n            sx={{\n              '::-webkit-scrollbar': {\n                display: 'block',\n              },\n              '::-webkit-scrollbar-track': {\n                backgroundColor: 'transparent',\n              },\n              '::-webkit-scrollbar-track-piece': {\n                backgroundColor: 'transparent',\n              },\n              '::-webkit-scrollbar-corner': {\n                backgroundColor: 'transparent',\n              },\n            }}\n          >\n            <UnorderedList>\n              <Text fontSize=\"14px\">\n                <ListItem>\n                  <Link\n                    href=\"https://synthetix.io/\"\n                    target=\"_blank\"\n                    color=\"cyan.500\"\n                    _focusVisible={{ outline: 'none' }}\n                  >\n                    Synthetix{' '}\n                  </Link>\n                  is a blockchain-based decentralized finance project. You are participating at your\n                  own risk.\n                </ListItem>\n                <ListItem mt={2}>\n                  Synthetix is offered for use “as is” and without any guarantees regarding\n                  security. The protocol is made up of immutable code and can be accessed through a\n                  variety of user interfaces.\n                </ListItem>\n                <ListItem mt={2}>\n                  No central entity operates the Synthetix protocol. Decisions related to the\n                  protocol are governed by a dispersed group of participants who collectively govern\n                  and maintain the protocol.\n                </ListItem>\n                <ListItem mt={2}>\n                  Synthetix DAO does not unilaterally offer, maintain, operate, administer, or\n                  control any trading interfaces. The only user interfaces maintained by Synthetix\n                  DAO are the governance and liquidity interfaces herein.\n                </ListItem>\n                <ListItem mt={2}>\n                  You can participate in the governance process by staking SNX tokens in accordance\n                  with the rules and parameters summarized{' '}\n                  <Link\n                    href=\"https://governance.synthetix.io/\"\n                    target=\"_blank\"\n                    color=\"cyan.500\"\n                    _focusVisible={{ outline: 'none' }}\n                  >\n                    here\n                  </Link>\n                  , and/or joining the{' '}\n                  <Link\n                    color=\"cyan.500\"\n                    target=\"_blank\"\n                    href=\"https://discord.com/invite/synthetix\"\n                    _focusVisible={{ outline: 'none' }}\n                  >\n                    Synthetix Discord\n                  </Link>{' '}\n                  and contributing to the conversation.\n                </ListItem>\n                <ListItem mt={2}>\n                  The rules and parameters associated with the Synthetix protocol and Synthetix DAO\n                  governance are subject to change at any time.\n                </ListItem>\n                <ListItem mt={2}>\n                  Your use of Synthetix is conditioned upon your acceptance to be bound by the\n                  Synthetix Term of Use, which can be found{' '}\n                  <Link\n                    as={ReactRouterLink}\n                    to=\"/terms\"\n                    target=\"_blank\"\n                    color=\"cyan.500\"\n                    _focusVisible={{ outline: 'none' }}\n                  >\n                    here\n                  </Link>\n                  .\n                </ListItem>\n                <ListItem mt={2}>\n                  The laws that apply to your use of Synthetix may vary based upon the jurisdiction\n                  in which you are located. We strongly encourage you to speak with legal counsel in\n                  your jurisdiction if you have any questions regarding your use of Synthetix.\n                </ListItem>\n                <ListItem mt={2}>\n                  By entering into this agreement, you are not agreeing to enter into a partnership.\n                  You understand that Synthetix is a decentralized protocol provided on an “as is”\n                  basis.\n                </ListItem>\n                <ListItem mt={2}>\n                  You hereby release all present and future claims against Synthetix DAO related to\n                  your use of the protocol, the SNX token, SNX DAO governance, and any other facet\n                  of the protocol.\n                </ListItem>\n                <ListItem mt={2}>\n                  You agree to indemnify and hold harmless SNX DAO and its affiliates for any costs\n                  arising out of or relating to your use of the Synthetix protocol.\n                </ListItem>\n                <ListItem mt={2}>\n                  You are not accessing the protocol from Burma (Myanmar), Cuba, Iran, Sudan, Syria,\n                  the Western Balkans, Belarus, Côte d’Ivoire, Democratic Republic of the Congo,\n                  Iraq, Lebanon, Liberia, Libya, North Korea, Russia, certain sanctioned areas of\n                  Ukraine, Somalia, Venezuela, Yemen, or Zimbabwe (collectively, “Prohibited\n                  Jurisdictions”), or any other jurisdiction listed as a Specially Designated\n                  National by the United States Office of Foreign Asset Control (“OFAC”).\n                </ListItem>\n              </Text>\n            </UnorderedList>\n          </Box>\n        </ModalBody>\n        <Button\n          variant=\"outline\"\n          _focusVisible={{ outline: 'none' }}\n          my={4}\n          mx={6}\n          onClick={onSubmit}\n          isDisabled={!enabled}\n        >\n          I agree\n        </Button>\n      </ModalContent>\n    </Modal>\n  );\n};\n","import { useState } from 'react';\n\nexport const set = (key: string, value: any) => {\n  if (typeof window !== 'undefined') {\n    window.localStorage.setItem(key, JSON.stringify(value));\n  }\n};\n\nexport function get<T>(key: string): T | null {\n  if (typeof window !== 'undefined') {\n    const item = window.localStorage.getItem(key);\n    try {\n      if (item != null) {\n        return JSON.parse(item);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  return null;\n}\n\nexport function useLocalStorage<T>(key: string, initialValue: T) {\n  const [storedValue, setStoredValue] = useState<T>(() => {\n    const item = get<T>(key);\n    return item != null ? item : initialValue;\n  });\n\n  const setValue = (value: T) => {\n    const valueToStore = value instanceof Function ? value(storedValue) : value;\n    setStoredValue(valueToStore);\n    set(key, valueToStore);\n  };\n\n  return [storedValue, setValue] as const;\n}\n","import { useEffect, useState } from 'react';\nimport {\n  Badge,\n  Button,\n  Divider,\n  Flex,\n  IconButton,\n  Link,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  MenuOptionGroup,\n  Switch,\n  Text,\n} from '@chakra-ui/react';\nimport { WalletIcon } from '@snx-v3/icons';\nimport { NetworkIcon, useNetwork, useWallet, NETWORKS } from '@snx-v3/useBlockchain';\nimport { prettyString } from '@snx-v3/format';\nimport { useLocalStorage } from '@snx-v3/useLocalStorage';\nimport { LOCAL_STORAGE_KEYS } from '@snx-v3/constants';\nimport { CopyIcon, SettingsIcon } from '@chakra-ui/icons';\nimport { useAccounts, useCreateAccount } from '@snx-v3/useAccounts';\nimport { useLocation, useNavigate, useSearchParams } from 'react-router-dom';\nimport { Tooltip } from '@snx-v3/Tooltip';\n\nconst mainnets = NETWORKS.filter(({ isSupported, isTestnet }) => isSupported && !isTestnet);\nconst testnets = NETWORKS.filter(({ isSupported, isTestnet }) => isSupported && isTestnet);\n\nexport function NetworkController() {\n  const [toolTipLabel, setTooltipLabel] = useState('Copy');\n  const { activeWallet, walletsInfo, connect, disconnect } = useWallet();\n  const { network: activeNetwork, setNetwork } = useNetwork();\n  const {\n    data: accounts,\n    isLoading: isAccountsLoading,\n    isFetching: isAccountsFetching,\n  } = useAccounts();\n  const { mutation } = useCreateAccount();\n  const [showTestnets, setShowTestnets] = useLocalStorage(LOCAL_STORAGE_KEYS.SHOW_TESTNETS, false);\n  const [queryParams] = useSearchParams();\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    if (!isAccountsLoading && !isAccountsFetching) {\n      if (!!accounts?.length) {\n        const accountId = queryParams.get('accountId');\n\n        if (accountId && !accounts?.includes(accountId)) {\n          queryParams.set('accountId', accounts[0]);\n          navigate({ pathname, search: queryParams.toString() }, { replace: true });\n        }\n      } else {\n        const accountId = queryParams.get('accountId');\n        if (!!accountId) {\n          queryParams.delete('accountId');\n          navigate({ pathname, search: queryParams.toString() }, { replace: true });\n        }\n      }\n    }\n  }, [accounts, isAccountsLoading, isAccountsFetching, queryParams, navigate, pathname]);\n\n  useEffect(() => {\n    // Check if wallet preference is stored in local storage\n    if (!walletsInfo) {\n      const defaultWallet = localStorage.getItem('connectedWallets');\n\n      if (defaultWallet) {\n        connect({\n          autoSelect: { disableModals: true, label: JSON.parse(defaultWallet) },\n        });\n      }\n    }\n\n    if (walletsInfo) {\n      // store in local storage\n      localStorage.setItem('connectedWallets', JSON.stringify(walletsInfo.label));\n    }\n  }, [walletsInfo, connect, navigate, pathname]);\n\n  useEffect(() => {\n    const accountId = queryParams.get('accountId');\n\n    if (!accountId && !!accounts?.length) {\n      const lastUsedAccount = localStorage.getItem('accountId');\n      if (lastUsedAccount && accounts.find((account) => String(account) === lastUsedAccount)) {\n        queryParams.set('accountId', lastUsedAccount);\n      } else {\n        queryParams.set('accountId', accounts[0]);\n      }\n      navigate({ pathname, search: queryParams.toString() }, { replace: true });\n    }\n  }, [accounts, navigate, pathname, queryParams]);\n\n  useEffect(() => {\n    const accountId = queryParams.get('accountId');\n\n    if (accountId) {\n      localStorage.setItem('accountId', accountId);\n    }\n  }, [queryParams]);\n\n  const onDisconnect = () => {\n    if (walletsInfo) {\n      disconnect(walletsInfo);\n      localStorage.removeItem('connectedWallets');\n    }\n  };\n\n  const notConnected = !activeWallet;\n  const notSupported = activeWallet && !activeNetwork;\n\n  return (\n    <Flex>\n      <Menu>\n        <MenuButton\n          as={Button}\n          variant=\"outline\"\n          colorScheme=\"gray\"\n          sx={{ '> span': { display: 'flex', alignItems: 'center' } }}\n          mr={1}\n          data-cy=\"account-menu-button\"\n          px={3}\n        >\n          <NetworkIcon\n            filter={activeNetwork?.isTestnet ? 'grayscale(1)' : ''}\n            networkId={notConnected ? 8453 : notSupported ? 0 : activeNetwork?.id}\n          />\n        </MenuButton>\n        <MenuList border=\"1px\" borderColor=\"gray.900\">\n          {mainnets.map(({ id, preset, label }) => (\n            <MenuItem key={`${id}-${preset}`} onClick={() => setNetwork(id)}>\n              <NetworkIcon networkId={id} size=\"20px\" />\n              <Text variant=\"nav\" ml={2}>\n                {label}\n              </Text>\n            </MenuItem>\n          ))}\n\n          {showTestnets && <Divider color=\"gray.900\" />}\n\n          <MenuOptionGroup>\n            <Flex py={4} px={3} alignItems=\"center\" justifyContent=\"space-between\">\n              <Text fontSize=\"14px\" fontFamily=\"heading\" lineHeight=\"20px\">\n                Show Testnets\n              </Text>\n              <Switch\n                mr={2}\n                size=\"sm\"\n                color=\"gray.900\"\n                colorScheme=\"gray\"\n                isChecked={showTestnets}\n                onChange={() => setShowTestnets(!showTestnets)}\n              />\n            </Flex>\n          </MenuOptionGroup>\n\n          {(showTestnets ? testnets : []).map(({ id, preset, label }) => (\n            <MenuItem key={`${id}-${preset}`} onClick={() => setNetwork(id)}>\n              <NetworkIcon filter=\"grayscale(1)\" networkId={id} size=\"20px\" />\n              <Text variant=\"nav\" ml={2}>\n                {label}\n              </Text>\n            </MenuItem>\n          ))}\n        </MenuList>\n      </Menu>\n      {activeWallet ? (\n        <Menu placement=\"bottom-end\">\n          <MenuButton\n            as={Button}\n            variant=\"outline\"\n            colorScheme=\"gray\"\n            ml={2}\n            height={10}\n            py=\"6px\"\n            px=\"9.5px\"\n            whiteSpace=\"nowrap\"\n            data-cy=\"header-wallet-address-button\"\n          >\n            <WalletIcon color=\"white\" />\n            <Text\n              as=\"span\"\n              ml={1}\n              color=\"white\"\n              fontWeight={700}\n              fontSize=\"xs\"\n              userSelect=\"none\"\n              data-cy=\"header-wallet-address-display\"\n            >\n              {activeWallet.ens?.name || prettyString(activeWallet.address)}\n            </Text>\n          </MenuButton>\n          <MenuList>\n            <Flex\n              border=\"1px solid\"\n              rounded=\"base\"\n              borderColor=\"gray.900\"\n              w=\"370px\"\n              _hover={{ bg: 'navy.700' }}\n              backgroundColor=\"navy.700\"\n              opacity={1}\n              p=\"4\"\n            >\n              <Flex flexDir=\"column\" w=\"100%\" gap=\"2\">\n                <Flex justifyContent=\"space-between\">\n                  <Text fontSize=\"14px\" color=\"gray.500\">\n                    Connected with {walletsInfo?.label}\n                  </Text>\n                  <Button\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      onDisconnect();\n                    }}\n                    size=\"xs\"\n                    variant=\"outline\"\n                    colorScheme=\"gray\"\n                    color=\"white\"\n                  >\n                    Disconnect\n                  </Button>\n                </Flex>\n                <Text fontWeight={700} color=\"white\" fontSize=\"16px\">\n                  {prettyString(activeWallet.address)}{' '}\n                  <Tooltip label={toolTipLabel} closeOnClick={false}>\n                    <CopyIcon\n                      ml=\"2\"\n                      onClick={() => {\n                        navigator.clipboard.writeText(activeWallet.address);\n                        setTooltipLabel('Copied');\n                        setTimeout(() => {\n                          setTooltipLabel('Copy');\n                        }, 10000);\n                      }}\n                    />\n                  </Tooltip>\n                </Text>\n                <Flex\n                  flexDir=\"column\"\n                  p=\"2\"\n                  border=\"1px solid\"\n                  borderColor=\"gray.900\"\n                  rounded=\"base\"\n                  gap=\"2\"\n                >\n                  <Flex w=\"100%\" justifyContent=\"space-between\">\n                    <Text fontWeight={400} fontSize=\"14px\">\n                      Account(s)\n                    </Text>\n                    <Link href=\"/#/account/settings\">\n                      <IconButton\n                        variant=\"outline\"\n                        colorScheme=\"gray\"\n                        size=\"xs\"\n                        icon={<SettingsIcon />}\n                        aria-label=\"account settings\"\n                      />\n                    </Link>\n                  </Flex>\n                  <Flex data-cy=\"header-account-list\" flexDir=\"column\">\n                    {accounts?.map((account) => (\n                      <Text\n                        key={account}\n                        display=\"flex\"\n                        alignItems=\"center\"\n                        color=\"white\"\n                        fontWeight={700}\n                        fontSize=\"16px\"\n                        cursor=\"pointer\"\n                        p=\"3\"\n                        data-cy={`account-${account}`}\n                        _hover={{ bg: 'whiteAlpha.300' }}\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          queryParams.set('accountId', account);\n                          navigate({ pathname, search: queryParams.toString() });\n                        }}\n                      >\n                        #{prettyString(account, 4, 4)}\n                        {queryParams.get('accountId') === account && (\n                          <Badge ml={2} colorScheme=\"cyan\" variant=\"outline\">\n                            Connected\n                          </Badge>\n                        )}\n                      </Text>\n                    ))}\n                  </Flex>\n\n                  <Button\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      mutation.mutate();\n                    }}\n                    size=\"xs\"\n                    variant=\"outline\"\n                    colorScheme=\"gray\"\n                    color=\"white\"\n                    leftIcon={\n                      <svg\n                        width=\"8\"\n                        height=\"8\"\n                        viewBox=\"0 0 8 8\"\n                        fill=\"none\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                      >\n                        <path\n                          d=\"M3.5 3.5V0.5H4.5V3.5H7.5V4.5H4.5V7.5H3.5V4.5H0.5V3.5H3.5Z\"\n                          fill=\"white\"\n                        />\n                      </svg>\n                    }\n                    w=\"130px\"\n                    data-cy=\"create-new-account-menu-item\"\n                  >\n                    Create Account\n                  </Button>\n                </Flex>\n              </Flex>\n            </Flex>\n          </MenuList>\n        </Menu>\n      ) : (\n        <Button\n          data-cy=\"header-connect-wallet\"\n          onClick={() => connect()}\n          type=\"button\"\n          size=\"sm\"\n          ml={2}\n          py={5}\n        >\n          Connect Wallet\n        </Button>\n      )}\n    </Flex>\n  );\n}\n","import { Button } from '@chakra-ui/react';\nimport { FC, useEffect, useState } from 'react';\nimport { Network, useNetwork, useWallet } from '@snx-v3/useBlockchain';\nimport { MigrateUSDModal } from './MigrateUSDModal';\nimport { TokenIcon } from '../TokenIcon';\nimport { useLocation } from 'react-router-dom';\n\ninterface Props {\n  network: Network;\n}\n\nexport const MigrateUSDButton: FC<Props> = ({ network }) => {\n  const location = useLocation();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const { network: currentNetwork } = useNetwork();\n\n  const { activeWallet } = useWallet();\n\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search);\n\n    const convert = queryParams.get('convert');\n\n    if (convert && convert.toLowerCase() === 'snxusd') {\n      setIsOpen(true);\n    }\n  }, [location.search]);\n\n  if (!activeWallet || currentNetwork?.id !== network.id) {\n    return null;\n  }\n\n  return (\n    <>\n      <MigrateUSDModal\n        type=\"convert\"\n        network={network}\n        onClose={() => setIsOpen(false)}\n        isOpen={isOpen}\n      />\n      <Button\n        variant=\"outline\"\n        colorScheme=\"gray\"\n        data-cy=\"migrate-usd\"\n        px={3}\n        gap={2}\n        display=\"flex\"\n        alignItems=\"center\"\n        fontSize=\"14px\"\n        onClick={() => setIsOpen(true)}\n      >\n        <TokenIcon width={24} height={24} symbol=\"susd\" />\n        Convert sUSD\n      </Button>\n    </>\n  );\n};\n","import { Box, Container, Flex, Link, useDisclosure } from '@chakra-ui/react';\nimport { NavLink as RouterLink, useLocation } from 'react-router-dom';\nimport { NetworkController } from './NetworkController';\nimport { useEffect } from 'react';\nimport { Logo, LogoIcon } from '@snx-v3/icons';\nimport { MigrateUSDButton } from '../../components/MigrateUSD/MigrateUSDButton';\nimport { MAINNET, SEPOLIA, useNetwork } from '@snx-v3/useBlockchain';\n\nexport default function Header() {\n  const { network } = useNetwork();\n  const { onClose } = useDisclosure();\n  const location = useLocation();\n\n  useEffect(() => {\n    onClose();\n  }, [location, onClose]);\n\n  return (\n    <>\n      <Flex\n        bg=\"navy.700\"\n        mb=\"4\"\n        py=\"3\"\n        borderBottomWidth=\"1px\"\n        borderBottomColor=\"gray.900\"\n        px=\"10\"\n      >\n        <Container maxW=\"1236px\" as={Flex} justifyContent=\"space-between\" alignItems=\"center\">\n          <Flex\n            display={{ base: 'none', md: 'inline-block' }}\n            flexDirection=\"row\"\n            justifyContent=\"space-between\"\n          >\n            <Link\n              to={{\n                pathname: '/',\n                search: location.search,\n              }}\n              as={RouterLink}\n              py={4}\n            >\n              <Logo />\n            </Link>\n            <Link\n              ml={6}\n              as={RouterLink}\n              to={{\n                pathname: '/dashboard',\n                search: location.search,\n              }}\n              fontWeight={700}\n              fontSize=\"14px\"\n              display=\"inline\"\n              px={3}\n              py={2.5}\n              textDecoration=\"none\"\n              color=\"gray.500\"\n              _hover={{ textDecoration: 'none' }}\n              _activeLink={{ color: 'white' }}\n            >\n              Dashboard\n            </Link>\n            <Link\n              ml={2.5}\n              as={RouterLink}\n              to={{\n                pathname: '/pools',\n                search: location.search,\n              }}\n              fontWeight={700}\n              fontSize=\"14px\"\n              display=\"inline\"\n              textDecoration=\"none\"\n              px={3}\n              py={2.5}\n              color=\"gray.500\"\n              _hover={{ textDecoration: 'none' }}\n              _activeLink={{ color: 'white' }}\n            >\n              Pools\n            </Link>\n          </Flex>\n          <Box display={{ md: 'none' }}>\n            <Link to=\"/\" as={RouterLink} py={4} pr={2}>\n              <LogoIcon />\n            </Link>\n          </Box>\n          <Flex gap={3} flexWrap=\"wrap-reverse\" justifyContent=\"center\" alignItems=\"center\">\n            {/* Hide balance */}\n            {/* <Balance isBase={isBase} balance={balance} /> */}\n            {network && [MAINNET.id, SEPOLIA.id] && <MigrateUSDButton network={network} />}\n            <NetworkController />\n          </Flex>\n        </Container>\n      </Flex>\n    </>\n  );\n}\n","import { Container, Flex, Link } from '@chakra-ui/react';\nimport { DiscordIcon, GithubIcon, Logo, WarpcastIcon, XIcon, YoutubeIcon } from '@snx-v3/icons';\n\nexport const Footer = () => {\n  return (\n    <Flex borderTop=\"1px solid\" borderTopColor=\"gray.900\" bg=\"navy.700\">\n      <Container\n        maxW=\"1236px\"\n        as={Flex}\n        height=\"72px\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n      >\n        <Logo withText={false} />\n        <Flex alignItems=\"center\">\n          <Link href=\"https://discord.com/invite/synthetix\" target=\"_blank\">\n            <DiscordIcon w=\"24px\" h=\"24px\" mr={2} />\n          </Link>\n          <Link href=\"https://x.com/synthetix_io\" target=\"_blank\">\n            <XIcon w=\"24px\" h=\"24px\" mr={2} />\n          </Link>\n          <Link href=\"https://github.com/Synthetixio/\" target=\"_blank\">\n            <GithubIcon w=\"24px\" h=\"24px\" mr={2} />\n          </Link>\n          <Link href=\"https://warpcast.com/~/channel/synthetix\" target=\"_blank\">\n            <WarpcastIcon w=\"24px\" h=\"24px\" mr={2} />\n          </Link>\n          <Link href=\"https://www.youtube.com/@synthetix.v3\" target=\"_blank\">\n            <YoutubeIcon w=\"24px\" h=\"24px\" />\n          </Link>\n        </Flex>\n      </Container>\n    </Flex>\n  );\n};\n","import { FC } from 'react';\nimport { Box, Container, Flex } from '@chakra-ui/react';\nimport { Outlet } from 'react-router-dom';\nimport Header from './Header';\nimport { Footer } from './Footer';\n\nexport const DefaultLayout: FC = () => (\n  <Box\n    as=\"main\"\n    minHeight=\"100vh\"\n    color=\"rgba(255,255,255,0.85)\"\n    display=\"flex\"\n    flexDirection=\"column\"\n    bg=\"navy.900\"\n  >\n    <Flex flex=\"1\" flexDirection=\"column\">\n      <Header />\n      <Container display=\"flex\" flexDir=\"column\" maxW=\"1236px\" flex=\"1\">\n        <Outlet />\n      </Container>\n      <Footer />\n    </Flex>\n  </Box>\n);\n","import { utils } from 'ethers';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useMutation } from '@tanstack/react-query';\nimport { useMulticall3 } from '@snx-v3/useMulticall3';\n\ntype Permissions = Array<string>;\nconst getPermissionDiff = (\n  existing: Permissions,\n  selected: Permissions\n): {\n  grants: Permissions;\n  revokes: Permissions;\n} => {\n  let grants: Permissions = [],\n    revokes: Permissions = [];\n  existing.concat(selected).forEach((permission) => {\n    if (!existing.includes(permission)) {\n      grants = [...grants, permission];\n    }\n    if (!selected.includes(permission)) {\n      revokes = [...revokes, permission];\n    }\n  });\n  return { grants, revokes };\n};\n\nexport const useManagePermissions = ({\n  accountId,\n  target,\n  existing = [],\n  selected = [],\n}: {\n  accountId: string;\n  target: string;\n  existing: Permissions;\n  selected: Permissions;\n}) => {\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: multicall } = useMulticall3();\n\n  return useMutation({\n    mutationFn: async () => {\n      if (!CoreProxy || !multicall) {\n        return;\n      }\n\n      const { grants, revokes } = getPermissionDiff(existing, selected);\n\n      try {\n        const grantCalls = grants.map((permission) => ({\n          target: CoreProxy.address,\n          callData: CoreProxy.interface.encodeFunctionData('grantPermission', [\n            accountId,\n            utils.formatBytes32String(permission),\n            target,\n          ]),\n          allowFailure: false,\n          requireSuccess: true,\n        }));\n\n        const revokeCalls = revokes.map((permission) => ({\n          target: CoreProxy.address,\n          callData: CoreProxy.interface.encodeFunctionData('revokePermission', [\n            accountId,\n            utils.formatBytes32String(permission),\n            target,\n          ]),\n          allowFailure: false,\n          requireSuccess: true,\n        }));\n\n        const tx = await multicall.aggregate3([...grantCalls, ...revokeCalls]);\n        await tx.wait();\n      } catch (error: any) {\n        throw error;\n      }\n    },\n  });\n};\n","import { CopyIcon, ExternalLinkIcon } from '@chakra-ui/icons';\nimport { Flex, Tooltip } from '@chakra-ui/react';\nimport { etherscanLink } from '@snx-v3/etherscanLink';\nimport { prettyString } from '@snx-v3/format';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { FC, useMemo } from 'react';\n\ninterface AddressProps {\n  address: string;\n}\n\nexport const Address: FC<AddressProps> = ({ address }) => {\n  const { network } = useNetwork();\n  const link = useMemo(\n    () =>\n      etherscanLink({\n        chain: network?.name || '',\n        address,\n      }),\n    [address, network?.name]\n  );\n  return (\n    <Flex alignItems=\"center\" gap={2}>\n      <Tooltip label={address}>{prettyString(address)}</Tooltip>\n      <CopyIcon\n        onClick={() => {\n          navigator.clipboard.writeText(address);\n        }}\n        cursor=\"pointer\"\n        _hover={{\n          color: 'cyan',\n        }}\n      />\n      <a target=\"_blank\" href={link} rel=\"noreferrer\">\n        <ExternalLinkIcon\n          _hover={{\n            color: 'cyan',\n          }}\n        />\n      </a>\n    </Flex>\n  );\n};\n","export const permissionsList = ['ADMIN', 'BURN', 'DELEGATE', 'MINT', 'REWARDS', 'WITHDRAW'];\n","import { useAccountProxy } from '@snx-v3/useAccountProxy';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useQuery } from '@tanstack/react-query';\nimport { utils } from 'ethers';\n\nexport function useAccountPermissions(accountId: string | undefined) {\n  const { data: CoreProxy } = useCoreProxy();\n  const { network } = useNetwork();\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'account-permissions', accountId],\n    queryFn: async function () {\n      if (!CoreProxy || !accountId) throw new Error('Should be disabled');\n      const permissions = await CoreProxy.getAccountPermissions(accountId);\n\n      return permissions.reduce(\n        (\n          acc: { [key: string]: string[] },\n          { user, permissions }: { user: string; permissions: string[] }\n        ) => ({\n          ...acc,\n          [user.toLowerCase()]: permissions.map((r: string) => utils.parseBytes32String(r)),\n        }),\n        {}\n      );\n    },\n    enabled: Boolean(CoreProxy?.address),\n  });\n}\n\nexport function useAccountOwner(accountId: string | undefined) {\n  const { data: AccountProxy } = useAccountProxy();\n  const { network } = useNetwork();\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'account-owner', accountId],\n    queryFn: async function () {\n      if (!AccountProxy || !accountId) throw new Error('Should be disabled');\n      return (await AccountProxy.ownerOf(accountId)) as string;\n    },\n    enabled: Boolean(AccountProxy?.address),\n  });\n}\n","/* eslint-disable react/no-unescaped-entities */\nimport { Text, Tooltip } from '@chakra-ui/react';\nimport { InfoIcon } from '@chakra-ui/icons';\n\nexport default function PermissionsInfo() {\n  return (\n    <Tooltip\n      label={\n        <>\n          <Text fontWeight={600} textAlign=\"left\">\n            ADMIN: Full control over the account, except for transferring ownership <br />\n            WITHDRAW: Ability to withdraw collateral from the account\n            <br />\n            REWARDS: Ability to claim rewards on behalf of the account\n            <br />\n            MINT: Ability to mint snxUSD using the account's collateral\n            <br />\n            DELEGATE: Ability to delegate the account's collateral to pools\n          </Text>\n        </>\n      }\n    >\n      <InfoIcon ml={1.5} w=\"10px\" h=\"10px\" />\n    </Tooltip>\n  );\n}\n","import {\n  Badge,\n  Button,\n  Divider,\n  Flex,\n  Input,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Spinner,\n  Text,\n} from '@chakra-ui/react';\nimport { useEffect, useMemo, useState } from 'react';\nimport { permissionsList } from './AccountPermissions';\nimport { utils } from 'ethers';\nimport { useManagePermissions } from '@snx-v3/useManagePermissions';\nimport { useAccountOwner, useAccountPermissions } from '@snx-v3/useAccountPermissions';\nimport PermissionsInfo from './PermissionsInfo';\n\nexport function PermissionModal({\n  accountId,\n  isOpen,\n  onClose,\n  refetch,\n  existingPermissions,\n  target,\n}: {\n  accountId: string;\n  target?: string;\n  existingPermissions?: string[];\n  isOpen: boolean;\n  onClose: () => void;\n  refetch: () => void;\n}) {\n  const [address, setAddress] = useState(target || '');\n  const [selectedPermissions, setSelectedPermissions] = useState<string[]>([\n    ...(existingPermissions || []),\n  ]);\n  const { mutateAsync: submit, isPending } = useManagePermissions({\n    target: address,\n    accountId,\n    existing: existingPermissions || [],\n    selected: selectedPermissions,\n  });\n\n  const { data: permissionData } = useAccountPermissions(accountId);\n  const { data: accountOwner } = useAccountOwner(accountId);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setSelectedPermissions([...(existingPermissions || [])]);\n    }\n  }, [existingPermissions, isOpen]);\n\n  const isAddressValid = useMemo(() => {\n    return (\n      utils.isAddress(address) &&\n      accountOwner?.toLowerCase() !== address.toLowerCase() &&\n      (!!target || (permissionData && !permissionData[address.toLowerCase()]))\n    );\n  }, [accountOwner, address, permissionData, target]);\n\n  const isFormValid = useMemo(() => {\n    return selectedPermissions.length > 0 && isAddressValid;\n  }, [isAddressValid, selectedPermissions.length]);\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent py={2} border=\"1px solid\" rounded=\"base\" borderColor=\"gray.900\" bg=\"navy.700\">\n        <ModalHeader>{target ? 'Edit' : 'New'} Permission</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <Divider />\n          <Flex pt={6} flexDir=\"column\" gap=\"5\">\n            {!target && (\n              <>\n                <Text fontWeight={600} fontSize=\"14px\" color=\"white\">\n                  Address\n                </Text>\n                <Input\n                  bg=\"navy.900\"\n                  onChange={(e) => {\n                    setAddress(e.target.value.trim());\n                  }}\n                  value={address}\n                  isInvalid={!isAddressValid && !!address}\n                />\n              </>\n            )}\n            <Text fontWeight={600} color=\"white\" fontSize=\"14px\">\n              Select Permissions <PermissionsInfo />\n            </Text>\n            <Flex justifyContent=\"space-evenly\">\n              {permissionsList.map((permission) => {\n                const isActive = selectedPermissions.includes(permission);\n                return (\n                  <Badge\n                    onClick={() =>\n                      setSelectedPermissions((state) => {\n                        if (state.includes(permission)) {\n                          return state.filter((s) => s !== permission);\n                        }\n                        return [...state, permission];\n                      })\n                    }\n                    variant=\"outline\"\n                    key={permission}\n                    color={isActive ? 'cyan' : 'gray'}\n                    textTransform=\"capitalize\"\n                    cursor=\"pointer\"\n                    bg=\"gray.900\"\n                    colorScheme={isActive ? 'cyan' : 'gray'}\n                  >\n                    {permission}\n                  </Badge>\n                );\n              })}\n            </Flex>\n          </Flex>\n        </ModalBody>\n        <ModalFooter justifyContent=\"center\">\n          {isPending ? (\n            <Spinner color=\"cyan\" />\n          ) : (\n            <Button\n              w=\"100%\"\n              onClick={() => {\n                submit().then(() => {\n                  setAddress('');\n                  setSelectedPermissions([]);\n                  refetch();\n                  onClose();\n                });\n              }}\n              isDisabled={!isFormValid}\n            >\n              {target ? 'Update ' : 'Add new '} permissions\n            </Button>\n          )}\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import { DeleteIcon, EditIcon } from '@chakra-ui/icons';\nimport { Badge, Td, Tr, Text, Flex, IconButton, useDisclosure } from '@chakra-ui/react';\nimport { FC, useEffect } from 'react';\nimport { useManagePermissions } from '@snx-v3/useManagePermissions';\nimport { Address } from '../Address';\nimport { PermissionModal } from './PermissionModal';\nimport { permissionsList } from './AccountPermissions';\n\ninterface Props {\n  address: string;\n  currentPermissions: Array<string>;\n  accountId: string;\n  refetch: () => void;\n  isOwner: boolean;\n}\n\nexport const PermissionRow: FC<Props> = ({\n  address,\n  currentPermissions,\n  accountId,\n  refetch,\n  isOwner,\n}) => {\n  const {\n    isOpen: isPermissionOpen,\n    onClose: onPermissionClose,\n    onOpen: onPermissionOpen,\n  } = useDisclosure();\n\n  const {\n    mutate: removePermissions,\n    isPending,\n    isSuccess,\n  } = useManagePermissions({\n    accountId,\n    target: address,\n    selected: [],\n    existing: currentPermissions,\n  });\n\n  useEffect(() => {\n    if (isSuccess) {\n      refetch();\n      onPermissionClose();\n    }\n  }, [isSuccess, onPermissionClose, refetch]);\n\n  return (\n    <Tr>\n      <Td width={240} borderBottomColor=\"gray.900\" py=\"4\">\n        <Text fontWeight={400} color=\"white\" fontSize=\"16px\">\n          <Address address={address} />\n        </Text>\n      </Td>\n      <Td borderBottomColor=\"gray.900\">\n        <Flex py={2} flexWrap=\"wrap\" gap={3}>\n          {permissionsList.map((permission) => {\n            const isActive = currentPermissions.includes(permission);\n            return (\n              <Badge\n                color={isActive ? 'cyan' : 'gray'}\n                colorScheme={isActive ? 'cyan' : 'gray'}\n                variant=\"outline\"\n                bg={isActive ? 'cyan.900' : 'gray.900'}\n                size=\"sm\"\n                textTransform=\"capitalize\"\n                key={permission.concat('permission-row')}\n              >\n                {permission}\n              </Badge>\n            );\n          })}\n        </Flex>\n      </Td>\n\n      <Td borderBottomColor=\"gray.900\" textAlign=\"end\">\n        {isOwner && (\n          <>\n            <PermissionModal\n              isOpen={isPermissionOpen}\n              onClose={onPermissionClose}\n              accountId={accountId}\n              refetch={refetch}\n              existingPermissions={currentPermissions}\n              target={address}\n            />\n            <IconButton\n              onClick={onPermissionOpen}\n              size=\"sm\"\n              aria-label=\"edit\"\n              variant=\"outline\"\n              colorScheme=\"gray\"\n              icon={<EditIcon />}\n              mr=\"2\"\n            />\n            <IconButton\n              variant=\"outline\"\n              isLoading={isPending}\n              colorScheme=\"gray\"\n              onClick={() => {\n                removePermissions();\n              }}\n              size=\"sm\"\n              aria-label=\"delete\"\n              icon={<DeleteIcon />}\n            />\n          </>\n        )}\n      </Td>\n    </Tr>\n  );\n};\n","import {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  Button,\n  Divider,\n  Flex,\n  Input,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Spinner,\n  Text,\n} from '@chakra-ui/react';\nimport { prettyString } from '@snx-v3/format';\nimport { useTransferAccountId } from '@snx-v3/useTransferAccountId';\nimport { utils } from 'ethers';\nimport { useMemo, useState } from 'react';\n\nexport function TransferOwnershipModal({\n  isOpen,\n  onClose,\n  accountId,\n  refetch,\n  owner,\n}: {\n  isOpen: boolean;\n  onClose: () => void;\n  accountId: string;\n  owner: string;\n  refetch: () => void;\n}) {\n  const [to, setTo] = useState('');\n  const { isPending, mutateAsync: submit } = useTransferAccountId(to, accountId);\n\n  const isTargetValid = useMemo(\n    () => !!utils.isAddress(to) && to.toLowerCase() !== owner.toLowerCase(),\n    [owner, to]\n  );\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent pb={1} border=\"1px solid\" rounded=\"base\" borderColor=\"gray.900\" bg=\"navy.700\">\n        <ModalHeader>Transfer Ownership</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <Divider />\n          <Text fontSize=\"18px\" fontWeight={700} mt=\"4\">\n            Account #{prettyString(accountId, 4, 4)}\n          </Text>\n          <Text fontSize=\"14px\" color=\"white\" mt=\"2\">\n            Will be transfered from:\n          </Text>\n          <Input mt=\"2\" bg=\"navy.900\" disabled value={owner} />\n          <Text fontSize=\"14px\" color=\"white\" mt=\"2\">\n            Will be transfered to:\n          </Text>\n          <Input\n            mt=\"2\"\n            bg=\"navy.900\"\n            onChange={(e) => {\n              setTo(e.target.value.trim());\n            }}\n            value={to}\n          />\n        </ModalBody>\n        <ModalFooter display=\"flex\" flexDirection=\"column\" gap={4} justifyContent=\"center\">\n          <Alert status=\"warning\" borderRadius=\"6px\">\n            <AlertIcon />\n            <Flex direction=\"column\">\n              <AlertDescription>This action cannot be undone</AlertDescription>\n            </Flex>\n          </Alert>\n\n          {isPending ? (\n            <Spinner color=\"cyan\" />\n          ) : (\n            <Button\n              w=\"100%\"\n              onClick={() =>\n                submit().then(() => {\n                  setTo('');\n                  refetch();\n                  onClose();\n                })\n              }\n              isDisabled={!isTargetValid}\n            >\n              Confirm\n            </Button>\n          )}\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import { useAccountProxy } from '@snx-v3/useAccountProxy';\nimport { useSigner, useWallet } from '@snx-v3/useBlockchain';\nimport { useMutation } from '@tanstack/react-query';\n\nexport function useTransferAccountId(to: string, accountId: string) {\n  const { data: AccountProxy } = useAccountProxy();\n  const { activeWallet } = useWallet();\n  const signer = useSigner();\n\n  return useMutation({\n    mutationFn: async () => {\n      if (!AccountProxy) throw new Error('CoreProxy or Multicall not defined');\n      if (!activeWallet?.address) throw new Error('Wallet is not connected');\n      const tx = await AccountProxy.connect(signer!).transferFrom(\n        activeWallet.address,\n        to,\n        accountId\n      );\n      const response = await tx.wait();\n      return response;\n    },\n  });\n}\n","import { Skeleton, Td, Text, Tr } from '@chakra-ui/react';\nimport { prettyString } from '@snx-v3/format';\nimport { ethers } from 'ethers';\n\nexport function PermissionTableLoading() {\n  const rows = Array.from({ length: 2 }, (_, i) => i);\n  return (\n    <>\n      {rows.map((row) => {\n        return (\n          <Tr borderBottomWidth={row === 1 ? 'none' : '1px'} key={row}>\n            <Td borderBottomColor=\"gray.900\" py=\"4\" width=\"200px\">\n              <Skeleton>\n                <Text fontWeight={400} color=\"white\" fontSize=\"16px\">\n                  {prettyString(ethers.constants.AddressZero)}{' '}\n                </Text>\n              </Skeleton>\n            </Td>\n            <Td borderBottomColor=\"gray.900\" py=\"4\">\n              <Skeleton>-</Skeleton>\n            </Td>\n            <Td borderBottomColor=\"gray.900\" py=\"4\">\n              <Skeleton>-</Skeleton>\n            </Td>\n          </Tr>\n        );\n      })}\n    </>\n  );\n}\n","/* eslint-disable react/no-unescaped-entities */\nimport {\n  Badge,\n  Button,\n  Flex,\n  Heading,\n  Skeleton,\n  Table,\n  TableContainer,\n  Tbody,\n  Td,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useDisclosure,\n} from '@chakra-ui/react';\nimport { PermissionRow } from './PermissionRow';\nimport { useAccountOwner, useAccountPermissions } from '@snx-v3/useAccountPermissions';\nimport { prettyString } from '@snx-v3/format';\nimport { useWallet } from '@snx-v3/useBlockchain';\nimport { PermissionModal } from './PermissionModal';\nimport { TransferOwnershipModal } from './TransferOwnershipModal';\nimport { PermissionTableLoading } from './PermissionTableLoading';\nimport { useMemo } from 'react';\nimport { Address } from '../Address';\nimport PermissionsInfo from './PermissionsInfo';\n\nexport default function PermissionTable({\n  accountId,\n  refetchAccounts,\n}: {\n  accountId: string;\n  refetchAccounts: () => void;\n}) {\n  const {\n    isOpen: isPermissionOpen,\n    onClose: onPermissionClose,\n    onOpen: onPermissionOpen,\n  } = useDisclosure();\n  const {\n    isOpen: isTransferOpen,\n    onClose: onTransferClose,\n    onOpen: onTransferOpen,\n  } = useDisclosure();\n\n  const { activeWallet } = useWallet();\n  const { data: permissions, isLoading, refetch } = useAccountPermissions(accountId);\n  const {\n    data: accountOwner,\n    isLoading: loadingOwner,\n    refetch: refetchAccountOwner,\n  } = useAccountOwner(accountId);\n\n  const isOwner = useMemo(\n    () => !!(accountOwner && accountOwner?.toLowerCase() === activeWallet?.address.toLowerCase()),\n    [accountOwner, activeWallet?.address]\n  );\n  return (\n    <>\n      <TableContainer\n        flexGrow=\"2\"\n        borderColor=\"gray.900\"\n        borderWidth=\"1px\"\n        borderRadius=\"5px\"\n        p={6}\n        sx={{\n          borderCollapse: 'separate',\n          borderSpacing: 0,\n        }}\n        bg=\"navy.700\"\n      >\n        <Flex mb=\"2\" w=\"100%\" justifyContent=\"space-between\">\n          <Heading size=\"md\" mb=\"1\">\n            Account #{prettyString(accountId, 4, 4)}\n          </Heading>\n          {isOwner && (\n            <Button\n              size=\"xs\"\n              onClick={() => {\n                onPermissionOpen();\n              }}\n            >\n              + New Permission\n            </Button>\n          )}\n        </Flex>\n        <Table variant=\"simple\">\n          <Thead>\n            <Tr>\n              <Th\n                py={5}\n                textTransform=\"unset\"\n                color=\"gray.600\"\n                fontFamily=\"heading\"\n                fontSize=\"12px\"\n                lineHeight=\"16px\"\n                borderBottomColor=\"gray.900\"\n              >\n                Address\n              </Th>\n              <Th\n                py={5}\n                textTransform=\"unset\"\n                color=\"gray.600\"\n                fontFamily=\"heading\"\n                fontSize=\"12px\"\n                lineHeight=\"16px\"\n                borderBottomColor=\"gray.900\"\n              >\n                Permissions\n                <PermissionsInfo />\n              </Th>\n              <Th\n                py={5}\n                textTransform=\"unset\"\n                color=\"gray.600\"\n                fontFamily=\"heading\"\n                fontSize=\"12px\"\n                lineHeight=\"16px\"\n                borderBottomColor=\"gray.900\"\n              ></Th>\n            </Tr>\n          </Thead>\n\n          <Tbody>\n            <Tr>\n              <Td width={240} py={5} borderBottomColor=\"gray.900\">\n                <Skeleton isLoaded={!loadingOwner}>\n                  {accountOwner && (\n                    <Text fontWeight={400} color=\"white\" fontSize=\"16px\">\n                      <Address address={accountOwner} />\n                    </Text>\n                  )}\n                </Skeleton>\n              </Td>\n              <Td py={5} borderBottomColor=\"gray.900\">\n                <Badge\n                  color=\"cyan\"\n                  variant=\"outline\"\n                  bg=\"cyan.900\"\n                  size=\"sm\"\n                  textTransform=\"capitalize\"\n                >\n                  OWNER\n                </Badge>\n              </Td>\n              <Td py={5} borderBottomColor=\"gray.900\" textAlign=\"end\">\n                {isOwner && (\n                  <Button\n                    size=\"xs\"\n                    variant=\"outline\"\n                    colorScheme=\"gray\"\n                    color=\"white\"\n                    onClick={() => {\n                      onTransferOpen();\n                    }}\n                  >\n                    Transfer Ownership\n                  </Button>\n                )}\n              </Td>\n            </Tr>\n\n            {isLoading && <PermissionTableLoading />}\n\n            {!isLoading &&\n              permissions &&\n              Object.keys(permissions)\n                .filter((target) => permissions[target]?.length > 0)\n                .map((target) => (\n                  <PermissionRow\n                    key={target}\n                    address={target}\n                    currentPermissions={permissions[target]}\n                    accountId={accountId}\n                    refetch={refetch}\n                    isOwner={isOwner}\n                  />\n                ))}\n          </Tbody>\n        </Table>\n      </TableContainer>\n\n      <PermissionModal\n        isOpen={isPermissionOpen}\n        onClose={onPermissionClose}\n        accountId={accountId}\n        refetch={refetch}\n      />\n      {accountOwner && (\n        <TransferOwnershipModal\n          isOpen={isTransferOpen}\n          onClose={onTransferClose}\n          accountId={accountId}\n          owner={accountOwner}\n          refetch={() => {\n            refetch();\n            refetchAccountOwner();\n            refetchAccounts();\n          }}\n        />\n      )}\n    </>\n  );\n}\n","export const DelegationIcon = () => {\n  return (\n    <svg width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M29.3662 7.14593C29.8933 6.89158 30.5156 6.97433 30.9627 7.35822L42.9627 17.6613C43.3047 17.9549 43.5024 18.3898 43.5024 18.8485C43.5024 19.3072 43.3047 19.7421 42.9627 20.0358L30.9627 30.3388C30.5156 30.7227 29.8933 30.8054 29.3662 30.5511C28.8391 30.2967 28.5024 29.7512 28.5024 29.1515V25.5455H18.0024C17.174 25.5455 16.5024 24.8536 16.5024 24C16.5024 23.1465 17.174 22.4546 18.0024 22.4546H30.0024C30.8309 22.4546 31.5024 23.1465 31.5024 24V25.8519L39.6594 18.8485L31.5024 11.8451V13.697C31.5024 14.5505 30.8309 15.2424 30.0024 15.2424H18.0024C17.174 15.2424 16.5024 14.5505 16.5024 13.697C16.5024 12.8435 17.174 12.1515 18.0024 12.1515H28.5024V8.54547C28.5024 7.94581 28.8391 7.40028 29.3662 7.14593Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M18.6362 40.8541C18.1092 41.1084 17.4868 41.0257 17.0397 40.6418L5.03972 30.3387C4.69774 30.0451 4.5 29.6102 4.5 29.1515C4.5 28.6928 4.69774 28.2579 5.03972 27.9642L17.0397 17.6612C17.4869 17.2773 18.1092 17.1946 18.6362 17.4489C19.1633 17.7033 19.5 18.2488 19.5 18.8485L19.5 22.4545L30 22.4545C30.8284 22.4545 31.5 23.1464 31.5 24C31.5 24.8535 30.8284 25.5454 30 25.5454L18 25.5454C17.1716 25.5454 16.5 24.8535 16.5 24L16.5 22.1481L8.34308 29.1515L16.5 36.1549L16.5 34.303C16.5 33.4495 17.1716 32.7576 18 32.7576L30 32.7576C30.8284 32.7576 31.5 33.4495 31.5 34.303C31.5 35.1565 30.8284 35.8485 30 35.8485L19.5 35.8485L19.5 39.4545C19.5 40.0542 19.1633 40.5997 18.6362 40.8541Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M9.3584 13.6973C9.3584 12.8438 10.03 12.1519 10.8584 12.1519H12.5727C13.4011 12.1519 14.0727 12.8438 14.0727 13.6973C14.0727 14.5508 13.4011 15.2428 12.5727 15.2428H10.8584C10.03 15.2428 9.3584 14.5508 9.3584 13.6973Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M38.644 34.3027C38.644 35.1562 37.9725 35.8481 37.144 35.8481L35.4298 35.8481C34.6013 35.8481 33.9298 35.1562 33.9298 34.3027C33.9298 33.4492 34.6013 32.7572 35.4298 32.7572L37.144 32.7572C37.9725 32.7572 38.644 33.4492 38.644 34.3027Z\"\n        fill=\"white\"\n      />\n    </svg>\n  );\n};\n","import { Button, Flex, Heading, Link, Text } from '@chakra-ui/react';\nimport { useAccounts } from '@snx-v3/useAccounts';\nimport PermissionTable from './PermissionTable';\nimport { DelegationIcon } from './DelegationIcon';\n\nexport default function Permissions() {\n  const { data: accounts, refetch: refetchAccounts } = useAccounts();\n\n  return (\n    <Flex flexDir=\"column\" gap=\"7\">\n      <Flex flexDir=\"column\" gap={7}>\n        {accounts?.map((account) => (\n          <PermissionTable key={account} accountId={account} refetchAccounts={refetchAccounts} />\n        ))}\n      </Flex>\n      <Flex\n        flexGrow=\"1\"\n        h=\"fit-content\"\n        border=\"1px solid\"\n        borderColor=\"gray.900\"\n        rounded=\"base\"\n        flexDir=\"column\"\n        width=\"100%\"\n        p=\"6\"\n        bg=\"navy.700\"\n      >\n        <DelegationIcon />\n        <Heading fontSize=\"14px\" mt=\"6\">\n          Delegate Permissions\n        </Heading>\n        <Text color=\"gray.500\" fontSize=\"12px\" mb=\"6\">\n          Delegation enables a wallet to execute functions on behalf of another wallet/account:\n          lock, borrow, withdraw, claim, but not transfer. Manage addresses and their powers below.\n        </Text>\n        <Link\n          href=\"https://docs.synthetix.io/v/synthetix-v3-user-documentation/protocol-design/vaults#account-permissions\"\n          rel=\"noopener\"\n          target=\"_blank\"\n        >\n          <Button variant=\"outline\" color=\"white\" colorScheme=\"gray\" size=\"xs\">\n            Learn More\n          </Button>\n        </Link>\n      </Flex>\n    </Flex>\n  );\n}\n","import { Helmet } from 'react-helmet';\nimport { Flex, Heading } from '@chakra-ui/react';\nimport Permissions from '../../components/Permissions/Permissions';\nimport { useIsConnected } from '@snx-v3/useBlockchain';\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { useAccounts } from '@snx-v3/useAccounts';\n\nexport function Settings() {\n  const navigate = useNavigate();\n  const isConnected = useIsConnected();\n  const {\n    data: accounts,\n    isLoading: isAccountsLoading,\n    isFetching: isAccountsFetching,\n  } = useAccounts();\n\n  useEffect(() => {\n    if (!isConnected) {\n      navigate('/');\n    }\n  }, [isConnected, navigate]);\n\n  useEffect(() => {\n    if (!isAccountsLoading && !isAccountsFetching && !accounts?.length) {\n      navigate('/');\n    }\n  }, [accounts?.length, isAccountsFetching, isAccountsLoading, isConnected, navigate]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Account Settings</title>\n        <meta name=\"description\" content=\"Account Settings\" />\n      </Helmet>\n      <Flex flexDir=\"column\" mb={16}>\n        <Heading\n          mt={{\n            base: 2,\n            sm: 8,\n          }}\n          mb={6}\n          color=\"gray.50\"\n          fontSize=\"1.5rem\"\n          data-cy=\"account-setting\"\n        >\n          Account Settings\n        </Heading>\n        <Permissions />\n      </Flex>\n    </>\n  );\n}\n","import { Suspense } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { Spinner } from '@chakra-ui/react';\nimport { DefaultLayout } from './layouts/Default';\nimport { Home, Manage, NotFoundPage, Dashboard, Pool, Pools } from './pages';\nimport { Settings } from './pages/Account/Settings';\n\nexport const Router = () => {\n  return (\n    <Suspense fallback={<Spinner />}>\n      <Routes>\n        <Route element={<DefaultLayout />}>\n          <Route path=\"/account/settings\" element={<Settings />} />\n          <Route path=\"/positions/:collateralSymbol/:poolId\" element={<Manage />} />\n          <Route path=\"/pools\" element={<Pools />} />\n          <Route path=\"/pools/:networkId/:poolId\" element={<Pool />} />\n          <Route path=\"/dashboard\" element={<Dashboard />} />\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Suspense>\n  );\n};\n","import { NETWORKS, appMetadata } from '@snx-v3/useBlockchain';\nimport injectedModule, { ProviderLabel } from '@web3-onboard/injected-wallets';\nimport trezorModule from '@web3-onboard/trezor';\nimport ledgerModule from '@web3-onboard/ledger';\nimport walletConnectModule from '@web3-onboard/walletconnect';\nimport gnosisModule from '@web3-onboard/gnosis';\nimport coinbaseModule from '@web3-onboard/coinbase';\nimport { init } from '@web3-onboard/react';\nimport type { ChainWithDecimalId } from '@web3-onboard/common';\n\n// Filter networks to only supported ones\nexport const chains: ChainWithDecimalId[] = Object.values(\n  NETWORKS.reduce((result, network) => {\n    if (!network.isSupported) {\n      return result;\n    }\n    if (network.id in result) {\n      // We cannot have duplicate chains, but we can have multiple deployments per chain\n      return result;\n    }\n    return Object.assign(result, {\n      [network.id]: {\n        id: network.id,\n        token: network.token,\n        label: network.label,\n        rpcUrl: network.rpcUrl(),\n        publicRpcUrl: network.publicRpcUrl,\n      },\n    });\n  }, {})\n);\n\nexport const onboard = init({\n  wallets: [\n    coinbaseModule(),\n    injectedModule({ displayUnavailable: [ProviderLabel.MetaMask, ProviderLabel.Trust] }),\n    trezorModule({\n      appUrl: 'https://liquidity.synthetix.eth.limo',\n      email: 'info@synthetix.io',\n    }),\n    ledgerModule({\n      projectId: 'd6eac005846a1c3be1f8eea3a294eed9',\n      walletConnectVersion: 2,\n    }),\n    walletConnectModule({\n      version: 2,\n      projectId: 'd6eac005846a1c3be1f8eea3a294eed9',\n      dappUrl: 'liquidity.synthetix.eth.limo',\n    }),\n    gnosisModule(),\n  ],\n  chains,\n  appMetadata: {\n    ...appMetadata,\n    name: 'Synthetix Liquidity',\n  },\n  accountCenter: {\n    desktop: {\n      enabled: false,\n    },\n    mobile: {\n      enabled: false,\n    },\n  },\n  notify: {\n    enabled: false,\n  },\n});\n","import { useEffect } from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport { ChakraProvider, extendTheme, useColorMode } from '@chakra-ui/react';\nimport { Fonts, theme } from '@synthetixio/v3-theme';\nimport { DEFAULT_QUERY_STALE_TIME } from '@snx-v3/constants';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools';\nimport { GasSpeedProvider } from '@snx-v3/useGasSpeed';\nimport { TermsModal } from '@snx-v3/TermsModal';\nimport { SESSION_STORAGE_KEYS } from '@snx-v3/constants';\nimport { Router } from './Router';\nimport { Web3OnboardProvider } from '@web3-onboard/react';\nimport Head from 'react-helmet';\nimport { onboard } from './utils/onboard';\nimport { Progress } from './utils/theme';\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchInterval: false, //  if queries needs refetching we should be explicit about it, given erc7412\n      staleTime: DEFAULT_QUERY_STALE_TIME,\n      refetchOnWindowFocus: false,\n      throwOnError: (e) => {\n        console.error(e);\n        return false;\n      },\n    },\n    mutations: {\n      throwOnError: (e) => {\n        console.error(e);\n        return false;\n      },\n    },\n  },\n});\n\nconst extendedTheme = extendTheme({\n  ...theme,\n  components: {\n    ...theme.components,\n    Progress,\n  },\n});\n\nfunction ColorMode() {\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  useEffect(() => {\n    if (colorMode === 'light') {\n      toggleColorMode();\n    }\n  }, [colorMode, toggleColorMode]);\n  return null;\n}\n\nexport const App = () => {\n  const TERMS_CONDITIONS_ACCEPTED =\n    localStorage.getItem(SESSION_STORAGE_KEYS.TERMS_CONDITIONS_ACCEPTED) === 'true';\n\n  return (\n    <>\n      <Head>\n        {/* open graph */}\n        <meta property=\"og:url\" content=\"https://liquidity.synthetix.eth.limo/\" />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:title\" content=\"Synthetix | Liquidity\" />\n        <meta\n          property=\"og:description\"\n          content=\"The Liquidity Layer of DeFi. Provide liquidity for the next generation of permissionless protocols\"\n        />\n        <meta property=\"og:image\" content=\"https://liquidity.synthetix.eth.limo/Liquidity.jpg\" />\n        <meta property=\"og:image:alt\" content=\"Synthetix | Liquidity\" />\n        <meta property=\"og:site_name\" content=\"\" />\n        {/* twitter */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:site\" content=\"@synthetix_io\" />\n        <meta name=\"twitter:creator\" content=\"@synthetix_io\" />\n        <meta name=\"twitter:image\" content=\"https://liquidity.synthetix.eth.limo/Liquidity.jpg\" />\n        <meta name=\"twitter:url\" content=\"https://liquidity.synthetix.eth.limo/\" />\n      </Head>\n      <QueryClientProvider client={queryClient}>\n        <Web3OnboardProvider web3Onboard={onboard}>\n          <ChakraProvider theme={extendedTheme}>\n            <ColorMode />\n            <Fonts />\n            <GasSpeedProvider>\n              <HashRouter>\n                <TermsModal\n                  defaultOpen={process.env.NODE_ENV !== 'development' && !TERMS_CONDITIONS_ACCEPTED}\n                />\n                <Router />\n              </HashRouter>\n            </GasSpeedProvider>\n            <ReactQueryDevtools />\n          </ChakraProvider>\n        </Web3OnboardProvider>\n      </QueryClientProvider>\n    </>\n  );\n};\n","import { ComponentMultiStyleConfig } from '@chakra-ui/react';\n\nexport const Progress: ComponentMultiStyleConfig = {\n  parts: ['filledTrack', 'track'],\n  baseStyle: {\n    track: {\n      overflow: 'unset',\n      bg: 'whiteAlpha.100',\n    },\n  },\n  variants: {\n    error: (props) => ({\n      filledTrack: {\n        bg: 'error',\n        boxShadow: `0px 0px 15px ${props.theme.colors.error}`,\n      },\n    }),\n    warning: (props) => ({\n      filledTrack: {\n        bg: 'warning',\n        boxShadow: `0px 0px 15px ${props.theme.colors.warning}`,\n      },\n    }),\n    success: (props) => ({\n      filledTrack: {\n        bg: 'success',\n        boxShadow: `0px 0px 15px ${props.theme.colors.success}`,\n      },\n    }),\n    'update-error': () => ({\n      filledTrack: {\n        bg: 'red.700',\n      },\n    }),\n    'update-warning': () => ({\n      filledTrack: {\n        bg: 'orange.700',\n      },\n    }),\n    'update-success': () => ({\n      filledTrack: {\n        bg: 'green.700',\n      },\n    }),\n    white: {\n      filledTrack: {\n        bg: 'white',\n        borderRadius: 'full',\n      },\n    },\n  },\n};\n","import ReactDOM from 'react-dom/client';\nimport { App } from './App';\n\nconst container = document.querySelector('#app');\n\nexport async function bootstrap() {\n  if (!container) {\n    throw new Error('Container #app does not exist');\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    const { Wei, wei } = await import('@synthetixio/wei');\n    const { ethers } = await import('ethers');\n    // @ts-ignore\n    window.devtoolsFormatters = window.devtoolsFormatters ?? [];\n    // @ts-ignore\n    window.devtoolsFormatters.push({\n      header: function (obj: any) {\n        if (obj instanceof ethers.BigNumber) {\n          return [\n            'div',\n            { style: 'color: #f33' },\n            ['span', {}, 'ethers.BigNumber('],\n            ['span', { style: 'color: #3f3' }, wei(obj).toString()],\n            ['span', {}, ')'],\n          ];\n        }\n        if (obj instanceof Wei) {\n          return [\n            'div',\n            { style: 'color: #f33' },\n            ['span', {}, 'Wei('],\n            ['span', { style: 'color: #3f3' }, obj.toString()],\n            ['span', {}, ')'],\n          ];\n        }\n        return null;\n      },\n      hasBody: function () {\n        return false;\n      },\n    });\n  }\n\n  const root = ReactDOM.createRoot(container);\n  root.render(<App />);\n}\n","import { Flex, Heading, Link } from '@chakra-ui/react';\nimport Head from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { Link as NavLink } from 'react-router-dom';\n\nexport const NotFoundPage = () => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Head>\n        <title>{t('not-found.page-title')}</title>\n      </Head>\n      <Flex\n        height=\"100%\"\n        direction=\"column\"\n        position=\"relative\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        flex=\"1\"\n      >\n        <Heading fontSize=\"5xl\">Not found</Heading>\n\n        <NavLink to=\"/\">\n          <Link color=\"cyan.500\">Return to Home</Link>\n        </NavLink>\n      </Flex>\n    </>\n  );\n};\n","import { Alert, AlertIcon, Button, Flex, Heading } from '@chakra-ui/react';\nimport { useAccounts } from '@snx-v3/useAccounts';\nimport { useWallet } from '@snx-v3/useBlockchain';\nimport { useParams } from '@snx-v3/useParams';\nimport { FC, useEffect, useState } from 'react';\n\nexport const WatchAccountBanner: FC = () => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const { activeWallet, connect } = useWallet();\n  const { accountId } = useParams();\n  const {\n    data: accounts,\n    isLoading: isAccountsLoading,\n    isFetching: isAccountsFetching,\n  } = useAccounts();\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoaded(true);\n    }, 200);\n  }, []);\n\n  if (!isLoaded) {\n    return null;\n  }\n\n  if (!activeWallet) {\n    return (\n      <Alert colorScheme=\"blue\" my=\"4\" borderRadius=\"6px\">\n        <AlertIcon />\n        <Flex flex={1} gap={4} alignItems=\"center\" justifyContent=\"space-between\">\n          <div>\n            {accountId && (\n              <Heading fontSize=\"16px\">You are currently watching Account #{accountId}</Heading>\n            )}\n            <Heading fontSize=\"14px\">\n              Please connect your wallet to open, manage or view positions.\n            </Heading>\n          </div>\n          <Button onClick={() => connect()}>Connect Wallet</Button>\n        </Flex>\n      </Alert>\n    );\n  }\n\n  if (!accountId) {\n    return null;\n  }\n\n  if (\n    !isAccountsFetching &&\n    !isAccountsLoading &&\n    !!accounts?.length &&\n    !accounts.find((a) => a === accountId)\n  ) {\n    return (\n      <Alert colorScheme=\"blue\" my=\"4\" borderRadius=\"6px\">\n        <AlertIcon />\n        <Flex>\n          <Heading fontSize=\"16px\">You are currently watching Account #{accountId}</Heading>\n        </Flex>\n      </Alert>\n    );\n  }\n\n  return null;\n};\n","import { Flex, Heading } from '@chakra-ui/react';\nimport { Helmet } from 'react-helmet';\nimport { PositionsList, StatsList } from '../components';\nimport { WatchAccountBanner } from '../components/WatchAccountBanner/WatchAccountBanner';\nimport { MAINNET, SEPOLIA, useNetwork } from '@snx-v3/useBlockchain';\nimport { MigrationBanner } from '../components/Migration/MigrationBanner';\n\nexport function Dashboard() {\n  const { network } = useNetwork();\n  return (\n    <>\n      <Helmet>\n        <title>Synthetix Liquidity V3</title>\n        <meta name=\"description\" content=\"Synthetix V3 - Dashboard\" />\n      </Helmet>\n      <Flex\n        pt={{\n          base: 2,\n          sm: 10,\n        }}\n        flexDir=\"column\"\n        mb={16}\n      >\n        {network && [MAINNET.id, SEPOLIA.id].includes(network.id) && (\n          <MigrationBanner network={network} type=\"alert\" />\n        )}\n\n        <Heading color=\"gray.50\" fontSize=\"1.5rem\" data-cy=\"liquidity-dashboard\">\n          Dashboard\n        </Heading>\n\n        <WatchAccountBanner />\n\n        <StatsList />\n        {/* Leave commented out for now */}\n        {/* <AssetsList /> */}\n        <PositionsList />\n      </Flex>\n    </>\n  );\n}\n","import { Flex, Heading, Text } from '@chakra-ui/react';\nimport { Helmet } from 'react-helmet';\nimport { PoolsList } from '../components/Pools';\n\nexport function Home() {\n  return (\n    <>\n      <Helmet>\n        <title>Synthetix Liquidity V3</title>\n        <meta name=\"description\" content=\"Synthetix V3 - Dashboard\" />\n      </Helmet>\n      <Flex overflow=\"auto\" flexDir=\"column\" mb={16}>\n        <Heading\n          mt={[6, 10]}\n          color=\"gray.50\"\n          maxWidth=\"20rem\"\n          fontSize={['2rem', '3rem']}\n          data-cy=\"liquidity-home\"\n          lineHeight=\"120%\"\n        >\n          The Liquidity Layer of DeFi\n        </Heading>\n        <Text color=\"gray.500\" fontSize=\"1rem\" lineHeight={6} fontFamily=\"heading\" mt=\"1rem\">\n          Provide liquidity for the next generation of permissionless protocols\n        </Text>\n        <PoolsList />\n      </Flex>\n    </>\n  );\n}\n","import { useQuery } from '@tanstack/react-query';\nimport { getSubgraphUrl } from '@snx-v3/constants';\nimport { z } from 'zod';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { useNetwork } from '@snx-v3/useBlockchain';\n\nconst GraphBigIntSchema = z.string().transform((src) => wei(src, 18, true));\nconst GraphBigDecimalSchema = z.string().transform((src) => wei(src, 18, true));\n\nconst calculateMarketPnl = (netIssuance: Wei, reportedDebt: Wei) =>\n  reportedDebt.add(netIssuance).mul(-1);\n\nexport const MarketSnapshotByWeekSchema = z\n  .object({\n    id: z.string(),\n    usd_deposited: GraphBigDecimalSchema,\n    usd_withdrawn: GraphBigDecimalSchema,\n    net_issuance: GraphBigDecimalSchema, // withdrawn - deposited\n    reported_debt: GraphBigDecimalSchema,\n    updated_at: z.string(),\n    updates_in_period: z.string(),\n  })\n  .transform((market) => ({\n    ...market,\n    pnl: calculateMarketPnl(market.net_issuance, market.reported_debt),\n  }));\n\nconst MarketSchema = z\n  .object({\n    id: z.string(),\n    address: z.string(),\n    usd_deposited: GraphBigDecimalSchema,\n    usd_withdrawn: GraphBigDecimalSchema,\n    net_issuance: GraphBigDecimalSchema, // withdrawn - deposited\n    reported_debt: GraphBigDecimalSchema,\n    updated_at: z.string(),\n    market_snapshots_by_week: z.array(MarketSnapshotByWeekSchema),\n  })\n  .transform((market) => ({\n    ...market,\n    pnl: calculateMarketPnl(market.net_issuance, market.reported_debt),\n  }));\n\nconst MarketConfigurationSchema = z.object({\n  id: z.string(), //PoolId-MarketId\n  market: MarketSchema,\n  weight: GraphBigIntSchema,\n  max_debt_share_value: GraphBigDecimalSchema,\n});\n\nconst RewardDistributorSchema = z.object({\n  id: z.string(),\n  total_distributed: z.string(),\n  rewards_distributions: z\n    .array(\n      z.object({\n        amount: z.string(),\n        duration: z.string(),\n        created_at: z.string(),\n      })\n    )\n    .default([]),\n});\n\nexport const PoolSchema = z.object({\n  id: z.string(),\n  name: z.union([z.string(), z.null()]).transform((name) => (name ? name : 'Unnamed Pool')),\n  total_weight: z.union([z.null(), GraphBigIntSchema]),\n  configurations: z.array(MarketConfigurationSchema),\n  registered_distributors: z.array(RewardDistributorSchema).default([]),\n});\n\nexport type PoolType = z.infer<typeof PoolSchema>;\n\nexport const PoolDataResultSchema = z.object({\n  data: z.object({\n    pool: z.union([PoolSchema, z.null()]),\n  }),\n});\n\nconst gql = (data: TemplateStringsArray) => data[0];\n\nconst PoolsDataDocument = gql`\n  query pool($id: String) {\n    pool(id: $id) {\n      id\n      name\n      registered_distributors(where: { isActive: true }) {\n        id\n        total_distributed\n        rewards_distributions(orderBy: created_at, orderDirection: desc) {\n          amount\n          duration\n          created_at\n        }\n      }\n      total_weight\n      configurations {\n        id\n        weight\n        max_debt_share_value\n        market {\n          id\n          address\n          usd_deposited\n          usd_withdrawn\n          net_issuance\n          reported_debt\n          updated_at\n          market_snapshots_by_week(first: 2, orderBy: updated_at, orderDirection: desc) {\n            id\n            usd_deposited\n            usd_withdrawn\n            net_issuance\n            reported_debt\n            updated_at\n            updates_in_period\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst getPoolData = async (chainName: string, id: string) => {\n  const url = getSubgraphUrl(chainName);\n\n  const res = await fetch(url, {\n    method: 'POST',\n    body: JSON.stringify({ query: PoolsDataDocument, variables: { id } }),\n  });\n\n  const json = await res.json();\n\n  if (json.errors) {\n    const { message } = json.errors[0];\n    throw new Error(message);\n  }\n\n  return PoolDataResultSchema.parse(json);\n};\n\nexport const usePoolData = (poolId?: string, networkName?: string) => {\n  const { network } = useNetwork();\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'PoolData', { pool: poolId }],\n    queryFn: async () => {\n      const name = networkName || network?.name;\n      if (!poolId || !name) throw Error('No poolId or networkId');\n      const poolData = await getPoolData(name, poolId);\n\n      if (!poolData.data.pool) {\n        throw Error(`Pool ${poolId} not found`);\n      }\n\n      return poolData.data.pool;\n    },\n    enabled: Boolean(poolId && parseInt(poolId) > 0),\n  });\n};\n","import { ArrowBackIcon } from '@chakra-ui/icons';\nimport { Button, Divider, Flex, Link, Skeleton, Text, useToast } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { ContractError } from '@snx-v3/ContractError';\nimport { parseUnits } from '@snx-v3/format';\nimport { getRepayerContract, getSpotMarketId, isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { Multistep } from '@snx-v3/Multistep';\nimport { useApprove } from '@snx-v3/useApprove';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useBorrow } from '@snx-v3/useBorrow';\nimport { CollateralType } from '@snx-v3/useCollateralTypes';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useGetWrapperToken } from '@snx-v3/useGetUSDTokens';\nimport { LiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { useRepay } from '@snx-v3/useRepay';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { useTokenBalance } from '@snx-v3/useTokenBalance';\nimport { useUndelegate } from '@snx-v3/useUndelegate';\nimport { useUndelegateBaseAndromeda } from '@snx-v3/useUndelegateBaseAndromeda';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { FC, ReactNode, useCallback, useContext, useEffect, useState } from 'react';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { LiquidityPositionUpdated } from '../Manage/LiquidityPositionUpdated';\n\nexport const ClosePositionTransactions: FC<{\n  onClose: () => void;\n  onBack: () => void;\n  poolId: string | undefined;\n  liquidityPosition: LiquidityPosition | undefined;\n  collateralType: CollateralType;\n}> = ({ collateralType, liquidityPosition, poolId, onClose, onBack }) => {\n  const [steps, setSteps] = useState<\n    {\n      title: ReactNode;\n      subtitle?: ReactNode;\n      cb: () => Promise<any>;\n    }[]\n  >([]);\n  const { setCollateralChange, setDebtChange } = useContext(ManagePositionContext);\n  const { data: systemToken } = useSystemToken();\n  const { data: balance } = useTokenBalance(systemToken?.address);\n  const { data: CoreProxy } = useCoreProxy();\n  const { network } = useNetwork();\n  const toast = useToast({ isClosable: true, duration: 9000 });\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n\n  const debtSymbol = isBase ? collateralType.symbol : systemToken?.symbol;\n  const collateralSymbol = collateralType.displaySymbol;\n\n  const [txState, setTxState] = useState({\n    step: 0,\n    status: 'idle',\n  });\n\n  const { data: wrapperToken } = useGetWrapperToken(\n    getSpotMarketId(liquidityPosition?.accountCollateral.symbol)\n  );\n\n  const collateralAddress = isBaseAndromeda(network?.id, network?.preset)\n    ? wrapperToken\n    : systemToken?.address;\n  const queryClient = useQueryClient();\n  const availableUSDCollateral = liquidityPosition?.usdCollateral.availableCollateral || ZEROWEI;\n  const amountToDeposit = (liquidityPosition?.debt || ZEROWEI).abs().sub(availableUSDCollateral);\n  const errorParserCoreProxy = useContractErrorParser(CoreProxy);\n\n  //repay approval\n  const { approve, requireApproval } = useApprove({\n    contractAddress: collateralAddress,\n    amount: amountToDeposit.gt(0) ? amountToDeposit.toBN() : '0',\n    spender: CoreProxy?.address,\n  });\n  const { exec: execRepay } = useRepay({\n    accountId: liquidityPosition?.accountId,\n    poolId: poolId,\n    collateralTypeAddress: collateralType?.tokenAddress,\n    debtChange: liquidityPosition?.debt.mul(-1) || ZEROWEI,\n    availableUSDCollateral,\n    balance,\n  });\n  const { exec: undelegate } = useUndelegate({\n    accountId: liquidityPosition?.accountId,\n    poolId: poolId,\n    collateralTypeAddress: liquidityPosition?.tokenAddress,\n    collateralChange: liquidityPosition?.collateralAmount.mul(-1) || ZEROWEI,\n    currentCollateral: liquidityPosition?.collateralAmount || ZEROWEI,\n  });\n\n  //repay approval for base\n  const {\n    approve: approveUSDC,\n    requireApproval: requireApprovalUSDC,\n    isLoading,\n  } = useApprove({\n    contractAddress: wrapperToken,\n    //slippage for approval\n    amount: parseUnits(liquidityPosition?.debt.abs().toString(), 6)\n      .mul(110)\n      .div(100),\n    spender: getRepayerContract(network?.id),\n  });\n  const { exec: undelegateBaseAndromeda } = useUndelegateBaseAndromeda({\n    accountId: liquidityPosition?.accountId,\n    poolId: poolId,\n    collateralTypeAddress: liquidityPosition?.tokenAddress,\n    collateralChange: liquidityPosition?.collateralAmount.mul(-1) || ZEROWEI,\n    currentCollateral: liquidityPosition?.collateralAmount || ZEROWEI,\n    liquidityPosition,\n  });\n\n  //claim\n  const { exec: execBorrow } = useBorrow({\n    accountId: liquidityPosition?.accountId,\n    poolId: poolId,\n    collateralTypeAddress: collateralType?.tokenAddress,\n    debtChange: liquidityPosition?.debt.mul(-1) || ZEROWEI,\n  });\n\n  const getSteps = useCallback(() => {\n    const transactions: {\n      title: ReactNode;\n      subtitle?: ReactNode;\n      cb: () => Promise<any>;\n    }[] = [];\n    if (!isBase) {\n      if (liquidityPosition?.debt.gt(0)) {\n        if (requireApproval) {\n          transactions.push({\n            title: `Approve ${systemToken?.symbol} transfer`,\n            cb: () => approve(false),\n          });\n        }\n        transactions.push({\n          title: 'Repay',\n          subtitle: (\n            <Text>\n              Repay{' '}\n              <Amount value={liquidityPosition?.debt.abs()} suffix={` ${systemToken?.symbol}`} />\n            </Text>\n          ),\n          cb: () => execRepay(),\n        });\n      } else if (liquidityPosition?.debt.lt(0)) {\n        transactions.push({\n          title: 'Claim',\n          subtitle: (\n            <Text>\n              Claim{' '}\n              <Amount value={liquidityPosition?.debt.abs()} suffix={` ${systemToken?.symbol}`} />\n            </Text>\n          ),\n          cb: () => execBorrow(),\n        });\n      }\n\n      transactions.push({\n        title: 'Unlock collateral',\n        subtitle: (\n          <Text as=\"div\">\n            <Amount\n              value={liquidityPosition?.collateralAmount || ZEROWEI}\n              suffix={` ${collateralSymbol}`}\n            />{' '}\n            will be unlocked from the pool.\n          </Text>\n        ),\n        cb: () => undelegate(),\n      });\n    } else {\n      if (liquidityPosition?.debt.gt(-0.00001)) {\n        if (requireApprovalUSDC) {\n          transactions.push({\n            title: `Approve ${debtSymbol} transfer`,\n            cb: () => approveUSDC(false),\n          });\n        }\n      }\n\n      transactions.push({\n        title: 'Unlock collateral',\n        subtitle: (\n          <Text as=\"div\">\n            <Amount\n              value={liquidityPosition?.collateralAmount || ZEROWEI}\n              suffix={` ${collateralSymbol}`}\n            />{' '}\n            will be unlocked from the pool.\n          </Text>\n        ),\n        cb: () => undelegateBaseAndromeda(),\n      });\n\n      if (liquidityPosition?.debt.lt(0)) {\n        transactions.push({\n          title: 'Claim',\n          subtitle: (\n            <Text>\n              Claim <Amount value={liquidityPosition?.debt.abs()} suffix={` ${debtSymbol}`} />\n            </Text>\n          ),\n          cb: () => execBorrow(),\n        });\n      }\n    }\n\n    return transactions;\n  }, [\n    approve,\n    approveUSDC,\n    collateralSymbol,\n    debtSymbol,\n    execBorrow,\n    execRepay,\n    isBase,\n    liquidityPosition?.collateralAmount,\n    liquidityPosition?.debt,\n    requireApproval,\n    requireApprovalUSDC,\n    systemToken?.symbol,\n    undelegate,\n    undelegateBaseAndromeda,\n  ]);\n\n  useEffect(() => {\n    if (!steps.length && !isLoading) {\n      setTxState({\n        step: 0,\n        status: 'idle',\n      });\n      setSteps(getSteps());\n    }\n  }, [getSteps, isLoading, steps.length]);\n\n  const isSuccess = txState.step >= steps.length;\n\n  const handleSubmit = useCallback(async () => {\n    try {\n      let i = txState.step > -1 ? txState.step : 0;\n\n      for (; i < steps.length; i++) {\n        setTxState({\n          step: i,\n          status: 'pending',\n        });\n\n        await steps[i].cb();\n      }\n\n      setTxState({\n        step: steps.length,\n        status: 'success',\n      });\n\n      queryClient.invalidateQueries({\n        queryKey: [`${network?.id}-${network?.preset}`, 'LiquidityPosition'],\n      });\n      queryClient.invalidateQueries({\n        queryKey: [`${network?.id}-${network?.preset}`, 'LiquidityPositions'],\n      });\n      queryClient.invalidateQueries({\n        queryKey: [`${network?.id}-${network?.preset}`, 'Allowance'],\n      });\n      queryClient.invalidateQueries({\n        queryKey: [`${network?.id}-${network?.preset}`, 'AccountSpecificCollateral'],\n      });\n      queryClient.invalidateQueries({\n        queryKey: [`${network?.id}-${network?.preset}`, 'TokenBalance'],\n      });\n      queryClient.invalidateQueries({\n        queryKey: [`${network?.id}-${network?.preset}`, 'AccountCollateralUnlockDate'],\n      });\n\n      setCollateralChange(ZEROWEI);\n      setDebtChange(ZEROWEI);\n    } catch (error) {\n      setTxState((state) => ({\n        step: state.step,\n        status: 'error',\n      }));\n\n      const contractError = errorParserCoreProxy(error);\n\n      if (contractError) {\n        console.error(new Error(contractError.name), contractError);\n      }\n      toast.closeAll();\n      toast({\n        title: 'Transaction failed',\n        variant: 'left-accent',\n        description: contractError ? (\n          <ContractError contractError={contractError} />\n        ) : (\n          'Please try again.'\n        ),\n        status: 'error',\n      });\n      throw Error('Transaction failed', { cause: error });\n    }\n  }, [\n    txState.step,\n    steps,\n    queryClient,\n    network?.id,\n    network?.preset,\n    setCollateralChange,\n    setDebtChange,\n    errorParserCoreProxy,\n    toast,\n  ]);\n\n  if (isSuccess) {\n    return (\n      <LiquidityPositionUpdated\n        onClose={onClose}\n        title=\"Position successfully Closed\"\n        subline={\n          <>\n            Your position has been successfully closed, read more about it in the{' '}\n            <Link\n              href=\"https://docs.synthetix.io/v/synthetix-v3-user-documentation\"\n              target=\"_blank\"\n              color=\"cyan.500\"\n            >\n              Synthetix V3 Documentation\n            </Link>\n          </>\n        }\n        alertText={<>Position successfully Closed</>}\n      />\n    );\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Text color=\"gray.50\" fontSize=\"sm\" fontWeight=\"700\">\n        <ArrowBackIcon cursor=\"pointer\" onClick={onBack} mr={2} />\n        Close Position\n      </Text>\n\n      <Divider mt={6} bg=\"gray.900\" />\n\n      {isLoading && !steps.length && <Skeleton width=\"100%\" height=\"78px\" mt=\"6\" />}\n      {steps.map((step, i) => (\n        <Multistep\n          key={i}\n          step={i + 1}\n          title={step.title}\n          subtitle={step.subtitle}\n          status={{\n            failed: txState.step === i && txState.status === 'error',\n            success: txState.step > i,\n            loading: txState.step === i && txState.status === 'pending',\n          }}\n        />\n      ))}\n\n      <Button isLoading={txState.status === 'pending'} onClick={handleSubmit} mt=\"6\">\n        {(() => {\n          switch (true) {\n            case txState.status === 'error':\n              return 'Retry';\n            case txState.status === 'pending':\n              return 'Processing...';\n            default:\n              return 'Execute Transaction';\n          }\n        })()}\n      </Button>\n    </Flex>\n  );\n};\n","import { ArrowBackIcon } from '@chakra-ui/icons';\nimport { Button, Divider, Flex, Text } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { LiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { useTokenPrice } from '@snx-v3/useTokenPrice';\nimport Wei from '@synthetixio/wei';\nimport { FC, useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { TokenIcon } from '../TokenIcon';\nimport { ClosePositionTransactions } from './ClosePositionTransactions';\n\nconst ClosePositionUi: FC<{\n  debt: Wei;\n  collateralAmount: Wei;\n  onClose: () => void;\n  onSubmit: () => void;\n  debtSymbol?: string;\n  collateralSymbol: string;\n}> = ({ onSubmit, debt, collateralAmount, collateralSymbol, onClose, debtSymbol }) => {\n  const debtPrice = useTokenPrice(debtSymbol);\n  const collateralPrice = useTokenPrice(collateralSymbol);\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Text color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n        <ArrowBackIcon cursor=\"pointer\" onClick={onClose} mr={2} />\n        Close Position\n      </Text>\n\n      <Divider my={5} bg=\"gray.900\" />\n\n      <Text color=\"gray.50\" fontSize=\"sm\" fontWeight=\"700\" mb={2}>\n        {debt.gt(0) ? 'Repay Debt' : 'Claim Profit'}\n      </Text>\n      <BorderBox display=\"flex\" flexDirection=\"column\" p={3} mb=\"6\">\n        <Flex alignItems=\"center\">\n          <Flex alignItems=\"flex-start\" flexDir=\"column\" gap={1}>\n            <BorderBox display=\"flex\" justifyContent=\"center\" alignItems=\"center\" py={1.5} px={2.5}>\n              <Text display=\"flex\" gap={2} alignItems=\"center\" fontWeight=\"600\">\n                <TokenIcon symbol={debtSymbol} width={16} height={16} />\n                {debtSymbol}\n              </Text>\n            </BorderBox>\n            <Flex fontSize=\"12px\" gap=\"1\" mr=\"3\">\n              <Text>{debt.gt(0) ? 'Debt:' : 'Max Claim'}</Text>\n              <Amount value={debt.abs()} />\n              <Text ml={0.5} color=\"gray.600\" fontWeight={700}>\n                Max\n              </Text>\n            </Flex>\n          </Flex>\n          <Flex flexGrow={1} flexDir=\"column\">\n            <NumberInput value={debt.abs()} disabled />\n            <Flex fontSize=\"xs\" color=\"whiteAlpha.700\" alignSelf=\"flex-end\" gap=\"1\">\n              {debtPrice.gt(0) && <Amount prefix=\"$\" value={debt.abs().mul(debtPrice)} />}\n            </Flex>\n          </Flex>\n        </Flex>\n      </BorderBox>\n\n      <Text color=\"gray.50\" fontSize=\"sm\" fontWeight=\"700\" mb={2}>\n        Unlock Collateral\n      </Text>\n      <BorderBox display=\"flex\" flexDirection=\"column\" p={3} mb=\"6\">\n        <Flex alignItems=\"center\">\n          <Flex alignItems=\"flex-start\" flexDir=\"column\" gap={1}>\n            <BorderBox display=\"flex\" justifyContent=\"center\" alignItems=\"center\" py={1.5} px={2.5}>\n              <Text display=\"flex\" gap={2} alignItems=\"center\" fontWeight=\"600\">\n                <TokenIcon symbol={collateralSymbol} width={16} height={16} />\n                {collateralSymbol}\n              </Text>\n            </BorderBox>\n            <Flex fontSize=\"12px\" gap=\"1\" mr=\"3\">\n              <Text>Locked:</Text>\n              <Amount value={collateralAmount} />\n              <Text ml={0.5} color=\"gray.600\" fontWeight={700}>\n                Max\n              </Text>\n            </Flex>\n          </Flex>\n          <Flex flexGrow={1} flexDir=\"column\">\n            <NumberInput value={collateralAmount} disabled />\n            <Flex fontSize=\"xs\" color=\"whiteAlpha.700\" alignSelf=\"flex-end\" gap=\"1\">\n              {collateralPrice.gt(0) && (\n                <Amount prefix=\"$\" value={collateralAmount.abs().mul(collateralPrice)} />\n              )}\n            </Flex>\n          </Flex>\n        </Flex>\n      </BorderBox>\n      <Button onClick={onSubmit} type=\"submit\">\n        Close Position\n      </Button>\n    </Flex>\n  );\n};\n\nexport const ClosePosition = ({\n  liquidityPosition,\n  onClose,\n}: {\n  liquidityPosition?: LiquidityPosition;\n  onClose: () => void;\n}) => {\n  const [transactionStep, setTransactions] = useState(false);\n  const { setCollateralChange, setDebtChange } = useContext(ManagePositionContext);\n  const params = useParams();\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { network } = useNetwork();\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n  const { data: systemToken } = useSystemToken();\n\n  useEffect(() => {\n    if (liquidityPosition) {\n      setDebtChange(liquidityPosition.debt.mul(-1));\n      setCollateralChange(liquidityPosition.collateralAmount.mul(-1));\n    }\n\n    return () => {\n      setDebtChange(ZEROWEI);\n      setCollateralChange(ZEROWEI);\n    };\n  }, [liquidityPosition, setCollateralChange, setDebtChange]);\n\n  if (!collateralType) {\n    return null;\n  }\n\n  return (\n    <>\n      {!transactionStep && (\n        <ClosePositionUi\n          debt={liquidityPosition?.debt || ZEROWEI}\n          collateralAmount={liquidityPosition?.collateralAmount || ZEROWEI}\n          onClose={onClose}\n          debtSymbol={isBase ? params.collateralSymbol : systemToken?.symbol}\n          collateralSymbol={collateralType.displaySymbol}\n          onSubmit={() => setTransactions(true)}\n        />\n      )}\n      {transactionStep && (\n        <ClosePositionTransactions\n          onBack={() => setTransactions(false)}\n          onClose={onClose}\n          collateralType={collateralType}\n          liquidityPosition={liquidityPosition}\n          poolId={params.poolId}\n        />\n      )}\n    </>\n  );\n};\n","import { Box, Divider, Flex, Skeleton } from '@chakra-ui/react';\nimport { FC } from 'react';\nimport { PositionTitle } from './PositionTitle';\nimport { BorderBox } from '@snx-v3/BorderBox';\n\nexport const ManageLoading: FC<{\n  collateralSymbol?: string;\n  poolName?: string;\n}> = ({ collateralSymbol, poolName }) => {\n  return (\n    <Box mb={12} mt={8}>\n      <Box px={[0, 6]}>\n        <PositionTitle collateralSymbol={collateralSymbol} poolName={poolName} isOpen />\n      </Box>\n      <Flex mt={6} flexDirection={['column', 'column', 'row']} gap={4}>\n        <BorderBox gap={4} flex={1} p={6} flexDirection=\"column\" bg=\"navy.700\" height=\"fit-content\">\n          <Skeleton maxW=\"100px\" width=\"100%\" height=\"20px\" />\n          <Flex gap={4}>\n            <BorderBox display=\"flex\" flexDir=\"column\" gap={2} p={4} flex={1} height=\"152px\">\n              <Skeleton width=\"100px\" height=\"20px\" />\n              <Skeleton width=\"100%\" height=\"28px\" />\n            </BorderBox>\n            <BorderBox display=\"flex\" flexDir=\"column\" gap={2} p={4} flex={1} height=\"152px\">\n              <Skeleton width=\"100px\" height=\"20px\" />\n              <Skeleton width=\"100%\" height=\"28px\" />\n            </BorderBox>\n          </Flex>\n\n          <BorderBox display=\"flex\" flexDir=\"column\" gap={2} p={4} flex={1} height=\"130px\">\n            <Skeleton width=\"100px\" height=\"20px\" />\n            <Skeleton width=\"100%\" height=\"28px\" maxW=\"300px\" />\n          </BorderBox>\n\n          <BorderBox display=\"flex\" flexDir=\"column\" gap={2} p={4} flex={1} height=\"130px\">\n            <Skeleton width=\"100px\" height=\"20px\" />\n            <Skeleton width=\"100%\" height=\"28px\" maxW=\"300px\" />\n          </BorderBox>\n        </BorderBox>\n\n        <BorderBox\n          flex={1}\n          maxW={['100%', '100%', '501px']}\n          p={6}\n          flexDirection=\"column\"\n          bg=\"navy.700\"\n          height=\"fit-content\"\n        >\n          <Skeleton maxW=\"232px\" width=\"100%\" height=\"20px\" />\n          <Divider my={6} />\n          <Skeleton maxW=\"232px\" width=\"100%\" height=\"20px\" />\n          <Skeleton mt={4} width=\"100%\" height=\"79px\" />\n          <Skeleton mt={6} width=\"100%\" height=\"48px\" />\n        </BorderBox>\n      </Flex>\n    </Box>\n  );\n};\n","import { InfoIcon } from '@chakra-ui/icons';\nimport { Box, Flex, Text } from '@chakra-ui/react';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { ManagePositionProvider } from '@snx-v3/ManagePositionContext';\nimport { Tooltip } from '@snx-v3/Tooltip';\nimport { Network, useNetwork, useWallet } from '@snx-v3/useBlockchain';\nimport { CollateralType, useCollateralType, useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { LiquidityPosition, useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { useParams } from '@snx-v3/useParams';\nimport { usePoolData } from '@snx-v3/usePoolData';\nimport { usePool } from '@snx-v3/usePoolsList';\nimport { FC, useMemo, useState } from 'react';\nimport {\n  ManageAction,\n  ManageStats,\n  NoPosition,\n  Rewards,\n  UnsupportedCollateralAlert,\n} from '../components';\nimport { ClosePosition } from '../components/ClosePosition/ClosePosition';\nimport { ManageLoading } from '../components/Manage/ManageLoading';\nimport { PositionTitle } from '../components/Manage/PositionTitle';\nimport { WatchAccountBanner } from '../components/WatchAccountBanner/WatchAccountBanner';\n\nfunction useNormalisedCollateralSymbol(collateralSymbol?: string) {\n  const { network } = useNetwork();\n\n  return useMemo(() => {\n    if (collateralSymbol !== 'USDC') {\n      return collateralSymbol;\n    }\n    if (!network?.id && network?.preset) {\n      return undefined;\n    }\n    return isBaseAndromeda(network?.id, network?.preset) && collateralSymbol === 'USDC'\n      ? 'sUSDC'\n      : collateralSymbol;\n  }, [network?.id, network?.preset, collateralSymbol]);\n}\n\nexport function useCollateralDisplayName(collateralSymbol?: string) {\n  const { network } = useNetwork();\n\n  return useMemo(() => {\n    if (!network?.id && network?.preset) {\n      return undefined;\n    }\n\n    if (!isBaseAndromeda(network?.id, network?.preset)) {\n      return collateralSymbol;\n    }\n\n    if (collateralSymbol?.toLowerCase() === 'susdc') {\n      return 'USDC';\n    }\n    if (collateralSymbol?.toLowerCase() === 'sstatausdc') {\n      return 'sStataUSDC';\n    }\n\n    return collateralSymbol;\n  }, [network?.id, network?.preset, collateralSymbol]);\n}\n\nexport const ManageUi: FC<{\n  collateralType?: CollateralType;\n  liquidityPosition?: LiquidityPosition;\n  network?: Network;\n  collateralSymbol?: string;\n  poolName?: string;\n  poolId?: string;\n}> = ({ collateralType, liquidityPosition, network, collateralSymbol, poolName, poolId }) => {\n  const [closePosition, setClosePosition] = useState(false);\n\n  const { data: poolData } = usePool(Number(network?.id), String(poolId));\n\n  const [txnModalOpen, setTxnModalOpen] = useState<ManageAction | undefined>(undefined);\n  const positionApr = poolData?.apr?.collateralAprs?.find(\n    (item: any) => item.collateralType.toLowerCase() === collateralType?.tokenAddress.toLowerCase()\n  );\n\n  return (\n    <Box mb={12} mt={8}>\n      <Flex\n        flexDir={['column', 'row']}\n        flexWrap=\"wrap\"\n        px={[0, 6]}\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        mb=\"8px\"\n        gap={4}\n      >\n        <PositionTitle\n          collateralSymbol={collateralSymbol}\n          poolName={poolName}\n          isOpen={false}\n          poolId={poolId}\n        />\n        {poolData && (\n          <Flex alignItems={['center', 'flex-end']} direction=\"column\">\n            <Tooltip label=\"APR is averaged over the trailing 28 days and is comprised of both performance and rewards\">\n              <Text\n                fontFamily=\"heading\"\n                fontSize=\"sm\"\n                lineHeight={5}\n                fontWeight=\"medium\"\n                color=\"gray.500\"\n              >\n                Estimated APR\n                <InfoIcon ml={1} mb=\"2px\" w=\"10px\" h=\"10px\" />\n              </Text>\n            </Tooltip>\n            <Text fontWeight=\"bold\" fontSize=\"20px\" color=\"white\" lineHeight=\"36px\">\n              {poolData && positionApr?.apr28d > 0\n                ? `${(positionApr.apr28d * 100).toFixed(2)?.concat('%')}`\n                : '-'}\n            </Text>\n          </Flex>\n        )}\n      </Flex>\n      <Flex mt={6} flexDirection={['column', 'column', 'row']} gap={4}>\n        <BorderBox gap={4} flex={1} p={6} flexDirection=\"column\" bg=\"navy.700\" height=\"fit-content\">\n          <ManageStats liquidityPosition={liquidityPosition} />\n          <Rewards />\n        </BorderBox>\n        {!closePosition && (\n          <Flex\n            maxW={['100%', '100%', '501px']}\n            flex={1}\n            alignSelf=\"flex-start\"\n            flexDirection=\"column\"\n          >\n            <BorderBox flex={1} p={6} flexDirection=\"column\" bg=\"navy.700\" height=\"fit-content\">\n              <ManageAction\n                liquidityPosition={liquidityPosition}\n                setTxnModalOpen={setTxnModalOpen}\n                txnModalOpen={txnModalOpen}\n              />\n            </BorderBox>\n            {liquidityPosition?.collateralAmount.gt(0) && !txnModalOpen && (\n              <Text\n                textAlign=\"center\"\n                cursor=\"pointer\"\n                onClick={() => setClosePosition(true)}\n                color=\"cyan.500\"\n                fontWeight={700}\n                mt=\"5\"\n              >\n                Close Position\n              </Text>\n            )}\n          </Flex>\n        )}\n\n        {closePosition && (\n          <BorderBox\n            flex={1}\n            maxW={['100%', '100%', '501px']}\n            p={6}\n            flexDirection=\"column\"\n            bg=\"navy.700\"\n            height=\"fit-content\"\n          >\n            <ClosePosition\n              liquidityPosition={liquidityPosition}\n              onClose={() => setClosePosition(false)}\n            />\n          </BorderBox>\n        )}\n      </Flex>\n    </Box>\n  );\n};\n\nexport const Manage = () => {\n  const { accountId, collateralSymbol: collateralSymbolRaw, poolId } = useParams();\n  const collateralSymbol = useNormalisedCollateralSymbol(collateralSymbolRaw);\n\n  const { network } = useNetwork();\n  const { activeWallet } = useWallet();\n\n  const { data: collateralType } = useCollateralType(collateralSymbolRaw);\n  const { data: poolData } = usePoolData(poolId);\n\n  const { data: liquidityPosition, isLoading: isLoadingPosition } = useLiquidityPosition({\n    tokenAddress: collateralType?.tokenAddress,\n    accountId,\n    poolId,\n  });\n\n  const collateralDisplayName = useCollateralDisplayName(collateralSymbol);\n  const { data: collateralTypes, isLoading: isLoadingCollaterals } = useCollateralTypes();\n\n  const notSupported =\n    !isLoadingCollaterals &&\n    poolData &&\n    collateralTypes?.length &&\n    collateralDisplayName &&\n    !collateralTypes.some((item) =>\n      [item.symbol.toUpperCase(), item.displaySymbol.toUpperCase()].includes(\n        collateralDisplayName.toUpperCase()\n      )\n    );\n\n  return (\n    <ManagePositionProvider>\n      <WatchAccountBanner />\n      {!!activeWallet && (\n        <>\n          <UnsupportedCollateralAlert isOpen={Boolean(notSupported)} />\n          {(!accountId ||\n            (!isLoadingPosition &&\n              liquidityPosition &&\n              liquidityPosition.collateralAmount.eq(0) &&\n              liquidityPosition.accountCollateral.availableCollateral.eq(0))) && (\n            <NoPosition liquidityPosition={liquidityPosition} />\n          )}\n          {accountId &&\n            ((!isLoadingPosition && liquidityPosition?.collateralAmount.gt(0)) ||\n              liquidityPosition?.accountCollateral?.availableCollateral.gt(0)) && (\n              <ManageUi\n                poolName={poolData?.name}\n                poolId={poolId}\n                liquidityPosition={liquidityPosition}\n                network={network}\n                collateralSymbol={collateralSymbol}\n                collateralType={collateralType}\n              />\n            )}\n          {isLoadingPosition && !!accountId && (\n            <ManageLoading poolName={poolData?.name} collateralSymbol={collateralSymbol} />\n          )}\n        </>\n      )}\n    </ManagePositionProvider>\n  );\n};\n","import { Link as ReactRouterLink, useLocation } from 'react-router-dom';\nimport { Link, LinkProps } from '@chakra-ui/react';\nimport { ArrowBackIcon } from '@chakra-ui/icons';\n\nexport const HomeLink = ({ ...props }: LinkProps) => {\n  const location = useLocation();\n\n  return (\n    <Link\n      px={3}\n      py={2}\n      width=\"fit-content\"\n      display=\"flex\"\n      alignItems=\"center\"\n      variant=\"outline\"\n      lineHeight=\"20px\"\n      color=\"white\"\n      borderRadius=\"4px\"\n      as={ReactRouterLink}\n      borderWidth=\"1px\"\n      borderColor=\"gray.900\"\n      _hover={{ textTransform: 'none', opacity: 0.9 }}\n      to={{\n        pathname: '/',\n        search: location.search,\n      }}\n      fontSize=\"sm\"\n      fontWeight={700}\n      mb={2}\n      {...props}\n    >\n      <ArrowBackIcon mr={1} /> All Pools\n    </Link>\n  );\n};\n","import { Box, Divider, Flex } from '@chakra-ui/react';\nimport { Helmet } from 'react-helmet';\nimport { PoolHeader, CollateralSection } from '../components';\nimport { useParams } from '@snx-v3/useParams';\nimport { HomeLink } from '@snx-v3/HomeLink';\nimport { usePool } from '@snx-v3/usePoolsList';\nimport { MAINNET, NETWORKS } from '@snx-v3/useBlockchain';\n\nexport const Pool = () => {\n  const { poolId, networkId } = useParams();\n\n  const { data: pool } = usePool(Number(networkId), String(poolId));\n  const network = NETWORKS.find((n) => n.id === Number(networkId));\n\n  const { poolInfo } = pool || {};\n\n  const title = poolInfo ? `Pool #${poolInfo[0].pool.id} / ${poolInfo[0].pool.name}` : 'Pool';\n\n  return (\n    <>\n      <Helmet>\n        <title>{title}</title>\n        <meta name=\"description\" content={title} />\n      </Helmet>\n      <>\n        <HomeLink mt={4} />\n        <PoolHeader mt={3} name={poolInfo && poolInfo[0].pool.name} network={network || MAINNET} />\n        <Divider my={6} bg=\"gray.900\" />\n        <Flex gap={4} mb={16}>\n          <Box w=\"100%\">\n            <CollateralSection />\n          </Box>\n        </Flex>\n      </>\n    </>\n  );\n};\n","import { Box } from '@chakra-ui/react';\nimport { PoolsList } from '../components/Pools';\n\nexport function Pools() {\n  return (\n    <Box mb={20} w=\"100%\">\n      <PoolsList />\n    </Box>\n  );\n}\n","const { safeLazy } = require('./safeLazy');\nconst { safeImport } = require('./safeImport');\nmodule.exports = {\n  safeLazy,\n  safeImport,\n};\n","const { lazy } = require('react');\nconst { safeImport } = require('./safeImport');\n\nfunction safeLazy(importer) {\n  return lazy(() => safeImport(importer));\n}\n\nmodule.exports = {\n  safeLazy,\n};\n"],"names":["async","importCoreProxy","chainId","preset","Error","deployment","Number","toFixed","default","meta","abi","Promise","all","address","contracts","CoreProxy","importMulticall3","TrustedMulticallForwarder","optimism","multicall3","importOracleManagerProxy","OracleManagerProxy","Amount","value","prefix","suffix","testid","showTooltip","formattedValue","preciseValue","isMaxUint","useMemo","eq","currency","cleanNumber","wei","replaceAll","constants","lte","toString","_jsx","Tooltip","label","_Fragment","children","_jsxs","isDisabled","BorderBox","props","Flex","bg","borderWidth","borderColor","borderRadius","defaultOpen","window","localStorage","CONTRACT_ERROR_OPEN","ContractError","contractError","isOpen","setIsOpen","React","Button","variant","onClick","color","fontWeight","fontStyle","Collapse","in","animateOpacity","Text","fontSize","name","whiteSpace","pl","Object","entries","args","map","key","val","Date","format","join","minimalWETHABI","Events","State","FailedSteps","ServiceNames","initialContext","wrapAmount","error","requireApproval","infiniteApproval","DepositMachine","createMachine","id","initial","predictableActionArguments","context","on","target","actions","assign","_","_context","event","states","cond","gt","invoke","src","onError","data","step","wrap","onDone","approve","deposit","c","DepositModalUi","collateralChange","onClose","collateralType","setInfiniteApproval","onSubmit","state","availableCollateral","poolName","title","txSummary","isProcessing","matches","isWETH","symbol","stepNumbers","LiquidityPositionUpdated","subline","Link","href","alertText","summary","ArrowBackIcon","cursor","mr","Divider","my","Multistep","subtitle","as","status","failed","disabled","success","loading","checkboxLabel","undefined","checkboxProps","isChecked","onChange","e","checked","gte","sub","width","mt","Boolean","DepositModal","liquidityPosition","setCollateralChange","useContext","ManagePositionContext","currentCollateral","collateralAmount","ZEROWEI","accountCollateral","setTxSummary","useState","currentDebt","navigate","useNavigate","collateralSymbol","poolId","accountId","useParams","queryClient","useQueryClient","network","useNetwork","useCoreProxy","SpotProxy","useSpotMarketProxy","useCollateralType","isBase","isBaseAndromeda","wrapperToken","useGetWrapperToken","getSpotMarketId","collateralAddress","tokenAddress","collateralNeeded","useApprove","contractAddress","amount","utils","decimals","spender","toast","useToast","isClosable","duration","newAccountId","Math","floor","random","exec","wrapEth","wethBalance","useWrapEth","signer","useSigner","ethCollateral","ethBalance","refetch","refetchETHBalance","useEthBalance","refetchWETHBalance","useTokenBalance","mutateAsync","isPending","useMutation","mutationFn","contract","Contract","txn","toBN","wait","useCallback","lt","isLoading","pool","usePool","execDeposit","useDeposit","collateralTypeAddress","txnState","dispatch","useReducer","reducer","initialState","collateralPriceUpdates","useAllCollateralPriceIds","gasSpeed","useGasSpeed","provider","useProvider","mutation","type","walletAddress","getAddress","createAccount","populateTransaction","BigNumber","from","parseUnits","delegate","delegateCollateral","add","callsPromise","filter","notNil","collateralPriceCallsPromise","fetchPriceUpdates","isTestnet","then","signedData","priceUpdatesToPopulatedTx","calls","gasPrices","collateralPriceCalls","getGasPrice","allCalls","concat","erc7412Tx","withERC7412","gasOptionsForTransaction","formatGasPriceForTransaction","gasLimit","sendTransaction","payload","txnHash","hash","settle","depositBaseAndromeda","useDepositBaseAndromeda","SpotMarketProxy","priceUpdateTx","useCollateralPriceUpdates","usdTokens","useGetUSDTokens","sUSD","spotMarketId","amountD18","synthAddress","synthContract","ethers","approveAbi","synthApproval","unshift","errorParserCoreProxy","useContractErrorParser","send","useMachine","services","console","closeAll","description","message","cause","debt","invalidateQueries","queryKey","resolve","wrapAmountString","isSuccessOrDeposit","useEffect","location","useLocation","handleClose","pathname","generatePath","search","txSummaryItems","items","ChangeStat","newValue","formatFn","hasChanges","abs","size","CRatioChangeStat","collateralPrice","debtChange","TransactionSummary","CheckIcon","createIcon","viewBox","path","fill","points","CloseIcon","d","StepIcon","Spinner","height","Box","__css","display","textAlign","statusColor","Step","minWidth","minHeight","justifyContent","alignItems","rounded","transitionProperty","transitionDuration","StepCheckbox","Checkbox","opacity","position","gap","p","border","direction","NUMBER_REGEX","cleanupNumber","float","parseFloat","toNumber","NumberInput","min","max","InputProps","dataTestId","inputValue","setInputValue","onInputChange","length","_value","isNaN","test","nextValue","_err","ref","useRef","current","setCustomValidity","Input","flex","outline","fontFamily","lineHeight","autoFocus","placeholder","_focus","boxShadow","_placeholder","_disabled","maxLength","ChakraTooltip","hasArrow","SUSDCIcon","Icon","clipPath","Logo","withText","EthereumIcon","fillOpacity","OptimismIcon","DollarCircle","fillRule","clipRule","ArbitrumIcon","cx","cy","r","FailedIcon","w","h","x","y","filterUnits","colorInterpolationFilters","floodOpacity","result","values","stdDeviation","mode","in2","WalletIcon","LogoIcon","BaseIcon","DiscordIcon","XIcon","transform","GithubIcon","WarpcastIcon","YoutubeIcon","Sparkles","SNXChainIcon","createContext","withdrawAmount","setDebtChange","setWithdrawAmount","ManagePositionProvider","Provider","calculateCRatio","collateralValue","div","LOCAL_STORAGE_KEYS","SHOW_TESTNETS","Wei","ONEWEI","GWEI_DECIMALS","GAS_LIMIT_MULTIPLIER","DEFAULT_QUERY_STALE_TIME","INFURA_KEY","getSubgraphUrl","networkName","getAprUrl","networkId","SESSION_STORAGE_KEYS","TERMS_CONDITIONS_ACCEPTED","offchainMainnetEndpoint","offchainTestnetEndpoint","etherscanLink","chain","isTx","requestedPriceUpdates","priceService","EvmPriceServiceConnection","getPriceFeedsUpdateData","priceFeedId","signedOffchainData","i","stalenessTolerance","encode","oracleAddresses","signedOffchainDatum","to","encodeFunctionData","prettyString","text","startLength","endLength","substring","options","minimumDigitsToShowAfterZeros","stringValue","numberValue","maximumFractionDigits","log10","toLocaleString","minimumFractionDigits","formatNumberToUsd","optionsWithDefault","style","locales","Intl","NumberFormat","formatNumber","formatPercent","getRepayerContract","toLowerCase","USDC_BASE_MARKET","STATA_BASE_MARKET","parseTxError","err","stringToHash","s","split","reduce","a","b","charCodeAt","modalOpen","txnStatus","action","loadAccountCollateral","tokenAddresses","callsP","flatMap","getAccountAvailableCollateral","getAccountCollateral","decoder","multicallEncoded","Array","isArray","interface","decodeFunctionResult","totalAssigned","totalDeposited","totalLocked","displaySymbol","useAccountCollateral","includeDelegationOff","collateralTypes","useCollateralTypes","useDefaultProvider","useAllCollateralPriceUpdates","systemToken","useSystemToken","useQuery","enabled","staleTime","queryFn","erc7412Call","find","useAccountSpecificCollateral","token","at","useAccountProxy","activeWallet","useWallet","AccountProxy","importAccountProxy","Infinity","useAccounts","accountAddress","numberOfAccountTokens","balanceOf","accountIndexes","keys","tokenOfOwnerByIndex","placeholderData","useCreateAccount","isWrite","client","useGasPrice","getTransactionCost","gasUnits","estimateGas","average","coins","fetch","json","baseFeePerGas","mul","price","tx","res","logs","forEach","log","topics","getEventTopic","decodeEventLog","NodeSchema","z","object","nodeType","number","parameters","string","parents","array","PythParametersSchema","ZodBigNumber","customNetwork","targetNetwork","Multicall3","useMulticall3","OracleProxy","providerForChain","useProviderForChain","signerOrProvider","withSigner","useOracleManagerProxy","collateralConfigs","deploymentsWithERC7412","includes","oracleNodeId","callData","returnData","callStatic","aggregate","decoded","bytes","nodeResp","parse","decode","parametersDecoded","seen","Set","item","has","AllowanceSchema","eventHandlers","allowance","refetchAllowance","useAllowance","sufficientAllowance","amountToAppove","gasPricesPromised","gasLimitPromised","populatedTxnPromised","populatedTxn","useApr","fetchApr","supportedAprNetworks","BASE_ANDROMEDA","ARBITRUM","MAINNET","isSupported","response","highestAprCollateral","sort","apr28d","combinedApr","cumulativePnl","collateralAprs","NetworkIcon","hexId","rpcUrl","DEFAULT_INFURA_KEY","publicRpcUrl","OPTIMISM","SEPOLIA","BASE_SEPOLIA","CANNON","OPTIMISM_SEPOLIA","ARBITRUM_SEPOLIA","ARBTHETIX","SNAX","SNAXTESTNET","NETWORKS","appMetadata","getItem","icon","logo","recommendedInjectedWallets","url","gettingStartedGuide","explore","wallet","conn","disconn","useConnectWallet","connect","disconnect","walletsInfo","accounts","connectedChain","setChain","useSetChain","n","setNetwork","newNetwork","useIsConnected","getSigner","useBorrow","mintUsd","DEBT_REPAYER_ABI","inputs","internalType","outputs","stateMutability","useClearDebt","availableUSDCollateral","collateralPriceIds","repayer","depositDebtToRepay","burn","burnUsd","importExtras","extras","importPythERC7412Wrapper","PythERC7412Wrapper","getAllPriceIdsEntries","String","startsWith","endsWith","getPythFeedIds","_key","getPriceUpdates","priceIds","erc7412Interface","ERC7412_ABI","pythFeedIds","refetchInterval","useOfflinePrices","collaterals","collateral","stables","filteredCollaterals","collateralsWithPriceId","collateralList","networksOffline","flat","deduped","priceId","replace","toUpperCase","getPythFeedIdsFromCollateralList","prices","getLatestPriceFeeds","col","getPriceUnchecked","push","expo","multicallAddress","multiCallAbi","multicallInterface","pythInterface","txs","requireSuccess","getPricesTx","call","decodedMultiCall","outdatedPriceIds","PriceSchema","loadPrices","collateralAddresses","getCollateralPrice","encoded","pricesEncoded","useCollateralPrices","collateralData","connectedProvider","offlineProvider","pos","indexOf","acc","CollateralConfigurationSchema","depositingEnabled","boolean","issuanceRatioD18","liquidationRatioD18","liquidationRewardD18","minDelegationD18","extend","loadCollateralTypes","tokenConfigsRaw","collateralTokens","importCollateralTokens","config","query","isFetching","isCollateralTypesFetching","getCollateralType","errorData","contractAbi","full","errorParsed","parseError","errorArgs","fromEntries","parseInt","unwei","getTime","signature","BalanceSchema","getBalance","GAS_LIMIT_BUFFER","addGasLimitBuffer","gasPrice","_baseFeePerGas","gasPriceToReturn","isNumber","subject","ema","dma","alpha","noHead","slice","noArrayWeight","ret","datum","o","rewardsFilterOutliers","blocksRewards","outlierBlocks","rewardIndex","index","reward","feeSuggestion","fromBlock","defaultForLocalProvider","maxFeePerGas","maxPriorityFeePerGas","fast","fastest","feeHistory","feeHistoryResponse","num","getOutlierBlocksToRemove","blocks","gweiReward","blocksRewardsPerc15","blocksRewardsPerc30","blocksRewardsPerc45","emaPerc15","emaPerc30","emaPerc45","averageMaxPriorityFee","fastMaxPriorityFee","fastestMaxPriorityFee","baseFeeToMax","base","prio","getBlock","getGasPriceFromProvider","GasSpeedContext","setGasSpeed","GasSpeedProvider","SpotMarket","USDC","getWrapper","wrapCollateralType","snxUSD","marketId","importLegacyMarket","LegacyMarketProxy","useLegacyMarket","lmAddress","lmAbi","PositionCollateralSchema","optional","DebtSchema","loadPosition","getPositionCollateral","getPositionDebt","decodedCollateral","decodedDebt","useLiquidityPosition","priceUpdateTxHash","priceCalls","priceDecoder","positionCalls","positionDecoder","accountCollateralCalls","accountCollateralDecoder","endOfPrice","startOfPosition","endOfPosition","startOfAccountCollateral","decodedPosition","usdCollateral","useOraclePrice","nodeId","retry","process","getDefaultFromAddress","node","timestamp","cleanObject","params","cleaned","pathParams","useParamsRouter","queryParams","useSearchParams","sortObject","searchParams","localeCompare","PoolIdSchema","PoolSchema","isPreferred","PoolsSchema","usePools","prefferedPoolId","approvedPoolIds","getPreferredPool","getApprovedPools","incompletePools","poolNames","getPoolName","poolsRaw","usePoolsList","pools","aprs","toros","fetchPoolsList","fetchAprs","fetchTorosPool","synthetixPools","apr","poolInfo","supportedNetworks","method","headers","body","JSON","stringify","variables","tvl","compactInteger","fund","totalValue","apy","monthly","urls","PoolsListData","vaults","useRepay","debtChangeAbs","amountToDeposit","useRewardsDistributors","rewardsDistributors","importRewardsDistributors","importSpotMarketProxy","importSystemToken","assertAddressType","fetchTokenBalance","useTokenBalances","addresses","defaultProvider","useTokenBalanceForChain","useTokenPrice","pythCollateralPrices","omCollateralPrices","collateralPrices","oracleId","omPrices","importUSDProxy","USDProxy","useUSDProxy","useUSDProxyForChain","useUndelegate","useUndelegateBaseAndromeda","debtExists","transactions","importV2x","V2x","useV2xSynthetix","v2xAddress","v2xAbi","importAllErrors","cache","PYTH_ERRORS","fetchOffchainData","func","oracleQuery","logLabel","OracleQuerySchema","tuple","updateType","cacheDuration","bypassCache","funcArgs","cacheKey","currentTime","now","cacheItem","withMemoryCache","makeMulticall","senderAddr","encodedData","allowFailure","transaction","newError","content","reason","AllErrors","AllErrorsInterface","chainName","_from","initialMulticallLength","multicallCalls","some","jsonRpcProvider","isRead","CoryProxyInfo","CoreProxyInterface","rest","parseTransaction","$","unnamedArgs","initialCall","multicallTxn","parsedError","oracleAddress","ignoreCache","signedRequiredData","newTransactionRequest","splice","errorResult","viem","errorName","_error","requiredFee","txToUpdate","txRequests","multicallAbi","reqs","txRequest","newCall","custom","isBigNumber","SmallIntSchema","WeiSchema","badgeColors","colorScheme","warning","CRatioBadge","liquidationCratio","targetCratio","cRatio","getHealthVariant","Badge","ratioIsMaxUInt","ratio","MAX_SAFE_INTEGER","getProgressSize","flexDir","Heading","Alert","PositionTitle","collateralDisplayName","useCollateralDisplayName","TokenIcon","ml","_hover","useV2sUSD","v2xSynthetix","synths","StepIntro","onConfirm","setAmount","loaded","setLoaded","v2_sUSD","v2_balance","v3_sUSD","v3_balance","VStack","flexDirection","py","px","flexGrow","isRequired","AlertIcon","AlertDescription","styles","sm","md","lg","withColor","ArrowForwardIcon","StepSuccess","v2Balance","v3Balance","spacing","mb","ArrowUpIcon","MigrateUSDTransaction","onSuccess","onBack","legacyMarket","txState","setTxState","migrate","isSuccess","setIsLoading","setIsSuccess","convertUSD","useMigrateUSD","StepSuccessFinal","Image","maxWidth","alt","MigrateUSDModal","setStep","handleConfirm","URLSearchParams","set","Modal","closeOnOverlayClick","ModalOverlay","ModalContent","CloseButton","ModalBody","pt","align","List","ListItem","ListIcon","Spacer","StepExplain","xmlns","origin","isExternal","useV2Position","balance","cratio","transferableSynthetix","debtBalanceOf","collateralisationRatio","toolTipLabel","setTooltipLabel","closeOnClick","CopyIcon","navigator","clipboard","writeText","setTimeout","StepSummary","snxCollateral","isUnderstanding","setIsUnderstanding","signerAddress","feeData","getFeeData","useMigrate","rates","mainnetProvider","ExchangeRates","ratesForCurrencies","formatBytes32String","snx","eth","useRates","snxPrice","ethPrice","handleSubmit","background","HStack","InfoIcon","currentTarget","formatEther","textDecoration","MigrationDialog","textTransform","pb","MigrationBanner","setAccountId","isUSDModalOpen","setIsUSDModalOpen","currentNetwork","convert","get","delete","Fade","flexWrap","maxW","rel","borderLeftColor","VaultCollateralSchema","VaultDebtSchema","CollateralSectionUi","vaultsData","isAprLoading","isVaultsLoading","totalCollateral","totalDebt","zeroValues","calculateVaultTotals","isInTotalProfit","padding","Skeleton","startColor","endColor","isLoaded","formatApr","TableContainer","sx","borderCollapse","borderSpacing","Table","Thead","Tr","Th","borderBottom","letterSpacing","Tbody","borderBottomColor","borderBottomWidth","vaultCollateral","collateralApr","apr28dRewards","apr28dPnl","isInProfit","borderTopWidth","borderTopColor","Td","stopPropagation","CollateralSection","useVaultsData","tokens","collateralCallsP","getVaultCollateral","debtCallsP","getVaultDebt","collateralPriceUpdateCallsP","multicallResult","collateralResult","debtResult","debtBytes","aprData","BaseCollateralTypes","ArbitrumCollateralTypes","allCollaterals","Specifics","isToros","PoolRow","balanceAddress","buttonText","right","bottom","collateralDeposited","minW","PoolCard","mainnets","ChainFilter","activeChains","isAllActive","isActive","toggle","supportedCollateralTypes","CollateralFilter","activeCollateral","TorosPoolCard","LinkOffIcon","PoolCardsLoading","Balloon","stroke","strokeWidth","mask","PoolsList","poolsReducer","isPoolsListLoading","isBaseCollateralLoading","isArbCollateralLoading","MainnetCollateralTypes","isMainCollateralLoading","isLoadingCollateralPrices","stata","stataPrice","isStataPriceLoading","ArbitrumRewards","isArbitrumRewardsLoading","BaseRewards","isBaseRewardsLoading","MainRewards","isMainRewardsLoading","showToros","filteredPools","collateral_type","total_amount_deposited","isCollateralFiltered","allCollateralPrices","overflowX","rewardsPayoutTokens","payoutToken","PoolHeader","Tag","charAt","fallbackSrc","justify","SynthSkeleton","SynthCircle","SkeletonCircle","useAccountCollateralUnlockDate","lastInteraction","accountTimeoutWithdraw","getAccountLastInteraction","getConfigUint","collateralUnlock","CollateralAlert","tokenBalance","UnsupportedCollateralAlert","ModalHeader","RewardsResponseSchema","distributorAddress","claimableAmount","instanceof","lifetimeClaimed","RewardsDataDocument","RewardsDistributionsDocument","useRewards","filteredDistributors","distributor","isRegistered","distributorsCacheKey","distributors","historicalData","metaData","getAvailableRewards","multicallData","amounts","sortedBalances","historicalClaims","rewardsClaimeds","distributions","rewardsDistributions","RewardsLoading","pr","truncateAddress","first","last","WithdrawIncrease","RewardsModal","CircularProgress","isIndeterminate","borderTop","RewardsRow","claimRewards","claimedAmount","useClaimRewards","backgroundImage","Rewards","rewards","hasRewards","StatBox","keyBy","useLiquidityPositions","collateralPriceUpdatesIsLoading","positionCallsAndData","availableCollateralCalls","singlePositionDecoder","pricesByAddress","positionData","availableCollaterals","availableCollateralByAddress","StatsList","positions","isLiquidityPositionLoading","isCollateralTypesLoading","accountCollaterals","isAccountCollateralsLoading","userTokenBalances","tokenBalancesIsLoading","associatedUserBalances","isCollateralPricesLoading","assets","USDCAddress","filteredAccountCollaterals","calculateAssets","prev","cur","calculateDebt","totalAssets","asset","calculateTotalAssetsAvailable","calculateTotalAssetsLocked","useWithdrawTimer","accountCollateralUnlockDate","isLoadingDate","minutes","hours","seconds","isRunning","restart","useTimer","expiryTimestamp","autoStart","CRatioAmount","DebtAmount","showPNL","PositionRow","final","rewardsData","handleNavigate","curr","TimeIcon","PositionsRowLoading","rows","row","PositionsTable","PositionTableHeader","TableDivider","positionApr","systemTokenSymbol","PositionsEmpty","PositionsNotConnected","PositionsList","positionsByKey","isLiquidityPositionsLoading","isSystemTokenLoading","positionsIds","calculatePositions","parsedPositions","validatePosition","targetCRatio","newDebt","newCollateralAmount","newCollateralValue","newCRatio","maybeMaxDebt","maxDebt","isValid","Borrow","actualMaxDebt","mx","useTransferableSynthetix","snxAddress","transferable","DepositUi","snxBalance","minDelegation","combinedTokenBalance","maxAmount","overAvailableBalance","alignSelf","Deposit","transferrableSnx","Withdraw","isDebtWithdrawal","systemTokenBalance","maxWithdrawable","unlockDate","COLLATERALACTIONS","link","RepayModal","lazy","safeImport","BorrowModal","ClaimModal","UndelegateModal","WithdrawModal","ManageActionSchema","enum","getInitialTab","manageAction","aciton","ManageAction","setTxnModalOpen","txnModalOpen","parsedActionParam","safeParse","parsedAction","isFormValid","preventDefault","reportValidity","setActiveAction","tab","setTab","debtActions","DEBTACTIONS","Tabs","isFitted","TabList","Tab","TabPanels","TabPanel","minH","Claim","Repay","Undelegate","Suspense","fallback","account","LineWithText","left","tooltipText","top","margin","CRatioBarUi","currentCRatio","newCratio","newBarSize","currentBarSize","Progress","TriangleDownIcon","TriangleUpIcon","CRatioBar","PnlStats","DebtStats","CollateralStats","ManageStatsUi","ManageStats","InitialDepositUi","hasAccount","UnorderedList","InitialDeposit","submit","NoPosition","RepayAllDebt","snxUSDBalance","neg","sufficientBalance","execRepay","settleRepay","approvalLoading","MarketConfigurationSchema","weight","maxDebtShareValue","isLocked","PoolConfigurationSchema","markets","isAnyMarketLocked","isLockedSchema","UndelegateUi","isLoadingRequiredData","onMaxClick","leftoverCollateral","isValidLeftover","isInputDisabled","isSubmitDisabled","AlertTitle","poolConfiguration","getPoolConfiguration","maxDebtShareValueD18","weightD18","m","isMarketCapacityLocked","market","usePoolConfiguration","minCollateralRequired","ClaimUi","maxClaimble","gradients","grey","dark","orange","defaultProps","variants","solid","defineStyle","_active","bgGradient","hoverBg","activeBg","ghost","theme","extendTheme","useSystemColorMode","initialColorMode","colors","gray","red","yellow","green","blue","cyan","purple","pink","navy","shadows","fonts","heading","mono","components","Popover","responsive","popper","focusBorderColor","errorBorderColor","Select","iconColor","container","borderInlineStartColor","Textarea","baseStyle","control","_checked","_invalid","Radio","subtle","Accordion","filledTrack","track","_selected","Switch","Menu","parts","button","span","list","bgColor","_first","borderTopLeftRadius","borderTopRightRadius","_last","borderBottomLeftRadius","borderBottomRightRadius","textStyles","sizes","xs","xl","global","Fonts","Global","TermsModal","setOpen","setEnabled","onScroll","scrollTop","scrollHeight","offsetHeight","overflow","backgroundColor","_focusVisible","ReactRouterLink","setItem","useLocalStorage","initialValue","storedValue","setStoredValue","valueToStore","Function","testnets","NetworkController","activeNetwork","isAccountsLoading","isAccountsFetching","showTestnets","setShowTestnets","defaultWallet","autoSelect","disableModals","lastUsedAccount","notConnected","notSupported","MenuButton","MenuList","MenuItem","MenuOptionGroup","placement","userSelect","ens","removeItem","IconButton","SettingsIcon","mutate","leftIcon","MigrateUSDButton","Header","useDisclosure","Container","RouterLink","_activeLink","Footer","DefaultLayout","Outlet","useManagePermissions","existing","selected","multicall","grants","revokes","getPermissionDiff","permission","grantCalls","revokeCalls","aggregate3","Address","ExternalLinkIcon","permissionsList","useAccountPermissions","getAccountPermissions","user","permissions","useAccountOwner","ownerOf","PermissionsInfo","PermissionModal","existingPermissions","setAddress","selectedPermissions","setSelectedPermissions","permissionData","accountOwner","isAddressValid","ModalCloseButton","trim","isInvalid","ModalFooter","PermissionRow","currentPermissions","isOwner","isPermissionOpen","onPermissionClose","onOpen","onPermissionOpen","removePermissions","EditIcon","DeleteIcon","TransferOwnershipModal","owner","setTo","transferFrom","useTransferAccountId","isTargetValid","PermissionTableLoading","PermissionTable","refetchAccounts","isTransferOpen","onTransferClose","onTransferOpen","loadingOwner","refetchAccountOwner","DelegationIcon","Permissions","Settings","isConnected","Helmet","Router","Routes","Route","element","Manage","Pools","Pool","Dashboard","Home","NotFoundPage","chains","onboard","init","wallets","coinbaseModule","injectedModule","displayUnavailable","ProviderLabel","MetaMask","Trust","trezorModule","appUrl","email","ledgerModule","projectId","walletConnectVersion","walletConnectModule","version","dappUrl","gnosisModule","accountCenter","desktop","mobile","notify","QueryClient","defaultOptions","queries","refetchOnWindowFocus","throwOnError","mutations","extendedTheme","update-error","update-warning","update-success","white","ColorMode","colorMode","toggleColorMode","useColorMode","App","Head","property","QueryClientProvider","Web3OnboardProvider","web3Onboard","ChakraProvider","HashRouter","ReactQueryDevtools","document","querySelector","bootstrap","ReactDOM","render","t","useTranslation","NavLink","WatchAccountBanner","setIsLoaded","GraphBigIntSchema","GraphBigDecimalSchema","calculateMarketPnl","netIssuance","reportedDebt","MarketSnapshotByWeekSchema","usd_deposited","usd_withdrawn","net_issuance","reported_debt","updated_at","updates_in_period","pnl","MarketSchema","market_snapshots_by_week","max_debt_share_value","RewardDistributorSchema","total_distributed","rewards_distributions","created_at","union","null","total_weight","configurations","registered_distributors","PoolDataResultSchema","PoolsDataDocument","usePoolData","poolData","errors","getPoolData","ClosePositionTransactions","steps","setSteps","debtSymbol","undelegate","approveUSDC","requireApprovalUSDC","undelegateBaseAndromeda","execBorrow","getSteps","cb","ClosePositionUi","debtPrice","ClosePosition","transactionStep","setTransactions","ManageLoading","ManageUi","closePosition","setClosePosition","collateralSymbolRaw","useNormalisedCollateralSymbol","isLoadingPosition","isLoadingCollaterals","HomeLink","safeLazy","module","exports","importer"],"sourceRoot":""}