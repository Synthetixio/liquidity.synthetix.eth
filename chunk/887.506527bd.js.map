{"version":3,"file":"chunk/887.506527bd.js","mappings":"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","sources":["webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/formatters/formatter.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/formatters/transaction.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/formatters/block.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/formatters/transactionReceipt.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/formatters/log.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/op-stack/formatters.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/errors/cursor.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/cursor.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/encoding/toRlp.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/errors/transaction.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/blob/blobsToCommitments.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/blob/blobsToProofs.js","webpack://@snx-v3/liquidity/../../node_modules/viem/node_modules/@noble/hashes/esm/_sha2.js","webpack://@snx-v3/liquidity/../../node_modules/viem/node_modules/@noble/hashes/esm/sha256.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/blob/commitmentToVersionedHash.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/hash/sha256.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/constants/blob.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/constants/kzg.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/errors/blob.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/blob/toBlobSidecars.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/blob/toBlobs.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/data/trim.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/errors/chain.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/constants/unit.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/unit/formatGwei.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/unit/formatUnits.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/errors/node.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/transaction/assertTransaction.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/transaction/serializeAccessList.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/transaction/serializeTransaction.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/transaction/getTransactionType.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/blob/commitmentsToVersionedHashes.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/op-stack/chainConfig.js","webpack://@snx-v3/liquidity/../../op-stack/contracts.ts","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/op-stack/serializers.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/chain/defineChain.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/chains/definitions/optimism.js"],"sourcesContent":["export function defineFormatter(type, format) {\n    return ({ exclude, format: overrides, }) => {\n        return {\n            exclude,\n            format: (args) => {\n                const formatted = format(args);\n                if (exclude) {\n                    for (const key of exclude) {\n                        delete formatted[key];\n                    }\n                }\n                return {\n                    ...formatted,\n                    ...overrides(args),\n                };\n            },\n            type,\n        };\n    };\n}\n//# sourceMappingURL=formatter.js.map","import { hexToNumber } from '../encoding/fromHex.js';\nimport { defineFormatter } from './formatter.js';\nexport const transactionType = {\n    '0x0': 'legacy',\n    '0x1': 'eip2930',\n    '0x2': 'eip1559',\n    '0x3': 'eip4844',\n};\nexport function formatTransaction(transaction) {\n    const transaction_ = {\n        ...transaction,\n        blockHash: transaction.blockHash ? transaction.blockHash : null,\n        blockNumber: transaction.blockNumber\n            ? BigInt(transaction.blockNumber)\n            : null,\n        chainId: transaction.chainId ? hexToNumber(transaction.chainId) : undefined,\n        gas: transaction.gas ? BigInt(transaction.gas) : undefined,\n        gasPrice: transaction.gasPrice ? BigInt(transaction.gasPrice) : undefined,\n        maxFeePerBlobGas: transaction.maxFeePerBlobGas\n            ? BigInt(transaction.maxFeePerBlobGas)\n            : undefined,\n        maxFeePerGas: transaction.maxFeePerGas\n            ? BigInt(transaction.maxFeePerGas)\n            : undefined,\n        maxPriorityFeePerGas: transaction.maxPriorityFeePerGas\n            ? BigInt(transaction.maxPriorityFeePerGas)\n            : undefined,\n        nonce: transaction.nonce ? hexToNumber(transaction.nonce) : undefined,\n        to: transaction.to ? transaction.to : null,\n        transactionIndex: transaction.transactionIndex\n            ? Number(transaction.transactionIndex)\n            : null,\n        type: transaction.type\n            ? transactionType[transaction.type]\n            : undefined,\n        typeHex: transaction.type ? transaction.type : undefined,\n        value: transaction.value ? BigInt(transaction.value) : undefined,\n        v: transaction.v ? BigInt(transaction.v) : undefined,\n    };\n    transaction_.yParity = (() => {\n        // If `yParity` is provided, we will use it.\n        if (transaction.yParity)\n            return Number(transaction.yParity);\n        // If no `yParity` provided, try derive from `v`.\n        if (typeof transaction_.v === 'bigint') {\n            if (transaction_.v === 0n || transaction_.v === 27n)\n                return 0;\n            if (transaction_.v === 1n || transaction_.v === 28n)\n                return 1;\n            if (transaction_.v >= 35n)\n                return transaction_.v % 2n === 0n ? 1 : 0;\n        }\n        return undefined;\n    })();\n    if (transaction_.type === 'legacy') {\n        delete transaction_.accessList;\n        delete transaction_.maxFeePerBlobGas;\n        delete transaction_.maxFeePerGas;\n        delete transaction_.maxPriorityFeePerGas;\n        delete transaction_.yParity;\n    }\n    if (transaction_.type === 'eip2930') {\n        delete transaction_.maxFeePerBlobGas;\n        delete transaction_.maxFeePerGas;\n        delete transaction_.maxPriorityFeePerGas;\n    }\n    if (transaction_.type === 'eip1559') {\n        delete transaction_.maxFeePerBlobGas;\n    }\n    return transaction_;\n}\nexport const defineTransaction = /*#__PURE__*/ defineFormatter('transaction', formatTransaction);\n//# sourceMappingURL=transaction.js.map","import { defineFormatter } from './formatter.js';\nimport { formatTransaction } from './transaction.js';\nexport function formatBlock(block) {\n    const transactions = block.transactions?.map((transaction) => {\n        if (typeof transaction === 'string')\n            return transaction;\n        return formatTransaction(transaction);\n    });\n    return {\n        ...block,\n        baseFeePerGas: block.baseFeePerGas ? BigInt(block.baseFeePerGas) : null,\n        blobGasUsed: block.blobGasUsed ? BigInt(block.blobGasUsed) : undefined,\n        difficulty: block.difficulty ? BigInt(block.difficulty) : undefined,\n        excessBlobGas: block.excessBlobGas\n            ? BigInt(block.excessBlobGas)\n            : undefined,\n        gasLimit: block.gasLimit ? BigInt(block.gasLimit) : undefined,\n        gasUsed: block.gasUsed ? BigInt(block.gasUsed) : undefined,\n        hash: block.hash ? block.hash : null,\n        logsBloom: block.logsBloom ? block.logsBloom : null,\n        nonce: block.nonce ? block.nonce : null,\n        number: block.number ? BigInt(block.number) : null,\n        size: block.size ? BigInt(block.size) : undefined,\n        timestamp: block.timestamp ? BigInt(block.timestamp) : undefined,\n        transactions,\n        totalDifficulty: block.totalDifficulty\n            ? BigInt(block.totalDifficulty)\n            : null,\n    };\n}\nexport const defineBlock = /*#__PURE__*/ defineFormatter('block', formatBlock);\n//# sourceMappingURL=block.js.map","import { hexToNumber } from '../encoding/fromHex.js';\nimport { defineFormatter } from './formatter.js';\nimport { formatLog } from './log.js';\nimport { transactionType } from './transaction.js';\nexport const receiptStatuses = {\n    '0x0': 'reverted',\n    '0x1': 'success',\n};\nexport function formatTransactionReceipt(transactionReceipt) {\n    const receipt = {\n        ...transactionReceipt,\n        blockNumber: transactionReceipt.blockNumber\n            ? BigInt(transactionReceipt.blockNumber)\n            : null,\n        contractAddress: transactionReceipt.contractAddress\n            ? transactionReceipt.contractAddress\n            : null,\n        cumulativeGasUsed: transactionReceipt.cumulativeGasUsed\n            ? BigInt(transactionReceipt.cumulativeGasUsed)\n            : null,\n        effectiveGasPrice: transactionReceipt.effectiveGasPrice\n            ? BigInt(transactionReceipt.effectiveGasPrice)\n            : null,\n        gasUsed: transactionReceipt.gasUsed\n            ? BigInt(transactionReceipt.gasUsed)\n            : null,\n        logs: transactionReceipt.logs\n            ? transactionReceipt.logs.map((log) => formatLog(log))\n            : null,\n        to: transactionReceipt.to ? transactionReceipt.to : null,\n        transactionIndex: transactionReceipt.transactionIndex\n            ? hexToNumber(transactionReceipt.transactionIndex)\n            : null,\n        status: transactionReceipt.status\n            ? receiptStatuses[transactionReceipt.status]\n            : null,\n        type: transactionReceipt.type\n            ? transactionType[transactionReceipt.type] || transactionReceipt.type\n            : null,\n    };\n    if (transactionReceipt.blobGasPrice)\n        receipt.blobGasPrice = BigInt(transactionReceipt.blobGasPrice);\n    if (transactionReceipt.blobGasUsed)\n        receipt.blobGasUsed = BigInt(transactionReceipt.blobGasUsed);\n    return receipt;\n}\nexport const defineTransactionReceipt = /*#__PURE__*/ defineFormatter('transactionReceipt', formatTransactionReceipt);\n//# sourceMappingURL=transactionReceipt.js.map","export function formatLog(log, { args, eventName, } = {}) {\n    return {\n        ...log,\n        blockHash: log.blockHash ? log.blockHash : null,\n        blockNumber: log.blockNumber ? BigInt(log.blockNumber) : null,\n        logIndex: log.logIndex ? Number(log.logIndex) : null,\n        transactionHash: log.transactionHash ? log.transactionHash : null,\n        transactionIndex: log.transactionIndex\n            ? Number(log.transactionIndex)\n            : null,\n        ...(eventName ? { args, eventName } : {}),\n    };\n}\n//# sourceMappingURL=log.js.map","import { hexToBigInt } from '../utils/encoding/fromHex.js';\nimport { defineBlock } from '../utils/formatters/block.js';\nimport { defineTransaction, formatTransaction, } from '../utils/formatters/transaction.js';\nimport { defineTransactionReceipt } from '../utils/formatters/transactionReceipt.js';\nexport const formatters = {\n    block: /*#__PURE__*/ defineBlock({\n        format(args) {\n            const transactions = args.transactions?.map((transaction) => {\n                if (typeof transaction === 'string')\n                    return transaction;\n                const formatted = formatTransaction(transaction);\n                if (formatted.typeHex === '0x7e') {\n                    formatted.isSystemTx = transaction.isSystemTx;\n                    formatted.mint = transaction.mint\n                        ? hexToBigInt(transaction.mint)\n                        : undefined;\n                    formatted.sourceHash = transaction.sourceHash;\n                    formatted.type = 'deposit';\n                }\n                return formatted;\n            });\n            return {\n                transactions,\n                stateRoot: args.stateRoot,\n            };\n        },\n    }),\n    transaction: /*#__PURE__*/ defineTransaction({\n        format(args) {\n            const transaction = {};\n            if (args.type === '0x7e') {\n                transaction.isSystemTx = args.isSystemTx;\n                transaction.mint = args.mint ? hexToBigInt(args.mint) : undefined;\n                transaction.sourceHash = args.sourceHash;\n                transaction.type = 'deposit';\n            }\n            return transaction;\n        },\n    }),\n    transactionReceipt: /*#__PURE__*/ defineTransactionReceipt({\n        format(args) {\n            return {\n                l1GasPrice: args.l1GasPrice ? hexToBigInt(args.l1GasPrice) : null,\n                l1GasUsed: args.l1GasUsed ? hexToBigInt(args.l1GasUsed) : null,\n                l1Fee: args.l1Fee ? hexToBigInt(args.l1Fee) : null,\n                l1FeeScalar: args.l1FeeScalar ? Number(args.l1FeeScalar) : null,\n            };\n        },\n    }),\n};\n//# sourceMappingURL=formatters.js.map","import { BaseError } from './base.js';\nexport class NegativeOffsetError extends BaseError {\n    constructor({ offset }) {\n        super(`Offset \\`${offset}\\` cannot be negative.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NegativeOffsetError'\n        });\n    }\n}\nexport class PositionOutOfBoundsError extends BaseError {\n    constructor({ length, position }) {\n        super(`Position \\`${position}\\` is out of bounds (\\`0 < position < ${length}\\`).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'PositionOutOfBoundsError'\n        });\n    }\n}\nexport class RecursiveReadLimitExceededError extends BaseError {\n    constructor({ count, limit }) {\n        super(`Recursive read limit of \\`${limit}\\` exceeded (recursive read count: \\`${count}\\`).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'RecursiveReadLimitExceededError'\n        });\n    }\n}\n//# sourceMappingURL=cursor.js.map","import { NegativeOffsetError, PositionOutOfBoundsError, RecursiveReadLimitExceededError, } from '../errors/cursor.js';\nconst staticCursor = {\n    bytes: new Uint8Array(),\n    dataView: new DataView(new ArrayBuffer(0)),\n    position: 0,\n    positionReadCount: new Map(),\n    recursiveReadCount: 0,\n    recursiveReadLimit: Number.POSITIVE_INFINITY,\n    assertReadLimit() {\n        if (this.recursiveReadCount >= this.recursiveReadLimit)\n            throw new RecursiveReadLimitExceededError({\n                count: this.recursiveReadCount + 1,\n                limit: this.recursiveReadLimit,\n            });\n    },\n    assertPosition(position) {\n        if (position < 0 || position > this.bytes.length - 1)\n            throw new PositionOutOfBoundsError({\n                length: this.bytes.length,\n                position,\n            });\n    },\n    decrementPosition(offset) {\n        if (offset < 0)\n            throw new NegativeOffsetError({ offset });\n        const position = this.position - offset;\n        this.assertPosition(position);\n        this.position = position;\n    },\n    getReadCount(position) {\n        return this.positionReadCount.get(position || this.position) || 0;\n    },\n    incrementPosition(offset) {\n        if (offset < 0)\n            throw new NegativeOffsetError({ offset });\n        const position = this.position + offset;\n        this.assertPosition(position);\n        this.position = position;\n    },\n    inspectByte(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position);\n        return this.bytes[position];\n    },\n    inspectBytes(length, position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + length - 1);\n        return this.bytes.subarray(position, position + length);\n    },\n    inspectUint8(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position);\n        return this.bytes[position];\n    },\n    inspectUint16(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 1);\n        return this.dataView.getUint16(position);\n    },\n    inspectUint24(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 2);\n        return ((this.dataView.getUint16(position) << 8) +\n            this.dataView.getUint8(position + 2));\n    },\n    inspectUint32(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 3);\n        return this.dataView.getUint32(position);\n    },\n    pushByte(byte) {\n        this.assertPosition(this.position);\n        this.bytes[this.position] = byte;\n        this.position++;\n    },\n    pushBytes(bytes) {\n        this.assertPosition(this.position + bytes.length - 1);\n        this.bytes.set(bytes, this.position);\n        this.position += bytes.length;\n    },\n    pushUint8(value) {\n        this.assertPosition(this.position);\n        this.bytes[this.position] = value;\n        this.position++;\n    },\n    pushUint16(value) {\n        this.assertPosition(this.position + 1);\n        this.dataView.setUint16(this.position, value);\n        this.position += 2;\n    },\n    pushUint24(value) {\n        this.assertPosition(this.position + 2);\n        this.dataView.setUint16(this.position, value >> 8);\n        this.dataView.setUint8(this.position + 2, value & ~4294967040);\n        this.position += 3;\n    },\n    pushUint32(value) {\n        this.assertPosition(this.position + 3);\n        this.dataView.setUint32(this.position, value);\n        this.position += 4;\n    },\n    readByte() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectByte();\n        this.position++;\n        return value;\n    },\n    readBytes(length, size) {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectBytes(length);\n        this.position += size ?? length;\n        return value;\n    },\n    readUint8() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint8();\n        this.position += 1;\n        return value;\n    },\n    readUint16() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint16();\n        this.position += 2;\n        return value;\n    },\n    readUint24() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint24();\n        this.position += 3;\n        return value;\n    },\n    readUint32() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint32();\n        this.position += 4;\n        return value;\n    },\n    get remaining() {\n        return this.bytes.length - this.position;\n    },\n    setPosition(position) {\n        const oldPosition = this.position;\n        this.assertPosition(position);\n        this.position = position;\n        return () => (this.position = oldPosition);\n    },\n    _touch() {\n        if (this.recursiveReadLimit === Number.POSITIVE_INFINITY)\n            return;\n        const count = this.getReadCount();\n        this.positionReadCount.set(this.position, count + 1);\n        if (count > 0)\n            this.recursiveReadCount++;\n    },\n};\nexport function createCursor(bytes, { recursiveReadLimit = 8_192 } = {}) {\n    const cursor = Object.create(staticCursor);\n    cursor.bytes = bytes;\n    cursor.dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    cursor.positionReadCount = new Map();\n    cursor.recursiveReadLimit = recursiveReadLimit;\n    return cursor;\n}\n//# sourceMappingURL=cursor.js.map","import { BaseError } from '../../errors/base.js';\nimport { createCursor, } from '../cursor.js';\nimport { hexToBytes } from './toBytes.js';\nimport { bytesToHex } from './toHex.js';\nexport function toRlp(bytes, to = 'hex') {\n    const encodable = getEncodable(bytes);\n    const cursor = createCursor(new Uint8Array(encodable.length));\n    encodable.encode(cursor);\n    if (to === 'hex')\n        return bytesToHex(cursor.bytes);\n    return cursor.bytes;\n}\nexport function bytesToRlp(bytes, to = 'bytes') {\n    return toRlp(bytes, to);\n}\nexport function hexToRlp(hex, to = 'hex') {\n    return toRlp(hex, to);\n}\nfunction getEncodable(bytes) {\n    if (Array.isArray(bytes))\n        return getEncodableList(bytes.map((x) => getEncodable(x)));\n    return getEncodableBytes(bytes);\n}\nfunction getEncodableList(list) {\n    const bodyLength = list.reduce((acc, x) => acc + x.length, 0);\n    const sizeOfBodyLength = getSizeOfLength(bodyLength);\n    const length = (() => {\n        if (bodyLength <= 55)\n            return 1 + bodyLength;\n        return 1 + sizeOfBodyLength + bodyLength;\n    })();\n    return {\n        length,\n        encode(cursor) {\n            if (bodyLength <= 55) {\n                cursor.pushByte(0xc0 + bodyLength);\n            }\n            else {\n                cursor.pushByte(0xc0 + 55 + sizeOfBodyLength);\n                if (sizeOfBodyLength === 1)\n                    cursor.pushUint8(bodyLength);\n                else if (sizeOfBodyLength === 2)\n                    cursor.pushUint16(bodyLength);\n                else if (sizeOfBodyLength === 3)\n                    cursor.pushUint24(bodyLength);\n                else\n                    cursor.pushUint32(bodyLength);\n            }\n            for (const { encode } of list) {\n                encode(cursor);\n            }\n        },\n    };\n}\nfunction getEncodableBytes(bytesOrHex) {\n    const bytes = typeof bytesOrHex === 'string' ? hexToBytes(bytesOrHex) : bytesOrHex;\n    const sizeOfBytesLength = getSizeOfLength(bytes.length);\n    const length = (() => {\n        if (bytes.length === 1 && bytes[0] < 0x80)\n            return 1;\n        if (bytes.length <= 55)\n            return 1 + bytes.length;\n        return 1 + sizeOfBytesLength + bytes.length;\n    })();\n    return {\n        length,\n        encode(cursor) {\n            if (bytes.length === 1 && bytes[0] < 0x80) {\n                cursor.pushBytes(bytes);\n            }\n            else if (bytes.length <= 55) {\n                cursor.pushByte(0x80 + bytes.length);\n                cursor.pushBytes(bytes);\n            }\n            else {\n                cursor.pushByte(0x80 + 55 + sizeOfBytesLength);\n                if (sizeOfBytesLength === 1)\n                    cursor.pushUint8(bytes.length);\n                else if (sizeOfBytesLength === 2)\n                    cursor.pushUint16(bytes.length);\n                else if (sizeOfBytesLength === 3)\n                    cursor.pushUint24(bytes.length);\n                else\n                    cursor.pushUint32(bytes.length);\n                cursor.pushBytes(bytes);\n            }\n        },\n    };\n}\nfunction getSizeOfLength(length) {\n    if (length < 2 ** 8)\n        return 1;\n    if (length < 2 ** 16)\n        return 2;\n    if (length < 2 ** 24)\n        return 3;\n    if (length < 2 ** 32)\n        return 4;\n    throw new BaseError('Length is too large.');\n}\n//# sourceMappingURL=toRlp.js.map","import { formatEther } from '../utils/unit/formatEther.js';\nimport { formatGwei } from '../utils/unit/formatGwei.js';\nimport { BaseError } from './base.js';\nexport function prettyPrint(args) {\n    const entries = Object.entries(args)\n        .map(([key, value]) => {\n        if (value === undefined || value === false)\n            return null;\n        return [key, value];\n    })\n        .filter(Boolean);\n    const maxLength = entries.reduce((acc, [key]) => Math.max(acc, key.length), 0);\n    return entries\n        .map(([key, value]) => `  ${`${key}:`.padEnd(maxLength + 1)}  ${value}`)\n        .join('\\n');\n}\nexport class FeeConflictError extends BaseError {\n    constructor() {\n        super([\n            'Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.',\n            'Use `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others.',\n        ].join('\\n'));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeConflictError'\n        });\n    }\n}\nexport class InvalidLegacyVError extends BaseError {\n    constructor({ v }) {\n        super(`Invalid \\`v\\` value \"${v}\". Expected 27 or 28.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidLegacyVError'\n        });\n    }\n}\nexport class InvalidSerializableTransactionError extends BaseError {\n    constructor({ transaction }) {\n        super('Cannot infer a transaction type from provided transaction.', {\n            metaMessages: [\n                'Provided Transaction:',\n                '{',\n                prettyPrint(transaction),\n                '}',\n                '',\n                'To infer the type, either provide:',\n                '- a `type` to the Transaction, or',\n                '- an EIP-1559 Transaction with `maxFeePerGas`, or',\n                '- an EIP-2930 Transaction with `gasPrice` & `accessList`, or',\n                '- an EIP-4844 Transaction with `blobs`, `blobVersionedHashes`, `sidecars`, or',\n                '- a Legacy Transaction with `gasPrice`',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidSerializableTransactionError'\n        });\n    }\n}\nexport class InvalidSerializedTransactionTypeError extends BaseError {\n    constructor({ serializedType }) {\n        super(`Serialized transaction type \"${serializedType}\" is invalid.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidSerializedTransactionType'\n        });\n        Object.defineProperty(this, \"serializedType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.serializedType = serializedType;\n    }\n}\nexport class InvalidSerializedTransactionError extends BaseError {\n    constructor({ attributes, serializedTransaction, type, }) {\n        const missing = Object.entries(attributes)\n            .map(([key, value]) => (typeof value === 'undefined' ? key : undefined))\n            .filter(Boolean);\n        super(`Invalid serialized transaction of type \"${type}\" was provided.`, {\n            metaMessages: [\n                `Serialized Transaction: \"${serializedTransaction}\"`,\n                missing.length > 0 ? `Missing Attributes: ${missing.join(', ')}` : '',\n            ].filter(Boolean),\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidSerializedTransactionError'\n        });\n        Object.defineProperty(this, \"serializedTransaction\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.serializedTransaction = serializedTransaction;\n        this.type = type;\n    }\n}\nexport class InvalidStorageKeySizeError extends BaseError {\n    constructor({ storageKey }) {\n        super(`Size for storage key \"${storageKey}\" is invalid. Expected 32 bytes. Got ${Math.floor((storageKey.length - 2) / 2)} bytes.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidStorageKeySizeError'\n        });\n    }\n}\nexport class TransactionExecutionError extends BaseError {\n    constructor(cause, { account, docsPath, chain, data, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, }) {\n        const prettyArgs = prettyPrint({\n            chain: chain && `${chain?.name} (id: ${chain?.id})`,\n            from: account?.address,\n            to,\n            value: typeof value !== 'undefined' &&\n                `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n            data,\n            gas,\n            gasPrice: typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n            maxFeePerGas: typeof maxFeePerGas !== 'undefined' &&\n                `${formatGwei(maxFeePerGas)} gwei`,\n            maxPriorityFeePerGas: typeof maxPriorityFeePerGas !== 'undefined' &&\n                `${formatGwei(maxPriorityFeePerGas)} gwei`,\n            nonce,\n        });\n        super(cause.shortMessage, {\n            cause,\n            docsPath,\n            metaMessages: [\n                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n                'Request Arguments:',\n                prettyArgs,\n            ].filter(Boolean),\n        });\n        Object.defineProperty(this, \"cause\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionExecutionError'\n        });\n        this.cause = cause;\n    }\n}\nexport class TransactionNotFoundError extends BaseError {\n    constructor({ blockHash, blockNumber, blockTag, hash, index, }) {\n        let identifier = 'Transaction';\n        if (blockTag && index !== undefined)\n            identifier = `Transaction at block time \"${blockTag}\" at index \"${index}\"`;\n        if (blockHash && index !== undefined)\n            identifier = `Transaction at block hash \"${blockHash}\" at index \"${index}\"`;\n        if (blockNumber && index !== undefined)\n            identifier = `Transaction at block number \"${blockNumber}\" at index \"${index}\"`;\n        if (hash)\n            identifier = `Transaction with hash \"${hash}\"`;\n        super(`${identifier} could not be found.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionNotFoundError'\n        });\n    }\n}\nexport class TransactionReceiptNotFoundError extends BaseError {\n    constructor({ hash }) {\n        super(`Transaction receipt with hash \"${hash}\" could not be found. The Transaction may not be processed on a block yet.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionReceiptNotFoundError'\n        });\n    }\n}\nexport class WaitForTransactionReceiptTimeoutError extends BaseError {\n    constructor({ hash }) {\n        super(`Timed out while waiting for transaction with hash \"${hash}\" to be confirmed.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'WaitForTransactionReceiptTimeoutError'\n        });\n    }\n}\n//# sourceMappingURL=transaction.js.map","import { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Compute commitments from a list of blobs.\n *\n * @example\n * ```ts\n * import { blobsToCommitments, toBlobs } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * ```\n */\nexport function blobsToCommitments(parameters) {\n    const { kzg } = parameters;\n    const to = parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes');\n    const blobs = (typeof parameters.blobs[0] === 'string'\n        ? parameters.blobs.map((x) => hexToBytes(x))\n        : parameters.blobs);\n    const commitments = [];\n    for (const blob of blobs)\n        commitments.push(Uint8Array.from(kzg.blobToKzgCommitment(blob)));\n    return (to === 'bytes'\n        ? commitments\n        : commitments.map((x) => bytesToHex(x)));\n}\n//# sourceMappingURL=blobsToCommitments.js.map","import { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Compute the proofs for a list of blobs and their commitments.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const proofs = blobsToProofs({ blobs, commitments, kzg })\n * ```\n */\nexport function blobsToProofs(parameters) {\n    const { kzg } = parameters;\n    const to = parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes');\n    const blobs = (typeof parameters.blobs[0] === 'string'\n        ? parameters.blobs.map((x) => hexToBytes(x))\n        : parameters.blobs);\n    const commitments = (typeof parameters.commitments[0] === 'string'\n        ? parameters.commitments.map((x) => hexToBytes(x))\n        : parameters.commitments);\n    const proofs = [];\n    for (let i = 0; i < blobs.length; i++) {\n        const blob = blobs[i];\n        const commitment = commitments[i];\n        proofs.push(Uint8Array.from(kzg.computeBlobKzgProof(blob, commitment)));\n    }\n    return (to === 'bytes'\n        ? proofs\n        : proofs.map((x) => bytesToHex(x)));\n}\n//# sourceMappingURL=blobsToProofs.js.map","import { exists, output } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_sha2.js.map","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","import { bytesToHex } from '../encoding/toHex.js';\nimport { sha256 } from '../hash/sha256.js';\n/**\n * Transform a commitment to it's versioned hash.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentToVersionedHash,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const [commitment] = blobsToCommitments({ blobs, kzg })\n * const versionedHash = commitmentToVersionedHash({ commitment })\n * ```\n */\nexport function commitmentToVersionedHash(parameters) {\n    const { commitment, version = 1 } = parameters;\n    const to = parameters.to ?? (typeof commitment === 'string' ? 'hex' : 'bytes');\n    const versionedHash = sha256(commitment, 'bytes');\n    versionedHash.set([version], 0);\n    return (to === 'bytes' ? versionedHash : bytesToHex(versionedHash));\n}\n//# sourceMappingURL=commitmentToVersionedHash.js.map","import { sha256 as noble_sha256 } from '@noble/hashes/sha256';\nimport { isHex } from '../data/isHex.js';\nimport { toBytes } from '../encoding/toBytes.js';\nimport { toHex } from '../encoding/toHex.js';\nexport function sha256(value, to_) {\n    const to = to_ || 'hex';\n    const bytes = noble_sha256(isHex(value, { strict: false }) ? toBytes(value) : value);\n    if (to === 'bytes')\n        return bytes;\n    return toHex(bytes);\n}\n//# sourceMappingURL=sha256.js.map","// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\n/** Blob limit per transaction. */\nconst blobsPerTransaction = 6;\n/** The number of bytes in a BLS scalar field element. */\nexport const bytesPerFieldElement = 32;\n/** The number of field elements in a blob. */\nexport const fieldElementsPerBlob = 4096;\n/** The number of bytes in a blob. */\nexport const bytesPerBlob = bytesPerFieldElement * fieldElementsPerBlob;\n/** Blob bytes limit per transaction. */\nexport const maxBytesPerTransaction = bytesPerBlob * blobsPerTransaction -\n    // terminator byte (0x80).\n    1 -\n    // zero byte (0x00) appended to each field element.\n    1 * fieldElementsPerBlob * blobsPerTransaction;\n//# sourceMappingURL=blob.js.map","// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\nexport const versionedHashVersionKzg = 1;\n//# sourceMappingURL=kzg.js.map","import { versionedHashVersionKzg } from '../constants/kzg.js';\nimport { BaseError } from './base.js';\nexport class BlobSizeTooLargeError extends BaseError {\n    constructor({ maxSize, size }) {\n        super('Blob size is too large.', {\n            metaMessages: [`Max: ${maxSize} bytes`, `Given: ${size} bytes`],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'BlobSizeTooLargeError'\n        });\n    }\n}\nexport class EmptyBlobError extends BaseError {\n    constructor() {\n        super('Blob data must not be empty.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'EmptyBlobError'\n        });\n    }\n}\nexport class InvalidVersionedHashSizeError extends BaseError {\n    constructor({ hash, size, }) {\n        super(`Versioned hash \"${hash}\" size is invalid.`, {\n            metaMessages: ['Expected: 32', `Received: ${size}`],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidVersionedHashSizeError'\n        });\n    }\n}\nexport class InvalidVersionedHashVersionError extends BaseError {\n    constructor({ hash, version, }) {\n        super(`Versioned hash \"${hash}\" version is invalid.`, {\n            metaMessages: [\n                `Expected: ${versionedHashVersionKzg}`,\n                `Received: ${version}`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidVersionedHashVersionError'\n        });\n    }\n}\n//# sourceMappingURL=blob.js.map","import { blobsToCommitments, } from './blobsToCommitments.js';\nimport { blobsToProofs } from './blobsToProofs.js';\nimport { toBlobs } from './toBlobs.js';\n/**\n * Transforms arbitrary data (or blobs, commitments, & proofs) into a sidecar array.\n *\n * @example\n * ```ts\n * import { toBlobSidecars, stringToHex } from 'viem'\n *\n * const sidecars = toBlobSidecars({ data: stringToHex('hello world') })\n * ```\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   toBlobs,\n *   blobsToProofs,\n *   toBlobSidecars,\n *   stringToHex\n * } from 'viem'\n *\n * const blobs = toBlobs({ data: stringToHex('hello world') })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const proofs = blobsToProofs({ blobs, commitments, kzg })\n *\n * const sidecars = toBlobSidecars({ blobs, commitments, proofs })\n * ```\n */\nexport function toBlobSidecars(parameters) {\n    const { data, kzg, to } = parameters;\n    const blobs = parameters.blobs ?? toBlobs({ data: data, to });\n    const commitments = parameters.commitments ?? blobsToCommitments({ blobs, kzg: kzg, to });\n    const proofs = parameters.proofs ?? blobsToProofs({ blobs, commitments, kzg: kzg, to });\n    const sidecars = [];\n    for (let i = 0; i < blobs.length; i++)\n        sidecars.push({\n            blob: blobs[i],\n            commitment: commitments[i],\n            proof: proofs[i],\n        });\n    return sidecars;\n}\n//# sourceMappingURL=toBlobSidecars.js.map","import { bytesPerBlob, bytesPerFieldElement, fieldElementsPerBlob, maxBytesPerTransaction, } from '../../constants/blob.js';\nimport { BlobSizeTooLargeError, EmptyBlobError, } from '../../errors/blob.js';\nimport { createCursor } from '../cursor.js';\nimport { size } from '../data/size.js';\nimport { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Transforms arbitrary data to blobs.\n *\n * @example\n * ```ts\n * import { toBlobs, stringToHex } from 'viem'\n *\n * const blobs = toBlobs({ data: stringToHex('hello world') })\n * ```\n */\nexport function toBlobs(parameters) {\n    const to = parameters.to ?? (typeof parameters.data === 'string' ? 'hex' : 'bytes');\n    const data = (typeof parameters.data === 'string'\n        ? hexToBytes(parameters.data)\n        : parameters.data);\n    const size_ = size(data);\n    if (!size_)\n        throw new EmptyBlobError();\n    if (size_ > maxBytesPerTransaction)\n        throw new BlobSizeTooLargeError({\n            maxSize: maxBytesPerTransaction,\n            size: size_,\n        });\n    const blobs = [];\n    let active = true;\n    let position = 0;\n    while (active) {\n        const blob = createCursor(new Uint8Array(bytesPerBlob));\n        let size = 0;\n        while (size < fieldElementsPerBlob) {\n            const bytes = data.slice(position, position + (bytesPerFieldElement - 1));\n            // Push a zero byte so the field element doesn't overflow the BLS modulus.\n            blob.pushByte(0x00);\n            // Push the current segment of data bytes.\n            blob.pushBytes(bytes);\n            // If we detect that the current segment of data bytes is less than 31 bytes,\n            // we can stop processing and push a terminator byte to indicate the end of the blob.\n            if (bytes.length < 31) {\n                blob.pushByte(0x80);\n                active = false;\n                break;\n            }\n            size++;\n            position += 31;\n        }\n        blobs.push(blob);\n    }\n    return (to === 'bytes'\n        ? blobs.map((x) => x.bytes)\n        : blobs.map((x) => bytesToHex(x.bytes)));\n}\n//# sourceMappingURL=toBlobs.js.map","export function trim(hexOrBytes, { dir = 'left' } = {}) {\n    let data = typeof hexOrBytes === 'string' ? hexOrBytes.replace('0x', '') : hexOrBytes;\n    let sliceLength = 0;\n    for (let i = 0; i < data.length - 1; i++) {\n        if (data[dir === 'left' ? i : data.length - i - 1].toString() === '0')\n            sliceLength++;\n        else\n            break;\n    }\n    data =\n        dir === 'left'\n            ? data.slice(sliceLength)\n            : data.slice(0, data.length - sliceLength);\n    if (typeof hexOrBytes === 'string') {\n        if (data.length === 1 && dir === 'right')\n            data = `${data}0`;\n        return `0x${data.length % 2 === 1 ? `0${data}` : data}`;\n    }\n    return data;\n}\n//# sourceMappingURL=trim.js.map","import { BaseError } from './base.js';\nexport class ChainDoesNotSupportContract extends BaseError {\n    constructor({ blockNumber, chain, contract, }) {\n        super(`Chain \"${chain.name}\" does not support contract \"${contract.name}\".`, {\n            metaMessages: [\n                'This could be due to any of the following:',\n                ...(blockNumber &&\n                    contract.blockCreated &&\n                    contract.blockCreated > blockNumber\n                    ? [\n                        `- The contract \"${contract.name}\" was not deployed until block ${contract.blockCreated} (current block ${blockNumber}).`,\n                    ]\n                    : [\n                        `- The chain does not have the contract \"${contract.name}\" configured.`,\n                    ]),\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ChainDoesNotSupportContract'\n        });\n    }\n}\nexport class ChainMismatchError extends BaseError {\n    constructor({ chain, currentChainId, }) {\n        super(`The current chain of the wallet (id: ${currentChainId}) does not match the target chain for the transaction (id: ${chain.id} – ${chain.name}).`, {\n            metaMessages: [\n                `Current Chain ID:  ${currentChainId}`,\n                `Expected Chain ID: ${chain.id} – ${chain.name}`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ChainMismatchError'\n        });\n    }\n}\nexport class ChainNotFoundError extends BaseError {\n    constructor() {\n        super([\n            'No chain was provided to the request.',\n            'Please provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient.',\n        ].join('\\n'));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ChainNotFoundError'\n        });\n    }\n}\nexport class ClientChainNotConfiguredError extends BaseError {\n    constructor() {\n        super('No chain was provided to the Client.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ClientChainNotConfiguredError'\n        });\n    }\n}\nexport class InvalidChainIdError extends BaseError {\n    constructor({ chainId }) {\n        super(typeof chainId === 'number'\n            ? `Chain ID \"${chainId}\" is invalid.`\n            : 'Chain ID is invalid.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidChainIdError'\n        });\n    }\n}\n//# sourceMappingURL=chain.js.map","export const etherUnits = {\n    gwei: 9,\n    wei: 18,\n};\nexport const gweiUnits = {\n    ether: -9,\n    wei: 9,\n};\nexport const weiUnits = {\n    ether: -18,\n    gwei: -9,\n};\n//# sourceMappingURL=unit.js.map","import { gweiUnits } from '../../constants/unit.js';\nimport { formatUnits } from './formatUnits.js';\n/**\n * Converts numerical wei to a string representation of gwei.\n *\n * - Docs: https://viem.sh/docs/utilities/formatGwei\n *\n * @example\n * import { formatGwei } from 'viem'\n *\n * formatGwei(1000000000n)\n * // '1'\n */\nexport function formatGwei(wei, unit = 'wei') {\n    return formatUnits(wei, gweiUnits[unit]);\n}\n//# sourceMappingURL=formatGwei.js.map","/**\n *  Divides a number by a given exponent of base 10 (10exponent), and formats it into a string representation of the number..\n *\n * - Docs: https://viem.sh/docs/utilities/formatUnits\n *\n * @example\n * import { formatUnits } from 'viem'\n *\n * formatUnits(420000000000n, 9)\n * // '420'\n */\nexport function formatUnits(value, decimals) {\n    let display = value.toString();\n    const negative = display.startsWith('-');\n    if (negative)\n        display = display.slice(1);\n    display = display.padStart(decimals, '0');\n    let [integer, fraction] = [\n        display.slice(0, display.length - decimals),\n        display.slice(display.length - decimals),\n    ];\n    fraction = fraction.replace(/(0+)$/, '');\n    return `${negative ? '-' : ''}${integer || '0'}${fraction ? `.${fraction}` : ''}`;\n}\n//# sourceMappingURL=formatUnits.js.map","import { formatGwei } from '../utils/unit/formatGwei.js';\nimport { BaseError } from './base.js';\nexport class ExecutionRevertedError extends BaseError {\n    constructor({ cause, message, } = {}) {\n        const reason = message\n            ?.replace('execution reverted: ', '')\n            ?.replace('execution reverted', '');\n        super(`Execution reverted ${reason ? `with reason: ${reason}` : 'for an unknown reason'}.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ExecutionRevertedError'\n        });\n    }\n}\nObject.defineProperty(ExecutionRevertedError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 3\n});\nObject.defineProperty(ExecutionRevertedError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /execution reverted/\n});\nexport class FeeCapTooHighError extends BaseError {\n    constructor({ cause, maxFeePerGas, } = {}) {\n        super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''}) cannot be higher than the maximum allowed value (2^256-1).`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeCapTooHigh'\n        });\n    }\n}\nObject.defineProperty(FeeCapTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max fee per gas higher than 2\\^256-1|fee cap higher than 2\\^256-1/\n});\nexport class FeeCapTooLowError extends BaseError {\n    constructor({ cause, maxFeePerGas, } = {}) {\n        super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)}` : ''} gwei) cannot be lower than the block base fee.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeCapTooLow'\n        });\n    }\n}\nObject.defineProperty(FeeCapTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/\n});\nexport class NonceTooHighError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is higher than the next one expected.`, { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceTooHighError'\n        });\n    }\n}\nObject.defineProperty(NonceTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce too high/\n});\nexport class NonceTooLowError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super([\n            `Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is lower than the current nonce of the account.`,\n            'Try increasing the nonce or find the latest nonce with `getTransactionCount`.',\n        ].join('\\n'), { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceTooLowError'\n        });\n    }\n}\nObject.defineProperty(NonceTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce too low|transaction already imported|already known/\n});\nexport class NonceMaxValueError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}exceeds the maximum allowed nonce.`, { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceMaxValueError'\n        });\n    }\n}\nObject.defineProperty(NonceMaxValueError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce has max value/\n});\nexport class InsufficientFundsError extends BaseError {\n    constructor({ cause } = {}) {\n        super([\n            'The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.',\n        ].join('\\n'), {\n            cause,\n            metaMessages: [\n                'This error could arise when the account does not have enough funds to:',\n                ' - pay for the total gas fee,',\n                ' - pay for the value to send.',\n                ' ',\n                'The cost of the transaction is calculated as `gas * gas fee + value`, where:',\n                ' - `gas` is the amount of gas needed for transaction to execute,',\n                ' - `gas fee` is the gas fee,',\n                ' - `value` is the amount of ether to send to the recipient.',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InsufficientFundsError'\n        });\n    }\n}\nObject.defineProperty(InsufficientFundsError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /insufficient funds/\n});\nexport class IntrinsicGasTooHighError extends BaseError {\n    constructor({ cause, gas, } = {}) {\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction exceeds the limit allowed for the block.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'IntrinsicGasTooHighError'\n        });\n    }\n}\nObject.defineProperty(IntrinsicGasTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /intrinsic gas too high|gas limit reached/\n});\nexport class IntrinsicGasTooLowError extends BaseError {\n    constructor({ cause, gas, } = {}) {\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction is too low.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'IntrinsicGasTooLowError'\n        });\n    }\n}\nObject.defineProperty(IntrinsicGasTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /intrinsic gas too low/\n});\nexport class TransactionTypeNotSupportedError extends BaseError {\n    constructor({ cause }) {\n        super('The transaction type is not supported for this chain.', {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionTypeNotSupportedError'\n        });\n    }\n}\nObject.defineProperty(TransactionTypeNotSupportedError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /transaction type not valid/\n});\nexport class TipAboveFeeCapError extends BaseError {\n    constructor({ cause, maxPriorityFeePerGas, maxFeePerGas, } = {}) {\n        super([\n            `The provided tip (\\`maxPriorityFeePerGas\\`${maxPriorityFeePerGas\n                ? ` = ${formatGwei(maxPriorityFeePerGas)} gwei`\n                : ''}) cannot be higher than the fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''}).`,\n        ].join('\\n'), {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TipAboveFeeCapError'\n        });\n    }\n}\nObject.defineProperty(TipAboveFeeCapError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max priority fee per gas higher than max fee per gas|tip higher than fee cap/\n});\nexport class UnknownNodeError extends BaseError {\n    constructor({ cause }) {\n        super(`An error occurred while executing: ${cause?.shortMessage}`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'UnknownNodeError'\n        });\n    }\n}\n//# sourceMappingURL=node.js.map","import { versionedHashVersionKzg } from '../../constants/kzg.js';\nimport { InvalidAddressError, } from '../../errors/address.js';\nimport { BaseError } from '../../errors/base.js';\nimport { EmptyBlobError, InvalidVersionedHashSizeError, InvalidVersionedHashVersionError, } from '../../errors/blob.js';\nimport { InvalidChainIdError, } from '../../errors/chain.js';\nimport { FeeCapTooHighError, TipAboveFeeCapError, } from '../../errors/node.js';\nimport { isAddress } from '../address/isAddress.js';\nimport { size } from '../data/size.js';\nimport { slice } from '../data/slice.js';\nimport { hexToNumber } from '../encoding/fromHex.js';\nexport function assertTransactionEIP4844(transaction) {\n    const { blobVersionedHashes } = transaction;\n    if (blobVersionedHashes) {\n        if (blobVersionedHashes.length === 0)\n            throw new EmptyBlobError();\n        for (const hash of blobVersionedHashes) {\n            const size_ = size(hash);\n            const version = hexToNumber(slice(hash, 0, 1));\n            if (size_ !== 32)\n                throw new InvalidVersionedHashSizeError({ hash, size: size_ });\n            if (version !== versionedHashVersionKzg)\n                throw new InvalidVersionedHashVersionError({\n                    hash,\n                    version,\n                });\n        }\n    }\n    assertTransactionEIP1559(transaction);\n}\nexport function assertTransactionEIP1559(transaction) {\n    const { chainId, maxPriorityFeePerGas, maxFeePerGas, to } = transaction;\n    if (chainId <= 0)\n        throw new InvalidChainIdError({ chainId });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (maxFeePerGas && maxFeePerGas > 2n ** 256n - 1n)\n        throw new FeeCapTooHighError({ maxFeePerGas });\n    if (maxPriorityFeePerGas &&\n        maxFeePerGas &&\n        maxPriorityFeePerGas > maxFeePerGas)\n        throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas });\n}\nexport function assertTransactionEIP2930(transaction) {\n    const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to } = transaction;\n    if (chainId <= 0)\n        throw new InvalidChainIdError({ chainId });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (maxPriorityFeePerGas || maxFeePerGas)\n        throw new BaseError('`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid EIP-2930 Transaction attribute.');\n    if (gasPrice && gasPrice > 2n ** 256n - 1n)\n        throw new FeeCapTooHighError({ maxFeePerGas: gasPrice });\n}\nexport function assertTransactionLegacy(transaction) {\n    const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to, accessList, } = transaction;\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (typeof chainId !== 'undefined' && chainId <= 0)\n        throw new InvalidChainIdError({ chainId });\n    if (maxPriorityFeePerGas || maxFeePerGas)\n        throw new BaseError('`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid Legacy Transaction attribute.');\n    if (gasPrice && gasPrice > 2n ** 256n - 1n)\n        throw new FeeCapTooHighError({ maxFeePerGas: gasPrice });\n    if (accessList)\n        throw new BaseError('`accessList` is not a valid Legacy Transaction attribute.');\n}\n//# sourceMappingURL=assertTransaction.js.map","import { InvalidAddressError, } from '../../errors/address.js';\nimport { InvalidStorageKeySizeError, } from '../../errors/transaction.js';\nimport { isAddress } from '../address/isAddress.js';\n/*\n * Serialize an  EIP-2930 access list\n * @remarks\n * Use to create a transaction serializer with support for EIP-2930 access lists\n *\n * @param accessList - Array of objects of address and arrays of Storage Keys\n * @throws InvalidAddressError, InvalidStorageKeySizeError\n * @returns Array of hex strings\n */\nexport function serializeAccessList(accessList) {\n    if (!accessList || accessList.length === 0)\n        return [];\n    const serializedAccessList = [];\n    for (let i = 0; i < accessList.length; i++) {\n        const { address, storageKeys } = accessList[i];\n        for (let j = 0; j < storageKeys.length; j++) {\n            if (storageKeys[j].length - 2 !== 64) {\n                throw new InvalidStorageKeySizeError({ storageKey: storageKeys[j] });\n            }\n        }\n        if (!isAddress(address, { strict: false })) {\n            throw new InvalidAddressError({ address });\n        }\n        serializedAccessList.push([address, storageKeys]);\n    }\n    return serializedAccessList;\n}\n//# sourceMappingURL=serializeAccessList.js.map","import { InvalidLegacyVError, } from '../../errors/transaction.js';\nimport { blobsToCommitments, } from '../blob/blobsToCommitments.js';\nimport { blobsToProofs, } from '../blob/blobsToProofs.js';\nimport { commitmentsToVersionedHashes, } from '../blob/commitmentsToVersionedHashes.js';\nimport { toBlobSidecars, } from '../blob/toBlobSidecars.js';\nimport { concatHex } from '../data/concat.js';\nimport { trim } from '../data/trim.js';\nimport { bytesToHex, toHex } from '../encoding/toHex.js';\nimport { toRlp } from '../encoding/toRlp.js';\nimport { assertTransactionEIP1559, assertTransactionEIP2930, assertTransactionEIP4844, assertTransactionLegacy, } from './assertTransaction.js';\nimport { getTransactionType, } from './getTransactionType.js';\nimport { serializeAccessList, } from './serializeAccessList.js';\nexport function serializeTransaction(transaction, signature) {\n    const type = getTransactionType(transaction);\n    if (type === 'eip1559')\n        return serializeTransactionEIP1559(transaction, signature);\n    if (type === 'eip2930')\n        return serializeTransactionEIP2930(transaction, signature);\n    if (type === 'eip4844')\n        return serializeTransactionEIP4844(transaction, signature);\n    return serializeTransactionLegacy(transaction, signature);\n}\nfunction serializeTransactionEIP4844(transaction, signature) {\n    const { chainId, gas, nonce, to, value, maxFeePerBlobGas, maxFeePerGas, maxPriorityFeePerGas, accessList, data, } = transaction;\n    assertTransactionEIP4844(transaction);\n    let blobVersionedHashes = transaction.blobVersionedHashes;\n    let sidecars = transaction.sidecars;\n    // If `blobs` are passed, we will need to compute the KZG commitments & proofs.\n    if (transaction.blobs &&\n        (typeof blobVersionedHashes === 'undefined' ||\n            typeof sidecars === 'undefined')) {\n        const blobs = (typeof transaction.blobs[0] === 'string'\n            ? transaction.blobs\n            : transaction.blobs.map((x) => bytesToHex(x)));\n        const kzg = transaction.kzg;\n        const commitments = blobsToCommitments({\n            blobs,\n            kzg,\n        });\n        if (typeof blobVersionedHashes === 'undefined')\n            blobVersionedHashes = commitmentsToVersionedHashes({\n                commitments,\n            });\n        if (typeof sidecars === 'undefined') {\n            const proofs = blobsToProofs({ blobs, commitments, kzg });\n            sidecars = toBlobSidecars({ blobs, commitments, proofs });\n        }\n    }\n    const serializedAccessList = serializeAccessList(accessList);\n    const serializedTransaction = [\n        toHex(chainId),\n        nonce ? toHex(nonce) : '0x',\n        maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n        maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n        serializedAccessList,\n        maxFeePerBlobGas ? toHex(maxFeePerBlobGas) : '0x',\n        blobVersionedHashes ?? [],\n        ...toYParitySignatureArray(transaction, signature),\n    ];\n    const blobs = [];\n    const commitments = [];\n    const proofs = [];\n    if (sidecars)\n        for (let i = 0; i < sidecars.length; i++) {\n            const { blob, commitment, proof } = sidecars[i];\n            blobs.push(blob);\n            commitments.push(commitment);\n            proofs.push(proof);\n        }\n    return concatHex([\n        '0x03',\n        sidecars\n            ? // If sidecars are enabled, envelope turns into a \"wrapper\":\n                toRlp([serializedTransaction, blobs, commitments, proofs])\n            : // If sidecars are disabled, standard envelope is used:\n                toRlp(serializedTransaction),\n    ]);\n}\nfunction serializeTransactionEIP1559(transaction, signature) {\n    const { chainId, gas, nonce, to, value, maxFeePerGas, maxPriorityFeePerGas, accessList, data, } = transaction;\n    assertTransactionEIP1559(transaction);\n    const serializedAccessList = serializeAccessList(accessList);\n    const serializedTransaction = [\n        toHex(chainId),\n        nonce ? toHex(nonce) : '0x',\n        maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n        maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n        serializedAccessList,\n        ...toYParitySignatureArray(transaction, signature),\n    ];\n    return concatHex([\n        '0x02',\n        toRlp(serializedTransaction),\n    ]);\n}\nfunction serializeTransactionEIP2930(transaction, signature) {\n    const { chainId, gas, data, nonce, to, value, accessList, gasPrice } = transaction;\n    assertTransactionEIP2930(transaction);\n    const serializedAccessList = serializeAccessList(accessList);\n    const serializedTransaction = [\n        toHex(chainId),\n        nonce ? toHex(nonce) : '0x',\n        gasPrice ? toHex(gasPrice) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n        serializedAccessList,\n        ...toYParitySignatureArray(transaction, signature),\n    ];\n    return concatHex([\n        '0x01',\n        toRlp(serializedTransaction),\n    ]);\n}\nfunction serializeTransactionLegacy(transaction, signature) {\n    const { chainId = 0, gas, data, nonce, to, value, gasPrice } = transaction;\n    assertTransactionLegacy(transaction);\n    let serializedTransaction = [\n        nonce ? toHex(nonce) : '0x',\n        gasPrice ? toHex(gasPrice) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n    ];\n    if (signature) {\n        const v = (() => {\n            // EIP-155 (inferred chainId)\n            if (signature.v >= 35n) {\n                const inferredChainId = (signature.v - 35n) / 2n;\n                if (inferredChainId > 0)\n                    return signature.v;\n                return 27n + (signature.v === 35n ? 0n : 1n);\n            }\n            // EIP-155 (explicit chainId)\n            if (chainId > 0)\n                return BigInt(chainId * 2) + BigInt(35n + signature.v - 27n);\n            // Pre-EIP-155 (no chainId)\n            const v = 27n + (signature.v === 27n ? 0n : 1n);\n            if (signature.v !== v)\n                throw new InvalidLegacyVError({ v: signature.v });\n            return v;\n        })();\n        serializedTransaction = [\n            ...serializedTransaction,\n            toHex(v),\n            signature.r,\n            signature.s,\n        ];\n    }\n    else if (chainId > 0) {\n        serializedTransaction = [\n            ...serializedTransaction,\n            toHex(chainId),\n            '0x',\n            '0x',\n        ];\n    }\n    return toRlp(serializedTransaction);\n}\nexport function toYParitySignatureArray(transaction, signature_) {\n    const signature = signature_ ?? transaction;\n    const { v, yParity } = signature;\n    if (typeof signature.r === 'undefined')\n        return [];\n    if (typeof signature.s === 'undefined')\n        return [];\n    if (typeof v === 'undefined' && typeof yParity === 'undefined')\n        return [];\n    const r = trim(signature.r);\n    const s = trim(signature.s);\n    const yParity_ = (() => {\n        if (typeof yParity === 'number')\n            return yParity ? toHex(1) : '0x';\n        if (v === 0n)\n            return '0x';\n        if (v === 1n)\n            return toHex(1);\n        return v === 27n ? '0x' : toHex(1);\n    })();\n    return [yParity_, r === '0x00' ? '0x' : r, s === '0x00' ? '0x' : s];\n}\n//# sourceMappingURL=serializeTransaction.js.map","import { InvalidSerializableTransactionError, } from '../../errors/transaction.js';\nexport function getTransactionType(transaction) {\n    if (transaction.type)\n        return transaction.type;\n    if (typeof transaction.blobs !== 'undefined' ||\n        typeof transaction.blobVersionedHashes !== 'undefined' ||\n        typeof transaction.maxFeePerBlobGas !== 'undefined' ||\n        typeof transaction.sidecars !== 'undefined')\n        return 'eip4844';\n    if (typeof transaction.maxFeePerGas !== 'undefined' ||\n        typeof transaction.maxPriorityFeePerGas !== 'undefined') {\n        return 'eip1559';\n    }\n    if (typeof transaction.gasPrice !== 'undefined') {\n        if (typeof transaction.accessList !== 'undefined')\n            return 'eip2930';\n        return 'legacy';\n    }\n    throw new InvalidSerializableTransactionError({ transaction });\n}\n//# sourceMappingURL=getTransactionType.js.map","import { commitmentToVersionedHash, } from './commitmentToVersionedHash.js';\n/**\n * Transform a list of commitments to their versioned hashes.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentsToVersionedHashes,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const versionedHashes = commitmentsToVersionedHashes({ commitments })\n * ```\n */\nexport function commitmentsToVersionedHashes(parameters) {\n    const { commitments, version } = parameters;\n    const to = parameters.to ?? (typeof commitments[0] === 'string' ? 'hex' : 'bytes');\n    const hashes = [];\n    for (const commitment of commitments) {\n        hashes.push(commitmentToVersionedHash({\n            commitment,\n            to,\n            version,\n        }));\n    }\n    return hashes;\n}\n//# sourceMappingURL=commitmentsToVersionedHashes.js.map","import { contracts } from './contracts.js';\nimport { formatters } from './formatters.js';\nimport { serializers } from './serializers.js';\nexport const chainConfig = {\n    contracts,\n    formatters,\n    serializers,\n};\n//# sourceMappingURL=chainConfig.js.map",null,"import { InvalidAddressError } from '../errors/address.js';\nimport { isAddress } from '../utils/address/isAddress.js';\nimport { concatHex } from '../utils/data/concat.js';\nimport { toHex } from '../utils/encoding/toHex.js';\nimport { toRlp } from '../utils/encoding/toRlp.js';\nimport { serializeTransaction as serializeTransaction_, } from '../utils/transaction/serializeTransaction.js';\nexport function serializeTransaction(transaction, signature) {\n    if (isDeposit(transaction))\n        return serializeTransactionDeposit(transaction);\n    return serializeTransaction_(transaction, signature);\n}\nexport const serializers = {\n    transaction: serializeTransaction,\n};\nfunction serializeTransactionDeposit(transaction) {\n    assertTransactionDeposit(transaction);\n    const { sourceHash, data, from, gas, isSystemTx, mint, to, value } = transaction;\n    const serializedTransaction = [\n        sourceHash,\n        from,\n        to ?? '0x',\n        mint ? toHex(mint) : '0x',\n        value ? toHex(value) : '0x',\n        gas ? toHex(gas) : '0x',\n        isSystemTx ? '0x1' : '0x',\n        data ?? '0x',\n    ];\n    return concatHex([\n        '0x7e',\n        toRlp(serializedTransaction),\n    ]);\n}\nfunction isDeposit(transaction) {\n    if (transaction.type === 'deposit')\n        return true;\n    if (typeof transaction.sourceHash !== 'undefined')\n        return true;\n    return false;\n}\nexport function assertTransactionDeposit(transaction) {\n    const { from, to } = transaction;\n    if (from && !isAddress(from))\n        throw new InvalidAddressError({ address: from });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n}\n//# sourceMappingURL=serializers.js.map","export function defineChain(chain) {\n    return {\n        formatters: undefined,\n        fees: undefined,\n        serializers: undefined,\n        ...chain,\n    };\n}\n//# sourceMappingURL=defineChain.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const optimism = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 10,\n    name: 'OP Mainnet',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.optimism.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Optimism Explorer',\n            url: 'https://optimistic.etherscan.io',\n            apiUrl: 'https://api-optimistic.etherscan.io/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        disputeGameFactory: {\n            [sourceId]: {\n                address: '0xe5965Ab5962eDc7477C8520243A95517CD252fA9',\n            },\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0xdfe97868233d1aa22e815a266982f2cf17685a27',\n            },\n        },\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 4286263,\n        },\n        portal: {\n            [sourceId]: {\n                address: '0xbEb5Fc579115071764c7423A4f12eDde41f106Ed',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1',\n            },\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=optimism.js.map"],"names":["defineFormatter","type","format","exclude","overrides","args","formatted","key","transactionType","formatTransaction","transaction","transaction_","blockHash","blockNumber","BigInt","chainId","undefined","gas","gasPrice","maxFeePerBlobGas","maxFeePerGas","maxPriorityFeePerGas","nonce","to","transactionIndex","Number","typeHex","value","v","yParity","accessList","defineTransaction","formatBlock","block","transactions","map","baseFeePerGas","blobGasUsed","difficulty","excessBlobGas","gasLimit","gasUsed","hash","logsBloom","number","size","timestamp","totalDifficulty","defineBlock","receiptStatuses","formatTransactionReceipt","transactionReceipt","receipt","contractAddress","cumulativeGasUsed","effectiveGasPrice","logs","log","eventName","logIndex","transactionHash","formatLog","status","blobGasPrice","defineTransactionReceipt","formatters","isSystemTx","mint","sourceHash","stateRoot","l1GasPrice","l1GasUsed","l1Fee","l1FeeScalar","NegativeOffsetError","constructor","offset","super","Object","defineProperty","this","enumerable","configurable","writable","PositionOutOfBoundsError","length","position","RecursiveReadLimitExceededError","count","limit","staticCursor","bytes","Uint8Array","dataView","DataView","ArrayBuffer","positionReadCount","Map","recursiveReadCount","recursiveReadLimit","POSITIVE_INFINITY","assertReadLimit","assertPosition","decrementPosition","getReadCount","get","incrementPosition","inspectByte","position_","inspectBytes","subarray","inspectUint8","inspectUint16","getUint16","inspectUint24","getUint8","inspectUint32","getUint32","pushByte","byte","pushBytes","set","pushUint8","pushUint16","setUint16","pushUint24","setUint8","pushUint32","setUint32","readByte","_touch","readBytes","readUint8","readUint16","readUint24","readUint32","remaining","setPosition","oldPosition","createCursor","cursor","create","buffer","byteOffset","byteLength","toRlp","encodable","getEncodable","encode","Array","isArray","list","bodyLength","reduce","acc","x","sizeOfBodyLength","getSizeOfLength","getEncodableList","bytesOrHex","sizeOfBytesLength","getEncodableBytes","prettyPrint","entries","filter","Boolean","maxLength","Math","max","padEnd","join","InvalidLegacyVError","InvalidSerializableTransactionError","metaMessages","InvalidStorageKeySizeError","storageKey","floor","blobsToCommitments","parameters","kzg","blobs","commitments","blob","push","from","blobToKzgCommitment","blobsToProofs","proofs","i","commitment","computeBlobKzgProof","SHA2","blockLen","outputLen","padOffset","isLE","finished","pos","destroyed","view","update","data","len","take","min","process","roundClean","digestInto","out","fill","setBigUint64","_32n","_u32_max","wh","wl","h","l","oview","Error","outLen","state","digest","res","slice","destroy","_cloneInto","Maj","a","b","c","SHA256_K","Uint32Array","IV","SHA256_W","SHA256","A","B","C","D","E","F","G","H","W15","W2","s0","s1","T1","T2","sha256","commitmentToVersionedHash","version","versionedHash","to_","isHex","strict","toBytes","toHex","bytesPerFieldElement","fieldElementsPerBlob","bytesPerBlob","maxBytesPerTransaction","versionedHashVersionKzg","BlobSizeTooLargeError","maxSize","EmptyBlobError","InvalidVersionedHashSizeError","InvalidVersionedHashVersionError","toBlobSidecars","size_","active","toBlobs","sidecars","proof","trim","hexOrBytes","dir","replace","sliceLength","toString","InvalidChainIdError","gweiUnits","ether","wei","unit","decimals","display","negative","startsWith","padStart","integer","fraction","formatUnits","ExecutionRevertedError","cause","message","reason","FeeCapTooHighError","FeeCapTooLowError","NonceTooHighError","NonceTooLowError","NonceMaxValueError","InsufficientFundsError","IntrinsicGasTooHighError","IntrinsicGasTooLowError","TransactionTypeNotSupportedError","TipAboveFeeCapError","assertTransactionEIP1559","isAddress","address","serializeAccessList","serializedAccessList","storageKeys","j","serializeTransaction","signature","blobVersionedHashes","getTransactionType","serializedTransaction","toYParitySignatureArray","concat","serializeTransactionEIP1559","assertTransactionEIP2930","serializeTransactionEIP2930","assertTransactionEIP4844","hashes","commitmentsToVersionedHashes","serializeTransactionEIP4844","assertTransactionLegacy","r","s","serializeTransactionLegacy","signature_","chainConfig","contracts","gasPriceOracle","l1Block","l2CrossDomainMessenger","l2Erc721Bridge","l2StandardBridge","l2ToL1MessagePasser","serializers","isDeposit","assertTransactionDeposit","serializeTransactionDeposit","defineChain","chain","fees","optimism","id","name","nativeCurrency","symbol","rpcUrls","default","http","blockExplorers","url","apiUrl","disputeGameFactory","l2OutputOracle","multicall3","blockCreated","portal","l1StandardBridge","sourceId"],"sourceRoot":""}