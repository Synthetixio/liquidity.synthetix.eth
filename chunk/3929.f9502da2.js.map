{"version":3,"file":"chunk/3929.f9502da2.js","mappings":"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","sources":["webpack://@snx-v3/liquidity/../components/BorrowModal/BorrowModal.tsx","webpack://@snx-v3/liquidity/../components/BorrowModal/index.ts"],"sourcesContent":["import { Button, Divider, Text, useToast, Link, Flex, Skeleton } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport Wei from '@synthetixio/wei';\nimport { TransactionStatus } from '@snx-v3/txnReducer';\nimport { Multistep } from '@snx-v3/Multistep';\nimport { useCallback, useContext } from 'react';\nimport { useParams } from '@snx-v3/useParams';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { ContractError } from '@snx-v3/ContractError';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useBorrow } from '@snx-v3/useBorrow';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { ArrowBackIcon } from '@chakra-ui/icons';\nimport { LiquidityPositionUpdated } from '../../ui/src/components/Manage/LiquidityPositionUpdated';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { ZEROWEI } from '../../ui/src/utils/constants';\n\nexport const BorrowModalUi: React.FC<{\n  onClose: () => void;\n  debtChange: Wei;\n  isOpen: boolean;\n  txnStatus: TransactionStatus;\n  execBorrow: () => void;\n}> = ({ onClose, isOpen, debtChange, txnStatus, execBorrow }) => {\n  const { network } = useNetwork();\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n\n  const { data: systemToken } = useSystemToken();\n\n  if (isOpen) {\n    if (txnStatus === 'success') {\n      return (\n        <LiquidityPositionUpdated\n          onClose={onClose}\n          title=\"Debt successfully Updated\"\n          subline={\n            <>\n              Your <b>Debt</b> has been updated, read more about it in the{' '}\n              <Link\n                href=\"https://docs.synthetix.io/v/synthetix-v3-user-documentation\"\n                target=\"_blank\"\n                color=\"cyan.500\"\n              >\n                Synthetix V3 Documentation\n              </Link>\n            </>\n          }\n          alertText={\n            <>\n              <b>Debt</b> successfully Updated\n            </>\n          }\n        />\n      );\n    }\n\n    return (\n      <div>\n        <Text color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n          <ArrowBackIcon cursor=\"pointer\" onClick={onClose} mr={2} />\n          Manage Debt\n        </Text>\n\n        <Divider my={4} />\n\n        <Multistep\n          step={1}\n          title=\"Borrow\"\n          subtitle={\n            <Text as=\"div\">\n              {isBase ? 'Claim' : 'Borrow'}{' '}\n              <Amount value={debtChange} suffix={isBase ? ' USDC' : ` ${systemToken?.symbol}`} />\n            </Text>\n          }\n          status={{\n            failed: txnStatus === 'error',\n            loading: ['prompting', 'pending'].includes(txnStatus),\n          }}\n        />\n\n        <Button\n          isDisabled={txnStatus === 'pending'}\n          onClick={() => {\n            if (['unsent', 'error'].includes(txnStatus)) {\n              execBorrow();\n            }\n          }}\n          width=\"100%\"\n          mt=\"6\"\n          data-testid=\"borrow confirm button\"\n        >\n          {(() => {\n            switch (txnStatus) {\n              case 'error':\n                return 'Retry';\n              case 'pending':\n              case 'prompting':\n                return 'Processing...';\n              default:\n                return 'Execute Transaction';\n            }\n          })()}\n        </Button>\n      </div>\n    );\n  }\n};\n\nexport const BorrowModal: React.FC<{\n  onClose: () => void;\n  isOpen: boolean;\n}> = ({ onClose, isOpen }) => {\n  const { debtChange, setDebtChange } = useContext(ManagePositionContext);\n  const queryClient = useQueryClient();\n  const params = useParams();\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n\n  const {\n    exec: execBorrow,\n    txnState,\n    settle: settleBorrow,\n  } = useBorrow({\n    accountId: params.accountId,\n    poolId: params.poolId,\n    collateralTypeAddress: collateralType?.tokenAddress,\n    debtChange,\n  });\n\n  const toast = useToast({ isClosable: true, duration: 9000 });\n  const { data: CoreProxy } = useCoreProxy();\n  const { network } = useNetwork();\n\n  const errorParserCoreProxy = useContractErrorParser(CoreProxy);\n\n  const execBorrowWithErrorParser = useCallback(async () => {\n    try {\n      await execBorrow();\n      await queryClient.invalidateQueries({\n        queryKey: [`${network?.id}-${network?.preset}`, 'LiquidityPosition'],\n        exact: false,\n      });\n      setDebtChange(ZEROWEI);\n    } catch (error: any) {\n      const contractError = errorParserCoreProxy(error);\n      if (contractError) {\n        console.error(new Error(contractError.name), contractError);\n      }\n      toast.closeAll();\n      toast({\n        title: 'Borrow failed',\n        description: contractError ? (\n          <ContractError contractError={contractError} />\n        ) : (\n          'Please try again.'\n        ),\n        status: 'error',\n        variant: 'left-accent',\n      });\n      throw Error('Borrow failed', { cause: error });\n    }\n  }, [\n    execBorrow,\n    queryClient,\n    network?.id,\n    network?.preset,\n    setDebtChange,\n    errorParserCoreProxy,\n    toast,\n  ]);\n\n  const { txnStatus } = txnState;\n\n  if (!params.poolId || !params.accountId || !collateralType)\n    return (\n      <Flex gap={4} flexDirection=\"column\">\n        <Skeleton maxW=\"232px\" width=\"100%\" height=\"20px\" />\n        <Divider my={4} />\n        <Skeleton width=\"100%\" height=\"20px\" />\n        <Skeleton width=\"100%\" height=\"20px\" />\n      </Flex>\n    );\n\n  return (\n    <BorrowModalUi\n      execBorrow={execBorrowWithErrorParser}\n      debtChange={debtChange}\n      txnStatus={txnStatus}\n      onClose={() => {\n        settleBorrow();\n        onClose();\n      }}\n      isOpen={isOpen}\n    />\n  );\n};\n","import { BorrowModal } from './BorrowModal';\nexport * from './BorrowModal';\nexport default BorrowModal;\n"],"names":["BorrowModalUi","onClose","isOpen","debtChange","txnStatus","execBorrow","network","useNetwork","isBase","isBaseAndromeda","id","preset","data","systemToken","useSystemToken","_jsx","LiquidityPositionUpdated","title","subline","_jsxs","_Fragment","children","Link","href","target","color","alertText","Text","fontSize","fontWeight","ArrowBackIcon","cursor","onClick","mr","Divider","my","Multistep","step","subtitle","as","Amount","value","suffix","symbol","status","failed","loading","includes","Button","isDisabled","width","mt","BorrowModal","setDebtChange","useContext","ManagePositionContext","queryClient","useQueryClient","params","useParams","collateralType","useCollateralType","collateralSymbol","exec","txnState","settle","settleBorrow","useBorrow","accountId","poolId","collateralTypeAddress","tokenAddress","toast","useToast","isClosable","duration","CoreProxy","useCoreProxy","errorParserCoreProxy","useContractErrorParser","execBorrowWithErrorParser","useCallback","async","invalidateQueries","queryKey","exact","ZEROWEI","error","contractError","console","Error","name","closeAll","description","ContractError","variant","cause","Flex","gap","flexDirection","Skeleton","maxW","height"],"sourceRoot":""}