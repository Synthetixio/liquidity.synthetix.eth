{"version":3,"file":"chunk/4078.5db49416.js","mappings":"4KAEO,MAAMA,EAAU,6CACVC,EAAM,CACjB,wDACA,mBACA,oCACA,mCACA,mCACA,kCACA,sBACA,yDACA,yCACA,+DACA,6BACA,sDACA,uDACA,mDACA,0CACA,gCACA,wDACA,gDACA,6BACA,wCACA,6DACA,mCACA,0DACA,+CACA,mCACA,uCACA,sCACA,2FACA,uFACA,oFACA,gDACA,oEACA,iCACA,wEACA,wEACA,kFACA,+CACA,6CACA,wCACA,2DACA,6DACA,uEACA,mFACA,0DACA,8DACA,uCACA,qEACA,0CACA,8DACA,oFACA,2DACA,gDACA,mE","sources":["webpack://@snx-v3/staking-ui/../../contracts/src/base-goerli/AccountProxy.ts"],"sourcesContent":["// !!! DO NOT EDIT !!! Automatically generated file\n\nexport const address = '0xdD066734028Cb1f07AC8CEdd054BA64Ea05b8461';\nexport const abi = [\n  'error ImplementationIsSterile(address implementation)',\n  'error NoChange()',\n  'error NotAContract(address contr)',\n  'error NotNominated(address addr)',\n  'error Unauthorized(address addr)',\n  'error UpgradeSimulationFailed()',\n  'error ZeroAddress()',\n  'event OwnerChanged(address oldOwner, address newOwner)',\n  'event OwnerNominated(address newOwner)',\n  'event Upgraded(address indexed self, address implementation)',\n  'function acceptOwnership()',\n  'function getImplementation() view returns (address)',\n  'function nominateNewOwner(address newNominatedOwner)',\n  'function nominatedOwner() view returns (address)',\n  'function owner() view returns (address)',\n  'function renounceNomination()',\n  'function simulateUpgradeTo(address newImplementation)',\n  'function upgradeTo(address newImplementation)',\n  'error AlreadyInitialized()',\n  'error CannotSelfApprove(address addr)',\n  'error IndexOverrun(uint256 requestedIndex, uint256 length)',\n  'error InvalidOwner(address addr)',\n  'error InvalidParameter(string parameter, string reason)',\n  'error InvalidTransferRecipient(address addr)',\n  'error OverflowUint256ToUint128()',\n  'error TokenAlreadyMinted(uint256 id)',\n  'error TokenDoesNotExist(uint256 id)',\n  'event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)',\n  'event ApprovalForAll(address indexed owner, address indexed operator, bool approved)',\n  'event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)',\n  'function approve(address to, uint256 tokenId)',\n  'function balanceOf(address holder) view returns (uint256 balance)',\n  'function burn(uint256 tokenId)',\n  'function getApproved(uint256 tokenId) view returns (address operator)',\n  'function initialize(string tokenName, string tokenSymbol, string uri)',\n  'function isApprovedForAll(address holder, address operator) view returns (bool)',\n  'function isInitialized() view returns (bool)',\n  'function mint(address to, uint256 tokenId)',\n  'function name() view returns (string)',\n  'function ownerOf(uint256 tokenId) view returns (address)',\n  'function safeMint(address to, uint256 tokenId, bytes data)',\n  'function safeTransferFrom(address from, address to, uint256 tokenId)',\n  'function safeTransferFrom(address from, address to, uint256 tokenId, bytes data)',\n  'function setAllowance(uint256 tokenId, address spender)',\n  'function setApprovalForAll(address operator, bool approved)',\n  'function setBaseTokenURI(string uri)',\n  'function supportsInterface(bytes4 interfaceId) view returns (bool)',\n  'function symbol() view returns (string)',\n  'function tokenByIndex(uint256 index) view returns (uint256)',\n  'function tokenOfOwnerByIndex(address owner, uint256 index) view returns (uint256)',\n  'function tokenURI(uint256 tokenId) view returns (string)',\n  'function totalSupply() view returns (uint256)',\n  'function transferFrom(address from, address to, uint256 tokenId)',\n];\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport type {\n  BaseContract,\n  BigNumber,\n  BigNumberish,\n  BytesLike,\n  CallOverrides,\n  ContractTransaction,\n  Overrides,\n  PopulatedTransaction,\n  Signer,\n  utils,\n} from 'ethers';\nimport type { FunctionFragment, Result, EventFragment } from '@ethersproject/abi';\nimport type { Listener, Provider } from '@ethersproject/providers';\nimport type { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from './common';\n\nexport interface AccountProxyInterface extends utils.Interface {\n  functions: {\n    'acceptOwnership()': FunctionFragment;\n    'getImplementation()': FunctionFragment;\n    'nominateNewOwner(address)': FunctionFragment;\n    'nominatedOwner()': FunctionFragment;\n    'owner()': FunctionFragment;\n    'renounceNomination()': FunctionFragment;\n    'simulateUpgradeTo(address)': FunctionFragment;\n    'upgradeTo(address)': FunctionFragment;\n    'approve(address,uint256)': FunctionFragment;\n    'balanceOf(address)': FunctionFragment;\n    'burn(uint256)': FunctionFragment;\n    'getApproved(uint256)': FunctionFragment;\n    'initialize(string,string,string)': FunctionFragment;\n    'isApprovedForAll(address,address)': FunctionFragment;\n    'isInitialized()': FunctionFragment;\n    'mint(address,uint256)': FunctionFragment;\n    'name()': FunctionFragment;\n    'ownerOf(uint256)': FunctionFragment;\n    'safeMint(address,uint256,bytes)': FunctionFragment;\n    'safeTransferFrom(address,address,uint256)': FunctionFragment;\n    'safeTransferFrom(address,address,uint256,bytes)': FunctionFragment;\n    'setAllowance(uint256,address)': FunctionFragment;\n    'setApprovalForAll(address,bool)': FunctionFragment;\n    'setBaseTokenURI(string)': FunctionFragment;\n    'supportsInterface(bytes4)': FunctionFragment;\n    'symbol()': FunctionFragment;\n    'tokenByIndex(uint256)': FunctionFragment;\n    'tokenOfOwnerByIndex(address,uint256)': FunctionFragment;\n    'tokenURI(uint256)': FunctionFragment;\n    'totalSupply()': FunctionFragment;\n    'transferFrom(address,address,uint256)': FunctionFragment;\n  };\n\n  getFunction(\n    nameOrSignatureOrTopic:\n      | 'acceptOwnership'\n      | 'getImplementation'\n      | 'nominateNewOwner'\n      | 'nominatedOwner'\n      | 'owner'\n      | 'renounceNomination'\n      | 'simulateUpgradeTo'\n      | 'upgradeTo'\n      | 'approve'\n      | 'balanceOf'\n      | 'burn'\n      | 'getApproved'\n      | 'initialize'\n      | 'isApprovedForAll'\n      | 'isInitialized'\n      | 'mint'\n      | 'name'\n      | 'ownerOf'\n      | 'safeMint'\n      | 'safeTransferFrom(address,address,uint256)'\n      | 'safeTransferFrom(address,address,uint256,bytes)'\n      | 'setAllowance'\n      | 'setApprovalForAll'\n      | 'setBaseTokenURI'\n      | 'supportsInterface'\n      | 'symbol'\n      | 'tokenByIndex'\n      | 'tokenOfOwnerByIndex'\n      | 'tokenURI'\n      | 'totalSupply'\n      | 'transferFrom'\n  ): FunctionFragment;\n\n  encodeFunctionData(functionFragment: 'acceptOwnership', values?: undefined): string;\n  encodeFunctionData(functionFragment: 'getImplementation', values?: undefined): string;\n  encodeFunctionData(functionFragment: 'nominateNewOwner', values: [string]): string;\n  encodeFunctionData(functionFragment: 'nominatedOwner', values?: undefined): string;\n  encodeFunctionData(functionFragment: 'owner', values?: undefined): string;\n  encodeFunctionData(functionFragment: 'renounceNomination', values?: undefined): string;\n  encodeFunctionData(functionFragment: 'simulateUpgradeTo', values: [string]): string;\n  encodeFunctionData(functionFragment: 'upgradeTo', values: [string]): string;\n  encodeFunctionData(functionFragment: 'approve', values: [string, BigNumberish]): string;\n  encodeFunctionData(functionFragment: 'balanceOf', values: [string]): string;\n  encodeFunctionData(functionFragment: 'burn', values: [BigNumberish]): string;\n  encodeFunctionData(functionFragment: 'getApproved', values: [BigNumberish]): string;\n  encodeFunctionData(functionFragment: 'initialize', values: [string, string, string]): string;\n  encodeFunctionData(functionFragment: 'isApprovedForAll', values: [string, string]): string;\n  encodeFunctionData(functionFragment: 'isInitialized', values?: undefined): string;\n  encodeFunctionData(functionFragment: 'mint', values: [string, BigNumberish]): string;\n  encodeFunctionData(functionFragment: 'name', values?: undefined): string;\n  encodeFunctionData(functionFragment: 'ownerOf', values: [BigNumberish]): string;\n  encodeFunctionData(\n    functionFragment: 'safeMint',\n    values: [string, BigNumberish, BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: 'safeTransferFrom(address,address,uint256)',\n    values: [string, string, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: 'safeTransferFrom(address,address,uint256,bytes)',\n    values: [string, string, BigNumberish, BytesLike]\n  ): string;\n  encodeFunctionData(functionFragment: 'setAllowance', values: [BigNumberish, string]): string;\n  encodeFunctionData(functionFragment: 'setApprovalForAll', values: [string, boolean]): string;\n  encodeFunctionData(functionFragment: 'setBaseTokenURI', values: [string]): string;\n  encodeFunctionData(functionFragment: 'supportsInterface', values: [BytesLike]): string;\n  encodeFunctionData(functionFragment: 'symbol', values?: undefined): string;\n  encodeFunctionData(functionFragment: 'tokenByIndex', values: [BigNumberish]): string;\n  encodeFunctionData(\n    functionFragment: 'tokenOfOwnerByIndex',\n    values: [string, BigNumberish]\n  ): string;\n  encodeFunctionData(functionFragment: 'tokenURI', values: [BigNumberish]): string;\n  encodeFunctionData(functionFragment: 'totalSupply', values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: 'transferFrom',\n    values: [string, string, BigNumberish]\n  ): string;\n\n  decodeFunctionResult(functionFragment: 'acceptOwnership', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'getImplementation', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'nominateNewOwner', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'nominatedOwner', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'owner', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'renounceNomination', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'simulateUpgradeTo', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'upgradeTo', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'approve', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'balanceOf', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'burn', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'getApproved', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'initialize', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'isApprovedForAll', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'isInitialized', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'mint', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'name', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'ownerOf', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'safeMint', data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: 'safeTransferFrom(address,address,uint256)',\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: 'safeTransferFrom(address,address,uint256,bytes)',\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: 'setAllowance', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'setApprovalForAll', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'setBaseTokenURI', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'supportsInterface', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'symbol', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'tokenByIndex', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'tokenOfOwnerByIndex', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'tokenURI', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'totalSupply', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'transferFrom', data: BytesLike): Result;\n\n  events: {\n    'OwnerChanged(address,address)': EventFragment;\n    'OwnerNominated(address)': EventFragment;\n    'Upgraded(address,address)': EventFragment;\n    'Approval(address,address,uint256)': EventFragment;\n    'ApprovalForAll(address,address,bool)': EventFragment;\n    'Transfer(address,address,uint256)': EventFragment;\n  };\n\n  getEvent(nameOrSignatureOrTopic: 'OwnerChanged'): EventFragment;\n  getEvent(nameOrSignatureOrTopic: 'OwnerNominated'): EventFragment;\n  getEvent(nameOrSignatureOrTopic: 'Upgraded'): EventFragment;\n  getEvent(nameOrSignatureOrTopic: 'Approval'): EventFragment;\n  getEvent(nameOrSignatureOrTopic: 'ApprovalForAll'): EventFragment;\n  getEvent(nameOrSignatureOrTopic: 'Transfer'): EventFragment;\n}\n\nexport interface OwnerChangedEventObject {\n  oldOwner: string;\n  newOwner: string;\n}\nexport type OwnerChangedEvent = TypedEvent<[string, string], OwnerChangedEventObject>;\n\nexport type OwnerChangedEventFilter = TypedEventFilter<OwnerChangedEvent>;\n\nexport interface OwnerNominatedEventObject {\n  newOwner: string;\n}\nexport type OwnerNominatedEvent = TypedEvent<[string], OwnerNominatedEventObject>;\n\nexport type OwnerNominatedEventFilter = TypedEventFilter<OwnerNominatedEvent>;\n\nexport interface UpgradedEventObject {\n  self: string;\n  implementation: string;\n}\nexport type UpgradedEvent = TypedEvent<[string, string], UpgradedEventObject>;\n\nexport type UpgradedEventFilter = TypedEventFilter<UpgradedEvent>;\n\nexport interface ApprovalEventObject {\n  owner: string;\n  approved: string;\n  tokenId: BigNumber;\n}\nexport type ApprovalEvent = TypedEvent<[string, string, BigNumber], ApprovalEventObject>;\n\nexport type ApprovalEventFilter = TypedEventFilter<ApprovalEvent>;\n\nexport interface ApprovalForAllEventObject {\n  owner: string;\n  operator: string;\n  approved: boolean;\n}\nexport type ApprovalForAllEvent = TypedEvent<[string, string, boolean], ApprovalForAllEventObject>;\n\nexport type ApprovalForAllEventFilter = TypedEventFilter<ApprovalForAllEvent>;\n\nexport interface TransferEventObject {\n  from: string;\n  to: string;\n  tokenId: BigNumber;\n}\nexport type TransferEvent = TypedEvent<[string, string, BigNumber], TransferEventObject>;\n\nexport type TransferEventFilter = TypedEventFilter<TransferEvent>;\n\nexport interface AccountProxy extends BaseContract {\n  connect(signerOrProvider: Signer | Provider | string): this;\n  attach(addressOrName: string): this;\n  deployed(): Promise<this>;\n\n  interface: AccountProxyInterface;\n\n  queryFilter<TEvent extends TypedEvent>(\n    event: TypedEventFilter<TEvent>,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TEvent>>;\n\n  listeners<TEvent extends TypedEvent>(\n    eventFilter?: TypedEventFilter<TEvent>\n  ): Array<TypedListener<TEvent>>;\n  listeners(eventName?: string): Array<Listener>;\n  removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this;\n  removeAllListeners(eventName?: string): this;\n  off: OnEvent<this>;\n  on: OnEvent<this>;\n  once: OnEvent<this>;\n  removeListener: OnEvent<this>;\n\n  functions: {\n    acceptOwnership(overrides?: Overrides & { from?: string }): Promise<ContractTransaction>;\n\n    getImplementation(overrides?: CallOverrides): Promise<[string]>;\n\n    nominateNewOwner(\n      newNominatedOwner: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<ContractTransaction>;\n\n    nominatedOwner(overrides?: CallOverrides): Promise<[string]>;\n\n    owner(overrides?: CallOverrides): Promise<[string]>;\n\n    renounceNomination(overrides?: Overrides & { from?: string }): Promise<ContractTransaction>;\n\n    simulateUpgradeTo(\n      newImplementation: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<ContractTransaction>;\n\n    upgradeTo(\n      newImplementation: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<ContractTransaction>;\n\n    approve(\n      to: string,\n      tokenId: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<ContractTransaction>;\n\n    balanceOf(\n      holder: string,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber] & { balance: BigNumber }>;\n\n    burn(\n      tokenId: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<ContractTransaction>;\n\n    getApproved(\n      tokenId: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<[string] & { operator: string }>;\n\n    initialize(\n      tokenName: string,\n      tokenSymbol: string,\n      uri: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<ContractTransaction>;\n\n    isApprovedForAll(\n      holder: string,\n      operator: string,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isInitialized(overrides?: CallOverrides): Promise<[boolean]>;\n\n    mint(\n      to: string,\n      tokenId: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<ContractTransaction>;\n\n    name(overrides?: CallOverrides): Promise<[string]>;\n\n    ownerOf(tokenId: BigNumberish, overrides?: CallOverrides): Promise<[string]>;\n\n    safeMint(\n      to: string,\n      tokenId: BigNumberish,\n      data: BytesLike,\n      overrides?: Overrides & { from?: string }\n    ): Promise<ContractTransaction>;\n\n    'safeTransferFrom(address,address,uint256)'(\n      from: string,\n      to: string,\n      tokenId: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<ContractTransaction>;\n\n    'safeTransferFrom(address,address,uint256,bytes)'(\n      from: string,\n      to: string,\n      tokenId: BigNumberish,\n      data: BytesLike,\n      overrides?: Overrides & { from?: string }\n    ): Promise<ContractTransaction>;\n\n    setAllowance(\n      tokenId: BigNumberish,\n      spender: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<ContractTransaction>;\n\n    setApprovalForAll(\n      operator: string,\n      approved: boolean,\n      overrides?: Overrides & { from?: string }\n    ): Promise<ContractTransaction>;\n\n    setBaseTokenURI(\n      uri: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<ContractTransaction>;\n\n    supportsInterface(interfaceId: BytesLike, overrides?: CallOverrides): Promise<[boolean]>;\n\n    symbol(overrides?: CallOverrides): Promise<[string]>;\n\n    tokenByIndex(index: BigNumberish, overrides?: CallOverrides): Promise<[BigNumber]>;\n\n    tokenOfOwnerByIndex(\n      owner: string,\n      index: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber]>;\n\n    tokenURI(tokenId: BigNumberish, overrides?: CallOverrides): Promise<[string]>;\n\n    totalSupply(overrides?: CallOverrides): Promise<[BigNumber]>;\n\n    transferFrom(\n      from: string,\n      to: string,\n      tokenId: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<ContractTransaction>;\n  };\n\n  acceptOwnership(overrides?: Overrides & { from?: string }): Promise<ContractTransaction>;\n\n  getImplementation(overrides?: CallOverrides): Promise<string>;\n\n  nominateNewOwner(\n    newNominatedOwner: string,\n    overrides?: Overrides & { from?: string }\n  ): Promise<ContractTransaction>;\n\n  nominatedOwner(overrides?: CallOverrides): Promise<string>;\n\n  owner(overrides?: CallOverrides): Promise<string>;\n\n  renounceNomination(overrides?: Overrides & { from?: string }): Promise<ContractTransaction>;\n\n  simulateUpgradeTo(\n    newImplementation: string,\n    overrides?: Overrides & { from?: string }\n  ): Promise<ContractTransaction>;\n\n  upgradeTo(\n    newImplementation: string,\n    overrides?: Overrides & { from?: string }\n  ): Promise<ContractTransaction>;\n\n  approve(\n    to: string,\n    tokenId: BigNumberish,\n    overrides?: Overrides & { from?: string }\n  ): Promise<ContractTransaction>;\n\n  balanceOf(holder: string, overrides?: CallOverrides): Promise<BigNumber>;\n\n  burn(\n    tokenId: BigNumberish,\n    overrides?: Overrides & { from?: string }\n  ): Promise<ContractTransaction>;\n\n  getApproved(tokenId: BigNumberish, overrides?: CallOverrides): Promise<string>;\n\n  initialize(\n    tokenName: string,\n    tokenSymbol: string,\n    uri: string,\n    overrides?: Overrides & { from?: string }\n  ): Promise<ContractTransaction>;\n\n  isApprovedForAll(holder: string, operator: string, overrides?: CallOverrides): Promise<boolean>;\n\n  isInitialized(overrides?: CallOverrides): Promise<boolean>;\n\n  mint(\n    to: string,\n    tokenId: BigNumberish,\n    overrides?: Overrides & { from?: string }\n  ): Promise<ContractTransaction>;\n\n  name(overrides?: CallOverrides): Promise<string>;\n\n  ownerOf(tokenId: BigNumberish, overrides?: CallOverrides): Promise<string>;\n\n  safeMint(\n    to: string,\n    tokenId: BigNumberish,\n    data: BytesLike,\n    overrides?: Overrides & { from?: string }\n  ): Promise<ContractTransaction>;\n\n  'safeTransferFrom(address,address,uint256)'(\n    from: string,\n    to: string,\n    tokenId: BigNumberish,\n    overrides?: Overrides & { from?: string }\n  ): Promise<ContractTransaction>;\n\n  'safeTransferFrom(address,address,uint256,bytes)'(\n    from: string,\n    to: string,\n    tokenId: BigNumberish,\n    data: BytesLike,\n    overrides?: Overrides & { from?: string }\n  ): Promise<ContractTransaction>;\n\n  setAllowance(\n    tokenId: BigNumberish,\n    spender: string,\n    overrides?: Overrides & { from?: string }\n  ): Promise<ContractTransaction>;\n\n  setApprovalForAll(\n    operator: string,\n    approved: boolean,\n    overrides?: Overrides & { from?: string }\n  ): Promise<ContractTransaction>;\n\n  setBaseTokenURI(\n    uri: string,\n    overrides?: Overrides & { from?: string }\n  ): Promise<ContractTransaction>;\n\n  supportsInterface(interfaceId: BytesLike, overrides?: CallOverrides): Promise<boolean>;\n\n  symbol(overrides?: CallOverrides): Promise<string>;\n\n  tokenByIndex(index: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;\n\n  tokenOfOwnerByIndex(\n    owner: string,\n    index: BigNumberish,\n    overrides?: CallOverrides\n  ): Promise<BigNumber>;\n\n  tokenURI(tokenId: BigNumberish, overrides?: CallOverrides): Promise<string>;\n\n  totalSupply(overrides?: CallOverrides): Promise<BigNumber>;\n\n  transferFrom(\n    from: string,\n    to: string,\n    tokenId: BigNumberish,\n    overrides?: Overrides & { from?: string }\n  ): Promise<ContractTransaction>;\n\n  callStatic: {\n    acceptOwnership(overrides?: CallOverrides): Promise<void>;\n\n    getImplementation(overrides?: CallOverrides): Promise<string>;\n\n    nominateNewOwner(newNominatedOwner: string, overrides?: CallOverrides): Promise<void>;\n\n    nominatedOwner(overrides?: CallOverrides): Promise<string>;\n\n    owner(overrides?: CallOverrides): Promise<string>;\n\n    renounceNomination(overrides?: CallOverrides): Promise<void>;\n\n    simulateUpgradeTo(newImplementation: string, overrides?: CallOverrides): Promise<void>;\n\n    upgradeTo(newImplementation: string, overrides?: CallOverrides): Promise<void>;\n\n    approve(to: string, tokenId: BigNumberish, overrides?: CallOverrides): Promise<void>;\n\n    balanceOf(holder: string, overrides?: CallOverrides): Promise<BigNumber>;\n\n    burn(tokenId: BigNumberish, overrides?: CallOverrides): Promise<void>;\n\n    getApproved(tokenId: BigNumberish, overrides?: CallOverrides): Promise<string>;\n\n    initialize(\n      tokenName: string,\n      tokenSymbol: string,\n      uri: string,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    isApprovedForAll(holder: string, operator: string, overrides?: CallOverrides): Promise<boolean>;\n\n    isInitialized(overrides?: CallOverrides): Promise<boolean>;\n\n    mint(to: string, tokenId: BigNumberish, overrides?: CallOverrides): Promise<void>;\n\n    name(overrides?: CallOverrides): Promise<string>;\n\n    ownerOf(tokenId: BigNumberish, overrides?: CallOverrides): Promise<string>;\n\n    safeMint(\n      to: string,\n      tokenId: BigNumberish,\n      data: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    'safeTransferFrom(address,address,uint256)'(\n      from: string,\n      to: string,\n      tokenId: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    'safeTransferFrom(address,address,uint256,bytes)'(\n      from: string,\n      to: string,\n      tokenId: BigNumberish,\n      data: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    setAllowance(tokenId: BigNumberish, spender: string, overrides?: CallOverrides): Promise<void>;\n\n    setApprovalForAll(\n      operator: string,\n      approved: boolean,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    setBaseTokenURI(uri: string, overrides?: CallOverrides): Promise<void>;\n\n    supportsInterface(interfaceId: BytesLike, overrides?: CallOverrides): Promise<boolean>;\n\n    symbol(overrides?: CallOverrides): Promise<string>;\n\n    tokenByIndex(index: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;\n\n    tokenOfOwnerByIndex(\n      owner: string,\n      index: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    tokenURI(tokenId: BigNumberish, overrides?: CallOverrides): Promise<string>;\n\n    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;\n\n    transferFrom(\n      from: string,\n      to: string,\n      tokenId: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<void>;\n  };\n\n  filters: {\n    'OwnerChanged(address,address)'(oldOwner?: null, newOwner?: null): OwnerChangedEventFilter;\n    OwnerChanged(oldOwner?: null, newOwner?: null): OwnerChangedEventFilter;\n\n    'OwnerNominated(address)'(newOwner?: null): OwnerNominatedEventFilter;\n    OwnerNominated(newOwner?: null): OwnerNominatedEventFilter;\n\n    'Upgraded(address,address)'(self?: string | null, implementation?: null): UpgradedEventFilter;\n    Upgraded(self?: string | null, implementation?: null): UpgradedEventFilter;\n\n    'Approval(address,address,uint256)'(\n      owner?: string | null,\n      approved?: string | null,\n      tokenId?: BigNumberish | null\n    ): ApprovalEventFilter;\n    Approval(\n      owner?: string | null,\n      approved?: string | null,\n      tokenId?: BigNumberish | null\n    ): ApprovalEventFilter;\n\n    'ApprovalForAll(address,address,bool)'(\n      owner?: string | null,\n      operator?: string | null,\n      approved?: null\n    ): ApprovalForAllEventFilter;\n    ApprovalForAll(\n      owner?: string | null,\n      operator?: string | null,\n      approved?: null\n    ): ApprovalForAllEventFilter;\n\n    'Transfer(address,address,uint256)'(\n      from?: string | null,\n      to?: string | null,\n      tokenId?: BigNumberish | null\n    ): TransferEventFilter;\n    Transfer(\n      from?: string | null,\n      to?: string | null,\n      tokenId?: BigNumberish | null\n    ): TransferEventFilter;\n  };\n\n  estimateGas: {\n    acceptOwnership(overrides?: Overrides & { from?: string }): Promise<BigNumber>;\n\n    getImplementation(overrides?: CallOverrides): Promise<BigNumber>;\n\n    nominateNewOwner(\n      newNominatedOwner: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<BigNumber>;\n\n    nominatedOwner(overrides?: CallOverrides): Promise<BigNumber>;\n\n    owner(overrides?: CallOverrides): Promise<BigNumber>;\n\n    renounceNomination(overrides?: Overrides & { from?: string }): Promise<BigNumber>;\n\n    simulateUpgradeTo(\n      newImplementation: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<BigNumber>;\n\n    upgradeTo(\n      newImplementation: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<BigNumber>;\n\n    approve(\n      to: string,\n      tokenId: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<BigNumber>;\n\n    balanceOf(holder: string, overrides?: CallOverrides): Promise<BigNumber>;\n\n    burn(tokenId: BigNumberish, overrides?: Overrides & { from?: string }): Promise<BigNumber>;\n\n    getApproved(tokenId: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;\n\n    initialize(\n      tokenName: string,\n      tokenSymbol: string,\n      uri: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<BigNumber>;\n\n    isApprovedForAll(\n      holder: string,\n      operator: string,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isInitialized(overrides?: CallOverrides): Promise<BigNumber>;\n\n    mint(\n      to: string,\n      tokenId: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<BigNumber>;\n\n    name(overrides?: CallOverrides): Promise<BigNumber>;\n\n    ownerOf(tokenId: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;\n\n    safeMint(\n      to: string,\n      tokenId: BigNumberish,\n      data: BytesLike,\n      overrides?: Overrides & { from?: string }\n    ): Promise<BigNumber>;\n\n    'safeTransferFrom(address,address,uint256)'(\n      from: string,\n      to: string,\n      tokenId: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<BigNumber>;\n\n    'safeTransferFrom(address,address,uint256,bytes)'(\n      from: string,\n      to: string,\n      tokenId: BigNumberish,\n      data: BytesLike,\n      overrides?: Overrides & { from?: string }\n    ): Promise<BigNumber>;\n\n    setAllowance(\n      tokenId: BigNumberish,\n      spender: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<BigNumber>;\n\n    setApprovalForAll(\n      operator: string,\n      approved: boolean,\n      overrides?: Overrides & { from?: string }\n    ): Promise<BigNumber>;\n\n    setBaseTokenURI(uri: string, overrides?: Overrides & { from?: string }): Promise<BigNumber>;\n\n    supportsInterface(interfaceId: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;\n\n    symbol(overrides?: CallOverrides): Promise<BigNumber>;\n\n    tokenByIndex(index: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;\n\n    tokenOfOwnerByIndex(\n      owner: string,\n      index: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    tokenURI(tokenId: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;\n\n    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;\n\n    transferFrom(\n      from: string,\n      to: string,\n      tokenId: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<BigNumber>;\n  };\n\n  populateTransaction: {\n    acceptOwnership(overrides?: Overrides & { from?: string }): Promise<PopulatedTransaction>;\n\n    getImplementation(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    nominateNewOwner(\n      newNominatedOwner: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<PopulatedTransaction>;\n\n    nominatedOwner(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    renounceNomination(overrides?: Overrides & { from?: string }): Promise<PopulatedTransaction>;\n\n    simulateUpgradeTo(\n      newImplementation: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<PopulatedTransaction>;\n\n    upgradeTo(\n      newImplementation: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<PopulatedTransaction>;\n\n    approve(\n      to: string,\n      tokenId: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<PopulatedTransaction>;\n\n    balanceOf(holder: string, overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    burn(\n      tokenId: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<PopulatedTransaction>;\n\n    getApproved(tokenId: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    initialize(\n      tokenName: string,\n      tokenSymbol: string,\n      uri: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<PopulatedTransaction>;\n\n    isApprovedForAll(\n      holder: string,\n      operator: string,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isInitialized(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    mint(\n      to: string,\n      tokenId: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<PopulatedTransaction>;\n\n    name(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    ownerOf(tokenId: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    safeMint(\n      to: string,\n      tokenId: BigNumberish,\n      data: BytesLike,\n      overrides?: Overrides & { from?: string }\n    ): Promise<PopulatedTransaction>;\n\n    'safeTransferFrom(address,address,uint256)'(\n      from: string,\n      to: string,\n      tokenId: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<PopulatedTransaction>;\n\n    'safeTransferFrom(address,address,uint256,bytes)'(\n      from: string,\n      to: string,\n      tokenId: BigNumberish,\n      data: BytesLike,\n      overrides?: Overrides & { from?: string }\n    ): Promise<PopulatedTransaction>;\n\n    setAllowance(\n      tokenId: BigNumberish,\n      spender: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<PopulatedTransaction>;\n\n    setApprovalForAll(\n      operator: string,\n      approved: boolean,\n      overrides?: Overrides & { from?: string }\n    ): Promise<PopulatedTransaction>;\n\n    setBaseTokenURI(\n      uri: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<PopulatedTransaction>;\n\n    supportsInterface(\n      interfaceId: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    symbol(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    tokenByIndex(index: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    tokenOfOwnerByIndex(\n      owner: string,\n      index: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    tokenURI(tokenId: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    totalSupply(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    transferFrom(\n      from: string,\n      to: string,\n      tokenId: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<PopulatedTransaction>;\n  };\n}\n"],"names":["address","abi"],"sourceRoot":""}