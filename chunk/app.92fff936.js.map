{"version":3,"file":"chunk/app.92fff936.js","mappings":"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","sources":["webpack://@snx-v3/liquidity/../../contracts/importers/importCoreProxy.js","webpack://@snx-v3/liquidity/../../contracts/importers/importMulticall3.js","webpack://@snx-v3/liquidity/../components/Amount/Amount.tsx","webpack://@snx-v3/liquidity/../components/Tooltip/Tooltip.tsx","webpack://@snx-v3/liquidity/../components/icons/SUSDCIcon/SUSDCIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/Logo/Logo.tsx","webpack://@snx-v3/liquidity/../components/icons/EthereumIcon/EthereumIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/SNXIcon/SNXIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/OptimismIcon/OptimismIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/DollarCircle/DollarCircle.tsx","webpack://@snx-v3/liquidity/../components/icons/BitcoinIcon/BitcoinIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/ArbitrumIcon/ArbitrumIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/CollateralIcon/CollateralIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/ChevronDown/ChevronDown.tsx","webpack://@snx-v3/liquidity/../components/icons/ChevronUp/ChevronUp.tsx","webpack://@snx-v3/liquidity/../components/icons/FailedIcon/FailedIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/WalletIcon/WalletIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/LogoIcon/LogoIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/BorrowIcon/BorrowIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/BaseIcon/BaseIcon.tsx","webpack://@snx-v3/liquidity/../lib/ManagePositionContext/ManagePositionContext.tsx","webpack://@snx-v3/liquidity/../lib/constants/constants.ts","webpack://@snx-v3/liquidity/../lib/fetchPythPrices/fetchPythPrices.ts","webpack://@snx-v3/liquidity/../lib/format/format.ts","webpack://@snx-v3/liquidity/../lib/format/currency.ts","webpack://@snx-v3/liquidity/../lib/isBaseAndromeda/isBaseAndromeda.ts","webpack://@snx-v3/liquidity/../lib/tsHelpers/notNill.ts","webpack://@snx-v3/liquidity/../lib/txnReducer/txnReducer.ts","webpack://@snx-v3/liquidity/../../contracts/importers/importOracleManagerProxy.js","webpack://@snx-v3/liquidity/../lib/useAllCollateralPriceIds/useAllCollateralPriceIds.ts","webpack://@snx-v3/liquidity/../lib/useOracleManagerProxy/useOracleManagerProxy.ts","webpack://@snx-v3/liquidity/../lib/useAllowance/useAllowance.ts","webpack://@snx-v3/liquidity/../lib/useApprove/useApprove.ts","webpack://@snx-v3/liquidity/../lib/useBlockchain/useBlockchain.tsx","webpack://@snx-v3/liquidity/../lib/useClearDebt/useClearDebt.tsx","webpack://@snx-v3/liquidity/../lib/useCollateralPriceUpdates/useCollateralPriceUpdates.ts","webpack://@snx-v3/liquidity/../../contracts/importers/importExtras.js","webpack://@snx-v3/liquidity/../lib/useCollateralTypes/useCollateralTypes.ts","webpack://@snx-v3/liquidity/../lib/useCoreProxy/useCoreProxy.ts","webpack://@snx-v3/liquidity/../lib/useEthBalance/useEthBalance.ts","webpack://@snx-v3/liquidity/../lib/useGasOptions/useGasOptions.ts","webpack://@snx-v3/liquidity/../lib/feeSuggestion/math.ts","webpack://@snx-v3/liquidity/../lib/feeSuggestion/utils.ts","webpack://@snx-v3/liquidity/../lib/feeSuggestion/feeSuggestion.ts","webpack://@snx-v3/liquidity/../lib/useGasPrice/useGasPrice.ts","webpack://@snx-v3/liquidity/../lib/useGasSpeed/GasSpeedContext.tsx","webpack://@snx-v3/liquidity/../lib/useGetUSDTokens/useGetUSDTokens.ts","webpack://@snx-v3/liquidity/../lib/useMulticall3/useMulticall3.ts","webpack://@snx-v3/liquidity/../lib/useParams/useParams.ts","webpack://@snx-v3/liquidity/../lib/usePools/usePools.ts","webpack://@snx-v3/liquidity/../lib/useSpotMarketProxy/useSpotMarketProxy.ts","webpack://@snx-v3/liquidity/../../contracts/importers/importSpotMarketProxy.js","webpack://@snx-v3/liquidity/../lib/useTokenBalance/useTokenBalance.ts","webpack://@snx-v3/liquidity/../lib/assertAddressType/assertAddressType.ts","webpack://@snx-v3/liquidity/../lib/useUSDProxy/useUSDProxy.ts","webpack://@snx-v3/liquidity/../../contracts/importers/importUSDProxy.js","webpack://@snx-v3/liquidity/../lib/withERC7412/withMemoryCache.ts","webpack://@snx-v3/liquidity/../lib/parser/parseTxError.ts","webpack://@snx-v3/liquidity/../lib/withERC7412/withERC7412.ts","webpack://@snx-v3/liquidity/../lib/zod/zod.ts","webpack://@snx-v3/liquidity/../../theme/src/theme.ts","webpack://@snx-v3/liquidity/../../theme/src/fonts.tsx","webpack://@snx-v3/liquidity/../components/TermsModal/TermsModal.tsx","webpack://@snx-v3/liquidity/../lib/useLocalStorage/useLocalStorage.ts","webpack://@snx-v3/liquidity/./src/utils/constants.ts","webpack://@snx-v3/liquidity/../lib/useAccountProxy/useAccountProxy.ts","webpack://@snx-v3/liquidity/../../contracts/importers/importAccountProxy.js","webpack://@snx-v3/liquidity/../lib/useAccounts/useAccounts.ts","webpack://@snx-v3/liquidity/./src/layouts/Default/NetworkController.tsx","webpack://@snx-v3/liquidity/../lib/tsHelpers/stringToHash.ts","webpack://@snx-v3/liquidity/../lib/useAccountCollateral/useAccountCollateral.ts","webpack://@snx-v3/liquidity/../lib/useCollateralPrices/useCollateralPrices.ts","webpack://@snx-v3/liquidity/./src/components/TokenIcon/TokenIcon.tsx","webpack://@snx-v3/liquidity/../lib/formatters/number.ts","webpack://@snx-v3/liquidity/./src/components/Assets/AssetTable/AssetsRow.tsx","webpack://@snx-v3/liquidity/./src/components/Assets/AssetTable/AssetTableHeader.tsx","webpack://@snx-v3/liquidity/./src/components/Assets/AssetTable/AssetsTable.tsx","webpack://@snx-v3/liquidity/./src/components/SynthSkeleton/SynthSkeleton.tsx","webpack://@snx-v3/liquidity/./src/components/Assets/AssetTable/AssetRowLoading.tsx","webpack://@snx-v3/liquidity/./src/components/Assets/AssetTable/AssetsEmpty.tsx","webpack://@snx-v3/liquidity/./src/utils/assets.ts","webpack://@snx-v3/liquidity/./src/components/Assets/AssetsList.tsx","webpack://@snx-v3/liquidity/../lib/useAccountCollateralUnlockDate/useAccountCollateralUnlockDate.ts","webpack://@snx-v3/liquidity/./src/components/CollateralAlert/CollateralAlert.tsx","webpack://@snx-v3/liquidity/../components/BorderBox/BorderBox.tsx","webpack://@snx-v3/liquidity/../lib/etherscanLink/etherscanLink.ts","webpack://@snx-v3/liquidity/./src/components/Rewards/RewardsModal.tsx","webpack://@snx-v3/liquidity/../lib/formatters/date.ts","webpack://@snx-v3/liquidity/../lib/formatters/string.ts","webpack://@snx-v3/liquidity/./src/components/Rewards/RewardsRow.tsx","webpack://@snx-v3/liquidity/../lib/useClaimRewards/useClaimRewards.ts","webpack://@snx-v3/liquidity/./src/components/Rewards/RewardsLoading.tsx","webpack://@snx-v3/liquidity/./src/components/Rewards/Rewards.tsx","webpack://@snx-v3/liquidity/./src/components/Stats/StatBox.tsx","webpack://@snx-v3/liquidity/../lib/useLiquidityPosition/useLiquidityPosition.ts","webpack://@snx-v3/liquidity/../lib/calculations/calculations.ts","webpack://@snx-v3/liquidity/../lib/tsHelpers/keyBy.ts","webpack://@snx-v3/liquidity/../lib/useLiquidityPositions/useLiquidityPositions.ts","webpack://@snx-v3/liquidity/../lib/useApr/useApr.ts","webpack://@snx-v3/liquidity/./src/components/Stats/StatsList.tsx","webpack://@snx-v3/liquidity/./src/utils/positions.ts","webpack://@snx-v3/liquidity/./src/components/Positions/PositionsTable/PositionsRow.tsx","webpack://@snx-v3/liquidity/../lib/useGetBorrow/useGetBorrow.tsx","webpack://@snx-v3/liquidity/./src/components/Positions/PositionsTable/PositionsRowLoading.tsx","webpack://@snx-v3/liquidity/./src/components/Positions/PositionsTable/PositionsTable.tsx","webpack://@snx-v3/liquidity/./src/components/Positions/PositionsTable/PositionTableHeader.tsx","webpack://@snx-v3/liquidity/./src/components/Positions/PositionsTable/PositionNotConnected.tsx","webpack://@snx-v3/liquidity/./src/components/Positions/PositionsTable/PositionEmpty.tsx","webpack://@snx-v3/liquidity/./src/components/Positions/PositionsTable/TableDivider.tsx","webpack://@snx-v3/liquidity/./src/components/Positions/PositionsList.tsx","webpack://@snx-v3/liquidity/./src/components/Balance/Balance.tsx","webpack://@snx-v3/liquidity/../lib/useWithdraw/useWithdraw.tsx","webpack://@snx-v3/liquidity/../lib/useWithdrawBaseAndromeda/useWithdrawBaseAndromeda.tsx","webpack://@snx-v3/liquidity/./src/components/WithdrawModal/WithdrawModal.tsx","webpack://@snx-v3/liquidity/./src/components/PoolStats/AccountVaultCollateral.tsx","webpack://@snx-v3/liquidity/../lib/useVaultsData/useVaultsData.ts","webpack://@snx-v3/liquidity/./src/components/PoolStats/CollateralSection.tsx","webpack://@snx-v3/liquidity/../lib/usePoolData/usePoolData.tsx","webpack://@snx-v3/liquidity/../lib/useMarketNamesById/useMarketNamesById.ts","webpack://@snx-v3/liquidity/./src/components/PoolStats/MarketSection.tsx","webpack://@snx-v3/liquidity/./src/components/PoolStats/PoolHeader.tsx","webpack://@snx-v3/liquidity/../components/NumberInput/NumberInput.tsx","webpack://@snx-v3/liquidity/../lib/validatePosition/validatePosition.ts","webpack://@snx-v3/liquidity/./src/components/Borrow/Borrow.tsx","webpack://@snx-v3/liquidity/../components/PercentBadges/PercentBadges.tsx","webpack://@snx-v3/liquidity/./src/components/Deposit/Deposit.tsx","webpack://@snx-v3/liquidity/../lib/useTransferableSynthetix/useTransferableSynthetix.ts","webpack://@snx-v3/liquidity/./src/components/Manage/ManageActions.tsx","webpack://@snx-v3/liquidity/./src/components/Manage/ManageStats.tsx","webpack://@snx-v3/liquidity/./src/components/Repay/Repay.tsx","webpack://@snx-v3/liquidity/./src/components/Repay/RepayAllDebt.tsx","webpack://@snx-v3/liquidity/../lib/usePoolConfiguration/usePoolConfiguration.ts","webpack://@snx-v3/liquidity/./src/components/Undelegate/Undelegate.tsx","webpack://@snx-v3/liquidity/./src/layouts/Default/Header.tsx","webpack://@snx-v3/liquidity/./src/layouts/Default/DefaultLayout.tsx","webpack://@snx-v3/liquidity/./src/components/AccountBanner/AccountBanner.tsx","webpack://@snx-v3/liquidity/./src/pages/Home/Home.tsx","webpack://@snx-v3/liquidity/../components/HomeLink/HomeLink.tsx","webpack://@snx-v3/liquidity/../../contracts/importers/importRewardDistributor.js","webpack://@snx-v3/liquidity/../lib/useRewards/useRewards.ts","webpack://@snx-v3/liquidity/../components/WithdrawIncrease/WithdrawIncrease.tsx","webpack://@snx-v3/liquidity/./src/pages/Manage/Manage.tsx","webpack://@snx-v3/liquidity/./src/pages/Pool/Pool.tsx","webpack://@snx-v3/liquidity/./src/pages/404.tsx","webpack://@snx-v3/liquidity/./src/components/Pools/PoolCards/BasePoolCard.tsx","webpack://@snx-v3/liquidity/./src/pages/Pools/Pools.tsx","webpack://@snx-v3/liquidity/./src/components/Permissions/AccountPermissions.ts","webpack://@snx-v3/liquidity/../lib/useManagePermissions/useManagePermissions.ts","webpack://@snx-v3/liquidity/./src/components/Address/Address.tsx","webpack://@snx-v3/liquidity/./src/components/Permissions/PermissionRow.tsx","webpack://@snx-v3/liquidity/../lib/useAccountInfo/useAccountPermissions.ts","webpack://@snx-v3/liquidity/./src/components/Permissions/AddPermissionModal.tsx","webpack://@snx-v3/liquidity/./src/components/Permissions/TransferOwnershipModal.tsx","webpack://@snx-v3/liquidity/../lib/useTransferAccountId/useTransferAccountId.ts","webpack://@snx-v3/liquidity/./src/components/Permissions/PermissionTableLoading.tsx","webpack://@snx-v3/liquidity/./src/components/Permissions/PermissionTable.tsx","webpack://@snx-v3/liquidity/./src/components/Permissions/DelegationIcon.tsx","webpack://@snx-v3/liquidity/./src/components/Permissions/Permissions.tsx","webpack://@snx-v3/liquidity/./src/pages/Account/Settings.tsx","webpack://@snx-v3/liquidity/./src/Router.tsx","webpack://@snx-v3/liquidity/./src/utils/onboard.ts","webpack://@snx-v3/liquidity/./src/App.tsx","webpack://@snx-v3/liquidity/./src/index.tsx","webpack://@snx-v3/liquidity/../../tools/safe-import/index.js","webpack://@snx-v3/liquidity/../../tools/safe-import/safeLazy.js"],"sourcesContent":["export async function importCoreProxy(chainId, preset) {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/meta.json'),\n        import('@synthetixio/v3-contracts/1-main/CoreProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.CoreProxy, abi };\n    }\n    case '11155111-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/meta.json'),\n        import('@synthetixio/v3-contracts/11155111-main/CoreProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.CoreProxy, abi };\n    }\n    case '10-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/meta.json'),\n        import('@synthetixio/v3-contracts/10-main/CoreProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.CoreProxy, abi };\n    }\n    case '8453-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/8453-andromeda/CoreProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.CoreProxy, abi };\n    }\n    case '84532-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/84532-andromeda/CoreProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.CoreProxy, abi };\n    }\n    case '42161-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/meta.json'),\n        import('@synthetixio/v3-contracts/42161-main/CoreProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.CoreProxy, abi };\n    }\n    case '421614-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/meta.json'),\n        import('@synthetixio/v3-contracts/421614-main/CoreProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.CoreProxy, abi };\n    }\n    case '42161-arbthetix': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-arbthetix/meta.json'),\n        import('@synthetixio/v3-contracts/42161-arbthetix/CoreProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.CoreProxy, abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for CoreProxy`);\n    }\n  }\n}\n","const abi = [\n  'function aggregate(tuple(address target, bytes callData)[] calls) payable returns (uint256 blockNumber, bytes[] returnData)',\n  'function aggregate3(tuple(address target, bool allowFailure, bytes callData)[] calls) payable returns (tuple(bool success, bytes returnData)[] returnData)',\n  'function aggregate3Value(tuple(address target, bool allowFailure, uint256 value, bytes callData)[] calls) payable returns (tuple(bool success, bytes returnData)[] returnData)',\n  'function blockAndAggregate(tuple(address target, bytes callData)[] calls) payable returns (uint256 blockNumber, bytes32 blockHash, tuple(bool success, bytes returnData)[] returnData)',\n  'function getBasefee() view returns (uint256 basefee)',\n  'function getBlockHash(uint256 blockNumber) view returns (bytes32 blockHash)',\n  'function getBlockNumber() view returns (uint256 blockNumber)',\n  'function getChainId() view returns (uint256 chainid)',\n  'function getCurrentBlockCoinbase() view returns (address coinbase)',\n  'function getCurrentBlockDifficulty() view returns (uint256 difficulty)',\n  'function getCurrentBlockGasLimit() view returns (uint256 gaslimit)',\n  'function getCurrentBlockTimestamp() view returns (uint256 timestamp)',\n  'function getEthBalance(address addr) view returns (uint256 balance)',\n  'function getLastBlockHash() view returns (bytes32 blockHash)',\n  'function tryAggregate(bool requireSuccess, tuple(address target, bytes callData)[] calls) payable returns (tuple(bool success, bytes returnData)[] returnData)',\n  'function tryBlockAndAggregate(bool requireSuccess, tuple(address target, bytes callData)[] calls) payable returns (uint256 blockNumber, bytes32 blockHash, tuple(bool success, bytes returnData)[] returnData)',\n];\n\nexport async function importMulticall3(chainId, preset = 'main') {\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const { mainnet } = await import('viem/chains');\n      return { address: mainnet.contracts.multicall3.address, abi };\n    }\n    case '11155111-main': {\n      const { sepolia } = await import('viem/chains');\n      return { address: sepolia.contracts.multicall3.address, abi };\n    }\n    case '10-main': {\n      const { optimism } = await import('viem/chains');\n      return { address: optimism.contracts.multicall3.address, abi };\n    }\n    case '8453-andromeda': {\n      const { base } = await import('viem/chains');\n      return { address: base.contracts.multicall3.address, abi };\n    }\n    case '84532-andromeda': {\n      const { baseSepolia } = await import('viem/chains');\n      return { address: baseSepolia.contracts.multicall3.address, abi };\n    }\n    case '42161-main':\n    case '42161-arbthetix': {\n      const { arbitrum } = await import('viem/chains');\n      return { address: arbitrum.contracts.multicall3.address, abi };\n    }\n    case '421614-main': {\n      const { arbitrumSepolia } = await import('viem/chains');\n      return { address: arbitrumSepolia.contracts.multicall3.address, abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for Multicall3`);\n    }\n  }\n}\n","import { useMemo } from 'react';\nimport { currency } from '@snx-v3/format';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { constants } from 'ethers';\nimport { Tooltip } from '@snx-v3/Tooltip';\n\nexport function Amount({\n  value,\n  prefix = '',\n  suffix = '',\n  'data-testid': testid,\n  showTooltip,\n}: {\n  prefix?: string;\n  value?: Wei;\n  suffix?: string;\n  'data-testid'?: string;\n  showTooltip?: boolean;\n}) {\n  const { formattedValue, preciseValue, isMaxUint } = useMemo(() => {\n    if (!value) {\n      return { formattedValue: '-', preciseValue: '-' };\n    }\n\n    const formattedValue = currency(value);\n    const cleanNumber = wei(formattedValue.replaceAll(',', ''));\n\n    return {\n      isMaxUint: wei(constants.MaxInt256).lte(value),\n      formattedValue,\n      preciseValue: value.eq(cleanNumber) ? formattedValue : value.toString(),\n    };\n  }, [value]);\n\n  return (\n    <Tooltip\n      label={\n        <>\n          {isMaxUint ? (\n            'You cannot borrow sUSD against this collateral'\n          ) : (\n            <>\n              {prefix}\n              {preciseValue}\n              {suffix}\n            </>\n          )}\n        </>\n      }\n      isDisabled={formattedValue === preciseValue || !showTooltip}\n    >\n      <span data-testid={testid}>\n        {prefix}\n        {isMaxUint ? 'N/A' : formattedValue}\n        {!isMaxUint && suffix}\n      </span>\n    </Tooltip>\n  );\n}\n","import { Tooltip as ChakraTooltip, TooltipProps } from '@chakra-ui/react';\n\nexport const Tooltip = ({ ...props }: TooltipProps) => {\n  return <ChakraTooltip hasArrow bg=\"gray.900\" p={3} borderRadius=\"4px\" {...props} />;\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const SUSDCIcon = ({ width = '42px', height = '42px' }: IconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 30 30\" fill=\"none\">\n      <g clipPath=\"url(#clip0_10043_2361)\">\n        <path\n          d=\"M15 30C23.3125 30 30 23.3125 30 15C30 6.68745 23.3125 0 15 0C6.68745 0 0 6.68745 0 15C0 23.3125 6.68745 30 15 30Z\"\n          fill=\"#2775CA\"\n        />\n        <path\n          d=\"M19.125 17.375C19.125 15.1875 17.8125 14.4375 15.1875 14.1251C13.3125 13.875 12.9375 13.3751 12.9375 12.5C12.9375 11.6249 13.5625 11.0625 14.8125 11.0625C15.9375 11.0625 16.5625 11.4375 16.875 12.375C16.9375 12.5625 17.125 12.6875 17.3125 12.6875H18.3124C18.5625 12.6875 18.75 12.5 18.75 12.2501V12.1875C18.4999 10.8125 17.3749 9.75 15.9375 9.62505V8.12505C15.9375 7.875 15.75 7.6875 15.4375 7.62495H14.5C14.25 7.62495 14.0625 7.81245 13.9999 8.12505V9.5625C12.1249 9.81255 10.9375 11.0625 10.9375 12.6251C10.9375 14.6876 12.1875 15.5 14.8125 15.8126C16.5625 16.125 17.125 16.5 17.125 17.5001C17.125 18.5001 16.2499 19.1876 15.0625 19.1876C13.4374 19.1876 12.8749 18.5 12.6874 17.5625C12.625 17.3126 12.4375 17.1875 12.25 17.1875H11.1874C10.9375 17.1875 10.75 17.375 10.75 17.625V17.6876C10.9999 19.25 12 20.375 14.0625 20.6876V22.1876C14.0625 22.4375 14.25 22.625 14.5624 22.6875H15.4999C15.7499 22.6875 15.9375 22.5 16 22.1876V20.6876C17.875 20.375 19.125 19.0625 19.125 17.375Z\"\n          fill=\"white\"\n        />\n        <path\n          d=\"M11.8125 23.9374C6.9375 22.1875 4.43745 16.75 6.25005 11.9374C7.18755 9.31245 9.25005 7.3125 11.8125 6.375C12.0625 6.25005 12.1875 6.06255 12.1875 5.74995V4.875C12.1875 4.62495 12.0625 4.43745 11.8125 4.37505C11.7499 4.37505 11.625 4.37505 11.5624 4.43745C5.625 6.31245 2.37495 12.625 4.24995 18.5625C5.37495 22.0624 8.0625 24.75 11.5624 25.875C11.8125 25.9999 12.0625 25.875 12.1249 25.6249C12.1875 25.5625 12.1875 25.5 12.1875 25.375V24.4999C12.1875 24.3124 12 24.0625 11.8125 23.9374ZM18.4375 4.43745C18.1875 4.3125 17.9375 4.43745 17.875 4.6875C17.8125 4.75005 17.8125 4.81245 17.8125 4.93755V5.8125C17.8125 6.06255 18 6.31245 18.1875 6.43755C23.0625 8.18745 25.5625 13.6249 23.75 18.4375C22.8125 21.0625 20.75 23.0625 18.1875 24C17.9374 24.1249 17.8125 24.3124 17.8125 24.625V25.5C17.8125 25.75 17.9374 25.9375 18.1875 25.9999C18.25 25.9999 18.375 25.9999 18.4375 25.9375C24.375 24.0625 27.6251 17.7499 25.7501 11.8125C24.6251 8.25 21.875 5.56245 18.4375 4.43745Z\"\n          fill=\"white\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_10043_2361\">\n          <rect width=\"30\" height=\"30\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const Logo = ({ color = '#00D1FF', width = '126px', height = '22px' }: IconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 126 22\" fill=\"none\" color={color}>\n      <path\n        d=\"M7.00677 4.80523C6.804 4.57155 6.55437 4.45443 6.25731 4.45443H0.182051C0.128089 4.45443 0.0839395 4.43722 0.0506907 4.40281C0.0168969 4.36895 0 4.33065 0 4.28957V0.164856C0 0.12378 0.0168969 0.0860357 0.0506907 0.0516214C0.0839395 0.0172071 0.128089 0 0.182051 0H6.60179C8.22171 0 9.61925 0.667193 10.7939 2.00047L12.3533 3.91823L9.31565 7.65107L7.00677 4.80523ZM18.2263 1.97993C19.4009 0.659977 20.805 0 22.4386 0H28.8381C28.8921 0 28.9324 0.0138767 28.9597 0.0410751C28.9864 0.0688286 29 0.109904 29 0.164856V4.28957C29 4.33065 28.9864 4.36895 28.9597 4.40281C28.9324 4.43722 28.8921 4.45443 28.8381 4.45443H22.7629C22.4658 4.45443 22.2162 4.57155 22.0134 4.80523L17.5379 10.291L22.0336 15.8178C22.2363 16.0382 22.4789 16.1481 22.7629 16.1481H28.8381C28.8921 16.1481 28.9324 16.1653 28.9597 16.1997C28.9864 16.2341 29 16.2791 29 16.3335V20.4582C29 20.4993 28.9864 20.5376 28.9597 20.5714C28.9324 20.6058 28.8921 20.623 28.8381 20.623H22.4386C20.805 20.623 19.4075 19.9564 18.2465 18.6226L14.5204 14.0444L10.7939 18.6226C9.61925 19.9564 8.21517 20.623 6.58162 20.623H0.182051C0.128089 20.623 0.0872099 20.6058 0.0605018 20.5714C0.0332488 20.537 0.0201673 20.4926 0.0201673 20.4371V16.3124C0.0201673 16.2713 0.0332488 16.2336 0.0605018 16.1991C0.0872099 16.1647 0.128089 16.1475 0.182051 16.1475H6.25731C6.54074 16.1475 6.79038 16.031 7.00677 15.7967L11.4011 10.3937L18.2263 1.97993Z\"\n        fill=\"#00D1FF\"\n      />\n      <path d=\"M42.9 3.86001V15.72H51.7V17.86H40.4V3.86001H42.9Z\" fill=\"white\" />\n      <path\n        d=\"M53.4645 7.02001H55.7845V17.86H53.4645V7.02001ZM53.4645 3.30001H55.7845V5.62001H53.4645V3.30001Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M61.0055 7.02001H68.5055V21.78H66.1855V16.38L64.4455 17.86H61.0055C59.4255 17.86 58.1655 16.54 58.1655 15.02V9.86002C58.1655 8.28002 59.4855 7.02001 61.0055 7.02001ZM61.6255 15.86H65.4855C65.8655 15.86 66.1855 15.56 66.1855 15.16V9.04002H61.6255C60.9855 9.04002 60.4655 9.54002 60.4655 10.18V14.7C60.4655 15.36 60.9855 15.86 61.6255 15.86Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M74.5408 15.86H78.3008C78.6808 15.86 79.0008 15.56 79.0008 15.16V7.02001H81.3208V17.86H79.0008V16.4L77.3208 17.86H73.9008C72.3808 17.86 71.0808 16.6 71.0808 15.02V7.02001H73.3808V14.7C73.3808 15.36 73.8808 15.86 74.5408 15.86Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M83.9333 7.02001H86.2533V17.86H83.9333V7.02001ZM83.9333 3.30001H86.2533V5.62001H83.9333V3.30001Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M96.6542 7.02001V3.14001H98.9742V17.86H96.6542V16.38L94.9142 17.86H91.4742C89.8942 17.86 88.6342 16.54 88.6342 15.02V9.86002C88.6342 8.28002 89.9542 7.02001 91.4742 7.02001H96.6542ZM92.0942 15.86H95.9542C96.3342 15.86 96.6542 15.56 96.6542 15.16V9.04002H92.0942C91.4542 9.04002 90.9342 9.54002 90.9342 10.18V14.7C90.9342 15.36 91.4542 15.86 92.0942 15.86Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M101.59 7.02001H103.91V17.86H101.59V7.02001ZM101.59 3.30001H103.91V5.62001H101.59V3.30001Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M113.09 15.86V17.86H110.31C108.77 17.86 107.51 16.66 107.51 15.08V9.04002H105.63V7.02001H107.51V4.64002H109.83V7.02001H113.11V9.04002H109.83V14.74C109.83 15.4 110.27 15.86 110.93 15.86H113.09Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M116.587 21.78L118.747 17.22L113.947 7.02001H116.467L119.947 14.74L123.267 7.02001H125.747L119.067 21.78H116.587Z\"\n        fill=\"white\"\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const EthereumIcon = ({ width = '24px', height = '24px', fill = `#627EEA` }: IconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 30 30\" fill=\"none\">\n      <path\n        d=\"M15 30c8.284 0 15-6.716 15-15 0-8.284-6.716-15-15-15C6.716 0 0 6.716 0 15c0 8.284 6.716 15 15 15Z\"\n        fill={fill as string}\n      />\n      <path d=\"M15.467 3.75v8.316l7.028 3.14L15.467 3.75Z\" fill=\"#fff\" fillOpacity=\".602\" />\n      <path d=\"m15.467 3.75-7.03 11.456 7.03-3.14V3.75Z\" fill=\"#fff\" />\n      <path d=\"M15.467 20.595v5.65l7.033-9.73-7.033 4.08Z\" fill=\"#fff\" fillOpacity=\".602\" />\n      <path d=\"M15.467 26.245v-5.651l-7.03-4.08 7.03 9.731Z\" fill=\"#fff\" />\n      <path d=\"m15.467 19.287 7.028-4.08-7.028-3.14v7.22Z\" fill=\"#fff\" fillOpacity=\".2\" />\n      <path d=\"m8.438 15.206 7.029 4.081v-7.22l-7.03 3.14Z\" fill=\"#fff\" fillOpacity=\".602\" />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\ninterface SnxIconProps extends IconProps {\n  color?: string;\n  fill?: string;\n}\n\nexport const SNXIcon = ({\n  width = '25px',\n  height = '24px',\n  color = '#2ED9FF',\n  fill = '#0E052F',\n  ...props\n}: SnxIconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 30 31\" fill=\"none\" {...props}>\n      <path\n        d=\"M30 15.268c0 8.284-6.716 15-15 15-8.284 0-15-6.716-15-15 0-8.285 6.716-15 15-15 8.284 0 15 6.715 15 15Z\"\n        fill={fill}\n      />\n      <path\n        d=\"M10.107 11.673a.624.624 0 0 0-.487-.224H5.674a.115.115 0 0 1-.086-.033.1.1 0 0 1-.032-.073V8.706a.1.1 0 0 1 .032-.072.115.115 0 0 1 .086-.033h4.17c1.053 0 1.96.426 2.723 1.279l1.013 1.226-1.973 2.387-1.5-1.82Zm7.289-1.806c.763-.844 1.675-1.266 2.736-1.266h4.157c.035 0 .061.008.08.026.017.018.026.044.026.079v2.637c0 .027-.01.051-.027.073s-.044.033-.079.033h-3.946a.624.624 0 0 0-.487.224l-2.908 3.508 2.92 3.534c.133.14.29.211.475.211h3.946c.035 0 .061.011.08.033.017.022.026.05.026.086v2.637c0 .026-.01.05-.027.073-.017.021-.044.033-.079.033h-4.157c-1.061 0-1.969-.427-2.723-1.28l-2.42-2.927-2.422 2.927c-.763.853-1.675 1.28-2.736 1.28H5.674c-.035 0-.062-.012-.08-.034a.132.132 0 0 1-.025-.085V19.03c0-.026.008-.05.026-.072.017-.022.044-.033.079-.033H9.62a.65.65 0 0 0 .487-.225l2.855-3.454 4.434-5.38Z\"\n        fill={color}\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const OptimismIcon = ({\n  width = '24px',\n  height = '24px',\n  color = 'white',\n  fill = '#FF0420',\n  ...props\n}: IconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 34 34\" {...props}>\n      <path\n        d=\"M17 34C26.3888 34 34 26.3888 34 17C34 7.61116 26.3888 0 17 0C7.61116 0 0 7.61116 0 17C0 26.3888 7.61116 34 17 34Z\"\n        fill={fill as string}\n      />\n      <path\n        d=\"M12.3295 21.76C11.3042 21.76 10.4641 21.5131 9.80918 21.0195C9.16298 20.5171 8.83984 19.8031 8.83984 18.8775C8.83984 18.6836 8.8614 18.4456 8.90444 18.1635C9.01651 17.5289 9.1759 16.7664 9.38269 15.8761C9.96858 13.452 11.4808 12.24 13.9193 12.24C14.5828 12.24 15.1773 12.3546 15.7029 12.5838C16.2285 12.8041 16.6421 13.1391 16.9437 13.5886C17.2453 14.0294 17.3961 14.5583 17.3961 15.1753C17.3961 15.3604 17.3745 15.594 17.3314 15.8761C17.2022 16.6606 17.0471 17.4231 16.8662 18.1635C16.5646 19.3711 16.0433 20.2747 15.3022 20.8741C14.5612 21.4647 13.5703 21.76 12.3295 21.76ZM12.5105 19.856C12.993 19.856 13.4023 19.7105 13.7384 19.4196C14.083 19.1288 14.3286 18.6836 14.4751 18.0842C14.6732 17.2556 14.824 16.5328 14.9274 15.9158C14.9619 15.7306 14.9791 15.5411 14.9791 15.3472C14.9791 14.5451 14.5699 14.144 13.7513 14.144C13.2688 14.144 12.8552 14.2894 12.5105 14.5803C12.1744 14.8712 11.9332 15.3164 11.7867 15.9158C11.6316 16.5064 11.4765 17.2291 11.3214 18.0842C11.287 18.2605 11.2697 18.4456 11.2697 18.6395C11.2697 19.4505 11.6833 19.856 12.5105 19.856Z\"\n        fill={color as string}\n      />\n      <path\n        d=\"M17.9895 21.6278C17.8947 21.6278 17.8215 21.597 17.7698 21.5352C17.7267 21.4647 17.7138 21.3854 17.731 21.2972L19.5146 12.7028C19.5318 12.6059 19.5792 12.5265 19.6568 12.4648C19.7344 12.4031 19.8162 12.3722 19.9024 12.3722H23.3404C24.2968 12.3722 25.0636 12.575 25.641 12.9805C26.2269 13.386 26.5199 13.9721 26.5199 14.739C26.5199 14.9594 26.494 15.1886 26.4423 15.4266C26.2269 16.4403 25.7918 17.1895 25.1369 17.6744C24.4907 18.1592 23.6031 18.4016 22.4744 18.4016H20.7295L20.135 21.2972C20.1178 21.3942 20.0704 21.4735 19.9928 21.5352C19.9153 21.597 19.8334 21.6278 19.7473 21.6278H17.9895ZM22.5648 16.5769C22.9267 16.5769 23.2412 16.4755 23.5084 16.2728C23.7841 16.0701 23.965 15.7792 24.0513 15.4001C24.0771 15.2503 24.09 15.1181 24.09 15.0035C24.09 14.7479 24.0168 14.5539 23.8703 14.4217C23.7238 14.2806 23.4739 14.2101 23.1206 14.2101H21.5697L21.0785 16.5769H22.5648Z\"\n        fill={color as string}\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\ninterface DollarCircleProps extends IconProps {\n  fill?: string;\n}\n\nexport const DollarCircle = ({ width = '15px', height = '15px', ...props }: DollarCircleProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 19 18\" fill=\"none\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M9.79517 2.75357C6.44891 2.75357 3.73624 5.46625 3.73624 8.8125C3.73624 12.1588 6.44891 14.8714 9.79517 14.8714C13.1414 14.8714 15.8541 12.1588 15.8541 8.8125C15.8541 5.46625 13.1414 2.75357 9.79517 2.75357ZM2.48267 8.8125C2.48267 4.77392 5.75658 1.5 9.79517 1.5C13.8337 1.5 17.1077 4.77392 17.1077 8.8125C17.1077 12.8511 13.8337 16.125 9.79517 16.125C5.75658 16.125 2.48267 12.8511 2.48267 8.8125Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M9.03962 7.48711C9.04452 7.25329 9.11127 7.15806 9.15621 7.11271C9.21551 7.05288 9.33009 6.98862 9.54225 6.95486C9.98435 6.88451 10.5823 6.98693 11.0758 7.11688L11.6819 7.27652L12.0011 6.06428L11.395 5.90465C10.8745 5.76757 10.0611 5.60296 9.34526 5.71686C8.97845 5.77523 8.57742 5.91591 8.26586 6.23026C7.94168 6.55735 7.78576 6.99985 7.78576 7.51481V7.53855L7.78756 7.56221C7.83275 8.15802 8.18724 8.55401 8.55492 8.8144C8.89199 9.05311 9.30983 9.22697 9.64735 9.36742C9.66009 9.37272 9.67272 9.37797 9.68522 9.38318C10.0665 9.54198 10.3494 9.6643 10.5455 9.80792C10.7181 9.93436 10.7353 10.0108 10.7353 10.0783C10.7353 10.3402 10.6583 10.4442 10.5979 10.4988C10.5171 10.5719 10.3654 10.6431 10.1066 10.6754C9.57934 10.741 8.8945 10.6119 8.39035 10.4769L7.7849 10.3148L7.4606 11.5257L8.06605 11.6878C8.59887 11.8305 9.48099 12.0165 10.2615 11.9193C10.6565 11.8701 11.0939 11.7404 11.4387 11.4286C11.8039 11.0983 11.9889 10.6336 11.9889 10.0783C11.9889 9.47293 11.6504 9.06337 11.2862 8.79661C10.9547 8.55379 10.534 8.37864 10.1954 8.23769C10.1859 8.23376 10.1765 8.22986 10.1672 8.22598C9.78653 8.06741 9.49239 7.94221 9.27941 7.79139C9.09878 7.66347 9.051 7.56996 9.03962 7.48711Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M9.79517 11.0063C10.1413 11.0063 10.422 11.2869 10.422 11.633V13.2H9.16838V11.633C9.16838 11.2869 9.449 11.0063 9.79517 11.0063Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M10.422 4.425V5.99196C10.422 6.33813 10.1413 6.61875 9.79517 6.61875C9.449 6.61875 9.16838 6.33813 9.16838 5.99196V4.425H10.422Z\"\n        fill=\"white\"\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\ninterface BitcoinIconProps extends IconProps {\n  fill?: string;\n}\n\nexport const BitcoinIcon = ({ width = '42px', height = '42px' }: BitcoinIconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 42 42\" fill=\"none\">\n      <g clipPath=\"url(#a)\">\n        <path\n          fill=\"#F7931A\"\n          d=\"M21 42c11.598 0 21-9.402 21-21S32.598 0 21 0 0 9.402 0 21s9.402 21 21 21z\"\n        />\n        <path\n          fill=\"#fff\"\n          d=\"M30.436 18.401c.412-2.75-1.684-4.23-4.548-5.217l.93-3.727-2.269-.565-.905 3.63c-.596-.15-1.208-.29-1.818-.429l.912-3.652-2.268-.566-.93 3.726c-.493-.113-.978-.223-1.448-.341l.002-.012-3.129-.78-.603 2.422s1.684.386 1.648.41c.919.23 1.084.837 1.057 1.32l-1.058 4.246c.063.016.144.04.236.075l-.24-.06-1.483 5.949c-.113.278-.398.697-1.041.538.024.033-1.649-.41-1.649-.41l-1.126 2.595 2.953.737c.549.137 1.087.282 1.616.417l-.938 3.77 2.266.564.93-3.728c.62.167 1.22.322 1.808.469l-.926 3.712 2.268.564.938-3.762c3.87.733 6.778.438 8.002-3.062.987-2.816-.048-4.442-2.084-5.502 1.483-.34 2.599-1.316 2.897-3.33zM25.25 25.67c-.7 2.818-5.444 1.294-6.982.912l1.247-4.994c1.538.385 6.47 1.145 5.735 4.082zm.703-7.31c-.64 2.564-4.588 1.26-5.867.942l1.128-4.528c1.28.318 5.405.913 4.739 3.587z\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"a\">\n          <path fill=\"#fff\" d=\"M0 0h42v42H0z\" />\n        </clipPath>\n      </defs>\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const ArbitrumIcon = ({ width = '24px', height = '24px', ...props }: IconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 42 42\" {...props}>\n      <circle cx=\"21\" cy=\"21\" r=\"21\" fill=\"#2D374B\" />\n      <path\n        d=\"M25.089 19.4942L27.7327 15.0085L34.8586 26.1072L34.8619 28.2365L34.8386 13.5798C34.8303 13.403 34.7795 13.2308 34.6907 13.0777C34.6018 12.9246 34.4774 12.7952 34.328 12.7003L21.4989 5.32125C21.3456 5.24842 21.1779 5.21102 21.0082 5.21182C20.8386 5.21262 20.6712 5.2516 20.5186 5.32587C20.479 5.34572 20.4407 5.3679 20.4037 5.39231L20.3591 5.42053L7.90602 12.6367L7.85753 12.6585C7.79299 12.6884 7.7314 12.7243 7.67359 12.7657C7.44004 12.9325 7.28088 13.1839 7.23002 13.4664C7.22223 13.5092 7.21692 13.5525 7.21411 13.5959L7.23361 25.5397L13.871 15.2522C14.7066 13.8881 16.5273 13.4487 18.2174 13.4725L20.201 13.5238L8.51275 32.2682L9.89067 33.0614L21.719 13.5426L26.9472 13.5236L15.1494 33.5342L20.0663 36.3639L20.6538 36.7018C20.9073 36.8025 21.1886 36.8081 21.4458 36.7175L34.4553 29.1783L31.9668 30.6196L25.089 19.4942ZM26.0978 34.0217L21.132 26.228L24.1631 21.0845L30.6846 31.3633L26.0978 34.0217Z\"\n        fill=\"#2D374B\"\n      />\n      <path\n        d=\"M21.1323 26.228L26.0981 34.0214L30.6851 31.363L24.1639 21.0845L21.1323 26.228Z\"\n        fill=\"#28A0F0\"\n      />\n      <path\n        d=\"M34.8623 28.2368L34.859 26.1074L27.7331 15.0087L25.0879 19.4939L31.9669 30.6193L34.4554 29.1781C34.5759 29.0804 34.6745 28.9584 34.7446 28.8201C34.8148 28.6818 34.855 28.5302 34.8626 28.3753L34.8623 28.2368Z\"\n        fill=\"#28A0F0\"\n      />\n      <path\n        d=\"M5.00171 30.2455L8.5141 32.2694L20.2024 13.5251L18.2187 13.4738C16.5286 13.4499 14.7079 13.8891 13.8723 15.2534L7.23495 25.541L5.00299 28.9718V30.2466L5.00171 30.2455Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M26.9474 13.5248L21.7195 13.5438L9.89111 33.0626L14.0254 35.4431L15.1496 33.5362L26.9474 13.5248Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M37.065 13.4979C37.0411 12.9583 36.8863 12.4327 36.614 11.9664C36.3417 11.5 35.96 11.1068 35.5019 10.8208L22.5047 3.34657C22.0407 3.11856 21.5306 3 21.0137 3C20.4967 3 19.9866 3.11856 19.5226 3.34657C19.4141 3.40121 6.88305 10.6689 6.88305 10.6689C6.70895 10.7525 6.54242 10.8511 6.38535 10.9634C5.97846 11.2528 5.64243 11.6306 5.40249 12.0684C5.16255 12.5063 5.02494 12.9928 5 13.4915V28.971L7.23196 25.5402L7.21477 13.5969C7.22521 13.4332 7.27184 13.2738 7.35129 13.1302C7.43074 12.9867 7.54104 12.8625 7.67424 12.7667C7.73325 12.7244 20.4782 5.34712 20.5188 5.32685C20.6714 5.25259 20.8387 5.21361 21.0084 5.21281C21.1781 5.21201 21.3458 5.24941 21.4991 5.32224L34.3282 12.7018C34.4776 12.7967 34.602 12.9261 34.6908 13.0792C34.7797 13.2323 34.8304 13.4045 34.8387 13.5813V28.3768C34.8356 28.5302 34.7998 28.6812 34.7337 28.8196C34.6675 28.9581 34.5726 29.0808 34.4552 29.1796L31.9667 30.6208L30.684 31.3648L26.0969 34.0232L21.4449 36.7192C21.1877 36.81 20.9064 36.8044 20.653 36.7036L15.1493 33.538L14.0251 35.4447L18.9713 38.2924C19.135 38.3852 19.2807 38.4678 19.4002 38.5351C19.5855 38.6377 19.7117 38.7082 19.7561 38.7298C20.1699 38.9111 20.6173 39.0032 21.0691 38.9999C21.4834 39.0005 21.8942 38.9232 22.28 38.7721L35.7915 30.9474C36.1727 30.6509 36.4843 30.2744 36.7042 29.8445C36.9242 29.4145 37.0471 28.9415 37.0645 28.4589L37.065 13.4979Z\"\n        fill=\"#96BEDC\"\n      />\n    </Icon>\n  );\n};\n","import { EthereumIcon } from '../EthereumIcon';\nimport { OptimismIcon } from '../OptimismIcon';\nimport { SNXIcon } from '../SNXIcon';\nimport { DollarCircle } from '../DollarCircle';\nimport { Icon, IconProps } from '@chakra-ui/react';\nimport { BitcoinIcon } from '../BitcoinIcon';\nimport { SUSDCIcon } from '../SUSDCIcon';\nimport { ArbitrumIcon } from '../ArbitrumIcon';\n\ninterface CollateralIconProps extends IconProps {\n  symbol?: string;\n  fill?: string;\n  color?: string;\n}\nexport const CollateralIcon = ({\n  symbol,\n  fill = '#00D1FF',\n  color = '#FFFFFF',\n  ...props\n}: CollateralIconProps) => {\n  switch (symbol) {\n    case 'WETH':\n    case 'ETH':\n      return <EthereumIcon {...props} />;\n    case 'SNX':\n    case 'fSNX':\n    case 'fwSNX':\n      return <SNXIcon fill={fill} color={color} {...props} />;\n    case 'OP':\n      return <OptimismIcon {...props} />;\n    case 'sUSD':\n    case 'sUSD':\n    case 'snxUSD':\n      return <DollarCircle {...props} />;\n    case 'WBTC':\n      return <BitcoinIcon {...props} />;\n    case 'sUSDC':\n    case 'USDC':\n    case 'USDh':\n    case 'fUSDC':\n      return <SUSDCIcon {...props} />;\n    case 'ARB':\n      return <ArbitrumIcon {...props} />;\n    default:\n      return <UnknownIcon {...props} />;\n  }\n};\n\nexport const UnknownIcon = ({ width = '32px', height = '32px', ...props }: IconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 32 32\" fill=\"none\" {...props}>\n      <circle cx=\"16\" cy=\"16\" r=\"15\" fill=\"white\" stroke=\"white\" />\n      <path\n        d=\"M14.1156 19.2899V19.0472C14.1205 18.2147 14.1955 17.551 14.3408 17.0563C14.4908 16.5615 14.7087 16.1619 14.9944 15.8574C15.28 15.5529 15.6238 15.277 16.0257 15.0296C16.3258 14.8393 16.5946 14.6419 16.8318 14.4373C17.069 14.2328 17.2579 14.0068 17.3983 13.7594C17.5387 13.5073 17.6089 13.2266 17.6089 12.9174C17.6089 12.5891 17.529 12.3013 17.3692 12.0539C17.2095 11.8065 16.994 11.6162 16.7229 11.483C16.4566 11.3498 16.1612 11.2832 15.8368 11.2832C15.5221 11.2832 15.2244 11.3522 14.9435 11.4901C14.6627 11.6233 14.4327 11.8232 14.2536 12.0896C14.0745 12.3512 13.9776 12.6771 13.9631 13.0672H11C11.0242 12.1157 11.2566 11.3308 11.6972 10.7123C12.1378 10.0891 12.7212 9.62525 13.4475 9.32078C14.1737 9.01155 14.975 8.85693 15.8514 8.85693C16.8149 8.85693 17.667 9.01393 18.4078 9.32791C19.1485 9.63714 19.7295 10.0867 20.1508 10.6766C20.572 11.2665 20.7826 11.9778 20.7826 12.8103C20.7826 13.3669 20.6882 13.8617 20.4994 14.2946C20.3154 14.7228 20.0564 15.1034 19.7223 15.4364C19.3882 15.7646 18.9936 16.062 18.5385 16.3284C18.156 16.552 17.8413 16.7851 17.5944 17.0277C17.3523 17.2703 17.1707 17.551 17.0497 17.8698C16.9335 18.1885 16.873 18.581 16.8681 19.0472V19.2899H14.1156ZM15.5536 23.8569C15.0694 23.8569 14.6555 23.6904 14.3117 23.3574C13.9728 23.0196 13.8058 22.6153 13.8106 22.1443C13.8058 21.6781 13.9728 21.2784 14.3117 20.9454C14.6555 20.6124 15.0694 20.4459 15.5536 20.4459C16.0136 20.4459 16.4178 20.6124 16.7664 20.9454C17.115 21.2784 17.2918 21.6781 17.2966 22.1443C17.2918 22.4583 17.207 22.7461 17.0424 23.0077C16.8826 23.2646 16.672 23.4716 16.4106 23.6286C16.1491 23.7808 15.8635 23.8569 15.5536 23.8569Z\"\n        fill=\"#06061B\"\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const ChevronDown = ({ width = '20px', height = '20px', ...props }: IconProps) => {\n  return (\n    <Icon width={width} height={height} color=\"cyan.400\" viewBox=\"0 0 20 20\" fill=\"none\" {...props}>\n      <path\n        d=\"M9.99962 10.9766L14.1246 6.85156L15.303 8.0299L9.99962 13.3332L4.69629 8.0299L5.87462 6.85156L9.99962 10.9766Z\"\n        fill=\"currentColor\"\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const ChevronUp = ({ width = '20px', height = '20px', ...props }: IconProps) => {\n  return (\n    <Icon width={width} height={height} color=\"cyan.400\" viewBox=\"0 0 25 24\" fill=\"none\" {...props}>\n      <path\n        d=\"M12.3564 10.828L7.40643 15.778L5.99243 14.364L12.3564 8L18.7204 14.364L17.3064 15.778L12.3564 10.828Z\"\n        fill=\"currentColor\"\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const FailedIcon = ({ w = '94px', h = '94px' }: IconProps) => {\n  return (\n    <Icon w={w} h={h} viewBox=\"0 0 94 94\" fill=\"none\">\n      <g filter=\"url(#filter0_d_1044_28165)\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M47 76.3333C63.2004 76.3333 76.3333 63.2004 76.3333 47C76.3333 30.7996 63.2004 17.6667 47 17.6667C30.7996 17.6667 17.6667 30.7996 17.6667 47C17.6667 63.2004 30.7996 76.3333 47 76.3333ZM47 79C64.6731 79 79 64.6731 79 47C79 29.3269 64.6731 15 47 15C29.3269 15 15 29.3269 15 47C15 64.6731 29.3269 79 47 79Z\"\n          fill=\"#FF4A60\"\n        />\n      </g>\n      <g filter=\"url(#filter1_d_1044_28165)\">\n        <path\n          d=\"M56.3334 39.5466L54.4534 37.6666L47.0001 45.12L39.5467 37.6666L37.6667 39.5466L45.1201 47L37.6667 54.4533L39.5467 56.3333L47.0001 48.88L54.4534 56.3333L56.3334 54.4533L48.8801 47L56.3334 39.5466Z\"\n          fill=\"#FF4A60\"\n        />\n      </g>\n      <defs>\n        <filter\n          id=\"filter0_d_1044_28165\"\n          x=\"0\"\n          y=\"0\"\n          width=\"94\"\n          height=\"94\"\n          filterUnits=\"userSpaceOnUse\"\n          colorInterpolationFilters=\"sRGB\"\n        >\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\n          <feColorMatrix\n            in=\"SourceAlpha\"\n            type=\"matrix\"\n            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n            result=\"hardAlpha\"\n          />\n          <feOffset />\n          <feGaussianBlur stdDeviation=\"7.5\" />\n          <feColorMatrix\n            type=\"matrix\"\n            values=\"0 0 0 0 1 0 0 0 0 0.116667 0 0 0 0 0.222667 0 0 0 0.6 0\"\n          />\n          <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow_1044_28165\" />\n          <feBlend\n            mode=\"normal\"\n            in=\"SourceGraphic\"\n            in2=\"effect1_dropShadow_1044_28165\"\n            result=\"shape\"\n          />\n        </filter>\n        <filter\n          id=\"filter1_d_1044_28165\"\n          x=\"22.6667\"\n          y=\"22.6666\"\n          width=\"48.6667\"\n          height=\"48.6666\"\n          filterUnits=\"userSpaceOnUse\"\n          colorInterpolationFilters=\"sRGB\"\n        >\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\n          <feColorMatrix\n            in=\"SourceAlpha\"\n            type=\"matrix\"\n            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n            result=\"hardAlpha\"\n          />\n          <feOffset />\n          <feGaussianBlur stdDeviation=\"7.5\" />\n          <feColorMatrix\n            type=\"matrix\"\n            values=\"0 0 0 0 1 0 0 0 0 0.116667 0 0 0 0 0.222667 0 0 0 0.6 0\"\n          />\n          <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow_1044_28165\" />\n          <feBlend\n            mode=\"normal\"\n            in=\"SourceGraphic\"\n            in2=\"effect1_dropShadow_1044_28165\"\n            result=\"shape\"\n          />\n        </filter>\n      </defs>\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const WalletIcon = ({\n  width = '20px',\n  height = '20ox',\n  color = 'whiteAlpha.700',\n  ...props\n}: IconProps) => {\n  return (\n    <Icon width={width} color={color} height={height} viewBox=\"0 0 20 20\" fill=\"none\" {...props}>\n      <path\n        d=\"M6.58154 6.2701C6.23637 6.2701 5.95654 6.54993 5.95654 6.8951C5.95654 7.24028 6.23637 7.5201 6.58154 7.5201H10.3101C10.6553 7.5201 10.9351 7.24028 10.9351 6.8951C10.9351 6.54993 10.6553 6.2701 10.3101 6.2701H6.58154Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M13.972 9.10498C13.6268 9.10498 13.347 9.38481 13.347 9.72998C13.347 10.0752 13.6268 10.355 13.972 10.355H14.1873C14.5324 10.355 14.8123 10.0752 14.8123 9.72998C14.8123 9.38481 14.5324 9.10498 14.1873 9.10498H13.972Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M17.2918 11.6311L17.2916 11.6447V12.3416C17.2916 14.6883 15.3892 16.5907 13.0426 16.5907H7.07331C4.72664 16.5907 2.82422 14.6883 2.82422 12.3416V7.38508C2.82422 5.0384 4.72664 3.13599 7.07331 3.13599H13.0426C15.3892 3.13599 17.2916 5.0384 17.2916 7.38508V7.90016L17.2918 7.91382L17.2916 7.92747V11.6174L17.2918 11.6311ZM7.07331 4.38599C5.41699 4.38599 4.07422 5.72876 4.07422 7.38508V12.3416C4.07422 13.9979 5.41699 15.3407 7.07331 15.3407H13.0426C14.6989 15.3407 16.0416 13.9979 16.0416 12.3416V12.2561H13.871C12.4998 12.2552 11.3876 11.1445 11.3867 9.77282C11.3867 8.40047 12.4998 7.28966 13.8706 7.28882H16.0401C15.9893 5.67705 14.6667 4.38599 13.0426 4.38599H7.07331ZM13.8714 11.0061H16.0416V8.53882H13.8712C13.1891 8.53932 12.6369 9.09162 12.6367 9.77223C12.6372 10.4535 13.1895 11.0056 13.8714 11.0061Z\"\n        fill=\"currentColor\"\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const LogoIcon = ({ color = 'cyan.400', width = '29', height = '21' }: IconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 29 21\" fill=\"none\" color={color}>\n      <path\n        d=\"M6.81239 5.45766C6.61525 5.22805 6.37254 5.11297 6.08372 5.11297H0.177C0.124536 5.11297 0.0816109 5.09606 0.0492845 5.06224C0.0164282 5.02898 0 4.99134 0 4.95098V0.89807C0 0.85771 0.0164282 0.820622 0.0492845 0.786807C0.0816109 0.752992 0.124536 0.736084 0.177 0.736084H6.41864C7.99362 0.736084 9.35239 1.39166 10.4944 2.70173L12.0106 4.58611L9.05721 8.25396L6.81239 5.45766ZM17.7207 2.68155C18.8627 1.38457 20.2278 0.736084 21.8161 0.736084H28.0381C28.0906 0.736084 28.1298 0.749719 28.1563 0.776444C28.1822 0.803714 28.1955 0.844074 28.1955 0.89807V4.95098C28.1955 4.99134 28.1822 5.02898 28.1563 5.06224C28.1298 5.09606 28.0906 5.11297 28.0381 5.11297H22.1314C21.8426 5.11297 21.5998 5.22805 21.4027 5.45766L17.0514 10.8479L21.4223 16.2785C21.6195 16.495 21.8553 16.603 22.1314 16.603H28.0381C28.0906 16.603 28.1298 16.6199 28.1563 16.6538C28.1822 16.6876 28.1955 16.7318 28.1955 16.7852V20.8381C28.1955 20.8785 28.1822 20.9161 28.1563 20.9494C28.1298 20.9832 28.0906 21.0001 28.0381 21.0001H21.8161C20.2278 21.0001 18.8691 20.3451 17.7403 19.0345L14.1176 14.5359L10.4944 19.0345C9.35239 20.3451 7.98727 21.0001 6.39903 21.0001H0.177C0.124536 21.0001 0.0847905 20.9832 0.0588234 20.9494C0.0323264 20.9156 0.0196078 20.8719 0.0196078 20.8174V16.7645C0.0196078 16.7241 0.0323264 16.687 0.0588234 16.6532C0.0847905 16.6194 0.124536 16.6025 0.177 16.6025H6.08372C6.35929 16.6025 6.602 16.488 6.81239 16.2578L11.0848 10.9488L17.7207 2.68155Z\"\n        fill=\"currentColor\"\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\ninterface BorrowIconProps extends IconProps {\n  fill?: string;\n}\n\nexport const BorrowIcon = ({ width = '15px', height = '15px', ...props }: BorrowIconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 18 18\" fill=\"none\" {...props}>\n      <svg\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 18 18\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M5.48247 2.4375C4.94851 2.4375 4.51566 2.87036 4.51566 3.40431V5.43752H3.21022C2.67626 5.43752 2.24341 5.87038 2.24341 6.40434V8.59571C2.24341 9.12967 2.67626 9.56252 3.21022 9.56252H4.75822V11.4382C4.24137 11.4576 3.82831 11.8827 3.82831 12.4043V14.5957C3.82831 15.1296 4.26117 15.5625 4.79512 15.5625H13.8598C14.3938 15.5625 14.8266 15.1296 14.8266 14.5957V12.5618C15.3435 12.5424 15.7565 12.1173 15.7565 11.5957V9.40431C15.7565 8.87036 15.3237 8.4375 14.7897 8.4375H13.2417V6.5625H14.5472C15.0811 6.5625 15.514 6.12964 15.514 5.59569V3.40431C15.514 2.87036 15.0811 2.4375 14.5472 2.4375H5.48247ZM5.64066 5.4375V3.5625H14.389V5.4375H5.64066ZM3.36841 6.56252V8.43752H5.71853L5.72504 8.4375H12.1167V6.56252H3.36841ZM5.88322 11.4375V9.56252H12.2749L12.2814 9.5625H14.6315V11.4375H5.88322ZM4.95331 14.4375V12.5625H13.7016V14.4375H4.95331Z\"\n          fill=\"white\"\n        />\n      </svg>\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const BaseIcon = ({\n  width = '24px',\n  height = '24px',\n  fill = '#0052FF',\n  ...props\n}: IconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 24 24\" {...props}>\n      <circle cx=\"12\" cy=\"12\" r=\"12\" fill=\"white\" />\n      <g width=\"24\" height=\"24\" fill=\"white\">\n        <path\n          d=\"M11.9791 24C18.618 24 24 18.6274 24 12C24 5.37257 18.618 0 11.9791 0C5.6804 0 0.513182 4.8359 0 10.9913H15.8889V13.0087H8.6297e-08C0.513182 19.1641 5.6804 24 11.9791 24Z\"\n          fill={fill as string}\n        />\n      </g>\n    </Icon>\n  );\n};\n","import Wei, { wei } from '@synthetixio/wei';\nimport React, { createContext, useState, PropsWithChildren, Dispatch, SetStateAction } from 'react';\n\nexport const ManagePositionContext = createContext<{\n  collateralChange: Wei;\n  debtChange: Wei;\n  setDebtChange: Dispatch<SetStateAction<Wei>>;\n  setCollateralChange: Dispatch<SetStateAction<Wei>>;\n}>({\n  collateralChange: wei(0),\n  debtChange: wei(0),\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  setDebtChange: () => {},\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  setCollateralChange: () => {},\n});\n\nexport const ManagePositionProvider: React.FC<PropsWithChildren> = ({ children }) => {\n  const [debtChange, setDebtChange] = useState(wei(0));\n  const [collateralChange, setCollateralChange] = useState(wei(0));\n\n  return (\n    <ManagePositionContext.Provider\n      value={{ debtChange, setDebtChange, collateralChange, setCollateralChange }}\n    >\n      {children}\n    </ManagePositionContext.Provider>\n  );\n};\n","export const GWEI_DECIMALS = 9;\nexport const GAS_LIMIT_MULTIPLIER = 1.5;\n\nexport const DEFAULT_QUERY_REFRESH_INTERVAL = 600_000; // 10min\nexport const DEFAULT_QUERY_STALE_TIME = 300_000; // 5min\n\nexport const INFURA_KEY = process.env.INFURA_KEY || '8678fe160b1f4d45ad3f3f71502fc57b';\nexport const ONBOARD_KEY = 'sec_jykTuCK0ZuqXWf3wNYqizxs2';\n\nexport const getSubgraphUrl = (networkName = 'optimism-mainnet') => {\n  switch (networkName) {\n    case 'arbitrum':\n      return `https://subgraph.satsuma-prod.com/ce5e03f52f3b/synthetix/synthetix-arbitrum-mainnet/version/v1/api`;\n    case 'base-sepolia':\n      return 'https://subgraph.satsuma-prod.com/ce5e03f52f3b/synthetix/synthetix-base-sepolia-andromeda/version/v1.0.1/api';\n    case 'base':\n      return 'https://subgraph.satsuma-prod.com/ce5e03f52f3b/synthetix/synthetix-base-mainnet-andromeda/version/v1.1/api';\n    default:\n      return `https://api.thegraph.com/subgraphs/name/snx-v3/${networkName}`;\n  }\n};\n\nexport const SESSION_STORAGE_KEYS = {\n  TERMS_CONDITIONS_ACCEPTED: 'TERMS_CONDITIONS_ACCEPTED',\n};\n\nexport const offchainMainnetEndpoint =\n  process.env.PYTH_MAINNET_ENDPOINT || 'https://synthetixab.rpc.p2p.world/';\n\nexport const offchainTestnetEndpoint =\n  process.env.PYTH_TESTNET_ENDPOINT || 'https://synthetixab.rpc.p2p.world/';\n","import { offchainMainnetEndpoint, offchainTestnetEndpoint } from '@snx-v3/constants';\nimport { EvmPriceServiceConnection } from '@pythnetwork/pyth-evm-js';\nimport { ethers, PopulatedTransaction, BigNumber } from 'ethers';\nimport { Wei } from '@synthetixio/wei';\n\nexport const fetchPriceUpdates = async (\n  requestedPriceUpdates: { priceFeedId: string; stalenessTolerance: Wei }[],\n  isTestnet: boolean\n) => {\n  if (requestedPriceUpdates.length === 0) return [];\n  const priceService = new EvmPriceServiceConnection(\n    isTestnet ? offchainTestnetEndpoint : offchainMainnetEndpoint\n  );\n  const signedPricesData = await priceService.getPriceFeedsUpdateData(\n    requestedPriceUpdates.map(({ priceFeedId }) => priceFeedId)\n  );\n\n  return signedPricesData.map((signedOffchainData, i) => {\n    const updateType = 1; // todo can I fetch this?\n\n    const { priceFeedId, stalenessTolerance } = requestedPriceUpdates[i];\n    return ethers.utils.defaultAbiCoder.encode(\n      ['uint8', 'uint64', 'bytes32[]', 'bytes[]'],\n      [updateType, stalenessTolerance.toBN(), [priceFeedId], [signedOffchainData]]\n    );\n  });\n};\n\nexport const priceUpdatesToPopulatedTx = (\n  from: string,\n  oracleAddresses: { address: string }[],\n  signedOffchainData: string[]\n) => {\n  if (oracleAddresses.length !== signedOffchainData.length) {\n    throw new Error('oracleAddresses and signedOffchainData must be the same length');\n  }\n  return signedOffchainData.map((signedOffchainDatum, i) => {\n    const tx: PopulatedTransaction = {\n      to: oracleAddresses[i].address,\n      from: from,\n      data: new ethers.utils.Interface([\n        'function fulfillOracleQuery(bytes calldata signedOffchainData) payable external',\n      ]).encodeFunctionData('fulfillOracleQuery', [signedOffchainDatum]),\n      // We set the value to 1 wei to avoid FeeRequired error from pyth, it's quite nice that their fee seems to be the lowest denominator on every network.\n      // If this ever changes, things wont break, but become slower.\n      value: BigNumber.from(1),\n    };\n    return tx;\n  });\n};\n","import { BigNumberish, utils } from 'ethers';\nimport { wei, WeiSource } from '@synthetixio/wei';\n\nexport const formatValue = (value: BigNumberish, decimals = 18) =>\n  parseFloat(utils.formatUnits(value, decimals));\n\nexport const parseUnits = (value: WeiSource, decimals = 18) => wei(value, decimals).toBN();\n\nexport const compareAddress = (add1: string | null = '', add2: string | null = '') =>\n  !!add1 && !!add2 && add1.toLowerCase() === add2.toLowerCase();\n\nexport const prettyString = (text: string, startLength = 6, endLength = 4) => {\n  if (text.length <= startLength + endLength) {\n    return text;\n  }\n  return `${text.substring(0, startLength)}...${text.substring(text.length - endLength)}`;\n};\n","import { Wei } from '@synthetixio/wei';\n\nexport function currency(\n  value: Wei,\n  options?: Intl.NumberFormatOptions,\n  minimumDigitsToShowAfterZeros = 2\n) {\n  try {\n    const stringValue = value.toString();\n    const numberValue = value.toNumber();\n\n    const decimals =\n      numberValue < 0\n        ? -numberValue - Math.floor(-numberValue)\n        : numberValue - Math.floor(numberValue);\n    const zeroDecimals = decimals !== 0 ? -Math.floor(Math.log10(decimals) + 1) : 0;\n\n    const maximumFractionDigits = zeroDecimals + minimumDigitsToShowAfterZeros;\n\n    return isNaN(numberValue)\n      ? stringValue\n      : numberValue.toLocaleString('en-US', {\n          minimumFractionDigits: 0,\n          maximumFractionDigits,\n          ...options,\n        });\n  } catch (error) {\n    return value + '';\n  }\n}\n","export const isBaseAndromeda = (id?: number | string, preset?: string) =>\n  (id?.toString() === '8453' || '84532') && preset === 'andromeda';\n\nexport function getRepayerContract(id?: number) {\n  switch (id) {\n    case 8453:\n      return '0xBD8004ea5c73E33d405d35d594221Efc733F7E37';\n    case 84532:\n      return '0xD00a601eafC2C131F46105827AFB02b925Adf62A';\n    default:\n      return '';\n  }\n}\n\nexport function getPythWrapper(id?: number) {\n  switch (id) {\n    case 8453:\n      return '0x3FC194FA6C26BE94Fc404E69b51793c199c3BF52';\n    case 84532:\n      return '0xF9e9e905d3745F5E0B803a179E17328CFe03B56d';\n    default:\n      return sUSDC;\n  }\n}\n\nexport const BASE_USDC = '0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913';\nexport const sUSDC = '0xC74eA762cF06c9151cE074E6a569a5945b6302E7';\n\n// Base Sepolia\nexport const BASE_SEPOLIA_fUSDC = '0xc43708f8987Df3f3681801e5e640667D86Ce3C30';\nexport const BASE_SEPOLIA_sUSDC = '0x8069c44244e72443722cfb22DcE5492cba239d39';\n\nexport const USDC_BASE_MARKET = '1';\n","// This is a type guard function that checks if a value is not null and not undefined.\n// This is useful when filtering an array that might have null or undefined values.\nexport const notNil = <T>(x: T | null | undefined): x is T => x !== null && x !== undefined;\n","export type TransactionStatus = 'unsent' | 'prompting' | 'pending' | 'success' | 'error';\n\ntype TxnState = {\n  error: Error | null;\n  modalOpen: boolean;\n  txnStatus: TransactionStatus;\n  txnHash: string | null;\n};\n\nexport const initialState: TxnState = {\n  error: null,\n  modalOpen: false,\n  txnStatus: 'unsent',\n  txnHash: null,\n};\n\nexport type Actions =\n  | { type: 'prompting' }\n  | { type: 'pending'; payload: { txnHash: string } }\n  | { type: 'success' }\n  | { type: 'error'; payload: { error: Error } }\n  | { type: 'settled' };\n\nexport function reducer(state: TxnState, action: Actions): TxnState {\n  switch (action.type) {\n    case 'prompting':\n      return {\n        ...state,\n        txnStatus: 'prompting',\n        modalOpen: true,\n        error: null,\n      };\n\n    case 'pending':\n      return {\n        ...state,\n        txnStatus: 'pending',\n        txnHash: action.payload.txnHash,\n      };\n\n    case 'success':\n      return {\n        ...state,\n        txnStatus: 'success',\n      };\n\n    case 'error':\n      return {\n        ...state,\n        txnStatus: 'error',\n        error: action.payload.error,\n      };\n\n    case 'settled':\n      return {\n        ...state,\n        modalOpen: false,\n        txnStatus: 'unsent',\n        error: null,\n        txnHash: null,\n      };\n\n    default:\n      return state;\n  }\n}\n","export async function importOracleManagerProxy(chainId, preset) {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/meta.json'),\n        import('@synthetixio/v3-contracts/1-main/OracleManagerProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.OracleManagerProxy, abi };\n    }\n    case '11155111-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/meta.json'),\n        import('@synthetixio/v3-contracts/11155111-main/OracleManagerProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.OracleManagerProxy, abi };\n    }\n    case '10-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/meta.json'),\n        import('@synthetixio/v3-contracts/10-main/OracleManagerProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.OracleManagerProxy, abi };\n    }\n    case '8453-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/8453-andromeda/OracleManagerProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.OracleManagerProxy, abi };\n    }\n    case '84532-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/84532-andromeda/OracleManagerProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.OracleManagerProxy, abi };\n    }\n    case '42161-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/meta.json'),\n        import('@synthetixio/v3-contracts/42161-main/OracleManagerProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.OracleManagerProxy, abi };\n    }\n    case '421614-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/meta.json'),\n        import('@synthetixio/v3-contracts/421614-main/OracleManagerProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.OracleManagerProxy, abi };\n    }\n    case '42161-arbthetix': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-arbthetix/meta.json'),\n        import('@synthetixio/v3-contracts/42161-arbthetix/OracleManagerProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.OracleManagerProxy, abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for OracleManagerProxy`);\n    }\n  }\n}\n","import { deploymentsWithERC7412, Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useMulticall3 } from '@snx-v3/useMulticall3';\nimport { useOracleManagerProxy } from '@snx-v3/useOracleManagerProxy';\nimport { ZodBigNumber } from '@snx-v3/zod';\nimport { wei } from '@synthetixio/wei';\nimport { useQuery } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\nimport { z } from 'zod';\n\nconst NodeSchema = z.object({\n  nodeType: z.number(),\n  parameters: z.string(),\n  parents: z.array(z.string()),\n});\n\nconst PythParametersSchema = z.object({\n  address: z.string(),\n  priceFeedId: z.string(),\n  stalenessTolerance: ZodBigNumber.transform((x) => wei(x)),\n});\n\nconst EXTERNAL_NODE_TYPE = 2;\n\nconst loadConfigs = async ({ CoreProxy }: { CoreProxy: ethers.Contract }) => {\n  const hideDisabled = false;\n  return await CoreProxy.getCollateralConfigurations(hideDisabled);\n};\n\nexport const useAllCollateralPriceIds = (customNetwork?: Network) => {\n  const { data: Multicall3 } = useMulticall3(customNetwork);\n  const { data: OracleProxy } = useOracleManagerProxy(customNetwork);\n  const { data: CoreProxy } = useCoreProxy(customNetwork);\n  const { network } = useNetwork();\n\n  return useQuery({\n    enabled: Boolean(Multicall3 && OracleProxy && CoreProxy),\n    staleTime: Infinity,\n    queryKey: [`${network?.id}-${network?.preset}`, 'AllCollateralPriceIds'],\n    queryFn: async () => {\n      if (!CoreProxy || !Multicall3 || !OracleProxy || !network) {\n        throw Error('useAllCollateralPriceIds should not be enabled ');\n      }\n\n      if (!deploymentsWithERC7412.includes(`${network?.id}-${network?.preset}`)) return [];\n\n      const configs = await loadConfigs({ CoreProxy });\n\n      const oracleNodeIds = configs.map((x: { oracleNodeId: string }) => x.oracleNodeId);\n\n      const calls = oracleNodeIds.map((oracleNodeId: string) => ({\n        target: OracleProxy.address,\n        callData: OracleProxy.interface.encodeFunctionData('getNode', [oracleNodeId]),\n      }));\n\n      const { returnData } = await Multicall3.callStatic.aggregate(calls);\n\n      const decoded = returnData\n        .map((bytes: ethers.utils.BytesLike, i: number) => {\n          const nodeResp = OracleProxy.interface.decodeFunctionResult('getNode', bytes)[0];\n\n          const { nodeType, parameters } = NodeSchema.parse({ ...nodeResp });\n\n          if (nodeType !== EXTERNAL_NODE_TYPE) return undefined;\n\n          try {\n            const [address, priceFeedId, stalenessTolerance] = ethers.utils.defaultAbiCoder.decode(\n              ['address', 'bytes32', 'uint256'],\n              parameters\n            );\n            const parametersDecoded = PythParametersSchema.parse({\n              address,\n              priceFeedId,\n              stalenessTolerance,\n            });\n            return {\n              parameters,\n              priceFeedId: parametersDecoded.priceFeedId,\n              address: parametersDecoded.address,\n              stalenessTolerance: parametersDecoded.stalenessTolerance,\n            };\n          } catch (error) {\n            console.error(`Decoding parameters failed, config:`, configs[i]);\n            console.error('parameters: ', parameters);\n            console.error(error);\n            return null;\n          }\n        })\n        .filter(Boolean);\n\n      const seen = new Set();\n      return decoded.filter((item: { priceFeedId: string }) => {\n        if (seen.has(item.priceFeedId)) {\n          return false;\n        }\n        seen.add(item.priceFeedId);\n        return true;\n      });\n    },\n  });\n};\n","import { Contract } from '@ethersproject/contracts';\nimport { useQuery } from '@tanstack/react-query';\nimport {\n  Network,\n  useNetwork,\n  useProvider,\n  useProviderForChain,\n  useSigner,\n} from '@snx-v3/useBlockchain';\nimport { importOracleManagerProxy } from '@snx-v3/contracts';\n\nexport function useOracleManagerProxy(customNetwork?: Network) {\n  const providerForChain = useProviderForChain(customNetwork);\n\n  const { network } = useNetwork();\n  const provider = useProvider();\n  const signer = useSigner();\n  const signerOrProvider = signer || provider;\n  const withSigner = Boolean(signer);\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'OracleManagerProxy', { withSigner }],\n    queryFn: async function () {\n      if (providerForChain && customNetwork) {\n        const { address, abi } = await importOracleManagerProxy(\n          customNetwork.id,\n          customNetwork.preset\n        );\n        return new Contract(address, abi, providerForChain);\n      }\n      if (!network || !signerOrProvider) throw new Error('Network or signer not available');\n      const { address, abi } = await importOracleManagerProxy(network?.id, network?.preset);\n      return new Contract(address, abi, signerOrProvider);\n    },\n    enabled: Boolean(signerOrProvider),\n    staleTime: Infinity,\n  });\n}\n","import { useQuery } from '@tanstack/react-query';\nimport { useWallet, useNetwork, useProvider } from '@snx-v3/useBlockchain';\nimport { Contract } from 'ethers';\nimport { ZodBigNumber } from '@snx-v3/zod';\nimport { wei } from '@synthetixio/wei';\n\nconst AllowanceSchema = ZodBigNumber.transform((x) => wei(x));\nconst abi = ['function allowance(address, address) view returns (uint256)'];\n\nexport const useAllowance = ({\n  contractAddress,\n  spender,\n}: {\n  contractAddress?: string;\n  spender?: string;\n}) => {\n  const { activeWallet } = useWallet();\n  const provider = useProvider();\n  const { network } = useNetwork();\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'Allowance',\n      { accountAddress: activeWallet?.address },\n      { contractAddress, spender },\n    ],\n    queryFn: async () => {\n      if (!(contractAddress && spender && activeWallet?.address && provider))\n        throw new Error('OMG');\n      const contract = new Contract(contractAddress, abi, provider);\n      const allowance = await contract.allowance(activeWallet.address, spender);\n      return AllowanceSchema.parse(allowance);\n    },\n    enabled: Boolean(activeWallet?.address && contractAddress && spender && provider),\n  });\n};\n","import { useReducer } from 'react';\nimport { useAllowance } from '@snx-v3/useAllowance';\nimport { BigNumberish, ethers } from 'ethers';\nimport { useMutation } from '@tanstack/react-query';\nimport { useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport { formatGasPriceForTransaction } from '@snx-v3/useGasOptions';\nimport { getGasPrice } from '@snx-v3/useGasPrice';\nimport { useGasSpeed } from '@snx-v3/useGasSpeed';\n\nexport const approveAbi = ['function approve(address spender, uint256 amount) returns (bool)'];\n\nexport const useApprove = (\n  {\n    contractAddress,\n    amount,\n    spender,\n  }: {\n    contractAddress?: string;\n    amount: BigNumberish;\n    spender?: string;\n  },\n  eventHandlers?: {\n    onSuccess?: () => void;\n    onMutate?: () => void;\n    onError?: (e: Error) => void;\n  }\n) => {\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n  const { data: allowance, refetch: refetchAllowance } = useAllowance({ contractAddress, spender });\n\n  const sufficientAllowance = Boolean(allowance?.gte(amount));\n\n  const signer = useSigner();\n  const { gasSpeed } = useGasSpeed();\n  const provider = useProvider();\n\n  const mutation = useMutation({\n    mutationFn: async (infiniteApproval: boolean) => {\n      if (!signer || !contractAddress || !spender || !provider)\n        throw new Error('Signer, contract address or spender is not defined');\n      if (sufficientAllowance) return;\n\n      try {\n        dispatch({ type: 'prompting' });\n\n        const contract = new ethers.Contract(contractAddress, approveAbi, signer);\n        const amountToAppove = infiniteApproval ? ethers.constants.MaxUint256 : amount;\n\n        const gasPricesPromised = getGasPrice({ provider });\n        const gasLimitPromised = contract.estimateGas.approve(spender, amountToAppove);\n\n        const populatedTxnPromised = contract.populateTransaction.approve(spender, amountToAppove, {\n          gasLimit: gasLimitPromised,\n        });\n\n        const [gasPrices, gasLimit, populatedTxn] = await Promise.all([\n          gasPricesPromised,\n          gasLimitPromised,\n          populatedTxnPromised,\n        ]);\n\n        const gasOptionsForTransaction = formatGasPriceForTransaction({\n          gasLimit,\n          gasPrices,\n          gasSpeed,\n        });\n\n        const txn = await signer.sendTransaction({ ...populatedTxn, ...gasOptionsForTransaction });\n        dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n        await txn.wait();\n        dispatch({ type: 'success' });\n        refetchAllowance();\n      } catch (error: any) {\n        dispatch({ type: 'error', payload: { error } });\n        throw error;\n      }\n    },\n    ...eventHandlers,\n  });\n  return {\n    mutation,\n    txnState,\n    isLoading: mutation.isPending,\n    approve: mutation.mutateAsync,\n    refetchAllowance,\n    requireApproval: !sufficientAllowance,\n  };\n};\n","import { ethers } from 'ethers';\nimport React, { useMemo } from 'react';\nimport {\n  BaseIcon,\n  EthereumIcon,\n  FailedIcon,\n  LogoIcon,\n  OptimismIcon,\n  ArbitrumIcon,\n} from '@snx-v3/icons';\nimport { INFURA_KEY as DEFAULT_INFURA_KEY } from '@snx-v3/constants';\nimport SynthetixIcon from './SynthetixIcon.svg';\nimport SynthetixLogo from './SynthetixLogo.svg';\nimport { useConnectWallet, useSetChain } from '@web3-onboard/react';\nimport { useCallback } from 'react';\nimport { IconProps } from '@chakra-ui/react';\n\nexport type Network = {\n  id: number;\n  preset: string;\n  hexId: string;\n  token: string;\n  name: string;\n  rpcUrl: () => string;\n  label: string;\n  isSupported: boolean;\n  publicRpcUrl: string;\n  isTestnet: boolean;\n};\n\nexport const UNSUPPORTED_NETWORK: Network = {\n  id: 0,\n  preset: 'main',\n  hexId: `0x${Number(0).toString(16)}`,\n  token: 'ETH',\n  name: 'unsupported',\n  rpcUrl: () => '',\n  publicRpcUrl: '',\n  label: 'Unsupported',\n  isSupported: false,\n  isTestnet: false,\n};\n\ninterface NetworkIconProps extends IconProps {\n  networkId?: Network['id'];\n  size?: string;\n}\n\nexport const NetworkIcon = ({ networkId, size = '24px', ...props }: NetworkIconProps) => {\n  switch (networkId) {\n    case 1:\n      return <EthereumIcon w={size} h={size} {...props} />;\n    case 10:\n      return <OptimismIcon w={size} h={size} {...props} />;\n    case 11155111:\n      return <EthereumIcon w={size} h={size} {...props} />;\n    case 84531:\n      return <BaseIcon w={size} h={size} {...props} />;\n    case 84532:\n      return <BaseIcon w={size} h={size} {...props} />;\n    case 13370:\n      return <LogoIcon w=\"29px\" h=\"21px\" {...props} />;\n    case 8453:\n      return <BaseIcon w={size} h={size} {...props} />;\n    case 11155420:\n      return <OptimismIcon w={size} h={size} {...props} />;\n    case 421614:\n      return <ArbitrumIcon w={size} h={size} {...props} />;\n    case 42161:\n      return <ArbitrumIcon w={size} h={size} {...props} />;\n    default:\n      return <FailedIcon w={size} h={size} {...props} />;\n  }\n};\n\nexport const NETWORKS: Network[] = [\n  {\n    id: 8453,\n    preset: 'andromeda',\n    hexId: `0x${Number(8453).toString(16)}`,\n    token: 'ETH',\n    name: 'base',\n    rpcUrl: (INFURA_KEY?: string) =>\n      `https://base-mainnet.infura.io/v3/${INFURA_KEY ?? DEFAULT_INFURA_KEY}`,\n    label: 'Base',\n    isSupported: false,\n    publicRpcUrl: 'https://base.publicnode.com',\n    isTestnet: false,\n  },\n  {\n    id: 1,\n    preset: 'main',\n    hexId: `0x${Number(1).toString(16)}`,\n    token: 'ETH',\n    name: 'mainnet',\n    rpcUrl: (INFURA_KEY?: string) =>\n      `https://mainnet.infura.io/v3/${INFURA_KEY ?? DEFAULT_INFURA_KEY}`,\n    label: 'Ethereum',\n    isSupported: true,\n    publicRpcUrl: 'https://ethereum.publicnode.com',\n    isTestnet: false,\n  },\n  {\n    id: 10,\n    preset: 'main',\n    hexId: `0x${Number(10).toString(16)}`,\n    token: 'ETH',\n    name: 'optimism-mainnet',\n    rpcUrl: (INFURA_KEY?: string) =>\n      `https://optimism-mainnet.infura.io/v3/${INFURA_KEY ?? DEFAULT_INFURA_KEY}`,\n    label: 'Optimism',\n    isSupported: true,\n    publicRpcUrl: 'https://mainnet.optimism.io',\n    isTestnet: false,\n  },\n  {\n    id: 11155111,\n    preset: 'main',\n    hexId: `0x${Number(11155111).toString(16)}`,\n    token: 'ETH',\n    name: 'sepolia',\n    rpcUrl: (INFURA_KEY?: string) =>\n      `https://sepolia.infura.io/v3/${INFURA_KEY ?? DEFAULT_INFURA_KEY}`,\n    label: 'Sepolia Testnet',\n    isSupported: true,\n    publicRpcUrl: 'https://ethereum-sepolia.publicnode.com',\n    isTestnet: true,\n  },\n  {\n    id: 84532,\n    preset: 'andromeda',\n    hexId: `0x${Number(84532).toString(16)}`,\n    token: 'ETH',\n    name: 'base-sepolia',\n    rpcUrl: (INFURA_KEY?: string) =>\n      `https://base-sepolia.infura.io/v3/${INFURA_KEY ?? DEFAULT_INFURA_KEY}`,\n    label: 'Base Sepolia',\n    isSupported: false, // hidden by default but if wallet switched to Base Sepolia it will be visible\n    publicRpcUrl: 'https://sepolia.base.org',\n    isTestnet: true,\n  },\n  {\n    id: 13370,\n    preset: 'main',\n    hexId: `0x${Number(13370).toString(16)}`,\n    token: 'ETH',\n    name: 'cannon',\n    rpcUrl: () => `http://127.0.0.1:8545`,\n    label: 'Cannon',\n    isSupported: false, // hidden by default but if wallet switched to Cannon it will be visible\n    publicRpcUrl: 'http://127.0.0.1:8545',\n    isTestnet: true,\n  },\n  {\n    id: 11155420,\n    preset: 'main',\n    hexId: `0x${Number(11155420).toString(16)}`,\n    token: 'ETH',\n    name: 'optimism-sepolia',\n    rpcUrl: (INFURA_KEY?: string) =>\n      `https://optimism-sepolia.infura.io/v3/${INFURA_KEY ?? DEFAULT_INFURA_KEY}`,\n    label: 'Optimism Sepolia',\n    isSupported: false,\n    publicRpcUrl: 'https://sepolia.optimism.io/',\n    isTestnet: true,\n  },\n  {\n    id: 421614,\n    preset: 'main',\n    hexId: `0x${Number(421614).toString(16)}`,\n    token: 'ETH',\n    name: 'arbitrum-sepolia',\n    rpcUrl: (INFURA_KEY?: string) =>\n      `https://arbitrum-sepolia.infura.io/v3/${INFURA_KEY ?? DEFAULT_INFURA_KEY}`,\n    label: 'Arbitrum Sepolia',\n    isSupported: true,\n    publicRpcUrl: 'https://sepolia.arbiscan.io/',\n    isTestnet: true,\n  },\n  {\n    id: 42161,\n    preset: 'main',\n    hexId: `0x${Number(42161).toString(16)}`,\n    token: 'ETH',\n    name: 'arbitrum',\n    rpcUrl: (INFURA_KEY?: string) =>\n      `https://arbitrum-mainnet.infura.io/v3/${INFURA_KEY ?? DEFAULT_INFURA_KEY}`,\n    label: 'Arbitrum',\n    isSupported: true,\n    publicRpcUrl: 'https://arbiscan.io/',\n    isTestnet: false,\n  },\n  {\n    id: 42161,\n    preset: 'arbthetix',\n    hexId: `0x${Number(42161).toString(16)}`,\n    token: 'ETH',\n    name: 'arbitrum',\n    rpcUrl: (INFURA_KEY?: string) =>\n      `https://arbitrum-mainnet.infura.io/v3/${INFURA_KEY ?? DEFAULT_INFURA_KEY}`,\n    label: 'Arbthetix (withdraw only)',\n    isSupported: true,\n    publicRpcUrl: 'https://arbiscan.io/',\n    isTestnet: false,\n  },\n];\n\nexport const deploymentsWithERC7412: string[] = [\n  '8453-andromeda',\n  '84532-andromeda',\n  '42161-main',\n  '421614-main',\n  '42161-arbthetix',\n];\n\nexport const DEFAULT_NETWORK =\n  NETWORKS.find(\n    (network) =>\n      `${network.id}-${network.preset}` === window.localStorage.getItem('DEFAULT_NETWORK')\n  ) ?? NETWORKS[1];\n\nexport const appMetadata = {\n  name: 'Synthetix',\n  icon: SynthetixIcon,\n  logo: SynthetixLogo,\n  description: 'Synthetix | The derivatives liquidity protocol.',\n  recommendedInjectedWallets: [\n    { name: 'MetaMask', url: 'https://metamask.io' },\n    { name: 'Brave Wallet', url: 'https://brave.com/wallet' },\n  ],\n  gettingStartedGuide: 'https://synthetix.io',\n  explore: 'https://blog.synthetix.io',\n};\n\nexport function useProviderForChain(network?: Network | null) {\n  return network ? new ethers.providers.JsonRpcProvider(network.rpcUrl()) : undefined;\n}\n\nexport function useDefaultProvider() {\n  const { network } = useNetwork();\n  return useProviderForChain(network);\n}\n\nexport function useWallet() {\n  const [{ wallet }, conn, disconn] = useConnectWallet();\n\n  const connect = useCallback(conn, [conn]);\n  const disconnect = useCallback(disconn, [disconn]);\n\n  if (!wallet) {\n    return {\n      activeWallet: null,\n      walletsInfo: null,\n      connect,\n      disconnect,\n    };\n  }\n\n  const activeWallet = wallet?.accounts[0];\n\n  return {\n    activeWallet: activeWallet,\n    walletsInfo: wallet,\n    connect,\n    disconnect,\n  };\n}\n\nexport function useGetNetwork(chainId: string) {\n  return useMemo(() => {\n    return NETWORKS.find((n) => n.hexId === chainId);\n  }, [chainId]);\n}\n\nexport function useNetwork() {\n  const [{ connectedChain }, setChain] = useSetChain();\n\n  // Hydrate the network info\n  const network = NETWORKS.find((n) => n.hexId === connectedChain?.id);\n\n  const setNetwork = useCallback(\n    async (networkId: number) => {\n      const newNetwork = NETWORKS.find((n) => n.id === networkId);\n      if (!newNetwork) return;\n      await setChain({ chainId: newNetwork?.hexId });\n    },\n    [setChain]\n  );\n\n  if (!network) {\n    return {\n      network: null,\n      setNetwork,\n    };\n  }\n\n  return {\n    network,\n    setNetwork,\n  };\n}\n\nexport function useIsConnected(): boolean {\n  const [{ wallet }] = useConnectWallet();\n  return Boolean(wallet);\n}\n\nexport function useSigner() {\n  const [{ wallet }] = useConnectWallet();\n\n  if (!wallet) {\n    return null;\n  }\n\n  const provider = new ethers.providers.Web3Provider(wallet.provider, 'any');\n\n  return provider.getSigner();\n}\n\nexport function useProvider() {\n  const [{ wallet }] = useConnectWallet();\n\n  if (!wallet) {\n    return null;\n  }\n\n  const provider = new ethers.providers.Web3Provider(wallet.provider, 'any');\n\n  return provider;\n}\n","import { useReducer } from 'react';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { formatGasPriceForTransaction } from '@snx-v3/useGasOptions';\nimport { useMutation } from '@tanstack/react-query';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport Wei from '@synthetixio/wei';\nimport { BigNumber, Contract } from 'ethers';\nimport { getGasPrice } from '@snx-v3/useGasPrice';\nimport { useGasSpeed } from '@snx-v3/useGasSpeed';\nimport { notNil } from '@snx-v3/tsHelpers';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport { useAllCollateralPriceIds } from '@snx-v3/useAllCollateralPriceIds';\nimport { useSpotMarketProxy } from '../useSpotMarketProxy';\nimport { USDC_BASE_MARKET, getRepayerContract } from '@snx-v3/isBaseAndromeda';\nimport { useCollateralPriceUpdates } from '../useCollateralPriceUpdates';\n\nexport const DEBT_REPAYER_ABI = [\n  {\n    inputs: [\n      { internalType: 'contract ISynthetixCore', name: 'synthetixCore', type: 'address' },\n      { internalType: 'contract ISpotMarket', name: 'spotMarket', type: 'address' },\n      { internalType: 'uint128', name: 'accountId', type: 'uint128' },\n      { internalType: 'uint128', name: 'poolId', type: 'uint128' },\n      { internalType: 'address', name: 'collateralType', type: 'address' },\n      { internalType: 'uint128', name: 'spotMarketId', type: 'uint128' },\n    ],\n    name: 'depositDebtToRepay',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n];\n\nexport const useClearDebt = ({\n  accountId,\n  poolId,\n  collateralTypeAddress,\n  availableUSDCollateral,\n  debt,\n}: {\n  accountId?: string;\n  poolId?: string;\n  collateralTypeAddress?: string;\n  availableUSDCollateral?: Wei;\n  debt?: Wei;\n}) => {\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: SpotMarketProxy } = useSpotMarketProxy();\n  const { data: collateralPriceIds } = useAllCollateralPriceIds();\n  const { data: priceUpdateTx } = useCollateralPriceUpdates();\n\n  const signer = useSigner();\n  const { network } = useNetwork();\n  const { gasSpeed } = useGasSpeed();\n  const provider = useProvider();\n\n  const mutation = useMutation({\n    mutationFn: async () => {\n      if (!signer || !network || !provider) throw new Error('No signer or network');\n\n      if (\n        !(\n          CoreProxy &&\n          poolId &&\n          accountId &&\n          collateralTypeAddress &&\n          SpotMarketProxy &&\n          collateralPriceIds\n        )\n      ) {\n        return;\n      }\n\n      const repayer = new Contract(getRepayerContract(network.id), DEBT_REPAYER_ABI, signer);\n\n      if (!availableUSDCollateral) return;\n\n      try {\n        dispatch({ type: 'prompting' });\n\n        const depositDebtToRepay = repayer.populateTransaction.depositDebtToRepay(\n          CoreProxy.address,\n          SpotMarketProxy.address,\n          accountId,\n          poolId,\n          collateralTypeAddress,\n          USDC_BASE_MARKET\n        );\n\n        const burn = CoreProxy.populateTransaction.burnUsd(\n          BigNumber.from(accountId),\n          BigNumber.from(poolId),\n          collateralTypeAddress,\n          debt?.mul(110).div(100).toBN().toString() || '0'\n        );\n\n        const callsPromise = Promise.all([depositDebtToRepay, burn].filter(notNil));\n\n        const [calls, gasPrices] = await Promise.all([callsPromise, getGasPrice({ provider })]);\n\n        if (priceUpdateTx) {\n          calls.unshift(priceUpdateTx as any);\n        }\n\n        const erc7412Tx = await withERC7412(network, calls, 'useRepay', CoreProxy.interface);\n\n        const gasOptionsForTransaction = formatGasPriceForTransaction({\n          gasLimit: erc7412Tx.gasLimit,\n          gasPrices,\n          gasSpeed,\n        });\n\n        const txn = await signer.sendTransaction({ ...erc7412Tx, ...gasOptionsForTransaction });\n        dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n        await txn.wait();\n        dispatch({ type: 'success' });\n      } catch (error: any) {\n        dispatch({ type: 'error', payload: { error } });\n        throw error;\n      }\n    },\n  });\n  return {\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\nimport { Network, useDefaultProvider, useNetwork, useWallet } from '@snx-v3/useBlockchain';\nimport { EvmPriceServiceConnection } from '@pythnetwork/pyth-evm-js';\nimport { offchainMainnetEndpoint } from '@snx-v3/constants';\nimport { ERC7412_ABI } from '@snx-v3/withERC7412';\nimport { getPythWrapper, isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { importMulticall3, importExtras } from '@snx-v3/contracts';\n\nconst priceService = new EvmPriceServiceConnection(offchainMainnetEndpoint);\n\nasync function getPythFeedIds(network: Network) {\n  const extras = await importExtras(network.id, network.preset);\n  return Object.entries(extras)\n    .filter(\n      ([key, value]) => key.startsWith('pyth') && key.endsWith('FeedId') && value.length === 66\n    )\n    .map(([_key, value]) => value);\n}\n\nconst getPriceUpdates = async (\n  priceIds: string[],\n  stalenessTolerance: number,\n  network: Network | null\n) => {\n  // network.id\n\n  const signedOffchainData = await priceService.getPriceFeedsUpdateData(priceIds);\n  const updateType = 1;\n  const data = ethers.utils.defaultAbiCoder.encode(\n    ['uint8', 'uint64', 'bytes32[]', 'bytes[]'],\n    [updateType, stalenessTolerance, priceIds, signedOffchainData]\n  );\n  const erc7412Interface = new ethers.utils.Interface(ERC7412_ABI);\n\n  return {\n    // pyth wrapper\n    to: getPythWrapper(network?.id),\n    data: erc7412Interface.encodeFunctionData('fulfillOracleQuery', [data]),\n    value: priceIds.length * 10,\n  };\n};\n\nexport const useAllCollateralPriceUpdates = () => {\n  const { network } = useNetwork();\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'all-price-updates'],\n    enabled: isBaseAndromeda(network?.id, network?.preset),\n    queryFn: async () => {\n      if (!(network?.id && network?.preset)) throw 'OMFG';\n      const stalenessTolerance = 60;\n\n      const pythFeedIds = await getPythFeedIds(network);\n      const tx = await getPriceUpdates(pythFeedIds, stalenessTolerance, network);\n\n      return {\n        ...tx,\n        value: tx.value * 10,\n      };\n    },\n    refetchInterval: 60000,\n  });\n};\n\nexport const useCollateralPriceUpdates = () => {\n  const { network } = useNetwork();\n  const provider = useDefaultProvider();\n  const { activeWallet } = useWallet();\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'price-updates', activeWallet?.address],\n    enabled: isBaseAndromeda(network?.id, network?.preset),\n    queryFn: async () => {\n      const stalenessTolerance = 3300;\n      if (!network) {\n        return;\n      }\n\n      try {\n        const { address: multicallAddress, abi: multiCallAbi } = await importMulticall3(\n          network.id,\n          network.preset\n        );\n\n        const multicallInterface = new ethers.utils.Interface(multiCallAbi);\n        const pythInterface = new ethers.utils.Interface([\n          'function getLatestPrice(bytes32 priceId, uint256 stalenessTolerance) external view returns (int256)',\n        ]);\n\n        const pythFeedIds = await getPythFeedIds(network);\n\n        const txs = [\n          ...pythFeedIds.map((priceId) => ({\n            target: getPythWrapper(network.id),\n            callData: pythInterface.encodeFunctionData('getLatestPrice', [\n              priceId,\n              stalenessTolerance,\n            ]),\n            value: 0,\n            requireSuccess: false,\n          })),\n        ];\n\n        const getPricesTx = multicallInterface.encodeFunctionData('aggregate3Value', [txs]);\n\n        const result = await provider?.call({\n          data: getPricesTx,\n          to: multicallAddress,\n        });\n\n        const decodedMultiCall: { success: boolean }[] = multicallInterface.decodeFunctionResult(\n          'aggregate3Value',\n          result || ''\n        )[0];\n\n        const outdatedPriceIds: string[] = [];\n\n        decodedMultiCall.forEach(({ success }, i) => {\n          if (!success) {\n            outdatedPriceIds.push(pythFeedIds[i]);\n          }\n        });\n\n        if (outdatedPriceIds.length) {\n          return {\n            ...(await getPriceUpdates(outdatedPriceIds, stalenessTolerance, network)),\n            from: activeWallet?.address,\n          };\n        }\n\n        return null;\n      } catch (error) {\n        return null;\n      }\n    },\n    refetchInterval: 60000,\n  });\n};\n","export async function importExtras(chainId, preset) {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [extras] = await Promise.all([import('@synthetixio/v3-contracts/1-main/extras.json')]);\n      return extras;\n    }\n    case '11155111-main': {\n      const [extras] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/extras.json'),\n      ]);\n      return extras;\n    }\n    case '10-main': {\n      const [extras] = await Promise.all([import('@synthetixio/v3-contracts/10-main/extras.json')]);\n      return extras;\n    }\n    case '8453-andromeda': {\n      const [extras] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/extras.json'),\n      ]);\n      return extras;\n    }\n    case '84532-andromeda': {\n      const [extras] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/extras.json'),\n      ]);\n      return extras;\n    }\n    case '42161-main': {\n      const [extras] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/extras.json'),\n      ]);\n      return extras;\n    }\n    case '421614-main': {\n      const [extras] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/extras.json'),\n      ]);\n      return extras;\n    }\n    case '42161-arbthetix': {\n      const [extras] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-arbthetix/extras.json'),\n      ]);\n      return extras;\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for Extras`);\n    }\n  }\n}\n","import { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useMulticall3 } from '@snx-v3/useMulticall3';\nimport { ZodBigNumber } from '@snx-v3/zod';\nimport { wei } from '@synthetixio/wei';\nimport { useQuery } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\nimport { useMemo } from 'react';\nimport { z } from 'zod';\n\nconst CollateralConfigurationSchema = z.object({\n  depositingEnabled: z.boolean(),\n  issuanceRatioD18: ZodBigNumber.transform((x) => wei(x)),\n  liquidationRatioD18: ZodBigNumber.transform((x) => wei(x)),\n  liquidationRewardD18: ZodBigNumber.transform((x) => wei(x)),\n  oracleNodeId: z.string(),\n  tokenAddress: z.string().startsWith('0x'), // As of current version in zod this will be a string: https://github.com/colinhacks/zod/issues/1747\n  minDelegationD18: ZodBigNumber.transform((x) => wei(x)),\n});\n\nconst CollateralTypeSchema = CollateralConfigurationSchema.extend({\n  symbol: z.string(),\n  displaySymbol: z.string(),\n  name: z.string(),\n});\n\nexport type CollateralType = z.infer<typeof CollateralTypeSchema>;\n\nconst SymbolSchema = z.string();\n\nconst ERC20Interface = new ethers.utils.Interface([\n  'function symbol() view returns (string)',\n  'function name() view returns (string)',\n]);\n\nasync function loadSymbols({\n  Multicall3,\n  tokenConfigs,\n}: {\n  Multicall3: ethers.Contract;\n  tokenConfigs: z.infer<typeof CollateralConfigurationSchema>[];\n}) {\n  const calls = tokenConfigs.map((tokenConfig) => ({\n    target: tokenConfig.tokenAddress,\n    callData: ERC20Interface.encodeFunctionData('symbol'),\n  }));\n\n  const multicallResult = await Multicall3.callStatic.aggregate(calls);\n\n  return multicallResult.returnData.map((bytes: string) =>\n    SymbolSchema.parse(ERC20Interface.decodeFunctionResult('symbol', bytes)[0])\n  );\n}\n\nasync function loadName({\n  Multicall3,\n  tokenConfigs,\n}: {\n  Multicall3: ethers.Contract;\n  tokenConfigs: z.infer<typeof CollateralConfigurationSchema>[];\n}) {\n  const calls = tokenConfigs.map((tokenConfig) => ({\n    target: tokenConfig.tokenAddress,\n    callData: ERC20Interface.encodeFunctionData('name'),\n  }));\n\n  const multicallResult = await Multicall3.callStatic.aggregate(calls);\n\n  return multicallResult.returnData.map((bytes: string) =>\n    SymbolSchema.parse(ERC20Interface.decodeFunctionResult('name', bytes)[0])\n  );\n}\n\nasync function loadCollateralTypes({\n  CoreProxy,\n  Multicall3,\n}: {\n  CoreProxy: ethers.Contract;\n  Multicall3: ethers.Contract;\n}): Promise<CollateralType[]> {\n  const hideDisabled = true;\n  const tokenConfigsRaw: CollateralType[] =\n    await CoreProxy.getCollateralConfigurations(hideDisabled);\n\n  const tokenConfigs = tokenConfigsRaw\n    .map((x) => CollateralConfigurationSchema.parse({ ...x }))\n    .filter(({ depositingEnabled }) => depositingEnabled); // sometimes we get back disabled ones, even though we ask for only enabled ones\n\n  const symbols = await loadSymbols({ Multicall3, tokenConfigs });\n\n  const names = await loadName({ Multicall3, tokenConfigs });\n\n  return tokenConfigs.map((config, i) => ({\n    depositingEnabled: config.depositingEnabled,\n    issuanceRatioD18: config.issuanceRatioD18,\n    liquidationRatioD18: config.liquidationRatioD18,\n    liquidationRewardD18: config.liquidationRewardD18,\n    minDelegationD18: config.minDelegationD18,\n    oracleNodeId: config.oracleNodeId,\n    tokenAddress: config.tokenAddress,\n    symbol: symbols[i],\n    displaySymbol: symbols[i] === 'WETH' ? 'ETH' : symbols[i],\n    name: names[i],\n  }));\n}\n\nexport function useCollateralTypes(includeDelegationOff = false, customNetwork?: Network) {\n  const { network } = useNetwork();\n  const { data: CoreProxy } = useCoreProxy(customNetwork);\n  const { data: Multicall3 } = useMulticall3(customNetwork);\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'CollateralTypes', { includeDelegationOff }],\n    queryFn: async () => {\n      if (!CoreProxy || !Multicall3)\n        throw Error('Query should not be enabled when contracts missing');\n      const collateralTypes = (await loadCollateralTypes({ CoreProxy, Multicall3 })).map(\n        (collateralType) => {\n          const isBase = isBaseAndromeda(network?.id, network?.preset);\n          if (isBase && collateralType.symbol === 'sUSDC') {\n            return {\n              ...collateralType,\n              symbol: 'USDC',\n              displaySymbol: 'USDC',\n              name: 'USD Coin',\n            };\n          }\n          return {\n            ...collateralType,\n            symbol: collateralType.symbol,\n            displaySymbol: collateralType.symbol,\n          };\n        }\n      );\n\n      if (includeDelegationOff) {\n        return collateralTypes;\n      }\n\n      // By default we only return collateral types that have minDelegationD18 < MaxUint256\n      // When minDelegationD18 === MaxUint256, delegation is effectively disabled\n      return collateralTypes.filter((collateralType) =>\n        collateralType.minDelegationD18.lt(ethers.constants.MaxUint256)\n      );\n    },\n    // one hour in ms\n    staleTime: 60 * 60 * 1000,\n    placeholderData: [],\n    enabled: Boolean(CoreProxy && Multicall3),\n  });\n}\n\nexport function useCollateralType(collateralSymbol?: string) {\n  const { data: collateralTypes, isLoading, error } = useCollateralTypes();\n  return {\n    isLoading,\n    error,\n    data: useMemo(() => {\n      if (!collateralTypes || !collateralTypes?.length) {\n        return;\n      }\n      if (!collateralSymbol) {\n        return collateralTypes[0];\n      }\n      return collateralTypes.find(\n        (collateral) => `${collateral.symbol}`.toLowerCase() === `${collateralSymbol}`.toLowerCase()\n      );\n    }, [collateralSymbol, collateralTypes]),\n  };\n}\n","import { Contract } from '@ethersproject/contracts';\nimport { useQuery } from '@tanstack/react-query';\nimport {\n  Network,\n  useNetwork,\n  useProvider,\n  useProviderForChain,\n  useSigner,\n} from '@snx-v3/useBlockchain';\nimport { importCoreProxy } from '@snx-v3/contracts';\n\nexport function useCoreProxy(customNetwork?: Network) {\n  const providerForChain = useProviderForChain(customNetwork);\n  const { network } = useNetwork();\n  const provider = useProvider();\n  const signer = useSigner();\n  const signerOrProvider = signer || provider;\n\n  const withSigner = Boolean(signer);\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'CoreProxy',\n      { withSigner },\n      { providerForChain },\n    ],\n    queryFn: async function () {\n      if (providerForChain && customNetwork) {\n        const { address, abi } = await importCoreProxy(customNetwork.id, customNetwork.preset);\n        return new Contract(address, abi, providerForChain);\n      }\n      if (!signerOrProvider || !network) throw new Error('Should be disabled');\n\n      const { address, abi } = await importCoreProxy(network?.id, network?.preset);\n      return new Contract(address, abi, signerOrProvider);\n    },\n    enabled: Boolean(signerOrProvider),\n    staleTime: Infinity,\n  });\n}\n","import { useQuery } from '@tanstack/react-query';\nimport { useWallet, useNetwork, useProvider } from '@snx-v3/useBlockchain';\nimport { ZodBigNumber } from '@snx-v3/zod';\nimport { wei } from '@synthetixio/wei';\n\nconst BalanceSchema = ZodBigNumber.transform((x) => wei(x));\n\nexport function useEthBalance(networkId?: number) {\n  const { activeWallet } = useWallet();\n  const connectedProvider = useProvider();\n  const { network } = useNetwork();\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'EthBalance',\n      { accountAddress: activeWallet?.address },\n    ],\n    queryFn: async () => {\n      if (!activeWallet || !connectedProvider) throw Error('useEthBalance should not be enabled');\n      return BalanceSchema.parse(await connectedProvider.getBalance(activeWallet.address));\n    },\n    enabled: Boolean((networkId ?? network?.id) && activeWallet?.address),\n  });\n}\n","import type { GasPrices } from '@snx-v3/useGasPrice';\nimport type { BigNumber } from '@ethersproject/bignumber';\nimport { wei } from '@synthetixio/wei';\nimport { GWEI_DECIMALS, GAS_LIMIT_MULTIPLIER } from '@snx-v3/constants';\n\n// Note it looks like gas limit estimation is coming in higher slightly higher than what gets used according to etherscan\n// Will try without a buffer, if we get user report of out of gas we can increase it again.\nconst GAS_LIMIT_BUFFER = wei(GAS_LIMIT_MULTIPLIER, GWEI_DECIMALS);\n\nfunction addGasLimitBuffer(gasLimit?: BigNumber) {\n  return wei(gasLimit ?? 0, GWEI_DECIMALS)\n    .mul(GAS_LIMIT_BUFFER)\n    .toBN();\n}\n\nexport function formatGasPriceForTransaction({\n  gasPrices,\n  gasSpeed,\n  gasLimit,\n}: {\n  gasPrices: GasPrices;\n  gasSpeed: keyof GasPrices;\n  gasLimit: BigNumber;\n}) {\n  const gasPrice = gasPrices[gasSpeed];\n  if ('baseFeePerGas' in gasPrice) {\n    const { baseFeePerGas: _baseFeePerGas, ...gasPriceToReturn } = gasPrice;\n    return { ...gasPriceToReturn, gasLimit: addGasLimitBuffer(gasLimit) };\n  }\n  return { ...gasPrice, gasLimit: addGasLimitBuffer(gasLimit) };\n}\n","// copied from npm package: moving-averages\n// Only grabbed what we needed and added types\nexport const isNumber = (subject: unknown) =>\n  typeof subject === 'number' &&\n  // is not NaN: `NaN === NaN` => `false`\n  subject === subject;\n\nexport const dma = (data: number[], alpha: number, noHead?: boolean): number[] => {\n  const length = data.length;\n\n  if (alpha > 1) {\n    return Array(length);\n  }\n\n  if (alpha === 1) {\n    return data.slice();\n  }\n\n  const noArrayWeight = !Array.isArray(alpha);\n  const ret = [];\n\n  let datum;\n\n  // period `i`\n  let i = 0;\n\n  // `s` is the value of the DWMA at any time period `i`\n  let s = 0;\n\n  // Handles head\n  for (; i < length; i++) {\n    datum = data[i];\n\n    if (isNumber(datum) && (noArrayWeight || isNumber(datum))) {\n      ret[i] = noHead ? 0 : datum;\n\n      s = datum;\n      i++;\n\n      break;\n    }\n  }\n\n  // Dynamic weights: an array of weights\n  // Ref:\n  // https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\n  // with a dynamic alpha\n  if (!noArrayWeight) {\n    for (; i < length; i++) {\n      datum = data[i];\n\n      isNumber(datum) && isNumber(alpha[i])\n        ? (s = ret[i] = alpha[i] * datum + (1 - alpha[i]) * s)\n        : (ret[i] = ret[i - 1]);\n    }\n\n    return ret;\n  }\n\n  const o = 1 - alpha;\n\n  // Fixed alpha\n  for (; i < length; i++) {\n    datum = data[i];\n\n    isNumber(datum) ? (s = ret[i] = alpha * datum + o * s) : (ret[i] = ret[i - 1]);\n  }\n\n  return ret;\n};\n\nexport const ema = (data: number[], size: number) => dma(data, 2 / (size + 1));\n","import { Wei } from '@synthetixio/wei';\n\nexport const rewardsFilterOutliers = (\n  blocksRewards: Wei[][],\n  outlierBlocks: number[],\n  rewardIndex: number\n) =>\n  blocksRewards\n    .filter((_, index) => !outlierBlocks.includes(index))\n    .map((reward) => reward[rewardIndex].toNumber());\n\nexport const getOutlierBlocksToRemove = (blocksRewards: Wei[][], index: number) => {\n  const blocks: number[] = [];\n  blocksRewards\n    .map((reward) => reward[index])\n    .forEach((gweiReward, i) => {\n      if (gweiReward.gt(5)) {\n        blocks.push(i);\n      }\n    });\n  return blocks;\n};\n","/**\n * This module is heavily inspired by https://github.com/rainbow-me/fee-suggestions\n * That library have some hardcoded min and max that doesn't make sense for optimism. See: https://github.com/rainbow-me/fee-suggestions/blob/main/src/index.ts#L165\n *\n * So I changed min max a bit\n *\n * That library is also a bit overkill in how it calculates maxFeePerGas per gas. It's using linear regression and sampling curves.\n * Instead of doing that, this module calculates max by taking  (previous baseFeePerGas * 2) + maxPriorityFeePerGas.\n *\n * The calculation for maxPriorityFeePerGas I kept quite complex since that will affect what the user actually pay..\n * It's calculated based on the Exponential Moving Average (EMA) of the block rewards at the 15th, 30th, and 45th percentiles, after removing the outliers.\n *\n * The other differences is that I also rely on our Wei library.\n *\n */\nimport { ethers } from 'ethers';\nimport { ema } from './math';\nimport { getOutlierBlocksToRemove, rewardsFilterOutliers } from './utils';\nimport { wei, Wei } from '@synthetixio/wei';\nimport { GWEI_DECIMALS } from '@snx-v3/constants';\n\ntype Reward = string[];\ntype GasUsedRatio = number[];\ninterface FeeHistoryResponse {\n  baseFeePerGas: string[];\n  gasUsedRatio: GasUsedRatio;\n  oldestBlock: number;\n  reward: Reward[];\n}\n\nconst defaultForLocalProvider = () => {\n  const baseFeePerGas = wei(1, 9).toBN();\n  const maxFeePerGas = wei(5, 9).toBN();\n  const maxPriorityFeePerGas = wei(1, 9).toBN();\n  return {\n    average: {\n      maxPriorityFeePerGas,\n      maxFeePerGas,\n      baseFeePerGas,\n    },\n    fast: {\n      maxPriorityFeePerGas,\n      maxFeePerGas,\n      baseFeePerGas,\n    },\n    fastest: {\n      maxPriorityFeePerGas,\n      maxFeePerGas,\n      baseFeePerGas,\n    },\n  };\n};\nexport const feeSuggestion = async (\n  provider: ethers.providers.JsonRpcProvider,\n  fromBlock = 'latest'\n) => {\n  // If local or base-goerli, use defaults\n  // Base goerli sometimes doesn't have enough tx we can use to estimate the priority fee, when this happens the tx will get \"tx underprices\"\n  if (provider.network.chainId === 13370 || provider.network.chainId === 84531) {\n    return defaultForLocalProvider();\n  }\n  const feeHistory = await provider\n    .send('eth_feeHistory', [\n      ethers.utils.hexStripZeros(ethers.utils.hexlify(10)),\n      fromBlock,\n      [15, 30, 45],\n    ])\n    .then((feeHistoryResponse: FeeHistoryResponse) => {\n      return {\n        baseFeePerGas: feeHistoryResponse.baseFeePerGas.map((x) => wei(x, GWEI_DECIMALS, true)),\n        reward: feeHistoryResponse.reward.map((x) => x.map((num) => wei(num, GWEI_DECIMALS, true))),\n      };\n    });\n  const blocksRewards = feeHistory.reward;\n  const baseFeePerGas = feeHistory.baseFeePerGas.at(-1);\n\n  if (!blocksRewards.length) throw new Error('Error: block reward was empty');\n  if (!baseFeePerGas) throw new Error('Error: currentBaseFee was empty');\n\n  const outlierBlocks = getOutlierBlocksToRemove(blocksRewards, 0);\n\n  const blocksRewardsPerc15 = rewardsFilterOutliers(blocksRewards, outlierBlocks, 0);\n  const blocksRewardsPerc30 = rewardsFilterOutliers(blocksRewards, outlierBlocks, 1);\n  const blocksRewardsPerc45 = rewardsFilterOutliers(blocksRewards, outlierBlocks, 2);\n\n  const emaPerc15 = ema(blocksRewardsPerc15, blocksRewardsPerc15.length)[\n    blocksRewardsPerc15.length - 1\n  ];\n  const emaPerc30 = ema(blocksRewardsPerc30, blocksRewardsPerc30.length)[\n    blocksRewardsPerc30.length - 1\n  ];\n  const emaPerc45 = ema(blocksRewardsPerc45, blocksRewardsPerc45.length)[\n    blocksRewardsPerc45.length - 1\n  ];\n\n  if (emaPerc15 === undefined || emaPerc30 === undefined || emaPerc45 === undefined) {\n    throw new Error('Error: ema was undefined');\n  }\n\n  const averageMaxPriorityFee = wei(Math.min(emaPerc15, 1), GWEI_DECIMALS);\n  const fastMaxPriorityFee = wei(Math.min(emaPerc30, 2), GWEI_DECIMALS);\n  const fastestMaxPriorityFee = wei(Math.min(emaPerc45, 4), GWEI_DECIMALS);\n\n  const baseFeeToMax = (base: Wei, prio: Wei) => base.mul(wei(2, GWEI_DECIMALS)).add(prio);\n  return {\n    average: {\n      maxPriorityFeePerGas: averageMaxPriorityFee.toBN(),\n      maxFeePerGas: baseFeeToMax(baseFeePerGas, averageMaxPriorityFee).toBN(),\n      baseFeePerGas: baseFeePerGas.toBN(),\n    },\n    fast: {\n      maxPriorityFeePerGas: fastMaxPriorityFee.toBN(),\n      maxFeePerGas: baseFeeToMax(baseFeePerGas, fastMaxPriorityFee).toBN(),\n      baseFeePerGas: baseFeePerGas.toBN(),\n    },\n    fastest: {\n      maxPriorityFeePerGas: fastestMaxPriorityFee.toBN(),\n      maxFeePerGas: baseFeeToMax(baseFeePerGas, fastestMaxPriorityFee).toBN(),\n      baseFeePerGas: baseFeePerGas.toBN(),\n    },\n  };\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\nimport { useNetwork, useProvider } from '@snx-v3/useBlockchain';\nimport { feeSuggestion } from '@snx-v3/feeSuggestion';\n\nconst getGasPriceFromProvider = async (provider: ethers.providers.JsonRpcProvider) => {\n  try {\n    const gasPrice = await provider.getGasPrice();\n    return {\n      fastest: { gasPrice },\n      fast: { gasPrice },\n      average: { gasPrice },\n    };\n  } catch (e) {\n    throw new Error('Could not retrieve gas price from provider');\n  }\n};\n\nexport const getGasPrice = async ({ provider }: { provider: ethers.providers.JsonRpcProvider }) => {\n  try {\n    const block = await provider.getBlock('latest');\n    if (block.baseFeePerGas) {\n      return feeSuggestion(provider);\n    }\n    // When missing baseFeePerGas we get the Gas Price through the provider\n    return getGasPriceFromProvider(provider);\n  } catch (e) {\n    throw new Error(`Could not fetch and compute network fee. ${e}`);\n  }\n};\n\nexport type GasPrices = Awaited<ReturnType<typeof getGasPrice>>;\n\nexport const useGasPrice = () => {\n  const { network } = useNetwork();\n  const provider = useProvider();\n\n  return useQuery({\n    enabled: Boolean(provider),\n    queryKey: [`${network?.id}-${network?.preset}`, 'GasPrice'],\n    queryFn: () => {\n      if (!provider) throw new Error('useGasPrice should not be enabled');\n      return getGasPrice({ provider });\n    },\n  });\n};\n","import React, {\n  createContext,\n  useState,\n  PropsWithChildren,\n  Dispatch,\n  SetStateAction,\n  useContext,\n} from 'react';\n\nexport type GasSpeed = 'average' | 'fast' | 'fastest';\n\nexport const GasSpeedContext = createContext<{\n  gasSpeed: GasSpeed;\n  setGasSpeed: Dispatch<SetStateAction<GasSpeed>>;\n}>({\n  gasSpeed: 'average',\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  setGasSpeed: () => {},\n});\n\nexport const GasSpeedProvider: React.FC<PropsWithChildren> = ({ children }) => {\n  const [gasSpeed, setGasSpeed] = useState<GasSpeed>('average');\n  return (\n    <GasSpeedContext.Provider value={{ gasSpeed, setGasSpeed }}>\n      {children}\n    </GasSpeedContext.Provider>\n  );\n};\n\nexport const useGasSpeed = () => {\n  return useContext(GasSpeedContext);\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { useSpotMarketProxy } from '@snx-v3/useSpotMarketProxy';\nimport { USDC_BASE_MARKET, isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\n\nexport function useGetUSDTokens() {\n  const { network } = useNetwork();\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n  const { data: collateralTypes } = useCollateralTypes();\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: SpotMarket } = useSpotMarketProxy();\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'GetUSDTokens'],\n    queryFn: async () => {\n      if (!network?.id || !CoreProxy) {\n        throw 'useGetUSDTokens queries are not ready';\n      }\n      const USDProxy = await CoreProxy.getUsdToken();\n      const USDC: string = isBase\n        ? (await (SpotMarket as any).getWrapper(USDC_BASE_MARKET)).wrapCollateralType\n        : undefined;\n\n      return {\n        snxUSD: USDProxy,\n        sUSD: collateralTypes?.find((type) =>\n          isBase ? type.symbol.toLowerCase() === 'usdc' : type.symbol.toLowerCase() === 'susdc'\n        )?.tokenAddress,\n        USDC,\n      };\n    },\n    enabled: Boolean(network?.id && CoreProxy && collateralTypes?.length),\n  });\n}\n","import { Contract } from '@ethersproject/contracts';\nimport { useQuery } from '@tanstack/react-query';\nimport {\n  Network,\n  useNetwork,\n  useProvider,\n  useProviderForChain,\n  useSigner,\n} from '@snx-v3/useBlockchain';\nimport { importMulticall3 } from '@snx-v3/contracts';\n\nexport function useMulticall3(customNetwork?: Network) {\n  const providerForChain = useProviderForChain(customNetwork);\n  const { network } = useNetwork();\n  const provider = useProvider();\n  const signer = useSigner();\n  const signerOrProvider = signer || provider;\n  const withSigner = Boolean(signer);\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'Multicall3', { withSigner }],\n    queryFn: async function () {\n      if (providerForChain && customNetwork) {\n        const { address, abi } = await importMulticall3(customNetwork.id, customNetwork.preset);\n        return new Contract(address, abi, providerForChain);\n      }\n      if (!network || !signerOrProvider) throw new Error('Network or signer not available');\n      const { address, abi } = await importMulticall3(network.id, network.preset);\n      return new Contract(address, abi, signerOrProvider);\n    },\n    enabled: Boolean(signerOrProvider),\n    staleTime: Infinity,\n  });\n}\n","import { useParams as useParamsRouter, useSearchParams } from 'react-router-dom';\nimport { useMemo } from 'react';\n\nexport function searchParamsToObject(searchParams: URLSearchParams) {\n  return Object.fromEntries(Array.from(searchParams));\n}\n\nexport function sortObject(params: Record<string, string>): Record<string, string> {\n  return Object.fromEntries(Object.entries(params).sort(([a], [b]) => a.localeCompare(b)));\n}\n\nexport function cleanObject(params: Record<string, string | undefined>): Record<string, string> {\n  const cleaned = Object.entries(params).filter(([, value]) => value !== undefined) as [\n    [string, string],\n  ];\n  return Object.fromEntries(cleaned);\n}\n\nexport const useParams = (): Record<string, string | undefined> => {\n  const pathParams = useParamsRouter();\n  const [queryParams] = useSearchParams();\n\n  return useMemo(\n    () => sortObject({ ...cleanObject(pathParams), ...searchParamsToObject(queryParams) }),\n    [pathParams, queryParams]\n  );\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { NETWORKS, Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { ZodBigNumber } from '@snx-v3/zod';\nimport { z } from 'zod';\nimport { ethers } from 'ethers';\nimport { importCoreProxy } from '@snx-v3/contracts';\n\nexport const PoolIdSchema = ZodBigNumber.transform((x) => x.toString());\n\nexport const PoolSchema = z.object({\n  id: PoolIdSchema,\n  name: z.string().default('Unnamed Pool'),\n  isPreferred: z.boolean(),\n});\nexport type PoolType = z.infer<typeof PoolSchema>;\n\nexport const PoolsSchema = z.array(PoolSchema);\nexport type PoolsType = z.infer<typeof PoolsSchema>;\n\nexport function usePools(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const { data: CoreProxy } = useCoreProxy(customNetwork);\n\n  return useQuery({\n    enabled: Boolean(CoreProxy),\n    queryKey: [`${network?.id}-${network?.preset}`, 'Pools'],\n    queryFn: async () => {\n      if (!CoreProxy) throw 'usePools is missing required data';\n\n      const [prefferedPoolId, approvedPoolIds] = await Promise.all([\n        CoreProxy.callStatic.getPreferredPool(),\n        CoreProxy.callStatic.getApprovedPools(),\n      ]);\n\n      const incompletePools = [\n        {\n          id: prefferedPoolId,\n          isPreferred: true,\n        },\n      ].concat(\n        approvedPoolIds.map((id: ethers.BigNumber) => ({\n          id: id,\n          isPreferred: false,\n        }))\n      );\n\n      const poolNames = await Promise.all(\n        incompletePools.map(async ({ id }) => await CoreProxy.getPoolName(id))\n      );\n\n      const poolsRaw = incompletePools.map(({ id, isPreferred }, i) => ({\n        id,\n        isPreferred,\n        name: poolNames[i],\n      }));\n\n      return PoolsSchema.parse(poolsRaw);\n    },\n  });\n}\n\nexport function usePool(poolId?: string, customNetwork?: Network) {\n  const { isLoading, error, data } = usePools(customNetwork);\n\n  return {\n    isLoading,\n    error,\n    data: data?.find((item) => item.id === poolId),\n  };\n}\n\nexport function usePreferredPool(customNetwork?: Network) {\n  const { isLoading, error, data } = usePools(customNetwork);\n\n  return {\n    isLoading,\n    error,\n    data: data?.find((item) => item.isPreferred),\n  };\n}\n\nconst supportedNetworks = [1, 8453, 42161];\nconst supportedTestNetworks = [1, 11155111, 8453, 84532, 421614, 42161];\n\nexport function useGetAllPools(withTestnets: boolean) {\n  const networks = NETWORKS.filter((n) =>\n    withTestnets ? supportedTestNetworks.includes(n.id) : supportedNetworks.includes(n.id)\n  ).map((n) => ({\n    id: n.id,\n    token: n.token,\n    label: n.label,\n    rpcUrl: n.rpcUrl(),\n    preset: n.preset,\n  }));\n\n  return useQuery({\n    queryKey: ['AllPools'],\n    queryFn: async () => {\n      const allCoreProxies = (await Promise.all(\n        networks.map((network) => importCoreProxy(network.id, network.preset))\n      )) as any[];\n\n      const allCoreProxiesConnected = allCoreProxies.map(\n        (proxies, index) =>\n          new ethers.Contract(\n            proxies.address,\n            proxies.abi,\n            new ethers.providers.JsonRpcProvider(networks[index].rpcUrl)\n          )\n      );\n\n      const prefferedPools = await Promise.all(\n        allCoreProxiesConnected.map((contract) => {\n          return contract.callStatic.getPreferredPool();\n        })\n      );\n      // TODO @dev reimplement when used\n      // const approvedPoolIds: ethers.BigNumber[][] = await Promise.all(\n      //   allCoreProxiesConnected.map((contract) => {\n      //     return contract.callStatic.getApprovedPools();\n      //   })\n      // );\n\n      const incompletePools = prefferedPools.map((prefferedPool, index) => ({\n        id: prefferedPool,\n        isPreferred: true,\n        network: networks[index].label,\n      }));\n\n      const poolNames = await Promise.all(\n        incompletePools.map(\n          async ({ id }, index) => await allCoreProxiesConnected[index].getPoolName(id)\n        )\n      );\n\n      const poolsRaw = incompletePools.map(({ id, isPreferred, network }, i) => ({\n        id,\n        isPreferred,\n        name: poolNames[i] as string,\n        network,\n      }));\n\n      return poolsRaw;\n    },\n  });\n}\n","import { Contract } from '@ethersproject/contracts';\nimport { useQuery } from '@tanstack/react-query';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { importSpotMarketProxy } from '@snx-v3/contracts';\n\nexport function useSpotMarketProxy() {\n  const { network } = useNetwork();\n  const provider = useProvider();\n  const signer = useSigner();\n  const signerOrProvider = signer || provider;\n\n  const withSigner = Boolean(signer);\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'SpotMarketProxy', { withSigner }],\n    queryFn: async function () {\n      if (!signerOrProvider || !network) throw new Error('Should be disabled');\n\n      const { address, abi } = await importSpotMarketProxy(network?.id, network?.preset);\n      return new Contract(address, abi, signerOrProvider);\n    },\n    enabled: Boolean(signerOrProvider),\n    staleTime: Infinity,\n  });\n}\n","export async function importSpotMarketProxy(chainId, preset) {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    //    case '1-main': {\n    //      const [{default: meta}, {default: abi}] = await Promise.all([\n    //        import('@synthetixio/v3-contracts/1-main/meta.json'),\n    //        import('@synthetixio/v3-contracts/1-main/SpotMarketProxy.readable.json'),\n    //      ]);\n    //      return { address: meta.contracts.SpotMarketProxy, abi };\n    //    }\n    //    case '11155111-main': {\n    //      const [{default: meta}, {default: abi}] = await Promise.all([\n    //        import('@synthetixio/v3-contracts/11155111-main/meta.json'),\n    //        import('@synthetixio/v3-contracts/11155111-main/SpotMarketProxy.readable.json'),\n    //      ]);\n    //      return { address: meta.contracts.SpotMarketProxy, abi };\n    //    }\n    case '10-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/meta.json'),\n        import('@synthetixio/v3-contracts/10-main/SpotMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.SpotMarketProxy, abi };\n    }\n    case '8453-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/8453-andromeda/SpotMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.SpotMarketProxy, abi };\n    }\n    case '84532-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/84532-andromeda/SpotMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.SpotMarketProxy, abi };\n    }\n    case '42161-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/meta.json'),\n        import('@synthetixio/v3-contracts/42161-main/SpotMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.SpotMarketProxy, abi };\n    }\n    case '421614-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/meta.json'),\n        import('@synthetixio/v3-contracts/421614-main/SpotMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.SpotMarketProxy, abi };\n    }\n    case '42161-arbthetix': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-arbthetix/meta.json'),\n        import('@synthetixio/v3-contracts/42161-arbthetix/SpotMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.SpotMarketProxy, abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for SpotMarketProxy`);\n    }\n  }\n}\n","import { assertAddressType } from '@snx-v3/assertAddressType';\nimport { wei } from '@synthetixio/wei';\nimport { useQuery } from '@tanstack/react-query';\nimport { useNetwork, useProvider, useWallet } from '@snx-v3/useBlockchain';\nimport { ethers, providers } from 'ethers';\nimport { ZodBigNumber } from '@snx-v3/zod';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\n\nexport const BalanceSchema = ZodBigNumber.transform((x) => wei(x));\n\nexport const abi = [\n  'function balanceOf(address) view returns (uint256)',\n  'function decimals() view returns (uint8)',\n];\n\nexport const useTokenBalance = (address?: string) => {\n  const { activeWallet } = useWallet();\n  const provider = useProvider();\n  const { network } = useNetwork();\n\n  const tokenAddress = assertAddressType(address) ? address : undefined;\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'TokenBalance',\n      { accountAddress: activeWallet?.address },\n      { tokenAddress },\n    ],\n    queryFn: async () =>\n      await fetchTokenBalance(address!, activeWallet!.address, provider!, network!),\n    enabled: Boolean(activeWallet?.address && tokenAddress && provider && network?.id),\n    refetchInterval: 15000,\n  });\n};\n\nexport const useTokenBalances = (addresses: string[]) => {\n  const { activeWallet } = useWallet();\n  const provider = useProvider();\n  const { network } = useNetwork();\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'TokenBalance',\n      { accountAddress: activeWallet?.address },\n      addresses.toString(),\n    ],\n    queryFn: async () =>\n      await Promise.all(\n        addresses.map((address) =>\n          fetchTokenBalance(address, activeWallet!.address, provider!, network!)\n        )\n      ),\n    enabled: Boolean(activeWallet?.address && addresses.length && provider && network?.id),\n    refetchInterval: 15000,\n  });\n};\n\nasync function fetchTokenBalance(\n  tokenAddress: string,\n  walletAddress: string,\n  provider: providers.Web3Provider,\n  network: { id: number; preset: string }\n) {\n  const contract = new ethers.Contract(tokenAddress, abi, provider);\n  const balance = isBaseAndromeda(network.id, network.preset)\n    ? wei(await contract.balanceOf(walletAddress), await contract.decimals())\n    : BalanceSchema.parse(await contract.balanceOf(walletAddress));\n  return balance;\n}\n","export function assertAddressType(tokenAddress?: string): tokenAddress is `0x${string}` {\n  return tokenAddress ? tokenAddress.startsWith('0x') : false;\n}\n","import { Contract } from '@ethersproject/contracts';\nimport { useQuery } from '@tanstack/react-query';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { importUSDProxy } from '@snx-v3/contracts';\n\nexport function useUSDProxy() {\n  const { network } = useNetwork();\n  const provider = useProvider();\n  const signer = useSigner();\n  const signerOrProvider = signer || provider;\n  const withSigner = Boolean(signer);\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'USDProxy', { withSigner }],\n    queryFn: async function () {\n      if (!signerOrProvider || !network) throw new Error('Should be disabled');\n      const { address, abi } = await importUSDProxy(network.id, network.preset);\n      return new Contract(address, abi, signerOrProvider);\n    },\n    enabled: Boolean(signerOrProvider),\n    staleTime: Infinity,\n  });\n}\n","export async function importUSDProxy(chainId, preset) {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/meta.json'),\n        import('@synthetixio/v3-contracts/1-main/USDProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.USDProxy, abi };\n    }\n    case '11155111-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/meta.json'),\n        import('@synthetixio/v3-contracts/11155111-main/USDProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.USDProxy, abi };\n    }\n    case '10-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/meta.json'),\n        import('@synthetixio/v3-contracts/10-main/USDProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.USDProxy, abi };\n    }\n    case '8453-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/8453-andromeda/USDProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.USDProxy, abi };\n    }\n    case '84532-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/84532-andromeda/USDProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.USDProxy, abi };\n    }\n    case '42161-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/meta.json'),\n        import('@synthetixio/v3-contracts/42161-main/USDProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.USDProxy, abi };\n    }\n    case '421614-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/meta.json'),\n        import('@synthetixio/v3-contracts/421614-main/USDProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.USDProxy, abi };\n    }\n    case '42161-arbthetix': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-arbthetix/meta.json'),\n        import('@synthetixio/v3-contracts/42161-arbthetix/USDProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.USDProxy, abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for USDProxy`);\n    }\n  }\n}\n","interface CacheItem<T> {\n  timestamp: number;\n  value: T;\n}\n\ninterface Cache<T> {\n  [key: string]: CacheItem<T> | undefined;\n}\n\nconst cache: Cache<unknown> = {};\ntype MaybeString = 'no-cache' | undefined;\n\n/**\n * This function, `withMemoryCache`, takes a function as an argument.\n * The passed function can optionally be given an extra argument to bypass the cache.\n * If the last argument passed to `func` is `true`, the cache will be bypassed.\n * Otherwise, the function will use the cache, if available.\n */\nexport const withMemoryCache = <T extends unknown[], R>(\n  func: (...args: T) => Promise<R>,\n  cacheDuration: number\n) => {\n  return async (...args: [...T, MaybeString]): Promise<R> => {\n    const lastArg = args[args.length - 1];\n    const bypassCache = lastArg === 'no-cache';\n    const funcArgs = (bypassCache ? args.slice(0, -1) : args) as T;\n    const cacheKey = JSON.stringify(funcArgs);\n    const currentTime = Date.now();\n\n    if (!bypassCache) {\n      const cacheItem = cache[cacheKey] as CacheItem<R> | undefined;\n      if (cacheItem && currentTime - cacheItem.timestamp < cacheDuration) {\n        return cacheItem.value;\n      }\n    }\n\n    const result = await func(...funcArgs);\n\n    cache[cacheKey] = {\n      timestamp: currentTime,\n      value: result,\n    };\n\n    return result;\n  };\n};\n","import { Hex } from 'viem';\n\nexport function parseTxError(error: any): Hex | undefined {\n  try {\n    if (error.cause?.data) {\n      return error.cause?.data;\n    }\n    if (error.cause?.cause?.data) {\n      return error.cause?.cause?.data;\n    }\n    if (error.cause?.cause?.cause?.data) {\n      return error.cause?.cause?.cause?.data;\n    }\n    if (error.cause?.cause?.error?.data) {\n      return error.cause?.cause?.error?.data;\n    }\n    if (error.cause?.cause?.cause?.error?.data) {\n      return error.cause?.cause?.cause?.error?.data;\n    }\n    if (error?.error?.error?.data) {\n      return error?.error?.error?.data;\n    }\n  } catch (err) {\n    console.error('exception error parser:', err);\n  }\n}\n","/* eslint-disable no-console */\nimport { BigNumber, ethers, providers } from 'ethers';\nimport { EvmPriceServiceConnection } from '@pythnetwork/pyth-evm-js';\nimport { z } from 'zod';\nimport { ZodBigNumber } from '@snx-v3/zod';\nimport { offchainMainnetEndpoint, offchainTestnetEndpoint } from '@snx-v3/constants';\nimport { deploymentsWithERC7412, Network } from '@snx-v3/useBlockchain';\nimport type { Modify } from '@snx-v3/tsHelpers';\nimport { importCoreProxy, importMulticall3 } from '@snx-v3/contracts';\nimport { withMemoryCache } from './withMemoryCache';\nimport * as viem from 'viem';\nimport { parseTxError } from '../parser';\n\nexport const ERC7412_ABI = [\n  'error OracleDataRequired(address oracleContract, bytes oracleQuery)',\n  'error FeeRequired(uint feeAmount)',\n  'function oracleId() view external returns (bytes32)',\n  'function fulfillOracleQuery(bytes calldata signedOffchainData) payable external',\n];\n\ntype TransactionRequest = ethers.providers.TransactionRequest;\ntype TransactionRequestWithGasLimit = Modify<TransactionRequest, { gasLimit: ethers.BigNumber }>;\n\nconst PRICE_CACHE_LENGTH = 5000;\n\nconst fetchOffchainData = withMemoryCache(\n  async (oracleQuery: string, isTestnet: boolean, logLabel: string) => {\n    const priceService = new EvmPriceServiceConnection(\n      isTestnet ? offchainTestnetEndpoint : offchainMainnetEndpoint\n    );\n\n    const OracleQuerySchema = z.tuple([z.number(), ZodBigNumber, z.array(z.string())]);\n    const decoded = ethers.utils.defaultAbiCoder.decode(\n      ['uint8', 'uint64', 'bytes32[]'],\n      oracleQuery\n    );\n    const [updateType, stalenessTolerance, priceIds] = OracleQuerySchema.parse(decoded);\n    console.log(`[${logLabel}] stale price for priceFeedId: ${priceIds[0]}`);\n    if (updateType !== 1) {\n      throw new Error(`update type ${updateType} not supported`);\n    }\n    const signedOffchainData = await priceService.getPriceFeedsUpdateData(priceIds);\n\n    return ethers.utils.defaultAbiCoder.encode(\n      ['uint8', 'uint64', 'bytes32[]', 'bytes[]'],\n      [updateType, stalenessTolerance, priceIds, signedOffchainData]\n    );\n  },\n  PRICE_CACHE_LENGTH\n);\n\nfunction makeMulticall(\n  calls: TransactionRequest[],\n  senderAddr: string,\n  multicallAddress: string,\n  multiCallAbi: string[]\n): TransactionRequest {\n  const multicallInterface = new ethers.utils.Interface(multiCallAbi);\n\n  const encodedData = multicallInterface.encodeFunctionData('aggregate3Value', [\n    calls.map((call) => ({\n      target: call.to,\n      callData: call.data,\n      value: call.value || ethers.BigNumber.from(0),\n      requireSuccess: true,\n      allowFailure: false,\n    })),\n  ]);\n\n  let totalValue = ethers.BigNumber.from(0);\n  for (const call of calls) {\n    totalValue = totalValue.add(call.value || ethers.BigNumber.from(0));\n  }\n\n  return {\n    from: senderAddr,\n    to: multicallAddress,\n    data: encodedData,\n    value: totalValue,\n  };\n}\n\n// This should be used for networks that doesn't have a multicall setup as a trusted forwarder\n// TODO remove when all networks have a trusted forwarder\nconst makeCoreProxyMulticall = (\n  calls: TransactionRequest[],\n  senderAddr: string,\n  coreProxyAddress: string,\n  coreProxyAbi: string[]\n) => {\n  const CoreProxyInterface = new ethers.utils.Interface(coreProxyAbi);\n  const encodedData = CoreProxyInterface.encodeFunctionData('multicall', [\n    calls.map((call) => call.data),\n  ]);\n\n  let totalValue = ethers.BigNumber.from(0);\n  for (const call of calls) {\n    totalValue = totalValue.add(call.value || ethers.BigNumber.from(0));\n  }\n\n  return {\n    from: senderAddr,\n    to: coreProxyAddress,\n    data: encodedData,\n    value: totalValue,\n  };\n};\n\nconst ERC7412ErrorSchema = z.union([\n  z.object({\n    name: z.literal('OracleDataRequired'),\n    args: z.tuple([z.string(), z.string()]),\n  }),\n  z.object({\n    name: z.literal('FeeRequired'),\n    args: z.tuple([ZodBigNumber]),\n  }),\n]);\nconst erc7412Interface = new ethers.utils.Interface(ERC7412_ABI);\n\nconst parseError = async (error: any, provider: providers.JsonRpcProvider) => {\n  let errorData = error.data || error.error?.data?.data || error.error?.error?.data;\n\n  if (!errorData) {\n    try {\n      console.log('Error is missing revert data, trying provider.call, instead of estimate gas..');\n      // Some wallets swallows the revert reason when calling estimate gas,try to get the error by using provider.call\n      // provider.call wont actually revert, instead the error data is just returned\n      const lookedUpError = await provider.call(error.transaction);\n      errorData = lookedUpError;\n    } catch (newError: any) {\n      console.log('provider.call(error.transaction) failed, trying to extract error');\n      // I dont think we should end up here.. But it hard to know if some combo of wallets and rpc provider would....\n      errorData = error.data || error.error?.data?.data || error.error?.error?.data;\n      console.log('Error data: ', errorData);\n    }\n  }\n  try {\n    const decodedError = erc7412Interface.parseError(errorData);\n    return ERC7412ErrorSchema.parse(decodedError);\n  } catch (parseError) {\n    console.error(\n      'Error is not a ERC7412 error, re-throwing original error, for better parsing. Parse error reason: ',\n      parseError\n    );\n    // If we cant parse it, throw the original error\n    throw error;\n  }\n};\n\n// simulate w/ wETH contract because it will have eth balance\n// This is useful when we do read/static calls but still need an balance for the price update\n// TODO: this probably need to be network aware, maybe look into a different solution even.\nconst getDefaultFromAddress = (chainName: string) => {\n  switch (chainName) {\n    case 'cannon':\n      return '0x4200000000000000000000000000000000000006'; // TODO, unclear what to put here\n    case 'mainnet':\n      return '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2';\n    case 'goerli':\n      return '0xb4fbf271143f4fbf7b91a5ded31805e42b2208d6';\n    case 'sepolia':\n      return '0x7b79995e5f793a07bc00c21412e50ecae098e7f9';\n    case 'arbitrum':\n      return '0x82af49447d8a07e3bd95bd0d56f35241523fbab1';\n    case 'optimism-mainnet':\n    case 'optimism-goerli':\n    case 'base-goerli':\n    case 'base':\n    case 'base-sepolia':\n      return '0x4200000000000000000000000000000000000006';\n\n    default:\n      throw new Error(`Unsupported chain ${chainName}`);\n  }\n};\n\n/**\n * If a tx requires ERC7412 pattern, wrap your tx with this function.\n */\nexport const withERC7412 = async (\n  network: Network,\n  tx: TransactionRequest | TransactionRequest[],\n  logLabel?: string,\n  abi?: any\n): Promise<TransactionRequestWithGasLimit> => {\n  const initialMulticallLength = Array.isArray(tx) ? tx.length : 1;\n  // eslint-disable-next-line prefer-const\n  let multicallCalls = [...[tx].flat()]; // Use let to communicate that we mutate this array\n\n  if (multicallCalls.some((x) => !x.to)) {\n    throw Error(`Make sure all txs have 'to' field set`);\n  }\n  if (multicallCalls.some((x) => !x.from)) {\n    throw Error(`Make sure all txs have 'from' field set`);\n  }\n\n  const from = multicallCalls[0].from as string;\n\n  // Make sure we're always using JSONRpcProvider, the web3 provider coming from the signer might have bugs causing errors to miss revert data\n  const jsonRpcProvider = new ethers.providers.JsonRpcProvider(network?.rpcUrl());\n\n  // If from is set to the default address (wETH) we can assume it's a read rather than a write\n  const isRead = from === getDefaultFromAddress(network.name);\n  const networkHaveERC7412 = deploymentsWithERC7412.includes(`${network.id}-${network.preset}`);\n  const useCoreProxy = !networkHaveERC7412 && !isRead;\n\n  const { address: multicallAddress, abi: multiCallAbi } = useCoreProxy\n    ? await importCoreProxy(network.id, network.preset)\n    : await importMulticall3(network.id, network.preset);\n\n  while (true) {\n    try {\n      if (multicallCalls.length == 1) {\n        const initialCall = multicallCalls[0];\n        // The normal flow would go in here, then if the estimate call fail, we catch the error and handle ERC7412\n        const gasLimit = await jsonRpcProvider.estimateGas(initialCall);\n        console.log(`Estimated gas succeeded, with no price updates`);\n        return { ...initialCall, gasLimit };\n      }\n      // If we're here it means we now added a tx to do .\n      // Some networks doesn't have ERC7412 and a trusted forwarder setup, on write calls we still need to use the coreproxy for those\n      const multicallTxn = useCoreProxy\n        ? makeCoreProxyMulticall(multicallCalls, from, multicallAddress, multiCallAbi)\n        : makeMulticall(multicallCalls, from, multicallAddress, multiCallAbi);\n\n      const gasLimit = await jsonRpcProvider.estimateGas(multicallTxn);\n\n      console.log(\n        `[${logLabel}] Estimated gas succeeded, with ${\n          multicallCalls.length - initialMulticallLength\n        } price updates`\n      );\n\n      return { ...multicallTxn, gasLimit };\n    } catch (error: any) {\n      const parsedError = await parseError(error, jsonRpcProvider);\n\n      if (parsedError.name === 'OracleDataRequired') {\n        const [oracleAddress, oracleQuery] = parsedError.args;\n        const ignoreCache = !isRead;\n        const signedRequiredData = await fetchOffchainData(\n          oracleQuery,\n          network.isTestnet,\n          logLabel || '',\n          ignoreCache ? 'no-cache' : undefined\n        );\n        const newTransactionRequest = {\n          from,\n          to: oracleAddress,\n          data: new ethers.utils.Interface(ERC7412_ABI).encodeFunctionData('fulfillOracleQuery', [\n            signedRequiredData,\n          ]),\n          // If from is set to the default address we can add a value directly, before getting FeeRequired revert.\n          // This will be a static call so no money would be withdrawn either way.\n          value: isRead ? ethers.utils.parseEther('0.1') : BigNumber.from(0),\n        };\n\n        // If we get OracleDataRequired, add an extra transaction request just before the last element\n        multicallCalls.splice(\n          multicallCalls.length - initialMulticallLength,\n          0,\n          newTransactionRequest\n        );\n      } else if (parsedError.name === 'FeeRequired') {\n        const requiredFee = parsedError.args[0];\n\n        const txToUpdate = multicallCalls.find(({ value }) => requiredFee.gt(value || 0)); // The first tx with value less than the required fee, is the one we need to update\n        if (txToUpdate === undefined) {\n          throw Error(\n            `Didn't find any tx with a value less than the required fee ${multicallCalls}`\n          );\n        }\n        txToUpdate.value = requiredFee;\n      } else {\n        const parsedError = parseTxError(error);\n        if (parsedError && abi) {\n          try {\n            const errorResult = viem.decodeErrorResult({\n              abi,\n              data: parsedError,\n            });\n            console.log('error: ', errorResult.errorName, errorResult.args);\n          } catch (_error) {}\n        }\n        throw error;\n      }\n    }\n  }\n};\n\n/**\n * This can be used to do reads plus decoding. The return type will be whatever the type of the decode function is. And the arguments passed will have the multicall decoded and price updates removed\n */\nexport async function erc7412Call<T>(\n  network: Network,\n  provider: ethers.providers.Provider,\n  txRequests: TransactionRequest | TransactionRequest[],\n  decode: (x: string[] | string) => T,\n  logLabel?: string\n) {\n  const { address: multicallAddress, abi: multicallAbi } = await importMulticall3(\n    network.id,\n    network.preset\n  );\n\n  const reqs = [txRequests].flat();\n\n  for (const txRequest of reqs) {\n    txRequest.from = getDefaultFromAddress(network.name); // Reads can always use WETH\n  }\n  const newCall = await withERC7412(network, reqs, logLabel);\n\n  const res = await provider.call(newCall);\n\n  if (newCall.to === multicallAddress) {\n    // If this was a multicall, decode and remove price updates.\n    const decodedMultiCall: { returnData: string }[] = new ethers.utils.Interface(\n      multicallAbi\n    ).decodeFunctionResult('aggregate3Value', res)[0];\n\n    // Remove the price updates\n    const responseWithoutPriceUpdates = decodedMultiCall.filter(\n      ({ returnData }) => returnData !== '0x' // price updates have 0x as return data\n    );\n    return decode(responseWithoutPriceUpdates.map(({ returnData }) => returnData));\n  }\n\n  return decode(res);\n}\n","import { BigNumber } from 'ethers';\nimport { z } from 'zod';\nimport { wei } from '@synthetixio/wei';\n\nexport const ZodBigNumber = z.custom<BigNumber>((val) => BigNumber.isBigNumber(val));\n\nexport const SmallIntSchema = ZodBigNumber.transform((x) => wei(x, 0).toNumber());\nexport const WeiSchema = ZodBigNumber.transform((x) => wei(x));\n","import {\n  ComponentMultiStyleConfig,\n  ComponentStyleConfig,\n  defineStyle,\n  extendTheme,\n} from '@chakra-ui/react';\nimport { mode } from '@chakra-ui/theme-tools';\n\nconst gradients = {\n  'green-cyan': {\n    500: 'linear(to-tr, green.500, cyan.500)',\n    600: 'linear(to-tr, green.600, cyan.600)',\n    700: 'linear(to-tr, green.700, cyan.800)',\n  },\n\n  grey: {\n    900: 'linear(to-tr, grey.900, blackAlpha.900)',\n  },\n  dark: {\n    500: 'linear(to-tr, #171923, #141414)',\n  },\n\n  'pink-purple': {\n    500: 'linear(to-tr, pink.500, purple.500)',\n    600: 'linear(to-tr, pink.600, purple.600)',\n    700: 'linear(to-tr, pink.700, purple.800)',\n  },\n\n  'pink-blue': {\n    500: 'linear(to-tr, pink.500, blue.500)',\n    600: 'linear(to-tr, pink.600, blue.600)',\n    700: 'linear(to-tr, pink.700, blue.800)',\n  },\n  'pink-cyan': {\n    500: 'linear(to-tr, pink.500, cyan.500)',\n    600: 'linear(to-tr, pink.600, cyan.600)',\n    700: 'linear(to-tr, pink.700, cyan.800)',\n  },\n\n  orange: {\n    500: 'linear(to-tr, orange.500, orange.300)',\n    600: 'linear(to-tr, orange.600, orange.400)',\n    700: 'linear(to-tr, orange.700, orange.500)',\n  },\n};\n\n// adapted from https://github.com/chakra-ui/chakra-ui/blob/main/packages/components/theme/src/components/button.ts#L90\nconst variantSolid = defineStyle((props) => {\n  const { colorScheme: c } = props;\n\n  if (c === 'gray') {\n    const bg = mode(`gray.100`, `whiteAlpha.200`)(props);\n\n    return {\n      color: mode(`black`, `whiteAlpha.900`)(props),\n      bg,\n      _hover: {\n        bg: mode(`gray.200`, `whiteAlpha.300`)(props),\n        _disabled: {\n          bg,\n        },\n      },\n      _active: { bg: mode(`gray.300`, `whiteAlpha.400`)(props) },\n    };\n  }\n\n  if (c === 'cyan') {\n    return {\n      bgGradient: gradients['green-cyan'][500],\n      color: 'black',\n      _hover: {\n        bgGradient: gradients['green-cyan'][600],\n        _disabled: {\n          background: gradients['green-cyan'][500],\n        },\n      },\n      _active: {\n        bgGradient: gradients['green-cyan'][700],\n      },\n    };\n  }\n\n  const bg = `${c}.500`;\n  const color = 'white';\n  const hoverBg = `${c}.600`;\n  const activeBg = `${c}.700`;\n  const background = mode(bg, `${c}.600`)(props);\n\n  return {\n    bg: background,\n    color: mode(color, `white`)(props),\n    _hover: {\n      bg: mode(hoverBg, `${c}.500`)(props),\n      _disabled: {\n        bg: background,\n      },\n    },\n    _active: { bg: mode(activeBg, `${c}.400`)(props) },\n  };\n});\n\nconst Button: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n  },\n  variants: {\n    solid: variantSolid,\n    outline: (props) => {\n      if (props.colorScheme === 'gray') {\n        return {\n          color: 'whiteAlpha.800',\n          borderColor: 'gray.900',\n          _hover: { bg: 'rgba(255, 255, 255, 0.12)' }, // white 0.12 opacity\n          _active: { bg: 'rgba(255, 255, 255, 0.24)' }, //white 0.24 opacity\n        };\n      }\n      return {\n        color: 'cyan.500', // needed for storybook for some reason\n        border: '1px solid', // needed for storybook for some reason\n        borderColor: 'cyan.500', // needed for storybook for some reason\n        _hover: { bg: 'rgb(0, 209, 255, 0.12)' }, // cyan.500 0.12 opacity\n        _active: { bg: 'rgb(0, 209, 255, 0.24)' }, // cyan.500 0.24 opacity\n      };\n    },\n    ghost: {\n      color: 'cyan.500', // needed for storybook for some reason\n      _hover: { bg: 'rgb(0, 209, 255, 0.12)' }, // cyan.500 0.12 opacity\n      _active: { bg: 'rgb(0, 209, 255, 0.24)' }, // cyan.500 0.24 opacity\n    },\n  },\n};\n\nconst Menu: ComponentMultiStyleConfig = {\n  parts: ['button', 'list', 'item'],\n  baseStyle: {\n    button: {\n      color: 'white',\n      span: {\n        display: 'flex',\n        alignItems: 'center',\n        px: 2,\n      },\n      height: '100%',\n    },\n    list: {\n      mt: 2,\n      bgColor: 'navy.900',\n      padding: 0,\n      border: 'none',\n      borderRadius: 'md',\n      py: 0,\n    },\n    item: {\n      bgColor: 'blackAlpha.300',\n      color: 'whiteAlpha.900',\n      p: 3,\n      _hover: {\n        bgColor: 'whiteAlpha.400',\n      },\n      _active: {\n        bgColor: 'navy.900',\n      },\n      _first: {\n        borderTopLeftRadius: 'md',\n        borderTopRightRadius: 'md',\n      },\n      _last: {\n        borderBottomLeftRadius: 'md',\n        borderBottomRightRadius: 'md',\n      },\n      _focus: {\n        bgColor: 'blackAlpha.400',\n      },\n    },\n  },\n};\n\nconst Input: ComponentStyleConfig = {\n  defaultProps: {\n    focusBorderColor: 'cyan.500',\n    errorBorderColor: 'red.500',\n  },\n};\n\nconst Select: ComponentStyleConfig = {\n  defaultProps: {\n    focusBorderColor: 'cyan.500',\n    iconColor: 'cyan.500',\n    errorBorderColor: 'red.500',\n  },\n};\n\nconst NumberInput: ComponentStyleConfig = {\n  defaultProps: {\n    focusBorderColor: 'cyan.500',\n    errorBorderColor: 'red.500',\n  },\n};\n\nconst Textarea: ComponentStyleConfig = {\n  defaultProps: {\n    focusBorderColor: 'cyan.500',\n    colorScheme: 'cyan',\n    errorBorderColor: 'red.500',\n  },\n};\n\nconst Alert: ComponentStyleConfig = {\n  defaultProps: {\n    variant: 'left-accent',\n  },\n  variants: {\n    'left-accent': (props) => {\n      return {\n        container: {\n          bg: `${props.colorScheme}.900`,\n          borderInlineStartColor: `${props.colorScheme}.500`,\n        },\n      };\n    },\n    solid: (props) => {\n      return {\n        icon: { color: 'white' },\n        container: { bg: `${props.colorScheme}.500`, color: 'white' },\n      };\n    },\n  },\n};\n\nconst Skeleton: ComponentStyleConfig = {\n  defaultProps: {\n    startColor: 'gray.900',\n    endColor: 'gray.800',\n  },\n};\n\nconst Checkbox: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n  },\n  baseStyle: {\n    control: {\n      borderColor: 'cyan.500',\n      _checked: {\n        bg: 'cyan.500',\n        borderColor: 'cyan.500',\n        _hover: {\n          bg: 'cyan.600',\n          borderColor: 'cyan.600',\n        },\n      },\n      _invalid: {\n        borderColor: 'red.500',\n      },\n      _disabled: {\n        _hover: {\n          borderColor: 'transparent',\n        },\n      },\n      _hover: {\n        borderColor: 'cyan.600',\n      },\n    },\n  },\n};\n\nconst Radio: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n  },\n  baseStyle: {\n    control: {\n      borderColor: 'cyan.500',\n      _checked: {\n        bg: 'cyan.500',\n        borderColor: 'cyan.500',\n        _hover: {\n          bg: 'cyan.600',\n          borderColor: 'cyan.600',\n        },\n      },\n      _invalid: {\n        borderColor: 'red.500',\n      },\n      _disabled: {\n        _hover: {\n          borderColor: 'transparent',\n        },\n      },\n      _hover: {\n        borderColor: 'cyan.600',\n      },\n    },\n  },\n};\n\nconst Badge: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n  },\n  variants: {\n    subtle: (props) => ({\n      color: `${props.colorScheme}.500`,\n    }),\n    solid: (props) => ({\n      background: `${props.colorScheme}.500`,\n      color: 'black',\n    }),\n    outline: (props) => ({\n      borderColor: `${props.colorScheme}.500`,\n      color: `${props.colorScheme}.500`,\n    }),\n    percent: {\n      color: 'cyan.500',\n      bg: 'whiteAlpha.300',\n      fontFamily: 'heading',\n      py: 1,\n      px: 2,\n      borderRadius: 'base',\n      borderWidth: '1px',\n      borderColor: 'transparent',\n      width: '100%',\n      textAlign: 'center',\n      userSelect: 'none',\n    },\n  },\n};\n\nconst Tag: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n    variant: 'solid',\n  },\n  variants: {\n    solid: (props) => ({\n      container: {\n        background: `${props.colorScheme}.500`,\n        color: 'black',\n      },\n    }),\n  },\n};\n\nconst Accordion: ComponentStyleConfig = {\n  baseStyle: {\n    container: {\n      borderColor: 'gray.900',\n      borderWidth: '1px',\n      borderRadius: 'base',\n    },\n  },\n};\n\nconst Progress: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n    variant: 'solid',\n    borderRadius: 'full',\n  },\n  variants: {\n    solid: (props) => ({\n      filledTrack: {\n        background: `${props.colorScheme}.500`,\n        borderRadius: 'full',\n      },\n      track: {\n        borderRadius: 'full',\n      },\n    }),\n  },\n};\n\nconst Tabs: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n  },\n  variants: {\n    'solid-rounded': (props) => ({\n      tab: {\n        _selected: {\n          background: `${props.colorScheme}.500`,\n          color: 'black',\n        },\n        color: `${props.colorScheme}.500`,\n      },\n    }),\n    'soft-rounded': {\n      tab: {\n        _selected: {\n          background: 'whiteAlpha.300',\n          color: 'cyan.500',\n        },\n        color: 'cyan.500',\n      },\n    },\n  },\n};\n\nconst Tooltip: ComponentStyleConfig = {\n  baseStyle: {\n    textAlign: 'center',\n    bg: 'gray.900',\n    color: 'white.500',\n    '--popper-arrow-bg': 'var(--chakra-colors-gray-900)',\n  },\n};\n\nconst Switch: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n  },\n  baseStyle: {\n    track: {\n      _checked: {\n        background: 'cyan.500',\n      },\n    },\n  },\n};\n\nconst Spinner: ComponentStyleConfig = {\n  baseStyle: {\n    color: 'cyan.500',\n  },\n};\n\nexport const theme = extendTheme({\n  useSystemColorMode: false,\n  initialColorMode: 'dark',\n  colors: {\n    gray: {\n      50: '#F6F6F6',\n      100: '#F1F1F1',\n      200: '#DDDDDF',\n      300: '#C3C3C9',\n      400: '#AAAAB2',\n      500: '#91919B',\n      600: '#7A7A85',\n      700: '#63636E',\n      800: '#4D4D57',\n      900: '#303037',\n    },\n    red: {\n      50: '#FFEDEF',\n      100: '#FFC4CB',\n      200: '#FF9BA7',\n      300: '#FF7384',\n      400: '#FF4A60',\n      500: '#E4364B',\n      600: '#C53030',\n      700: '#9B2C2C',\n      800: '#822727',\n      900: '#63171B',\n    },\n    orange: {\n      50: '#FFF3EB',\n      100: '#FFD8BE',\n      200: '#FFBE92',\n      300: '#FFA365',\n      400: '#FF9A54',\n      500: '#FC8738',\n      600: '#DC732D',\n      700: '#96420A',\n      800: '#743002',\n      900: '#522100',\n    },\n    yellow: {\n      50: '#FFFBEF',\n      100: '#FFF2CA',\n      200: '#FFF5A8',\n      300: '#FFF889',\n      400: '#FFF458',\n      500: '#FAE527',\n      600: '#EAD516',\n      700: '#B5932B',\n      800: '#776017',\n      900: '#55430D',\n    },\n    green: {\n      50: '#EDFFF9',\n      100: '#C3FFEC',\n      200: '#9AE6B4',\n      300: '#72FFD3',\n      400: '#47FAC2',\n      500: '#34EDB3',\n      600: '#2BD39F',\n      700: '#11946B',\n      800: '#077250',\n      900: '#015037',\n    },\n    blue: {\n      50: '#EDF6FF',\n      100: '#C4E2FF',\n      200: '#9CCFFF',\n      300: '#73BBFF',\n      400: '#479EF0',\n      500: '#3182CE',\n      600: '#1F68AC',\n      700: '#11508A',\n      800: '#073968',\n      900: '#012546',\n    },\n    cyan: {\n      50: '#E5FAFF',\n      100: '#B7F2FF',\n      200: '#8AEAFF',\n      300: '#5CE1FF',\n      400: '#2ED9FF',\n      500: '#00D1FF',\n      600: '#00B0D6',\n      700: '#008EAD',\n      800: '#006D85',\n      900: '#004B5C',\n    },\n    purple: {\n      50: '#F0EEFF',\n      100: '#CFC9FF',\n      200: '#AEA4FF',\n      300: '#8D7EFF',\n      400: '#6B59FF',\n      500: '#5744EA',\n      600: '#402FC8',\n      700: '#2D1EA6',\n      800: '#1D1084',\n      900: '#10104E',\n    },\n    pink: {\n      50: '#FDE8FF',\n      100: '#F9B6FF',\n      200: '#F583FF',\n      300: '#F471FF',\n      400: '#EB46FF',\n      500: '#EE2EFF',\n      600: '#BE02CE',\n      700: '#8D0099',\n      800: '#6E0077',\n      900: '#4E0055',\n    },\n    navy: {\n      50: '#522ED1',\n      100: '#401FB7',\n      200: '#3719A6',\n      300: '#2F1298',\n      400: '#1F0777',\n      500: '#150942',\n      600: '#0E052F',\n      700: '#0B0B22',\n      800: '#0A0A25',\n      900: '#06061B',\n    },\n    error: '#FF4A60', // red.400,\n    success: '#34EDB3', //green.500\n    warning: '#FC8738', // orange.500\n  },\n  shadows: {\n    outline: '0 0 0 3px rgba(0, 209, 255, 1)',\n  },\n  fonts: {\n    heading:\n      'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n    body: 'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n    display:\n      '\"GT America Condensed\", Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n    mono: '\"GT America Mono\", SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace',\n  },\n  components: {\n    Popover: {\n      variants: {\n        responsive: {\n          popper: {\n            maxWidth: 'unset',\n            width: 'unset',\n          },\n        },\n      },\n    },\n    Button,\n    Input,\n    Select,\n    NumberInput,\n    Alert,\n    Textarea,\n    Skeleton,\n    Checkbox,\n    Radio,\n    Badge,\n    Tag,\n    Accordion,\n    Progress,\n    Tabs,\n    Tooltip,\n    Switch,\n    Spinner,\n    Menu,\n  },\n  // To be imported and used with the bgGradient prop\n  // See: https://chakra-ui.com/docs/styled-system/gradient#background-gradient-api\n  gradients,\n  textStyles: {\n    'heading-4xl': {\n      fontSize: { base: '60px', lg: '72px' },\n      fontFamily: 'heading',\n      lineHeight: { base: '57.6px', lg: '72px' },\n      fontWeight: 700,\n    },\n    'heading-3xl': {\n      fontSize: { base: '48px', md: '60px' },\n      fontFamily: 'heading',\n      lineHeight: { base: '57.6px', md: '72px', lg: '60px' },\n      fontWeight: 700,\n    },\n    'heading-2xl': {\n      fontSize: { base: '36px', md: '48px' },\n      fontFamily: 'heading',\n      lineHeight: { base: '120%' },\n      fontWeight: 700,\n    },\n    'heading-xl': {\n      fontSize: { base: '30px', lg: '36px' },\n      fontFamily: 'heading',\n      lineHeight: { base: '36px', lg: '120%' },\n      fontWeight: 700,\n    },\n    'heading-lg': {\n      fontSize: { base: '24px', lg: '30px' },\n      fontFamily: 'heading',\n      lineHeight: { base: '28.8px', lg: '36px' },\n      fontWeight: 700,\n    },\n    'heading-md': {\n      fontSize: { base: '20px', lg: '24px' },\n      fontFamily: 'heading',\n      lineHeight: '24px',\n      fontWeight: 700,\n    },\n    'heading-sm': {\n      fontSize: '16px',\n      fontFamily: 'heading',\n      lineHeight: '19.2px',\n      fontWeight: 700,\n    },\n    'heading-xs': {\n      fontSize: '14px',\n      fontFamily: 'heading',\n      lineHeight: '16.8px',\n      fontWeight: 700,\n    },\n  },\n  sizes: {\n    px: '1px',\n    0.5: '0.125rem',\n    1: '0.25rem',\n    1.5: '0.375rem',\n    2: '0.5rem',\n    2.5: '0.625rem',\n    3: '0.75rem',\n    3.5: '0.875rem',\n    4: '1rem',\n    5: '1.25rem',\n    6: '1.5rem',\n    7: '1.75rem',\n    8: '2rem',\n    9: '2.25rem',\n    10: '2.5rem',\n    12: '3rem',\n    14: '3.5rem',\n    16: '4rem',\n    20: '5rem',\n    24: '6rem',\n    28: '7rem',\n    32: '8rem',\n    36: '9rem',\n    40: '10rem',\n    44: '11rem',\n    48: '12rem',\n    52: '13rem',\n    56: '14rem',\n    60: '15rem',\n    64: '16rem',\n    72: '18rem',\n    80: '20rem',\n    96: '24rem',\n    max: 'max-content',\n    min: 'min-content',\n    full: '100%',\n    '3xs': '14rem',\n    '2xs': '16rem',\n    xs: '20rem',\n    sm: '24rem',\n    md: '28rem',\n    lg: '32rem',\n    xl: '36rem',\n    '2xl': '42rem',\n    '3xl': '48rem',\n    '4xl': '56rem',\n    '5xl': '64rem',\n    '6xl': '72rem',\n    '7xl': '80rem',\n    '8xl': '90rem',\n    container: {\n      sm: '640px',\n      md: '768px',\n      lg: '1024px',\n      xl: '1280px',\n    },\n  },\n  styles: {\n    global: {\n      body: {\n        bg: 'navy.900',\n      },\n    },\n  },\n});\n","import { Global } from '@emotion/react';\n\nexport const Fonts = () => (\n  <Global\n    styles={`\n      @import url('https://fonts.googleapis.com/css2?family=Inter:wght@200..700&display=swap');\n      @font-face {\n        font-family: 'GT America Condensed';\n        font-style: normal;\n        font-display: swap;\n        font-weight: 700;\n        src: local('GT America Condensed'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Bold.woff2') format('woff2'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Bold.woff') format('woff'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Bold.otf') format('opentype');\n      }\n      @font-face {\n        font-family: 'GT America Condensed';\n        font-style: italic;\n        font-display: swap;\n        font-weight: 700;\n        src: local('GT America Condensed'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Bold%20Italic.woff2')\n            format('woff2'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Bold%20Italic.woff')\n            format('woff'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Bold%20Italic.otf')\n            format('opentype');\n      }\n      @font-face {\n        font-family: 'GT America Condensed';\n        font-style: normal;\n        font-display: swap;\n        font-weight: 100;\n        src: local('GT America Condensed'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Thin.woff2') format('woff2'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Thin.woff') format('woff'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Thin.otf') format('opentype');\n      }\n      @font-face {\n        font-family: 'GT America Condensed';\n        font-style: italic;\n        font-display: swap;\n        font-weight: 100;\n        src: local('GT America Condensed'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Thin%20Italic.woff2')\n            format('woff2'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Thin%20Italic.woff')\n            format('woff'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Thin%20Italic.otf')\n            format('opentype');\n      }\n      @font-face {\n        font-family: 'GT America Mono';\n        font-style: normal;\n        font-display: swap;\n        font-weight: 700;\n        src: local('GT America Mono'),\n          url('https://fonts.synthetix.io/GT%20America%20Mono%20Bold.woff2') format('woff2'),\n          url('https://fonts.synthetix.io/GT%20America%20Mono%20Bold.woff') format('woff'),\n          url('https://fonts.synthetix.io/GT%20America%20Mono%20Bold.otf') format('opentype');\n      }\n      @font-face {\n        font-family: 'Lustra Text';\n        font-style: normal;\n        font-display: swap;\n        font-weight: 400;\n        src: local('Lustra Text'),\n          url('https://fonts.synthetix.io/Lustra%20Text%20Thin.otf') format('opentype');\n      }\n    `}\n  />\n);\n","import { useState } from 'react';\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  Text,\n  Button,\n  Box,\n  Link,\n  ListItem,\n  UnorderedList,\n} from '@chakra-ui/react';\nimport { Link as ReactRouterLink } from 'react-router-dom';\nimport { theme } from '@synthetixio/v3-theme';\nimport { SESSION_STORAGE_KEYS } from '@snx-v3/constants';\n\ninterface TermsModalProps {\n  defaultOpen: boolean;\n}\n\nexport const TermsModal = ({ defaultOpen = true }: TermsModalProps) => {\n  const [isOpen, setOpen] = useState(defaultOpen);\n  const [enabled, setEnabled] = useState(false);\n\n  const onSubmit = () => {\n    if (enabled) {\n      sessionStorage.setItem(SESSION_STORAGE_KEYS.TERMS_CONDITIONS_ACCEPTED, JSON.stringify(true));\n      setOpen(false);\n    }\n  };\n\n  return (\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    <Modal isOpen={isOpen} onClose={() => {}}>\n      <ModalOverlay />\n      <ModalContent\n        bgGradient={theme.gradients['dark'][500]}\n        pt=\"10\"\n        pb=\"3\"\n        borderWidth=\"1px\"\n        borderColor=\"gray.900\"\n        data-testid=\"transaction modal\"\n      >\n        <ModalHeader py={0} textAlign=\"center\">\n          Synthetix Terms of Service\n        </ModalHeader>\n        <ModalBody fontSize=\"xs\" color=\"gray.600\">\n          <Text fontSize=\"sm\">\n            By clicking “I Agree” below, you agree to be bound by the terms of this Agreement. As\n            such, you fully understand that:\n          </Text>\n          <Box\n            onScroll={(e) => {\n              const div = e.currentTarget;\n              const scrollTopWithTolerance = div.scrollTop + 10;\n              if (scrollTopWithTolerance >= div.scrollHeight - div.offsetHeight) {\n                setEnabled(true);\n              } else {\n                setEnabled(false);\n              }\n            }}\n            as=\"div\"\n            my={2}\n            py={3}\n            height=\"350px\"\n            overflow=\"auto\"\n            overflowX=\"scroll\"\n            sx={{\n              '::-webkit-scrollbar': {\n                display: 'block',\n              },\n              '::-webkit-scrollbar-track': {\n                backgroundColor: 'transparent',\n              },\n              '::-webkit-scrollbar-track-piece': {\n                backgroundColor: 'transparent',\n              },\n              '::-webkit-scrollbar-corner': {\n                backgroundColor: 'transparent',\n              },\n            }}\n          >\n            <UnorderedList>\n              <Text fontSize=\"14px\">\n                <ListItem>\n                  <Link\n                    href=\"https://synthetix.io/\"\n                    target=\"_blank\"\n                    color=\"cyan.500\"\n                    _focusVisible={{ outline: 'none' }}\n                  >\n                    Synthetix{' '}\n                  </Link>\n                  is a blockchain-based decentralized finance project. You are participating at your\n                  own risk.\n                </ListItem>\n                <ListItem mt={2}>\n                  Synthetix is offered for use “as is” and without any guarantees regarding\n                  security. The protocol is made up of immutable code and can be accessed through a\n                  variety of user interfaces.\n                </ListItem>\n                <ListItem mt={2}>\n                  No central entity operates the Synthetix protocol. Decisions related to the\n                  protocol are governed by a dispersed group of participants who collectively govern\n                  and maintain the protocol.\n                </ListItem>\n                <ListItem mt={2}>\n                  Synthetix DAO does not unilaterally offer, maintain, operate, administer, or\n                  control any trading interfaces. The only user interfaces maintained by Synthetix\n                  DAO are the governance and liquidity interfaces herein.\n                </ListItem>\n                <ListItem mt={2}>\n                  You can participate in the governance process by staking SNX tokens in accordance\n                  with the rules and parameters summarized{' '}\n                  <Link\n                    href=\"https://governance.synthetix.io/\"\n                    target=\"_blank\"\n                    color=\"cyan.500\"\n                    _focusVisible={{ outline: 'none' }}\n                  >\n                    here\n                  </Link>\n                  , and/or joining the{' '}\n                  <Link\n                    color=\"cyan.500\"\n                    target=\"_blank\"\n                    href=\"https://discord.com/invite/ptfNSByB8P\"\n                    _focusVisible={{ outline: 'none' }}\n                  >\n                    Synthetix Discord\n                  </Link>{' '}\n                  and contributing to the conversation.\n                </ListItem>\n                <ListItem mt={2}>\n                  The rules and parameters associated with the Synthetix protocol and Synthetix DAO\n                  governance are subject to change at any time.\n                </ListItem>\n                <ListItem mt={2}>\n                  Your use of Synthetix is conditioned upon your acceptance to be bound by the\n                  Synthetix Term of Use, which can be found{' '}\n                  <Link\n                    as={ReactRouterLink}\n                    to=\"/terms\"\n                    target=\"_blank\"\n                    color=\"cyan.500\"\n                    _focusVisible={{ outline: 'none' }}\n                  >\n                    here\n                  </Link>\n                  .\n                </ListItem>\n                <ListItem mt={2}>\n                  The laws that apply to your use of Synthetix may vary based upon the jurisdiction\n                  in which you are located. We strongly encourage you to speak with legal counsel in\n                  your jurisdiction if you have any questions regarding your use of Synthetix.\n                </ListItem>\n                <ListItem mt={2}>\n                  By entering into this agreement, you are not agreeing to enter into a partnership.\n                  You understand that Synthetix is a decentralized protocol provided on an “as is”\n                  basis.\n                </ListItem>\n                <ListItem mt={2}>\n                  You hereby release all present and future claims against Synthetix DAO related to\n                  your use of the protocol, the SNX token, SNX DAO governance, and any other facet\n                  of the protocol.\n                </ListItem>\n                <ListItem mt={2}>\n                  You agree to indemnify and hold harmless SNX DAO and its affiliates for any costs\n                  arising out of or relating to your use of the Synthetix protocol.\n                </ListItem>\n                <ListItem mt={2}>\n                  You are not accessing the protocol from Burma (Myanmar), Cuba, Iran, Sudan, Syria,\n                  the Western Balkans, Belarus, Côte d’Ivoire, Democratic Republic of the Congo,\n                  Iraq, Lebanon, Liberia, Libya, North Korea, Russia, certain sanctioned areas of\n                  Ukraine, Somalia, Venezuela, Yemen, or Zimbabwe (collectively, “Prohibited\n                  Jurisdictions”), or any other jurisdiction listed as a Specially Designated\n                  National by the United States Office of Foreign Asset Control (“OFAC”).\n                </ListItem>\n              </Text>\n            </UnorderedList>\n          </Box>\n        </ModalBody>\n        <Button\n          variant=\"outline\"\n          _focusVisible={{ outline: 'none' }}\n          my={4}\n          mx={6}\n          onClick={onSubmit}\n          isDisabled={!enabled}\n        >\n          I agree\n        </Button>\n      </ModalContent>\n    </Modal>\n  );\n};\n","import { useState } from 'react';\n\nexport const set = (key: string, value: any) => {\n  if (typeof window !== 'undefined') {\n    window.localStorage.setItem(key, JSON.stringify(value));\n  }\n};\n\nexport function get<T>(key: string): T | null {\n  if (typeof window !== 'undefined') {\n    const item = window.localStorage.getItem(key);\n    try {\n      if (item != null) {\n        return JSON.parse(item);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  return null;\n}\n\nexport function useLocalStorage<T>(key: string, initialValue: T) {\n  const [storedValue, setStoredValue] = useState<T>(() => {\n    const item = get<T>(key);\n    return item != null ? item : initialValue;\n  });\n\n  const setValue = (value: T) => {\n    const valueToStore = value instanceof Function ? value(storedValue) : value;\n    setStoredValue(valueToStore);\n    set(key, valueToStore);\n  };\n\n  return [storedValue, setValue] as const;\n}\n","import Wei from '@synthetixio/wei';\nimport { constants } from 'ethers';\n\nexport const LOCAL_STORAGE_KEYS = {\n  SHOW_TESTNETS: 'SHOW_TESTNETS',\n};\nexport const ZEROWEI = new Wei(0);\nexport const ONEWEI = new Wei(1);\nexport const MAXUINT = new Wei(constants.MaxUint256);\n","import { Contract } from '@ethersproject/contracts';\nimport { useQuery } from '@tanstack/react-query';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { importAccountProxy } from '@snx-v3/contracts';\n\nexport function useAccountProxy() {\n  const { network } = useNetwork();\n  const provider = useProvider();\n  const signer = useSigner();\n  const signerOrProvider = signer || provider;\n  const withSigner = Boolean(signer);\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'AccountProxy', { withSigner }],\n    queryFn: async function () {\n      if (!signerOrProvider || !network) throw new Error('Should be disabled');\n      const { address, abi } = await importAccountProxy(network.id, network?.preset);\n      return new Contract(address, abi, signerOrProvider);\n    },\n    enabled: Boolean(signerOrProvider),\n    staleTime: Infinity,\n  });\n}\n","export async function importAccountProxy(chainId, preset) {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/meta.json'),\n        import('@synthetixio/v3-contracts/1-main/AccountProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.AccountProxy, abi };\n    }\n    case '11155111-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/meta.json'),\n        import('@synthetixio/v3-contracts/11155111-main/AccountProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.AccountProxy, abi };\n    }\n    case '10-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/meta.json'),\n        import('@synthetixio/v3-contracts/10-main/AccountProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.AccountProxy, abi };\n    }\n    case '8453-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/8453-andromeda/AccountProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.AccountProxy, abi };\n    }\n    case '84532-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/84532-andromeda/AccountProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.AccountProxy, abi };\n    }\n    case '42161-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/meta.json'),\n        import('@synthetixio/v3-contracts/42161-main/AccountProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.AccountProxy, abi };\n    }\n    case '421614-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/meta.json'),\n        import('@synthetixio/v3-contracts/421614-main/AccountProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.AccountProxy, abi };\n    }\n    case '42161-arbthetix': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-arbthetix/meta.json'),\n        import('@synthetixio/v3-contracts/42161-arbthetix/AccountProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.AccountProxy, abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for AccountProxy`);\n    }\n  }\n}\n","import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { useAccountProxy } from '@snx-v3/useAccountProxy';\nimport { useNetwork, useWallet } from '@snx-v3/useBlockchain';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useGasPrice } from '@snx-v3/useGasPrice';\nimport { wei } from '@synthetixio/wei';\n\nexport function useAccounts() {\n  const { activeWallet } = useWallet();\n  const { data: AccountProxy } = useAccountProxy();\n  const { network } = useNetwork();\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'Accounts',\n      { accountAddress: activeWallet?.address },\n    ],\n    queryFn: async function () {\n      if (!AccountProxy || !activeWallet?.address) throw new Error('Should be disabled');\n      const numberOfAccountTokens = await AccountProxy.balanceOf(activeWallet.address);\n\n      if (numberOfAccountTokens.eq(0)) {\n        // No accounts created yet\n        return [];\n      }\n      const accountIndexes = Array.from(Array(numberOfAccountTokens.toNumber()).keys());\n      const accounts = await Promise.all(\n        accountIndexes.map(async (i) => {\n          if (!activeWallet?.address) throw new Error('OMG!');\n          return await AccountProxy.tokenOfOwnerByIndex(activeWallet.address, i);\n        })\n      );\n      return accounts.map((accountId) => accountId.toString());\n    },\n    enabled: Boolean(AccountProxy?.address && activeWallet?.address),\n    placeholderData: [],\n  });\n}\n\nexport function useCreateAccount() {\n  const { data: CoreProxy } = useCoreProxy();\n  const { network } = useNetwork();\n  const client = useQueryClient();\n  const { data: gasPrices } = useGasPrice();\n  return {\n    getTransactionCost: useQuery({\n      enabled: !!gasPrices,\n      queryKey: ['Transaction-Cost-Account'],\n      queryFn: async () => {\n        const gasUnits = await CoreProxy?.estimateGas['createAccount()']();\n        if (gasPrices) {\n          if ('baseFeePerGas' in gasPrices?.average && gasUnits) {\n            const { coins } = await (\n              await fetch('https://coins.llama.fi/prices/current/coingecko:ethereum?searchWidth=4h')\n            ).json();\n            return (\n              wei(gasPrices?.average.baseFeePerGas.mul(gasUnits), 18).toNumber() *\n              coins['coingecko:ethereum'].price\n            ).toFixed(2);\n          }\n        }\n        return '0.00';\n      },\n    }),\n    mutation: useMutation({\n      mutationFn: async function () {\n        try {\n          if (!CoreProxy) throw new Error('CoreProxy undefined');\n          const tx = await CoreProxy['createAccount()']();\n          const res = await tx.wait();\n\n          await client.invalidateQueries({\n            queryKey: [`${network?.id}-${network?.preset}`, 'Accounts'],\n          });\n\n          let newAccountId: string | undefined;\n\n          res.logs.forEach((log: any) => {\n            if (log.topics[0] === CoreProxy.interface.getEventTopic('AccountCreated')) {\n              const accountId = CoreProxy.interface.decodeEventLog(\n                'AccountCreated',\n                log.data,\n                log.topics\n              )?.accountId;\n              newAccountId = accountId?.toString();\n            }\n          });\n\n          return [newAccountId];\n        } catch (error) {\n          console.error(error);\n          throw error;\n        }\n      },\n    }),\n  };\n}\n","import { useEffect, useState } from 'react';\nimport {\n  Badge,\n  Button,\n  Flex,\n  IconButton,\n  Link,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  MenuOptionGroup,\n  Switch,\n  Text,\n} from '@chakra-ui/react';\nimport { WalletIcon } from '@snx-v3/icons';\nimport { NetworkIcon, useNetwork, useWallet, NETWORKS } from '@snx-v3/useBlockchain';\nimport { prettyString } from '@snx-v3/format';\nimport { useLocalStorage } from '@snx-v3/useLocalStorage';\nimport { LOCAL_STORAGE_KEYS } from '../../utils/constants';\nimport { CopyIcon, SettingsIcon } from '@chakra-ui/icons';\nimport { useAccounts, useCreateAccount } from '@snx-v3/useAccounts';\nimport { useLocation, useNavigate, useSearchParams } from 'react-router-dom';\nimport { Tooltip } from '@snx-v3/Tooltip';\n\nexport function NetworkController() {\n  const [toolTipLabel, setTooltipLabel] = useState('Copy');\n  const { activeWallet, walletsInfo, connect, disconnect } = useWallet();\n  const { network: activeNetwork, setNetwork } = useNetwork();\n  const {\n    data: accounts,\n    isLoading: isAccountsLoading,\n    isFetching: isAccountsFetching,\n  } = useAccounts();\n  const { mutation } = useCreateAccount();\n  const [showTestnets, setShowTestnets] = useLocalStorage(LOCAL_STORAGE_KEYS.SHOW_TESTNETS, false);\n  const [queryParams] = useSearchParams();\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    if (!isAccountsLoading && !isAccountsFetching && accounts) {\n      const accountId = queryParams.get('accountId');\n\n      if (accountId && !accounts?.includes(accountId)) {\n        queryParams.set('accountId', accounts[0]);\n        navigate({ pathname, search: accounts[0] ? queryParams.toString() : '' });\n      }\n    }\n  }, [accounts, isAccountsLoading, isAccountsFetching, queryParams, navigate, pathname]);\n\n  useEffect(() => {\n    // Check if wallet preference is stored in local storage\n    if (!walletsInfo) {\n      const defaultWallet = localStorage.getItem('connectedWallets');\n\n      if (defaultWallet) {\n        connect({\n          autoSelect: { disableModals: true, label: JSON.parse(defaultWallet) },\n        });\n      }\n    }\n\n    if (walletsInfo) {\n      // store in local storage\n      localStorage.setItem('connectedWallets', JSON.stringify(walletsInfo.label));\n    }\n  }, [walletsInfo, connect, navigate, pathname]);\n\n  useEffect(() => {\n    const accountId = queryParams.get('accountId');\n    if (!accountId && !!accounts?.length) {\n      queryParams.set('accountId', accounts[0]);\n      navigate({ pathname, search: queryParams.toString() });\n    }\n  }, [accounts, navigate, pathname, queryParams]);\n\n  const onDisconnect = () => {\n    if (walletsInfo) {\n      disconnect(walletsInfo);\n      localStorage.removeItem('connectedWallets');\n    }\n  };\n\n  const notConnected = !activeWallet;\n  const notSupported = activeWallet && !activeNetwork;\n\n  return (\n    <Flex>\n      <Menu>\n        <MenuButton\n          as={Button}\n          variant=\"outline\"\n          colorScheme=\"gray\"\n          sx={{ '> span': { display: 'flex', alignItems: 'center' } }}\n          mr={1}\n          data-cy=\"account-menu-button\"\n          px={3}\n        >\n          <NetworkIcon networkId={notConnected ? 8453 : notSupported ? 0 : activeNetwork?.id} />\n        </MenuButton>\n        <MenuList>\n          {NETWORKS.map(({ id, preset, label, isTestnet }) => {\n            if (isTestnet && !showTestnets) return null;\n            return (\n              <MenuItem key={`${id}-${preset}`} onClick={() => setNetwork(id)}>\n                <NetworkIcon networkId={id} />\n                <Text variant=\"nav\" ml={2}>\n                  {label}\n                </Text>\n              </MenuItem>\n            );\n          })}\n          <MenuOptionGroup>\n            <Flex py={4} px={3} alignItems=\"center\" justifyContent=\"space-between\">\n              <Text fontSize=\"14px\" fontFamily=\"heading\" lineHeight=\"20px\">\n                Show Testnets\n              </Text>\n              <Switch\n                mr={2}\n                size=\"sm\"\n                color=\"gray.900\"\n                colorScheme=\"gray\"\n                isChecked={showTestnets}\n                onChange={() => setShowTestnets(!showTestnets)}\n              />\n            </Flex>\n          </MenuOptionGroup>\n        </MenuList>\n      </Menu>\n      {activeWallet ? (\n        <Menu placement=\"bottom-end\">\n          <MenuButton\n            as={Button}\n            variant=\"outline\"\n            colorScheme=\"gray\"\n            ml={2}\n            height={10}\n            py=\"6px\"\n            px=\"9.5px\"\n            whiteSpace=\"nowrap\"\n            data-cy=\"header-wallet-address-button\"\n          >\n            <WalletIcon color=\"white\" />\n            <Text\n              as=\"span\"\n              ml={1}\n              color=\"white\"\n              fontWeight={700}\n              fontSize=\"xs\"\n              userSelect=\"none\"\n              data-cy=\"header-wallet-address-display\"\n            >\n              {activeWallet.ens?.name || prettyString(activeWallet.address)}\n            </Text>\n          </MenuButton>\n          <MenuList>\n            <Flex\n              border=\"1px solid\"\n              rounded=\"base\"\n              borderColor=\"gray.900\"\n              w=\"370px\"\n              _hover={{ bg: 'navy.700' }}\n              backgroundColor=\"navy.700\"\n              opacity={1}\n              p=\"4\"\n            >\n              <Flex flexDir=\"column\" w=\"100%\" gap=\"2\">\n                <Flex justifyContent=\"space-between\">\n                  <Text fontSize=\"14px\" color=\"gray.500\">\n                    Connected with {walletsInfo?.label}\n                  </Text>\n                  <Button\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      onDisconnect();\n                    }}\n                    size=\"xs\"\n                    variant=\"outline\"\n                    colorScheme=\"gray\"\n                    color=\"white\"\n                  >\n                    Disconnect\n                  </Button>\n                </Flex>\n                <Text fontWeight={700} color=\"white\" fontSize=\"16px\">\n                  {prettyString(activeWallet.address)}{' '}\n                  <Tooltip label={toolTipLabel} closeOnClick={false}>\n                    <CopyIcon\n                      ml=\"2\"\n                      onClick={() => {\n                        navigator.clipboard.writeText(activeWallet.address);\n                        setTooltipLabel('Copied');\n                        setTimeout(() => {\n                          setTooltipLabel('Copy');\n                        }, 10000);\n                      }}\n                    />\n                  </Tooltip>\n                </Text>\n                <Flex\n                  flexDir=\"column\"\n                  p=\"2\"\n                  border=\"1px solid\"\n                  borderColor=\"gray.900\"\n                  rounded=\"base\"\n                  gap=\"2\"\n                >\n                  <Flex w=\"100%\" justifyContent=\"space-between\">\n                    <Text fontWeight={400} fontSize=\"14px\">\n                      Account(s)\n                    </Text>\n                    <Link href=\"/#/account/settings\">\n                      <IconButton\n                        variant=\"outline\"\n                        colorScheme=\"gray\"\n                        size=\"xs\"\n                        icon={<SettingsIcon />}\n                        aria-label=\"account settings\"\n                      />\n                    </Link>\n                  </Flex>\n                  <Flex data-cy=\"header-account-list\" flexDir=\"column\">\n                    {accounts?.map((account) => (\n                      <Text\n                        key={account}\n                        display=\"flex\"\n                        alignItems=\"center\"\n                        color=\"white\"\n                        fontWeight={700}\n                        fontSize=\"16px\"\n                        cursor=\"pointer\"\n                        p=\"3\"\n                        data-cy={`account-${account}`}\n                        _hover={{ bg: 'whiteAlpha.300' }}\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          queryParams.set('accountId', account);\n                          navigate({ pathname, search: queryParams.toString() });\n                        }}\n                      >\n                        #{prettyString(account, 4, 4)}\n                        {queryParams.get('accountId') === account && (\n                          <Badge ml={2} colorScheme=\"cyan\" variant=\"outline\">\n                            Connected\n                          </Badge>\n                        )}\n                      </Text>\n                    ))}\n                  </Flex>\n\n                  <Button\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      mutation.mutate();\n                    }}\n                    size=\"xs\"\n                    variant=\"outline\"\n                    colorScheme=\"gray\"\n                    color=\"white\"\n                    leftIcon={\n                      <svg\n                        width=\"8\"\n                        height=\"8\"\n                        viewBox=\"0 0 8 8\"\n                        fill=\"none\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                      >\n                        <path\n                          d=\"M3.5 3.5V0.5H4.5V3.5H7.5V4.5H4.5V7.5H3.5V4.5H0.5V3.5H3.5Z\"\n                          fill=\"white\"\n                        />\n                      </svg>\n                    }\n                    w=\"130px\"\n                    data-cy=\"create-new-account-menu-item\"\n                  >\n                    Create Account\n                  </Button>\n                </Flex>\n              </Flex>\n            </Flex>\n          </MenuList>\n        </Menu>\n      ) : (\n        <Button\n          data-cy=\"header-connect-wallet\"\n          onClick={() => connect()}\n          type=\"button\"\n          size=\"sm\"\n          ml={2}\n          py={5}\n        >\n          Connect Wallet\n        </Button>\n      )}\n    </Flex>\n  );\n}\n","export function stringToHash(s: string | undefined) {\n  return (s || '').split('').reduce(function (a, b) {\n    a = (a << 5) - a + b.charCodeAt(0);\n    return a & a;\n  }, 0);\n}\n","import { stringToHash } from '@snx-v3/tsHelpers';\nimport { useDefaultProvider, useNetwork } from '@snx-v3/useBlockchain';\nimport { useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useGetUSDTokens } from '@snx-v3/useGetUSDTokens';\nimport { erc7412Call } from '@snx-v3/withERC7412';\nimport { Wei, wei } from '@synthetixio/wei';\nimport { useQuery } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\nimport { useAllCollateralPriceUpdates } from '../useCollateralPriceUpdates';\n\nexport type AccountCollateralType = {\n  tokenAddress: string;\n  availableCollateral: Wei;\n  totalAssigned: Wei;\n  totalDeposited: Wei;\n  totalLocked: Wei;\n  symbol: string;\n  displaySymbol: string;\n};\n\nexport const loadAccountCollateral = async ({\n  accountId,\n  tokenAddresses,\n  CoreProxy,\n}: {\n  accountId: string;\n  tokenAddresses: string[];\n  CoreProxy: ethers.Contract;\n}) => {\n  const callsP = tokenAddresses.flatMap((tokenAddress) => [\n    CoreProxy.populateTransaction.getAccountAvailableCollateral(accountId, tokenAddress),\n    CoreProxy.populateTransaction.getAccountCollateral(accountId, tokenAddress),\n  ]);\n  const calls = await Promise.all(callsP);\n  const decoder = (multicallEncoded: string | string[]) => {\n    if (!Array.isArray(multicallEncoded)) throw Error('Expected array');\n    return tokenAddresses.map((tokenAddress, i) => {\n      const [availableCollateral] = CoreProxy.interface.decodeFunctionResult(\n        'getAccountAvailableCollateral',\n        multicallEncoded[i * 2]\n      );\n      const { totalAssigned, totalDeposited, totalLocked } =\n        CoreProxy.interface.decodeFunctionResult(\n          'getAccountCollateral',\n          multicallEncoded[i * 2 + 1]\n        );\n      return {\n        tokenAddress,\n        availableCollateral: wei(availableCollateral),\n        totalAssigned: wei(totalAssigned),\n        totalDeposited: wei(totalDeposited),\n        totalLocked: wei(totalLocked),\n        symbol: '',\n        displaySymbol: '',\n      };\n    });\n  };\n  return { decoder, calls };\n};\n\nexport type AccountCollateralWithSymbol = AccountCollateralType & { symbol: string };\n\nexport function useAccountCollateral({\n  accountId,\n  includeDelegationOff,\n}: {\n  accountId?: string;\n  includeDelegationOff?: boolean;\n}) {\n  const { data: CoreProxy } = useCoreProxy();\n  const { network } = useNetwork();\n  const collateralTypes = useCollateralTypes(includeDelegationOff);\n  const { data: USDTokens } = useGetUSDTokens();\n\n  const provider = useDefaultProvider();\n  const { data: priceUpdateTx } = useAllCollateralPriceUpdates();\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'AccountCollateral',\n      { accountId },\n      { tokens: JSON.stringify(USDTokens), priceUpdateTx: stringToHash(priceUpdateTx?.data) },\n    ],\n    enabled: Boolean(CoreProxy && accountId && USDTokens?.snxUSD),\n    queryFn: async function () {\n      if (!CoreProxy || !accountId || !network || !provider || !USDTokens || !USDTokens?.snxUSD) {\n        throw 'useAccountCollateral should be disabled';\n      }\n      const tokenAddresses =\n        collateralTypes.data?.map((c) => c.tokenAddress).concat(USDTokens.snxUSD) ?? [];\n      const { calls, decoder } = await loadAccountCollateral({\n        accountId,\n        tokenAddresses,\n        CoreProxy,\n      });\n      const allCalls = [...calls];\n      if (priceUpdateTx) {\n        allCalls.unshift(priceUpdateTx as any);\n      }\n\n      const data = await erc7412Call(network, provider, calls, decoder, 'useAccountCollateral');\n\n      return data.map((x) => ({\n        ...x,\n        symbol:\n          collateralTypes.data?.find((c) => c.tokenAddress === x.tokenAddress)?.symbol ?? 'sUSD',\n        displaySymbol:\n          collateralTypes.data?.find((c) => c.tokenAddress === x.tokenAddress)?.displaySymbol ??\n          'snxUSD',\n      }));\n    },\n  });\n}\n\nexport function useAccountSpecificCollateral(accountId?: string, collateralAddress?: string) {\n  const { data: CoreProxy } = useCoreProxy();\n  const { network } = useNetwork();\n  const provider = useDefaultProvider();\n  const { data: priceUpdateTx } = useAllCollateralPriceUpdates();\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'AccountSpecificCollateral',\n      { accountId },\n      { token: collateralAddress, priceUpdateTx: stringToHash(priceUpdateTx?.data) },\n    ],\n    enabled: Boolean(CoreProxy && accountId && collateralAddress),\n    queryFn: async function () {\n      if (!CoreProxy || !accountId || !collateralAddress || !network || !provider) {\n        throw 'useAccountSpecificCollateral should not be enabled';\n      }\n      const { calls, decoder } = await loadAccountCollateral({\n        accountId,\n        tokenAddresses: [collateralAddress],\n        CoreProxy,\n      });\n      const allCalls = [...calls];\n      if (priceUpdateTx) {\n        allCalls.unshift(priceUpdateTx as any);\n      }\n\n      const data = await erc7412Call(\n        network,\n        provider,\n        calls,\n        decoder,\n        'useAccountSpecificCollateral'\n      );\n\n      return data.at(0);\n    },\n  });\n}\n","import { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { stringToHash } from '@snx-v3/tsHelpers';\nimport { useDefaultProvider, useNetwork } from '@snx-v3/useBlockchain';\nimport { useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useGetUSDTokens } from '@snx-v3/useGetUSDTokens';\nimport { erc7412Call } from '@snx-v3/withERC7412';\nimport { ZodBigNumber } from '@snx-v3/zod';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { useQuery } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\nimport { useAllCollateralPriceUpdates } from '../useCollateralPriceUpdates';\n\nconst PriceSchema = ZodBigNumber.transform((x) => wei(x));\n\nexport async function loadPrices({\n  CoreProxy,\n  collateralAddresses,\n}: {\n  CoreProxy: ethers.Contract;\n  collateralAddresses: string[];\n}) {\n  const calls = await Promise.all(\n    collateralAddresses.map((address) => {\n      return CoreProxy.populateTransaction.getCollateralPrice(address);\n    })\n  );\n  if (calls.length === 0) return { calls: [], decoder: () => [] };\n\n  const decoder = (multicallEncoded: string | string[]) => {\n    if (Array.isArray(multicallEncoded)) {\n      return multicallEncoded.map((encoded) => {\n        const pricesEncoded = CoreProxy.interface.decodeFunctionResult(\n          'getCollateralPrice',\n          encoded\n        )[0];\n\n        return PriceSchema.parse(pricesEncoded);\n      });\n    } else {\n      const pricesEncoded = CoreProxy.interface.decodeFunctionResult(\n        'getCollateralPrice',\n        multicallEncoded\n      )[0];\n      return PriceSchema.parse(pricesEncoded);\n    }\n  };\n  return { calls, decoder };\n}\n\nexport const useCollateralPrices = () => {\n  const { network } = useNetwork();\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: collateralData } = useCollateralTypes();\n  const { data: usdTokens } = useGetUSDTokens();\n\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n\n  const collateralAddresses =\n    isBase && usdTokens?.sUSD\n      ? collateralData?.map((x) => x.tokenAddress).concat(usdTokens.sUSD)\n      : collateralData?.map((x) => x.tokenAddress);\n\n  const provider = useDefaultProvider();\n  const { data: priceUpdateTx } = useAllCollateralPriceUpdates();\n\n  return useQuery({\n    enabled: Boolean(CoreProxy && collateralAddresses && collateralAddresses?.length > 0),\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'CollateralPrices',\n      {\n        collateralAddresses: collateralAddresses?.filter(\n          (item, pos) => collateralAddresses.indexOf(item) === pos\n        ),\n        priceUpdateTx: stringToHash(priceUpdateTx?.data),\n      },\n    ],\n    queryFn: async () => {\n      if (\n        !CoreProxy ||\n        !collateralAddresses ||\n        collateralAddresses.length == 0 ||\n        !network ||\n        !provider\n      ) {\n        throw 'useCollateralPrices missing required data';\n      }\n\n      const { calls, decoder } = await loadPrices({ CoreProxy, collateralAddresses });\n\n      const allCalls = [...calls];\n      if (priceUpdateTx) {\n        allCalls.unshift(priceUpdateTx as any);\n      }\n\n      const prices = await erc7412Call(network, provider, allCalls, decoder, 'useCollateralPrices');\n\n      return collateralAddresses.reduce((acc: Record<string, Wei | undefined>, address, i) => {\n        if (Array.isArray(prices)) {\n          acc[address] = prices[i];\n        } else {\n          acc[address] = prices;\n        }\n        return acc;\n      }, {});\n    },\n  });\n};\n","import { Image, ImageProps } from '@chakra-ui/react';\n\ninterface TokenIconProps extends ImageProps {\n  symbol: string;\n  width?: number;\n  height?: number;\n}\n\nexport const TokenIcon = ({ symbol, width = 30, height = 30, ...props }: TokenIconProps) => {\n  return (\n    <Image\n      src={`https://synthetixio.github.io/synthetix-assets/collateral/${symbol.toUpperCase()}.svg`}\n      alt={symbol}\n      style={{ width, height }}\n      {...props}\n    />\n  );\n};\n","export function numberWithCommas(value: string, decimals?: number) {\n  const parts = value.split('.');\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  const joinedParts = parts.join('.');\n  return decimals ? joinedParts.substring(0, joinedParts.indexOf('.') + decimals + 1) : joinedParts;\n}\n\ninterface Options extends Intl.NumberFormatOptions {\n  locales?: string | string[];\n}\nexport const formatNumberToUsd = (val: number | string, options?: Options) => {\n  const optionsWithDefault = { style: 'currency', currency: 'USD', locales: 'en-EN', ...options };\n  return new Intl.NumberFormat(optionsWithDefault.locales, optionsWithDefault).format(Number(val));\n};\n\nexport const formatNumberToCurrencyBasedOnSize = (val: number | string) => {\n  const num = Number(val);\n  if (num < 0.0001) {\n    return formatNumberToUsd(num, { maximumFractionDigits: 8 });\n  }\n  if (num < 1) {\n    return formatNumberToUsd(num, { maximumFractionDigits: 4 });\n  }\n  return formatNumberToUsd(num, { maximumFractionDigits: 2 });\n};\n\nexport const formatNumber = (value: number | string, options?: Options) => {\n  const optionsWithDefault = {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n    locales: 'en-EN',\n    ...options,\n  };\n  return new Intl.NumberFormat(optionsWithDefault.locales, optionsWithDefault).format(\n    Number(value)\n  );\n};\n\nexport const formatPercent = (value: number | string, options?: Options) => {\n  const optionsWithDefault = {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2,\n    locales: 'en-EN',\n    style: 'percent',\n    ...options,\n  };\n  return new Intl.NumberFormat(optionsWithDefault.locales, optionsWithDefault).format(\n    Number(value)\n  );\n};\n","import { Flex, Td, Tr, Text, Button, Fade, useDisclosure } from '@chakra-ui/react';\nimport { TokenIcon } from '../../TokenIcon';\nimport { formatNumberToUsd, formatNumber } from '@snx-v3/formatters';\nimport Wei from '@synthetixio/wei';\nimport { WithdrawModal } from '../../';\nimport { Tooltip } from '@snx-v3/Tooltip';\nimport { NavLink, generatePath } from 'react-router-dom';\nimport { useTimer } from 'react-timer-hook';\n\ninterface AssetsRowProps {\n  token: string;\n  name: string;\n  walletBalance: number;\n  walletBalance$: number;\n  accountBalance: Wei;\n  accountBalance$: number;\n  delegatedBalance: number;\n  delegatedBalance$: number;\n  unlockDate?: Date;\n  final: boolean; // Used for hiding bottom border\n}\n\nexport const AssetsRow = ({\n  token,\n  name,\n  walletBalance,\n  walletBalance$,\n  accountBalance,\n  accountBalance$,\n  delegatedBalance,\n  delegatedBalance$,\n  unlockDate = new Date(),\n  final,\n}: AssetsRowProps) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const { minutes, hours, isRunning } = useTimer({\n    expiryTimestamp: unlockDate,\n    autoStart: true,\n  });\n\n  return (\n    <Tr borderBottomWidth={final ? 'none' : '1px'}>\n      <Td border=\"none\">\n        <Fade in>\n          <Flex alignItems=\"center\">\n            <TokenIcon symbol={token} />\n            <Flex flexDirection=\"column\" ml={3}>\n              <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n                {token}\n              </Text>\n              <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n                {name}\n              </Text>\n            </Flex>\n          </Flex>\n        </Fade>\n      </Td>\n      <Td border=\"none\">\n        <Fade in>\n          <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n            <Text\n              color=\"white\"\n              fontWeight={700}\n              lineHeight=\"1.25rem\"\n              fontFamily=\"heading\"\n              data-cy=\"asset-list-wallet-balance\"\n            >\n              {formatNumberToUsd(walletBalance$)}\n            </Text>\n            <Text\n              color=\"gray.500\"\n              fontFamily=\"heading\"\n              fontSize=\"0.75rem\"\n              lineHeight=\"1rem\"\n              data-cy=\"asset-wallet-balance\"\n            >\n              {formatNumber(walletBalance)}\n              {` ${token}`}\n            </Text>\n          </Flex>\n        </Fade>\n      </Td>\n      <Td border=\"none\">\n        <Fade in>\n          <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n            <Text\n              color=\"white\"\n              fontWeight={700}\n              lineHeight=\"1.25rem\"\n              fontFamily=\"heading\"\n              data-cy=\"asset-list-account-balance\"\n            >\n              {formatNumberToUsd(accountBalance$)}\n            </Text>\n            <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n              {formatNumber(accountBalance.toNumber())}\n              {` ${token}`}\n            </Text>\n          </Flex>\n        </Fade>\n      </Td>\n      <Td border=\"none\">\n        <Fade in>\n          <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n            <Text\n              color=\"white\"\n              fontWeight={700}\n              lineHeight=\"1.25rem\"\n              fontFamily=\"heading\"\n              data-cy=\"asset-list-delegated-balance\"\n            >\n              {formatNumberToUsd(delegatedBalance$)}\n            </Text>\n            <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n              {formatNumber(delegatedBalance)}\n              {` ${token}`}\n            </Text>\n          </Flex>\n        </Fade>\n      </Td>\n      <Td border=\"none\">\n        <Flex justifyContent=\"space-between\">\n          <Fade in>\n            <Tooltip\n              label={\n                isRunning && accountBalance.gt(0) && `Withdrawal available in ${hours}H ${minutes}M`\n              }\n            >\n              <Button\n                isDisabled={isRunning}\n                variant=\"unstyled\"\n                fontSize=\"0.75rem\"\n                lineHeight=\"1rem\"\n                height=\"1.75rem\"\n                w=\"100%\"\n                px={4}\n                fontWeight={700}\n                borderWidth=\"1px\"\n                borderColor=\"gray.900\"\n                borderRadius=\"4px\"\n                _hover={{ bg: 'gray.900' }}\n                onClick={onOpen}\n              >\n                Withdraw\n              </Button>\n            </Tooltip>\n          </Fade>\n          {/* TODO: Update when multiple pools for USDC LPing available */}\n          <Fade in>\n            <Button\n              as={NavLink}\n              fontSize=\"0.75rem\"\n              lineHeight=\"1rem\"\n              height=\"1.75rem\"\n              w=\"100%\"\n              fontWeight={700}\n              borderWidth=\"1px\"\n              borderColor=\"gray.900\"\n              borderRadius=\"4px\"\n              to={{\n                pathname: generatePath('/positions/:collateralSymbol/:poolId', {\n                  poolId: '1',\n                  collateralSymbol: 'USDC',\n                }),\n                search: location.search,\n              }}\n              data-cy=\"assets-deposit-button\"\n            >\n              Deposit\n            </Button>\n          </Fade>\n        </Flex>\n        <WithdrawModal isOpen={isOpen} onClose={onClose} />\n      </Td>\n    </Tr>\n  );\n};\n","import { InfoIcon } from '@chakra-ui/icons';\nimport { Thead, Tr, Th, Flex, Text } from '@chakra-ui/react';\nimport { Tooltip } from '@snx-v3/Tooltip';\n\nexport const AssetTableHeader = () => {\n  return (\n    <Thead>\n      <Tr>\n        <Th\n          py={5}\n          textTransform=\"unset\"\n          color=\"gray.600\"\n          border=\"none\"\n          fontFamily=\"heading\"\n          fontSize=\"12px\"\n          lineHeight=\"16px\"\n        >\n          Asset\n        </Th>\n        <Th border=\"none\" textTransform=\"unset\" py={5}>\n          <Flex justifyContent=\"flex-end\" alignItems=\"center\">\n            <Text color=\"gray.600\" fontFamily=\"heading\" fontSize=\"12px\" lineHeight=\"16px\" mr={1}>\n              Wallet Balance{' '}\n            </Text>\n            <Tooltip\n              label={\n                <>\n                  <Text fontWeight={600} textAlign=\"left\">\n                    Wallet Balance:\n                  </Text>\n                  <Text textAlign=\"left\" mt={1}>\n                    Assets currently in your Wallet that can be deposited in your Synthetix Account.\n                  </Text>\n                  <Text textAlign=\"left\" mt={1}>\n                    Note: Assets on your Account will not show on your Wallet.\n                  </Text>\n                </>\n              }\n            >\n              <InfoIcon w=\"10px\" h=\"10px\" />\n            </Tooltip>\n          </Flex>\n        </Th>\n        <Th border=\"none\" textTransform=\"unset\" py={5}>\n          <Flex justifyContent=\"flex-end\" alignItems=\"center\">\n            <Text color=\"gray.600\" fontFamily=\"heading\" fontSize=\"12px\" lineHeight=\"16px\" mr={1}>\n              Account Available\n            </Text>\n            <Tooltip\n              label={\n                <>\n                  <Text fontWeight={600} textAlign=\"left\">\n                    Account Available:\n                  </Text>\n                  <Text textAlign=\"left\" mt={1}>\n                    Assets deposited in your Synthetix Account. These assets are available to be\n                    delegated to a pool.\n                  </Text>\n                </>\n              }\n            >\n              <InfoIcon w=\"10px\" h=\"10px\" />\n            </Tooltip>\n          </Flex>\n        </Th>\n        <Th border=\"none\" textTransform=\"unset\" py={5}>\n          <Flex justifyContent=\"flex-end\" alignItems=\"center\">\n            <Text color=\"gray.600\" fontFamily=\"heading\" fontSize=\"12px\" lineHeight=\"16px\" mr={1}>\n              Delegated\n            </Text>\n            <Tooltip\n              label={\n                <>\n                  <Text fontWeight={600} textAlign=\"left\">\n                    Account Delegated Assets:\n                  </Text>\n                  <Text textAlign=\"left\" mt={1}>\n                    Assets used as collateral in a Position.\n                  </Text>\n                </>\n              }\n            >\n              <InfoIcon w=\"10px\" h=\"10px\" />\n            </Tooltip>\n          </Flex>\n        </Th>\n        <Th\n          py={5}\n          textTransform=\"unset\"\n          color=\"gray.600\"\n          border=\"none\"\n          fontFamily=\"heading\"\n          fontSize=\"12px\"\n          lineHeight=\"16px\"\n        >\n          {' '}\n        </Th>\n      </Tr>\n    </Thead>\n  );\n};\n","import { InfoIcon } from '@chakra-ui/icons';\nimport {\n  TableContainer,\n  Table,\n  Heading,\n  Flex,\n  Tbody,\n  Td,\n  Tr,\n  Text,\n  Button,\n} from '@chakra-ui/react';\nimport { AssetsRow } from './AssetsRow';\nimport { AssetTableHeader } from './AssetTableHeader';\nimport { useWallet } from '@snx-v3/useBlockchain';\nimport { AssetRowLoading, AssetsEmpty } from '.';\nimport { Asset } from '../../../utils/assets';\nimport { Tooltip } from '@snx-v3/Tooltip';\n\ninterface AssetsTableProps {\n  isLoading: boolean;\n  assets?: Asset[];\n  unlockDate: Date | undefined;\n}\n\nexport const AssetsTable = ({ isLoading, assets, unlockDate }: AssetsTableProps) => {\n  const { activeWallet, connect } = useWallet();\n\n  return (\n    <TableContainer\n      maxW=\"100%\"\n      mt={4}\n      borderColor=\"gray.900\"\n      borderWidth=\"1px\"\n      borderRadius=\"5px\"\n      p={6}\n      sx={{\n        borderCollapse: 'separate !important',\n        borderSpacing: 0,\n      }}\n      bg=\"navy.700\"\n    >\n      <Flex alignItems=\"center\">\n        <Heading fontSize=\"18px\" fontWeight={700} lineHeight=\"28px\" color=\"gray.50\">\n          Assets\n        </Heading>\n        <Tooltip\n          label={\n            <>\n              <Text fontWeight={600} textAlign=\"left\">\n                Assets:\n              </Text>\n              <Text textAlign=\"left\" mt={1}>\n                All assets used on Synthetix Protocol. As a security precaution, all assets can only\n                be withdrawn to your wallet after 24hs since your previous account activity\n              </Text>\n            </>\n          }\n          p=\"3\"\n        >\n          <InfoIcon w=\"10px\" h=\"10px\" ml={2} />\n        </Tooltip>\n      </Flex>\n      {/* Not connected state */}\n      {!activeWallet?.address ? (\n        <Flex w=\"100%\" justifyContent=\"space-between\">\n          <Text color=\"gray.500\" fontWeight={500} fontSize=\"14px\" mt=\"4\" pl=\"3\">\n            Please connect wallet to view assets\n          </Text>\n          <Button\n            data-cy=\"connect-button-asset-table\"\n            size=\"sm\"\n            onClick={() => {\n              connect();\n            }}\n          >\n            Connect Wallet\n          </Button>\n        </Flex>\n      ) : // Empty State\n      assets && assets.length === 0 && !isLoading ? (\n        <AssetsEmpty />\n      ) : (\n        <Table variant=\"simple\">\n          <AssetTableHeader />\n          <Tbody>\n            <Tr border=\"none\" borderTop=\"1px\" borderTopColor=\"gray.900\" width=\"100%\" height=\"0px\">\n              <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={5} />\n              <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={5} />\n              <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={5} />\n              <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={5} />\n              <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={5} />\n            </Tr>\n            {isLoading || !assets ? (\n              <>\n                <AssetRowLoading />\n                <AssetRowLoading final />\n              </>\n            ) : (\n              <>\n                {assets?.map((asset, index) => {\n                  const { collateral, balance, price } = asset;\n                  return (\n                    <AssetsRow\n                      key={collateral.tokenAddress\n                        .concat(collateral?.symbol || index.toString())\n                        .concat(index.toString())}\n                      token={collateral.symbol || ''}\n                      name={collateral.displaySymbol || ''}\n                      walletBalance={balance!.toNumber()}\n                      walletBalance$={balance.mul(price).toNumber()}\n                      accountBalance={collateral.availableCollateral}\n                      accountBalance$={collateral.availableCollateral.mul(price).toNumber()}\n                      delegatedBalance={collateral.totalAssigned.toNumber()}\n                      delegatedBalance$={collateral.totalAssigned.mul(price).toNumber()}\n                      unlockDate={unlockDate}\n                      final={index === assets.length - 1}\n                    />\n                  );\n                })}\n              </>\n            )}\n          </Tbody>\n        </Table>\n      )}\n    </TableContainer>\n  );\n};\n","import { Skeleton, SkeletonCircle, SkeletonProps } from '@chakra-ui/react';\n\ninterface SynthSkeletonProps extends SkeletonProps {\n  children: React.ReactNode;\n}\n\nexport const SynthSkeleton = ({ children, ...props }: SynthSkeletonProps) => {\n  return (\n    <Skeleton startColor=\"gray.700\" endColor=\"navy.800\" {...props}>\n      {children}\n    </Skeleton>\n  );\n};\n\nexport const SynthCircle = ({ children, ...props }: SkeletonProps) => {\n  return (\n    <SkeletonCircle startColor=\"gray.700\" endColor=\"navy.800\" {...props}>\n      {children}\n    </SkeletonCircle>\n  );\n};\n","import { Tr, Td, Flex, Button, Text } from '@chakra-ui/react';\nimport { SynthSkeleton as Skeleton, SynthCircle as SkeletonCircle } from '../../SynthSkeleton';\nimport { TokenIcon } from '../../TokenIcon';\n\nexport const AssetRowLoading = ({ final }: { final?: boolean }) => {\n  return (\n    <Tr borderBottomWidth={final ? 'none' : '1px'}>\n      <Td border=\"none\">\n        <Flex alignItems=\"center\">\n          <SkeletonCircle>\n            <TokenIcon symbol=\"SNX\" />\n          </SkeletonCircle>\n          <Flex flexDirection=\"column\" ml={3}>\n            <Skeleton height=\"1rem\" width=\"40%\" mb={1}>\n              <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n                SNX\n              </Text>\n            </Skeleton>\n            <Skeleton height=\"0.75rem\" width=\"70%\">\n              <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n                Synthetix Network Token\n              </Text>\n            </Skeleton>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td border=\"none\">\n        <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n          <Skeleton height=\"1rem\" width=\"40%\" mb={1}>\n            <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n              $1,500.00\n            </Text>\n          </Skeleton>\n          <Skeleton height=\"0.75rem\" width=\"70%\">\n            <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n              750.00 SNX\n            </Text>\n          </Skeleton>\n        </Flex>\n      </Td>\n      <Td border=\"none\">\n        <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n          <Skeleton height=\"1rem\" width=\"40%\" mb={1}>\n            <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n              $2,000.00\n            </Text>\n          </Skeleton>\n          <Skeleton height=\"0.75rem\" width=\"70%\">\n            <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n              1,000.00 SNX\n            </Text>\n          </Skeleton>\n        </Flex>\n      </Td>\n      <Td border=\"none\">\n        <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n          <Skeleton height=\"1rem\" width=\"40%\" mb={1}>\n            <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n              $2,000.00\n            </Text>\n          </Skeleton>\n          <Skeleton height=\"0.75rem\" width=\"70%\">\n            <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n              1,000.00 SNX\n            </Text>\n          </Skeleton>\n        </Flex>\n      </Td>\n      <Td border=\"none\">\n        <Flex flexDirection=\"column\">\n          <Button\n            variant=\"unstyled\"\n            fontSize=\"0.75rem\"\n            lineHeight=\"1rem\"\n            height=\"1.75rem\"\n            fontWeight={700}\n            borderWidth=\"1px\"\n            borderColor=\"gray.900\"\n            borderRadius=\"4px\"\n            disabled\n          >\n            Withdraw\n          </Button>\n        </Flex>\n      </Td>\n    </Tr>\n  );\n};\n","import { Flex, Text } from '@chakra-ui/react';\n\nexport const AssetsEmpty = () => {\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"baseline\" w=\"100%\">\n      <Text color=\"gray.500\" fontWeight={500} fontSize=\"14px\" my=\"4\" pl=\"3\">\n        No collateral configured for this chain.\n      </Text>\n    </Flex>\n  );\n};\n","import { AccountCollateralType } from '@snx-v3/useAccountCollateral';\nimport { CollateralType } from '@snx-v3/useCollateralTypes';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { ONEWEI, ZEROWEI } from './constants';\n\nexport interface Asset {\n  collateral: AccountCollateralType;\n  balance: Wei;\n  price: Wei | undefined;\n}\n\nexport function calculateAssets(\n  accountCollaterals?: AccountCollateralType[],\n  associatedUserBalances?:\n    | {\n        balance: Wei;\n        tokenAddress: string;\n      }[]\n    | undefined,\n  collateralPrices?: Record<string, Wei | undefined>,\n  collateralTypes?: CollateralType[],\n  isBase?: boolean,\n  USDCAddress?: string\n): Asset[] | undefined {\n  if (!accountCollaterals && !associatedUserBalances && !collateralPrices) return;\n\n  // Empty state\n  if (collateralTypes && !accountCollaterals) {\n    // Because we are mapping over collateral types we need to convert sUSDC symbol to USDC\n    return collateralTypes.map((collateral) => {\n      if (isBase && collateral.symbol === 'USDC') {\n        return {\n          collateral: {\n            ...collateral,\n            availableCollateral: ZEROWEI,\n            totalDeposited: ZEROWEI,\n            totalAssigned: ZEROWEI,\n            totalLocked: ZEROWEI,\n          },\n          balance: associatedUserBalances\n            ? associatedUserBalances.find(\n                (balance) => balance.tokenAddress === collateral.tokenAddress\n              )?.balance || ZEROWEI\n            : ZEROWEI,\n          price: ONEWEI,\n        };\n      }\n\n      return {\n        collateral: {\n          tokenAddress: collateral.tokenAddress,\n          symbol: collateral.symbol,\n          displaySymbol: collateral.displaySymbol,\n          availableCollateral: ZEROWEI,\n          totalDeposited: ZEROWEI,\n          totalAssigned: ZEROWEI,\n          totalLocked: ZEROWEI,\n        },\n        balance: ZEROWEI,\n        price: ZEROWEI,\n      };\n    });\n  }\n\n  if (associatedUserBalances && collateralPrices) {\n    return accountCollaterals?.map((collateral) => {\n      let balance =\n        associatedUserBalances.find((item) => item.tokenAddress === collateral.tokenAddress)\n          ?.balance || wei(0);\n      const price = collateralPrices[collateral.tokenAddress] ?? ONEWEI;\n\n      // ANDROMEDA CASE\n      if (isBase && collateral.symbol === 'USDC') {\n        // We also want to show the USDC balance, not the sUSDC balance\n        balance =\n          associatedUserBalances.find((balance) => balance.tokenAddress === USDCAddress)?.balance ||\n          wei(0);\n      }\n\n      return {\n        collateral,\n        balance,\n        price,\n      };\n    });\n  }\n}\n\nexport function calculateTotalAssets(assets?: Asset[]) {\n  return assets\n    ?.map((asset) => {\n      const assigned = asset.collateral.totalAssigned.mul(asset.price);\n      const deposited = asset.collateral.totalDeposited.mul(asset.price);\n      const wallet = asset.balance.mul(asset.price);\n      // if already assigned to pool, we dont add it\n      return assigned !== deposited ? assigned.add(wallet) : assigned.add(wallet).add(deposited);\n    })\n    .reduce((prev, cur) => prev.add(cur), ZEROWEI)\n    .toNumber()\n    .toFixed(2);\n}\n\nexport function calculateTotalAssetsDelegated(assets?: Asset[]) {\n  return assets\n    ?.map((asset) => asset.collateral.totalAssigned.mul(asset.price))\n    .reduce((prev, cur) => prev.add(cur), ZEROWEI)\n    .toNumber()\n    .toFixed(2);\n}\n\nexport function calculateTotalAssetsAvailable(assets?: Asset[]) {\n  return assets\n    ?.map((asset) => {\n      const assigned = asset.collateral.availableCollateral;\n      const wallet = asset.balance.mul(asset.price);\n      return assigned.add(wallet);\n    })\n    .reduce((prev, cur) => prev.add(cur), ZEROWEI)\n    .toNumber()\n    .toFixed(2);\n}\n","import { useMemo } from 'react';\nimport { useAccountCollateral } from '@snx-v3/useAccountCollateral';\nimport { useCollateralPrices } from '@snx-v3/useCollateralPrices';\nimport { useTokenBalances } from '@snx-v3/useTokenBalance';\nimport { useSearchParams } from 'react-router-dom';\nimport { AssetsTable } from './AssetTable';\nimport { calculateAssets } from '../../utils/assets';\nimport { useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { useAccountCollateralUnlockDate } from '@snx-v3/useAccountCollateralUnlockDate';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useGetUSDTokens } from '@snx-v3/useGetUSDTokens';\n\nexport const AssetsList = () => {\n  const [params] = useSearchParams();\n  const { network } = useNetwork();\n  const accountId = params.get('accountId') || undefined;\n\n  const { data: accountCollaterals, isLoading: isAccountCollateralsLoading } = useAccountCollateral(\n    {\n      accountId,\n    }\n  );\n  const { data: usdTokens } = useGetUSDTokens();\n\n  const collateralAddresses =\n    isBaseAndromeda(network?.id, network?.preset) && usdTokens?.USDC\n      ? accountCollaterals\n        ? accountCollaterals\n            ?.map((collateral) => collateral.tokenAddress)\n            .concat(usdTokens?.USDC) || []\n        : [usdTokens?.USDC]\n      : accountCollaterals?.map((collateral) => collateral.tokenAddress) || [];\n\n  const { data: userTokenBalances, isLoading: tokenBalancesIsLoading } =\n    useTokenBalances(collateralAddresses);\n\n  const associatedUserBalances = userTokenBalances?.map((balance, index) => {\n    return {\n      balance,\n      tokenAddress: collateralAddresses[index],\n    };\n  });\n\n  const { data: collateralPrices, isLoading: isCollateralPricesLoading } = useCollateralPrices();\n\n  const { data: collateralTypes, isLoading: isCollateralTypesLoading } = useCollateralTypes();\n\n  const { data: accountCollateralUnlockDate, isLoading: isAccountCollateralDateLoading } =\n    useAccountCollateralUnlockDate({\n      accountId,\n    });\n\n  const combinedCollateral = useMemo(() => {\n    return accountCollaterals &&\n      accountCollaterals[0] &&\n      isBaseAndromeda(network?.id, network?.preset)\n      ? [\n          accountCollaterals?.reduce((cur, prev, index) => {\n            //ignore the first iteration cause we are starting witht the first index of the\n            // array as a default\n            if (!index) return cur;\n            return {\n              ...cur,\n              availableCollateral: cur.availableCollateral.add(prev.availableCollateral),\n            };\n          }, accountCollaterals[0]),\n        ]\n      : accountCollaterals;\n  }, [accountCollaterals, network?.id, network?.preset]);\n\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n\n  const assets = useMemo(\n    () =>\n      calculateAssets(\n        combinedCollateral,\n        associatedUserBalances,\n        collateralPrices,\n        collateralTypes,\n        isBase,\n        usdTokens?.USDC\n      ),\n    [\n      combinedCollateral,\n      associatedUserBalances,\n      collateralPrices,\n      collateralTypes,\n      isBase,\n      usdTokens?.USDC,\n    ]\n  );\n\n  const isLoading =\n    isAccountCollateralsLoading ||\n    tokenBalancesIsLoading ||\n    isCollateralPricesLoading ||\n    isCollateralTypesLoading ||\n    isAccountCollateralDateLoading;\n\n  return (\n    <AssetsTable isLoading={isLoading} assets={assets} unlockDate={accountCollateralUnlockDate} />\n  );\n};\n","import { ethers } from 'ethers';\nimport { useQuery } from '@tanstack/react-query';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useNetwork } from '@snx-v3/useBlockchain';\n\nexport function useAccountCollateralUnlockDate({ accountId }: { accountId?: string }) {\n  const { data: CoreProxy } = useCoreProxy();\n  const { network } = useNetwork();\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'AccountCollateralUnlockDate', { accountId }],\n    enabled: Boolean(CoreProxy && accountId),\n    queryFn: async function () {\n      if (!CoreProxy || !accountId) throw new Error('Core Proxy or account id is not defined');\n\n      const [lastInteraction, accountTimeoutWithdraw] = await Promise.all([\n        CoreProxy.getAccountLastInteraction(accountId),\n        CoreProxy.getConfigUint(ethers.utils.formatBytes32String('accountTimeoutWithdraw')),\n      ]);\n\n      const collateralUnlock = lastInteraction.add(accountTimeoutWithdraw);\n\n      return new Date(collateralUnlock.toNumber() * 1000);\n    },\n  });\n}\n","import { Alert, AlertIcon, AlertProps, Link, Text } from '@chakra-ui/react';\nimport Wei from '@synthetixio/wei';\n\ninterface CollateralAlertProps extends AlertProps {\n  tokenBalance: Wei;\n}\n\nexport const CollateralAlert = ({ tokenBalance, ...props }: CollateralAlertProps) => {\n  return (\n    <Alert borderLeftColor=\"cyan.500\" borderRadius=\"6px\" {...props}>\n      <AlertIcon color=\"cyan.500\" />\n      <Text color=\"white\" fontFamily=\"heading\" fontSize=\"16px\" lineHeight=\"24px\">\n        You have a {tokenBalance.toString(2)} SNX active staking position on V2. You&lsquo;ll need\n        to unstake on V2 before being able to deposit on V3.{' '}\n        <Link textDecor=\"underline\" href=\"https://staking.synthetix.io/\" target=\"_blank\">\n          Go to V2\n        </Link>\n      </Text>\n    </Alert>\n  );\n};\n","import { Flex, FlexProps } from '@chakra-ui/react';\n\nexport const BorderBox = (props: FlexProps) => (\n  <Flex bg=\"navy.700\" borderWidth=\"1px\" borderColor=\"gray.900\" borderRadius=\"base\" {...props} />\n);\n","export function etherscanLink({\n  chain,\n  address,\n  isTx = false,\n}: {\n  chain: string;\n  address: string;\n  isTx?: boolean;\n}): string {\n  switch (chain) {\n    case 'sepolia':\n      return `https://sepolia.etherscan.io/${isTx ? 'tx' : 'address'}/${address}`;\n    case 'arbitrum':\n      return `https://arbiscan.io/${isTx ? 'tx' : 'address'}/${address}`;\n    case 'optimism':\n      return `https://optimistic.etherscan.io/${isTx ? 'tx' : 'address'}/${address}`;\n    case 'base':\n      return `https://basescan.org/${isTx ? 'tx' : 'address'}/${address}`;\n    case 'base-sepolia':\n      return `https://sepolia.basescan.org/${isTx ? 'tx' : 'address'}/${address}`;\n    case 'mainnet':\n    default:\n      return `https://etherscan.io/${isTx ? 'tx' : 'address'}/${address}`;\n  }\n}\n","import { CheckIcon, CloseIcon } from '@chakra-ui/icons';\nimport {\n  ModalContent,\n  ModalBody,\n  ModalHeader,\n  Modal,\n  Text,\n  Flex,\n  ModalOverlay,\n  CircularProgress,\n  Link,\n  Button,\n} from '@chakra-ui/react';\nimport { useEffect, useState } from 'react';\nimport { etherscanLink } from '@snx-v3/etherscanLink';\nimport { useNetwork } from '@snx-v3/useBlockchain';\n\ninterface RewardsModalInterface {\n  collateralSymbol?: string;\n  amount?: number;\n  txnStatus?: string;\n  txnHash: string | null;\n}\n\nexport const RewardsModal = ({\n  collateralSymbol,\n  amount,\n  txnStatus,\n  txnHash,\n}: RewardsModalInterface) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const { network } = useNetwork();\n\n  useEffect(() => {\n    if (txnStatus === 'prompting') {\n      setIsOpen(true);\n    }\n    if (txnStatus === 'error') {\n      setIsOpen(false);\n    }\n    if (txnStatus === 'success') {\n      setTimeout(() => {\n        setIsOpen(false);\n      }, 1200);\n    }\n  }, [txnStatus]);\n\n  return (\n    <Modal isOpen={isOpen} onClose={() => setIsOpen(false)}>\n      <ModalOverlay bg=\"#06061B80\" />\n      <ModalContent\n        bg=\"navy.700\"\n        mt=\"10%\"\n        borderWidth=\"1px\"\n        borderColor=\"gray.900\"\n        minWidth=\"384px\"\n      >\n        <ModalBody p={4}>\n          <Flex\n            onClick={() => setIsOpen(false)}\n            justifyContent=\"flex-end\"\n            border=\"none\"\n            boxShadow=\"none\"\n            _focus={{ outline: 'none' }}\n          >\n            <CloseIcon _hover={{ cursor: 'pointer' }} />\n          </Flex>\n          <ModalHeader\n            pl={0}\n            py={1}\n            color=\"whiteAlpha.900\"\n            fontSize=\"20px\"\n            fontWeight={700}\n            lineHeight=\"120%\"\n            textAlign=\"left\"\n          >\n            Transaction Pending\n          </ModalHeader>\n          <Text\n            p={3}\n            pl={0}\n            color=\"gray.600\"\n            fontFamily=\"heading\"\n            fontSize=\"12px\"\n            lineHeight=\"150%\"\n            mb={2}\n          >\n            Follow the Metamask prompts to execute the following transactions.\n          </Text>\n          <Flex\n            px={3}\n            py={3}\n            borderRadius=\"5px\"\n            border=\"1px solid\"\n            borderColor={txnStatus === 'success' ? 'green.500' : 'gray.900'}\n          >\n            <Flex\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              borderRadius=\"100px\"\n              bg={txnStatus === 'success' ? 'green.600' : 'gray.900'}\n              width=\"40px\"\n              height=\"40px\"\n              p={3}\n            >\n              {txnStatus === 'success' ? (\n                <CheckIcon color=\"white\" />\n              ) : (\n                <CircularProgress size=\"25px\" isIndeterminate color=\"gray.700\" />\n              )}\n            </Flex>\n            <Flex\n              flexDirection=\"column\"\n              alignItems=\"space-between\"\n              justifyContent=\"space-between\"\n              ml={2}\n            >\n              <Text fontSize=\"14px\" fontWeight={700} lineHeight=\"20px\" color=\"white\">\n                Claiming {amount ? amount : ''} {collateralSymbol ? collateralSymbol : ''}\n              </Text>\n              <Text fontSize=\"12px\" lineHeight=\"16px\" color=\"gray.500\">\n                Claim your rewards\n              </Text>\n            </Flex>\n          </Flex>\n          {txnStatus === 'success' && (\n            <Button\n              mt={5}\n              variant=\"solid\"\n              justifyContent=\"center\"\n              px={3}\n              py={3}\n              width=\"100%\"\n              textAlign=\"center\"\n            >\n              Done\n            </Button>\n          )}\n          {txnHash && (\n            <Flex\n              justifyContent=\"center\"\n              px={3}\n              py={3}\n              mt={6}\n              mb={1}\n              borderTop=\"1px solid\"\n              borderTopColor=\"gray.900\"\n            >\n              <Link\n                variant=\"outline\"\n                href={etherscanLink({ chain: network?.name || '', address: txnHash, isTx: true })}\n                fontFamily=\"heading\"\n                color=\"cyan.500\"\n                fontWeight={700}\n                lineHeight=\"20px\"\n                fontSize=\"14px\"\n                target=\"_blank\"\n                mt={3}\n              >\n                View Transaction\n              </Link>\n            </Flex>\n          )}\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n","import { formatDistanceToNow, intlFormat } from 'date-fns';\n\nexport function convertSecondsToDisplayString(seconds: number) {\n  const secondsInHour = 3600;\n  const secondsInDay = 86400;\n  const secondsInWeek = 604800;\n  const secondsInMonth = 2592000;\n\n  if (seconds === 0) {\n    return null;\n  } else if (seconds % secondsInMonth === 0) {\n    const months = seconds / secondsInMonth;\n    return months === 1 ? 'every month' : `every ${months} months`;\n  } else if (seconds % secondsInWeek === 0) {\n    const weeks = seconds / secondsInWeek;\n    return weeks === 1 ? 'every week' : `every ${weeks} weeks`;\n  } else if (seconds % secondsInDay === 0) {\n    const days = seconds / secondsInDay;\n    return days === 1 ? 'every day' : `every ${days} days`;\n  } else if (seconds % secondsInHour === 0) {\n    const hours = seconds / secondsInHour;\n    return hours === 1 ? 'every hour' : `every ${hours.toFixed(1)} hours`;\n  } else {\n    const hours = seconds / secondsInHour;\n    return `every ${hours.toFixed(1)} hours`;\n  }\n}\n\nexport const formatTimeToUnlock = (accountCollateralUnlockDate: Date | undefined) => {\n  if (!accountCollateralUnlockDate || accountCollateralUnlockDate.getTime() <= Date.now()) {\n    return undefined;\n  }\n  return formatDistanceToNow(accountCollateralUnlockDate, { addSuffix: true });\n};\n\nexport const unlockDateString = (accountCollateralUnlockDate: Date | undefined) => {\n  if (!accountCollateralUnlockDate || accountCollateralUnlockDate.getTime() <= Date.now()) {\n    return undefined;\n  }\n\n  return intlFormat(accountCollateralUnlockDate, {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n  });\n};\n","export const truncateAddress = (address: string, first = 5, last = 5) => {\n  if (address.length <= first + last) {\n    return address;\n  }\n  return `${address.slice(0, first)}...${address.slice(-last)}`;\n};\n\nexport const parseFloatWithCommas = (numberWithCommas: string) =>\n  parseFloat(numberWithCommas.replaceAll(',', ''));\n","import { Flex, Td, Text, Button, Fade, Tr, Link } from '@chakra-ui/react';\nimport { CollateralIcon } from '@snx-v3/icons';\nimport { useClaimRewards } from '@snx-v3/useClaimRewards';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useParams } from '@snx-v3/useParams';\nimport { RewardsModal } from './RewardsModal';\nimport { truncateAddress, convertSecondsToDisplayString } from '@snx-v3/formatters';\nimport { Amount } from '@snx-v3/Amount';\nimport { wei } from '@synthetixio/wei';\nimport { etherscanLink } from '@snx-v3/etherscanLink';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { Tooltip } from '@snx-v3/Tooltip';\n\ninterface RewardsRowInterface {\n  symbol: string;\n  projectedAmount: number; // The amount per frequency period\n  frequency: number;\n  claimableAmount: number; // The immediate amount claimable as read from the contracts\n  lifetimeClaimed: number;\n  hasClaimed: boolean;\n  address: string;\n  readOnly: boolean;\n  total: number;\n}\n\nexport const RewardsRow = ({\n  symbol,\n  frequency,\n  claimableAmount,\n  lifetimeClaimed,\n  hasClaimed,\n  address,\n  readOnly,\n  total,\n}: RewardsRowInterface) => {\n  const { accountId, collateralSymbol, poolId } = useParams();\n\n  const { data: collateralData } = useCollateralType(collateralSymbol);\n  const { network } = useNetwork();\n\n  const { exec, txnState } = useClaimRewards(\n    poolId || '',\n    collateralData?.tokenAddress || '',\n    accountId,\n    address,\n    claimableAmount\n  );\n\n  const onClick = () => {\n    exec();\n  };\n\n  const { txnStatus, txnHash } = txnState;\n\n  const frequencyString = convertSecondsToDisplayString(frequency);\n\n  const claimButtonLabel = () => {\n    if (claimableAmount > 0 || !hasClaimed) {\n      return 'Claim';\n    }\n\n    return 'Claimed';\n  };\n\n  const link = etherscanLink({ chain: network?.name || 'mainnet', address });\n\n  return (\n    <>\n      <RewardsModal\n        amount={claimableAmount}\n        collateralSymbol={symbol}\n        txnStatus={txnStatus}\n        txnHash={txnHash}\n      />\n      <Tr>\n        <Td display=\"flex\" alignItems=\"center\" px=\"14px\" border=\"none\" w=\"100%\">\n          <Fade in>\n            <CollateralIcon height=\"30px\" width=\"30px\" symbol={symbol} />\n          </Fade>\n          <Fade in>\n            <Flex flexDirection=\"column\" ml=\"12px\">\n              <Link href={link} target=\"_blank\">\n                <Tooltip label={`Distributed by ${truncateAddress(address)}`}>\n                  <Text\n                    color=\"gray.50\"\n                    fontSize=\"14px\"\n                    fontFamily=\"heading\"\n                    fontWeight={500}\n                    lineHeight=\"20px\"\n                  >\n                    <Amount showTooltip={false} value={wei(total)} suffix={` ${symbol}`} />\n                  </Text>\n                </Tooltip>\n              </Link>\n              {frequencyString && total > 0 && (\n                <Text color=\"gray.500\" fontSize=\"12px\" fontFamily=\"heading\" lineHeight=\"16px\">\n                  {frequencyString}\n                </Text>\n              )}\n            </Flex>\n          </Fade>\n        </Td>\n        <Td alignItems=\"center\" px=\"14px\" border=\"none\">\n          <Fade in>\n            <Text\n              color=\"gray.50\"\n              fontSize=\"14px\"\n              fontFamily=\"heading\"\n              fontWeight={500}\n              lineHeight=\"20px\"\n            >\n              <Amount value={wei(claimableAmount)} />\n              {` ${symbol}`}\n            </Text>\n            {lifetimeClaimed > 0 && (\n              <Text color=\"gray.500\" fontSize=\"12px\" fontFamily=\"heading\" lineHeight=\"16px\">\n                <Tooltip label=\"Total claimed over lifetime\">Lifetime: &nbsp;</Tooltip>\n                <Amount value={wei(lifetimeClaimed)} />\n                {symbol}\n              </Text>\n            )}\n          </Fade>\n        </Td>\n        {!readOnly && (\n          <Td border=\"none\" px=\"0px\">\n            <Fade in>\n              <Button\n                w=\"100%\"\n                size=\"sm\"\n                variant=\"solid\"\n                isDisabled={claimableAmount === 0}\n                _disabled={{\n                  bg: 'gray.900',\n                  backgroundImage: 'none',\n                  color: 'gray.500',\n                  opacity: 0.5,\n                  cursor: 'not-allowed',\n                }}\n                onClick={onClick}\n              >\n                {claimButtonLabel()}\n              </Button>\n            </Fade>\n          </Td>\n        )}\n      </Tr>\n    </>\n  );\n};\n","import { useReducer } from 'react';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { BigNumber } from 'ethers';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport { useNetwork } from '@snx-v3/useBlockchain';\n\nexport function useClaimRewards(\n  poolId?: string,\n  collateralAddress?: string,\n  accountId?: string,\n  distributorAddress?: string,\n  amount?: number\n) {\n  const { network } = useNetwork();\n  const { data: CoreProxy } = useCoreProxy();\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n  const client = useQueryClient();\n\n  const mutation = useMutation({\n    mutationFn: async function () {\n      try {\n        if (!amount) return;\n        if (!poolId || !collateralAddress || !accountId || !distributorAddress || !network)\n          throw new Error('Parameters Undefined');\n        if (!CoreProxy) throw new Error('CoreProxy undefined');\n\n        dispatch({ type: 'prompting' });\n\n        const tx = await CoreProxy.claimRewards(\n          BigNumber.from(accountId),\n          BigNumber.from(poolId),\n          collateralAddress,\n          distributorAddress\n        );\n\n        dispatch({ type: 'pending', payload: { txnHash: tx.hash } });\n\n        const res = await tx.wait();\n\n        let claimedAmount: BigNumber | undefined;\n\n        res.logs.forEach((log: any) => {\n          if (log.topics[0] === CoreProxy.interface.getEventTopic('RewardsClaimed')) {\n            const { amount } = CoreProxy.interface.decodeEventLog(\n              'RewardsClaimed',\n              log.data,\n              log.topics\n            );\n            claimedAmount = amount;\n          }\n        });\n\n        dispatch({ type: 'success' });\n        client.invalidateQueries({ queryKey: [`${network?.id}-${network?.preset}`, 'Rewards'] });\n        return claimedAmount;\n      } catch (error) {\n        const err = error as Error;\n        dispatch({ type: 'error', payload: { error: err } });\n\n        return 0;\n      }\n    },\n  });\n\n  return {\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n}\n","import { Tbody, Tr, Td, SkeletonCircle, Skeleton, Text } from '@chakra-ui/react';\n\nexport const RewardsLoading = () => (\n  <Tbody width=\"100%\">\n    <Tr borderBottom=\"1px solid #2D2D38\">\n      <Td pl=\"16px\" border=\"none\">\n        <SkeletonCircle startColor=\"whiteAlpha.500\" endColor=\"whiteAlpha.200\" h=\"30px\" w=\"30px\" />\n      </Td>\n      <Td pl=\"16px\" border=\"none\">\n        <Skeleton startColor=\"whiteAlpha.500\" endColor=\"whiteAlpha.200\" height=\"30px\">\n          <Text mr={4}>Loading</Text>\n        </Skeleton>\n      </Td>\n      <Td textAlign=\"end\" pr=\"0px\" border=\"none\">\n        <Skeleton startColor=\"whiteAlpha.500\" endColor=\"whiteAlpha.200\" height=\"30px\">\n          <Text>Loading</Text>\n        </Skeleton>\n      </Td>\n    </Tr>\n    <Tr borderBottom=\"1px solid #2D2D38\">\n      <Td pl=\"16px\" border=\"none\">\n        <SkeletonCircle startColor=\"whiteAlpha.200\" endColor=\"whiteAlpha.500\" h=\"30px\" w=\"30px\" />\n      </Td>\n      <Td pl=\"16px\" border=\"none\">\n        <Skeleton startColor=\"whiteAlpha.200\" endColor=\"whiteAlpha.500\" height=\"30px\">\n          <Text mr={4}>Loading</Text>\n        </Skeleton>\n      </Td>\n      <Td textAlign=\"end\" pr=\"0px\" border=\"none\">\n        <Skeleton startColor=\"whiteAlpha.200\" endColor=\"whiteAlpha.500\" height=\"30px\">\n          <Text>Loading</Text>\n        </Skeleton>\n      </Td>\n    </Tr>\n    <Tr borderBottom=\"1px solid #2D2D38\">\n      <Td pl=\"16px\" border=\"none\">\n        <SkeletonCircle startColor=\"whiteAlpha.500\" endColor=\"whiteAlpha.200\" h=\"30px\" w=\"30px\" />\n      </Td>\n      <Td pl=\"16px\" border=\"none\">\n        <Skeleton startColor=\"whiteAlpha.500\" endColor=\"whiteAlpha.200\" height=\"30px\">\n          <Text mr={4}>Loading</Text>\n        </Skeleton>\n      </Td>\n      <Td textAlign=\"end\" pr=\"0px\" border=\"none\">\n        <Skeleton startColor=\"whiteAlpha.500\" endColor=\"whiteAlpha.200\" height=\"30px\">\n          <Text>Loading</Text>\n        </Skeleton>\n      </Td>\n    </Tr>\n  </Tbody>\n);\n","import {\n  Table,\n  TableContainer,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  Flex,\n  Fade,\n  FlexProps,\n} from '@chakra-ui/react';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { RewardsRow } from './RewardsRow';\nimport { RewardsType } from '@snx-v3/useRewards';\nimport { RewardsLoading } from './RewardsLoading';\nimport { InfoIcon } from '@chakra-ui/icons';\nimport { Tooltip } from '@snx-v3/Tooltip';\n\ninterface RewardsDistributorsInterface extends FlexProps {\n  rewards?: RewardsType;\n  isLoading: boolean;\n  readOnly?: boolean;\n}\n\nexport const Rewards = ({\n  rewards,\n  isLoading,\n  readOnly = false,\n  ...props\n}: RewardsDistributorsInterface) => {\n  const empty = rewards && rewards.length === 0;\n\n  return (\n    <BorderBox bg=\"navy.700\" py={4} px={4} flexDir=\"column\" {...props}>\n      <Text color=\"gray.500\" fontFamily=\"heading\" lineHeight=\"4\" fontSize=\"xs\" mb=\"8px\">\n        REWARDS\n      </Text>\n      <TableContainer width=\"100%\" mb=\"8px\">\n        {empty ? (\n          <Fade in>\n            <Flex mt=\"20px\" mb=\"8px\" justifyContent=\"center\">\n              <Text color=\"gray.500\" fontFamily=\"heading\" lineHeight=\"4\" fontSize=\"xs\">\n                No Rewards Available\n              </Text>\n            </Flex>\n          </Fade>\n        ) : (\n          <Table>\n            <Thead>\n              <Tr borderBottom=\"1px solid #2D2D38\">\n                <Th\n                  textTransform=\"unset\"\n                  color=\"gray.600\"\n                  border=\"none\"\n                  fontFamily=\"heading\"\n                  fontSize=\"12px\"\n                  lineHeight=\"16px\"\n                  letterSpacing={0.6}\n                  fontWeight={700}\n                  px={4}\n                  py={3}\n                >\n                  Active Rewards\n                  <Tooltip label=\"Total rewards active for the Pool\">\n                    <InfoIcon ml={1} mb=\"1px\" />\n                  </Tooltip>\n                </Th>\n                <Th\n                  textTransform=\"unset\"\n                  color=\"gray.600\"\n                  border=\"none\"\n                  fontFamily=\"heading\"\n                  fontSize=\"12px\"\n                  lineHeight=\"16px\"\n                  letterSpacing={0.6}\n                  fontWeight={700}\n                  px={4}\n                  py={3}\n                >\n                  Earnings\n                </Th>\n                <Th\n                  textTransform=\"unset\"\n                  color=\"transparent\"\n                  border=\"none\"\n                  fontFamily=\"heading\"\n                  fontSize=\"12px\"\n                  lineHeight=\"16px\"\n                  letterSpacing={0.6}\n                  fontWeight={700}\n                  px={4}\n                  py={3}\n                >\n                  Claim\n                </Th>\n              </Tr>\n            </Thead>\n            {isLoading ? (\n              <RewardsLoading />\n            ) : (\n              <Tbody>\n                {rewards?.map((item) => (\n                  <RewardsRow\n                    key={item.address}\n                    symbol={item.symbol}\n                    claimableAmount={item.claimableAmount.toNumber()}\n                    frequency={item.duration}\n                    projectedAmount={item.rate / item.duration || 0}\n                    lifetimeClaimed={item.lifetimeClaimed}\n                    hasClaimed={item.lifetimeClaimed > 0}\n                    address={item.distributorAddress}\n                    readOnly={readOnly}\n                    total={item.total}\n                  />\n                ))}\n              </Tbody>\n            )}\n          </Table>\n        )}\n      </TableContainer>\n    </BorderBox>\n  );\n};\n","import { InfoIcon } from '@chakra-ui/icons';\nimport { Flex, Text, Fade } from '@chakra-ui/react';\nimport { SynthSkeleton as Skeleton } from '../SynthSkeleton';\nimport { ReactNode } from 'react';\nimport { Tooltip } from '@snx-v3/Tooltip';\n\ninterface StatBoxProps {\n  isLoading: boolean;\n  title: string;\n  label?: string | ReactNode;\n  value?: string;\n}\n\nexport const StatBox = ({ isLoading, title, label, value }: StatBoxProps) => {\n  return (\n    <Flex\n      bg=\"navy.700\"\n      border=\"1px solid\"\n      borderColor=\"gray.900\"\n      rounded=\"base\"\n      flexDir=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      minWidth=\"200px\"\n      flex={1}\n      height=\"88px\"\n      px={6}\n      py={4}\n    >\n      <Flex alignItems=\"center\" mb={1}>\n        <Text fontSize=\"14px\" color=\"gray.500\" mr={1}>\n          {title}\n        </Text>\n        {label && (\n          <Tooltip label={label} p={3} mt={1}>\n            <InfoIcon w=\"10px\" h=\"10px\" />\n          </Tooltip>\n        )}\n      </Flex>\n      <Flex w=\"100%\" justifyContent=\"center\" height=\"36px\" alignItems=\"center\">\n        <Skeleton\n          isLoaded={!isLoading}\n          height=\"24px\"\n          minWidth={isLoading ? '40%' : 'initial'}\n          startColor=\"gray.700\"\n          endColor=\"navy.800\"\n        >\n          <Fade in>\n            <Text fontSize=\"24px\" lineHeight=\"24px\" fontWeight={800} data-cy={`${title}-stats-box`}>\n              {value || '$0.00'}\n            </Text>\n          </Fade>\n        </Skeleton>\n      </Flex>\n    </Flex>\n  );\n};\n","import { fetchPriceUpdates, priceUpdatesToPopulatedTx } from '@snx-v3/fetchPythPrices';\nimport { stringToHash } from '@snx-v3/tsHelpers';\nimport { AccountCollateralType, loadAccountCollateral } from '@snx-v3/useAccountCollateral';\nimport { useAllCollateralPriceIds } from '@snx-v3/useAllCollateralPriceIds';\nimport { useNetwork, useProviderForChain } from '@snx-v3/useBlockchain';\nimport { loadPrices } from '@snx-v3/useCollateralPrices';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useUSDProxy } from '@snx-v3/useUSDProxy';\nimport { erc7412Call } from '@snx-v3/withERC7412';\nimport { ZodBigNumber } from '@snx-v3/zod';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { useQuery } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\nimport React from 'react';\nimport { z } from 'zod';\nimport { useAllCollateralPriceUpdates } from '../useCollateralPriceUpdates';\n\nconst PositionCollateralSchema = z.object({\n  value: ZodBigNumber.transform((x) => wei(x)).optional(), // This is currently only removed on base-goreli\n  amount: ZodBigNumber.transform((x) => wei(x)),\n});\n\nconst DebtSchema = ZodBigNumber.transform((x) => wei(x));\n\nexport const loadPosition = async ({\n  CoreProxy,\n  accountId,\n  poolId,\n  tokenAddress,\n}: {\n  CoreProxy: ethers.Contract;\n  accountId: string;\n  poolId: string;\n  tokenAddress: string;\n}) => {\n  const calls = await Promise.all([\n    CoreProxy.populateTransaction.getPositionCollateral(accountId, poolId, tokenAddress),\n    CoreProxy.populateTransaction.getPositionDebt(accountId, poolId, tokenAddress),\n  ]);\n\n  const decoder = (multicallEncoded: string | string[]) => {\n    if (Array.isArray(multicallEncoded) && multicallEncoded.length === 2) {\n      const decodedCollateral = CoreProxy.interface.decodeFunctionResult(\n        'getPositionCollateral',\n        multicallEncoded[0]\n      );\n      const decodedDebt = CoreProxy.interface.decodeFunctionResult(\n        'getPositionDebt',\n        multicallEncoded[1]\n      )[0];\n      return {\n        debt: DebtSchema.parse(decodedDebt),\n        collateral: PositionCollateralSchema.parse({ ...decodedCollateral }),\n      };\n    }\n    throw Error('Expected array with two items');\n  };\n\n  return { calls, decoder };\n};\n\nexport type LiquidityPosition = {\n  collateralAmount: Wei;\n  collateralPrice: Wei;\n  collateralValue: Wei;\n  debt: Wei;\n  accountCollateral: AccountCollateralType;\n  usdCollateral: AccountCollateralType;\n  tokenAddress: string;\n};\n\nexport const useLiquidityPosition = ({\n  tokenAddress,\n  accountId,\n  poolId,\n}: {\n  tokenAddress?: string;\n  accountId?: string;\n  poolId?: string;\n}) => {\n  const { data: collateralPriceUpdates } = useAllCollateralPriceIds();\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: UsdProxy } = useUSDProxy();\n  const { network } = useNetwork();\n  const { data: priceUpdateTx } = useAllCollateralPriceUpdates();\n  const provider = useProviderForChain(network!);\n\n  const priceUpdateTxHash = React.useMemo(\n    () => (priceUpdateTx?.data ? stringToHash(priceUpdateTx?.data) : null),\n    [priceUpdateTx?.data]\n  );\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'LiquidityPosition',\n      { accountId },\n      {\n        pool: poolId,\n        token: tokenAddress,\n      },\n      { priceUpdateTxHash },\n    ],\n    enabled: Boolean(\n      CoreProxy &&\n        accountId &&\n        poolId &&\n        tokenAddress &&\n        collateralPriceUpdates &&\n        UsdProxy &&\n        network &&\n        provider\n    ),\n    queryFn: async () => {\n      if (\n        !(\n          CoreProxy &&\n          accountId &&\n          poolId &&\n          tokenAddress &&\n          collateralPriceUpdates &&\n          UsdProxy &&\n          network &&\n          provider\n        )\n      ) {\n        throw Error('useLiquidityPosition should not be enabled');\n      }\n      const { calls: priceCalls, decoder: priceDecoder } = await loadPrices({\n        collateralAddresses: [tokenAddress],\n        CoreProxy,\n      });\n\n      const { calls: positionCalls, decoder: positionDecoder } = await loadPosition({\n        CoreProxy,\n        accountId,\n        poolId,\n        tokenAddress,\n      });\n\n      const { calls: accountCollateralCalls, decoder: accountCollateralDecoder } =\n        await loadAccountCollateral({\n          accountId,\n          tokenAddresses: [tokenAddress, UsdProxy.address],\n          CoreProxy,\n        });\n\n      const collateralPriceCalls = await fetchPriceUpdates(\n        collateralPriceUpdates,\n        network.isTestnet\n      ).then((signedData) => priceUpdatesToPopulatedTx('0x', collateralPriceUpdates, signedData));\n\n      const allCalls = collateralPriceCalls\n        .concat(priceCalls)\n        .concat(positionCalls)\n        .concat(accountCollateralCalls);\n\n      if (priceUpdateTx) {\n        allCalls.unshift(priceUpdateTx as any);\n      }\n\n      return await erc7412Call(\n        network,\n        provider,\n        allCalls,\n        (encoded) => {\n          if (!Array.isArray(encoded)) throw Error('Expected array');\n\n          const startOfPrice = 0;\n          const endOfPrice = priceCalls.length;\n          const startOfPosition = endOfPrice;\n          const endOfPosition = startOfPosition + positionCalls.length;\n\n          const startOfAccountCollateral = endOfPosition;\n          const collateralPrice = priceDecoder(encoded.slice(startOfPrice, endOfPrice));\n          const decodedPosition = positionDecoder(encoded.slice(startOfPosition, endOfPosition));\n          const [accountCollateral, usdCollateral] = accountCollateralDecoder(\n            encoded.slice(startOfAccountCollateral)\n          );\n\n          return {\n            collateralPrice: Array.isArray(collateralPrice) ? collateralPrice[0] : collateralPrice,\n            collateralAmount: decodedPosition.collateral.amount,\n            collateralValue: decodedPosition.collateral.amount.mul(collateralPrice),\n            debt: decodedPosition.debt,\n            tokenAddress,\n            accountCollateral,\n            usdCollateral,\n          };\n        },\n        `useLiquidityPosition`\n      );\n    },\n  });\n};\n","import type { MarketSnapshotByWeekSchema, PoolType } from '@snx-v3/usePoolData';\nimport { z } from 'zod';\nimport { wei, Wei } from '@synthetixio/wei';\n\ntype MarketSnapshotByWeek = z.infer<typeof MarketSnapshotByWeekSchema>;\n\nexport const calculateSevenDaysPnlGrowth = (marketSnapshots?: MarketSnapshotByWeek[]) => {\n  if (!marketSnapshots || marketSnapshots.length === 0) return undefined;\n  const end = marketSnapshots[0].pnl;\n  const start = marketSnapshots[1]?.pnl || wei(0);\n\n  return {\n    value: end.sub(start),\n    percentage: start.eq(0) ? undefined : end.sub(start).div(start.abs()),\n  };\n};\n\nexport const calculatePoolPerformanceLifetime = (poolData?: PoolType) => {\n  return poolData?.configurations.reduce((acc, { market }) => {\n    return acc.add(market.pnl);\n  }, wei(0));\n};\n\nexport const calculatePoolPerformanceSevenDays = (poolData?: PoolType) => {\n  const total = calculatePoolPerformanceLifetime(poolData);\n\n  const totalSevenDaysAgo = poolData?.configurations.reduce((acc, { market }) => {\n    return acc.add(market.market_snapshots_by_week[1]?.pnl || wei(0));\n  }, wei(0));\n\n  if (!total || !totalSevenDaysAgo) {\n    return undefined;\n  }\n\n  return {\n    value: total.sub(totalSevenDaysAgo), // Not that this value does not take into account that other pools might have exposure to markets\n    growthPercentage: totalSevenDaysAgo.eq(0)\n      ? undefined\n      : total.sub(totalSevenDaysAgo).div(totalSevenDaysAgo.abs()),\n  };\n};\n\nexport const calculateCRatio = (debt: Wei, collateralValue: Wei) =>\n  debt.eq(0) || collateralValue.eq(0) ? wei(0) : collateralValue.div(debt);\n","export function keyBy<T extends Record<K, PropertyKey>, K extends keyof T>(key: K, array: T[]) {\n  return array.reduce(\n    (acc, item) => {\n      const keyValue = item[key];\n      acc[keyValue] = item;\n      return acc;\n    },\n    {} as Record<T[K], T>\n  );\n}\n","import { CollateralType, useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { loadPosition } from '@snx-v3/useLiquidityPosition';\nimport { usePools } from '@snx-v3/usePools';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { useQuery } from '@tanstack/react-query';\nimport { useNetwork, useProviderForChain } from '@snx-v3/useBlockchain';\nimport { loadPrices } from '@snx-v3/useCollateralPrices';\nimport { calculateCRatio } from '@snx-v3/calculations';\nimport { erc7412Call } from '@snx-v3/withERC7412';\nimport { keyBy, stringToHash } from '@snx-v3/tsHelpers';\nimport { useAllCollateralPriceIds } from '@snx-v3/useAllCollateralPriceIds';\nimport { fetchPriceUpdates, priceUpdatesToPopulatedTx } from '@snx-v3/fetchPythPrices';\nimport { useAllCollateralPriceUpdates } from '../useCollateralPriceUpdates';\n\nexport type LiquidityPositionType = {\n  id: `${string}-${string}`;\n  accountId: string;\n  poolId: string;\n  isPreferred: boolean;\n  poolName: string;\n  collateralAmount: Wei;\n  collateralPrice: Wei;\n  collateralValue: Wei;\n  collateralType: CollateralType;\n  cRatio: Wei;\n  debt: Wei;\n};\n\nexport type LiquidityPositionsById = {\n  [poolIdDashSymbol: `${string}-${string}`]: LiquidityPositionType;\n};\n\nfunction toPairs<T>(array: T[]): [T, T][] {\n  return Array.from(\n    { length: array.length / 2 },\n    (_, i) => [array[i * 2], array[i * 2 + 1]] as [T, T]\n  );\n}\n\nexport const useLiquidityPositions = ({ accountId }: { accountId?: string }) => {\n  const { data: CoreProxy } = useCoreProxy();\n\n  const { data: pools } = usePools();\n  const { data: collateralTypes } = useCollateralTypes();\n  const { data: collateralPriceUpdates } = useAllCollateralPriceIds();\n  const { data: priceUpdateTx, isLoading: collateralPriceUpdatesIsLoading } =\n    useAllCollateralPriceUpdates();\n\n  const { network } = useNetwork();\n  const provider = useProviderForChain(network!);\n\n  const query = useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'LiquidityPositions',\n      { accountId },\n      {\n        pools: pools ? pools.map((pool) => pool.id).sort() : [],\n        tokens: collateralTypes ? collateralTypes.map((x) => x.tokenAddress).sort() : [],\n        collateralPriceUpdatesLength: collateralPriceUpdates?.length,\n        priceUpdateTx: stringToHash(priceUpdateTx?.data),\n      },\n    ],\n    queryFn: async () => {\n      if (\n        !pools ||\n        !collateralTypes ||\n        !CoreProxy ||\n        !accountId ||\n        !collateralPriceUpdates ||\n        !network ||\n        !provider\n      ) {\n        throw Error('Query should not be enabled');\n      }\n\n      const positionCallsAndDataNested = await Promise.all(\n        pools.map(async ({ id: poolId, name: poolName, isPreferred }) =>\n          Promise.all(\n            collateralTypes.map(async (collateralType) => {\n              const { calls, decoder } = await loadPosition({\n                CoreProxy,\n                accountId,\n                poolId,\n                tokenAddress: collateralType.tokenAddress,\n              });\n              return { calls, decoder, poolName, collateralType, poolId, isPreferred };\n            })\n          )\n        )\n      );\n\n      const positionCallsAndData = positionCallsAndDataNested.flat();\n\n      const { calls: priceCalls, decoder: priceDecoder } = await loadPrices({\n        collateralAddresses: collateralTypes.map((x) => x.tokenAddress),\n        CoreProxy,\n      });\n\n      const positionCalls = positionCallsAndData.map((x) => x.calls).flat();\n\n      const collateralPriceCalls = await fetchPriceUpdates(\n        collateralPriceUpdates,\n        network.isTestnet\n      ).then((signedData) => priceUpdatesToPopulatedTx('0x', collateralPriceUpdates, signedData));\n\n      const allCalls = collateralPriceCalls.concat(priceCalls.concat(positionCalls));\n      const singlePositionDecoder = positionCallsAndData.at(0)?.decoder;\n\n      if (priceUpdateTx) {\n        allCalls.unshift(priceUpdateTx as any);\n      }\n\n      return await erc7412Call(\n        network,\n        provider!,\n        allCalls,\n        (encoded) => {\n          if (!Array.isArray(encoded)) throw Error('Expected array');\n          if (!singlePositionDecoder) return {};\n          const prices = priceDecoder(encoded.slice(0, priceCalls.length));\n          const pricesByAddress = keyBy(\n            'address',\n\n            Array.isArray(prices)\n              ? prices.map((price, i) => ({\n                  price,\n                  address: collateralTypes[i].tokenAddress,\n                }))\n              : [{ price: prices, address: collateralTypes[0].tokenAddress }]\n          );\n\n          const pairedPositionsEncoded = toPairs(encoded.slice(priceCalls.length));\n          const positionData = pairedPositionsEncoded.map((x) => singlePositionDecoder(x));\n          const positions = positionData.map(({ debt, collateral }, index) => {\n            const { poolName, collateralType, poolId, isPreferred } = positionCallsAndData[index];\n            // Value will be removed from the collateral call in next release, so to prepare for that calculate it manually\n            const collateralAmount = collateral.amount;\n            const collateralPrice = pricesByAddress?.[collateralType.tokenAddress].price;\n            const collateralValue = collateralPrice\n              ? collateralAmount.mul(collateralPrice)\n              : wei(0);\n            const cRatio = calculateCRatio(debt, collateralValue);\n\n            return {\n              id: `${poolId}-${collateralType.symbol}` as const,\n              accountId,\n              poolId,\n              poolName,\n              collateralPrice,\n              collateralAmount,\n              collateralValue,\n              collateralType,\n              cRatio,\n              debt,\n              isPreferred,\n            };\n          });\n          return keyBy('id', positions);\n        },\n        'useLiquidityPositions'\n      );\n    },\n    enabled: Boolean(\n      collateralPriceUpdates && CoreProxy && collateralTypes?.length && accountId && pools?.length\n    ),\n  });\n\n  return {\n    ...query,\n    isLoading: query.isLoading || collateralPriceUpdatesIsLoading,\n  };\n};\n","import { useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useApr() {\n  const { network } = useNetwork();\n\n  return useQuery({\n    queryKey: ['apr', network?.id],\n    queryFn: async () => {\n      try {\n        const response = await fetch('https://api.synthetix.io/v3/base/sc-pool-apy');\n\n        const data = await response.json();\n\n        return {\n          // 0 meaning not the right network\n          combinedApr: network?.id === 8453 || network?.id === 84532 ? data.aprCombined * 100 : 0,\n        };\n      } catch (error) {\n        return;\n      }\n    },\n    staleTime: 60000,\n  });\n}\n","import { useMemo } from 'react';\nimport { Flex, Text } from '@chakra-ui/react';\nimport { formatNumberToUsd } from '@snx-v3/formatters';\nimport { StatBox } from './StatBox';\nimport { useSearchParams } from 'react-router-dom';\nimport { useAccountCollateral } from '@snx-v3/useAccountCollateral';\nimport { useCollateralPrices } from '@snx-v3/useCollateralPrices';\nimport { useLiquidityPositions } from '@snx-v3/useLiquidityPositions';\nimport { useTokenBalances } from '@snx-v3/useTokenBalance';\nimport {\n  calculateAssets,\n  calculateTotalAssetsAvailable,\n  calculateTotalAssetsDelegated,\n} from '../../utils/assets';\nimport { calculateDebt } from '../../utils/positions';\nimport { useApr } from '@snx-v3/useApr';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { useGetUSDTokens } from '@snx-v3/useGetUSDTokens';\n\nexport const StatsList = () => {\n  const [params] = useSearchParams();\n  const { network } = useNetwork();\n\n  const { data: usdTokens } = useGetUSDTokens();\n  const { data: apr, isLoading: aprIsLoading } = useApr();\n\n  const { data: positions, isLoading: isLiquidityPositionLoading } = useLiquidityPositions({\n    accountId: params.get('accountId') || undefined,\n  });\n\n  const { data: collateralTypes, isLoading: isCollateralTypesLoading } = useCollateralTypes();\n\n  const { data: accountCollaterals, isLoading: isAccountCollateralsLoading } = useAccountCollateral(\n    {\n      accountId: params.get('accountId') || undefined,\n    }\n  );\n\n  const collateralAddresses =\n    isBaseAndromeda(network?.id, network?.preset) && usdTokens?.USDC\n      ? accountCollaterals?.map((collateral) => collateral.tokenAddress).concat(usdTokens.USDC) ||\n        []\n      : accountCollaterals?.map((collateral) => collateral.tokenAddress) || [];\n\n  const { data: userTokenBalances, isLoading: tokenBalancesIsLoading } =\n    useTokenBalances(collateralAddresses);\n\n  const associatedUserBalances = userTokenBalances?.map((balance, index) => {\n    return {\n      balance,\n      tokenAddress: collateralAddresses[index],\n    };\n  });\n\n  const { data: collateralPrices, isLoading: isCollateralPricesLoading } = useCollateralPrices();\n\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n\n  const assets = useMemo(\n    () =>\n      calculateAssets(\n        accountCollaterals,\n        associatedUserBalances,\n        collateralPrices,\n        collateralTypes,\n        isBase,\n        usdTokens?.USDC\n      ),\n    [\n      accountCollaterals,\n      associatedUserBalances,\n      collateralPrices,\n      collateralTypes,\n      isBase,\n      usdTokens?.USDC,\n    ]\n  );\n\n  const debt = calculateDebt(positions);\n  const totalAssets = calculateTotalAssetsAvailable(assets);\n  const totalDelegated = calculateTotalAssetsDelegated(assets);\n\n  const isLoading =\n    isAccountCollateralsLoading ||\n    tokenBalancesIsLoading ||\n    isCollateralPricesLoading ||\n    isLiquidityPositionLoading ||\n    aprIsLoading ||\n    isCollateralTypesLoading;\n\n  return (\n    <Flex flexWrap=\"wrap\" w=\"100%\" gap=\"4\" mt={6}>\n      <StatBox\n        title=\"Total Assets\"\n        isLoading={isLoading}\n        value={totalAssets && formatNumberToUsd(totalAssets)}\n        label={\n          <>\n            <Text fontWeight={600} textAlign=\"left\">\n              Total Assets:\n            </Text>\n            <Text textAlign=\"left\">All assets in your Wallet and in your Synthetix Account.</Text>\n          </>\n        }\n      />\n      <StatBox\n        title=\"Total Delegated\"\n        isLoading={isLoading}\n        value={totalDelegated && formatNumberToUsd(totalDelegated)}\n        label={\n          <>\n            <Text fontWeight={600} textAlign=\"left\">\n              Total Delegated:\n            </Text>\n            <Text textAlign=\"left\" mt={1}>\n              All assets in your Account that have been Delegated to a Pool.\n            </Text>\n          </>\n        }\n      />\n      <StatBox\n        title=\"Total Debt\"\n        isLoading={isLoading}\n        value={debt && formatNumberToUsd(debt?.toNumber().toFixed(2))}\n        label={\n          <>\n            <Text fontWeight={600} textAlign=\"left\">\n              Total Debt:\n            </Text>\n            <Text mt={1} textAlign=\"left\">\n              Aggregated Debt of all your Open Positions.\n            </Text>\n          </>\n        }\n      />\n      <StatBox\n        title=\"APR\"\n        isLoading={isLoading}\n        value={!!apr?.combinedApr ? apr.combinedApr.toFixed(2) + '%' : '-'}\n        label={\n          <>\n            <Text fontWeight={600} textAlign=\"left\">\n              APY Annual Percentage Yield:\n            </Text>\n            <Text mt={1} textAlign=\"left\">\n              Aggregated APY from all your Positions.\n            </Text>\n            <Text mt={1} textAlign=\"left\">\n              Sum(past 24 hourly pnls) * 365\n            </Text>\n          </>\n        }\n      />\n    </Flex>\n  );\n};\n","import { LiquidityPositionType } from '@snx-v3/useLiquidityPositions';\nimport Wei from '@synthetixio/wei';\n\ntype DebtPositions = Record<`${string}-${string}`, LiquidityPositionType>;\n\nexport function calculateDebt(positions?: DebtPositions) {\n  return (\n    positions && Object.values(positions).reduce((prev, cur) => prev.add(cur.debt), new Wei(0))\n  );\n}\n\nexport function calculatePositions(positionsByKey?: DebtPositions, isBase = false) {\n  const positionsIds = !!positionsByKey\n    ? (Object.keys(positionsByKey) as `${string}-${string}`[])\n    : [];\n\n  if (!positionsByKey) return [];\n\n  return positionsIds.map((id) => {\n    const position = positionsByKey[id];\n\n    if (isBase && position.collateralType.symbol === 'sUSDC') {\n      position.collateralType.symbol = 'USDC';\n      position.collateralType.displaySymbol = 'USDC';\n      position.collateralType.name = 'USD Coin';\n    }\n\n    return position;\n  });\n}\n","import { Badge, Button, Fade, Flex, Td, Text, Tr } from '@chakra-ui/react';\nimport { TokenIcon } from '../../TokenIcon';\nimport { LiquidityPositionType } from '@snx-v3/useLiquidityPositions';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { useGetBorrow } from '@snx-v3/useGetBorrow';\nimport { utils } from 'ethers';\n\ninterface PositionRow extends LiquidityPositionType {\n  final: boolean;\n  isBase: boolean;\n  apr?: number;\n}\n[];\n\nexport function PositionRow({\n  accountId,\n  poolId,\n  collateralType,\n  debt,\n  final,\n  cRatio,\n  isBase,\n  apr,\n}: PositionRow) {\n  const [queryParams] = useSearchParams();\n  const navigate = useNavigate();\n  const { data: liquidityPosition } = useLiquidityPosition({\n    tokenAddress: collateralType.tokenAddress,\n    accountId,\n    poolId,\n  });\n  const { data: borrow } = useGetBorrow({\n    accountId,\n    poolId,\n    collateralTypeAddress: collateralType.tokenAddress,\n  });\n\n  const parsedCRatio = collateralType.issuanceRatioD18.gt(cRatio) ? 'MANAGE' : 'HEALTHY';\n  return (\n    <Tr borderBottomWidth={final ? 'none' : '1px'}>\n      <Td border=\"none\">\n        <Fade in>\n          <Flex alignItems=\"center\">\n            <TokenIcon symbol={collateralType.symbol} />\n            <Flex flexDirection=\"column\" ml={3}>\n              <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n                {collateralType.symbol}\n              </Text>\n              <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n                {collateralType.displaySymbol}\n              </Text>\n            </Flex>\n          </Flex>\n        </Fade>\n      </Td>\n      <Td border=\"none\">\n        <Fade in>\n          <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n            <Text color=\"white\" lineHeight=\"1.25rem\" fontFamily=\"heading\">\n              {liquidityPosition?.collateralAmount\n                .toNumber()\n                .toLocaleString('en-US', { maximumFractionDigits: 2 })}\n            </Text>\n            <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n              {collateralType.symbol.toString()}\n            </Text>\n          </Flex>\n        </Fade>\n      </Td>\n      <Td border=\"none\">\n        <Fade in>\n          <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n            <Text color=\"white\" lineHeight=\"1.25rem\" fontFamily=\"heading\">\n              {!!apr ? apr.toFixed(2).concat('%') : '-'}\n            </Text>\n          </Flex>\n        </Fade>\n      </Td>\n      {!isBase && (\n        <>\n          <Td border=\"none\">\n            <Fade in>\n              <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n                <Text color=\"white\" lineHeight=\"1.25rem\" fontFamily=\"heading\">\n                  ${liquidityPosition?.debt.toNumber().toLocaleString()}\n                </Text>\n                <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n                  {liquidityPosition?.debt.toNumber().toLocaleString()}\n                </Text>\n              </Flex>\n            </Fade>\n          </Td>\n          <Td border=\"none\">\n            <Fade in>\n              <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n                <Text color=\"white\" lineHeight=\"1.25rem\" fontFamily=\"heading\">\n                  {parseFloat(\n                    utils.formatEther(borrow?.position?.net_issuance.toString() || '0')\n                  ).toFixed(2)}\n                </Text>\n                <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n                  {parseFloat(\n                    utils.formatEther(borrow?.position?.net_issuance.toString() || '0')\n                  ).toFixed(2)}{' '}\n                  snxUSD\n                </Text>\n              </Flex>\n            </Fade>\n          </Td>\n        </>\n      )}\n      <Td border=\"none\">\n        <Fade in>\n          <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n            <Text color=\"white\" lineHeight=\"1.25rem\" fontFamily=\"heading\">\n              ${debt.toNumber().toLocaleString('en-US', { maximumFractionDigits: 2 })}\n            </Text>\n            <Text\n              color=\"cyan.500\"\n              fontFamily=\"heading\"\n              fontSize=\"0.75rem\"\n              lineHeight=\"1rem\"\n              cursor=\"pointer\"\n              onClick={() => {\n                queryParams.set('manageAction', debt.gt(0) ? 'deposit' : 'repay');\n                navigate({\n                  pathname: `/positions/${collateralType.symbol}/${poolId}`,\n                  search: queryParams.toString(),\n                });\n              }}\n            >\n              {debt.gt(0) ? 'Repay Debt' : 'Claim Credit'}\n            </Text>\n          </Flex>\n        </Fade>\n      </Td>\n      {!isBase && (\n        <Td border=\"none\">\n          <Fade in>\n            <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n              <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n                {(cRatio.toNumber() * 100).toFixed(2) + '%'}\n              </Text>\n              <Badge\n                colorScheme={parsedCRatio === 'MANAGE' ? 'red' : 'green'}\n                border=\"1px solid\"\n                bg={parsedCRatio === 'MANAGE' ? 'red.900' : 'green.900'}\n              >\n                {parsedCRatio}\n              </Badge>\n            </Flex>\n          </Fade>\n        </Td>\n      )}\n      <Td border=\"none\">\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            fontSize=\"0.75rem\"\n            lineHeight=\"1rem\"\n            height=\"1.75rem\"\n            fontWeight={700}\n            borderWidth=\"1px\"\n            borderColor=\"gray.900\"\n            borderRadius=\"4px\"\n            w=\"100px\"\n            onClick={() => {\n              navigate({\n                pathname: `/positions/${collateralType.symbol}/${poolId}`,\n              });\n            }}\n            data-cy=\"manage-position-row-button\"\n          >\n            Manage\n          </Button>\n        </Flex>\n      </Td>\n    </Tr>\n  );\n}\n","import { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport const useGetBorrow = ({\n  accountId,\n  poolId,\n  collateralTypeAddress,\n}: {\n  accountId?: string;\n  poolId?: string;\n  collateralTypeAddress?: string;\n}) => {\n  const { network } = useNetwork();\n  return useQuery({\n    enabled: !isBaseAndromeda(network?.id, network?.preset),\n    queryKey: ['useGetBorrow', accountId, poolId, collateralTypeAddress],\n    queryFn: async () => {\n      const response = await fetch(\n        'https://subgraph.satsuma-prod.com/ce5e03f52f3b/synthetix/synthetix-sepolia/api',\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            query: `\n                      query getPosition($id: ID!){\n                        position(id: $id) {\n                          net_issuance\n                        }\n                      }\n                    `,\n            variables: { id: `${accountId}-${poolId}-${collateralTypeAddress?.toLowerCase()}` },\n          }),\n        }\n      );\n\n      const { data } = await response.json();\n      return data;\n    },\n  });\n};\n","import { Badge, Button, Flex, Td, Text, Tr } from '@chakra-ui/react';\nimport { SynthSkeleton as Skeleton, SynthCircle as SkeletonCircle } from '../../';\nimport { TokenIcon } from '../../';\n\nexport function PositionsRowLoading({ isBase }: { isBase: boolean }) {\n  const rows = Array.from({ length: 2 }, (_, i) => i);\n  return (\n    <>\n      {rows.map((row) => {\n        return (\n          <Tr borderBottomWidth={row === 1 ? 'none' : '1px'} key={row}>\n            <Td border=\"none\">\n              <Flex alignItems=\"center\">\n                <SkeletonCircle>\n                  <TokenIcon symbol=\"SNX\" />\n                </SkeletonCircle>\n                <Flex flexDirection=\"column\" ml={3}>\n                  <Skeleton height=\"1rem\" mb={1} width=\"70%\">\n                    <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n                      sUSDC\n                    </Text>\n                  </Skeleton>\n                  <Skeleton height=\"0.75rem\">\n                    <Text\n                      color=\"gray.500\"\n                      fontFamily=\"heading\"\n                      fontSize=\"0.75rem\"\n                      lineHeight=\"1rem\"\n                    >\n                      Synthetic USDC\n                    </Text>\n                  </Skeleton>\n                </Flex>\n              </Flex>\n            </Td>\n            {!isBase && (\n              <>\n                <Td border=\"none\">\n                  <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n                    <Skeleton height=\"1rem\" mb={1}>\n                      <Text\n                        color=\"white\"\n                        fontWeight={700}\n                        lineHeight=\"1.25rem\"\n                        fontFamily=\"heading\"\n                      >\n                        $100,000,00\n                      </Text>\n                    </Skeleton>\n                    <Skeleton height=\"0.75rem\">\n                      <Text\n                        color=\"gray.500\"\n                        fontFamily=\"heading\"\n                        fontSize=\"0.75rem\"\n                        lineHeight=\"1rem\"\n                      >\n                        100,000 SNX\n                      </Text>\n                    </Skeleton>\n                  </Flex>\n                </Td>\n                <Td border=\"none\">\n                  <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n                    <Skeleton height=\"1rem\" width=\"80%\">\n                      <Text\n                        color=\"white\"\n                        fontWeight={700}\n                        lineHeight=\"1.25rem\"\n                        fontFamily=\"heading\"\n                      >\n                        15%\n                      </Text>\n                    </Skeleton>\n                  </Flex>\n                </Td>\n                <Td border=\"none\">\n                  <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n                    <Skeleton height=\"1rem\" mb={1}>\n                      <Text\n                        color=\"white\"\n                        fontWeight={700}\n                        lineHeight=\"1.25rem\"\n                        fontFamily=\"heading\"\n                      >\n                        $5,000\n                      </Text>\n                    </Skeleton>\n                    <Skeleton height=\"0.75rem\">\n                      <Text\n                        color=\"gray.500\"\n                        fontFamily=\"heading\"\n                        fontSize=\"0.75rem\"\n                        lineHeight=\"1rem\"\n                      >\n                        22%\n                      </Text>\n                    </Skeleton>\n                  </Flex>\n                </Td>\n              </>\n            )}\n            <Td border=\"none\">\n              <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n                <Skeleton height=\"1rem\" mb={1}>\n                  <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n                    $100,000\n                  </Text>\n                </Skeleton>\n                <Skeleton height=\"0.75rem\">\n                  <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n                    200 SNX\n                  </Text>\n                </Skeleton>\n              </Flex>\n            </Td>\n            <Td border=\"none\">\n              <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n                <Skeleton height=\"1rem\" mb={1} width=\"70%\">\n                  <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n                    $20,000\n                  </Text>\n                </Skeleton>\n                <Skeleton height=\"0.75rem\">\n                  <Text color=\"cyan.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n                    Claim Credit\n                  </Text>\n                </Skeleton>\n              </Flex>\n            </Td>\n            <Td border=\"none\">\n              <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n                <Skeleton height=\"1rem\" mb={1}>\n                  <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n                    5000%\n                  </Text>\n                </Skeleton>\n                <Skeleton height=\"0.75rem\">\n                  <Badge colorScheme=\"green\" border=\"1px solid\" bg=\"green.900\">\n                    HEALTHY\n                  </Badge>\n                </Skeleton>\n              </Flex>\n            </Td>\n            <Td border=\"none\">\n              <Flex flexDirection=\"column\">\n                <Skeleton height=\"1.75rem\">\n                  <Button\n                    fontSize=\"0.75rem\"\n                    lineHeight=\"1rem\"\n                    height=\"1.75rem\"\n                    fontWeight={700}\n                    borderWidth=\"1px\"\n                    borderColor=\"gray.900\"\n                    borderRadius=\"4px\"\n                    disabled\n                  >\n                    Manage\n                  </Button>\n                </Skeleton>\n              </Flex>\n            </Td>\n          </Tr>\n        );\n      })}\n    </>\n  );\n}\n","import { Button, Fade, Flex, Heading, Table, TableContainer, Tbody } from '@chakra-ui/react';\nimport { Link, generatePath } from 'react-router-dom';\nimport { useNetwork, useWallet } from '@snx-v3/useBlockchain';\nimport { LiquidityPositionType } from '@snx-v3/useLiquidityPositions';\nimport {\n  PositionsNotConnected,\n  PositionRow,\n  PositionTableHeader,\n  PositionsRowLoading,\n  PositionsEmpty,\n  TableDivider,\n} from './';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\n\ninterface PositionsTableInterface {\n  isLoading: boolean;\n  positions?: LiquidityPositionType[];\n  apr?: number;\n}\n\nexport const PositionsTable = ({ isLoading, positions, apr }: PositionsTableInterface) => {\n  const { activeWallet } = useWallet();\n  const { network } = useNetwork();\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n\n  return (\n    <TableContainer\n      maxW=\"100%\"\n      mt={4}\n      borderColor=\"gray.900\"\n      borderWidth=\"1px\"\n      borderRadius=\"5px\"\n      p={6}\n      sx={{\n        borderCollapse: 'separate !important',\n        borderSpacing: 0,\n      }}\n      bg=\"navy.700\"\n    >\n      {!activeWallet?.address ? (\n        <PositionsNotConnected />\n      ) : positions?.length === 0 && !isLoading ? (\n        <PositionsEmpty />\n      ) : (\n        <>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Heading fontSize=\"18px\" fontWeight={700} lineHeight=\"28px\" color=\"gray.50\">\n              Spartan Council Pool\n            </Heading>\n            <Fade in>\n              <Button\n                as={Link}\n                mt={{ base: 2, md: 0 }}\n                size=\"sm\"\n                to={{\n                  pathname: generatePath('/pools/:poolId', { poolId: '1' }),\n                  search: location.search,\n                }}\n                variant=\"outline\"\n                colorScheme=\"gray\"\n                color=\"white\"\n              >\n                Pool Info\n              </Button>\n            </Fade>\n          </Flex>\n          <Table variant=\"simple\">\n            <PositionTableHeader isBase={isBase} />\n            <Tbody>\n              <TableDivider />\n              {isLoading ? (\n                <PositionsRowLoading isBase={isBase} />\n              ) : (\n                <>\n                  {positions?.map((position, index) => (\n                    <PositionRow\n                      key={position.poolName.concat(index.toString())}\n                      {...position}\n                      final={index === positions.length - 1}\n                      isBase={isBase}\n                      apr={apr}\n                    />\n                  ))}\n                </>\n              )}\n            </Tbody>\n          </Table>\n        </>\n      )}\n    </TableContainer>\n  );\n};\n","import { InfoIcon } from '@chakra-ui/icons';\nimport { Thead, Tr, Th, Flex, Text } from '@chakra-ui/react';\nimport { Tooltip } from '@snx-v3/Tooltip';\n\nexport function PositionTableHeader({ isBase }: { isBase: boolean }) {\n  return (\n    <Thead>\n      <Tr>\n        <Th\n          py={5}\n          textTransform=\"unset\"\n          color=\"gray.600\"\n          border=\"none\"\n          fontFamily=\"heading\"\n          fontSize=\"12px\"\n          lineHeight=\"16px\"\n        >\n          Collateral\n        </Th>\n        <Th border=\"none\" textTransform=\"unset\" py={5}>\n          <Flex justifyContent=\"flex-end\" alignItems=\"center\">\n            <Text color=\"gray.600\" fontFamily=\"heading\" fontSize=\"12px\" lineHeight=\"16px\" mr={1}>\n              Delegated\n            </Text>\n            <Tooltip\n              label={\n                <Flex flexDirection=\"column\" alignItems=\"start\">\n                  <Text fontWeight=\"bold\">Delegated Assets:</Text>\n                  <Text>Assets used as collateral in this Position.</Text>\n                </Flex>\n              }\n            >\n              <InfoIcon w=\"10px\" h=\"10px\" />\n            </Tooltip>\n          </Flex>\n        </Th>\n        <Th border=\"none\" textTransform=\"unset\" py={5}>\n          <Flex justifyContent=\"flex-end\" alignItems=\"center\">\n            <Text color=\"gray.600\" fontFamily=\"heading\" fontSize=\"12px\" lineHeight=\"16px\" mr={1}>\n              APR\n            </Text>\n            <Tooltip\n              label={\n                <Flex flexDirection=\"column\" alignItems=\"start\">\n                  <Text fontWeight=\"bold\" fontSize=\"14px\">\n                    Annual Percentage Yield (APY):\n                  </Text>\n                  <Text textAlign=\"left\" fontSize=\"14px\">\n                    Reflects the Pool PNL. It is calculated as an estimate derived from past week\n                    historical PNL, extrapolated as a year average.\n                  </Text>\n                  <Text fontWeight=\"bold\" mt={2} fontSize=\"14px\">\n                    Calculation\n                  </Text>\n                  <Text fontSize=\"14px\">Last 7 days Pool PNL * 52</Text>\n                </Flex>\n              }\n            >\n              <InfoIcon w=\"10px\" h=\"10px\" />\n            </Tooltip>\n          </Flex>\n        </Th>\n        {!isBase && (\n          <>\n            <Th border=\"none\" textTransform=\"unset\" py={5}>\n              <Flex justifyContent=\"flex-end\" alignItems=\"center\">\n                <Text\n                  color=\"gray.600\"\n                  fontFamily=\"heading\"\n                  fontSize=\"12px\"\n                  lineHeight=\"16px\"\n                  mr={1}\n                >\n                  Pool PNL\n                </Text>\n                <Tooltip\n                  label={\n                    <Flex flexDirection=\"column\" alignItems=\"start\">\n                      <Text fontWeight=\"bold\" fontSize=\"14px\">\n                        PNL Profit and Loss Lifetime:\n                      </Text>\n                      <Text textAlign=\"left\" fontSize=\"14px\">\n                        Reflects how the Pool PNL is impacted by trading activities (Fees paid,\n                        profits and losses taken by traders).\n                      </Text>\n                      <Text fontWeight=\"bold\" mt={2} fontSize=\"14px\">\n                        Positive PNL:\n                      </Text>\n                      <Text fontSize=\"14px\" textAlign=\"left\">\n                        Means the traders have paid fees to the Pool. All this fees are collected to\n                        reward Liquidity Providers as Claim Credit.\n                      </Text>\n                    </Flex>\n                  }\n                >\n                  <Flex width=\"12px\" height=\"12px\" justifyContent=\"center\" alignItems=\"center\">\n                    <InfoIcon w=\"10px\" h=\"10px\" />\n                  </Flex>\n                </Tooltip>\n              </Flex>\n            </Th>\n            <Th border=\"none\" textTransform=\"unset\" py={5}>\n              <Flex justifyContent=\"flex-end\" alignItems=\"center\">\n                <Text\n                  color=\"gray.600\"\n                  fontFamily=\"heading\"\n                  fontSize=\"12px\"\n                  lineHeight=\"16px\"\n                  mr={1}\n                >\n                  Borrowed\n                </Text>\n                <Tooltip\n                  label={\n                    <Flex flexDirection=\"column\" alignItems=\"start\">\n                      <Text fontWeight=\"bold\" fontSize=\"14px\">\n                        Borrowed:\n                      </Text>\n                      <Text textAlign=\"left\" fontSize=\"14px\">\n                        After Delegating assets in a Position, you can then borrow assets based on\n                        your Position C-Ratio.\n                      </Text>\n                      <Text mt={2} fontSize=\"14px\" textAlign=\"left\">\n                        Borrowed assets are required to be Repaid in order to close your Position\n                        and unlock your Collateral.\n                      </Text>\n                    </Flex>\n                  }\n                >\n                  <InfoIcon w=\"10px\" h=\"10px\" />\n                </Tooltip>\n              </Flex>\n            </Th>\n          </>\n        )}\n        <Th border=\"none\" textTransform=\"unset\" py={5}>\n          <Flex justifyContent=\"flex-end\" alignItems=\"center\">\n            <Text color=\"gray.600\" fontFamily=\"heading\" fontSize=\"12px\" lineHeight=\"16px\" mr={1}>\n              Debt\n            </Text>\n            <Tooltip\n              label={\n                <Flex flexDirection=\"column\" alignItems=\"start\">\n                  <Text fontWeight=\"bold\" fontSize=\"14px\">\n                    Debt.\n                  </Text>\n                  <Text textAlign=\"left\" fontSize=\"14px\">\n                    Represents Pool PNL - Borrowed.\n                  </Text>\n                  <Text fontWeight=\"bold\" mt={2} fontSize=\"14px\">\n                    Claim Credit:\n                  </Text>\n                  <Text fontSize=\"14px\" textAlign=\"left\">\n                    When your position is performing well, it pays back the borrowed assets (if any)\n                    and turns into Credit available to Claim.\n                  </Text>\n\n                  <Text fontWeight=\"bold\" mt={2} fontSize=\"14px\">\n                    Repay debt:\n                  </Text>\n                  <Text fontSize=\"14px\" textAlign=\"left\">\n                    You have debt if the Pool PNL has not yet paid back your borrowed assets, or if\n                    the Pool PNL is Negative.\n                  </Text>\n                </Flex>\n              }\n            >\n              <InfoIcon w=\"10px\" h=\"10px\" />\n            </Tooltip>\n          </Flex>\n        </Th>\n        {!isBase && (\n          <Th border=\"none\" textTransform=\"unset\" py={5}>\n            <Flex justifyContent=\"flex-end\" alignItems=\"center\">\n              <Text color=\"gray.600\" fontFamily=\"heading\" fontSize=\"12px\" lineHeight=\"16px\" mr={1}>\n                C-Ratio\n              </Text>\n              <Tooltip\n                label={\n                  <Flex flexDirection=\"column\" alignItems=\"start\">\n                    <Text fontWeight=\"bold\" fontSize=\"14px\">\n                      C-ratio:\n                    </Text>\n                    <Text textAlign=\"left\" fontSize=\"14px\">\n                      Manage your Position by Adding or Removing collateral to this position.\n                      BorrowIs a dynamic number that represents a ratio between the collateral\n                      Delegated for your position and the Borrowed assets for this position - the\n                      Pool PNL.\n                    </Text>\n                  </Flex>\n                }\n              >\n                <InfoIcon w=\"10px\" h=\"10px\" />\n              </Tooltip>\n            </Flex>\n          </Th>\n        )}\n        <Th\n          py={5}\n          textTransform=\"unset\"\n          color=\"gray.600\"\n          border=\"none\"\n          fontFamily=\"heading\"\n          fontSize=\"12px\"\n          lineHeight=\"16px\"\n        >\n          {' '}\n        </Th>\n      </Tr>\n    </Thead>\n  );\n}\n","import { Flex, Button, Text } from '@chakra-ui/react';\nimport { useWallet } from '@snx-v3/useBlockchain';\n\nexport const PositionsNotConnected = () => {\n  const { connect } = useWallet();\n  return (\n    <Flex w=\"100%\" justifyContent=\"space-between\" alignItems=\"center\">\n      <Text color=\"gray.500\" fontWeight={500} fontSize=\"14px\" lineHeight=\"14px\" my=\"4\" pl=\"3\">\n        Please connect wallet to view assets\n      </Text>\n      <Button\n        size=\"sm\"\n        data-cy=\"connect-button-position-table\"\n        onClick={() => {\n          connect();\n        }}\n      >\n        Connect Wallet\n      </Button>\n    </Flex>\n  );\n};\n","import { Flex, Button, Text } from '@chakra-ui/react';\nimport { Link } from 'react-router-dom';\n\nexport const PositionsEmpty = () => {\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"baseline\" w=\"100%\">\n      <Text color=\"gray.500\" fontWeight={500} fontSize=\"14px\" my=\"4\" pl=\"3\">\n        You can open a new position by browsing the different Pools and choosing a vault for\n        collateral type\n      </Text>\n      <Link to=\"/pools\">\n        <Button size=\"sm\" data-cy=\"position-empty-button\">\n          Explore all Pools\n        </Button>\n      </Link>\n    </Flex>\n  );\n};\n","import { Tr, Td } from '@chakra-ui/react';\n\nexport const TableDivider = () => {\n  return (\n    <Tr border=\"none\" borderTop=\"1px\" borderTopColor=\"gray.900\" width=\"100%\" height=\"0px\">\n      <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={4} />\n      <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={4} />\n      <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={4} />\n      <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={4} />\n      <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={4} />\n      <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={4} />\n      <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={4} />\n      <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={4} />\n    </Tr>\n  );\n};\n","import { Heading, Flex } from '@chakra-ui/react';\nimport { PositionsTable } from './PositionsTable';\nimport { useLiquidityPositions } from '@snx-v3/useLiquidityPositions';\nimport { calculatePositions } from '../../utils/positions';\nimport { useParams } from '@snx-v3/useParams';\nimport { useApr } from '@snx-v3/useApr';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { useNetwork } from '@snx-v3/useBlockchain';\n\nexport const PositionsList = () => {\n  const { accountId } = useParams();\n  const { network } = useNetwork();\n\n  const { data: positionsByKey, isLoading } = useLiquidityPositions({\n    accountId,\n  });\n  const { data: apr } = useApr();\n\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n  const positions = calculatePositions(positionsByKey, isBase);\n  const parsedPositions = positions.filter((position) => position.collateralAmount.gt(0));\n\n  return (\n    <Flex flexDir=\"column\">\n      <Heading fontSize=\"1.25rem\" fontFamily=\"heading\" lineHeight=\"1.75rem\" mt={4}>\n        Positions\n      </Heading>\n      <PositionsTable isLoading={isLoading} positions={parsedPositions} apr={apr?.combinedApr} />\n    </Flex>\n  );\n};\n","import { Flex, Text } from '@chakra-ui/react';\nimport { TokenIcon } from '../TokenIcon';\nimport Wei from '@synthetixio/wei';\n\ninterface BalanceProps {\n  isBase: boolean;\n  balance?: Wei;\n}\n\nexport const Balance = ({ isBase, balance }: BalanceProps) => {\n  return (\n    <>\n      {balance && (\n        <Flex\n          border=\"1px solid\"\n          borderColor=\"gray.900\"\n          px={4}\n          py={2}\n          rounded=\"base\"\n          h=\"40px\"\n          alignItems=\"center\"\n        >\n          <TokenIcon symbol={isBase ? 'USDC' : 'sUSD'} width={24} height={24} />\n          <Text\n            data-cy=\"header-balance\"\n            fontSize=\"14px\"\n            lineHeight=\"20px\"\n            fontWeight={600}\n            ml=\"2\"\n            fontFamily=\"heading\"\n          >\n            {balance?.toNumber().toFixed(2)}\n          </Text>\n        </Flex>\n      )}\n    </>\n  );\n};\n","import { useReducer } from 'react';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useMutation } from '@tanstack/react-query';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport { BigNumber } from 'ethers';\nimport { formatGasPriceForTransaction } from '@snx-v3/useGasOptions';\nimport { getGasPrice } from '@snx-v3/useGasPrice';\nimport { useGasSpeed } from '@snx-v3/useGasSpeed';\nimport { useAllCollateralPriceIds } from '@snx-v3/useAllCollateralPriceIds';\nimport { fetchPriceUpdates, priceUpdatesToPopulatedTx } from '@snx-v3/fetchPythPrices';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport Wei from '@synthetixio/wei';\n\nexport const useWithdraw = ({\n  accountId,\n  collateralTypeAddress,\n  amount,\n}: {\n  accountId?: string;\n  collateralTypeAddress?: string;\n  amount: Wei;\n}) => {\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: collateralPriceIds } = useAllCollateralPriceIds();\n  const { network } = useNetwork();\n\n  const { gasSpeed } = useGasSpeed();\n  const signer = useSigner();\n  const provider = useProvider();\n\n  const mutation = useMutation({\n    mutationFn: async () => {\n      if (!signer || !network || !provider) throw new Error('No signer or network');\n\n      if (!(CoreProxy && collateralTypeAddress && amount && collateralPriceIds)) return;\n      if (amount?.eq(0)) return;\n      const walletAddress = await signer.getAddress();\n\n      try {\n        dispatch({ type: 'prompting' });\n\n        const gasPricesPromised = getGasPrice({ provider });\n\n        const populatedTxnPromised = CoreProxy.populateTransaction.withdraw(\n          BigNumber.from(accountId),\n          collateralTypeAddress,\n          amount.toBN()\n        );\n\n        const collateralPriceCallsPromise = fetchPriceUpdates(\n          collateralPriceIds,\n          network.isTestnet\n        ).then((signedData) =>\n          priceUpdatesToPopulatedTx(walletAddress, collateralPriceIds, signedData)\n        );\n        const [gasPrices, populatedTxn, collateralPriceCalls] = await Promise.all([\n          gasPricesPromised,\n          populatedTxnPromised,\n          collateralPriceCallsPromise,\n        ]);\n        const allCalls = collateralPriceCalls.concat(populatedTxn);\n\n        const erc7412Tx = await withERC7412(network, allCalls, 'useWithdraw', CoreProxy.interface);\n\n        const gasOptionsForTransaction = formatGasPriceForTransaction({\n          gasLimit: erc7412Tx.gasLimit,\n          gasPrices,\n          gasSpeed,\n        });\n\n        const txn = await signer.sendTransaction({ ...erc7412Tx, ...gasOptionsForTransaction });\n        dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n        await txn.wait();\n        dispatch({ type: 'success' });\n      } catch (error: any) {\n        dispatch({ type: 'error', payload: { error } });\n        throw error;\n      }\n    },\n  });\n  return {\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n};\n","import { useReducer } from 'react';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useMutation } from '@tanstack/react-query';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport { BigNumber, constants, utils } from 'ethers';\nimport { formatGasPriceForTransaction } from '@snx-v3/useGasOptions';\nimport { getGasPrice } from '@snx-v3/useGasPrice';\nimport { useGasSpeed } from '@snx-v3/useGasSpeed';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport { useSpotMarketProxy } from '../useSpotMarketProxy';\nimport { USDC_BASE_MARKET } from '@snx-v3/isBaseAndromeda';\nimport { notNil } from '@snx-v3/tsHelpers';\nimport { useUSDProxy } from '@snx-v3/useUSDProxy';\nimport { Wei } from '@synthetixio/wei';\nimport { useCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\nimport { useGetUSDTokens } from '@snx-v3/useGetUSDTokens';\nimport { ZEROWEI } from '../../ui/src/utils/constants';\n\nexport const useWithdrawBaseAndromeda = ({\n  accountId,\n  sUSDCCollateral,\n  snxUSDCollateral,\n  amountToWithdraw,\n}: {\n  sUSDCCollateral: Wei;\n  snxUSDCollateral: Wei;\n  amountToWithdraw: Wei;\n  accountId?: string;\n}) => {\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: SpotProxy } = useSpotMarketProxy();\n  const { data: UsdProxy } = useUSDProxy();\n  const { data: priceUpdateTx } = useCollateralPriceUpdates();\n  const { network } = useNetwork();\n  const { data: usdTokens } = useGetUSDTokens();\n\n  const { gasSpeed } = useGasSpeed();\n  const signer = useSigner();\n  const provider = useProvider();\n\n  const mutation = useMutation({\n    mutationFn: async () => {\n      if (!signer || !network || !provider) throw new Error('No signer or network');\n      if (!(CoreProxy && SpotProxy && accountId && usdTokens?.sUSD && usdTokens.snxUSD)) return;\n\n      const total = snxUSDCollateral.add(sUSDCCollateral);\n\n      if (total.lt(amountToWithdraw)) {\n        return;\n      }\n\n      const sUSDCAmount = amountToWithdraw.gt(sUSDCCollateral) ? sUSDCCollateral : amountToWithdraw;\n      const snxUSDAmount = amountToWithdraw.sub(sUSDCAmount).gt(0)\n        ? amountToWithdraw.sub(sUSDCAmount)\n        : ZEROWEI;\n\n      try {\n        dispatch({ type: 'prompting' });\n\n        const gasPricesPromised = getGasPrice({ provider });\n\n        const withdraw_sUSDC = sUSDCAmount.gt(0)\n          ? CoreProxy.populateTransaction.withdraw(\n              BigNumber.from(accountId),\n              usdTokens?.sUSD,\n              sUSDCAmount.toBN()\n            )\n          : undefined;\n\n        const withdraw_snxUSD = snxUSDAmount.gt(0)\n          ? CoreProxy.populateTransaction.withdraw(\n              BigNumber.from(accountId),\n              usdTokens?.snxUSD,\n              snxUSDAmount.toBN()\n            )\n          : undefined;\n\n        const snxUSDApproval = snxUSDAmount.gt(0)\n          ? UsdProxy?.populateTransaction.approve(SpotProxy.address, snxUSDAmount.toBN())\n          : undefined;\n\n        const buy_sUSDC = snxUSDAmount.gt(0)\n          ? SpotProxy.populateTransaction.buy(\n              USDC_BASE_MARKET,\n              snxUSDAmount.toBN(),\n              0,\n              constants.AddressZero\n            )\n          : undefined;\n\n        const unwrapTxnPromised = SpotProxy.populateTransaction.unwrap(\n          USDC_BASE_MARKET,\n          amountToWithdraw.toBN(),\n          //2% slippage\n          Number(\n            utils.formatUnits(amountToWithdraw.toBN().mul(98).div(100).toString(), 12).toString()\n          ).toFixed()\n        );\n\n        const [\n          gasPrices,\n          withdraw_sUSDC_Txn,\n          withdraw_snxUSD_Txn,\n          snxUSDCApproval_Txn,\n          buy_sUSDC_Txn,\n          unwrapTxn,\n        ] = await Promise.all([\n          gasPricesPromised,\n          withdraw_sUSDC,\n          withdraw_snxUSD,\n          snxUSDApproval,\n          buy_sUSDC,\n          unwrapTxnPromised,\n        ]);\n\n        const allCalls = [\n          withdraw_sUSDC_Txn,\n          withdraw_snxUSD_Txn,\n          snxUSDCApproval_Txn,\n          buy_sUSDC_Txn,\n          unwrapTxn,\n        ].filter(notNil);\n\n        if (priceUpdateTx) {\n          allCalls.unshift(priceUpdateTx as any);\n        }\n\n        const erc7412Tx = await withERC7412(\n          network,\n          [...allCalls],\n          'useWithdrawBase',\n          CoreProxy.interface\n        );\n\n        const gasOptionsForTransaction = formatGasPriceForTransaction({\n          gasLimit: erc7412Tx.gasLimit,\n          gasPrices,\n          gasSpeed,\n        });\n\n        const txn = await signer.sendTransaction({ ...erc7412Tx, ...gasOptionsForTransaction });\n        dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n        await txn.wait();\n        dispatch({ type: 'success' });\n      } catch (error: any) {\n        dispatch({ type: 'error', payload: { error } });\n        throw error;\n      }\n    },\n  });\n  return {\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n};\n","import {\n  Button,\n  Divider,\n  Flex,\n  Input,\n  MenuButton,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalOverlay,\n  Menu,\n  MenuList,\n  MenuItem,\n  Text,\n} from '@chakra-ui/react';\nimport Wei from '@synthetixio/wei';\nimport { useCallback, useState } from 'react';\nimport { useWithdraw } from '@snx-v3/useWithdraw';\nimport { useWithdrawBaseAndromeda } from '@snx-v3/useWithdrawBaseAndromeda';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { ONEWEI, ZEROWEI } from '../../utils/constants';\nimport { useParams } from '@snx-v3/useParams';\nimport { useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { useCollateralPrices } from '@snx-v3/useCollateralPrices';\nimport { useAccountCollateral } from '@snx-v3/useAccountCollateral';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { CloseIcon, InfoIcon } from '@chakra-ui/icons';\nimport { Tooltip } from '@snx-v3/Tooltip';\nimport { TokenIcon } from '../';\nimport { ChevronDown, ChevronUp } from '@snx-v3/icons';\nimport { useGetUSDTokens } from '@snx-v3/useGetUSDTokens';\n\nexport function WithdrawModal({ isOpen, onClose }: { isOpen: boolean; onClose: () => void }) {\n  const { accountId } = useParams();\n  const [amount, setAmount] = useState<Wei>(ZEROWEI);\n  const { data: collateralTypes } = useCollateralTypes();\n  const { data: usdTokens } = useGetUSDTokens();\n\n  const [selectedCollateralType, setSelectedCollateralType] = useState<string>(\n    collateralTypes && collateralTypes[0] ? collateralTypes[0].tokenAddress : ''\n  );\n\n  const queryClient = useQueryClient();\n  const { network } = useNetwork();\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n\n  const { data: accountCollaterals } = useAccountCollateral({\n    accountId,\n  });\n\n  const { data: collateralPrices } = useCollateralPrices();\n\n  const activeCollateral = isBase\n    ? accountCollaterals?.reduce((cur, prev, index) => {\n        //ignore the first iteration cause we are starting witht the first index of the\n        // array as a default\n        if (!index) return cur;\n        return {\n          ...cur,\n          availableCollateral: cur.availableCollateral.add(prev.availableCollateral),\n        };\n      }, accountCollaterals[0])\n    : accountCollaterals?.find((collateral) => collateral.tokenAddress === selectedCollateralType);\n\n  const { mutation: withdrawMain, isLoading } = useWithdraw({\n    amount,\n    accountId,\n    collateralTypeAddress: selectedCollateralType,\n  });\n\n  const { mutation: withdrawAndromeda, isLoading: isLoadingAndromeda } = useWithdrawBaseAndromeda({\n    accountId,\n    sUSDCCollateral:\n      accountCollaterals && accountCollaterals[0]\n        ? accountCollaterals[0].availableCollateral\n        : ZEROWEI,\n    snxUSDCollateral:\n      accountCollaterals && accountCollaterals[1]\n        ? accountCollaterals[1].availableCollateral\n        : ZEROWEI,\n    amountToWithdraw: amount,\n  });\n\n  const withdraw = useCallback(async () => {\n    if (!isBaseAndromeda(network?.id, network?.preset)) {\n      await withdrawMain.mutateAsync();\n    } else {\n      await withdrawAndromeda.mutateAsync();\n    }\n    queryClient.clear();\n  }, [network?.id, network?.preset, queryClient, withdrawAndromeda, withdrawMain]);\n\n  // Replace out sUSDC with USDC for Andromeda\n  const collateralTypesHydated = collateralTypes?.map((type) => {\n    if (isBase && type.symbol === 'sUSDC') {\n      return {\n        ...type,\n        symbol: 'USDC',\n        displaySymbol: 'USDC',\n        name: 'USD Coin',\n      };\n    }\n\n    return type;\n  });\n\n  const collateralTypeDisplayName =\n    collateralTypesHydated?.find((item) => item.tokenAddress === selectedCollateralType)?.symbol ||\n    'sUSD';\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      isCentered\n      onClose={() => {\n        setAmount(ZEROWEI);\n        onClose();\n      }}\n    >\n      <ModalOverlay />\n      <ModalContent pb={10} bg=\"transparent\">\n        <Flex\n          flexDirection=\"column\"\n          p={6}\n          bg=\"navy.700\"\n          border=\"1px solid\"\n          rounded=\"base\"\n          borderColor=\"gray.900\"\n        >\n          <Flex justifyContent=\"space-between\" alignItems=\"center\">\n            <Text\n              width=\"50%\"\n              color=\"gray.50\"\n              fontFamily=\"heading\"\n              fontSize=\"20px\"\n              fontWeight={700}\n              lineHeight=\"28px\"\n            >\n              Withdraw Assets\n            </Text>\n            <Button variant=\"unstyled\" onClick={() => onClose()}>\n              <CloseIcon />\n            </Button>\n          </Flex>\n          <ModalBody p={0}>\n            <Flex flexDir=\"column\">\n              <Divider my=\"18px\" />\n              <Text\n                fontWeight={700}\n                fontSize=\"14px\"\n                lineHeight=\"20px\"\n                fontFamily=\"heading\"\n                color=\"gray.50\"\n              >\n                Withdraw Assets\n                <Tooltip label=\"You can Withdraw your assets from your Synthetix Account to your Wallet Balance.\">\n                  <InfoIcon ml={1} w=\"10px\" h=\"10px\" mb={0.25} />\n                </Tooltip>\n              </Text>\n              <Flex\n                mt={3}\n                border=\"1px solid\"\n                borderColor=\"gray.900\"\n                rounded=\"base\"\n                justifyContent=\"space-between\"\n                bg=\"navy.900\"\n                flexDirection=\"column\"\n                p=\"12px\"\n              >\n                <Flex width=\"100%\" mb={1}>\n                  <Menu>\n                    {({ isOpen }) => (\n                      <>\n                        <MenuButton\n                          borderWidth=\"1px\"\n                          borderColor=\"gray.900\"\n                          as={Button}\n                          variant=\"unstyled\"\n                          textAlign=\"start\"\n                        >\n                          <Flex alignItems=\"center\" px=\"10px\">\n                            {collateralTypeDisplayName && (\n                              <TokenIcon\n                                height={16}\n                                width={16}\n                                symbol={collateralTypeDisplayName}\n                              />\n                            )}\n                            <Text\n                              mx={1}\n                              color=\"whiteAlpha.900\"\n                              fontSize=\"16px\"\n                              fontWeight={700}\n                              lineHeight=\"24px\"\n                            >\n                              {collateralTypeDisplayName}\n                            </Text>\n                            {isOpen ? (\n                              <ChevronUp mr={1} color=\"white\" />\n                            ) : (\n                              <ChevronDown mr={1} color=\"white\" />\n                            )}\n                          </Flex>\n                        </MenuButton>\n                        <MenuList>\n                          {collateralTypesHydated?.map((type) => (\n                            <MenuItem\n                              onClick={() => setSelectedCollateralType(type.tokenAddress)}\n                              key={type.tokenAddress}\n                            >\n                              <TokenIcon mr={1} height={16} width={16} symbol={type.symbol} />\n                              {type.symbol}\n                            </MenuItem>\n                          ))}\n                          {!isBase && (\n                            <MenuItem\n                              onClick={() => setSelectedCollateralType(usdTokens?.snxUSD || '')}\n                            >\n                              <TokenIcon mr={1} height={16} width={16} symbol=\"sUSD\" />\n                              sUSD\n                            </MenuItem>\n                          )}\n                        </MenuList>\n                      </>\n                    )}\n                  </Menu>\n                  <Flex>\n                    <Input\n                      id=\"input-deposit\"\n                      variant=\"unstyled\"\n                      placeholder=\"0.00\"\n                      textAlign=\"end\"\n                      fontSize=\"24px\"\n                      color=\"white\"\n                      type=\"number\"\n                      overflow=\"scroll\"\n                      fontWeight={700}\n                      data-cy=\"manage-input\"\n                      onChange={(e) => {\n                        setAmount(new Wei(e.target.value ? e.target.value : 0, 18));\n                      }}\n                    />\n                  </Flex>\n                </Flex>\n                <Flex justifyContent=\"space-between\" mt=\"5px\">\n                  <Text\n                    fontSize=\"12px\"\n                    display=\"flex\"\n                    color=\"gray.500\"\n                    data-cy=\"manage-input-balance-max-button\"\n                  >\n                    Account Available :&nbsp;\n                    <Text\n                      data-cy=\"withdraw-modal-max-button\"\n                      cursor=\"pointer\"\n                      onClick={() => {\n                        if (activeCollateral) {\n                          setAmount(activeCollateral.availableCollateral);\n                          const node = document.getElementById('input-deposit') as HTMLInputElement;\n                          node.value = activeCollateral.availableCollateral.toNumber().toFixed(2);\n                        }\n                      }}\n                    >\n                      {activeCollateral?.availableCollateral.toNumber().toFixed(2)}\n                    </Text>\n                  </Text>\n                  <Flex flexDir=\"column\" alignItems=\"end\" justifyContent=\"end\">\n                    <Text fontSize=\"12px\" color=\"gray.500\">\n                      $\n                      {amount.eq(0)\n                        ? '00.00'\n                        : amount\n                            .mul(\n                              collateralPrices && collateralPrices[selectedCollateralType]\n                                ? collateralPrices[selectedCollateralType]\n                                : ONEWEI\n                            )\n                            .toNumber()\n                            .toLocaleString('en-US', { maximumFractionDigits: 2 })}\n                    </Text>\n                  </Flex>\n                </Flex>\n              </Flex>\n              <Button\n                isDisabled={amount.eq(0)}\n                mt={6}\n                mb=\"2\"\n                onClick={withdraw}\n                isLoading={isLoadingAndromeda || isLoading}\n              >\n                {amount.eq(0) ? 'Enter Amount' : 'Withdraw'}\n              </Button>\n            </Flex>\n          </ModalBody>\n        </Flex>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { CollateralType } from '@snx-v3/useCollateralTypes';\nimport { FC } from 'react';\nimport { Button, Skeleton, Text } from '@chakra-ui/react';\nimport { generatePath, Link, useLocation } from 'react-router-dom';\nimport { formatNumber, formatNumberToUsd } from '@snx-v3/formatters';\nimport { useParams } from '@snx-v3/useParams';\n\nconst AccountVaultCollateralUi: FC<{\n  collateralValue: number;\n  collateralAmount: number;\n  collateralSymbol: string;\n  poolId: string;\n  isLoading: boolean;\n}> = ({ collateralValue, collateralAmount, collateralSymbol, isLoading, poolId }) => {\n  const location = useLocation();\n  return (\n    <>\n      <Text mt={2} fontSize=\"sm\" fontWeight=\"700\" color=\"gray.500\">\n        MY TOTAL\n      </Text>\n      {isLoading ? (\n        <Skeleton h={6} w=\"full\" />\n      ) : (\n        <Text fontSize=\"xl\" fontWeight={700} color=\"white\">\n          {formatNumber(collateralAmount)} {collateralSymbol}\n        </Text>\n      )}\n      {isLoading ? (\n        <Skeleton my={1} h={4} w=\"full\" />\n      ) : (\n        <Text fontSize=\"sm\" color=\"gray.500\" fontWeight=\"400\">\n          {formatNumberToUsd(collateralValue)}\n        </Text>\n      )}\n      <Button\n        as={Link}\n        to={{\n          pathname: generatePath('/positions/:collateral/:poolId', {\n            collateral: collateralSymbol,\n            poolId,\n          }),\n          search: location.search,\n        }}\n        mt={1}\n      >\n        Deposit\n      </Button>\n    </>\n  );\n};\n\nexport const AccountVaultCollateral: FC<{ collateral: CollateralType }> = ({ collateral }) => {\n  const params = useParams();\n\n  const { data, isLoading } = useLiquidityPosition({\n    accountId: params.accountId,\n    poolId: params.poolId,\n    tokenAddress: collateral?.tokenAddress,\n  });\n\n  if (!params.poolId || !params.accountId) return null;\n\n  return (\n    <AccountVaultCollateralUi\n      collateralAmount={data?.collateralAmount.toNumber() || 0}\n      collateralValue={data?.collateralPrice?.toNumber() || 0}\n      collateralSymbol={collateral.symbol}\n      isLoading={isLoading}\n      poolId={params.poolId}\n    />\n  );\n};\n","import { useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { wei } from '@synthetixio/wei';\nimport { useQuery } from '@tanstack/react-query';\nimport { z } from 'zod';\nimport { ZodBigNumber } from '@snx-v3/zod';\nimport { Network, useDefaultProvider, useNetwork } from '@snx-v3/useBlockchain';\nimport { erc7412Call } from '@snx-v3/withERC7412';\nimport { useAllCollateralPriceIds } from '@snx-v3/useAllCollateralPriceIds';\nimport { fetchPriceUpdates, priceUpdatesToPopulatedTx } from '@snx-v3/fetchPythPrices';\nimport { useAllCollateralPriceUpdates } from '../useCollateralPriceUpdates';\nimport { stringToHash } from '@snx-v3/tsHelpers';\n\nconst VaultCollateralSchema = z\n  .object({ value: ZodBigNumber, amount: ZodBigNumber })\n  .transform(({ value, amount }) => ({ value: wei(value), amount: wei(amount) }));\nconst VaultDebtSchema = ZodBigNumber.transform((x) => wei(x));\n\nexport const useVaultsData = (poolId?: number, customNetwork?: Network) => {\n  const { network } = useNetwork();\n  const { data: collateralTypes } = useCollateralTypes(false, customNetwork);\n  const { data: CoreProxyContract } = useCoreProxy(customNetwork);\n  const { data: collateralPriceUpdates } = useAllCollateralPriceIds(customNetwork);\n\n  const provider = useDefaultProvider();\n  const { data: priceUpdateTx } = useAllCollateralPriceUpdates();\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'VaultCollaterals',\n      {\n        pool: poolId,\n        tokens: collateralTypes ? collateralTypes?.map((x) => x.tokenAddress).sort() : [],\n        priceUpdateTx: stringToHash(priceUpdateTx?.data),\n      },\n      { customNetwork: !!customNetwork?.id },\n    ],\n    queryFn: async () => {\n      if (\n        !CoreProxyContract ||\n        !collateralTypes ||\n        !poolId ||\n        !collateralPriceUpdates ||\n        !network ||\n        !provider\n      ) {\n        throw Error('useVaultsData should not be enabled when missing data');\n      }\n\n      const collateralCallsP = Promise.all(\n        collateralTypes.map((collateralType) =>\n          CoreProxyContract.populateTransaction.getVaultCollateral(\n            poolId,\n            collateralType.tokenAddress\n          )\n        )\n      );\n\n      const debtCallsP = Promise.all(\n        collateralTypes.map((collateralType) =>\n          CoreProxyContract.populateTransaction.getVaultDebt(poolId, collateralType.tokenAddress)\n        )\n      );\n\n      const collateralPriceUpdateCallsP = fetchPriceUpdates(\n        collateralPriceUpdates,\n        network.isTestnet\n      ).then((signedData) => priceUpdatesToPopulatedTx('0x', collateralPriceUpdates, signedData));\n\n      const calls = await Promise.all([collateralPriceUpdateCallsP, collateralCallsP, debtCallsP]);\n\n      if (priceUpdateTx) {\n        calls.unshift(priceUpdateTx as any);\n      }\n\n      return await erc7412Call(\n        network,\n        provider,\n        calls.flat(),\n        (multicallResult) => {\n          if (!Array.isArray(multicallResult)) throw Error('Expected array');\n\n          const collateralResult = multicallResult.slice(0, collateralTypes.length);\n          const debtResult = multicallResult.slice(collateralTypes.length);\n\n          return collateralResult.map((bytes: string, i: number) => {\n            const debtBytes = debtResult[i];\n            const decodedDebt = CoreProxyContract.interface.decodeFunctionResult(\n              'getVaultDebt',\n              debtBytes\n            );\n\n            const decodedCollateral = CoreProxyContract.interface.decodeFunctionResult(\n              'getVaultCollateral',\n              bytes\n            );\n            const collateral = VaultCollateralSchema.parse({ ...decodedCollateral });\n            const debt = VaultDebtSchema.parse(decodedDebt[0]);\n            return {\n              debt,\n              collateral,\n              collateralType: collateralTypes[i],\n            };\n          });\n        },\n        'useVaultsData'\n      );\n    },\n    enabled: Boolean(\n      collateralTypes?.length && CoreProxyContract && poolId && collateralPriceUpdates\n    ),\n  });\n};\n\nexport type VaultsDataType = ReturnType<typeof useVaultsData>['data'];\n","import { Box, Divider, Flex, Skeleton, Text } from '@chakra-ui/react';\nimport { useVaultsData, VaultsDataType } from '@snx-v3/useVaultsData';\nimport React, { FC } from 'react';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { formatNumber, formatNumberToUsd, formatPercent } from '@snx-v3/formatters';\nimport { useParams } from '@snx-v3/useParams';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { CollateralIcon } from '@snx-v3/icons';\nimport { useCollateralPrices } from '@snx-v3/useCollateralPrices';\nimport { useApr } from '@snx-v3/useApr';\nimport { Tooltip } from '@snx-v3/Tooltip';\n\nexport const calculateVaultTotals = (vaultsData: VaultsDataType) => {\n  const zeroValues = { collateral: { value: wei(0), amount: wei(0) }, debt: wei(0) };\n  if (!vaultsData) return zeroValues;\n  return vaultsData.reduce((acc, { collateral, debt }) => {\n    acc.collateral = {\n      value: acc.collateral.value.add(collateral.value),\n      amount: acc.collateral.amount.add(collateral.amount),\n    };\n    acc.debt = acc.debt.add(debt);\n    return acc;\n  }, zeroValues);\n};\n\nexport const CollateralSectionUi: FC<{\n  vaultsData: VaultsDataType;\n  collateralPriceByAddress?: Record<string, Wei | undefined>;\n  apr?: number;\n  isAprLoading?: boolean;\n}> = ({ vaultsData, collateralPriceByAddress, apr, isAprLoading }) => {\n  const { collateral: totalCollateral, debt: totalDebt } = calculateVaultTotals(vaultsData);\n\n  return (\n    <BorderBox padding={4} bg=\"navy.700\" flexDirection=\"column\" data-testid=\"pool collateral types\">\n      <Text fontWeight={700} fontSize=\"xl\">\n        Pool Collateralization\n      </Text>\n      <BorderBox padding={4} mt={4} flexDirection=\"column\">\n        <Flex\n          justifyContent=\"space-between\"\n          flexDirection={{ base: 'row', md: 'column', lg: 'row' }}\n        >\n          <Text\n            display=\"flex\"\n            alignItems=\"center\"\n            fontWeight={700}\n            fontSize=\"md\"\n            gap={1}\n            color=\"white\"\n          >\n            Total TVL\n          </Text>\n          {!vaultsData ? (\n            <Skeleton w={16} h={6} />\n          ) : (\n            <Text fontWeight={700} fontSize=\"xl\" color=\"white\" data-testid=\"pool tvl\">\n              {formatNumberToUsd(totalCollateral.value.toNumber())}\n            </Text>\n          )}\n        </Flex>\n        <Flex\n          justifyContent=\"space-between\"\n          flexDirection={{ base: 'row', md: 'column', lg: 'row' }}\n        >\n          <Text\n            display=\"flex\"\n            alignItems=\"center\"\n            fontWeight={700}\n            fontSize=\"md\"\n            gap={1}\n            color=\"white\"\n          >\n            Total Debt\n          </Text>\n          {!vaultsData ? (\n            <Skeleton mt={1} w={16} h={6} />\n          ) : (\n            <Text fontWeight={700} fontSize=\"xl\" color=\"white\" data-testid=\"pool total debt\">\n              {formatNumberToUsd(totalDebt.toNumber())}\n            </Text>\n          )}\n        </Flex>\n        <Flex\n          justifyContent=\"space-between\"\n          flexDirection={{ base: 'row', md: 'column', lg: 'row' }}\n        >\n          <Text\n            display=\"flex\"\n            alignItems=\"center\"\n            fontWeight={700}\n            fontSize=\"md\"\n            gap={1}\n            color=\"white\"\n          >\n            APR\n          </Text>\n          {isAprLoading ? (\n            <Skeleton mt={1} w={16} h={6} />\n          ) : (\n            <Tooltip label=\"APR is a combination of past week pool performance and rewards.\">\n              <Text fontWeight={700} fontSize=\"xl\" color=\"white\">\n                {`${!!apr ? apr.toFixed(2) : '-'}%`}\n              </Text>\n            </Tooltip>\n          )}\n        </Flex>\n      </BorderBox>\n      <Flex flexDirection=\"column\" justifyContent=\"space-between\">\n        {!vaultsData || !collateralPriceByAddress ? (\n          <Box>\n            <Skeleton mt={4} w=\"full\" height={24} />\n            <Skeleton mt={2} w=\"full\" height={24} />\n          </Box>\n        ) : (\n          <>\n            <Divider mt={6} mb={4} />\n            {vaultsData.map((vaultCollateral) => {\n              const price = collateralPriceByAddress?.[vaultCollateral.collateralType.tokenAddress];\n              return (\n                <React.Fragment key={vaultCollateral.collateralType.tokenAddress}>\n                  <Box\n                    display=\"flex\"\n                    px={4}\n                    mb={2}\n                    flexDirection=\"column\"\n                    borderBottom=\"1px\"\n                    borderColor=\"gray.900\"\n                    _last={{ borderBottom: 'none' }}\n                    data-testid=\"pool collateral\"\n                    data-collateral={vaultCollateral.collateralType.symbol}\n                  >\n                    <Flex color=\"white\" display=\"flex\" gap={1} alignItems=\"center\">\n                      <CollateralIcon\n                        width=\"30px\"\n                        height=\"30px\"\n                        fill=\"#0B0B22\"\n                        color=\"#00D1FF\"\n                        symbol={vaultCollateral.collateralType.symbol}\n                      />\n                      <Text fontWeight={700} fontSize=\"xl\">\n                        {vaultCollateral.collateralType.displaySymbol}\n                      </Text>\n                      <Text\n                        fontSize=\"sm\"\n                        color=\"gray.400\"\n                        fontWeight=\"400\"\n                        data-testid=\"collateral price\"\n                      >\n                        {price ? formatNumberToUsd(price.toNumber()) : '-'}\n                      </Text>\n                    </Flex>\n                    <Flex gap={2} justifyContent=\"space-between\">\n                      <Flex flexBasis=\"50%\" flexDirection=\"column\">\n                        <Text\n                          mt={2}\n                          fontSize=\"sm\"\n                          color=\"gray.500\"\n                          textTransform=\"uppercase\"\n                          whiteSpace=\"nowrap\"\n                        >\n                          TVL\n                        </Text>\n                        <Text\n                          fontSize=\"md\"\n                          fontWeight={700}\n                          color=\"white\"\n                          data-testid=\"collateral value\"\n                        >\n                          {formatNumberToUsd(vaultCollateral.collateral.value.toNumber())}\n                        </Text>\n                        <Text\n                          fontSize=\"sm\"\n                          color=\"gray.500\"\n                          fontWeight=\"400\"\n                          data-testid=\"collateral amount\"\n                        >\n                          {formatNumber(vaultCollateral.collateral.amount.toNumber())}{' '}\n                          {vaultCollateral.collateralType.displaySymbol}\n                        </Text>\n                      </Flex>\n                      <Flex flexBasis=\"50%\" flexDirection=\"column\">\n                        <Text\n                          mt={2}\n                          fontSize=\"sm\"\n                          color=\"gray.500\"\n                          textTransform=\"uppercase\"\n                          whiteSpace=\"nowrap\"\n                        >\n                          Debt\n                        </Text>\n                        <Text\n                          fontSize=\"md\"\n                          fontWeight={700}\n                          color=\"white\"\n                          data-testid=\"collateral debt\"\n                        >\n                          {formatNumberToUsd(vaultCollateral.debt.toNumber())}\n                        </Text>\n                        <Text\n                          fontSize=\"sm\"\n                          color=\"gray.500\"\n                          fontWeight=\"400\"\n                          data-testid=\"collateral cratio\"\n                        >\n                          VAULT C-RATIO:{' '}\n                          {vaultCollateral.debt.eq(0)\n                            ? '-'\n                            : formatPercent(\n                                vaultCollateral.collateral.value\n                                  .div(vaultCollateral.debt)\n                                  .toNumber(),\n                                { maximumFractionDigits: 0 }\n                              )}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                </React.Fragment>\n              );\n            })}\n          </>\n        )}\n      </Flex>\n    </BorderBox>\n  );\n};\n\nexport const CollateralSection = () => {\n  const params = useParams();\n\n  const { data: vaultsData } = useVaultsData(params.poolId ? parseFloat(params.poolId) : undefined);\n  const { data: collateralPriceByAddress } = useCollateralPrices();\n  const { data: aprData, isLoading: isAprLoading } = useApr();\n\n  return (\n    <CollateralSectionUi\n      vaultsData={vaultsData}\n      collateralPriceByAddress={collateralPriceByAddress}\n      apr={aprData?.combinedApr}\n      isAprLoading={isAprLoading}\n    />\n  );\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { getSubgraphUrl } from '@snx-v3/constants';\nimport { z } from 'zod';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { useNetwork } from '@snx-v3/useBlockchain';\n\nconst GraphBigIntSchema = z.string().transform((src) => wei(src, 18, true));\nconst GraphBigDecimalSchema = z.string().transform((src) => wei(src, 18, true));\n\nconst calculateMarketPnl = (netIssuance: Wei, reportedDebt: Wei) =>\n  reportedDebt.add(netIssuance).mul(-1);\n\nexport const MarketSnapshotByWeekSchema = z\n  .object({\n    id: z.string(),\n    usd_deposited: GraphBigDecimalSchema,\n    usd_withdrawn: GraphBigDecimalSchema,\n    net_issuance: GraphBigDecimalSchema, // withdrawn - deposited\n    reported_debt: GraphBigDecimalSchema,\n    updated_at: z.string(),\n    updates_in_period: z.string(),\n  })\n  .transform((market) => ({\n    ...market,\n    pnl: calculateMarketPnl(market.net_issuance, market.reported_debt),\n  }));\n\nconst MarketSchema = z\n  .object({\n    id: z.string(),\n    address: z.string(),\n    usd_deposited: GraphBigDecimalSchema,\n    usd_withdrawn: GraphBigDecimalSchema,\n    net_issuance: GraphBigDecimalSchema, // withdrawn - deposited\n    reported_debt: GraphBigDecimalSchema,\n    updated_at: z.string(),\n    market_snapshots_by_week: z.array(MarketSnapshotByWeekSchema),\n  })\n  .transform((market) => ({\n    ...market,\n    pnl: calculateMarketPnl(market.net_issuance, market.reported_debt),\n  }));\n\nconst MarketConfigurationSchema = z.object({\n  id: z.string(), //PoolId-MarketId\n  market: MarketSchema,\n  weight: GraphBigIntSchema,\n  max_debt_share_value: GraphBigDecimalSchema,\n});\n\nconst RewardDistributorSchema = z.object({\n  id: z.string(),\n  total_distributed: z.string(),\n  rewards_distributions: z\n    .array(\n      z.object({\n        amount: z.string(),\n        duration: z.string(),\n        created_at: z.string(),\n      })\n    )\n    .default([]),\n});\n\nexport const PoolSchema = z.object({\n  id: z.string(),\n  name: z.union([z.string(), z.null()]).transform((name) => (name ? name : 'Unnamed Pool')),\n  total_weight: z.union([z.null(), GraphBigIntSchema]),\n  configurations: z.array(MarketConfigurationSchema),\n  registered_distributors: z.array(RewardDistributorSchema).default([]),\n});\n\nexport type PoolType = z.infer<typeof PoolSchema>;\n\nconst PoolDataResultSchema = z.object({\n  data: z.object({\n    pool: z.union([PoolSchema, z.null()]),\n  }),\n});\n\nconst gql = (data: TemplateStringsArray) => data[0];\n\nconst PoolsDataDocument = gql`\n  query pool($id: String) {\n    pool(id: $id) {\n      id\n      name\n      registered_distributors(where: { isActive: true }) {\n        id\n        total_distributed\n        rewards_distributions(orderBy: created_at, orderDirection: desc) {\n          amount\n          duration\n          created_at\n        }\n      }\n      total_weight\n      configurations {\n        id\n        weight\n        max_debt_share_value\n        market {\n          id\n          address\n          usd_deposited\n          usd_withdrawn\n          net_issuance\n          reported_debt\n          updated_at\n          market_snapshots_by_week(first: 2, orderBy: updated_at, orderDirection: desc) {\n            id\n            usd_deposited\n            usd_withdrawn\n            net_issuance\n            reported_debt\n            updated_at\n            updates_in_period\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst getPoolData = async (chainName: string, id: string) => {\n  const url = getSubgraphUrl(chainName);\n\n  const res = await fetch(url, {\n    method: 'POST',\n    body: JSON.stringify({ query: PoolsDataDocument, variables: { id } }),\n  });\n\n  const json = await res.json();\n\n  if (json.errors) {\n    const { message } = json.errors[0];\n    throw new Error(message);\n  }\n  return PoolDataResultSchema.parse(json);\n};\n\nexport const usePoolData = (poolId?: string) => {\n  const { network } = useNetwork();\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'PoolData', { pool: poolId }],\n    queryFn: async () => {\n      if (!poolId || !network) throw Error('No poolId or network');\n      const poolData = await getPoolData(network?.name, poolId);\n\n      if (!poolData.data.pool) {\n        throw Error(`Pool ${poolId} not found`);\n      }\n\n      return poolData.data.pool;\n    },\n    enabled: Boolean(poolId && parseInt(poolId) > 0),\n  });\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\nimport { useMulticall3 } from '@snx-v3/useMulticall3';\nimport { z } from 'zod';\nimport { useNetwork } from '@snx-v3/useBlockchain';\n\nconst MarketNamesSchema = z.array(z.string());\n\nconst marketAbi = ['function name(uint128 marketId) external view returns (string memory)'];\nconst marketInterface = new ethers.utils.Interface(marketAbi);\n\nexport const useMarketNamesById = (\n  marketIdsAndAddresses?: { marketId: string; address: string }[]\n) => {\n  const { data: MultiCall3 } = useMulticall3();\n  const { network } = useNetwork();\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'MarketNamesById',\n      {\n        markets: marketIdsAndAddresses\n          ? marketIdsAndAddresses.map((market) => market.marketId).sort()\n          : [],\n      },\n    ],\n    queryFn: async () => {\n      if (!marketIdsAndAddresses || !MultiCall3) {\n        throw Error('Query should not be enable when contract or marketIdsAndAddresses missing');\n      }\n      const calls = marketIdsAndAddresses.map((x) => ({\n        target: x.address,\n        callData: marketInterface.encodeFunctionData('name', [x.marketId]),\n      }));\n      const result = await MultiCall3.callStatic.aggregate(calls);\n      const decoded = result.returnData.map(\n        (bytes: ethers.utils.BytesLike) => marketInterface.decodeFunctionResult('name', bytes)[0]\n      );\n      return MarketNamesSchema.parse(decoded);\n    },\n    select: (marketNames) =>\n      marketNames.reduce((acc: Record<string, string | undefined>, marketName, index) => {\n        const marketId = marketIdsAndAddresses?.[index].marketId;\n        if (!marketId) return acc;\n        acc[marketId] = marketName;\n        return acc;\n      }, {}),\n    enabled: Boolean(MultiCall3 && marketIdsAndAddresses && marketIdsAndAddresses.length > 0),\n  });\n};\n","import { FC } from 'react';\nimport {\n  Flex,\n  Table,\n  TableCellProps,\n  TableContainer,\n  Text,\n  Th,\n  Td,\n  Thead,\n  Tr,\n  Tbody,\n  Skeleton,\n} from '@chakra-ui/react';\nimport { PoolType, usePoolData } from '@snx-v3/usePoolData';\nimport { formatPercent } from '@snx-v3/formatters';\nimport { useParams } from '@snx-v3/useParams';\nimport { useMarketNamesById } from '@snx-v3/useMarketNamesById';\nimport { BorderBox } from '@snx-v3/BorderBox';\n\nconst StyledTh: FC<TableCellProps> = (props) => (\n  <Th\n    textTransform=\"none\"\n    sx={{\n      paddingBottom: 1,\n      paddingTop: 4,\n      borderColor: 'gray.900',\n      borderTop: 'none',\n      paddingLeft: 2,\n      paddingRight: 2,\n    }}\n    {...props}\n  />\n);\n\nconst StyledTd: FC<TableCellProps & { isLastItem?: boolean }> = ({ isLastItem, ...props }) => (\n  <Td\n    sx={{\n      borderBottom: isLastItem ? 'none' : '1px',\n      borderBottomColor: 'gray.900',\n      paddingLeft: 2,\n      paddingRight: 2,\n    }}\n    {...props}\n  />\n);\n\nconst LoadingRow = () => (\n  <Tr>\n    <StyledTd>\n      <Skeleton w=\"full\" height={8} />\n    </StyledTd>\n    <StyledTd>\n      <Skeleton w=\"full\" height={8} />\n    </StyledTd>\n    <StyledTd>\n      <Skeleton w=\"full\" height={8} />\n    </StyledTd>\n    <StyledTd>\n      <Skeleton w=\"full\" height={8} />\n    </StyledTd>\n  </Tr>\n);\n\nexport function MarketSectionUi({\n  poolData,\n  marketNamesById,\n  poolId,\n  poolDataFetched,\n}: {\n  poolData?: PoolType;\n  marketNamesById?: Record<string, string | undefined>;\n  poolId?: string;\n  poolDataFetched: boolean;\n}) {\n  if (poolDataFetched && !poolData) {\n    return (\n      <BorderBox padding={4}>\n        <Text>Pool with id: {poolId} does not exist</Text>\n      </BorderBox>\n    );\n  }\n  return (\n    <BorderBox bg=\"navy.700\" padding={4} flexDirection=\"column\" data-testid=\"pool markets\">\n      <Text fontSize=\"xl\" fontWeight={700}>\n        Markets\n      </Text>\n\n      <Flex>\n        <TableContainer w=\"100%\">\n          <Table variant=\"simple\">\n            <Thead>\n              <Tr>\n                <StyledTh>Market</StyledTh>\n                <StyledTh>Pool Allocation</StyledTh>\n                {/* <StyledTh>Total Deposited</StyledTh>\n                <StyledTh>Total Withdrawn</StyledTh> */}\n              </Tr>\n            </Thead>\n            <Tbody>\n              {!poolData && <LoadingRow />}\n              {poolData?.configurations.length === 0 ? (\n                <Tr w=\"full\">\n                  <Td colSpan={4} border=\"none\">\n                    <Text textAlign=\"center\" mt={4}>\n                      No markets configured for the pool\n                    </Text>\n                  </Td>\n                </Tr>\n              ) : (\n                poolData?.configurations.map(({ id, market, weight }, i) => {\n                  const isLastItem = i + 1 === poolData.configurations.length;\n\n                  return (\n                    <Tr key={id} data-testid=\"pool market\" data-market={id}>\n                      <StyledTd isLastItem={isLastItem}>\n                        <Text fontSize=\"sm\" display=\"block\" data-testid=\"market name\">\n                          {marketNamesById?.[market.id] ? marketNamesById[market.id] : '-'}\n                        </Text>\n                        <Text fontSize=\"xs\" color=\"gray.500\" data-testid=\"market id\">\n                          ID: {market.id}\n                        </Text>\n                      </StyledTd>\n                      <StyledTd isLastItem={isLastItem} fontSize=\"sm\" data-testid=\"pool allocation\">\n                        {poolData.total_weight ? (\n                          <>\n                            <Text display=\"block\">\n                              {formatPercent(weight.div(poolData.total_weight).toNumber())}\n                            </Text>\n                          </>\n                        ) : (\n                          '-'\n                        )}\n                      </StyledTd>\n                      {/* Total Deposited */}\n                      {/* <StyledTd isLastItem={isLastItem} data-testid=\"market growth\">\n                        <Text fontSize=\"sm\" display=\"block\" color=\"gray.50\">\n                          {formatNumberToUsd(market.usd_deposited.toNumber())}\n                        </Text>\n                      </StyledTd> */}\n                      {/* Total Withdrawn */}\n                      {/* <StyledTd isLastItem={isLastItem}>\n                        <Text fontSize=\"sm\" display=\"block\" color=\"gray.50\">\n                          {formatNumberToUsd(market.usd_withdrawn.toNumber())}\n                        </Text>\n                      </StyledTd> */}\n                    </Tr>\n                  );\n                })\n              )}\n            </Tbody>\n          </Table>\n        </TableContainer>\n      </Flex>\n    </BorderBox>\n  );\n}\n\nexport const MarketSection = () => {\n  const params = useParams();\n  const { data: poolData, isFetched: poolDataFetched } = usePoolData(params.poolId);\n\n  const marketIdsAndAddresses = poolData?.configurations.map(({ market }) => ({\n    marketId: market.id,\n    address: market.address,\n  }));\n\n  const { data: marketNamesById } = useMarketNamesById(marketIdsAndAddresses);\n\n  return (\n    <MarketSectionUi\n      poolId={params.poolId}\n      poolDataFetched={poolDataFetched}\n      poolData={poolData}\n      marketNamesById={marketNamesById}\n    />\n  );\n};\n","import { Flex, Heading } from '@chakra-ui/react';\nimport { useParams } from '@snx-v3/useParams';\nimport { usePool } from '@snx-v3/usePools';\n\nexport const PoolHeader = () => {\n  const params = useParams();\n  const { data: pool } = usePool(params.poolId);\n\n  return (\n    <Flex gap={2} alignItems=\"flex-end\">\n      <Heading fontWeight={700} fontSize=\"3xl\">\n        {pool ? pool.name : 'Unknown Pool'}\n      </Heading>\n    </Flex>\n  );\n};\n","import { Input, InputProps } from '@chakra-ui/react';\nimport { ChangeEvent, useCallback, useEffect, useRef, useState } from 'react';\nimport { Wei, wei } from '@synthetixio/wei';\n\nexport interface NumberInputProps extends InputProps {\n  'data-testid'?: string;\n  'data-max'?: string;\n}\n\nexport const NUMBER_REGEX = /^([0-9]*[.])?[0-9]{0,18}$/;\n\nfunction cleanupNumber(value: Wei) {\n  // Cleanup trailing precision zeroes\n  const float = parseFloat(value.toString());\n  if (float === value.toNumber()) {\n    return `${float}`;\n  }\n  return value.toString();\n}\n\nexport function NumberInput({\n  value,\n  onChange,\n  min,\n  max,\n  InputProps,\n  dataTestId,\n}: {\n  onChange?: (value: Wei) => void;\n  value: Wei;\n  min?: Wei;\n  max?: Wei;\n  InputProps?: NumberInputProps;\n  dataTestId?: string;\n}) {\n  const [inputValue, setInputValue] = useState(value.gt(0) ? value.toString() : '');\n\n  const onInputChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      setInputValue(e.target.value);\n      if (!onChange) {\n        // Could be a read-only input\n        return;\n      }\n      if (!NUMBER_REGEX.test(`${e.target.value}`)) {\n        return;\n      }\n      let nextValue = value;\n      try {\n        nextValue = wei(e.target.value || 0);\n      } catch (_err) {\n        // whatever\n      }\n      if (!value.eq(nextValue)) {\n        onChange(nextValue);\n      }\n    },\n    [onChange, value]\n  );\n\n  const ref = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n    if (!NUMBER_REGEX.test(`${inputValue}`)) {\n      ref.current.setCustomValidity('Invalid number');\n      return;\n    }\n    if (value && value.eq(0)) {\n      ref.current.setCustomValidity('Value required');\n      return;\n    }\n    if (min && min.gte(0) && value && value.lt(min)) {\n      ref.current.setCustomValidity(`Value smaller than minimum of ${cleanupNumber(min)}`);\n      return;\n    }\n    if (max && max.gte(0) && value && value.gt(max)) {\n      ref.current.setCustomValidity(`Value greater than maximum of ${cleanupNumber(max)}`);\n      return;\n    }\n    ref.current.setCustomValidity('');\n  }, [inputValue, min, max, value]);\n\n  useEffect(() => {\n    if (value.eq(0)) {\n      return setInputValue('');\n    }\n    return setInputValue(cleanupNumber(value));\n  }, [value]);\n\n  return (\n    <Input\n      ref={ref}\n      flex=\"1\"\n      type=\"text\"\n      border=\"none\"\n      borderWidth=\"0px\"\n      textAlign=\"end\"\n      p={0}\n      outline=\"none\"\n      fontFamily=\"heading\"\n      fontSize=\"xl\"\n      fontWeight=\"black\"\n      lineHeight=\"2xl\"\n      color=\"white\"\n      height=\"unset\"\n      autoFocus={true}\n      placeholder=\"Enter Amount\"\n      _focus={{ boxShadow: 'none !important' }}\n      _placeholder={{ color: 'whiteAlpha.700' }}\n      value={inputValue}\n      onChange={onInputChange}\n      data-cy={dataTestId}\n      {...InputProps}\n    />\n  );\n}\n","import { calculateCRatio } from '@snx-v3/calculations';\nimport { Wei, wei } from '@synthetixio/wei';\n\nexport const validatePosition = ({\n  issuanceRatioD18,\n  collateralAmount,\n  collateralPrice,\n  debt,\n  collateralChange,\n  debtChange,\n}: {\n  issuanceRatioD18?: Wei;\n  collateralAmount?: Wei;\n  collateralPrice?: Wei;\n  debt?: Wei;\n  collateralChange: Wei;\n  debtChange: Wei;\n}) => {\n  const targetCRatio = issuanceRatioD18 ? issuanceRatioD18 : wei(1);\n  const newDebt = wei(debt || 0).add(debtChange);\n  const newCollateralAmount = wei(collateralAmount || 0).add(collateralChange);\n  const newCollateralValue = newCollateralAmount.mul(collateralPrice || 0);\n\n  const newCRatio = calculateCRatio(newDebt, newCollateralValue);\n  const maybeMaxDebt = wei(newCollateralAmount)\n    .mul(collateralPrice || 0)\n    .div(targetCRatio)\n    .sub(debt || 0);\n\n  const maxDebt = maybeMaxDebt.gte(0) ? maybeMaxDebt : wei(0);\n\n  const isValid =\n    (newCRatio.gte(targetCRatio) || newCRatio.lte(0)) &&\n    (newDebt.lte(0) || newCollateralAmount.gt(0));\n\n  return {\n    isValid,\n    hasChanges: !collateralChange.eq(0) || !debtChange.eq(0),\n    newCRatio,\n    newDebt,\n    newCollateralAmount,\n    maxDebt,\n  };\n};\n","import { Button, Flex, Text } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { DollarCircle } from '@snx-v3/icons';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { FC, useContext } from 'react';\nimport { validatePosition } from '@snx-v3/validatePosition';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useParams } from '@snx-v3/useParams';\nimport { LiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport Wei from '@synthetixio/wei';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { SUSDCIcon } from '@snx-v3/icons/SUSDCIcon';\n\nconst BorrowUi: FC<{\n  debtChange: Wei;\n  maxDebt: Wei;\n  setDebtChange: (val: Wei) => void;\n}> = ({ debtChange, setDebtChange, maxDebt }) => {\n  const { network } = useNetwork();\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n  return (\n    <Flex flexDirection=\"column\">\n      <Text fontSize=\"md\" fontWeight=\"700\" mb=\"0.5\">\n        {isBase ? 'Claim USDC' : 'Borrow snxUSD'}\n      </Text>\n      <Text fontSize=\"sm\" color=\"gray.400\" mb=\"4\">\n        {isBase\n          ? 'Claim USDC fees you have earned from providing liquidity. These will be available in 24h for withdrawal.'\n          : `Take an interest-free loan of snxUSD against your collateral. This\n              increases your debt and decreases your C-Ratio.`}\n      </Text>\n      <BorderBox display=\"flex\" py={2} px={3} mb=\"4\">\n        <Text display=\"flex\" gap={2} alignItems=\"center\" fontWeight=\"600\" mx=\"2\">\n          {isBase ? <SUSDCIcon /> : <DollarCircle />}\n          {isBase ? 'USDC' : 'snxUSD'}\n        </Text>\n        <Flex flexDirection=\"column\" justifyContent=\"flex-end\" flexGrow={1}>\n          <NumberInput\n            InputProps={{\n              isRequired: true,\n              'data-testid': 'borrow amount input',\n              'data-max': maxDebt.toString(),\n            }}\n            value={debtChange}\n            onChange={(val) => setDebtChange(val)}\n            max={maxDebt}\n          />\n          <Flex flexDirection=\"column\" alignItems=\"flex-end\" fontSize=\"xs\" color=\"whiteAlpha.700\">\n            <Flex\n              gap=\"1\"\n              cursor=\"pointer\"\n              onClick={() => {\n                if (!maxDebt) {\n                  return;\n                }\n                setDebtChange(maxDebt);\n              }}\n            >\n              <Text>Max:</Text>\n              <Amount value={maxDebt} /> {isBase ? 'USDC' : 'snxUSD'}\n            </Flex>\n          </Flex>\n        </Flex>\n      </BorderBox>\n      <Button data-testid=\"borrow submit\" type=\"submit\">\n        {isBase ? 'Claim USDC' : 'Borrow snxUSD'}\n      </Button>\n    </Flex>\n  );\n};\n\nexport const Borrow = ({ liquidityPosition }: { liquidityPosition?: LiquidityPosition }) => {\n  const params = useParams();\n  const { debtChange, collateralChange, setDebtChange } = useContext(ManagePositionContext);\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n\n  const { maxDebt } = validatePosition({\n    issuanceRatioD18: collateralType?.issuanceRatioD18,\n    collateralAmount: liquidityPosition?.collateralAmount,\n    collateralPrice: liquidityPosition?.collateralPrice,\n    debt: liquidityPosition?.debt,\n    collateralChange: collateralChange,\n    debtChange: debtChange,\n  });\n\n  return <BorrowUi setDebtChange={setDebtChange} debtChange={debtChange} maxDebt={maxDebt} />;\n};\n","import { FC } from 'react';\nimport { Flex, Badge } from '@chakra-ui/react';\nexport const PercentBadges: FC<{\n  disabled: boolean;\n  onBadgePress: (num: number) => void;\n  activeBadge: number;\n}> = ({ onBadgePress, activeBadge, disabled }) => {\n  return (\n    <Flex w=\"100%\" justifyContent=\"space-between\" mt={2} mb={1}>\n      <Badge\n        variant=\"percent\"\n        sx={{\n          bg: activeBadge >= 0.25 ? 'cyan.500' : 'whiteAlpha.300',\n          color: activeBadge >= 0.25 ? 'black' : 'cyan.500',\n          cursor: disabled ? 'not-allowed' : 'pointer',\n        }}\n        mr={1}\n        onClick={disabled ? undefined : () => onBadgePress(0.25)}\n      >\n        25%\n      </Badge>\n      <Badge\n        variant=\"percent\"\n        sx={{\n          bg: activeBadge >= 0.5 ? 'cyan.500' : 'whiteAlpha.300',\n          color: activeBadge >= 0.5 ? 'black' : 'cyan.500',\n          cursor: disabled ? 'not-allowed' : 'pointer',\n        }}\n        mx={1}\n        onClick={disabled ? undefined : () => onBadgePress(0.5)}\n        data-cy=\"manage-percent-50\"\n      >\n        50%\n      </Badge>\n      <Badge\n        variant=\"percent\"\n        sx={{\n          bg: activeBadge >= 0.75 ? 'cyan.500' : 'whiteAlpha.300',\n          color: activeBadge >= 0.75 ? 'black' : 'cyan.500',\n          cursor: disabled ? 'not-allowed' : 'pointer',\n        }}\n        mx={1}\n        onClick={disabled ? undefined : () => onBadgePress(0.75)}\n      >\n        75%\n      </Badge>\n      <Badge\n        variant=\"percent\"\n        sx={{\n          bg: activeBadge === 1 ? 'cyan.500' : 'whiteAlpha.300',\n          color: activeBadge === 1 ? 'black' : 'cyan.500',\n          cursor: disabled ? 'not-allowed' : 'pointer',\n        }}\n        ml={1}\n        onClick={disabled ? undefined : () => onBadgePress(1)}\n      >\n        100%\n      </Badge>\n    </Flex>\n  );\n};\n","import { Button, Flex, Text } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { CollateralIcon } from '@snx-v3/icons';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { PercentBadges } from '@snx-v3/PercentBadges';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useEthBalance } from '@snx-v3/useEthBalance';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { FC, useContext, useMemo, useState } from 'react';\nimport { useParams } from '@snx-v3/useParams';\nimport { AccountCollateralType } from '@snx-v3/useAccountCollateral';\nimport { useTransferableSynthetix } from '@snx-v3/useTransferableSynthetix';\nimport { CollateralAlert } from '../';\nimport { useTokenBalance } from '@snx-v3/useTokenBalance';\nimport { LiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { useGetUSDTokens } from '@snx-v3/useGetUSDTokens';\n\nexport const DepositUi: FC<{\n  accountCollateral: AccountCollateralType;\n  collateralChange: Wei;\n  ethBalance?: Wei;\n  snxBalance?: {\n    transferable: Wei;\n    collateral?: Wei;\n  };\n  tokenBalance?: Wei;\n  displaySymbol: string;\n  symbol: string;\n  setCollateralChange: (val: Wei) => void;\n}> = ({\n  accountCollateral,\n  collateralChange,\n  setCollateralChange,\n  displaySymbol,\n  symbol,\n  tokenBalance,\n  ethBalance,\n  snxBalance,\n}) => {\n  const [activeBadge, setActiveBadge] = useState(0);\n\n  const combinedTokenBalance = useMemo(() => {\n    if (symbol === 'SNX') {\n      return snxBalance?.transferable;\n    }\n    if (symbol !== 'WETH') {\n      return tokenBalance;\n    }\n    if (!tokenBalance || !ethBalance) {\n      return undefined;\n    }\n    return tokenBalance.add(ethBalance);\n  }, [symbol, tokenBalance, ethBalance, snxBalance?.transferable]);\n\n  const maxAmount = useMemo(() => {\n    return combinedTokenBalance?.add(accountCollateral.availableCollateral.toString());\n  }, [accountCollateral.availableCollateral, combinedTokenBalance]);\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Text fontSize=\"md\" fontWeight=\"700\" mb=\"0.5\">\n        Add {displaySymbol}\n      </Text>\n      <Text fontSize=\"sm\" color=\"gray.400\" mb=\"4\">\n        Provide additional collateral to this position.\n      </Text>\n      <BorderBox display=\"flex\" flexDirection=\"column\" py={2} px={3} mb=\"4\">\n        <Flex>\n          <Text display=\"flex\" gap={2} alignItems=\"center\" fontWeight=\"600\" mx=\"2\">\n            <CollateralIcon symbol={symbol} />\n            {displaySymbol}\n          </Text>\n          <Flex flexDirection=\"column\" justifyContent=\"flex-end\" flexGrow={1}>\n            <Flex flexDirection=\"column\" justifyContent=\"flex-end\" flexGrow={1}>\n              <NumberInput\n                InputProps={{\n                  'data-testid': 'deposit amount input',\n                  'data-max': maxAmount?.toString(),\n                }}\n                value={collateralChange}\n                onChange={(value) => {\n                  setActiveBadge(0);\n                  setCollateralChange(value);\n                }}\n                max={maxAmount}\n                dataTestId=\"deposit-number-input\"\n              />\n              <Flex\n                flexDirection=\"column\"\n                alignItems=\"flex-end\"\n                fontSize=\"xs\"\n                color=\"whiteAlpha.700\"\n              >\n                {accountCollateral.availableCollateral.gt(0) ? (\n                  <Flex\n                    gap=\"1\"\n                    cursor=\"pointer\"\n                    onClick={() => setCollateralChange(accountCollateral.availableCollateral)}\n                  >\n                    <Text>Available {symbol} Collateral:</Text>\n                    <Amount value={accountCollateral?.availableCollateral} />\n                  </Flex>\n                ) : null}\n                <Flex\n                  gap=\"1\"\n                  cursor=\"pointer\"\n                  onClick={() => {\n                    const amount = symbol === 'SNX' ? snxBalance?.transferable : tokenBalance;\n                    if (!amount) {\n                      return;\n                    }\n\n                    setCollateralChange(amount);\n                  }}\n                >\n                  <Text>{symbol} Balance:</Text>\n                  <Amount value={symbol === 'SNX' ? snxBalance?.transferable : tokenBalance} />\n                </Flex>\n                {symbol === 'WETH' ? (\n                  <Flex\n                    gap=\"1\"\n                    cursor=\"pointer\"\n                    onClick={() => {\n                      if (!ethBalance) {\n                        return;\n                      }\n                      setCollateralChange(ethBalance);\n                    }}\n                  >\n                    <Text>ETH Balance:</Text>\n                    <Amount value={ethBalance} />\n                  </Flex>\n                ) : null}\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <PercentBadges\n          disabled={maxAmount ? maxAmount.eq(0) : false}\n          onBadgePress={(badgeNum) => {\n            if (!maxAmount) {\n              return;\n            }\n            if (activeBadge === badgeNum) {\n              setCollateralChange(wei(0));\n              setActiveBadge(0);\n              return;\n            }\n            setActiveBadge(badgeNum);\n            setCollateralChange(maxAmount.mul(badgeNum));\n          }}\n          activeBadge={activeBadge}\n        />\n      </BorderBox>\n      {snxBalance?.collateral && snxBalance?.collateral.gt(0) && symbol === 'SNX' && (\n        <CollateralAlert tokenBalance={snxBalance.collateral} />\n      )}\n      <Button\n        disabled={combinedTokenBalance === undefined}\n        data-testid=\"deposit submit\"\n        data-cy=\"deposit-submit-button\"\n        type=\"submit\"\n      >\n        Add {displaySymbol}\n      </Button>\n    </Flex>\n  );\n};\n\nexport const Deposit = ({ liquidityPosition }: { liquidityPosition?: LiquidityPosition }) => {\n  const { collateralChange, setCollateralChange } = useContext(ManagePositionContext);\n  const { network } = useNetwork();\n  const { collateralSymbol } = useParams();\n  const { data: usdTokens } = useGetUSDTokens();\n  const { data: collateralType } = useCollateralType(collateralSymbol);\n  const { data: transferrableSnx } = useTransferableSynthetix();\n\n  const { data: tokenBalance } = useTokenBalance(\n    isBaseAndromeda(network?.id, network?.preset) ? usdTokens?.USDC : collateralType?.tokenAddress\n  );\n\n  const { data: ethBalance } = useEthBalance();\n\n  if (!collateralType || !liquidityPosition?.accountCollateral) return null;\n\n  return (\n    <DepositUi\n      accountCollateral={liquidityPosition.accountCollateral}\n      displaySymbol={collateralType?.displaySymbol || ''}\n      tokenBalance={tokenBalance}\n      snxBalance={transferrableSnx}\n      ethBalance={ethBalance}\n      symbol={collateralType?.symbol || ''}\n      setCollateralChange={setCollateralChange}\n      collateralChange={collateralChange}\n    />\n  );\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { useNetwork, useProvider, useWallet } from '@snx-v3/useBlockchain';\nimport { Wei, wei } from '@synthetixio/wei';\nimport { ethers } from 'ethers';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\n\nexport function useTransferableSynthetix() {\n  const { network } = useNetwork();\n  const { activeWallet } = useWallet();\n  const provider = useProvider();\n  const { data: snxCollateral } = useCollateralType('SNX');\n\n  const accountAddress = activeWallet?.address;\n  const snxAddress = snxCollateral?.tokenAddress;\n\n  return useQuery({\n    enabled: Boolean(provider && accountAddress && snxAddress),\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'TransferableSynthetix',\n      { address: activeWallet?.address },\n    ],\n    queryFn: async function (): Promise<{ transferable: Wei; collateral?: Wei }> {\n      if (!(provider && accountAddress && snxAddress)) {\n        throw 'useTransferableSynthetix should not be enabled';\n      }\n      const contract = new ethers.Contract(\n        snxAddress,\n        [\n          'function balanceOf(address owner) view returns (uint256)',\n          'function transferableSynthetix(address account) view returns (uint256 transferable)',\n          'function collateral(address account) view returns (uint256 collateral)',\n        ],\n        provider\n      );\n      try {\n        // Cannon case\n        if (network?.name === 'cannon') {\n          const balanceOf = await contract.balanceOf(accountAddress);\n          return {\n            transferable: wei(balanceOf),\n          };\n        }\n\n        // Normal case for SNX case\n        const [transferableSynthetix, collateral] = await Promise.all([\n          contract.transferableSynthetix(accountAddress),\n          contract.collateral(accountAddress),\n        ]);\n\n        return {\n          transferable: wei(transferableSynthetix),\n          collateral: wei(collateral),\n        };\n      } catch (e) {\n        console.error(e);\n        throw e;\n      }\n    },\n  });\n}\n","import { ArrowDownIcon, ArrowUpIcon } from '@chakra-ui/icons';\nimport { Box, Button, Flex } from '@chakra-ui/react';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { BorrowIcon, DollarCircle } from '@snx-v3/icons';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { LiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { useParams } from '@snx-v3/useParams';\nimport { validatePosition } from '@snx-v3/validatePosition';\nimport { wei } from '@synthetixio/wei';\nimport {\n  FC,\n  FormEvent,\n  lazy,\n  PropsWithChildren,\n  Suspense,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { Borrow } from '../';\nimport { Repay } from '../';\nimport { Undelegate } from '../';\nimport { Deposit } from '../';\nimport { z } from 'zod';\nimport { safeImport } from '@synthetixio/safe-import';\nimport { calculateCRatio } from '@snx-v3/calculations';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\n\nconst RepayModal = lazy(() => safeImport(() => import('@snx-v3/RepayModal')));\nconst BorrowModal = lazy(() => safeImport(() => import('@snx-v3/BorrowModal')));\nconst DepositModal = lazy(() => safeImport(() => import('@snx-v3/DepositModal')));\nconst UndelegateModal = lazy(() => safeImport(() => import('@snx-v3/UndelegateModal')));\n\nconst validActions = ['borrow', 'deposit', 'repay', 'undelegate'] as const;\nconst ManageActionSchema = z.enum(validActions);\ntype ManageAction = z.infer<typeof ManageActionSchema>;\n\nconst ActionButton: FC<\n  PropsWithChildren<{\n    onClick?: (action: ManageAction) => void;\n    action: ManageAction;\n    activeAction?: string;\n    disabled?: boolean;\n  }>\n> = ({ children, action, activeAction, onClick, disabled }) => (\n  <BorderBox\n    as={Button}\n    fontWeight=\"700\"\n    fontSize=\"md\"\n    color=\"gray.50\"\n    bg=\"navy.900\"\n    _hover={{\n      bg: 'unset',\n    }}\n    _active={{\n      bg: 'unset',\n    }}\n    cursor={disabled ? 'not-allowed' : 'pointer'}\n    data-testid=\"manage action\"\n    data-action={action}\n    data-active={action === activeAction ? 'true' : undefined}\n    onClick={() => !disabled && onClick?.(action)}\n    py={2}\n    width=\"50%\"\n    textAlign=\"center\"\n    opacity={disabled ? '50%' : '100%'}\n    data-cy={`manage-action-${action}`}\n  >\n    {children}\n  </BorderBox>\n);\n\nconst ManageActionUi: FC<{\n  setActiveAction: (action: ManageAction) => void;\n  manageAction?: ManageAction;\n  onSubmit: (e: FormEvent) => void;\n  liquidityPosition?: LiquidityPosition;\n  network: Network | null;\n}> = ({ setActiveAction, manageAction, onSubmit, liquidityPosition, network }) => {\n  const debt = Number(liquidityPosition?.debt?.toString());\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n\n  return (\n    <Box as=\"form\" onSubmit={onSubmit}>\n      <Flex mt={2} gap={2}>\n        <ActionButton onClick={setActiveAction} action=\"deposit\" activeAction={manageAction}>\n          <ArrowDownIcon w=\"15px\" h=\"15px\" mr={1} /> Add Collateral\n        </ActionButton>\n        <ActionButton\n          disabled={debt < 0}\n          onClick={setActiveAction}\n          action=\"repay\"\n          activeAction={manageAction}\n        >\n          <DollarCircle mr={1} /> Repay {isBase ? '' : 'snxUSD'}\n        </ActionButton>\n      </Flex>\n      <Flex mt={2} gap={2}>\n        <ActionButton onClick={setActiveAction} action=\"undelegate\" activeAction={manageAction}>\n          <ArrowUpIcon w=\"15px\" h=\"15px\" mr={1} /> Remove Collateral\n        </ActionButton>\n        <ActionButton\n          disabled={debt > 0}\n          onClick={setActiveAction}\n          action=\"borrow\"\n          activeAction={manageAction}\n        >\n          <BorrowIcon mr={1} /> {isBase ? 'Claim' : 'Borrow snxUSD'}\n        </ActionButton>\n      </Flex>\n      <Flex direction=\"column\" mt={6}>\n        {manageAction === 'borrow' ? <Borrow liquidityPosition={liquidityPosition} /> : null}\n        {manageAction === 'deposit' ? <Deposit liquidityPosition={liquidityPosition} /> : null}\n        {manageAction === 'repay' ? <Repay liquidityPosition={liquidityPosition} /> : null}\n        {manageAction === 'undelegate' ? (\n          <Undelegate liquidityPosition={liquidityPosition} />\n        ) : null}\n      </Flex>\n    </Box>\n  );\n};\n\nexport const ManageAction = ({ liquidityPosition }: { liquidityPosition?: LiquidityPosition }) => {\n  const params = useParams();\n  const { network } = useNetwork();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const [txnModalOpen, setTxnModalOpen] = useState<ManageAction | null>(null);\n  const { debtChange, collateralChange, setCollateralChange, setDebtChange } =\n    useContext(ManagePositionContext);\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n\n  const { isValid } = validatePosition({\n    issuanceRatioD18: collateralType?.issuanceRatioD18,\n    collateralAmount: liquidityPosition?.collateralAmount,\n    collateralPrice: liquidityPosition?.collateralPrice,\n    debt: liquidityPosition?.debt,\n    collateralChange,\n    debtChange,\n  });\n\n  const parsedActionParam = ManageActionSchema.safeParse(params.manageAction);\n  const parsedAction = parsedActionParam.success ? parsedActionParam.data : null;\n\n  const isFormValid = isBase ? true : isValid;\n\n  const onSubmit = useCallback(\n    (e: FormEvent) => {\n      e.preventDefault();\n      const form = e.target as HTMLFormElement;\n      if (!form.reportValidity() || !isFormValid) {\n        return;\n      }\n      setTxnModalOpen(parsedAction);\n    },\n    [isFormValid, parsedAction]\n  );\n\n  useEffect(() => {\n    // This is just for initial state, if we have a manage action selected return\n    const queryParams = new URLSearchParams(location.search);\n    if (queryParams.get('manageAction')) return;\n    if (!liquidityPosition) return;\n    if (!collateralType) return;\n\n    const cRatio = calculateCRatio(liquidityPosition.debt, liquidityPosition.collateralValue);\n    const canBorrow =\n      !isBase && (liquidityPosition.debt.eq(0) || cRatio.gt(collateralType.issuanceRatioD18));\n\n    if (canBorrow) {\n      queryParams.set('manageAction', 'borrow');\n      navigate({ pathname: location.pathname, search: queryParams.toString() }, { replace: true });\n      return;\n    }\n\n    const cRatioIsCloseToLiqRatio = cRatio.mul(0.9).lt(collateralType.liquidationRatioD18);\n\n    if (cRatioIsCloseToLiqRatio) {\n      queryParams.set('manageAction', isBase ? 'deposit' : 'repay');\n      navigate({ pathname: location.pathname, search: queryParams.toString() }, { replace: true });\n      return;\n    }\n\n    queryParams.set('manageAction', 'deposit');\n    navigate({ pathname: location.pathname, search: queryParams.toString() }, { replace: true });\n  }, [collateralType, isBase, liquidityPosition, location.pathname, location.search, navigate]);\n\n  return (\n    <>\n      <ManageActionUi\n        liquidityPosition={liquidityPosition}\n        onSubmit={onSubmit}\n        network={network}\n        setActiveAction={(action) => {\n          setCollateralChange(wei(0));\n          setDebtChange(wei(0));\n          const queryParams = new URLSearchParams(location.search);\n          queryParams.set('manageAction', action);\n          navigate(\n            { pathname: location.pathname, search: queryParams.toString() },\n            { replace: true }\n          );\n        }}\n        manageAction={parsedAction || undefined}\n      />\n      <Suspense fallback={null}>\n        {txnModalOpen === 'repay' ? (\n          <RepayModal\n            availableCollateral={liquidityPosition?.usdCollateral.availableCollateral}\n            onClose={() => {\n              setCollateralChange(wei(0));\n              setDebtChange(wei(0));\n              setTxnModalOpen(null);\n            }}\n            isOpen={txnModalOpen === 'repay'}\n          />\n        ) : null}\n        {txnModalOpen === 'borrow' ? (\n          <BorrowModal\n            onClose={() => {\n              setCollateralChange(wei(0));\n              setDebtChange(wei(0));\n              setTxnModalOpen(null);\n            }}\n            isOpen={txnModalOpen === 'borrow'}\n          />\n        ) : null}\n        {txnModalOpen === 'deposit' ? (\n          <DepositModal\n            availableCollateral={liquidityPosition?.accountCollateral.availableCollateral}\n            currentCollateral={liquidityPosition?.collateralAmount ?? wei(0)}\n            collateralChange={collateralChange}\n            onClose={() => {\n              setCollateralChange(wei(0));\n              setDebtChange(wei(0));\n              setTxnModalOpen(null);\n            }}\n            isOpen={txnModalOpen === 'deposit'}\n          />\n        ) : null}\n        {txnModalOpen === 'undelegate' ? (\n          <UndelegateModal\n            liquidityPosition={liquidityPosition}\n            onClose={() => {\n              setCollateralChange(wei(0));\n              setDebtChange(wei(0));\n              setTxnModalOpen(null);\n            }}\n            isOpen={txnModalOpen === 'undelegate'}\n          />\n        ) : null}\n      </Suspense>\n    </>\n  );\n};\n","import { FC, useContext } from 'react';\nimport { Flex, Skeleton, Text } from '@chakra-ui/react';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { currency } from '@snx-v3/format';\nimport { LiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { CollateralType, useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useParams } from '@snx-v3/useParams';\nimport { validatePosition } from '@snx-v3/validatePosition';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { ArrowForwardIcon, InfoIcon } from '@chakra-ui/icons';\nimport { calculateCRatio } from '@snx-v3/calculations';\nimport { constants } from 'ethers';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useApr } from '@snx-v3/useApr';\nimport { Tooltip } from '@snx-v3/Tooltip';\n\nconst ChangeStat: FC<{\n  value: Wei;\n  newValue: Wei;\n  hasChanges: boolean;\n  dataTestId?: string;\n  formatFn: (val: Wei) => string;\n  withColor?: boolean;\n}> = ({ formatFn, value, newValue, hasChanges, dataTestId, withColor }) => {\n  return (\n    <Flex\n      gap={4}\n      color=\"gray.50\"\n      fontSize=\"2xl\"\n      fontWeight=\"800\"\n      alignItems=\"center\"\n      lineHeight=\"32px\"\n    >\n      <Text\n        data-cy={dataTestId}\n        color={withColor && value.gt(0) ? 'green.700' : value.lt(0) ? 'red.700' : 'gray.50'}\n      >\n        {formatFn(value)}\n      </Text>\n      {hasChanges && !value.eq(newValue) ? (\n        <>\n          <ArrowForwardIcon />\n          <Text\n            color={\n              withColor && newValue.gt(0) ? 'green.700' : newValue.lt(0) ? 'red.700' : 'gray.50'\n            }\n          >\n            {formatFn(newValue)}\n          </Text>\n        </>\n      ) : null}\n    </Flex>\n  );\n};\n\nexport const ManageStatsUi: FC<{\n  liquidityPosition?: LiquidityPosition;\n  collateralType?: CollateralType;\n  newCratio: Wei;\n  newCollateralAmount: Wei;\n  newDebt: Wei;\n  cRatio: Wei;\n  collateralValue: Wei;\n  hasChanges: boolean;\n  aprData?: number;\n}> = ({\n  liquidityPosition,\n  collateralType,\n  collateralValue,\n  cRatio,\n  newCollateralAmount,\n  newCratio,\n  newDebt,\n  hasChanges,\n  aprData,\n}) => {\n  const { network } = useNetwork();\n\n  return (\n    <Flex direction=\"column\">\n      {isBaseAndromeda(network?.id, network?.preset) && (\n        <BorderBox\n          py={4}\n          px={6}\n          flexDirection=\"row\"\n          bg=\"navy.700\"\n          justifyContent=\"space-between\"\n          mb={4}\n        >\n          <Flex flexDirection=\"column\" justifyContent=\"space-between\" width=\"100%\">\n            <Flex alignItems=\"center\" mb=\"4px\">\n              <Text color=\"gray.500\" fontSize=\"xs\" fontFamily=\"heading\" lineHeight=\"16px\">\n                APR\n              </Text>\n              <Tooltip\n                label=\"APR is a combination of past week pool performance and rewards.\"\n                textAlign=\"start\"\n                py={2}\n                px={3}\n              >\n                <Flex\n                  height=\"12px\"\n                  width=\"12px\"\n                  ml=\"4px\"\n                  alignItems=\"center\"\n                  justifyContent=\"center\"\n                >\n                  <InfoIcon color=\"white\" height=\"9px\" width=\"9px\" />\n                </Flex>\n              </Tooltip>\n            </Flex>\n            <Flex width=\"100%\">\n              {aprData ? (\n                <Flex\n                  gap={1}\n                  color=\"gray.50\"\n                  fontSize=\"2xl\"\n                  fontWeight=\"800\"\n                  alignItems=\"center\"\n                  lineHeight=\"32px\"\n                >\n                  <Text>{!!aprData ? aprData.toFixed(2) : '-'}%</Text>\n                </Flex>\n              ) : (\n                <Skeleton width=\"100%\">Lorem ipsum (this wont be displaye debt) </Skeleton>\n              )}\n            </Flex>\n          </Flex>\n        </BorderBox>\n      )}\n      <BorderBox py={4} px={6} flexDirection=\"column\" bg=\"navy.700\" mb={4}>\n        <Flex alignItems=\"center\" mb=\"4px\">\n          <Text color=\"gray.500\" fontSize=\"xs\" fontFamily=\"heading\" lineHeight=\"16px\">\n            COLLATERAL\n          </Text>\n          <Tooltip\n            label=\"Your total amount of collateral locked in this pool.\"\n            textAlign=\"start\"\n            py={2}\n            px={3}\n          >\n            <Flex height=\"12px\" width=\"12px\" ml=\"4px\" alignItems=\"center\" justifyContent=\"center\">\n              <InfoIcon color=\"white\" height=\"9px\" width=\"9px\" />\n            </Flex>\n          </Tooltip>\n        </Flex>\n        {liquidityPosition && collateralType ? (\n          <>\n            <Flex justifyContent=\"space-between\" alignItems=\"center\">\n              <ChangeStat\n                value={liquidityPosition.collateralAmount}\n                newValue={newCollateralAmount}\n                formatFn={(val: Wei) => `${currency(val)} ${collateralType.displaySymbol}`}\n                hasChanges={hasChanges}\n                dataTestId=\"manage stats collateral\"\n              />\n              <Text\n                fontWeight=\"400\"\n                color=\"gray.500\"\n                fontSize=\"md\"\n                fontFamily=\"heading\"\n                lineHeight=\"24px\"\n                data-cy=\"manage-stats-collateral-value\"\n              >\n                {currency(liquidityPosition.collateralValue, {\n                  currency: 'USD',\n                  style: 'currency',\n                })}\n              </Text>\n            </Flex>\n            <Text fontWeight=\"400\" color=\"gray.500\" fontSize=\"xs\">\n              Current Value:{' '}\n              {currency(collateralValue, {\n                currency: 'USD',\n                style: 'currency',\n              })}\n            </Text>\n          </>\n        ) : (\n          <Skeleton width=\"100%\">Lorem ipsum (this wont be displayed) </Skeleton>\n        )}\n      </BorderBox>\n      <BorderBox\n        py={4}\n        px={6}\n        flexDirection=\"row\"\n        bg=\"navy.700\"\n        justifyContent=\"space-between\"\n        mb={4}\n      >\n        <Flex flexDirection=\"column\" justifyContent=\"space-between\" width=\"100%\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <Text color=\"gray.500\" fontSize=\"xs\" fontFamily=\"heading\" lineHeight=\"16px\">\n              PnL\n            </Text>\n            <Tooltip label=\"Your minted debt balance.\" textAlign=\"start\" py={2} px={3}>\n              <Flex height=\"12px\" width=\"12px\" ml=\"4px\" alignItems=\"center\" justifyContent=\"center\">\n                <InfoIcon color=\"white\" height=\"9px\" width=\"9px\" />\n              </Flex>\n            </Tooltip>\n          </Flex>\n          <Flex width=\"100%\">\n            {liquidityPosition && collateralType ? (\n              <ChangeStat\n                value={liquidityPosition.debt.mul(-1)}\n                newValue={newDebt.mul(-1)}\n                formatFn={(val: Wei) =>\n                  currency(val, {\n                    currency: 'USD',\n                    style: 'currency',\n                    maximumFractionDigits: 8,\n                  })\n                }\n                withColor\n                hasChanges={hasChanges}\n                dataTestId=\"manage-stats-debt-value\"\n              />\n            ) : (\n              <Skeleton width=\"100%\">Lorem ipsum (this wont be displaye debt) </Skeleton>\n            )}\n          </Flex>\n        </Flex>\n      </BorderBox>\n      {!isBaseAndromeda(network?.id, network?.preset) && (\n        <BorderBox py={4} px={6} flexDirection=\"column\" bg=\"navy.700\" my={0} mb={4}>\n          <Text color=\"gray.500\" fontSize=\"xs\" fontFamily=\"heading\" lineHeight=\"16px\" mb=\"4px\">\n            C-RATIO\n          </Text>\n          <Flex justifyContent=\"space-between\" alignItems=\"center\">\n            {collateralType ? (\n              <>\n                <ChangeStat\n                  // TODO, need a function to burn to target so dust debt not left over\n                  value={cRatio.lt(0.01) || cRatio.gt(50000) ? wei(0) : cRatio}\n                  newValue={newCratio}\n                  formatFn={(val: Wei) =>\n                    currency(val, {\n                      style: 'percent',\n                      minimumFractionDigits: 2,\n                      maximumFractionDigits: 2,\n                    })\n                  }\n                  hasChanges={hasChanges}\n                />\n                <Text\n                  fontWeight=\"400\"\n                  color=\"gray.500\"\n                  fontSize=\"md\"\n                  fontFamily=\"heading\"\n                  lineHeight=\"24px\"\n                >\n                  {collateralType.issuanceRatioD18.eq(constants.MaxUint256)\n                    ? 'N/A'\n                    : `Minimum ${currency(collateralType.issuanceRatioD18, {\n                        style: 'percent',\n                        minimumFractionDigits: 2,\n                        maximumFractionDigits: 2,\n                      })}`}\n                </Text>\n              </>\n            ) : (\n              <Skeleton width=\"100%\">Lorem ipsum (this wont be displayed) </Skeleton>\n            )}\n          </Flex>\n        </BorderBox>\n      )}\n    </Flex>\n  );\n};\n\nexport const ManageStats = ({ liquidityPosition }: { liquidityPosition?: LiquidityPosition }) => {\n  const { collateralSymbol } = useParams();\n  const { debtChange, collateralChange } = useContext(ManagePositionContext);\n\n  const { data: collateralType } = useCollateralType(collateralSymbol);\n\n  const { data: aprData } = useApr();\n\n  const collateralValue = liquidityPosition?.collateralValue || wei(0);\n\n  const cRatio = calculateCRatio(liquidityPosition?.debt || wei(0), collateralValue);\n\n  const { newCRatio, newCollateralAmount, newDebt, hasChanges } = validatePosition({\n    issuanceRatioD18: collateralType?.issuanceRatioD18,\n    collateralAmount: liquidityPosition?.collateralAmount,\n    collateralPrice: liquidityPosition?.collateralPrice,\n    debt: liquidityPosition?.debt,\n    collateralChange: collateralChange,\n    debtChange: debtChange,\n  });\n\n  return (\n    <ManageStatsUi\n      hasChanges={hasChanges}\n      newCratio={newCRatio}\n      newDebt={newDebt}\n      newCollateralAmount={newCollateralAmount}\n      liquidityPosition={liquidityPosition}\n      collateralType={collateralType}\n      cRatio={cRatio}\n      collateralValue={collateralValue}\n      aprData={aprData?.combinedApr}\n    />\n  );\n};\n","import { Button, Flex, Text } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { DollarCircle } from '@snx-v3/icons';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { useUSDProxy } from '@snx-v3/useUSDProxy';\nimport { LiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { useTokenBalance } from '@snx-v3/useTokenBalance';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { FC, useContext } from 'react';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { RepayAllDebt } from './';\nimport { Tooltip } from '@snx-v3/Tooltip';\n\nexport const RepayUi: FC<{\n  debtChange: Wei;\n  max?: Wei;\n  snxUSDBalance?: Wei;\n  availableUSDCollateral?: Wei;\n  currentDebt?: Wei;\n  setDebtChange: (val: Wei) => void;\n}> = ({ debtChange, setDebtChange, max, currentDebt, snxUSDBalance, availableUSDCollateral }) => {\n  const totalUsdBalance =\n    snxUSDBalance && availableUSDCollateral ? snxUSDBalance.add(availableUSDCollateral) : undefined;\n  const { network } = useNetwork();\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Text fontSize=\"md\" fontWeight=\"700\" mb=\"0.5\">\n        Repay {isBase ? 'USDC' : 'snxUSD'}\n      </Text>\n      <Text fontSize=\"sm\" color=\"gray.400\" mb=\"4\">\n        Pay down your position’s debt with {isBase ? 'USDC' : 'snxUSD'}. This decreases your debt\n        and increases your C-Ratio.\n      </Text>\n      <BorderBox display=\"flex\" py={2} px={3} mb=\"4\">\n        <Text display=\"flex\" gap={2} alignItems=\"center\" fontWeight=\"600\" mx=\"2\">\n          <DollarCircle />\n          {isBase ? 'USDC' : 'snxUSD'}\n        </Text>\n        <Flex flexDirection=\"column\" justifyContent=\"flex-end\" flexGrow={1}>\n          {/* TODO Figure out why repay is causing issues */}\n          <NumberInput\n            InputProps={{\n              isRequired: true,\n              'data-testid': 'repay amount input',\n              'data-max': max?.toString(),\n            }}\n            value={debtChange.abs()}\n            onChange={(val) => setDebtChange(val.mul(-1))}\n            max={max}\n          />\n          <Flex flexDirection=\"row\" justifyContent=\"right\" fontSize=\"xs\" color=\"whiteAlpha.700\">\n            <Flex\n              gap=\"1\"\n              mr=\"3\"\n              cursor=\"pointer\"\n              onClick={() => {\n                if (!currentDebt) {\n                  return;\n                }\n                setDebtChange(currentDebt.neg());\n              }}\n            >\n              <Text>Debt:</Text>\n              <Text display=\"inline\">\n                $<Amount value={currentDebt} data-testid=\"current debt\" />\n              </Text>\n            </Flex>\n            <Flex\n              gap=\"1\"\n              cursor=\"pointer\"\n              onClick={() => {\n                if (!totalUsdBalance) {\n                  return;\n                }\n                setDebtChange(totalUsdBalance.neg());\n              }}\n            >\n              <Tooltip\n                label={\n                  <Flex direction=\"column\" alignItems=\"flex-start\">\n                    <Flex justifyContent=\"space-between\" width=\"full\" gap={1}>\n                      Wallet Balance: <Amount value={snxUSDBalance} suffix=\" sUSD\" />\n                    </Flex>\n                    <Flex justifyContent=\"space-between\" width=\"full\" gap={1}>\n                      Collateral Balance: <Amount value={availableUSDCollateral} suffix=\" sUSD\" />\n                    </Flex>\n                  </Flex>\n                }\n              >\n                <Flex gap={1}>\n                  <Text>Balance:</Text>\n                  <Text display=\"inline\">\n                    <Amount\n                      value={totalUsdBalance}\n                      data-testid=\"available snxUSD balance\"\n                      suffix=\" sUSD\"\n                    />\n                  </Text>\n                </Flex>\n              </Tooltip>\n            </Flex>\n          </Flex>\n        </Flex>\n      </BorderBox>\n      <Button\n        data-testid=\"repay submit\"\n        type=\"submit\"\n        isDisabled={!(max && snxUSDBalance && currentDebt && availableUSDCollateral)}\n      >\n        Repay {isBase ? 'USDC' : 'snxUSD'}\n      </Button>\n    </Flex>\n  );\n};\n\nexport const Repay = ({ liquidityPosition }: { liquidityPosition?: LiquidityPosition }) => {\n  const { debtChange, setDebtChange } = useContext(ManagePositionContext);\n  const { network } = useNetwork();\n\n  const { data: USDProxy } = useUSDProxy();\n  const availableUSDCollateral = liquidityPosition?.usdCollateral.availableCollateral;\n  const { data: balance } = useTokenBalance(USDProxy?.address);\n\n  const debtExists = liquidityPosition?.debt.gt(0);\n  const flooredBalance = balance?.gt(0.01) ? balance : wei(0);\n\n  if (liquidityPosition?.debt.gt(0.01) && isBaseAndromeda(network?.id, network?.preset)) {\n    return <RepayAllDebt liquidityPosition={liquidityPosition} />;\n  }\n\n  return (\n    <RepayUi\n      setDebtChange={setDebtChange}\n      debtChange={debtChange}\n      snxUSDBalance={flooredBalance}\n      availableUSDCollateral={availableUSDCollateral}\n      currentDebt={debtExists ? liquidityPosition?.debt : wei(0)}\n      max={Wei.max(\n        liquidityPosition?.debt || wei(0),\n        availableUSDCollateral?.add(balance || wei(0)) || wei(0)\n      )}\n    />\n  );\n};\n","import { Button, Flex, Text } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { LiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { wei } from '@synthetixio/wei';\nimport { getRepayerContract, isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport { useCallback, useMemo } from 'react';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { useApprove } from '@snx-v3/useApprove';\nimport { parseUnits } from '@snx-v3/format';\nimport { useTokenBalance } from '@snx-v3/useTokenBalance';\nimport { useClearDebt } from '@snx-v3/useClearDebt';\nimport { useGetUSDTokens } from '@snx-v3/useGetUSDTokens';\n\nexport const RepayAllDebt = ({ liquidityPosition }: { liquidityPosition: LiquidityPosition }) => {\n  const { network } = useNetwork();\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n  const params = useParams();\n  const [searchParams] = useSearchParams();\n\n  const queryClient = useQueryClient();\n\n  const debtExists = liquidityPosition.debt.gt(0.01);\n  const currentDebt = debtExists ? liquidityPosition.debt : wei(0);\n  const { data: usdTokens } = useGetUSDTokens();\n\n  const { data: tokenBalance } = useTokenBalance(\n    isBase ? usdTokens?.USDC : liquidityPosition.tokenAddress\n  );\n\n  const sufficientBalance = useMemo(\n    () => Number(tokenBalance?.toString()) >= currentDebt.toNumber(),\n    [currentDebt, tokenBalance]\n  );\n\n  const {\n    exec: execRepay,\n    settle: settleRepay,\n    isLoading,\n  } = useClearDebt({\n    accountId: searchParams.get('accountId') || '',\n    poolId: params.poolId,\n    collateralTypeAddress: liquidityPosition?.tokenAddress,\n    availableUSDCollateral: liquidityPosition.accountCollateral.availableCollateral,\n    debt: currentDebt,\n  });\n\n  const {\n    approve,\n    requireApproval,\n    isLoading: approvalLoading,\n  } = useApprove({\n    contractAddress: usdTokens?.USDC,\n    //slippage for approval\n    amount: parseUnits(currentDebt.toString(), 6).mul(110).div(100),\n    spender: getRepayerContract(network?.id),\n  });\n\n  const submit = useCallback(async () => {\n    try {\n      if (requireApproval) {\n        await approve(false);\n      }\n      await execRepay();\n\n      await Promise.all([\n        queryClient.invalidateQueries({\n          queryKey: [`${network?.id}-${network?.preset}`, 'TokenBalance'],\n        }),\n        queryClient.invalidateQueries({\n          queryKey: [`${network?.id}-${network?.preset}`, 'Allowance'],\n        }),\n        queryClient.invalidateQueries({\n          queryKey: [`${network?.id}-${network?.preset}`, 'LiquidityPosition'],\n        }),\n        queryClient.invalidateQueries({\n          queryKey: [`${network?.id}-${network?.preset}`, 'AccountCollateralUnlockDate'],\n        }),\n      ]);\n\n      settleRepay();\n    } catch (error) {}\n  }, [approve, execRepay, network?.id, network?.preset, queryClient, requireApproval, settleRepay]);\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Text fontSize=\"md\" fontWeight=\"700\" mb=\"0.5\">\n        Repay {isBase ? 'USDC' : 'snxUSD'}\n      </Text>\n      <Text fontSize=\"sm\" color=\"gray.400\" mb=\"4\">\n        Your account currently has a positive debt. This amount must be paid to initiate collateral\n        withdrawal.\n      </Text>\n      <Button\n        isDisabled={!sufficientBalance}\n        isLoading={isLoading || approvalLoading}\n        onClick={submit}\n        data-testid=\"repay\"\n      >\n        Repay USDC $<Amount value={currentDebt} data-testid=\"current debt\" />\n        {sufficientBalance ? '' : '(Insufficient Balance)'}\n      </Button>\n    </Flex>\n  );\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useDefaultProvider, useNetwork } from '@snx-v3/useBlockchain';\nimport { z } from 'zod';\nimport { SmallIntSchema, WeiSchema } from '@snx-v3/zod';\nimport { ethers } from 'ethers';\nimport { erc7412Call } from '@snx-v3/withERC7412';\nimport { fetchPriceUpdates, priceUpdatesToPopulatedTx } from '@snx-v3/fetchPythPrices';\nimport { useAllCollateralPriceIds } from '@snx-v3/useAllCollateralPriceIds';\nimport { useAllCollateralPriceUpdates } from '../useCollateralPriceUpdates';\n\nexport const MarketConfigurationSchema = z.object({\n  id: SmallIntSchema,\n  weight: WeiSchema,\n  maxDebtShareValue: WeiSchema,\n  isLocked: z.boolean(),\n});\n\nexport const PoolConfigurationSchema = z.object({\n  id: z.number(),\n  markets: MarketConfigurationSchema.array(),\n  isAnyMarketLocked: z.boolean(),\n});\n\nconst isLockedSchema = z.boolean();\n\nexport const usePoolConfiguration = (poolId?: string) => {\n  const { network } = useNetwork();\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: collateralPriceUpdates } = useAllCollateralPriceIds();\n  const provider = useDefaultProvider();\n  const { data: priceUpdateTx } = useAllCollateralPriceUpdates();\n\n  return useQuery({\n    enabled: Boolean(CoreProxy && poolId && collateralPriceUpdates),\n    queryKey: [`${network?.id}-${network?.preset}`, 'PoolConfiguration', { poolId }],\n    queryFn: async () => {\n      if (!CoreProxy || !poolId || !collateralPriceUpdates || !network || !provider) {\n        throw Error('usePoolConfiguration should not be enabled');\n      }\n      const marketsData: {\n        marketId: ethers.BigNumber;\n        maxDebtShareValueD18: ethers.BigNumber;\n        weightD18: ethers.BigNumber;\n      }[] = await CoreProxy.getPoolConfiguration(ethers.BigNumber.from(poolId));\n      const markets = marketsData.map(({ marketId, maxDebtShareValueD18, weightD18 }) => ({\n        id: marketId,\n        weight: maxDebtShareValueD18,\n        maxDebtShareValue: weightD18,\n      }));\n      const collateralPriceCalls = await fetchPriceUpdates(\n        collateralPriceUpdates,\n        network.isTestnet\n      ).then((signedData) => priceUpdatesToPopulatedTx('0x', collateralPriceUpdates, signedData));\n\n      const calls = await Promise.all(\n        markets.map((m) => CoreProxy.populateTransaction.isMarketCapacityLocked(m.id))\n      );\n\n      const allCalls = collateralPriceCalls.concat(calls);\n      if (priceUpdateTx) {\n        allCalls.unshift(priceUpdateTx as any);\n      }\n      const decoded = await erc7412Call(\n        network,\n        provider,\n        allCalls,\n        (encoded) => {\n          if (!Array.isArray(encoded)) throw Error('Expected array');\n          return encoded.map((x) =>\n            isLockedSchema.parse(\n              CoreProxy.interface.decodeFunctionResult('isMarketCapacityLocked', x)[0]\n            )\n          );\n        },\n        'isMarketCapacityLocked'\n      );\n\n      return PoolConfigurationSchema.parse({\n        id: parseInt(poolId),\n        markets: markets.map((market, i) => ({\n          ...market,\n          isLocked: decoded[i],\n        })),\n        isAnyMarketLocked: decoded.some(Boolean),\n      });\n    },\n  });\n};\n","import {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertTitle,\n  Button,\n  Collapse,\n  Flex,\n  Text,\n} from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { CollateralIcon } from '@snx-v3/icons';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { LiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { validatePosition } from '@snx-v3/validatePosition';\nimport { usePoolConfiguration } from '@snx-v3/usePoolConfiguration';\nimport Wei, { wei } from '@synthetixio/wei';\nimport React, { FC, useContext } from 'react';\nimport { useParams } from '@snx-v3/useParams';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { useNetwork } from '@snx-v3/useBlockchain';\n\nexport const UndelegateUi: FC<{\n  collateralChange: Wei;\n  currentCollateral?: Wei;\n  minDelegation?: Wei;\n  currentDebt?: Wei;\n  max?: Wei;\n  displaySymbol: string;\n  symbol: string;\n  setCollateralChange: (val: Wei) => void;\n  isAnyMarketLocked?: boolean;\n  isLoadingRequiredData: boolean;\n}> = ({\n  collateralChange,\n  setCollateralChange,\n  max,\n  displaySymbol,\n  symbol,\n  currentCollateral,\n  minDelegation,\n  isLoadingRequiredData,\n  isAnyMarketLocked,\n}) => {\n  const onMaxClick = React.useCallback(() => {\n    if (!max) {\n      return;\n    }\n    setCollateralChange(max.mul(-1));\n  }, [max, setCollateralChange]);\n\n  const leftoverCollateral = currentCollateral?.add(collateralChange) || wei(0);\n\n  const isValidLeftover =\n    leftoverCollateral.gt(minDelegation || wei(0)) || leftoverCollateral.eq(0);\n\n  const isDisabled = isAnyMarketLocked === true;\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Text fontSize=\"md\" fontWeight=\"700\" mb=\"0.5\">\n        Remove {displaySymbol}\n      </Text>\n      <Text fontSize=\"sm\" color=\"gray.400\" mb=\"4\">\n        Removing collateral from this position will transfer it to the account’s Available\n        Collateral balance for withdrawal. Collateral may only be removed if the resulting C-Ratio\n        is above the Issuance C-Ratio.\n      </Text>\n\n      <BorderBox flexDirection=\"column\" py={2} px={3} mb=\"4\">\n        <Flex flexDirection=\"row\" justifyContent=\"space-between\" width=\"100%\">\n          <Text display=\"flex\" gap={2} alignItems=\"center\" fontWeight=\"600\" mx=\"2\">\n            <CollateralIcon symbol={symbol} />\n            {displaySymbol}\n          </Text>\n          <Flex flexDirection=\"column\" justifyContent=\"flex-end\" flexGrow={1}>\n            <NumberInput\n              InputProps={{\n                isDisabled,\n                isRequired: true,\n                'data-testid': 'undelegate amount input',\n                'data-max': max?.toString(),\n              }}\n              value={collateralChange.abs()}\n              onChange={(val) => setCollateralChange(val.mul(-1))}\n              max={max}\n            />\n            <Flex flexDirection=\"column\" alignItems=\"flex-end\" fontSize=\"xs\" color=\"whiteAlpha.700\">\n              <Flex\n                gap=\"1\"\n                cursor={isDisabled ? 'not-allowed' : 'pointer'}\n                onClick={isDisabled ? undefined : onMaxClick}\n              >\n                <Text display=\"flex\" alignItems=\"center\" gap={1}>\n                  Max:\n                </Text>\n                <Amount\n                  value={max}\n                  data-testid=\"available to undelegate\"\n                  suffix={` ${displaySymbol}`}\n                />\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Collapse in={isDisabled} animateOpacity>\n          <Alert mt={2} status=\"warning\">\n            <AlertIcon />\n            <Flex direction=\"column\">\n              <AlertTitle>Credit capacity reached</AlertTitle>\n              <AlertDescription>\n                One of the markets has reached its credit capacity and is currently in a locked\n                state. You cannot remove collateral from the pool at this time.\n              </AlertDescription>\n            </Flex>\n          </Alert>\n        </Collapse>\n\n        <Collapse in={!isValidLeftover} animateOpacity>\n          <Alert mt={2} status=\"info\">\n            <AlertIcon />\n            <Flex direction=\"column\">\n              <AlertTitle>\n                The minimal delegated amount is{' '}\n                <Amount value={minDelegation} suffix={` ${symbol}`} />\n              </AlertTitle>\n              <AlertDescription>\n                You can close your position by removing all the collateral.\n              </AlertDescription>\n            </Flex>\n          </Alert>\n        </Collapse>\n      </BorderBox>\n      <Button\n        data-testid=\"undelegate submit\"\n        type=\"submit\"\n        isDisabled={isLoadingRequiredData || isAnyMarketLocked === true}\n      >\n        Remove {displaySymbol}\n      </Button>\n    </Flex>\n  );\n};\n\nexport const Undelegate = ({ liquidityPosition }: { liquidityPosition?: LiquidityPosition }) => {\n  const { collateralChange, debtChange, setCollateralChange } = useContext(ManagePositionContext);\n  const params = useParams();\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n\n  const poolConfiguration = usePoolConfiguration(params.poolId);\n  const { network } = useNetwork();\n\n  if (!collateralType) return null;\n  const collateralPrice = liquidityPosition?.collateralPrice;\n  const { newDebt } = validatePosition({\n    issuanceRatioD18: collateralType.issuanceRatioD18,\n    collateralAmount: liquidityPosition?.collateralAmount,\n    collateralPrice,\n    debt: liquidityPosition?.debt,\n    collateralChange: collateralChange,\n    debtChange: debtChange,\n  });\n  // To get the max withdrawable collateral we look at the new debt and the issuance ratio.\n  // This gives us the amount in dollar. We then divide by the collateral price.\n  // To avoid the transaction failing due to small price deviations, we also apply a 2% buffer by multiplying with 0.98\n\n  function maxUndelegate() {\n    if (!liquidityPosition || !collateralType) return undefined;\n    const { collateralAmount, collateralValue } = liquidityPosition;\n\n    if (isBaseAndromeda(network?.id, network?.preset)) {\n      return collateralAmount;\n    }\n\n    // if debt is negative it's actually credit, which means we can undelegate all collateral\n    if (newDebt.lte(0)) return collateralAmount;\n\n    const minCollateralRequired = newDebt.mul(collateralType.issuanceRatioD18);\n\n    if (collateralValue < minCollateralRequired)\n      // If you're below issuance ratio, you can't withdraw anything\n      return wei(0);\n\n    const maxWithdrawable = collateralValue.sub(minCollateralRequired).mul(0.98);\n    return Wei.min(collateralAmount, maxWithdrawable);\n  }\n  const max = maxUndelegate();\n\n  return (\n    <UndelegateUi\n      displaySymbol={collateralType.displaySymbol}\n      symbol={collateralType.symbol}\n      minDelegation={collateralType.minDelegationD18}\n      setCollateralChange={setCollateralChange}\n      collateralChange={collateralChange}\n      currentCollateral={liquidityPosition?.collateralAmount}\n      currentDebt={liquidityPosition?.debt}\n      max={max}\n      isLoadingRequiredData={poolConfiguration.isLoading || !max}\n      isAnyMarketLocked={poolConfiguration.data?.isAnyMarketLocked}\n    />\n  );\n};\n","import { Box, Container, Flex, Link, useDisclosure } from '@chakra-ui/react';\nimport { NavLink as RouterLink, useLocation } from 'react-router-dom';\nimport { NetworkController } from './NetworkController';\nimport { useEffect } from 'react';\nimport { Logo, LogoIcon } from '@snx-v3/icons';\nimport { useTokenBalance } from '@snx-v3/useTokenBalance';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { Balance } from '../../components';\nimport { useGetUSDTokens } from '@snx-v3/useGetUSDTokens';\n\nexport default function Header() {\n  const { onClose } = useDisclosure();\n  const location = useLocation();\n  const { network } = useNetwork();\n\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n  const { data: usdTokens } = useGetUSDTokens();\n  const { data: balance } = useTokenBalance(isBase ? usdTokens?.USDC : usdTokens?.sUSD);\n\n  useEffect(() => {\n    onClose();\n  }, [location, onClose]);\n\n  return (\n    <>\n      <Flex\n        bg=\"navy.700\"\n        mb=\"4\"\n        py=\"3\"\n        borderBottomWidth=\"1px\"\n        borderBottomColor=\"gray.900\"\n        px=\"10\"\n      >\n        <Container maxW=\"1024px\" as={Flex} justifyContent=\"space-between\" alignItems=\"center\">\n          <Flex\n            display={{ base: 'none', md: 'inline-block' }}\n            flexDirection=\"row\"\n            justifyContent=\"space-between\"\n          >\n            <Link\n              to={{\n                pathname: '/',\n                search: location.search,\n              }}\n              as={RouterLink}\n              py={4}\n            >\n              <Logo />\n            </Link>\n            <Link\n              ml={6}\n              as={RouterLink}\n              to={{\n                pathname: '/',\n                search: location.search,\n              }}\n              fontWeight={700}\n              fontSize=\"14px\"\n              display=\"inline\"\n              px={3}\n              py={2.5}\n              textDecoration=\"none\"\n              color=\"gray.500\"\n              _hover={{ textDecoration: 'none' }}\n              _activeLink={{ color: 'white' }}\n            >\n              Dashboard\n            </Link>\n            <Link\n              ml={2.5}\n              as={RouterLink}\n              to={{\n                pathname: '/pools',\n                search: location.search,\n              }}\n              fontWeight={700}\n              fontSize=\"14px\"\n              display=\"inline\"\n              textDecoration=\"none\"\n              px={3}\n              py={2.5}\n              color=\"gray.500\"\n              _hover={{ textDecoration: 'none' }}\n              _activeLink={{ color: 'white' }}\n            >\n              Pools\n            </Link>\n          </Flex>\n          <Box display={{ md: 'none' }}>\n            <Link to=\"/\" as={RouterLink} py={4} pr={2}>\n              <LogoIcon />\n            </Link>\n          </Box>\n          <Flex gap={3} flexWrap=\"wrap-reverse\" justifyContent=\"center\" alignItems=\"center\">\n            <Balance isBase={isBase} balance={balance} />\n            <NetworkController />\n          </Flex>\n        </Container>\n      </Flex>\n    </>\n  );\n}\n","import { FC } from 'react';\nimport { Box, Container, Flex } from '@chakra-ui/react';\nimport { Outlet } from 'react-router-dom';\nimport Header from './Header';\n\nexport const DefaultLayout: FC = () => (\n  <Box\n    as=\"main\"\n    minHeight=\"100vh\"\n    color=\"rgba(255,255,255,0.85)\"\n    display=\"flex\"\n    flexDirection=\"column\"\n    bg=\"navy.900\"\n  >\n    <Flex flex=\"1\" flexDirection=\"column\">\n      <Header />\n      <Container display=\"flex\" flexDir=\"column\" maxW=\"1024px\" flex=\"1\">\n        <Outlet />\n      </Container>\n    </Flex>\n  </Box>\n);\n","import { Button, Flex, Heading } from '@chakra-ui/react';\nimport { useAccounts, useCreateAccount } from '@snx-v3/useAccounts';\nimport { FC } from 'react';\n\nexport const AccountBanner: FC = () => {\n  const {\n    data: accounts,\n    isLoading: isAccountsLoading,\n    isFetching: isAccountsFetching,\n  } = useAccounts();\n  const {\n    mutation: { mutate: createAccount, isPending: isCreateAccountLoading },\n  } = useCreateAccount();\n\n  if (!isAccountsFetching && !isAccountsLoading && accounts && accounts.length === 0) {\n    return (\n      <Flex\n        mt={4}\n        flexGrow=\"1\"\n        h=\"fit-content\"\n        border=\"1px solid\"\n        borderColor=\"gray.900\"\n        rounded=\"base\"\n        width=\"100%\"\n        px=\"6\"\n        py=\"8\"\n        bg=\"navy.700\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n      >\n        <Heading fontSize=\"18px\">Create an account to deposit liquidity</Heading>\n        <Button onClick={() => createAccount()} isLoading={isCreateAccountLoading}>\n          Create Account\n        </Button>\n      </Flex>\n    );\n  }\n\n  return null;\n};\n","import { Flex, Heading } from '@chakra-ui/react';\nimport { Helmet } from 'react-helmet';\nimport { AssetsList, PositionsList, StatsList } from '../../components';\nimport { AccountBanner } from '../../components/AccountBanner';\nimport { useWallet } from '@snx-v3/useBlockchain';\n\nexport function Home() {\n  const { activeWallet } = useWallet();\n  return (\n    <>\n      <Helmet>\n        <title>Synthetix Liquidity V3</title>\n        <meta name=\"description\" content=\"Synthetix V3 - Dashboard\" />\n      </Helmet>\n      <Flex flexDir=\"column\" mb={16}>\n        {activeWallet && <AccountBanner />}\n        <Heading\n          mt={{\n            base: 2,\n            sm: 10,\n          }}\n          color=\"gray.50\"\n          fontSize=\"1.5rem\"\n          data-cy=\"liquidity-dashboard\"\n        >\n          Dashboard\n        </Heading>\n        <StatsList />\n        <AssetsList />\n        <PositionsList />\n      </Flex>\n    </>\n  );\n}\n","import { Link as ReactRouterLink, useLocation } from 'react-router-dom';\nimport { Link } from '@chakra-ui/react';\nimport { ArrowBackIcon } from '@chakra-ui/icons';\n\nexport const HomeLink = () => {\n  const location = useLocation();\n  return (\n    <Link\n      width=\"fit-content\"\n      display=\"flex\"\n      alignItems=\"center\"\n      color=\"cyan.500\"\n      as={ReactRouterLink}\n      to={{\n        pathname: '/',\n        search: location.search,\n      }}\n      fontSize=\"sm\"\n      fontWeight={700}\n      mb={2}\n    >\n      <ArrowBackIcon mr={1} /> Home\n    </Link>\n  );\n};\n","const abi = [\n  'constructor(address rewardManager_, uint128 poolId_, address collateralType_, address payoutToken_, uint8 payoutTokenDecimals_, string name_)',\n  'function SYSTEM_PRECISION() view returns (uint256)',\n  'function collateralType() view returns (address)',\n  'function distributeRewards(uint128 poolId_, address collateralType_, uint256 amount_, uint64 start_, uint32 duration_)',\n  'function name() view returns (string)',\n  'function onPositionUpdated(uint128, uint128, address, uint256)',\n  'function payout(uint128, uint128 poolId_, address collateralType_, address payoutTarget_, uint256 payoutAmount_) returns (bool)',\n  'function payoutToken() view returns (address)',\n  'function poolId() view returns (uint128)',\n  'function precision() view returns (uint256)',\n  'function rewardManager() view returns (address)',\n  'function rewardsAmount() view returns (uint256)',\n  'function setShouldFailPayout(bool shouldFailPayout_)',\n  'function shouldFailPayout() view returns (bool)',\n  'function supportsInterface(bytes4 interfaceId) view returns (bool)',\n  'function token() view returns (address)',\n  'error FailedTransfer(address from, address to, uint256 value)',\n  'error InvalidParameter(string parameter, string reason)',\n  'error NotEnoughBalance(uint256 amountRequested, uint256 currentBalance)',\n  'error NotEnoughRewardsLeft(uint256 amountRequested, uint256 amountLeft)',\n  'error Unauthorized(address addr)',\n];\n\nexport async function importRewardDistributor(chainId, preset) {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      return { address: null, abi };\n    }\n    case '11155111-main': {\n      return { address: null, abi };\n    }\n    case '10-main': {\n      return { address: null, abi };\n    }\n    case '8453-andromeda': {\n      return { address: null, abi };\n    }\n    case '84532-andromeda': {\n      return { address: null, abi };\n    }\n    case '42161-main': {\n      return { address: null, abi };\n    }\n    case '421614-main': {\n      return { address: null, abi };\n    }\n    case '42161-arbthetix': {\n      return { address: null, abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for RewardsDistributor`);\n    }\n  }\n}\n","import { useMulticall3 } from '@snx-v3/useMulticall3';\nimport { useQuery } from '@tanstack/react-query';\nimport { utils, BigNumber } from 'ethers';\nimport { Wei, wei } from '@synthetixio/wei';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { z } from 'zod';\nimport { getSubgraphUrl } from '@snx-v3/constants';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { importRewardDistributor } from '@snx-v3/contracts';\n\nconst RewardsResponseSchema = z.array(\n  z.object({\n    address: z.string(),\n    name: z.string(),\n    symbol: z.string(),\n    claimableAmount: z.instanceof(Wei),\n    distributorAddress: z.string(),\n    rate: z.number(),\n    duration: z.number(),\n    lifetimeClaimed: z.number(),\n    total: z.number(),\n    decimals: z.number(),\n  })\n);\n\ntype RewardsResponseArray = typeof RewardsResponseSchema._type;\n\nexport type RewardsType = z.infer<typeof RewardsResponseSchema>;\n\ntype RewardsInterface = {\n  id: string;\n  total_distributed: string;\n  rewards_distributions: {\n    amount: string;\n    duration: string;\n    created_at: string;\n  }[];\n}[];\n\nconst erc20Abi = [\n  'function name() view returns (string)',\n  'function symbol() view returns (string)',\n  'function balanceOf(address) view returns (uint256)',\n  'function deposit() payable',\n  'function decimals() view returns (uint8)',\n];\n\nconst RewardsDataDocument = `\n  query RewardsData($accountId: String!, $distributor: String!) {\n    rewardsClaimeds(where: { distributor: $distributor, account: $accountId }) {\n      id\n      amount\n    }\n  }\n`;\n\nexport function useRewards(\n  distributors?: RewardsInterface,\n  poolId?: string,\n  collateralAddress?: string,\n  accountId: string = '69'\n) {\n  const { network } = useNetwork();\n  const { data: Multicall3 } = useMulticall3();\n  const { data: CoreProxy } = useCoreProxy();\n\n  return useQuery({\n    enabled: Boolean(\n      Multicall3 && CoreProxy && distributors && poolId && collateralAddress && accountId\n    ),\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'Rewards',\n      { accountId },\n      { collateralAddress },\n      { distributors },\n    ],\n    queryFn: async () => {\n      if (\n        !Multicall3 ||\n        !CoreProxy ||\n        !poolId ||\n        !collateralAddress ||\n        !accountId ||\n        !distributors ||\n        !network\n      ) {\n        throw 'useRewards is missing required data';\n      }\n      if (distributors.length === 0) return [];\n\n      try {\n        const { abi } = await importRewardDistributor(network?.id, network?.preset);\n\n        const ifaceRD = new utils.Interface(abi);\n        const ifaceERC20 = new utils.Interface(erc20Abi);\n\n        const [{ returnData: distributorReturnData }, ...historicalData] = await Promise.all([\n          await Multicall3.callStatic.aggregate(\n            distributors.flatMap(({ id: address }) => [\n              {\n                target: address,\n                callData: ifaceRD.encodeFunctionData('name', []),\n              },\n              {\n                target: address,\n                callData: ifaceRD.encodeFunctionData('token', []),\n              },\n            ])\n          ),\n          ...distributors.map(async ({ id: address }) => {\n            return await fetch(getSubgraphUrl(network?.name), {\n              method: 'POST',\n              body: JSON.stringify({\n                query: RewardsDataDocument,\n                variables: { accountId, distributor: address },\n              }),\n            }).then((res) => res.json());\n          }),\n        ]);\n\n        const distributorResult = distributors.map(({ id: address, rewards_distributions }, i) => {\n          const name = ifaceRD.decodeFunctionResult(\n            'name',\n            distributorReturnData[i * 2]\n          )[0] as string;\n          const token = ifaceRD.decodeFunctionResult(\n            'token',\n            distributorReturnData[i * 2 + 1]\n          )[0] as string;\n\n          let duration = 0;\n\n          if (rewards_distributions.length > 0) {\n            duration = parseInt(rewards_distributions[0].duration);\n          }\n\n          const lifetimeClaimed: number = historicalData[i].data.rewardsClaimeds\n            .reduce((acc: Wei, item: { amount: string; id: string }) => {\n              return acc.add(wei(item.amount, 18, true));\n            }, wei(0))\n            .toNumber();\n\n          // See if it is still active (i.e rewards are still being emitted)\n          const { duration: distribution_duration, created_at } = rewards_distributions[0];\n\n          const expiry = parseInt(distribution_duration) + parseInt(created_at);\n\n          // const total =\n          const hasExpired = new Date().getTime() / 1000 > expiry;\n\n          return {\n            address,\n            name,\n            token,\n            duration,\n            total: hasExpired ? '0' : rewards_distributions[0].amount, // Take the latest amount\n            lifetimeClaimed,\n          };\n        });\n\n        const { returnData: ercReturnData } = await Multicall3.callStatic.aggregate(\n          distributorResult.flatMap(({ token, address }) => [\n            {\n              target: token,\n              callData: ifaceERC20.encodeFunctionData('name', []),\n            },\n            {\n              target: token,\n              callData: ifaceERC20.encodeFunctionData('symbol', []),\n            },\n            {\n              target: token,\n              callData: ifaceERC20.encodeFunctionData('decimals', []),\n            },\n            {\n              target: CoreProxy.address,\n              callData: CoreProxy.interface.encodeFunctionData('getRewardRate', [\n                BigNumber.from(poolId),\n                token,\n                address,\n              ]),\n            },\n          ])\n        );\n\n        const result = distributorResult.map((item, i) => {\n          const name = ifaceERC20.decodeFunctionResult('name', ercReturnData[i * 4])[0] as string;\n\n          const symbol = ifaceERC20.decodeFunctionResult(\n            'symbol',\n            ercReturnData[i * 4 + 1]\n          )[0] as string;\n\n          const decimals = ifaceERC20.decodeFunctionResult(\n            'decimals',\n            ercReturnData[i * 4 + 2]\n          )[0] as number;\n\n          const rewardRate = CoreProxy.interface.decodeFunctionResult(\n            'getRewardRate',\n            ercReturnData[i * 4 + 3]\n          );\n\n          const total = wei(item.total, 18, true).toNumber();\n\n          return {\n            ...item,\n            name,\n            symbol,\n            decimals,\n            // Reward rate is the amount of rewards per second\n            rewardRate: wei(rewardRate),\n            total,\n          };\n        });\n\n        // TODO: Refactor this to use a view function\n        const balances: RewardsResponseArray = [];\n\n        for (const item of result) {\n          try {\n            const response = await CoreProxy.callStatic.claimRewards(\n              BigNumber.from(accountId),\n              BigNumber.from(poolId),\n              collateralAddress,\n              item.address\n            );\n\n            balances.push({\n              ...item,\n              claimableAmount: wei(response),\n              distributorAddress: item.address,\n              rate: item.rewardRate.toNumber(),\n            });\n          } catch (error) {\n            balances.push({\n              ...item,\n              claimableAmount: wei(0),\n              distributorAddress: item.address,\n              rate: item.rewardRate.toNumber(),\n            });\n          }\n        }\n\n        const sortedBalances = [...balances].sort(\n          (a, b) => b.claimableAmount.toNumber() - a.claimableAmount.toNumber()\n        );\n\n        return RewardsResponseSchema.parse(sortedBalances);\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.warn(error);\n        return [];\n      }\n    },\n  });\n}\n","import { Alert, Text } from '@chakra-ui/react';\n\nexport function WithdrawIncrease() {\n  return (\n    <Alert colorScheme=\"orange\" mb=\"4\">\n      <Text fontWeight=\"bold\">\n        This action will increase the timeout for withdrawing collateral\n      </Text>\n    </Alert>\n  );\n}\n","import { FC } from 'react';\nimport { Box, Divider, Flex, Heading, Link, Text } from '@chakra-ui/react';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { useParams } from '@snx-v3/useParams';\nimport { CollateralType, useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { CollateralIcon } from '@snx-v3/icons';\nimport { ManageAction } from '../../components';\nimport { ManagePositionProvider } from '@snx-v3/ManagePositionContext';\nimport { ManageStats } from '../../components';\nimport { HomeLink } from '@snx-v3/HomeLink';\nimport { Rewards } from '../../components';\nimport { usePoolData } from '@snx-v3/usePoolData';\nimport { useRewards, RewardsType } from '@snx-v3/useRewards';\nimport { WithdrawIncrease } from '@snx-v3/WithdrawIncrease';\nimport { LiquidityPosition, useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\n\nexport const ManageUi: FC<{\n  collateralType?: CollateralType;\n  isLoading: boolean;\n  rewards?: RewardsType;\n  liquidityPosition?: LiquidityPosition;\n  network?: Network | null;\n  collateralSymbol?: string;\n}> = ({ isLoading, rewards, liquidityPosition, network, collateralSymbol }) => {\n  return (\n    <Box mb={12} mt={8}>\n      <Box mb=\"4\">\n        <HomeLink />\n      </Box>\n      <Flex alignItems=\"center\" mb=\"8px\">\n        <Flex\n          bg=\"linear-gradient(180deg, #08021E 0%, #1F0777 100%)\"\n          height=\"34px\"\n          width=\"34px\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          borderRadius=\"100%\"\n          display=\"flex\"\n        >\n          <CollateralIcon\n            symbol={collateralSymbol}\n            width=\"28px\"\n            height=\"28px\"\n            fill=\"#0B0B22\"\n            color=\"#00D1FF\"\n          />\n        </Flex>\n        <Heading\n          ml={4}\n          fontWeight={700}\n          fontSize=\"3xl\"\n          color=\"gray.50\"\n          display=\"flex\"\n          alignItems=\"center\"\n          data-cy=\"manage-position-title\"\n        >\n          {collateralSymbol} Liquidity Position\n        </Heading>\n      </Flex>\n      <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"14px\" lineHeight=\"20px\" width=\"80%\">\n        {isBaseAndromeda(network?.id, network?.preset)\n          ? 'Deposit to '\n          : 'Deposit your collateral to borrow snxUSD and '}\n        contribute to the network collateral. If you&apos;ve never staked on Synthetix V3 before,\n        please read through this{' '}\n        <Link\n          fontWeight=\"600\"\n          color=\"cyan.500\"\n          href={\n            isBaseAndromeda(network?.id, network?.preset)\n              ? 'https://docs.synthetix.io/v/v3/for-liquidity-providers/base-lp-guide'\n              : 'https://docs.synthetix.io/v/v3/for-liquidity-providers/delegating-collateral'\n          }\n          target=\"_blank\"\n        >\n          quick introduction\n        </Link>{' '}\n        first.\n      </Text>\n      <Divider mt=\"31px\" mb=\"24px\" color=\"gray.900\" />\n      <Flex gap={4}>\n        <BorderBox p={6} flexDirection=\"column\" bg=\"navy.700\" height=\"fit-content\">\n          <WithdrawIncrease />\n          <Text fontWeight=\"700\" fontSize=\"xl\" color=\"gray.50\" mb=\"1\" fontFamily=\"heading\">\n            Manage Position\n          </Text>\n          <Text as=\"span\" fontWeight=\"700\" display=\"inline\" color=\"white\">\n            Manage your position so your debt never equals your collateral else your position might\n            get liquidated.\n          </Text>\n          <ManageAction liquidityPosition={liquidityPosition} />\n        </BorderBox>\n        <Box minW=\"450px\">\n          <ManageStats liquidityPosition={liquidityPosition} />\n          <Rewards isLoading={isLoading} rewards={rewards} />\n        </Box>\n      </Flex>\n    </Box>\n  );\n};\n\nexport const Manage = () => {\n  const { accountId, collateralSymbol, poolId } = useParams();\n  const { network } = useNetwork();\n\n  const { isLoading: isCollateralLoading, data: collateralType } =\n    useCollateralType(collateralSymbol);\n\n  const { isLoading: isPoolGraphDataLoading, data: poolData } = usePoolData(poolId);\n\n  const { isLoading: isRewardsLoading, data: rewardsData } = useRewards(\n    poolData?.registered_distributors,\n    poolId,\n    collateralType?.tokenAddress,\n    accountId\n  );\n\n  const { data: liquidityPosition } = useLiquidityPosition({\n    tokenAddress: collateralType?.tokenAddress,\n    accountId,\n    poolId,\n  });\n\n  const isLoading = isRewardsLoading || isCollateralLoading || isPoolGraphDataLoading;\n\n  return (\n    <ManagePositionProvider>\n      <ManageUi\n        isLoading={isLoading}\n        rewards={rewardsData}\n        liquidityPosition={liquidityPosition}\n        network={network}\n        collateralSymbol={collateralSymbol}\n      />\n    </ManagePositionProvider>\n  );\n};\n","import { Box, Divider, Flex } from '@chakra-ui/react';\nimport { Helmet } from 'react-helmet';\nimport { PoolHeader } from '../../components';\nimport { MarketSection } from '../../components';\nimport { CollateralSection } from '../../components';\nimport { useParams } from '@snx-v3/useParams';\nimport { HomeLink } from '@snx-v3/HomeLink';\nimport { usePool } from '@snx-v3/usePools';\nimport { Rewards } from '../../components';\nimport { useRewards } from '@snx-v3/useRewards';\nimport { usePoolData } from '@snx-v3/usePoolData';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\n\nexport const Pool = () => {\n  const params = useParams();\n  const { data: pool } = usePool(params.poolId);\n\n  const { accountId, collateralSymbol, poolId } = useParams();\n\n  const { isLoading: isCollateralLoading, data: collateralType } =\n    useCollateralType(collateralSymbol);\n\n  const { isLoading: isPoolGraphDataLoading, data: poolData } = usePoolData(poolId);\n\n  const { isLoading: isRewardsLoading, data: rewardsData } = useRewards(\n    poolData?.registered_distributors,\n    poolId,\n    collateralType?.tokenAddress,\n    accountId\n  );\n\n  const isLoading = isRewardsLoading || isCollateralLoading || isPoolGraphDataLoading;\n\n  const title = pool ? `Pool #${pool.id} / ${pool.name}` : 'Pool';\n\n  return (\n    <>\n      <Helmet>\n        <title>{title}</title>\n        <meta name=\"description\" content={title} />\n      </Helmet>\n      <>\n        <HomeLink />\n        <PoolHeader />\n        <Divider my={8} bg=\"gray.900\" />\n        <Flex gap={4} flexDirection={{ base: 'column', lg: 'row' }}>\n          <Box flexGrow={1}>\n            <CollateralSection />\n          </Box>\n          <Box flexGrow={1}>\n            <MarketSection />\n            <Rewards mt={4} isLoading={isLoading} rewards={rewardsData} readOnly={true} />\n          </Box>\n        </Flex>\n      </>\n    </>\n  );\n};\n","import { Flex, Heading, Link } from '@chakra-ui/react';\nimport Head from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { Link as NavLink } from 'react-router-dom';\n\nexport const NotFoundPage = () => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Head>\n        <title>{t('not-found.page-title')}</title>\n      </Head>\n      <Flex\n        height=\"100%\"\n        direction=\"column\"\n        position=\"relative\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        flex=\"1\"\n      >\n        <Heading fontSize=\"5xl\">Not found</Heading>\n\n        <NavLink to=\"/\">\n          <Link color=\"cyan.500\">Return to Home</Link>\n        </NavLink>\n      </Flex>\n    </>\n  );\n};\n","import { InfoIcon } from '@chakra-ui/icons';\nimport { Flex, Button, Text, Image, Link, Divider, Heading, Skeleton } from '@chakra-ui/react';\nimport { Tooltip } from '@snx-v3/Tooltip';\nimport { TokenIcon } from '../../TokenIcon';\nimport { generatePath, useNavigate, useSearchParams } from 'react-router-dom';\nimport { ZEROWEI } from '../../../utils/constants';\nimport { CollateralType } from '@snx-v3/useCollateralTypes';\nimport { PoolType } from '@snx-v3/usePools';\nimport Wei from '@synthetixio/wei';\nimport { NetworkIcon } from '@snx-v3/useBlockchain';\nimport { compactInteger } from 'humanize-plus';\n\ninterface BasePoolCardProps {\n  isLoading: boolean;\n  pool: PoolType;\n  apr?: number;\n  vaultDebt?: {\n    debt: Wei;\n    collateral: {\n      value: Wei;\n      amount: Wei;\n    };\n    collateralType: CollateralType;\n  }[];\n  collateralTypes?: CollateralType[];\n}\n\nexport const BasePoolCard = ({\n  isLoading,\n  pool,\n  apr,\n  vaultDebt,\n  collateralTypes,\n}: BasePoolCardProps) => {\n  const navigate = useNavigate();\n  const [queryParams] = useSearchParams();\n\n  const vaultTVL = vaultDebt?.reduce((cur, prev) => {\n    return cur.add(prev.collateral.value);\n  }, ZEROWEI);\n\n  return (\n    <Flex\n      key={pool.id}\n      flexDir=\"column\"\n      w=\"100%\"\n      border=\"1px solid\"\n      borderColor=\"gray.900\"\n      rounded=\"base\"\n      bg=\"navy.700\"\n      p=\"6\"\n      maxW=\"767px\"\n    >\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\">\n          <NetworkIcon networkId={8453} />\n          <Heading fontSize=\"16px\" fontWeight={700} color=\"white\" ml={3}>\n            {pool.name}\n          </Heading>\n        </Flex>\n        <Button\n          mt={{ base: 2, md: 0 }}\n          size=\"sm\"\n          variant=\"outline\"\n          colorScheme=\"gray\"\n          color=\"white\"\n          onClick={() => {\n            navigate({\n              pathname: generatePath('/pools/:poolId', { poolId: '1' }),\n              search: location.search,\n            });\n          }}\n        >\n          Pool Details\n        </Button>\n      </Flex>\n      <Divider my=\"18px\" />\n      <Flex w=\"100%\" h=\"194px\" alignItems=\"center\" gap=\"4\" justifyContent=\"space-between\">\n        <Flex w=\"60%\">\n          <Flex flexDirection=\"column\" mr={12}>\n            <Text fontSize=\"12px\" color=\"gray.600\" mb={1}>\n              TVL\n              <Tooltip\n                label={\n                  <Flex flexDirection=\"column\" alignItems=\"start\">\n                    <Text fontWeight=\"bold\" fontSize=\"14px\">\n                      Total Value Locked:\n                    </Text>\n                    <Text textAlign=\"left\" fontSize=\"14px\">\n                      Is the total amount of assets locked as collateral on this Pool.\n                    </Text>\n                    <Text fontSize=\"14px\">Last 7 days Pool PNL * 52</Text>\n                  </Flex>\n                }\n              >\n                <InfoIcon ml={1} mb={0.5} w=\"10px\" h=\"10px\" />\n              </Tooltip>\n            </Text>\n            <Skeleton isLoaded={!isLoading} startColor=\"whiteAlpha.500\" endColor=\"whiteAlpha.200\">\n              <Text\n                fontWeight={700}\n                fontSize=\"30px\"\n                color=\"white\"\n                display=\"flex\"\n                alignItems=\"center\"\n                lineHeight=\"36px\"\n              >\n                {(vaultTVL?.toNumber() && `$${compactInteger(vaultTVL.toNumber(), 1)}`) || '-'}\n                {/* For sizing the skeleton */}\n                {isLoading && '100M'}\n              </Text>\n            </Skeleton>\n          </Flex>\n          <Flex flexDir=\"column\" mr=\"auto\">\n            <Text fontSize=\"12px\" color=\"gray.600\" mb={1}>\n              APR\n              <Tooltip\n                label={\n                  <Flex flexDirection=\"column\" alignItems=\"start\">\n                    <Text fontWeight=\"bold\" fontSize=\"14px\">\n                      Annual Percentage Yield (APY):\n                    </Text>\n                    <Text textAlign=\"left\" fontSize=\"14px\">\n                      Reflects the Pool PNL. It is calculated as an estimate derived from past week\n                      historical PNL, extrapolated as a year average.\n                    </Text>\n                    <Text fontWeight=\"bold\" mt={2} fontSize=\"14px\">\n                      Calculation\n                    </Text>\n                    <Text fontSize=\"14px\">Last 7 days Pool PNL * 52</Text>\n                  </Flex>\n                }\n              >\n                <InfoIcon ml={1} w=\"10px\" h=\"10px\" mb={0.5} />\n              </Tooltip>\n            </Text>\n            <Skeleton isLoaded={!isLoading} startColor=\"whiteAlpha.500\" endColor=\"whiteAlpha.200\">\n              <Text fontWeight={700} fontSize=\"30px\" color=\"white\" lineHeight=\"36px\">\n                {!!apr ? apr.toFixed(2)?.concat('%') : '-'}\n                {/* For sizing the skeleton */}\n                {isLoading && '42%'}\n              </Text>\n            </Skeleton>\n          </Flex>\n        </Flex>\n        <Flex w=\"40%\" justifyContent=\"center\" alignItems=\"center\">\n          <Image src=\"/pools.svg\" mb={4} />\n        </Flex>\n      </Flex>\n      <Divider mt=\"18px\" mb=\"10px\" />\n      {collateralTypes?.map((type) => (\n        <Flex key={type.tokenAddress} justifyContent=\"space-between\" mt={3}>\n          <Flex alignItems=\"center\">\n            <TokenIcon symbol={type.symbol} />\n            <Flex flexDirection=\"column\" ml={3} mr=\"auto\">\n              <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n                {type.symbol}\n              </Text>\n              <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n                {type.displaySymbol}\n              </Text>\n            </Flex>\n          </Flex>\n          <Tooltip\n            label={\n              <Flex flexDirection=\"column\" alignItems=\"start\">\n                <Text fontWeight=\"bold\" fontSize=\"14px\">\n                  Deposit:\n                </Text>\n                <Text textAlign=\"left\" fontSize=\"14px\">\n                  Add assets from your Synthetix Account to this Pool Position.\n                </Text>\n              </Flex>\n            }\n          >\n            <Button\n              size=\"sm\"\n              onClick={() => {\n                queryParams.set('manageAction', 'deposit');\n                navigate({\n                  pathname: `/positions/${type.symbol}/${pool.id}`,\n                  search: queryParams.toString(),\n                });\n              }}\n            >\n              Deposit\n            </Button>\n          </Tooltip>\n        </Flex>\n      ))}\n    </Flex>\n  );\n};\n\nexport const BaseInfoCard = () => {\n  return (\n    <Flex\n      flexDir=\"column\"\n      justifyContent=\"space-between\"\n      maxW=\"397px\"\n      minH=\"337px\"\n      border=\"1px solid\"\n      borderColor=\"gray.900\"\n      rounded=\"base\"\n      bg=\"navy.700\"\n      p={6}\n    >\n      <Flex flexDirection=\"column\">\n        <Image src=\"/snx.svg\" w=\"66px\" height=\"66px\" mb={6} />\n        <Text\n          fontWeight={700}\n          fontSize=\"18px\"\n          lineHeight=\"28px\"\n          fontFamily=\"heading\"\n          color=\"gray.50\"\n          width=\"70%\"\n        >\n          Sell SNX at a Premium and watch it Burn\n        </Text>\n        <Text fontSize=\"16px\" color=\"gray.500\" lineHeight=\"24px\" mt={1}>\n          Sell your SNX at a premium to the Buyback and Burn contract and get USDC on Base\n        </Text>\n      </Flex>\n      <Flex>\n        <Link\n          href=\"https://blog.synthetix.io/the-andromeda-release-buyback-and-burn/\"\n          target=\"_blank\"\n          rel=\"noopener\"\n        >\n          <Button variant=\"outline\" colorScheme=\"gray\" color=\"white\">\n            Learn More\n          </Button>\n        </Link>\n      </Flex>\n    </Flex>\n  );\n};\n","import { Flex, Heading } from '@chakra-ui/react';\nimport { usePools } from '@snx-v3/usePools';\nimport { useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { useApr } from '@snx-v3/useApr';\nimport { useVaultsData } from '@snx-v3/useVaultsData';\nimport { BasePoolCard, BaseInfoCard } from '../../components/Pools';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { useNetwork } from '@snx-v3/useBlockchain';\n\nexport function Pools() {\n  const { network } = useNetwork();\n  const { data: pools, isLoading: isPoolsLoading } = usePools();\n  const { data: apr, isLoading: isAprLoading } = useApr();\n  const { data: vaultDebt, isLoading: isVaultsLoading } = useVaultsData(1);\n  const { data: collateralTypes, isLoading: isCollateralTypesLoading } = useCollateralTypes();\n\n  const isLoading = isPoolsLoading || isAprLoading || isVaultsLoading || isCollateralTypesLoading;\n\n  const isBase = isBaseAndromeda(network?.id, network?.preset);\n\n  const hydratedCollateralTypes = isBase\n    ? collateralTypes?.map((item) => {\n        if (item.symbol === 'sUSDC') {\n          return {\n            ...item,\n            symbol: 'USDC',\n            name: 'USD Coin',\n          };\n        }\n\n        return item;\n      })\n    : collateralTypes;\n\n  return (\n    <Flex flexDir=\"column\">\n      <Heading mt={10} color=\"gray.50\" fontSize=\"1.5rem\" data-cy=\"liquidity-dashboard\">\n        All Pools\n      </Heading>\n      <Flex gap=\"4\" flexWrap={pools && pools.length > 1 ? 'wrap' : 'nowrap'} mt=\"6\">\n        {pools?.map((pool) => (\n          <BasePoolCard\n            key={pool.id}\n            isLoading={isLoading}\n            pool={pool}\n            apr={apr?.combinedApr}\n            vaultDebt={vaultDebt}\n            collateralTypes={hydratedCollateralTypes}\n          />\n        ))}\n        <BaseInfoCard />\n      </Flex>\n    </Flex>\n  );\n}\n","export const permissionsList = ['ADMIN', 'BURN', 'DELEGATE', 'MINT', 'REWARDS', 'WITHDRAW'];\n","import { utils } from 'ethers';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useMutation } from '@tanstack/react-query';\nimport { useMulticall3 } from '@snx-v3/useMulticall3';\n\ntype Permissions = Array<string>;\nconst getPermissionDiff = (\n  existing: Permissions,\n  selected: Permissions\n): {\n  grants: Permissions;\n  revokes: Permissions;\n} => {\n  let grants: Permissions = [],\n    revokes: Permissions = [];\n  existing.concat(selected).forEach((permission) => {\n    if (!existing.includes(permission)) {\n      grants = [...grants, permission];\n    }\n    if (!selected.includes(permission)) {\n      revokes = [...revokes, permission];\n    }\n  });\n  return { grants, revokes };\n};\n\nexport const useManagePermissions = ({\n  accountId,\n  target,\n  existing = [],\n  selected = [],\n}: {\n  accountId: string;\n  target: string;\n  existing: Permissions;\n  selected: Permissions;\n}) => {\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: multicall } = useMulticall3();\n\n  return useMutation({\n    mutationFn: async () => {\n      if (!CoreProxy || !multicall) {\n        return;\n      }\n\n      const { grants, revokes } = getPermissionDiff(existing, selected);\n\n      try {\n        const grantCalls = grants.map((permission) => ({\n          target: CoreProxy.address,\n          callData: CoreProxy.interface.encodeFunctionData('grantPermission', [\n            accountId,\n            utils.formatBytes32String(permission),\n            target,\n          ]),\n          allowFailure: false,\n          requireSuccess: true,\n        }));\n\n        const revokeCalls = revokes.map((permission) => ({\n          target: CoreProxy.address,\n          callData: CoreProxy.interface.encodeFunctionData('revokePermission', [\n            accountId,\n            utils.formatBytes32String(permission),\n            target,\n          ]),\n          allowFailure: false,\n          requireSuccess: true,\n        }));\n\n        const tx = await multicall.aggregate3([...grantCalls, ...revokeCalls]);\n        await tx.wait();\n      } catch (error: any) {\n        throw error;\n      }\n    },\n  });\n};\n","import { CopyIcon, ExternalLinkIcon } from '@chakra-ui/icons';\nimport { Flex, Tooltip } from '@chakra-ui/react';\nimport { etherscanLink } from '@snx-v3/etherscanLink';\nimport { prettyString } from '@snx-v3/format';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { FC, useMemo } from 'react';\n\ninterface AddressProps {\n  address: string;\n}\n\nexport const Address: FC<AddressProps> = ({ address }) => {\n  const { network } = useNetwork();\n  const link = useMemo(\n    () =>\n      etherscanLink({\n        chain: network?.name || '',\n        address,\n      }),\n    [address, network?.name]\n  );\n  return (\n    <Flex alignItems=\"center\" gap={2}>\n      <Tooltip label={address}>{prettyString(address)}</Tooltip>\n      <CopyIcon\n        onClick={() => {\n          navigator.clipboard.writeText(address);\n        }}\n        cursor=\"pointer\"\n        _hover={{\n          color: 'cyan',\n        }}\n      />\n      <a target=\"_blank\" href={link} rel=\"noreferrer\">\n        <ExternalLinkIcon\n          _hover={{\n            color: 'cyan',\n          }}\n        />\n      </a>\n    </Flex>\n  );\n};\n","import { DeleteIcon, EditIcon } from '@chakra-ui/icons';\nimport { Badge, Td, Tr, Text, Button, Flex, IconButton } from '@chakra-ui/react';\nimport { FC, useCallback, useEffect, useState } from 'react';\nimport { permissionsList } from './AccountPermissions';\nimport { useManagePermissions } from '@snx-v3/useManagePermissions';\nimport { Address } from '../Address';\n\ninterface Props {\n  address: string;\n  currentPermissions: Array<string>;\n  accountId: string;\n  refetch: () => void;\n  isOwner: boolean;\n}\n\nexport const PermissionRow: FC<Props> = ({\n  address,\n  currentPermissions,\n  accountId,\n  refetch,\n  isOwner,\n}) => {\n  const [isEdit, setIsEdit] = useState(false);\n  const [permissions, setPermissions] = useState<string[]>([...currentPermissions]);\n\n  const {\n    mutate: submit,\n    isPending,\n    isSuccess,\n  } = useManagePermissions({\n    accountId,\n    target: address,\n    selected: permissions,\n    existing: currentPermissions,\n  });\n\n  useEffect(() => {\n    if (isSuccess) {\n      refetch();\n      setIsEdit(false);\n    }\n  }, [isSuccess, refetch]);\n\n  const selectPermission = useCallback(\n    (permission: string) => {\n      const index = permissions.findIndex((p) => p === permission);\n      if (index < 0) {\n        setPermissions([...permissions, permission]);\n      } else {\n        const list = [...permissions];\n        list.splice(index, 1);\n        setPermissions(list);\n      }\n    },\n    [permissions]\n  );\n\n  if (isEdit) {\n    return (\n      <Tr>\n        <Td borderBottomColor=\"gray.900\" py=\"4\" width=\"200px\">\n          <Text fontWeight={400} color=\"white\" fontSize=\"16px\">\n            <Address address={address} />\n          </Text>\n        </Td>\n        <Td borderBottomColor=\"gray.900\">\n          <Flex py={2} flexWrap=\"wrap\" gap={3}>\n            {permissionsList.map((permission) => (\n              <Badge\n                cursor=\"pointer\"\n                onClick={() => selectPermission(permission)}\n                colorScheme={permissions.includes(permission) ? 'cyan' : 'gray'}\n                color={permissions.includes(permission) ? 'cyan' : 'gray'}\n                variant=\"outline\"\n                bg={permissions.includes(permission) ? 'cyan.900' : 'gray.900'}\n                size=\"md\"\n                textTransform=\"capitalize\"\n                key={permission.concat('permission-row')}\n              >\n                {permission}\n              </Badge>\n            ))}\n          </Flex>\n        </Td>\n        <Td borderBottomColor=\"gray.900\" textAlign=\"end\">\n          <Button\n            onClick={() => submit()}\n            isLoading={isPending}\n            size=\"xs\"\n            variant=\"outline\"\n            colorScheme=\"gray\"\n            color=\"white\"\n            mr=\"2\"\n          >\n            Save\n          </Button>\n          <Button\n            onClick={() => setIsEdit(false)}\n            size=\"xs\"\n            variant=\"outline\"\n            colorScheme=\"gray\"\n            color=\"white\"\n          >\n            Cancel\n          </Button>\n        </Td>\n      </Tr>\n    );\n  }\n\n  return (\n    <Tr>\n      <Td borderBottomColor=\"gray.900\" py=\"4\" width=\"200px\">\n        <Text fontWeight={400} color=\"white\" fontSize=\"16px\">\n          <Address address={address} />\n        </Text>\n      </Td>\n      <Td borderBottomColor=\"gray.900\">\n        <Flex py={2} flexWrap=\"wrap\" gap={3}>\n          {currentPermissions.map((r) => (\n            <Badge\n              color=\"cyan\"\n              variant=\"outline\"\n              bg=\"cyan.900\"\n              size=\"sm\"\n              textTransform=\"capitalize\"\n              key={r.concat('permission-row')}\n            >\n              {r}\n            </Badge>\n          ))}\n        </Flex>\n      </Td>\n      <Td borderBottomColor=\"gray.900\" textAlign=\"end\">\n        {isOwner && (\n          <>\n            <IconButton\n              onClick={() => {\n                setPermissions([...currentPermissions]);\n                setIsEdit(true);\n              }}\n              size=\"sm\"\n              aria-label=\"edit\"\n              variant=\"outline\"\n              colorScheme=\"gray\"\n              icon={<EditIcon />}\n              mr=\"2\"\n            />\n            <IconButton\n              variant=\"outline\"\n              isLoading={isPending}\n              colorScheme=\"gray\"\n              onClick={() => {\n                setPermissions([]);\n                submit();\n              }}\n              size=\"sm\"\n              aria-label=\"delete\"\n              icon={<DeleteIcon />}\n            />\n          </>\n        )}\n      </Td>\n    </Tr>\n  );\n};\n","import { useAccountProxy } from '@snx-v3/useAccountProxy';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useQuery } from '@tanstack/react-query';\nimport { utils } from 'ethers';\n\nexport function useAccountPermissions(accountId: string | undefined) {\n  const { data: CoreProxy } = useCoreProxy();\n  const { network } = useNetwork();\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'account-permissions', accountId],\n    queryFn: async function () {\n      if (!CoreProxy || !accountId) throw new Error('Should be disabled');\n      const permissions = await CoreProxy.getAccountPermissions(accountId);\n\n      return permissions.reduce(\n        (\n          acc: { [key: string]: string[] },\n          { user, permissions }: { user: string; permissions: string[] }\n        ) => ({\n          ...acc,\n          [user.toLowerCase()]: permissions.map((r: string) => utils.parseBytes32String(r)),\n        }),\n        {}\n      );\n    },\n    enabled: Boolean(CoreProxy?.address),\n  });\n}\n\nexport function useAccountOwner(accountId: string | undefined) {\n  const { data: AccountProxy } = useAccountProxy();\n  const { network } = useNetwork();\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'account-owner', accountId],\n    queryFn: async function () {\n      if (!AccountProxy || !accountId) throw new Error('Should be disabled');\n      return await AccountProxy.ownerOf(accountId);\n    },\n    enabled: Boolean(AccountProxy?.address),\n  });\n}\n","import {\n  Badge,\n  Button,\n  Divider,\n  Flex,\n  Input,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Spinner,\n  Text,\n} from '@chakra-ui/react';\nimport { useMemo, useState } from 'react';\nimport { permissionsList } from './AccountPermissions';\nimport { utils } from 'ethers';\nimport { useManagePermissions } from '@snx-v3/useManagePermissions';\nimport { useAccountOwner, useAccountPermissions } from '@snx-v3/useAccountPermissions';\n\nexport function AddPermissionModal({\n  accountId,\n  isOpen,\n  onClose,\n  refetch,\n}: {\n  accountId: string;\n  isOpen: boolean;\n  onClose: () => void;\n  refetch: () => void;\n}) {\n  const [address, setAddress] = useState('');\n  const [selectedPermission, setSelectedPermissions] = useState<string[]>([]);\n  const { mutateAsync: submit, isPending } = useManagePermissions({\n    target: address,\n    accountId,\n    existing: [],\n    selected: selectedPermission,\n  });\n\n  const { data: permissionData } = useAccountPermissions(accountId);\n  const { data: accountOwner } = useAccountOwner(accountId);\n\n  const isAddressValid = useMemo(() => {\n    return (\n      utils.isAddress(address) &&\n      accountOwner?.toLowerCase() !== address.toLowerCase() &&\n      permissionData &&\n      !permissionData[address.toLowerCase()]\n    );\n  }, [accountOwner, address, permissionData]);\n\n  const isFormValid = useMemo(() => {\n    return selectedPermission.length > 0 && isAddressValid;\n  }, [isAddressValid, selectedPermission.length]);\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent py={2} border=\"1px solid\" rounded=\"base\" borderColor=\"gray.900\" bg=\"navy.700\">\n        <ModalHeader>New Permission</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <Divider />\n          <Flex flexDir=\"column\" gap=\"5\">\n            <Text fontSize=\"14px\" color=\"white\" mt=\"6\">\n              Address\n            </Text>\n            <Input\n              bg=\"navy.900\"\n              onChange={(e) => {\n                setAddress(e.target.value.trim());\n              }}\n              value={address}\n              isInvalid={!isAddressValid && !!address}\n            />\n            <Text color=\"white\" fontSize=\"14px\">\n              Select Permissions\n            </Text>\n            <Flex justifyContent=\"space-evenly\">\n              {permissionsList.map((permission) => (\n                <Badge\n                  onClick={() =>\n                    setSelectedPermissions((state) => {\n                      if (state.includes(permission)) {\n                        return state.filter((s) => s !== permission);\n                      }\n                      return [...state, permission];\n                    })\n                  }\n                  variant=\"outline\"\n                  key={permission}\n                  color={selectedPermission.includes(permission) ? 'cyan' : 'gray'}\n                  textTransform=\"capitalize\"\n                  cursor=\"pointer\"\n                  bg=\"gray.900\"\n                  colorScheme={selectedPermission.includes(permission) ? 'cyan' : 'gray'}\n                >\n                  {permission}\n                </Badge>\n              ))}\n            </Flex>\n          </Flex>\n        </ModalBody>\n        <ModalFooter justifyContent=\"center\">\n          {isPending ? (\n            <Spinner color=\"cyan\" />\n          ) : (\n            <Button\n              w=\"100%\"\n              onClick={() => {\n                submit().then(() => {\n                  setAddress('');\n                  setSelectedPermissions([]);\n                  refetch();\n                  onClose();\n                });\n              }}\n              isDisabled={!isFormValid}\n            >\n              Add New Permission\n            </Button>\n          )}\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import {\n  Button,\n  Divider,\n  Input,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Spinner,\n  Text,\n} from '@chakra-ui/react';\nimport { prettyString } from '@snx-v3/format';\nimport { useTransferAccountId } from '@snx-v3/useTransferAccountId';\nimport { utils } from 'ethers';\nimport { useState } from 'react';\n\nexport function TransferOwnershipModal({\n  isOpen,\n  onClose,\n  accountId,\n  refetch,\n}: {\n  isOpen: boolean;\n  onClose: () => void;\n  accountId: string;\n  refetch: () => void;\n}) {\n  const [to, setTo] = useState('');\n  const { isPending, mutateAsync: submit } = useTransferAccountId(to, accountId);\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent border=\"1px solid\" rounded=\"base\" borderColor=\"gray.900\" bg=\"navy.700\">\n        <ModalHeader>Transfer Ownership</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <Divider />\n          <Text fontSize=\"14px\" fontWeight={700} mt=\"2\">\n            Account #{prettyString(accountId, 4, 4)}\n          </Text>\n          <Text fontSize=\"14px\" color=\"white\" mt=\"2\">\n            Enter the wallet address you would like to transfer this account to:\n          </Text>\n          <Input\n            mt=\"2\"\n            bg=\"navy.900\"\n            onChange={(e) => {\n              setTo(e.target.value.trim());\n            }}\n            value={to}\n          />\n        </ModalBody>\n        <ModalFooter justifyContent=\"center\">\n          {isPending ? (\n            <Spinner color=\"cyan\" />\n          ) : (\n            <Button\n              w=\"100%\"\n              onClick={() =>\n                submit().then(() => {\n                  setTo('');\n                  refetch();\n                  onClose();\n                })\n              }\n              isDisabled={!utils.isAddress(to)}\n            >\n              Transfer Ownership\n            </Button>\n          )}\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import { useAccountProxy } from '@snx-v3/useAccountProxy';\nimport { useWallet } from '@snx-v3/useBlockchain';\nimport { useMutation } from '@tanstack/react-query';\n\nexport function useTransferAccountId(to: string, accountId: string) {\n  const { data: AccountProxy } = useAccountProxy();\n  const { activeWallet } = useWallet();\n\n  return useMutation({\n    mutationFn: async () => {\n      if (!AccountProxy) throw new Error('CoreProxy or Multicall not defined');\n      if (!activeWallet?.address) throw new Error('Wallet is not connected');\n      const tx = await AccountProxy.transferFrom(activeWallet.address, to, accountId);\n      const response = await tx.wait();\n      return response;\n    },\n  });\n}\n","import { Skeleton, Td, Text, Tr } from '@chakra-ui/react';\nimport { prettyString } from '@snx-v3/format';\nimport { ethers } from 'ethers';\n\nexport function PermissionTableLoading() {\n  const rows = Array.from({ length: 2 }, (_, i) => i);\n  return (\n    <>\n      {rows.map((row) => {\n        return (\n          <Tr borderBottomWidth={row === 1 ? 'none' : '1px'} key={row}>\n            <Td borderBottomColor=\"gray.900\" py=\"4\" width=\"200px\">\n              <Skeleton>\n                <Text fontWeight={400} color=\"white\" fontSize=\"16px\">\n                  {prettyString(ethers.constants.AddressZero)}{' '}\n                </Text>\n              </Skeleton>\n            </Td>\n            <Td borderBottomColor=\"gray.900\" py=\"4\">\n              <Skeleton>-</Skeleton>\n            </Td>\n            <Td borderBottomColor=\"gray.900\" py=\"4\">\n              <Skeleton>-</Skeleton>\n            </Td>\n          </Tr>\n        );\n      })}\n    </>\n  );\n}\n","import {\n  Badge,\n  Button,\n  Flex,\n  Heading,\n  Skeleton,\n  Table,\n  TableContainer,\n  Tbody,\n  Td,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useDisclosure,\n} from '@chakra-ui/react';\nimport { PermissionRow } from './PermissionRow';\nimport { useAccountOwner, useAccountPermissions } from '@snx-v3/useAccountPermissions';\nimport { prettyString } from '@snx-v3/format';\nimport { useWallet } from '@snx-v3/useBlockchain';\nimport { AddPermissionModal } from './AddPermissionModal';\nimport { TransferOwnershipModal } from './TransferOwnershipModal';\nimport { PermissionTableLoading } from './PermissionTableLoading';\nimport { useMemo } from 'react';\nimport { Address } from '../Address';\n\nexport default function PermissionTable({\n  accountId,\n  refetchAccounts,\n}: {\n  accountId: string;\n  refetchAccounts: () => void;\n}) {\n  const {\n    isOpen: isPermissionOpen,\n    onClose: onPermissionClose,\n    onOpen: onPermissionOpen,\n  } = useDisclosure();\n  const {\n    isOpen: isTransferOpen,\n    onClose: onTransferClose,\n    onOpen: onTransferOpen,\n  } = useDisclosure();\n\n  const { activeWallet } = useWallet();\n  const { data: permissions, isLoading, refetch } = useAccountPermissions(accountId);\n  const {\n    data: accountOwner,\n    isLoading: loadingOwner,\n    refetch: refetchAccountOwner,\n  } = useAccountOwner(accountId);\n\n  const isOwner = useMemo(\n    () => !!(accountOwner && accountOwner?.toLowerCase() === activeWallet?.address.toLowerCase()),\n    [accountOwner, activeWallet?.address]\n  );\n  return (\n    <>\n      <TableContainer\n        flexGrow=\"2\"\n        borderColor=\"gray.900\"\n        borderWidth=\"1px\"\n        borderRadius=\"5px\"\n        p={6}\n        sx={{\n          borderCollapse: 'separate',\n          borderSpacing: 0,\n        }}\n        bg=\"navy.700\"\n      >\n        <Flex mb=\"2\" w=\"100%\" justifyContent=\"space-between\">\n          <Heading size=\"md\" mb=\"1\">\n            Account #{prettyString(accountId, 4, 4)}\n          </Heading>\n          {isOwner && (\n            <Button\n              size=\"xs\"\n              onClick={() => {\n                onPermissionOpen();\n              }}\n            >\n              + New Permission\n            </Button>\n          )}\n        </Flex>\n        <Table variant=\"simple\">\n          <Thead>\n            <Tr>\n              <Th\n                py={5}\n                textTransform=\"unset\"\n                color=\"gray.600\"\n                fontFamily=\"heading\"\n                fontSize=\"12px\"\n                lineHeight=\"16px\"\n                borderBottomColor=\"gray.900\"\n              >\n                Address\n              </Th>\n              <Th\n                py={5}\n                textTransform=\"unset\"\n                color=\"gray.600\"\n                fontFamily=\"heading\"\n                fontSize=\"12px\"\n                lineHeight=\"16px\"\n                borderBottomColor=\"gray.900\"\n              >\n                Permissions\n              </Th>\n              <Th\n                py={5}\n                textTransform=\"unset\"\n                color=\"gray.600\"\n                fontFamily=\"heading\"\n                fontSize=\"12px\"\n                lineHeight=\"16px\"\n                borderBottomColor=\"gray.900\"\n              ></Th>\n            </Tr>\n          </Thead>\n\n          <Tbody>\n            <Tr>\n              <Td py={5} borderBottomColor=\"gray.900\">\n                <Skeleton isLoaded={!loadingOwner}>\n                  {accountOwner && (\n                    <Text fontWeight={400} color=\"white\" fontSize=\"16px\">\n                      <Address address={accountOwner} />\n                    </Text>\n                  )}\n                </Skeleton>\n              </Td>\n              <Td py={5} borderBottomColor=\"gray.900\">\n                <Badge\n                  color=\"cyan\"\n                  variant=\"outline\"\n                  bg=\"cyan.900\"\n                  size=\"sm\"\n                  textTransform=\"capitalize\"\n                  mx=\"1\"\n                >\n                  OWNER\n                </Badge>\n              </Td>\n              <Td py={5} borderBottomColor=\"gray.900\" textAlign=\"end\">\n                {isOwner && (\n                  <Button\n                    size=\"xs\"\n                    variant=\"outline\"\n                    colorScheme=\"gray\"\n                    color=\"white\"\n                    onClick={() => {\n                      onTransferOpen();\n                    }}\n                  >\n                    Transfer Ownership\n                  </Button>\n                )}\n              </Td>\n            </Tr>\n\n            {isLoading && <PermissionTableLoading />}\n\n            {!isLoading &&\n              permissions &&\n              Object.keys(permissions)\n                .filter((target) => permissions[target]?.length > 0)\n                .map((target) => (\n                  <PermissionRow\n                    key={target}\n                    address={target}\n                    currentPermissions={permissions[target]}\n                    accountId={accountId}\n                    refetch={refetch}\n                    isOwner={isOwner}\n                  />\n                ))}\n          </Tbody>\n        </Table>\n      </TableContainer>\n\n      <AddPermissionModal\n        isOpen={isPermissionOpen}\n        onClose={onPermissionClose}\n        accountId={accountId}\n        refetch={refetch}\n      />\n      <TransferOwnershipModal\n        isOpen={isTransferOpen}\n        onClose={onTransferClose}\n        accountId={accountId}\n        refetch={() => {\n          refetch();\n          refetchAccountOwner();\n          refetchAccounts();\n        }}\n      />\n    </>\n  );\n}\n","export const DelegationIcon = () => {\n  return (\n    <svg width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M29.3662 7.14593C29.8933 6.89158 30.5156 6.97433 30.9627 7.35822L42.9627 17.6613C43.3047 17.9549 43.5024 18.3898 43.5024 18.8485C43.5024 19.3072 43.3047 19.7421 42.9627 20.0358L30.9627 30.3388C30.5156 30.7227 29.8933 30.8054 29.3662 30.5511C28.8391 30.2967 28.5024 29.7512 28.5024 29.1515V25.5455H18.0024C17.174 25.5455 16.5024 24.8536 16.5024 24C16.5024 23.1465 17.174 22.4546 18.0024 22.4546H30.0024C30.8309 22.4546 31.5024 23.1465 31.5024 24V25.8519L39.6594 18.8485L31.5024 11.8451V13.697C31.5024 14.5505 30.8309 15.2424 30.0024 15.2424H18.0024C17.174 15.2424 16.5024 14.5505 16.5024 13.697C16.5024 12.8435 17.174 12.1515 18.0024 12.1515H28.5024V8.54547C28.5024 7.94581 28.8391 7.40028 29.3662 7.14593Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M18.6362 40.8541C18.1092 41.1084 17.4868 41.0257 17.0397 40.6418L5.03972 30.3387C4.69774 30.0451 4.5 29.6102 4.5 29.1515C4.5 28.6928 4.69774 28.2579 5.03972 27.9642L17.0397 17.6612C17.4869 17.2773 18.1092 17.1946 18.6362 17.4489C19.1633 17.7033 19.5 18.2488 19.5 18.8485L19.5 22.4545L30 22.4545C30.8284 22.4545 31.5 23.1464 31.5 24C31.5 24.8535 30.8284 25.5454 30 25.5454L18 25.5454C17.1716 25.5454 16.5 24.8535 16.5 24L16.5 22.1481L8.34308 29.1515L16.5 36.1549L16.5 34.303C16.5 33.4495 17.1716 32.7576 18 32.7576L30 32.7576C30.8284 32.7576 31.5 33.4495 31.5 34.303C31.5 35.1565 30.8284 35.8485 30 35.8485L19.5 35.8485L19.5 39.4545C19.5 40.0542 19.1633 40.5997 18.6362 40.8541Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M9.3584 13.6973C9.3584 12.8438 10.03 12.1519 10.8584 12.1519H12.5727C13.4011 12.1519 14.0727 12.8438 14.0727 13.6973C14.0727 14.5508 13.4011 15.2428 12.5727 15.2428H10.8584C10.03 15.2428 9.3584 14.5508 9.3584 13.6973Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M38.644 34.3027C38.644 35.1562 37.9725 35.8481 37.144 35.8481L35.4298 35.8481C34.6013 35.8481 33.9298 35.1562 33.9298 34.3027C33.9298 33.4492 34.6013 32.7572 35.4298 32.7572L37.144 32.7572C37.9725 32.7572 38.644 33.4492 38.644 34.3027Z\"\n        fill=\"white\"\n      />\n    </svg>\n  );\n};\n","import { Button, Flex, Heading, Link, Text } from '@chakra-ui/react';\nimport { useAccounts } from '@snx-v3/useAccounts';\nimport PermissionTable from './PermissionTable';\nimport { DelegationIcon } from './DelegationIcon';\n\nexport default function Permissions() {\n  const { data: accounts, refetch: refetchAccounts } = useAccounts();\n\n  return (\n    <Flex flexDir=\"column\" gap=\"7\">\n      <Flex flexDir=\"column\" gap={7}>\n        {accounts?.map((account) => (\n          <PermissionTable key={account} accountId={account} refetchAccounts={refetchAccounts} />\n        ))}\n      </Flex>\n      <Flex\n        flexGrow=\"1\"\n        h=\"fit-content\"\n        border=\"1px solid\"\n        borderColor=\"gray.900\"\n        rounded=\"base\"\n        flexDir=\"column\"\n        width=\"100%\"\n        p=\"6\"\n        bg=\"navy.700\"\n      >\n        <DelegationIcon />\n        <Heading fontSize=\"14px\" mt=\"6\">\n          Delegate Permissions\n        </Heading>\n        <Text color=\"gray.500\" fontSize=\"12px\" mb=\"6\">\n          Delegation enables a wallet to execute functions on behalf of another wallet/account:\n          delegate, borrow, withdraw, claim, but not transfer. Manage addresses and their powers\n          below.\n        </Text>\n        <Link\n          href=\"https://docs.synthetix.io/v/synthetix-v3-user-documentation/protocol-design/vaults#account-permissions\"\n          rel=\"noopener\"\n          target=\"_blank\"\n        >\n          <Button variant=\"outline\" color=\"white\" colorScheme=\"gray\" size=\"xs\">\n            Learn More\n          </Button>\n        </Link>\n      </Flex>\n    </Flex>\n  );\n}\n","import { Helmet } from 'react-helmet';\nimport { Flex, Heading } from '@chakra-ui/react';\nimport Permissions from '../../components/Permissions/Permissions';\n\nexport function Settings() {\n  return (\n    <>\n      <Helmet>\n        <title>Account Settings</title>\n        <meta name=\"description\" content=\"Account Settings\" />\n      </Helmet>\n      <Flex flexDir=\"column\" mb={16}>\n        <Heading\n          mt={{\n            base: 2,\n            sm: 8,\n          }}\n          mb={6}\n          color=\"gray.50\"\n          fontSize=\"1.5rem\"\n          data-cy=\"liquidity-dashboard\"\n        >\n          Account Settings\n        </Heading>\n        <Permissions />\n      </Flex>\n    </>\n  );\n}\n","import { Suspense } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { Spinner } from '@chakra-ui/react';\nimport { DefaultLayout } from './layouts/Default';\nimport { Home } from './pages/Home';\nimport { Manage } from './pages/Manage';\nimport { Pool } from './pages/Pool';\nimport { NotFoundPage } from './pages/404';\nimport { Pools } from './pages/Pools';\nimport { Settings } from './pages/Account/Settings';\n\nexport const Router = () => {\n  return (\n    <Suspense fallback={<Spinner />}>\n      <Routes>\n        <Route element={<DefaultLayout />}>\n          <Route path=\"/account/settings\" element={<Settings />} />\n          <Route path=\"/positions/:collateralSymbol/:poolId\" element={<Manage />} />\n          <Route path=\"/pools\" element={<Pools />} />\n          <Route path=\"/pools/:poolId\" element={<Pool />} />\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Suspense>\n  );\n};\n","import { NETWORKS, appMetadata } from '@snx-v3/useBlockchain';\nimport injectedModule, { ProviderLabel } from '@web3-onboard/injected-wallets';\nimport trezorModule from '@web3-onboard/trezor';\nimport ledgerModule from '@web3-onboard/ledger';\nimport walletConnectModule from '@web3-onboard/walletconnect';\n// import gnosisModule from '@web3-onboard/gnosis';\nimport coinbaseModule from '@web3-onboard/coinbase';\nimport { init } from '@web3-onboard/react';\n\nconst supportedDeployments = [\n  '1-main',\n  '11155111-main',\n  '8453-andromeda',\n  '84532-andromeda',\n  '42161-main',\n  '421614-main',\n];\n\n// Filter networks to only supported ones\nexport const chains = NETWORKS.filter(({ id, preset }) =>\n  supportedDeployments.includes(`${id}-${preset}`)\n).map((n) => ({\n  id: n.id,\n  token: n.token,\n  label: n.label,\n  rpcUrl: n.rpcUrl(),\n}));\n\nexport const onboard = init({\n  wallets: [\n    coinbaseModule(),\n    injectedModule({ displayUnavailable: [ProviderLabel.MetaMask, ProviderLabel.Trust] }),\n    trezorModule({\n      appUrl: 'https://liquidity.synthetix.eth.limo',\n      email: 'info@synthetix.io',\n    }),\n    ledgerModule({\n      projectId: 'd6eac005846a1c3be1f8eea3a294eed9',\n      walletConnectVersion: 2,\n    }),\n    walletConnectModule({\n      version: 2,\n      projectId: 'd6eac005846a1c3be1f8eea3a294eed9',\n      dappUrl: 'liquidity.synthetix.eth.limo',\n    }),\n    // gnosisModule(),\n  ],\n  chains,\n  appMetadata: {\n    ...appMetadata,\n    name: 'Synthetix Liquidity',\n  },\n  accountCenter: {\n    desktop: {\n      enabled: false,\n    },\n    mobile: {\n      enabled: false,\n    },\n  },\n  notify: {\n    enabled: false,\n  },\n});\n","import { useEffect } from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport { ChakraProvider, useColorMode } from '@chakra-ui/react';\nimport { Fonts, theme } from '@synthetixio/v3-theme';\nimport { DEFAULT_QUERY_STALE_TIME } from '@snx-v3/constants';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools';\nimport { GasSpeedProvider } from '@snx-v3/useGasSpeed';\nimport { TermsModal } from '@snx-v3/TermsModal';\nimport { SESSION_STORAGE_KEYS } from '@snx-v3/constants';\nimport { Router } from './Router';\nimport { Web3OnboardProvider } from '@web3-onboard/react';\nimport { onboard } from './utils/onboard';\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchInterval: false, //  if queries needs refetching we should be explicit about it, given erc7412\n      staleTime: DEFAULT_QUERY_STALE_TIME,\n      refetchOnWindowFocus: false,\n      throwOnError: (e) => {\n        console.error(e);\n        return false;\n      },\n    },\n    mutations: {\n      throwOnError: (e) => {\n        console.error(e);\n        return false;\n      },\n    },\n  },\n});\n\nfunction ColorMode() {\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  useEffect(() => {\n    if (colorMode === 'light') {\n      toggleColorMode();\n    }\n  }, [colorMode, toggleColorMode]);\n  return null;\n}\n\nexport const App = () => {\n  const TERMS_CONDITIONS_ACCEPTED =\n    sessionStorage.getItem(SESSION_STORAGE_KEYS.TERMS_CONDITIONS_ACCEPTED) === 'true';\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <Web3OnboardProvider web3Onboard={onboard}>\n        <ChakraProvider theme={theme}>\n          <ColorMode />\n          <Fonts />\n          <GasSpeedProvider>\n            <HashRouter>\n              <TermsModal defaultOpen={!TERMS_CONDITIONS_ACCEPTED} />\n              <Router />\n            </HashRouter>\n          </GasSpeedProvider>\n          <ReactQueryDevtools />\n        </ChakraProvider>\n      </Web3OnboardProvider>\n    </QueryClientProvider>\n  );\n};\n","import ReactDOM from 'react-dom/client';\nimport { App } from './App';\n\nconst container = document.querySelector('#app');\n\nexport async function bootstrap() {\n  if (!container) {\n    throw new Error('Container #app does not exist');\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    const { Wei, wei } = await import('@synthetixio/wei');\n    const { ethers } = await import('ethers');\n    // @ts-ignore\n    window.devtoolsFormatters = window.devtoolsFormatters ?? [];\n    // @ts-ignore\n    window.devtoolsFormatters.push({\n      header: function (obj: any) {\n        if (obj instanceof ethers.BigNumber) {\n          return [\n            'div',\n            { style: 'color: #f33' },\n            ['span', {}, 'ethers.BigNumber('],\n            ['span', { style: 'color: #3f3' }, wei(obj).toString()],\n            ['span', {}, ')'],\n          ];\n        }\n        if (obj instanceof Wei) {\n          return [\n            'div',\n            { style: 'color: #f33' },\n            ['span', {}, 'Wei('],\n            ['span', { style: 'color: #3f3' }, obj.toString()],\n            ['span', {}, ')'],\n          ];\n        }\n        return null;\n      },\n      hasBody: function () {\n        return false;\n      },\n    });\n  }\n\n  const root = ReactDOM.createRoot(container);\n  root.render(<App />);\n}\n","const { safeLazy } = require('./safeLazy');\nconst { safeImport } = require('./safeImport');\nmodule.exports = {\n  safeLazy,\n  safeImport,\n};\n","const { lazy } = require('react');\nconst { safeImport } = require('./safeImport');\n\nfunction safeLazy(importer) {\n  return lazy(() => safeImport(importer));\n}\n\nmodule.exports = {\n  safeLazy,\n};\n"],"names":["async","importCoreProxy","chainId","preset","Error","deployment","Number","toFixed","default","meta","abi","Promise","all","address","contracts","CoreProxy","importMulticall3","mainnet","multicall3","sepolia","optimism","base","baseSepolia","arbitrum","arbitrumSepolia","Amount","value","prefix","suffix","testid","showTooltip","formattedValue","preciseValue","isMaxUint","useMemo","currency","cleanNumber","wei","replaceAll","constants","lte","eq","toString","_jsx","Tooltip","label","_Fragment","children","_jsxs","isDisabled","props","ChakraTooltip","hasArrow","bg","p","borderRadius","SUSDCIcon","width","height","Icon","viewBox","fill","clipPath","d","id","Logo","color","EthereumIcon","fillOpacity","SNXIcon","OptimismIcon","DollarCircle","fillRule","clipRule","BitcoinIcon","ArbitrumIcon","cx","cy","r","CollateralIcon","symbol","UnknownIcon","stroke","ChevronDown","ChevronUp","FailedIcon","w","h","filter","x","y","filterUnits","colorInterpolationFilters","floodOpacity","result","in","type","values","stdDeviation","mode","in2","WalletIcon","LogoIcon","BorrowIcon","xmlns","BaseIcon","ManagePositionContext","createContext","collateralChange","debtChange","setDebtChange","setCollateralChange","ManagePositionProvider","useState","Provider","GWEI_DECIMALS","GAS_LIMIT_MULTIPLIER","DEFAULT_QUERY_STALE_TIME","INFURA_KEY","getSubgraphUrl","networkName","SESSION_STORAGE_KEYS","TERMS_CONDITIONS_ACCEPTED","offchainMainnetEndpoint","offchainTestnetEndpoint","fetchPriceUpdates","requestedPriceUpdates","isTestnet","length","priceService","EvmPriceServiceConnection","getPriceFeedsUpdateData","map","priceFeedId","signedOffchainData","i","stalenessTolerance","ethers","encode","toBN","priceUpdatesToPopulatedTx","from","oracleAddresses","signedOffchainDatum","to","data","encodeFunctionData","BigNumber","parseUnits","decimals","prettyString","text","startLength","endLength","substring","options","minimumDigitsToShowAfterZeros","stringValue","numberValue","toNumber","Math","floor","maximumFractionDigits","log10","isNaN","toLocaleString","minimumFractionDigits","error","isBaseAndromeda","getRepayerContract","getPythWrapper","sUSDC","USDC_BASE_MARKET","notNil","initialState","modalOpen","txnStatus","txnHash","reducer","state","action","payload","importOracleManagerProxy","OracleManagerProxy","NodeSchema","z","object","nodeType","number","parameters","string","parents","array","PythParametersSchema","ZodBigNumber","transform","useAllCollateralPriceIds","customNetwork","Multicall3","useMulticall3","OracleProxy","providerForChain","useProviderForChain","network","useNetwork","provider","useProvider","signer","useSigner","signerOrProvider","withSigner","Boolean","useQuery","queryKey","queryFn","Contract","enabled","staleTime","Infinity","useOracleManagerProxy","useCoreProxy","deploymentsWithERC7412","includes","configs","getCollateralConfigurations","loadConfigs","calls","oracleNodeId","target","callData","interface","returnData","callStatic","aggregate","decoded","bytes","nodeResp","decodeFunctionResult","parse","decode","parametersDecoded","console","seen","Set","item","has","add","AllowanceSchema","approveAbi","useApprove","contractAddress","amount","spender","eventHandlers","txnState","dispatch","useReducer","allowance","refetch","refetchAllowance","useAllowance","activeWallet","useWallet","accountAddress","contract","sufficientAllowance","gte","gasSpeed","useGasSpeed","mutation","useMutation","mutationFn","amountToAppove","infiniteApproval","gasPricesPromised","getGasPrice","gasLimitPromised","estimateGas","approve","populatedTxnPromised","populateTransaction","gasLimit","gasPrices","populatedTxn","gasOptionsForTransaction","formatGasPriceForTransaction","txn","sendTransaction","hash","wait","isLoading","isPending","mutateAsync","requireApproval","NetworkIcon","networkId","size","NETWORKS","hexId","token","name","rpcUrl","DEFAULT_INFURA_KEY","isSupported","publicRpcUrl","appMetadata","find","window","localStorage","getItem","icon","logo","description","recommendedInjectedWallets","url","gettingStartedGuide","explore","undefined","useDefaultProvider","wallet","conn","disconn","useConnectWallet","connect","useCallback","disconnect","walletsInfo","accounts","connectedChain","setChain","useSetChain","n","setNetwork","newNetwork","getSigner","DEBT_REPAYER_ABI","inputs","internalType","outputs","stateMutability","useClearDebt","accountId","poolId","collateralTypeAddress","availableUSDCollateral","debt","SpotMarketProxy","useSpotMarketProxy","collateralPriceIds","priceUpdateTx","useCollateralPriceUpdates","repayer","depositDebtToRepay","burn","burnUsd","mul","div","callsPromise","unshift","erc7412Tx","withERC7412","settle","exec","getPythFeedIds","extras","importExtras","Object","entries","key","startsWith","endsWith","_key","getPriceUpdates","priceIds","erc7412Interface","ERC7412_ABI","useAllCollateralPriceUpdates","pythFeedIds","tx","refetchInterval","multicallAddress","multiCallAbi","multicallInterface","pythInterface","txs","priceId","requireSuccess","getPricesTx","call","decodedMultiCall","outdatedPriceIds","forEach","success","push","CollateralConfigurationSchema","depositingEnabled","boolean","issuanceRatioD18","liquidationRatioD18","liquidationRewardD18","tokenAddress","minDelegationD18","SymbolSchema","extend","displaySymbol","ERC20Interface","loadCollateralTypes","tokenConfigs","symbols","tokenConfig","loadSymbols","names","loadName","config","useCollateralTypes","includeDelegationOff","collateralTypes","collateralType","lt","placeholderData","useCollateralType","collateralSymbol","collateral","toLowerCase","BalanceSchema","useEthBalance","connectedProvider","getBalance","GAS_LIMIT_BUFFER","addGasLimitBuffer","gasPrice","baseFeePerGas","_baseFeePerGas","gasPriceToReturn","isNumber","subject","ema","dma","alpha","noHead","Array","slice","noArrayWeight","isArray","ret","datum","s","o","rewardsFilterOutliers","blocksRewards","outlierBlocks","rewardIndex","_","index","reward","feeSuggestion","fromBlock","defaultForLocalProvider","maxFeePerGas","maxPriorityFeePerGas","average","fast","fastest","feeHistory","send","then","feeHistoryResponse","num","at","getOutlierBlocksToRemove","blocks","gweiReward","gt","blocksRewardsPerc15","blocksRewardsPerc30","blocksRewardsPerc45","emaPerc15","emaPerc30","emaPerc45","averageMaxPriorityFee","min","fastMaxPriorityFee","fastestMaxPriorityFee","baseFeeToMax","prio","getBlock","e","getGasPriceFromProvider","useGasPrice","GasSpeedContext","setGasSpeed","GasSpeedProvider","useContext","useGetUSDTokens","isBase","SpotMarket","USDProxy","getUsdToken","USDC","getWrapper","wrapCollateralType","snxUSD","sUSD","cleanObject","params","cleaned","fromEntries","useParams","pathParams","useParamsRouter","queryParams","useSearchParams","sortObject","searchParams","sort","a","b","localeCompare","PoolIdSchema","PoolSchema","isPreferred","PoolsSchema","usePools","prefferedPoolId","approvedPoolIds","getPreferredPool","getApprovedPools","incompletePools","concat","poolNames","getPoolName","poolsRaw","usePool","importSpotMarketProxy","useTokenBalance","assertAddressType","fetchTokenBalance","useTokenBalances","addresses","walletAddress","balanceOf","useUSDProxy","importUSDProxy","cache","parseTxError","cause","err","fetchOffchainData","func","oracleQuery","logLabel","OracleQuerySchema","tuple","updateType","log","cacheDuration","args","bypassCache","funcArgs","cacheKey","JSON","stringify","currentTime","Date","now","cacheItem","timestamp","withMemoryCache","makeMulticall","senderAddr","encodedData","allowFailure","totalValue","makeCoreProxyMulticall","coreProxyAddress","coreProxyAbi","ERC7412ErrorSchema","union","literal","parseError","errorData","transaction","newError","decodedError","getDefaultFromAddress","chainName","initialMulticallLength","multicallCalls","flat","some","jsonRpcProvider","isRead","initialCall","multicallTxn","parsedError","oracleAddress","ignoreCache","signedRequiredData","newTransactionRequest","splice","errorResult","viem","errorName","_error","requiredFee","txToUpdate","erc7412Call","txRequests","multicallAbi","reqs","txRequest","newCall","res","custom","val","isBigNumber","SmallIntSchema","WeiSchema","gradients","grey","dark","orange","Button","defaultProps","colorScheme","variants","solid","defineStyle","c","_hover","_disabled","_active","bgGradient","background","hoverBg","activeBg","outline","borderColor","border","ghost","theme","extendTheme","useSystemColorMode","initialColorMode","colors","gray","red","yellow","green","blue","cyan","purple","pink","navy","warning","shadows","fonts","heading","body","display","mono","components","Popover","responsive","popper","maxWidth","Input","focusBorderColor","errorBorderColor","Select","iconColor","NumberInput","Alert","variant","container","borderInlineStartColor","Textarea","Skeleton","startColor","endColor","Checkbox","baseStyle","control","_checked","_invalid","Radio","Badge","subtle","percent","fontFamily","py","px","borderWidth","textAlign","userSelect","Tag","Accordion","Progress","filledTrack","track","Tabs","tab","_selected","Switch","Spinner","Menu","parts","button","span","alignItems","list","mt","bgColor","padding","_first","borderTopLeftRadius","borderTopRightRadius","_last","borderBottomLeftRadius","borderBottomRightRadius","_focus","textStyles","fontSize","lg","lineHeight","fontWeight","md","sizes","max","full","xs","sm","xl","styles","global","Fonts","Global","TermsModal","defaultOpen","isOpen","setOpen","setEnabled","Modal","onClose","ModalOverlay","ModalContent","pt","pb","ModalHeader","ModalBody","Text","Box","onScroll","currentTarget","scrollTop","scrollHeight","offsetHeight","as","my","overflow","overflowX","sx","backgroundColor","UnorderedList","ListItem","Link","href","_focusVisible","ReactRouterLink","mx","onClick","onSubmit","sessionStorage","setItem","set","useLocalStorage","initialValue","storedValue","setStoredValue","get","valueToStore","Function","LOCAL_STORAGE_KEYS","SHOW_TESTNETS","ZEROWEI","Wei","ONEWEI","useAccountProxy","AccountProxy","importAccountProxy","useAccounts","numberOfAccountTokens","accountIndexes","keys","tokenOfOwnerByIndex","useCreateAccount","client","useQueryClient","getTransactionCost","gasUnits","coins","fetch","json","price","newAccountId","invalidateQueries","logs","topics","getEventTopic","decodeEventLog","NetworkController","toolTipLabel","setTooltipLabel","activeNetwork","isAccountsLoading","isFetching","isAccountsFetching","showTestnets","setShowTestnets","navigate","useNavigate","pathname","useLocation","useEffect","search","defaultWallet","autoSelect","disableModals","notConnected","notSupported","Flex","MenuButton","mr","MenuList","MenuItem","ml","MenuOptionGroup","justifyContent","isChecked","onChange","placement","whiteSpace","ens","rounded","opacity","flexDir","gap","stopPropagation","removeItem","closeOnClick","CopyIcon","navigator","clipboard","writeText","setTimeout","IconButton","SettingsIcon","account","cursor","mutate","leftIcon","stringToHash","split","reduce","charCodeAt","loadAccountCollateral","tokenAddresses","callsP","flatMap","getAccountAvailableCollateral","getAccountCollateral","decoder","multicallEncoded","availableCollateral","totalAssigned","totalDeposited","totalLocked","useAccountCollateral","USDTokens","tokens","allCalls","PriceSchema","loadPrices","collateralAddresses","getCollateralPrice","encoded","pricesEncoded","useCollateralPrices","collateralData","usdTokens","pos","indexOf","prices","acc","TokenIcon","Image","src","toUpperCase","alt","style","formatNumberToUsd","optionsWithDefault","locales","Intl","NumberFormat","format","formatNumber","formatPercent","AssetsRow","walletBalance","walletBalance$","accountBalance","accountBalance$","delegatedBalance","delegatedBalance$","unlockDate","final","onOpen","useDisclosure","minutes","hours","isRunning","useTimer","expiryTimestamp","autoStart","Tr","borderBottomWidth","Td","Fade","flexDirection","NavLink","generatePath","location","WithdrawModal","AssetTableHeader","Thead","Th","textTransform","InfoIcon","AssetsTable","assets","TableContainer","maxW","borderCollapse","borderSpacing","Heading","AssetsEmpty","Table","Tbody","borderTop","borderTopColor","AssetRowLoading","asset","balance","pl","SynthSkeleton","SynthCircle","SkeletonCircle","mb","disabled","calculateAssets","accountCollaterals","associatedUserBalances","collateralPrices","USDCAddress","AssetsList","isAccountCollateralsLoading","userTokenBalances","tokenBalancesIsLoading","isCollateralPricesLoading","isCollateralTypesLoading","accountCollateralUnlockDate","isAccountCollateralDateLoading","lastInteraction","accountTimeoutWithdraw","getAccountLastInteraction","getConfigUint","collateralUnlock","useAccountCollateralUnlockDate","combinedCollateral","cur","prev","CollateralAlert","tokenBalance","borderLeftColor","AlertIcon","textDecor","BorderBox","etherscanLink","chain","isTx","RewardsModal","setIsOpen","minWidth","boxShadow","CloseIcon","CheckIcon","CircularProgress","isIndeterminate","truncateAddress","first","last","RewardsRow","frequency","claimableAmount","lifetimeClaimed","hasClaimed","readOnly","total","collateralAddress","distributorAddress","claimRewards","claimedAmount","useClaimRewards","frequencyString","seconds","secondsInHour","secondsInWeek","secondsInMonth","months","weeks","days","convertSecondsToDisplayString","link","backgroundImage","RewardsLoading","borderBottom","pr","Rewards","rewards","empty","letterSpacing","duration","projectedAmount","rate","StatBox","title","flex","isLoaded","PositionCollateralSchema","optional","DebtSchema","loadPosition","getPositionCollateral","getPositionDebt","decodedCollateral","decodedDebt","useLiquidityPosition","collateralPriceUpdates","UsdProxy","priceUpdateTxHash","React","pool","priceCalls","priceDecoder","positionCalls","positionDecoder","accountCollateralCalls","accountCollateralDecoder","signedData","endOfPrice","startOfPosition","endOfPosition","startOfAccountCollateral","collateralPrice","decodedPosition","accountCollateral","usdCollateral","collateralAmount","collateralValue","calculateCRatio","keyBy","useLiquidityPositions","pools","collateralPriceUpdatesIsLoading","query","collateralPriceUpdatesLength","positionCallsAndData","poolName","singlePositionDecoder","pricesByAddress","cRatio","useApr","response","combinedApr","aprCombined","StatsList","apr","aprIsLoading","positions","isLiquidityPositionLoading","calculateDebt","totalAssets","assigned","calculateTotalAssetsAvailable","totalDelegated","calculateTotalAssetsDelegated","flexWrap","PositionRow","liquidityPosition","borrow","useGetBorrow","method","headers","variables","parsedCRatio","parseFloat","utils","position","net_issuance","PositionsRowLoading","rows","row","PositionsTable","PositionTableHeader","TableDivider","PositionsEmpty","PositionsNotConnected","PositionsList","positionsByKey","positionsIds","calculatePositions","parsedPositions","Balance","useWithdraw","getAddress","withdraw","collateralPriceCallsPromise","collateralPriceCalls","useWithdrawBaseAndromeda","sUSDCCollateral","snxUSDCollateral","amountToWithdraw","SpotProxy","sUSDCAmount","snxUSDAmount","sub","withdraw_sUSDC","withdraw_snxUSD","snxUSDApproval","buy_sUSDC","buy","unwrapTxnPromised","unwrap","withdraw_sUSDC_Txn","withdraw_snxUSD_Txn","snxUSDCApproval_Txn","buy_sUSDC_Txn","unwrapTxn","setAmount","selectedCollateralType","setSelectedCollateralType","queryClient","activeCollateral","withdrawMain","withdrawAndromeda","isLoadingAndromeda","clear","collateralTypesHydated","collateralTypeDisplayName","isCentered","Divider","placeholder","document","getElementById","VaultCollateralSchema","VaultDebtSchema","useVaultsData","CoreProxyContract","collateralCallsP","getVaultCollateral","debtCallsP","getVaultDebt","collateralPriceUpdateCallsP","multicallResult","collateralResult","debtResult","debtBytes","CollateralSectionUi","vaultsData","collateralPriceByAddress","isAprLoading","totalCollateral","totalDebt","zeroValues","calculateVaultTotals","vaultCollateral","flexBasis","CollateralSection","aprData","GraphBigIntSchema","GraphBigDecimalSchema","calculateMarketPnl","netIssuance","reportedDebt","MarketSnapshotByWeekSchema","usd_deposited","usd_withdrawn","reported_debt","updated_at","updates_in_period","market","pnl","MarketSchema","market_snapshots_by_week","MarketConfigurationSchema","weight","max_debt_share_value","RewardDistributorSchema","total_distributed","rewards_distributions","created_at","null","total_weight","configurations","registered_distributors","PoolDataResultSchema","PoolsDataDocument","usePoolData","poolData","errors","message","getPoolData","parseInt","MarketNamesSchema","marketInterface","StyledTh","paddingBottom","paddingTop","paddingLeft","paddingRight","StyledTd","isLastItem","borderBottomColor","LoadingRow","MarketSectionUi","marketNamesById","poolDataFetched","colSpan","MarketSection","isFetched","marketIdsAndAddresses","marketId","MultiCall3","markets","select","marketNames","marketName","useMarketNamesById","PoolHeader","NUMBER_REGEX","cleanupNumber","float","InputProps","dataTestId","inputValue","setInputValue","onInputChange","test","nextValue","_err","ref","useRef","current","setCustomValidity","autoFocus","_placeholder","validatePosition","targetCRatio","newDebt","newCollateralAmount","newCollateralValue","newCRatio","maybeMaxDebt","maxDebt","isValid","hasChanges","BorrowUi","flexGrow","isRequired","Borrow","PercentBadges","onBadgePress","activeBadge","DepositUi","ethBalance","snxBalance","setActiveBadge","combinedTokenBalance","transferable","maxAmount","badgeNum","Deposit","transferrableSnx","snxCollateral","snxAddress","transferableSynthetix","useTransferableSynthetix","RepayModal","lazy","safeImport","BorrowModal","DepositModal","UndelegateModal","ManageActionSchema","enum","ActionButton","activeAction","ManageActionUi","setActiveAction","manageAction","ArrowDownIcon","ArrowUpIcon","direction","Repay","Undelegate","ManageAction","txnModalOpen","setTxnModalOpen","parsedActionParam","safeParse","parsedAction","isFormValid","preventDefault","reportValidity","URLSearchParams","replace","Suspense","fallback","currentCollateral","ChangeStat","formatFn","newValue","withColor","ArrowForwardIcon","ManageStatsUi","newCratio","ManageStats","RepayUi","currentDebt","snxUSDBalance","totalUsdBalance","abs","neg","debtExists","flooredBalance","RepayAllDebt","sufficientBalance","execRepay","settleRepay","approvalLoading","submit","maxDebtShareValue","isLocked","PoolConfigurationSchema","isAnyMarketLocked","isLockedSchema","UndelegateUi","minDelegation","isLoadingRequiredData","onMaxClick","leftoverCollateral","isValidLeftover","Collapse","animateOpacity","status","AlertTitle","AlertDescription","poolConfiguration","getPoolConfiguration","maxDebtShareValueD18","weightD18","m","isMarketCapacityLocked","usePoolConfiguration","minCollateralRequired","maxWithdrawable","maxUndelegate","Header","Container","RouterLink","textDecoration","_activeLink","DefaultLayout","minHeight","Outlet","AccountBanner","createAccount","isCreateAccountLoading","Home","Helmet","content","HomeLink","ArrowBackIcon","importRewardDistributor","RewardsResponseSchema","instanceof","erc20Abi","useRewards","distributors","ifaceRD","ifaceERC20","distributorReturnData","historicalData","distributor","distributorResult","rewardsClaimeds","distribution_duration","expiry","getTime","ercReturnData","rewardRate","balances","sortedBalances","warn","WithdrawIncrease","ManageUi","minW","Manage","isCollateralLoading","isPoolGraphDataLoading","isRewardsLoading","rewardsData","Pool","NotFoundPage","t","useTranslation","Head","BasePoolCard","vaultDebt","vaultTVL","compactInteger","BaseInfoCard","minH","rel","Pools","isPoolsLoading","isVaultsLoading","hydratedCollateralTypes","permissionsList","useManagePermissions","existing","selected","multicall","grants","revokes","getPermissionDiff","permission","grantCalls","revokeCalls","aggregate3","Address","ExternalLinkIcon","PermissionRow","currentPermissions","isOwner","isEdit","setIsEdit","permissions","setPermissions","isSuccess","selectPermission","findIndex","EditIcon","DeleteIcon","useAccountPermissions","getAccountPermissions","user","useAccountOwner","ownerOf","AddPermissionModal","setAddress","selectedPermission","setSelectedPermissions","permissionData","accountOwner","isAddressValid","ModalCloseButton","trim","isInvalid","ModalFooter","TransferOwnershipModal","setTo","transferFrom","useTransferAccountId","PermissionTableLoading","PermissionTable","refetchAccounts","isPermissionOpen","onPermissionClose","onPermissionOpen","isTransferOpen","onTransferClose","onTransferOpen","loadingOwner","refetchAccountOwner","DelegationIcon","Permissions","Settings","Router","Routes","Route","element","path","supportedDeployments","chains","onboard","init","wallets","coinbaseModule","injectedModule","displayUnavailable","ProviderLabel","MetaMask","Trust","trezorModule","appUrl","email","ledgerModule","projectId","walletConnectVersion","walletConnectModule","version","dappUrl","accountCenter","desktop","mobile","notify","QueryClient","defaultOptions","queries","refetchOnWindowFocus","throwOnError","mutations","ColorMode","colorMode","toggleColorMode","useColorMode","App","QueryClientProvider","Web3OnboardProvider","web3Onboard","ChakraProvider","HashRouter","ReactQueryDevtools","querySelector","bootstrap","ReactDOM","render","safeLazy","module","exports","importer"],"sourceRoot":""}