{"version":3,"file":"chunk/app.47636c3d.js","mappings":"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","sources":["webpack://@snx-v3/liquidity/../lib/constants/constants.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importPythERC7412Wrapper.ts","webpack://@snx-v3/liquidity/../lib/icons/Logo.tsx","webpack://@snx-v3/liquidity/../lib/icons/EthereumIcon.tsx","webpack://@snx-v3/liquidity/../lib/icons/FailedIcon.tsx","webpack://@snx-v3/liquidity/../lib/icons/OptimismIcon.tsx","webpack://@snx-v3/liquidity/../lib/icons/WalletIcon.tsx","webpack://@snx-v3/liquidity/../lib/icons/LogoIcon.tsx","webpack://@snx-v3/liquidity/../lib/icons/BaseIcon.tsx","webpack://@snx-v3/liquidity/../lib/icons/ArbitrumIcon.tsx","webpack://@snx-v3/liquidity/../lib/icons/DiscordIcon.tsx","webpack://@snx-v3/liquidity/../lib/icons/XIcon.tsx","webpack://@snx-v3/liquidity/../lib/icons/GithubIcon.tsx","webpack://@snx-v3/liquidity/../lib/icons/SNXChainIcon.tsx","webpack://@snx-v3/liquidity/../lib/useBlockchain/magic.ts","webpack://@snx-v3/liquidity/../lib/useBlockchain/useBlockchain.tsx","webpack://@snx-v3/liquidity/../lib/theme/theme.ts","webpack://@snx-v3/liquidity/../lib/theme/fonts.tsx","webpack://@snx-v3/liquidity/../lib/TermsModal/TermsModal.tsx","webpack://@snx-v3/liquidity/./src/onboard.ts","webpack://@snx-v3/liquidity/../lib/useParams/useParams.ts","webpack://@snx-v3/liquidity/../lib/format/format.ts","webpack://@snx-v3/liquidity/../lib/format/currency.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importAccountProxy.ts","webpack://@snx-v3/liquidity/../lib/contracts/useAccountProxy/useAccountProxy.ts","webpack://@snx-v3/liquidity/../lib/useTransferAccountId/useTransferAccountId.ts","webpack://@snx-v3/liquidity/../lib/Permissions/TransferOwnershipModal.tsx","webpack://@snx-v3/liquidity/../lib/etherscanLink/etherscanLink.ts","webpack://@snx-v3/liquidity/../lib/Address/Address.tsx","webpack://@snx-v3/liquidity/../lib/contracts/importers/importCoreProxy.ts","webpack://@snx-v3/liquidity/../lib/contracts/useCoreProxy/useCoreProxy.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importTrustedMulticallForwarder.ts","webpack://@snx-v3/liquidity/../lib/contracts/useTrustedMulticallForwarder/useTrustedMulticallForwarder.ts","webpack://@snx-v3/liquidity/../lib/useManagePermissions/useManagePermissions.ts","webpack://@snx-v3/liquidity/../lib/Permissions/AccountPermissions.ts","webpack://@snx-v3/liquidity/../lib/tsHelpers/contractsHash.ts","webpack://@snx-v3/liquidity/../lib/tsHelpers/stringToHash.ts","webpack://@snx-v3/liquidity/../lib/useAccountInfo/useAccountPermissions.ts","webpack://@snx-v3/liquidity/../lib/Permissions/PermissionsInfo.tsx","webpack://@snx-v3/liquidity/../lib/Permissions/PermissionModal.tsx","webpack://@snx-v3/liquidity/../lib/Permissions/PermissionRow.tsx","webpack://@snx-v3/liquidity/../lib/Permissions/PermissionTableLoading.tsx","webpack://@snx-v3/liquidity/../lib/Permissions/PermissionTable.tsx","webpack://@snx-v3/liquidity/../lib/Permissions/DelegationIcon.tsx","webpack://@snx-v3/liquidity/../lib/useAccounts/useAccounts.ts","webpack://@snx-v3/liquidity/../lib/Permissions/Permissions.tsx","webpack://@snx-v3/liquidity/./src/AccountSettingsPage.tsx","webpack://@snx-v3/liquidity/../lib/Tooltip/Tooltip.tsx","webpack://@snx-v3/liquidity/../lib/ContractError/ContractError.tsx","webpack://@snx-v3/liquidity/../lib/txnReducer/txnReducer.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importPythFeeds.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importPythVerifier.ts","webpack://@snx-v3/liquidity/../lib/usePoolsList/usePoolsList.ts","webpack://@snx-v3/liquidity/../lib/useCollateralPriceUpdates/useCollateralPriceUpdates.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importExtras.ts","webpack://@snx-v3/liquidity/../lib/parseContractError/parseContractError.ts","webpack://@snx-v3/liquidity/../lib/contracts/useAllErrors/useAllErrors.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importAllErrors.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importPositionManager.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importClosePosition.ts","webpack://@snx-v3/liquidity/../lib/contracts/useClosePosition/useClosePosition.ts","webpack://@snx-v3/liquidity/../lib/contracts/usePositionManager/usePositionManager.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importPositionManagerAndromedaStataUSDC.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importPositionManagerAndromedaUSDC.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importStaticAaveUSDC.ts","webpack://@snx-v3/liquidity/../lib/contracts/useStaticAaveUSDC/useStaticAaveUSDC.ts","webpack://@snx-v3/liquidity/../lib/useContractErrorParser/useContractErrorParser.ts","webpack://@snx-v3/liquidity/../lib/contracts/usePositionManagerAndromedaStataUSDC/usePositionManagerAndromedaStataUSDC.ts","webpack://@snx-v3/liquidity/../lib/contracts/usePositionManagerAndromedaUSDC/usePositionManagerAndromedaUSDC.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importSNX.ts","webpack://@snx-v3/liquidity/../lib/contracts/useSNX/useSNX.ts","webpack://@snx-v3/liquidity/../lib/contracts/useSystemToken/useSystemToken.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importSystemToken.ts","webpack://@snx-v3/liquidity/../lib/useCollateralTypes/useCollateralTypes.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importCollateralTokens.ts","webpack://@snx-v3/liquidity/../lib/contracts/useRewardsDistributors/useRewardsDistributors.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importRewardsDistributors.ts","webpack://@snx-v3/liquidity/../lib/contracts/useSynthTokens/useSynthTokens.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importSynthTokens.ts","webpack://@snx-v3/liquidity/../lib/useRewards/useRewards.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importSpotMarketProxy.ts","webpack://@snx-v3/liquidity/../lib/contracts/useSpotMarketProxy/useSpotMarketProxy.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importUSDProxy.ts","webpack://@snx-v3/liquidity/../lib/tsHelpers/notNill.ts","webpack://@snx-v3/liquidity/../lib/withERC7412/withERC7412.ts","webpack://@snx-v3/liquidity/../lib/useClaimAllRewards/useClaimAllRewards.tsx","webpack://@snx-v3/liquidity/../lib/Amount/Amount.tsx","webpack://@snx-v3/liquidity/../lib/useAccountCollateralUnlockDate/useAccountCollateralUnlockDate.ts","webpack://@snx-v3/liquidity/../lib/WithdrawIncrease/WithdrawIncrease.tsx","webpack://@snx-v3/liquidity/../lib/Rewards/AllRewardsModal.tsx","webpack://@snx-v3/liquidity/../lib/Rewards/RewardsLoading.tsx","webpack://@snx-v3/liquidity/../lib/TokenIcon/TokenIcon.tsx","webpack://@snx-v3/liquidity/../lib/Rewards/RewardsRow.tsx","webpack://@snx-v3/liquidity/../lib/Rewards/Rewards.tsx","webpack://@snx-v3/liquidity/../lib/Synths/StataUSDC.tsx","webpack://@snx-v3/liquidity/../lib/Synths/SynthRow.tsx","webpack://@snx-v3/liquidity/../lib/useSynthBalances/useSynthBalances.ts","webpack://@snx-v3/liquidity/../lib/useUnwrapAllSynths/useUnwrapAllSynths.tsx","webpack://@snx-v3/liquidity/../lib/Synths/SynthsLoading.tsx","webpack://@snx-v3/liquidity/../lib/Synths/SynthsUnwrapModal.tsx","webpack://@snx-v3/liquidity/../lib/Synths/Synths.tsx","webpack://@snx-v3/liquidity/../lib/contracts/useLegacyMarket/useLegacyMarket.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importLegacyMarket.ts","webpack://@snx-v3/liquidity/../lib/useTokenBalance/useTokenBalance.ts","webpack://@snx-v3/liquidity/../lib/Synths/SUSD.tsx","webpack://@snx-v3/liquidity/../lib/contracts/useUSDProxy/useUSDProxy.ts","webpack://@snx-v3/liquidity/./src/useMigrationData.tsx","webpack://@snx-v3/liquidity/./src/DashboardPage.tsx","webpack://@snx-v3/liquidity/./src/Footer.tsx","webpack://@snx-v3/liquidity/./src/NetworkController.tsx","webpack://@snx-v3/liquidity/./src/Header.tsx","webpack://@snx-v3/liquidity/../lib/BorderBox/BorderBox.tsx","webpack://@snx-v3/liquidity/../lib/ManagePositionContext/ManagePositionContext.tsx","webpack://@snx-v3/liquidity/../lib/NumberInput/NumberInput.tsx","webpack://@snx-v3/liquidity/../lib/calculations/calculations.ts","webpack://@snx-v3/liquidity/../lib/useLiquidityPosition/useLiquidityPosition.ts","webpack://@snx-v3/liquidity/../lib/useTokenPrice/useTokenPrice.ts","webpack://@snx-v3/liquidity/../lib/Multistep/statusColor.ts","webpack://@snx-v3/liquidity/../lib/Multistep/StepIcon.tsx","webpack://@snx-v3/liquidity/../lib/Multistep/Step.tsx","webpack://@snx-v3/liquidity/../lib/Multistep/Multistep.tsx","webpack://@snx-v3/liquidity/../lib/Manage/LiquidityPositionUpdated.tsx","webpack://@snx-v3/liquidity/../lib/ChangeStat/ChangeStat.tsx","webpack://@snx-v3/liquidity/../lib/DebtAmount/DebtAmount.tsx","webpack://@snx-v3/liquidity/../lib/Manage/DebtStats.tsx","webpack://@snx-v3/liquidity/../lib/zod/zod.ts","webpack://@snx-v3/liquidity/../lib/useVaultsData/useVaultsData.ts","webpack://@snx-v3/liquidity/../lib/Manage/PositionTitle.tsx","webpack://@snx-v3/liquidity/../lib/formatters/number.ts","webpack://@snx-v3/liquidity/../lib/getStatsUrl/getStatsUrl.ts","webpack://@snx-v3/liquidity/../lib/Manage/StataDepositBanner.tsx","webpack://@snx-v3/liquidity/../lib/CRatioBar/CRatioBar.utils.ts","webpack://@snx-v3/liquidity/../lib/CRatioBar/CRatioAmount.tsx","webpack://@snx-v3/liquidity/../lib/CRatioBar/CRatioBadge.tsx","webpack://@snx-v3/liquidity/../lib/CRatioBar/LineWithText.tsx","webpack://@snx-v3/liquidity/../lib/CRatioBar/CRatioBar.tsx","webpack://@snx-v3/liquidity/../lib/CRatioBar/CRatioChangeStat.tsx","webpack://@snx-v3/liquidity/../lib/useIsAndromedaStataUSDC/useIsAndromedaStataUSDC.ts","webpack://@snx-v3/liquidity/../lib/validatePosition/validatePosition.ts","webpack://@snx-v3/liquidity/../lib/Manage/CollateralStats.tsx","webpack://@snx-v3/liquidity/../lib/Manage/PnlStats.tsx","webpack://@snx-v3/liquidity/../lib/Manage/ManageStats.tsx","webpack://@snx-v3/liquidity/../lib/useStaticAaveUSDCRate/useStaticAaveUSDCRate.ts","webpack://@snx-v3/liquidity/../lib/ClosePosition/ClosePositionOneStep.tsx","webpack://@snx-v3/liquidity/../lib/contracts/usePythVerifier/usePythVerifier.ts","webpack://@snx-v3/liquidity/../lib/contracts/usePythFeeds/usePythFeeds.ts","webpack://@snx-v3/liquidity/../lib/useAllowance/useAllowance.ts","webpack://@snx-v3/liquidity/../lib/useApprove/useApprove.ts","webpack://@snx-v3/liquidity/../lib/useBorrow/useBorrow.tsx","webpack://@snx-v3/liquidity/../lib/contracts/importers/importDebtRepayer.ts","webpack://@snx-v3/liquidity/../lib/contracts/useDebtRepayer/useDebtRepayer.ts","webpack://@snx-v3/liquidity/../lib/useRepay/useRepay.tsx","webpack://@snx-v3/liquidity/../lib/useUndelegate/useUndelegate.tsx","webpack://@snx-v3/liquidity/../lib/isBaseAndromeda/isBaseAndromeda.ts","webpack://@snx-v3/liquidity/../lib/useUndelegateBaseAndromeda/useUndelegateBaseAndromeda.tsx","webpack://@snx-v3/liquidity/../lib/contracts/importers/importUSDC.ts","webpack://@snx-v3/liquidity/../lib/contracts/useUSDC/useUSDC.ts","webpack://@snx-v3/liquidity/../lib/ClosePosition/ClosePositionTransactions.tsx","webpack://@snx-v3/liquidity/../lib/ClosePosition/ClosePosition.tsx","webpack://@snx-v3/liquidity/../lib/CollateralAlert/UnsupportedCollateralAlert.tsx","webpack://@snx-v3/liquidity/../lib/ManageAction/actions.tsx","webpack://@snx-v3/liquidity/../lib/Borrow/BorrowModal.tsx","webpack://@snx-v3/liquidity/../lib/Borrow/Borrow.tsx","webpack://@snx-v3/liquidity/../lib/Claim/Claim.tsx","webpack://@snx-v3/liquidity/../lib/ClaimModal/ClaimSuccessBanner.tsx","webpack://@snx-v3/liquidity/../lib/ClaimModal/ClaimModal.tsx","webpack://@snx-v3/liquidity/../lib/ClaimModal/index.ts","webpack://@snx-v3/liquidity/../lib/TransactionSummary/TransactionSummary.tsx","webpack://@snx-v3/liquidity/../lib/useEthBalance/useEthBalance.ts","webpack://@snx-v3/liquidity/../lib/Deposit/Deposit.tsx","webpack://@snx-v3/liquidity/../lib/useTransferableSynthetix/useTransferableSynthetix.ts","webpack://@snx-v3/liquidity/../lib/contracts/usePositionManagerForCollateral/usePositionManagerForCollateral.ts","webpack://@snx-v3/liquidity/../lib/DepositModalAndromeda/DepositModalAndromeda.tsx","webpack://@snx-v3/liquidity/../lib/Repay/RepayModal.tsx","webpack://@snx-v3/liquidity/../lib/Repay/Repay.tsx","webpack://@snx-v3/liquidity/../lib/useClearDebt/useClearDebt.tsx","webpack://@snx-v3/liquidity/../lib/Repay/RepayAndromedaDebt.tsx","webpack://@snx-v3/liquidity/../lib/useRepayBaseAndromeda/useRepayBaseAndromeda.tsx","webpack://@snx-v3/liquidity/../lib/useGetUSDTokens/useGetUSDTokens.ts","webpack://@snx-v3/liquidity/../lib/RepayModal/RepayMachine.ts","webpack://@snx-v3/liquidity/../lib/RepayModal/RepayModal.tsx","webpack://@snx-v3/liquidity/../lib/usePoolConfiguration/usePoolConfiguration.ts","webpack://@snx-v3/liquidity/../lib/useWithdrawTimer/useWithdrawTimer.ts","webpack://@snx-v3/liquidity/../lib/Undelegate/UndelegateModal.tsx","webpack://@snx-v3/liquidity/../lib/Undelegate/Undelegate.tsx","webpack://@snx-v3/liquidity/../lib/UndelegateModal/UndelegateMachine.ts","webpack://@snx-v3/liquidity/../lib/UndelegateModal/UndelegateModal.tsx","webpack://@snx-v3/liquidity/../lib/UndelegateModal/index.ts","webpack://@snx-v3/liquidity/../lib/useWithdraw/useWithdraw.tsx","webpack://@snx-v3/liquidity/../lib/Withdraw/WithdrawModal.tsx","webpack://@snx-v3/liquidity/../lib/Withdraw/Withdraw.tsx","webpack://@snx-v3/liquidity/../lib/Withdraw/WithdrawModalAndromeda.tsx","webpack://@snx-v3/liquidity/../lib/Withdraw/WithdrawAndromeda.tsx","webpack://@snx-v3/liquidity/../lib/ManageAction/ManageAction.tsx","webpack://@snx-v3/liquidity/../lib/Positions/LockedCollateral.tsx","webpack://@snx-v3/liquidity/../lib/useLocks/useLocks.ts","webpack://@snx-v3/liquidity/../lib/useApr/useApr.ts","webpack://@snx-v3/liquidity/../lib/useLiquidityPositions/useLiquidityPositions.ts","webpack://@snx-v3/liquidity/../lib/useApr/useStataUSDCApr.ts","webpack://@snx-v3/liquidity/./src/ManagePage.tsx","webpack://@snx-v3/liquidity/./src/Router.tsx","webpack://@snx-v3/liquidity/./src/theme.ts","webpack://@snx-v3/liquidity/./src/App.tsx","webpack://@snx-v3/liquidity/./src/index.tsx","webpack://@snx-v3/liquidity/../../tools/devtools-formatters/index.js","webpack://@snx-v3/liquidity/../../tools/magic-wallet/index.js"],"sourcesContent":["import Wei from '@synthetixio/wei';\nimport { ethers } from 'ethers';\n\nexport const LOCAL_STORAGE_KEYS = {\n  SHOW_TESTNETS: 'SHOW_TESTNETS',\n};\nexport const ZEROWEI = new Wei(0);\n\nexport const D6 = ethers.utils.parseUnits('1', 6);\nexport const D18 = ethers.utils.parseUnits('1', 18);\nexport const D27 = ethers.utils.parseUnits('1', 27);\n\nexport const DEFAULT_QUERY_STALE_TIME = 300_000; // 5min\n\nexport const INFURA_KEY = process.env.INFURA_KEY || '8678fe160b1f4d45ad3f3f71502fc57b';\n\nexport const getSubgraphUrl = (networkName = 'optimism-mainnet') => {\n  switch (networkName) {\n    case 'mainnet':\n      return 'https://subgraph.satsuma-prod.com/ce5e03f52f3b/synthetix/synthetix-mainnet/api';\n    case 'sepolia':\n      return 'https://subgraph.satsuma-prod.com/ce5e03f52f3b/synthetix/synthetix-sepolia/api';\n    case 'optimism-mainnet':\n      return 'https://subgraph.satsuma-prod.com/ce5e03f52f3b/synthetix/synthetix-optimism-mainnet/api';\n    case 'arbitrum':\n      return `https://subgraph.satsuma-prod.com/ce5e03f52f3b/synthetix/synthetix-arbitrum-mainnet/api`;\n    case 'base-sepolia':\n      return 'https://subgraph.satsuma-prod.com/ce5e03f52f3b/synthetix/synthetix-base-sepolia-andromeda/api';\n    case 'base':\n      return 'https://subgraph.satsuma-prod.com/ce5e03f52f3b/synthetix/synthetix-base-mainnet-andromeda/api';\n    default:\n      return `https://subgraph.satsuma-prod.com/ce5e03f52f3b/synthetix/synthetix-${networkName}/api`;\n  }\n};\n\nexport const getAprUrl = (networkId = 8453) => {\n  switch (networkId) {\n    case 1:\n      return 'https://api.synthetix.io/v3/mainnet/sc-pool-apy-all';\n    case 8453:\n      return 'https://api.synthetix.io/v3/base/sc-pool-apy-all';\n    case 42161:\n      return 'https://api.synthetix.io/v3/arbitrum/sc-pool-apy-all';\n    default:\n      return `https://api.synthetix.io/v3/base/sc-pool-apy-all`;\n  }\n};\n\nexport const getClaimedRewardsURL = (networkId = 8453) => {\n  switch (networkId) {\n    case 1:\n      return 'https://api.synthetix.io/v3/mainnet/rewards-claimed';\n    case 8453:\n      return 'https://api.synthetix.io/v3/base/rewards-claimed';\n    default:\n      return '';\n  }\n};\n\nexport const getIssuedDebtUrl = (networkId = 8453) => {\n  switch (networkId) {\n    case 1:\n      return 'https://api.synthetix.io/v3/mainnet/issued-debt';\n    case 8453:\n      return 'https://api.synthetix.io/v3/base/issued-debt';\n    default:\n      return '';\n  }\n};\n\nexport const SESSION_STORAGE_KEYS = {\n  TERMS_CONDITIONS_ACCEPTED: 'TERMS_CONDITIONS_ACCEPTED',\n};\n\nexport const offchainMainnetEndpoint =\n  process.env.PYTH_MAINNET_ENDPOINT ||\n  'https://hermes-mainnet.rpc.extrnode.com/9b85d7db-f562-48e2-ab56-79c01f212582';\n\nexport const offchainTestnetEndpoint =\n  process.env.PYTH_TESTNET_ENDPOINT ||\n  'https://hermes-mainnet.rpc.extrnode.com/9b85d7db-f562-48e2-ab56-79c01f212582';\n\nexport const tokenOverrides: {\n  [key: `${number}-${string}`]: {\n    [key: string]:\n      | {\n          symbol: string;\n          displaySymbol: string;\n          name: string;\n        }\n      | undefined;\n  };\n} = {\n  '8453-andromeda': {\n    '0x4EA71A20e655794051D1eE8b6e4A3269B13ccaCc': {\n      symbol: 'stataUSDC',\n      displaySymbol: 'Static aUSDC',\n      name: 'Static aUSDC',\n    },\n  },\n  '1-main': {\n    '0x10A5F7D9D65bCc2734763444D4940a31b109275f': {\n      symbol: 'sUSD',\n      displaySymbol: 'V2 sUSD',\n      name: 'V2 sUSD',\n    },\n    '0xb2F30A7C980f052f02563fb518dcc39e6bf38175': {\n      symbol: 'sUSD',\n      displaySymbol: 'V3 sUSD',\n      name: 'V3 sUSD',\n    },\n  },\n};\n\n// We only have 1 pool and UI does not support more than one pool\n// Will need to refactor when we add new pools\nexport const POOL_ID = '1';\n","export async function importPythERC7412Wrapper(\n  chainId?: number,\n  preset?: string\n): Promise<{ address: string; abi: string[] }> {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '8453-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/8453-andromeda/PythERC7412Wrapper.readable.json'),\n      ]);\n      return { address: meta.contracts.PythERC7412Wrapper, abi };\n    }\n    case '84532-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/84532-andromeda/PythERC7412Wrapper.readable.json'),\n      ]);\n      return { address: meta.contracts.PythERC7412Wrapper, abi };\n    }\n    case '11155111-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/meta.json'),\n        import('@synthetixio/v3-contracts/11155111-main/PythERC7412Wrapper.readable.json'),\n      ]);\n      return { address: meta.contracts.PythERC7412Wrapper, abi };\n    }\n    case '42161-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/meta.json'),\n        import('@synthetixio/v3-contracts/42161-main/PythERC7412Wrapper.readable.json'),\n      ]);\n      return { address: meta.contracts.PythERC7412Wrapper, abi };\n    }\n    case '421614-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/meta.json'),\n        import('@synthetixio/v3-contracts/421614-main/PythERC7412Wrapper.readable.json'),\n      ]);\n      return { address: meta.contracts.PythERC7412Wrapper, abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for PythERC7412Wrapper`);\n    }\n  }\n}\n","import { Icon, IconProps } from '@chakra-ui/react';\n\ninterface LogoProps extends IconProps {\n  withText?: boolean;\n}\n\nexport const Logo = ({\n  color = '#00D1FF',\n  width = '126px',\n  height = '22px',\n  withText = true,\n}: LogoProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 126 22\" fill=\"none\" color={color}>\n      <path\n        d=\"M7.00677 4.80523C6.804 4.57155 6.55437 4.45443 6.25731 4.45443H0.182051C0.128089 4.45443 0.0839395 4.43722 0.0506907 4.40281C0.0168969 4.36895 0 4.33065 0 4.28957V0.164856C0 0.12378 0.0168969 0.0860357 0.0506907 0.0516214C0.0839395 0.0172071 0.128089 0 0.182051 0H6.60179C8.22171 0 9.61925 0.667193 10.7939 2.00047L12.3533 3.91823L9.31565 7.65107L7.00677 4.80523ZM18.2263 1.97993C19.4009 0.659977 20.805 0 22.4386 0H28.8381C28.8921 0 28.9324 0.0138767 28.9597 0.0410751C28.9864 0.0688286 29 0.109904 29 0.164856V4.28957C29 4.33065 28.9864 4.36895 28.9597 4.40281C28.9324 4.43722 28.8921 4.45443 28.8381 4.45443H22.7629C22.4658 4.45443 22.2162 4.57155 22.0134 4.80523L17.5379 10.291L22.0336 15.8178C22.2363 16.0382 22.4789 16.1481 22.7629 16.1481H28.8381C28.8921 16.1481 28.9324 16.1653 28.9597 16.1997C28.9864 16.2341 29 16.2791 29 16.3335V20.4582C29 20.4993 28.9864 20.5376 28.9597 20.5714C28.9324 20.6058 28.8921 20.623 28.8381 20.623H22.4386C20.805 20.623 19.4075 19.9564 18.2465 18.6226L14.5204 14.0444L10.7939 18.6226C9.61925 19.9564 8.21517 20.623 6.58162 20.623H0.182051C0.128089 20.623 0.0872099 20.6058 0.0605018 20.5714C0.0332488 20.537 0.0201673 20.4926 0.0201673 20.4371V16.3124C0.0201673 16.2713 0.0332488 16.2336 0.0605018 16.1991C0.0872099 16.1647 0.128089 16.1475 0.182051 16.1475H6.25731C6.54074 16.1475 6.79038 16.031 7.00677 15.7967L11.4011 10.3937L18.2263 1.97993Z\"\n        fill=\"#00D1FF\"\n      />\n      {withText && (\n        <g>\n          <path d=\"M42.9 3.86001V15.72H51.7V17.86H40.4V3.86001H42.9Z\" fill=\"white\" />\n          <path\n            d=\"M53.4645 7.02001H55.7845V17.86H53.4645V7.02001ZM53.4645 3.30001H55.7845V5.62001H53.4645V3.30001Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M61.0055 7.02001H68.5055V21.78H66.1855V16.38L64.4455 17.86H61.0055C59.4255 17.86 58.1655 16.54 58.1655 15.02V9.86002C58.1655 8.28002 59.4855 7.02001 61.0055 7.02001ZM61.6255 15.86H65.4855C65.8655 15.86 66.1855 15.56 66.1855 15.16V9.04002H61.6255C60.9855 9.04002 60.4655 9.54002 60.4655 10.18V14.7C60.4655 15.36 60.9855 15.86 61.6255 15.86Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M74.5408 15.86H78.3008C78.6808 15.86 79.0008 15.56 79.0008 15.16V7.02001H81.3208V17.86H79.0008V16.4L77.3208 17.86H73.9008C72.3808 17.86 71.0808 16.6 71.0808 15.02V7.02001H73.3808V14.7C73.3808 15.36 73.8808 15.86 74.5408 15.86Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M83.9333 7.02001H86.2533V17.86H83.9333V7.02001ZM83.9333 3.30001H86.2533V5.62001H83.9333V3.30001Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M96.6542 7.02001V3.14001H98.9742V17.86H96.6542V16.38L94.9142 17.86H91.4742C89.8942 17.86 88.6342 16.54 88.6342 15.02V9.86002C88.6342 8.28002 89.9542 7.02001 91.4742 7.02001H96.6542ZM92.0942 15.86H95.9542C96.3342 15.86 96.6542 15.56 96.6542 15.16V9.04002H92.0942C91.4542 9.04002 90.9342 9.54002 90.9342 10.18V14.7C90.9342 15.36 91.4542 15.86 92.0942 15.86Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M101.59 7.02001H103.91V17.86H101.59V7.02001ZM101.59 3.30001H103.91V5.62001H101.59V3.30001Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M113.09 15.86V17.86H110.31C108.77 17.86 107.51 16.66 107.51 15.08V9.04002H105.63V7.02001H107.51V4.64002H109.83V7.02001H113.11V9.04002H109.83V14.74C109.83 15.4 110.27 15.86 110.93 15.86H113.09Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M116.587 21.78L118.747 17.22L113.947 7.02001H116.467L119.947 14.74L123.267 7.02001H125.747L119.067 21.78H116.587Z\"\n            fill=\"white\"\n          />\n        </g>\n      )}\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const EthereumIcon = ({\n  width = '24px',\n  height = '24px',\n  fill = `#627EEA`,\n  ...props\n}: IconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 30 30\" fill=\"none\" {...props}>\n      <path\n        d=\"M15 30c8.284 0 15-6.716 15-15 0-8.284-6.716-15-15-15C6.716 0 0 6.716 0 15c0 8.284 6.716 15 15 15Z\"\n        fill={fill as string}\n      />\n      <path d=\"M15.467 3.75v8.316l7.028 3.14L15.467 3.75Z\" fill=\"#fff\" fillOpacity=\".602\" />\n      <path d=\"m15.467 3.75-7.03 11.456 7.03-3.14V3.75Z\" fill=\"#fff\" />\n      <path d=\"M15.467 20.595v5.65l7.033-9.73-7.033 4.08Z\" fill=\"#fff\" fillOpacity=\".602\" />\n      <path d=\"M15.467 26.245v-5.651l-7.03-4.08 7.03 9.731Z\" fill=\"#fff\" />\n      <path d=\"m15.467 19.287 7.028-4.08-7.028-3.14v7.22Z\" fill=\"#fff\" fillOpacity=\".2\" />\n      <path d=\"m8.438 15.206 7.029 4.081v-7.22l-7.03 3.14Z\" fill=\"#fff\" fillOpacity=\".602\" />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const FailedIcon = ({ w = '94px', h = '94px' }: IconProps) => {\n  return (\n    <Icon w={w} h={h} viewBox=\"0 0 94 94\" fill=\"none\">\n      <g filter=\"url(#filter0_d_1044_28165)\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M47 76.3333C63.2004 76.3333 76.3333 63.2004 76.3333 47C76.3333 30.7996 63.2004 17.6667 47 17.6667C30.7996 17.6667 17.6667 30.7996 17.6667 47C17.6667 63.2004 30.7996 76.3333 47 76.3333ZM47 79C64.6731 79 79 64.6731 79 47C79 29.3269 64.6731 15 47 15C29.3269 15 15 29.3269 15 47C15 64.6731 29.3269 79 47 79Z\"\n          fill=\"#FF4A60\"\n        />\n      </g>\n      <g filter=\"url(#filter1_d_1044_28165)\">\n        <path\n          d=\"M56.3334 39.5466L54.4534 37.6666L47.0001 45.12L39.5467 37.6666L37.6667 39.5466L45.1201 47L37.6667 54.4533L39.5467 56.3333L47.0001 48.88L54.4534 56.3333L56.3334 54.4533L48.8801 47L56.3334 39.5466Z\"\n          fill=\"#FF4A60\"\n        />\n      </g>\n      <defs>\n        <filter\n          id=\"filter0_d_1044_28165\"\n          x=\"0\"\n          y=\"0\"\n          width=\"94\"\n          height=\"94\"\n          filterUnits=\"userSpaceOnUse\"\n          colorInterpolationFilters=\"sRGB\"\n        >\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\n          <feColorMatrix\n            in=\"SourceAlpha\"\n            type=\"matrix\"\n            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n            result=\"hardAlpha\"\n          />\n          <feOffset />\n          <feGaussianBlur stdDeviation=\"7.5\" />\n          <feColorMatrix\n            type=\"matrix\"\n            values=\"0 0 0 0 1 0 0 0 0 0.116667 0 0 0 0 0.222667 0 0 0 0.6 0\"\n          />\n          <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow_1044_28165\" />\n          <feBlend\n            mode=\"normal\"\n            in=\"SourceGraphic\"\n            in2=\"effect1_dropShadow_1044_28165\"\n            result=\"shape\"\n          />\n        </filter>\n        <filter\n          id=\"filter1_d_1044_28165\"\n          x=\"22.6667\"\n          y=\"22.6666\"\n          width=\"48.6667\"\n          height=\"48.6666\"\n          filterUnits=\"userSpaceOnUse\"\n          colorInterpolationFilters=\"sRGB\"\n        >\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\n          <feColorMatrix\n            in=\"SourceAlpha\"\n            type=\"matrix\"\n            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n            result=\"hardAlpha\"\n          />\n          <feOffset />\n          <feGaussianBlur stdDeviation=\"7.5\" />\n          <feColorMatrix\n            type=\"matrix\"\n            values=\"0 0 0 0 1 0 0 0 0 0.116667 0 0 0 0 0.222667 0 0 0 0.6 0\"\n          />\n          <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow_1044_28165\" />\n          <feBlend\n            mode=\"normal\"\n            in=\"SourceGraphic\"\n            in2=\"effect1_dropShadow_1044_28165\"\n            result=\"shape\"\n          />\n        </filter>\n      </defs>\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const OptimismIcon = ({\n  width = '24px',\n  height = '24px',\n  color = 'white',\n  fill = '#FF0420',\n  ...props\n}: IconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 34 34\" {...props}>\n      <path\n        d=\"M17 34C26.3888 34 34 26.3888 34 17C34 7.61116 26.3888 0 17 0C7.61116 0 0 7.61116 0 17C0 26.3888 7.61116 34 17 34Z\"\n        fill={fill as string}\n      />\n      <path\n        d=\"M12.3295 21.76C11.3042 21.76 10.4641 21.5131 9.80918 21.0195C9.16298 20.5171 8.83984 19.8031 8.83984 18.8775C8.83984 18.6836 8.8614 18.4456 8.90444 18.1635C9.01651 17.5289 9.1759 16.7664 9.38269 15.8761C9.96858 13.452 11.4808 12.24 13.9193 12.24C14.5828 12.24 15.1773 12.3546 15.7029 12.5838C16.2285 12.8041 16.6421 13.1391 16.9437 13.5886C17.2453 14.0294 17.3961 14.5583 17.3961 15.1753C17.3961 15.3604 17.3745 15.594 17.3314 15.8761C17.2022 16.6606 17.0471 17.4231 16.8662 18.1635C16.5646 19.3711 16.0433 20.2747 15.3022 20.8741C14.5612 21.4647 13.5703 21.76 12.3295 21.76ZM12.5105 19.856C12.993 19.856 13.4023 19.7105 13.7384 19.4196C14.083 19.1288 14.3286 18.6836 14.4751 18.0842C14.6732 17.2556 14.824 16.5328 14.9274 15.9158C14.9619 15.7306 14.9791 15.5411 14.9791 15.3472C14.9791 14.5451 14.5699 14.144 13.7513 14.144C13.2688 14.144 12.8552 14.2894 12.5105 14.5803C12.1744 14.8712 11.9332 15.3164 11.7867 15.9158C11.6316 16.5064 11.4765 17.2291 11.3214 18.0842C11.287 18.2605 11.2697 18.4456 11.2697 18.6395C11.2697 19.4505 11.6833 19.856 12.5105 19.856Z\"\n        fill={color as string}\n      />\n      <path\n        d=\"M17.9895 21.6278C17.8947 21.6278 17.8215 21.597 17.7698 21.5352C17.7267 21.4647 17.7138 21.3854 17.731 21.2972L19.5146 12.7028C19.5318 12.6059 19.5792 12.5265 19.6568 12.4648C19.7344 12.4031 19.8162 12.3722 19.9024 12.3722H23.3404C24.2968 12.3722 25.0636 12.575 25.641 12.9805C26.2269 13.386 26.5199 13.9721 26.5199 14.739C26.5199 14.9594 26.494 15.1886 26.4423 15.4266C26.2269 16.4403 25.7918 17.1895 25.1369 17.6744C24.4907 18.1592 23.6031 18.4016 22.4744 18.4016H20.7295L20.135 21.2972C20.1178 21.3942 20.0704 21.4735 19.9928 21.5352C19.9153 21.597 19.8334 21.6278 19.7473 21.6278H17.9895ZM22.5648 16.5769C22.9267 16.5769 23.2412 16.4755 23.5084 16.2728C23.7841 16.0701 23.965 15.7792 24.0513 15.4001C24.0771 15.2503 24.09 15.1181 24.09 15.0035C24.09 14.7479 24.0168 14.5539 23.8703 14.4217C23.7238 14.2806 23.4739 14.2101 23.1206 14.2101H21.5697L21.0785 16.5769H22.5648Z\"\n        fill={color as string}\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const WalletIcon = ({\n  width = '20px',\n  height = '20ox',\n  color = 'whiteAlpha.700',\n  ...props\n}: IconProps) => {\n  return (\n    <Icon width={width} color={color} height={height} viewBox=\"0 0 20 20\" fill=\"none\" {...props}>\n      <path\n        d=\"M6.58154 6.2701C6.23637 6.2701 5.95654 6.54993 5.95654 6.8951C5.95654 7.24028 6.23637 7.5201 6.58154 7.5201H10.3101C10.6553 7.5201 10.9351 7.24028 10.9351 6.8951C10.9351 6.54993 10.6553 6.2701 10.3101 6.2701H6.58154Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M13.972 9.10498C13.6268 9.10498 13.347 9.38481 13.347 9.72998C13.347 10.0752 13.6268 10.355 13.972 10.355H14.1873C14.5324 10.355 14.8123 10.0752 14.8123 9.72998C14.8123 9.38481 14.5324 9.10498 14.1873 9.10498H13.972Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M17.2918 11.6311L17.2916 11.6447V12.3416C17.2916 14.6883 15.3892 16.5907 13.0426 16.5907H7.07331C4.72664 16.5907 2.82422 14.6883 2.82422 12.3416V7.38508C2.82422 5.0384 4.72664 3.13599 7.07331 3.13599H13.0426C15.3892 3.13599 17.2916 5.0384 17.2916 7.38508V7.90016L17.2918 7.91382L17.2916 7.92747V11.6174L17.2918 11.6311ZM7.07331 4.38599C5.41699 4.38599 4.07422 5.72876 4.07422 7.38508V12.3416C4.07422 13.9979 5.41699 15.3407 7.07331 15.3407H13.0426C14.6989 15.3407 16.0416 13.9979 16.0416 12.3416V12.2561H13.871C12.4998 12.2552 11.3876 11.1445 11.3867 9.77282C11.3867 8.40047 12.4998 7.28966 13.8706 7.28882H16.0401C15.9893 5.67705 14.6667 4.38599 13.0426 4.38599H7.07331ZM13.8714 11.0061H16.0416V8.53882H13.8712C13.1891 8.53932 12.6369 9.09162 12.6367 9.77223C12.6372 10.4535 13.1895 11.0056 13.8714 11.0061Z\"\n        fill=\"currentColor\"\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const LogoIcon = ({ color = 'cyan.400', width = '29', height = '21' }: IconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 29 21\" fill=\"none\" color={color}>\n      <path\n        d=\"M6.81239 5.45766C6.61525 5.22805 6.37254 5.11297 6.08372 5.11297H0.177C0.124536 5.11297 0.0816109 5.09606 0.0492845 5.06224C0.0164282 5.02898 0 4.99134 0 4.95098V0.89807C0 0.85771 0.0164282 0.820622 0.0492845 0.786807C0.0816109 0.752992 0.124536 0.736084 0.177 0.736084H6.41864C7.99362 0.736084 9.35239 1.39166 10.4944 2.70173L12.0106 4.58611L9.05721 8.25396L6.81239 5.45766ZM17.7207 2.68155C18.8627 1.38457 20.2278 0.736084 21.8161 0.736084H28.0381C28.0906 0.736084 28.1298 0.749719 28.1563 0.776444C28.1822 0.803714 28.1955 0.844074 28.1955 0.89807V4.95098C28.1955 4.99134 28.1822 5.02898 28.1563 5.06224C28.1298 5.09606 28.0906 5.11297 28.0381 5.11297H22.1314C21.8426 5.11297 21.5998 5.22805 21.4027 5.45766L17.0514 10.8479L21.4223 16.2785C21.6195 16.495 21.8553 16.603 22.1314 16.603H28.0381C28.0906 16.603 28.1298 16.6199 28.1563 16.6538C28.1822 16.6876 28.1955 16.7318 28.1955 16.7852V20.8381C28.1955 20.8785 28.1822 20.9161 28.1563 20.9494C28.1298 20.9832 28.0906 21.0001 28.0381 21.0001H21.8161C20.2278 21.0001 18.8691 20.3451 17.7403 19.0345L14.1176 14.5359L10.4944 19.0345C9.35239 20.3451 7.98727 21.0001 6.39903 21.0001H0.177C0.124536 21.0001 0.0847905 20.9832 0.0588234 20.9494C0.0323264 20.9156 0.0196078 20.8719 0.0196078 20.8174V16.7645C0.0196078 16.7241 0.0323264 16.687 0.0588234 16.6532C0.0847905 16.6194 0.124536 16.6025 0.177 16.6025H6.08372C6.35929 16.6025 6.602 16.488 6.81239 16.2578L11.0848 10.9488L17.7207 2.68155Z\"\n        fill=\"currentColor\"\n      />\n    </Icon>\n  );\n};\n","import { Image } from '@chakra-ui/react';\nimport icon from './BaseIcon.svg';\n\nexport function BaseIcon({ ...props }) {\n  return <Image src={icon} alt=\"Base\" {...props} />;\n}\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const ArbitrumIcon = ({ width = '24px', height = '24px', ...props }: IconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 42 42\" {...props}>\n      <circle cx=\"21\" cy=\"21\" r=\"21\" fill=\"#2D374B\" />\n      <path\n        d=\"M25.089 19.4942L27.7327 15.0085L34.8586 26.1072L34.8619 28.2365L34.8386 13.5798C34.8303 13.403 34.7795 13.2308 34.6907 13.0777C34.6018 12.9246 34.4774 12.7952 34.328 12.7003L21.4989 5.32125C21.3456 5.24842 21.1779 5.21102 21.0082 5.21182C20.8386 5.21262 20.6712 5.2516 20.5186 5.32587C20.479 5.34572 20.4407 5.3679 20.4037 5.39231L20.3591 5.42053L7.90602 12.6367L7.85753 12.6585C7.79299 12.6884 7.7314 12.7243 7.67359 12.7657C7.44004 12.9325 7.28088 13.1839 7.23002 13.4664C7.22223 13.5092 7.21692 13.5525 7.21411 13.5959L7.23361 25.5397L13.871 15.2522C14.7066 13.8881 16.5273 13.4487 18.2174 13.4725L20.201 13.5238L8.51275 32.2682L9.89067 33.0614L21.719 13.5426L26.9472 13.5236L15.1494 33.5342L20.0663 36.3639L20.6538 36.7018C20.9073 36.8025 21.1886 36.8081 21.4458 36.7175L34.4553 29.1783L31.9668 30.6196L25.089 19.4942ZM26.0978 34.0217L21.132 26.228L24.1631 21.0845L30.6846 31.3633L26.0978 34.0217Z\"\n        fill=\"#2D374B\"\n      />\n      <path\n        d=\"M21.1323 26.228L26.0981 34.0214L30.6851 31.363L24.1639 21.0845L21.1323 26.228Z\"\n        fill=\"#28A0F0\"\n      />\n      <path\n        d=\"M34.8623 28.2368L34.859 26.1074L27.7331 15.0087L25.0879 19.4939L31.9669 30.6193L34.4554 29.1781C34.5759 29.0804 34.6745 28.9584 34.7446 28.8201C34.8148 28.6818 34.855 28.5302 34.8626 28.3753L34.8623 28.2368Z\"\n        fill=\"#28A0F0\"\n      />\n      <path\n        d=\"M5.00171 30.2455L8.5141 32.2694L20.2024 13.5251L18.2187 13.4738C16.5286 13.4499 14.7079 13.8891 13.8723 15.2534L7.23495 25.541L5.00299 28.9718V30.2466L5.00171 30.2455Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M26.9474 13.5248L21.7195 13.5438L9.89111 33.0626L14.0254 35.4431L15.1496 33.5362L26.9474 13.5248Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M37.065 13.4979C37.0411 12.9583 36.8863 12.4327 36.614 11.9664C36.3417 11.5 35.96 11.1068 35.5019 10.8208L22.5047 3.34657C22.0407 3.11856 21.5306 3 21.0137 3C20.4967 3 19.9866 3.11856 19.5226 3.34657C19.4141 3.40121 6.88305 10.6689 6.88305 10.6689C6.70895 10.7525 6.54242 10.8511 6.38535 10.9634C5.97846 11.2528 5.64243 11.6306 5.40249 12.0684C5.16255 12.5063 5.02494 12.9928 5 13.4915V28.971L7.23196 25.5402L7.21477 13.5969C7.22521 13.4332 7.27184 13.2738 7.35129 13.1302C7.43074 12.9867 7.54104 12.8625 7.67424 12.7667C7.73325 12.7244 20.4782 5.34712 20.5188 5.32685C20.6714 5.25259 20.8387 5.21361 21.0084 5.21281C21.1781 5.21201 21.3458 5.24941 21.4991 5.32224L34.3282 12.7018C34.4776 12.7967 34.602 12.9261 34.6908 13.0792C34.7797 13.2323 34.8304 13.4045 34.8387 13.5813V28.3768C34.8356 28.5302 34.7998 28.6812 34.7337 28.8196C34.6675 28.9581 34.5726 29.0808 34.4552 29.1796L31.9667 30.6208L30.684 31.3648L26.0969 34.0232L21.4449 36.7192C21.1877 36.81 20.9064 36.8044 20.653 36.7036L15.1493 33.538L14.0251 35.4447L18.9713 38.2924C19.135 38.3852 19.2807 38.4678 19.4002 38.5351C19.5855 38.6377 19.7117 38.7082 19.7561 38.7298C20.1699 38.9111 20.6173 39.0032 21.0691 38.9999C21.4834 39.0005 21.8942 38.9232 22.28 38.7721L35.7915 30.9474C36.1727 30.6509 36.4843 30.2744 36.7042 29.8445C36.9242 29.4145 37.0471 28.9415 37.0645 28.4589L37.065 13.4979Z\"\n        fill=\"#96BEDC\"\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\ninterface DiscordIcon extends IconProps {\n  fill?: string;\n}\n\nexport const DiscordIcon = ({ width = '15px', height = '15px', ...props }: DiscordIcon) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 24 24\" fill=\"none\" {...props}>\n      <path\n        d=\"M9.84893 10.3091C9.247 10.3091 8.77179 10.8341 8.77179 11.4746C8.77179 12.1151 9.25756 12.6401 9.84893 12.6401C10.4509 12.6401 10.9261 12.1151 10.9261 11.4746C10.9366 10.8341 10.4509 10.3091 9.84893 10.3091ZM13.7034 10.3091C13.1015 10.3091 12.6263 10.8341 12.6263 11.4746C12.6263 12.1151 13.112 12.6401 13.7034 12.6401C14.3053 12.6401 14.7806 12.1151 14.7806 11.4746C14.7806 10.8341 14.3053 10.3091 13.7034 10.3091Z\"\n        fill=\"#FEFEFF\"\n      />\n      <path\n        d=\"M18.8354 1.49976H4.68468C3.49138 1.49976 2.51984 2.46578 2.51984 3.6628V17.8591C2.51984 19.0561 3.49138 20.0222 4.68468 20.0222H16.66L16.1003 18.0796L17.452 19.3291L18.7298 20.5052L21.0002 22.5002V3.6628C21.0002 2.46578 20.0287 1.49976 18.8354 1.49976ZM14.7591 15.2131C14.7591 15.2131 14.379 14.7615 14.0622 14.3625C15.4456 13.974 15.9736 13.113 15.9736 13.113C15.5406 13.3965 15.1288 13.596 14.7591 13.7325C14.2311 13.953 13.7242 14.1 13.2279 14.184C12.2141 14.373 11.2848 14.3205 10.4928 14.1735C9.89088 14.058 9.37343 13.89 8.94046 13.722C8.69757 13.6275 8.43357 13.512 8.16956 13.365C8.13788 13.344 8.1062 13.3335 8.07452 13.3125C8.0534 13.302 8.04284 13.2915 8.03228 13.281C7.84219 13.176 7.73659 13.1025 7.73659 13.1025C7.73659 13.1025 8.24348 13.9425 9.58463 14.3415C9.26782 14.7405 8.8771 15.2131 8.8771 15.2131C6.54328 15.1396 5.65623 13.617 5.65623 13.617C5.65623 10.2359 7.1769 7.49539 7.1769 7.49539C8.69757 6.36136 10.1443 6.39286 10.1443 6.39286L10.2499 6.51887C8.34908 7.06488 7.47258 7.8944 7.47258 7.8944C7.47258 7.8944 7.70491 7.76839 8.09564 7.58989C9.22558 7.09638 10.1232 6.95988 10.4928 6.92838C10.5562 6.91788 10.609 6.90737 10.6723 6.90737C11.3165 6.82337 12.0452 6.80237 12.8055 6.88637C13.8087 7.00188 14.8859 7.29588 15.9841 7.8944C15.9841 7.8944 15.1499 7.10688 13.3546 6.56087L13.5025 6.39286C13.5025 6.39286 14.9492 6.36136 16.4699 7.49539C16.4699 7.49539 17.9906 10.2359 17.9906 13.617C17.9906 13.617 17.093 15.1396 14.7591 15.2131Z\"\n        fill=\"#FEFEFF\"\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const XIcon = ({ ...props }: IconProps) => {\n  return (\n    <Icon viewBox=\"0 0 24 24\" fill=\"none\" {...props}>\n      <g clipPath=\"url(#clip0_14230_11024)\">\n        <path\n          d=\"M10.573 13.5844L4.98887 20.25H6.31212L11.1608 14.4623L15.0334 20.25H19.5L13.6438 11.498L19.5 4.50809H18.1767L13.0564 10.6201L8.9666 4.50809H4.5L10.5733 13.5844H10.573ZM12.3854 11.4209L12.9788 12.2924L17.6999 19.227H15.6673L11.8573 13.6306L11.264 12.7591L6.3115 5.48454H8.34405L12.3854 11.4206V11.4209Z\"\n          fill=\"white\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_14230_11024\">\n          <rect width=\"15\" height=\"15.75\" fill=\"white\" transform=\"matrix(-1 0 0 -1 19.5 20.25)\" />\n        </clipPath>\n      </defs>\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const GithubIcon = ({ ...props }: IconProps) => {\n  return (\n    <Icon viewBox=\"0 0 24 24\" fill=\"none\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M12.0002 2.25049C6.61603 2.25049 2.25058 6.72675 2.25058 12.2476C2.25058 16.6642 5.04356 20.4121 8.91822 21.7331C9.40578 21.8258 9.58498 21.5163 9.58498 21.2514C9.58498 21.013 9.57529 20.2251 9.57207 19.3907C6.85819 19.995 6.28668 18.2121 6.28668 18.2121C5.84271 17.0566 5.20501 16.7487 5.20501 16.7487C4.32029 16.1279 5.2712 16.1411 5.2712 16.1411C6.24955 16.2123 6.76617 17.1708 6.76617 17.1708C7.63635 18.6988 9.04737 18.2568 9.60274 18.0018C9.68992 17.3562 9.94339 16.9142 10.2211 16.6642C8.05611 16.411 5.77975 15.5535 5.77975 11.7245C5.77975 10.6335 6.16075 9.74127 6.78393 9.04103C6.68222 8.7894 6.34964 7.77297 6.87757 6.39566C6.87757 6.39566 7.69609 6.12749 9.55915 7.42037C10.3373 7.19854 11.1704 7.08763 12.0002 7.08432C12.8284 7.08763 13.6631 7.19854 14.4428 7.42037C16.3043 6.12749 17.1212 6.39566 17.1212 6.39566C17.6523 7.77297 17.3181 8.7894 17.2164 9.04103C17.8412 9.74127 18.219 10.6335 18.219 11.7245C18.219 15.5634 15.9378 16.4093 13.768 16.6576C14.1183 16.9672 14.4299 17.5764 14.4299 18.5084C14.4299 19.846 14.4186 20.922 14.4186 21.2514C14.4186 21.5179 14.5946 21.8292 15.0886 21.7315C18.96 20.4088 21.7498 16.6626 21.7498 12.2476C21.7498 6.72675 17.3843 2.25049 12.0002 2.25049Z\"\n        fill=\"#FEFEFF\"\n      />\n      <path\n        d=\"M5.94295 16.6031C5.92196 16.6527 5.84447 16.6676 5.77505 16.6328C5.70401 16.5997 5.66526 16.5319 5.68787 16.4822C5.70885 16.4309 5.78473 16.4176 5.85577 16.4508C5.9268 16.4855 5.96716 16.5534 5.94295 16.6031Z\"\n        fill=\"#FEFEFF\"\n      />\n      <path\n        d=\"M6.33886 17.055C6.29204 17.0997 6.20163 17.0782 6.14028 17.0086C6.0757 16.9391 6.0644 16.8464 6.11122 16.8017C6.15965 16.757 6.24683 16.7785 6.31141 16.8481C6.37437 16.9176 6.38729 17.0103 6.33886 17.055Z\"\n        fill=\"#FEFEFF\"\n      />\n      <path\n        d=\"M6.72318 17.6313C6.66345 17.6743 6.56497 17.6346 6.50523 17.5452C6.4455 17.4558 6.4455 17.3498 6.50685 17.3068C6.56658 17.2638 6.66345 17.3018 6.7248 17.3912C6.78453 17.4806 6.78453 17.5882 6.72318 17.6313Z\"\n        fill=\"#FEFEFF\"\n      />\n      <path\n        d=\"M7.24861 18.1876C7.19533 18.2488 7.08071 18.2323 6.99837 18.1495C6.91281 18.0684 6.8902 17.9542 6.94348 17.8946C6.99837 17.8333 7.11138 17.8515 7.19533 17.9326C7.27928 18.0121 7.30512 18.128 7.24861 18.1876Z\"\n        fill=\"#FEFEFF\"\n      />\n      <path\n        d=\"M7.97585 18.5102C7.95164 18.588 7.84185 18.6244 7.73207 18.5913C7.62229 18.5565 7.54964 18.4655 7.57224 18.386C7.59484 18.3066 7.70463 18.2702 7.81602 18.3049C7.92742 18.3397 7.99846 18.4307 7.97585 18.5102Z\"\n        fill=\"#FEFEFF\"\n      />\n      <path\n        d=\"M8.77338 18.5695C8.77661 18.6523 8.68297 18.7202 8.56673 18.7218C8.45049 18.7251 8.35524 18.6573 8.35524 18.5762C8.35524 18.4934 8.44726 18.4255 8.5635 18.4239C8.67813 18.4222 8.77338 18.4884 8.77338 18.5695Z\"\n        fill=\"#FEFEFF\"\n      />\n      <path\n        d=\"M9.51542 18.4407C9.52995 18.5218 9.44923 18.6029 9.33299 18.6261C9.21998 18.6476 9.11504 18.598 9.10051 18.5185C9.08598 18.4357 9.16832 18.353 9.28133 18.3314C9.39757 18.3099 9.50089 18.3596 9.51542 18.4407Z\"\n        fill=\"#FEFEFF\"\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const SNXChainIcon = ({ ...props }: IconProps) => {\n  return (\n    <Icon width=\"178px\" height=\"178px\" viewBox=\"0 0 178 178\" fill=\"none\" {...props}>\n      <circle cx=\"89.0198\" cy=\"88.4095\" r=\"88.305\" fill=\"#06061B\" />\n      <path\n        d=\"M68.0815 75.158C67.5149 74.5153 66.8174 74.1932 65.9874 74.1932H49.0126C48.8618 74.1932 48.7384 74.1459 48.6455 74.0512C48.5511 73.9581 48.5039 73.8528 48.5039 73.7398V62.3958C48.5039 62.2828 48.5511 62.179 48.6455 62.0844C48.7384 61.9897 48.8618 61.9424 49.0126 61.9424H66.9499C71.4761 61.9424 75.381 63.7773 78.6629 67.4442L83.0201 72.7185L74.5327 82.9848L68.0815 75.158ZM99.4299 67.3877C102.712 63.7575 106.635 61.9424 111.199 61.9424H129.08C129.231 61.9424 129.344 61.9805 129.42 62.0553C129.495 62.1317 129.533 62.2446 129.533 62.3958V73.7398C129.533 73.8528 129.495 73.9581 129.42 74.0512C129.344 74.1459 129.231 74.1932 129.08 74.1932H112.105C111.275 74.1932 110.578 74.5153 110.011 75.158L97.5064 90.2452L110.068 105.445C110.634 106.051 111.312 106.354 112.105 106.354H129.08C129.231 106.354 129.344 106.401 129.42 106.496C129.495 106.59 129.533 106.714 129.533 106.864V118.208C129.533 118.321 129.495 118.426 129.42 118.519C129.344 118.614 129.231 118.661 129.08 118.661H111.199C106.635 118.661 102.73 116.828 99.4863 113.159L89.0754 100.568L78.6629 113.159C75.381 116.828 71.4578 118.661 66.8936 118.661H49.0126C48.8618 118.661 48.7476 118.614 48.673 118.519C48.5968 118.424 48.5603 118.302 48.5603 118.15V106.806C48.5603 106.693 48.5968 106.589 48.673 106.494C48.7476 106.399 48.8618 106.352 49.0126 106.352H65.9874C66.7793 106.352 67.4768 106.032 68.0815 105.387L80.3595 90.5276L99.4299 67.3877Z\"\n        fill=\"#00D1FF\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M1.62306 101.122C1.02459 96.9706 0.714844 92.7262 0.714844 88.4095C0.714844 85.5803 0.84789 82.7823 1.10807 80.0212L11.5198 67.3877C14.8017 63.7575 18.7248 61.9424 23.2891 61.9424H41.1701C41.3209 61.9424 41.4336 61.9805 41.5097 62.0553C41.5844 62.1317 41.6224 62.2446 41.6224 62.3958V73.7398C41.6224 73.8528 41.5844 73.9581 41.5097 74.0512C41.4336 74.1459 41.3209 74.1932 41.1701 74.1932H24.1953C23.3653 74.1932 22.6678 74.5153 22.1012 75.158L9.59627 90.2452L22.1576 105.445C22.7241 106.051 23.4018 106.354 24.1953 106.354H41.1701C41.3209 106.354 41.4336 106.401 41.5097 106.496C41.5844 106.59 41.6224 106.714 41.6224 106.864V118.208C41.6224 118.321 41.5844 118.426 41.5097 118.519C41.4336 118.614 41.3209 118.661 41.1701 118.661H23.2891C18.7248 118.661 14.82 116.828 11.5761 113.159L1.62306 101.122Z\"\n        fill=\"#00D1FF\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M176.393 101.284C177.007 97.0816 177.325 92.7827 177.325 88.4095C177.325 85.5791 177.192 82.7799 176.931 80.0176L168.27 90.5276L155.992 105.387C155.387 106.032 154.689 106.352 153.898 106.352H136.923C136.772 106.352 136.658 106.399 136.583 106.494C136.507 106.589 136.47 106.693 136.47 106.806V118.15C136.47 118.302 136.507 118.424 136.583 118.519C136.658 118.614 136.772 118.661 136.923 118.661H154.804C159.368 118.661 163.291 116.828 166.573 113.159L176.393 101.284ZM153.898 74.1932C154.728 74.1932 155.425 74.5153 155.992 75.158L162.443 82.9848L170.93 72.7185L166.573 67.4442C163.291 63.7773 159.386 61.9424 154.86 61.9424H136.923C136.772 61.9424 136.649 61.9897 136.556 62.0844C136.461 62.179 136.414 62.2828 136.414 62.3958V73.7398C136.414 73.8528 136.461 73.9581 136.556 74.0512C136.649 74.1459 136.772 74.1932 136.923 74.1932H153.898Z\"\n        fill=\"#00D1FF\"\n      />\n    </Icon>\n  );\n};\n","import { ethers } from 'ethers';\n\nexport class MagicProvider extends ethers.providers.JsonRpcProvider {\n  // @ts-ignore\n  readonly magicWallet: string;\n  // @ts-ignore\n  readonly chainId: number;\n\n  constructor() {\n    if (!window.$chainId) {\n      throw new Error('Empty window.$chainId');\n    }\n    if (!window.$magicWallet) {\n      throw new Error('Empty window.$magicWallet');\n    }\n    super('http://127.0.0.1:8545', { chainId: window.$chainId, name: 'Anvil' });\n    Object.defineProperty(this, 'magicWallet', {\n      enumerable: true,\n      value: window.$magicWallet,\n      writable: false,\n    });\n    Object.defineProperty(this, 'chainId', {\n      enumerable: true,\n      value: window.$chainId,\n      writable: false,\n    });\n  }\n\n  async listAccounts(): Promise<Array<string>> {\n    return [this.magicWallet];\n  }\n\n  async send(method: string, params: Array<any>): Promise<any> {\n    if (method === 'eth_chainId') {\n      return `0x${Number(this.chainId).toString(16)}`;\n    }\n    if (method === 'eth_accounts') {\n      return [this.magicWallet];\n    }\n    try {\n      // if (method === 'eth_getTransactionReceipt') {\n      //   // mine extra block before getting receipt\n      //   await super.send('evm_mine', []);\n      // }\n      const result = await super.send(method, params);\n      // eslint-disable-next-line no-console\n      console.log('MAGIC.send', { method, params, result });\n      return result;\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log('MAGIC.send ERROR', { method, params, error });\n      throw error;\n    }\n  }\n}\n","import { IconProps } from '@chakra-ui/react';\nimport { INFURA_KEY } from '@snx-v3/constants';\nimport { importPythERC7412Wrapper } from '@snx-v3/contracts';\nimport {\n  ArbitrumIcon,\n  BaseIcon,\n  EthereumIcon,\n  FailedIcon,\n  LogoIcon,\n  OptimismIcon,\n  SNXChainIcon,\n} from '@snx-v3/icons';\nimport { useQuery } from '@tanstack/react-query';\nimport { useConnectWallet, useSetChain } from '@web3-onboard/react';\nimport { ethers } from 'ethers';\nimport React, { useCallback } from 'react';\nimport { MagicProvider } from './magic';\nimport SynthetixIcon from './SynthetixIcon.svg';\nimport SynthetixLogo from './SynthetixLogo.svg';\n\nexport function getMagicProvider(): ethers.providers.JsonRpcProvider | undefined {\n  if (window.$magicWallet && window.$chainId) {\n    return new MagicProvider();\n  }\n}\n\nexport type Network = {\n  id: number;\n  preset: string;\n  hexId: string;\n  token: string;\n  name: string;\n  rpcUrl: string;\n  label: string;\n  isSupported: boolean;\n  publicRpcUrl: string;\n  isTestnet: boolean;\n};\n\nexport const UNSUPPORTED_NETWORK: Network = {\n  id: 0,\n  preset: 'main',\n  hexId: `0x${Number(0).toString(16)}`,\n  token: 'ETH',\n  name: 'unsupported',\n  rpcUrl: '',\n  publicRpcUrl: '',\n  label: 'Unsupported',\n  isSupported: false,\n  isTestnet: false,\n};\n\ninterface NetworkIconProps extends IconProps {\n  networkId?: Network['id'];\n  size?: string;\n}\n\nexport const NetworkIcon = ({ networkId, size = '24px', ...props }: NetworkIconProps) => {\n  switch (networkId) {\n    case 1:\n      return <EthereumIcon w={size} h={size} {...props} />;\n    case 10:\n      return <OptimismIcon w={size} h={size} {...props} />;\n    case 11155111:\n      return <EthereumIcon w={size} h={size} {...props} />;\n    case 84531:\n      return <BaseIcon w={size} h={size} {...props} />;\n    case 84532:\n      return <BaseIcon w={size} h={size} {...props} />;\n    case 13370:\n      return <LogoIcon w=\"29px\" h=\"21px\" {...props} />;\n    case 8453:\n      return <BaseIcon w={size} h={size} {...props} />;\n    case 11155420:\n      return <OptimismIcon w={size} h={size} {...props} />;\n    case 421614:\n      return <ArbitrumIcon w={size} h={size} {...props} />;\n    case 42161:\n      return <ArbitrumIcon w={size} h={size} {...props} />;\n    case 2192:\n      return <SNXChainIcon w={size} h={size} {...props} />;\n    case 13001:\n      return <SNXChainIcon w={size} h={size} {...props} />;\n    default: {\n      return <FailedIcon w={size} h={size} {...props} />;\n    }\n  }\n};\n\nexport const BASE_ANDROMEDA: Network = {\n  id: 8453,\n  preset: 'andromeda',\n  hexId: `0x${Number(8453).toString(16)}`,\n  token: 'ETH',\n  name: 'base',\n  rpcUrl: `https://base-mainnet.infura.io/v3/${INFURA_KEY}`,\n  label: 'Base',\n  isSupported: true,\n  publicRpcUrl: 'https://base.publicnode.com',\n  isTestnet: false,\n};\n\nexport const MAINNET: Network = {\n  id: 1,\n  preset: 'main',\n  hexId: `0x${Number(1).toString(16)}`,\n  token: 'ETH',\n  name: 'mainnet',\n  rpcUrl: `https://mainnet.infura.io/v3/${INFURA_KEY}`,\n  label: 'Ethereum',\n  isSupported: true,\n  publicRpcUrl: 'https://ethereum.publicnode.com',\n  isTestnet: false,\n};\n\nexport const OPTIMISM: Network = {\n  id: 10,\n  preset: 'main',\n  hexId: `0x${Number(10).toString(16)}`,\n  token: 'ETH',\n  name: 'optimism-mainnet',\n  rpcUrl: `https://optimism-mainnet.infura.io/v3/${INFURA_KEY}`,\n  label: 'Optimism',\n  isSupported: true,\n  publicRpcUrl: 'https://mainnet.optimism.io',\n  isTestnet: false,\n};\n\nexport const SEPOLIA: Network = {\n  id: 11155111,\n  preset: 'main',\n  hexId: `0x${Number(11155111).toString(16)}`,\n  token: 'ETH',\n  name: 'sepolia',\n  rpcUrl: `https://sepolia.infura.io/v3/${INFURA_KEY}`,\n  label: 'Sepolia Testnet',\n  isSupported: true,\n  publicRpcUrl: 'https://ethereum-sepolia.publicnode.com',\n  isTestnet: true,\n};\n\nexport const BASE_SEPOLIA: Network = {\n  id: 84532,\n  preset: 'andromeda',\n  hexId: `0x${Number(84532).toString(16)}`,\n  token: 'ETH',\n  name: 'base-sepolia',\n  rpcUrl: `https://base-sepolia.infura.io/v3/${INFURA_KEY}`,\n  label: 'Base Sepolia',\n  isSupported: true,\n  publicRpcUrl: 'https://sepolia.base.org',\n  isTestnet: true,\n};\n\nexport const CANNON: Network = {\n  id: 13370,\n  preset: 'main',\n  hexId: `0x${Number(13370).toString(16)}`,\n  token: 'ETH',\n  name: 'cannon',\n  rpcUrl: `http://127.0.0.1:8545`,\n  label: 'Cannon',\n  isSupported: false, // hidden by default but if wallet switched to Cannon it will be visible\n  publicRpcUrl: 'http://127.0.0.1:8545',\n  isTestnet: true,\n};\n\nexport const OPTIMISM_SEPOLIA: Network = {\n  id: 11155420,\n  preset: 'main',\n  hexId: `0x${Number(11155420).toString(16)}`,\n  token: 'ETH',\n  name: 'optimism-sepolia',\n  rpcUrl: `https://optimism-sepolia.infura.io/v3/${INFURA_KEY}`,\n  label: 'Optimism Sepolia',\n  isSupported: false,\n  publicRpcUrl: 'https://sepolia.optimism.io/',\n  isTestnet: true,\n};\n\nexport const ARBITRUM_SEPOLIA: Network = {\n  id: 421614,\n  preset: 'main',\n  hexId: `0x${Number(421614).toString(16)}`,\n  token: 'ETH',\n  name: 'arbitrum-sepolia',\n  rpcUrl: `https://arbitrum-sepolia.infura.io/v3/${INFURA_KEY}`,\n  label: 'Arbitrum Sepolia',\n  isSupported: true,\n  publicRpcUrl: 'https://sepolia-rollup.arbitrum.io/rpc',\n  isTestnet: true,\n};\n\nexport const ARBITRUM: Network = {\n  id: 42161,\n  preset: 'main',\n  hexId: `0x${Number(42161).toString(16)}`,\n  token: 'ETH',\n  name: 'arbitrum',\n  rpcUrl: `https://arbitrum-mainnet.infura.io/v3/${INFURA_KEY}`,\n  label: 'Arbitrum',\n  isSupported: true,\n  publicRpcUrl: 'https://arb1.arbitrum.io/rpc',\n  isTestnet: false,\n};\n\nexport const SNAX: Network = {\n  id: 2192,\n  preset: 'main',\n  hexId: `0x${Number(2192).toString(16)}`,\n  token: 'ETH',\n  name: 'SNAX',\n  rpcUrl: 'https://mainnet.snaxchain.io/',\n  label: 'Snaxchain',\n  isSupported: true,\n  publicRpcUrl: 'https://mainnet.snaxchain.io/',\n  isTestnet: false,\n};\n\nexport const SNAXTESTNET: Network = {\n  id: 13001,\n  preset: 'main',\n  hexId: `0x${Number(13001).toString(16)}`,\n  token: 'ETH',\n  name: 'SNAX',\n  rpcUrl: 'https://testnet.snaxchain.io/',\n  label: 'Snaxchain',\n  isSupported: true,\n  publicRpcUrl: 'https://testnet.snaxchain.io/',\n  isTestnet: true,\n};\n\nexport const NETWORKS: Network[] = [\n  BASE_ANDROMEDA,\n  MAINNET,\n  OPTIMISM,\n  SEPOLIA,\n  BASE_SEPOLIA,\n  CANNON,\n  OPTIMISM_SEPOLIA,\n  ARBITRUM_SEPOLIA,\n  ARBITRUM,\n  SNAX,\n  SNAXTESTNET,\n];\n\nexport async function deploymentHasERC7412(chainId: number, preset: string) {\n  return importPythERC7412Wrapper(chainId, preset).then(\n    () => true,\n    () => false\n  );\n}\n\nexport const DEFAULT_NETWORK =\n  NETWORKS.find(\n    (network) =>\n      `${network.id}-${network.preset}` === window.localStorage.getItem('DEFAULT_NETWORK')\n  ) ?? NETWORKS[1];\n\nexport const appMetadata = {\n  name: 'Synthetix',\n  icon: SynthetixIcon,\n  logo: SynthetixLogo,\n  description: 'Synthetix | The derivatives liquidity protocol.',\n  recommendedInjectedWallets: [\n    { name: 'MetaMask', url: 'https://metamask.io' },\n    { name: 'Brave Wallet', url: 'https://brave.com/wallet' },\n  ],\n  gettingStartedGuide: 'https://synthetix.io',\n  explore: 'https://blog.synthetix.io',\n};\n\nexport function useProviderForChain(customNetwork?: Network) {\n  const { network: currentNetwork } = useNetwork();\n  const network = customNetwork ?? currentNetwork;\n  const isDefaultChain =\n    customNetwork?.id === currentNetwork?.id && customNetwork?.preset === currentNetwork?.preset;\n  const { data: provider } = useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'ProviderForChain', { isDefaultChain }],\n    enabled: Boolean(network),\n    queryFn: () => {\n      if (!network) throw 'OMFG';\n      if (isDefaultChain) {\n        const provider = getMagicProvider();\n        if (provider) {\n          return provider;\n        }\n      }\n      return new ethers.providers.JsonRpcProvider(network.rpcUrl);\n    },\n  });\n\n  return provider;\n}\n\nexport function useWallet() {\n  const [{ wallet }, connect, disconnect] = useConnectWallet();\n\n  if (!wallet) {\n    return {\n      activeWallet: undefined,\n      walletsInfo: undefined,\n      connect,\n      disconnect,\n    };\n  }\n\n  const activeWallet = wallet?.accounts[0];\n\n  return {\n    activeWallet: activeWallet,\n    walletsInfo: wallet,\n    connect,\n    disconnect,\n  };\n}\n\nexport function useNetwork() {\n  const [{ connectedChain }, setChain] = useSetChain();\n\n  const setNetwork = useCallback(\n    async (networkId: number) => {\n      const newNetwork = NETWORKS.find((n) => n.id === networkId);\n      if (!newNetwork) return;\n      return await setChain({ chainId: newNetwork?.hexId });\n    },\n    [setChain]\n  );\n\n  // Hydrate the network info\n  const network = NETWORKS.find((n) => n.hexId === connectedChain?.id);\n\n  if (!network) {\n    return {\n      network: undefined,\n      setNetwork,\n    };\n  }\n\n  return {\n    network,\n    setNetwork,\n  };\n}\n\nexport function useSigner() {\n  const { network } = useNetwork();\n  const [{ wallet }] = useConnectWallet();\n  const activeWallet = wallet?.accounts?.[0];\n  const { data: signer } = useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'Signer', activeWallet?.address],\n    enabled: Boolean(wallet && activeWallet),\n    queryFn: () => {\n      if (!(wallet && activeWallet)) throw 'OMFG';\n      const provider =\n        getMagicProvider() ?? new ethers.providers.Web3Provider(wallet.provider, 'any');\n      return provider.getSigner(activeWallet.address);\n    },\n  });\n  return signer;\n}\n\nexport function useProvider() {\n  const { network } = useNetwork();\n  return useProviderForChain(network);\n}\n","import {\n  ComponentMultiStyleConfig,\n  ComponentStyleConfig,\n  defineStyle,\n  extendTheme,\n} from '@chakra-ui/react';\nimport { mode } from '@chakra-ui/theme-tools';\n\nconst gradients = {\n  'green-cyan': {\n    500: 'linear(to-tr, green.500, cyan.500)',\n    600: 'linear(to-tr, green.600, cyan.600)',\n    700: 'linear(to-tr, green.700, cyan.800)',\n  },\n\n  grey: {\n    900: 'linear(to-tr, grey.900, blackAlpha.900)',\n  },\n  dark: {\n    500: 'linear(to-tr, #171923, #141414)',\n  },\n\n  'pink-purple': {\n    500: 'linear(to-tr, pink.500, purple.500)',\n    600: 'linear(to-tr, pink.600, purple.600)',\n    700: 'linear(to-tr, pink.700, purple.800)',\n  },\n\n  'pink-blue': {\n    500: 'linear(to-tr, pink.500, blue.500)',\n    600: 'linear(to-tr, pink.600, blue.600)',\n    700: 'linear(to-tr, pink.700, blue.800)',\n  },\n  'pink-cyan': {\n    500: 'linear(to-tr, pink.500, cyan.500)',\n    600: 'linear(to-tr, pink.600, cyan.600)',\n    700: 'linear(to-tr, pink.700, cyan.800)',\n  },\n\n  orange: {\n    500: 'linear(to-tr, orange.500, orange.300)',\n    600: 'linear(to-tr, orange.600, orange.400)',\n    700: 'linear(to-tr, orange.700, orange.500)',\n  },\n};\n\n// adapted from https://github.com/chakra-ui/chakra-ui/blob/main/packages/components/theme/src/components/button.ts#L90\nconst variantSolid = defineStyle((props) => {\n  const { colorScheme: c } = props;\n\n  if (c === 'gray') {\n    const bg = mode(`gray.100`, `whiteAlpha.200`)(props);\n\n    return {\n      borderRadius: 'base',\n      color: mode(`black`, `whiteAlpha.900`)(props),\n      bg,\n      _hover: {\n        bg: mode(`gray.200`, `whiteAlpha.300`)(props),\n        _disabled: {\n          bg,\n        },\n      },\n      _active: { bg: mode(`gray.300`, `whiteAlpha.400`)(props) },\n    };\n  }\n\n  if (c === 'cyan') {\n    return {\n      borderRadius: 'base',\n      bgGradient: gradients['green-cyan'][500],\n      color: 'black',\n      _hover: {\n        bgGradient: gradients['green-cyan'][600],\n        _disabled: {\n          background: gradients['green-cyan'][500],\n        },\n      },\n      _active: {\n        bgGradient: gradients['green-cyan'][700],\n      },\n    };\n  }\n\n  const bg = `${c}.500`;\n  const color = 'white';\n  const hoverBg = `${c}.600`;\n  const activeBg = `${c}.700`;\n  const background = mode(bg, `${c}.600`)(props);\n\n  return {\n    borderRadius: 'base',\n    bg: background,\n    color: mode(color, `white`)(props),\n    _hover: {\n      bg: mode(hoverBg, `${c}.500`)(props),\n      _disabled: {\n        bg: background,\n      },\n    },\n    _active: { bg: mode(activeBg, `${c}.400`)(props) },\n  };\n});\n\nconst Button: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n  },\n  variants: {\n    solid: variantSolid,\n    outline: (props) => {\n      if (props.colorScheme === 'gray' || props.colorScheme === 'grey') {\n        return {\n          color: 'white',\n          borderColor: 'gray.900',\n          _hover: { bg: 'whiteAlpha.200' },\n          _active: { bg: 'whiteAlpha.400' },\n          borderRadius: 'base',\n        };\n      }\n      return {\n        color: 'cyan.500', // needed for storybook for some reason\n        border: '1px solid', // needed for storybook for some reason\n        borderColor: 'cyan.500', // needed for storybook for some reason\n        _hover: { bg: 'rgb(0, 209, 255, 0.12)' }, // cyan.500 0.12 opacity\n        _active: { bg: 'rgb(0, 209, 255, 0.24)' }, // cyan.500 0.24 opacity\n        borderRadius: 'base',\n      };\n    },\n    ghost: {\n      color: 'cyan.500', // needed for storybook for some reason\n      _hover: { bg: 'rgb(0, 209, 255, 0.12)' }, // cyan.500 0.12 opacity\n      _active: { bg: 'rgb(0, 209, 255, 0.24)' }, // cyan.500 0.24 opacity\n      borderRadius: 'base',\n    },\n  },\n};\n\nconst Menu: ComponentMultiStyleConfig = {\n  parts: ['button', 'list', 'item'],\n  baseStyle: {\n    button: {\n      borderRadius: 'base',\n      color: 'white',\n      span: {\n        display: 'flex',\n        alignItems: 'center',\n        px: 2,\n      },\n      height: '100%',\n    },\n    list: {\n      mt: 2,\n      bgColor: 'navy.900',\n      padding: 0,\n      border: 'none',\n      borderRadius: 'md',\n      py: 0,\n    },\n    item: {\n      bgColor: 'blackAlpha.300',\n      color: 'whiteAlpha.900',\n      p: 3,\n      _hover: {\n        bgColor: 'whiteAlpha.400',\n      },\n      _active: {\n        bgColor: 'navy.900',\n      },\n      _first: {\n        borderTopLeftRadius: 'md',\n        borderTopRightRadius: 'md',\n      },\n      _last: {\n        borderBottomLeftRadius: 'md',\n        borderBottomRightRadius: 'md',\n      },\n      _focus: {\n        bgColor: 'blackAlpha.400',\n      },\n    },\n  },\n};\n\nconst Input: ComponentStyleConfig = {\n  defaultProps: {\n    focusBorderColor: 'cyan.500',\n    errorBorderColor: 'red.500',\n  },\n};\n\nconst Select: ComponentStyleConfig = {\n  defaultProps: {\n    focusBorderColor: 'cyan.500',\n    iconColor: 'cyan.500',\n    errorBorderColor: 'red.500',\n  },\n};\n\nconst NumberInput: ComponentStyleConfig = {\n  defaultProps: {\n    focusBorderColor: 'cyan.500',\n    errorBorderColor: 'red.500',\n  },\n};\n\nconst Textarea: ComponentStyleConfig = {\n  defaultProps: {\n    focusBorderColor: 'cyan.500',\n    colorScheme: 'cyan',\n    errorBorderColor: 'red.500',\n  },\n};\n\nconst Alert: ComponentStyleConfig = {\n  defaultProps: {\n    variant: 'left-accent',\n  },\n  variants: {\n    'left-accent': (props) => {\n      return {\n        container: {\n          bg: `${props.colorScheme}.900`,\n          borderInlineStartColor: `${props.colorScheme}.500`,\n        },\n      };\n    },\n    solid: (props) => {\n      return {\n        icon: { color: 'white' },\n        container: { bg: `${props.colorScheme}.500`, color: 'white' },\n      };\n    },\n  },\n};\n\nconst Skeleton: ComponentStyleConfig = {\n  defaultProps: {\n    startColor: 'gray.900',\n    endColor: 'gray.800',\n  },\n};\n\nconst Checkbox: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n  },\n  baseStyle: {\n    control: {\n      borderColor: 'cyan.500',\n      _checked: {\n        bg: 'cyan.500',\n        borderColor: 'cyan.500',\n        _hover: {\n          bg: 'cyan.600',\n          borderColor: 'cyan.600',\n        },\n      },\n      _invalid: {\n        borderColor: 'red.500',\n      },\n      _disabled: {\n        _hover: {\n          borderColor: 'transparent',\n        },\n      },\n      _hover: {\n        borderColor: 'cyan.600',\n      },\n    },\n  },\n};\n\nconst Radio: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n  },\n  baseStyle: {\n    control: {\n      borderColor: 'cyan.500',\n      _checked: {\n        bg: 'cyan.500',\n        borderColor: 'cyan.500',\n        _hover: {\n          bg: 'cyan.600',\n          borderColor: 'cyan.600',\n        },\n      },\n      _invalid: {\n        borderColor: 'red.500',\n      },\n      _disabled: {\n        _hover: {\n          borderColor: 'transparent',\n        },\n      },\n      _hover: {\n        borderColor: 'cyan.600',\n      },\n    },\n  },\n};\n\nconst Badge: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n  },\n  variants: {\n    subtle: (props) => ({\n      color: `${props.colorScheme}.500`,\n      border: '0px',\n      display: 'flex',\n      alignItems: 'center',\n    }),\n    solid: (props) => ({\n      background: `${props.colorScheme}.500`,\n      color: 'black',\n    }),\n    outline: (props) => ({\n      borderColor: `${props.colorScheme}.500`,\n      color: `${props.colorScheme}.500`,\n      boxShadow: 'unset',\n    }),\n  },\n};\n\nconst Tag: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n    variant: 'solid',\n  },\n  variants: {\n    solid: (props) => ({\n      container: {\n        background: `${props.colorScheme}.500`,\n        color: 'black',\n      },\n    }),\n  },\n};\n\nconst Accordion: ComponentStyleConfig = {\n  baseStyle: {\n    container: {\n      borderColor: 'gray.900',\n      borderWidth: '1px',\n      borderRadius: 'base',\n    },\n  },\n};\n\nconst Progress: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n    variant: 'solid',\n    borderRadius: 'full',\n  },\n  variants: {\n    solid: (props) => ({\n      filledTrack: {\n        background: `${props.colorScheme}.500`,\n        borderRadius: 'full',\n      },\n      track: {\n        borderRadius: 'full',\n      },\n    }),\n  },\n};\n\nconst Tabs: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n  },\n  variants: {\n    'solid-rounded': (props) => ({\n      tab: {\n        _selected: {\n          background: `${props.colorScheme}.500`,\n          color: 'black',\n        },\n        color: `${props.colorScheme}.500`,\n      },\n    }),\n    'soft-rounded': {\n      tab: {\n        _selected: {\n          background: 'whiteAlpha.300',\n          color: 'cyan.500',\n        },\n        color: 'cyan.500',\n      },\n    },\n  },\n};\n\nconst Tooltip: ComponentStyleConfig = {\n  baseStyle: {\n    textAlign: 'center',\n    bg: 'gray.900',\n    color: 'white.500',\n    '--popper-arrow-bg': 'var(--chakra-colors-gray-900)',\n  },\n};\n\nconst Switch: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n  },\n  baseStyle: {\n    track: {\n      _checked: {\n        background: 'cyan.500',\n      },\n    },\n  },\n};\n\nconst Spinner: ComponentStyleConfig = {\n  baseStyle: {\n    color: 'cyan.500',\n  },\n};\n\nexport const theme = extendTheme({\n  useSystemColorMode: false,\n  initialColorMode: 'dark',\n  colors: {\n    gray: {\n      50: '#F6F6F6',\n      100: '#F1F1F1',\n      200: '#DDDDDF',\n      300: '#C3C3C9',\n      400: '#AAAAB2',\n      500: '#91919B',\n      600: '#7A7A85',\n      700: '#63636E',\n      800: '#4D4D57',\n      900: '#303037',\n    },\n    red: {\n      50: '#FFEDEF',\n      100: '#FFC4CB',\n      200: '#FF9BA7',\n      300: '#FF7384',\n      400: '#FF4A60',\n      500: '#E4364B',\n      600: '#C53030',\n      700: '#9B2C2C',\n      800: '#822727',\n      900: '#63171B',\n    },\n    orange: {\n      50: '#FFF3EB',\n      100: '#FFD8BE',\n      200: '#FFBE92',\n      300: '#FFA365',\n      400: '#FF9A54',\n      500: '#FC8738',\n      600: '#DC732D',\n      700: '#96420A',\n      800: '#743002',\n      900: '#522100',\n    },\n    yellow: {\n      50: '#FFFBEF',\n      100: '#FFF2CA',\n      200: '#FFF5A8',\n      300: '#FFF889',\n      400: '#FFF458',\n      500: '#FAE527',\n      600: '#EAD516',\n      700: '#B5932B',\n      800: '#776017',\n      900: '#55430D',\n    },\n    green: {\n      50: '#EDFFF9',\n      100: '#C3FFEC',\n      200: '#9AE6B4',\n      300: '#72FFD3',\n      400: '#47FAC2',\n      500: '#34EDB3',\n      600: '#2BD39F',\n      700: '#11946B',\n      800: '#077250',\n      900: '#015037',\n    },\n    blue: {\n      50: '#EDF6FF',\n      100: '#C4E2FF',\n      200: '#9CCFFF',\n      300: '#73BBFF',\n      400: '#479EF0',\n      500: '#3182CE',\n      600: '#1F68AC',\n      700: '#11508A',\n      800: '#073968',\n      900: '#012546',\n    },\n    cyan: {\n      50: '#E5FAFF',\n      100: '#B7F2FF',\n      200: '#8AEAFF',\n      300: '#5CE1FF',\n      400: '#2ED9FF',\n      500: '#00D1FF',\n      600: '#00B0D6',\n      700: '#008EAD',\n      800: '#006D85',\n      900: '#004B5C',\n    },\n    purple: {\n      50: '#F0EEFF',\n      100: '#CFC9FF',\n      200: '#AEA4FF',\n      300: '#8D7EFF',\n      400: '#6B59FF',\n      500: '#5744EA',\n      600: '#402FC8',\n      700: '#2D1EA6',\n      800: '#1D1084',\n      900: '#10104E',\n    },\n    pink: {\n      50: '#FDE8FF',\n      100: '#F9B6FF',\n      200: '#F583FF',\n      300: '#F471FF',\n      400: '#EB46FF',\n      500: '#EE2EFF',\n      600: '#BE02CE',\n      700: '#8D0099',\n      800: '#6E0077',\n      900: '#4E0055',\n    },\n    navy: {\n      50: '#522ED1',\n      100: '#401FB7',\n      200: '#3719A6',\n      300: '#2F1298',\n      400: '#1F0777',\n      500: '#150942',\n      600: '#0E052F',\n      700: '#0B0B22',\n      800: '#0A0A25',\n      900: '#06061B',\n    },\n    error: '#FF4A60', // red.400,\n    success: '#34EDB3', //green.500\n    warning: '#FC8738', // orange.500\n  },\n  shadows: {\n    outline: '0 0 0 3px rgba(0, 209, 255, 1)',\n  },\n  fonts: {\n    heading:\n      'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n    body: 'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n    display:\n      '\"GT America Condensed\", Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n    mono: '\"GT America Mono\", SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace',\n  },\n  components: {\n    Popover: {\n      variants: {\n        responsive: {\n          popper: {\n            maxWidth: 'unset',\n            width: 'unset',\n          },\n        },\n      },\n    },\n    Button,\n    Input,\n    Select,\n    NumberInput,\n    Alert,\n    Textarea,\n    Skeleton,\n    Checkbox,\n    Radio,\n    Badge,\n    Tag,\n    Accordion,\n    Progress,\n    Tabs,\n    Tooltip,\n    Switch,\n    Spinner,\n    Menu,\n  },\n  // To be imported and used with the bgGradient prop\n  // See: https://chakra-ui.com/docs/styled-system/gradient#background-gradient-api\n  gradients,\n  textStyles: {\n    'heading-4xl': {\n      fontSize: { base: '60px', lg: '72px' },\n      fontFamily: 'heading',\n      lineHeight: { base: '57.6px', lg: '72px' },\n      fontWeight: 700,\n    },\n    'heading-3xl': {\n      fontSize: { base: '48px', md: '60px' },\n      fontFamily: 'heading',\n      lineHeight: { base: '57.6px', md: '72px', lg: '60px' },\n      fontWeight: 700,\n    },\n    'heading-2xl': {\n      fontSize: { base: '36px', md: '48px' },\n      fontFamily: 'heading',\n      lineHeight: { base: '120%' },\n      fontWeight: 700,\n    },\n    'heading-xl': {\n      fontSize: { base: '30px', lg: '36px' },\n      fontFamily: 'heading',\n      lineHeight: { base: '36px', lg: '120%' },\n      fontWeight: 700,\n    },\n    'heading-lg': {\n      fontSize: { base: '24px', lg: '30px' },\n      fontFamily: 'heading',\n      lineHeight: { base: '28.8px', lg: '36px' },\n      fontWeight: 700,\n    },\n    'heading-md': {\n      fontSize: { base: '20px', lg: '24px' },\n      fontFamily: 'heading',\n      lineHeight: '24px',\n      fontWeight: 700,\n    },\n    'heading-sm': {\n      fontSize: '16px',\n      fontFamily: 'heading',\n      lineHeight: '19.2px',\n      fontWeight: 700,\n    },\n    'heading-xs': {\n      fontSize: '14px',\n      fontFamily: 'heading',\n      lineHeight: '16.8px',\n      fontWeight: 700,\n    },\n  },\n  sizes: {\n    px: '1px',\n    0.5: '0.125rem',\n    1: '0.25rem',\n    1.5: '0.375rem',\n    2: '0.5rem',\n    2.5: '0.625rem',\n    3: '0.75rem',\n    3.5: '0.875rem',\n    4: '1rem',\n    5: '1.25rem',\n    6: '1.5rem',\n    7: '1.75rem',\n    8: '2rem',\n    9: '2.25rem',\n    10: '2.5rem',\n    12: '3rem',\n    14: '3.5rem',\n    16: '4rem',\n    20: '5rem',\n    24: '6rem',\n    28: '7rem',\n    32: '8rem',\n    36: '9rem',\n    40: '10rem',\n    44: '11rem',\n    48: '12rem',\n    52: '13rem',\n    56: '14rem',\n    60: '15rem',\n    64: '16rem',\n    72: '18rem',\n    80: '20rem',\n    96: '24rem',\n    max: 'max-content',\n    min: 'min-content',\n    full: '100%',\n    '3xs': '14rem',\n    '2xs': '16rem',\n    xs: '20rem',\n    sm: '24rem',\n    md: '28rem',\n    lg: '32rem',\n    xl: '36rem',\n    '2xl': '42rem',\n    '3xl': '48rem',\n    '4xl': '56rem',\n    '5xl': '64rem',\n    '6xl': '72rem',\n    '7xl': '80rem',\n    '8xl': '90rem',\n    container: {\n      sm: '640px',\n      md: '768px',\n      lg: '1024px',\n      xl: '1280px',\n    },\n  },\n  styles: {\n    global: {\n      body: {\n        bg: 'navy.900',\n      },\n    },\n  },\n});\n","import { Global } from '@emotion/react';\n\nexport const Fonts = () => (\n  <Global\n    styles={`\n      @import url('https://fonts.googleapis.com/css2?family=Inter:wght@200..700&display=swap');\n      @font-face {\n        font-family: 'GT America Condensed';\n        font-style: normal;\n        font-display: swap;\n        font-weight: 700;\n        src: local('GT America Condensed'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Bold.woff2') format('woff2'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Bold.woff') format('woff'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Bold.otf') format('opentype');\n      }\n      @font-face {\n        font-family: 'GT America Condensed';\n        font-style: italic;\n        font-display: swap;\n        font-weight: 700;\n        src: local('GT America Condensed'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Bold%20Italic.woff2')\n            format('woff2'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Bold%20Italic.woff')\n            format('woff'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Bold%20Italic.otf')\n            format('opentype');\n      }\n      @font-face {\n        font-family: 'GT America Condensed';\n        font-style: normal;\n        font-display: swap;\n        font-weight: 100;\n        src: local('GT America Condensed'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Thin.woff2') format('woff2'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Thin.woff') format('woff'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Thin.otf') format('opentype');\n      }\n      @font-face {\n        font-family: 'GT America Condensed';\n        font-style: italic;\n        font-display: swap;\n        font-weight: 100;\n        src: local('GT America Condensed'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Thin%20Italic.woff2')\n            format('woff2'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Thin%20Italic.woff')\n            format('woff'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Thin%20Italic.otf')\n            format('opentype');\n      }\n      @font-face {\n        font-family: 'GT America Mono';\n        font-style: normal;\n        font-display: swap;\n        font-weight: 700;\n        src: local('GT America Mono'),\n          url('https://fonts.synthetix.io/GT%20America%20Mono%20Bold.woff2') format('woff2'),\n          url('https://fonts.synthetix.io/GT%20America%20Mono%20Bold.woff') format('woff'),\n          url('https://fonts.synthetix.io/GT%20America%20Mono%20Bold.otf') format('opentype');\n      }\n      @font-face {\n        font-family: 'Lustra Text';\n        font-style: normal;\n        font-display: swap;\n        font-weight: 400;\n        src: local('Lustra Text'),\n          url('https://fonts.synthetix.io/Lustra%20Text%20Thin.otf') format('opentype');\n      }\n    `}\n  />\n);\n","import {\n  Box,\n  Button,\n  Link,\n  ListItem,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  UnorderedList,\n} from '@chakra-ui/react';\nimport { SESSION_STORAGE_KEYS } from '@snx-v3/constants';\nimport { theme } from '@snx-v3/theme';\nimport { useState } from 'react';\nimport { Link as ReactRouterLink } from 'react-router-dom';\n\ninterface TermsModalProps {\n  defaultOpen: boolean;\n}\n\nexport const TermsModal = ({ defaultOpen = true }: TermsModalProps) => {\n  const [isOpen, setOpen] = useState(defaultOpen);\n  const [enabled, setEnabled] = useState(false);\n\n  const onSubmit = () => {\n    if (enabled) {\n      localStorage.setItem(SESSION_STORAGE_KEYS.TERMS_CONDITIONS_ACCEPTED, JSON.stringify(true));\n      setOpen(false);\n    }\n  };\n\n  return (\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    <Modal isOpen={isOpen} onClose={() => {}}>\n      <ModalOverlay />\n      <ModalContent\n        bgGradient={theme.gradients['dark'][500]}\n        pt=\"10\"\n        pb=\"3\"\n        borderWidth=\"1px\"\n        borderColor=\"gray.900\"\n        data-cy=\"transaction modal\"\n      >\n        <ModalHeader py={0} textAlign=\"center\">\n          Synthetix Terms of Service\n        </ModalHeader>\n        <ModalBody fontSize=\"xs\" color=\"gray.600\">\n          <Text fontSize=\"sm\">\n            By clicking “I Agree” below, you agree to be bound by the terms of this Agreement. As\n            such, you fully understand that:\n          </Text>\n          <Box\n            onScroll={(e) => {\n              const div = e.currentTarget;\n              const scrollTopWithTolerance = div.scrollTop + 10;\n              if (scrollTopWithTolerance >= div.scrollHeight - div.offsetHeight) {\n                setEnabled(true);\n              } else {\n                setEnabled(false);\n              }\n            }}\n            as=\"div\"\n            my={2}\n            py={3}\n            height=\"350px\"\n            overflow=\"auto\"\n            overflowX=\"scroll\"\n            sx={{\n              '::-webkit-scrollbar': {\n                display: 'block',\n              },\n              '::-webkit-scrollbar-track': {\n                backgroundColor: 'transparent',\n              },\n              '::-webkit-scrollbar-track-piece': {\n                backgroundColor: 'transparent',\n              },\n              '::-webkit-scrollbar-corner': {\n                backgroundColor: 'transparent',\n              },\n            }}\n          >\n            <UnorderedList>\n              <Text fontSize=\"14px\">\n                <ListItem>\n                  <Link\n                    href=\"https://synthetix.io/\"\n                    target=\"_blank\"\n                    color=\"cyan.500\"\n                    _focusVisible={{ outline: 'none' }}\n                  >\n                    Synthetix{' '}\n                  </Link>\n                  is a blockchain-based decentralized finance project. You are participating at your\n                  own risk.\n                </ListItem>\n                <ListItem mt={2}>\n                  Synthetix is offered for use “as is” and without any guarantees regarding\n                  security. The protocol is made up of immutable code and can be accessed through a\n                  variety of user interfaces.\n                </ListItem>\n                <ListItem mt={2}>\n                  No central entity operates the Synthetix protocol. Decisions related to the\n                  protocol are governed by a dispersed group of participants who collectively govern\n                  and maintain the protocol.\n                </ListItem>\n                <ListItem mt={2}>\n                  Synthetix DAO does not unilaterally offer, maintain, operate, administer, or\n                  control any trading interfaces. The only user interfaces maintained by Synthetix\n                  DAO are the governance and liquidity interfaces herein.\n                </ListItem>\n                <ListItem mt={2}>\n                  You can participate in the governance process by staking SNX tokens in accordance\n                  with the rules and parameters summarized{' '}\n                  <Link\n                    href=\"https://governance.synthetix.io/\"\n                    target=\"_blank\"\n                    color=\"cyan.500\"\n                    _focusVisible={{ outline: 'none' }}\n                  >\n                    here\n                  </Link>\n                  , and/or joining the{' '}\n                  <Link\n                    color=\"cyan.500\"\n                    target=\"_blank\"\n                    href=\"https://discord.com/invite/synthetix\"\n                    _focusVisible={{ outline: 'none' }}\n                  >\n                    Synthetix Discord\n                  </Link>{' '}\n                  and contributing to the conversation.\n                </ListItem>\n                <ListItem mt={2}>\n                  The rules and parameters associated with the Synthetix protocol and Synthetix DAO\n                  governance are subject to change at any time.\n                </ListItem>\n                <ListItem mt={2}>\n                  Your use of Synthetix is conditioned upon your acceptance to be bound by the\n                  Synthetix Term of Use, which can be found{' '}\n                  <Link\n                    as={ReactRouterLink}\n                    to=\"/terms\"\n                    target=\"_blank\"\n                    color=\"cyan.500\"\n                    _focusVisible={{ outline: 'none' }}\n                  >\n                    here\n                  </Link>\n                  .\n                </ListItem>\n                <ListItem mt={2}>\n                  The laws that apply to your use of Synthetix may vary based upon the jurisdiction\n                  in which you are located. We strongly encourage you to speak with legal counsel in\n                  your jurisdiction if you have any questions regarding your use of Synthetix.\n                </ListItem>\n                <ListItem mt={2}>\n                  By entering into this agreement, you are not agreeing to enter into a partnership.\n                  You understand that Synthetix is a decentralized protocol provided on an “as is”\n                  basis.\n                </ListItem>\n                <ListItem mt={2}>\n                  You hereby release all present and future claims against Synthetix DAO related to\n                  your use of the protocol, the SNX token, SNX DAO governance, and any other facet\n                  of the protocol.\n                </ListItem>\n                <ListItem mt={2}>\n                  You agree to indemnify and hold harmless SNX DAO and its affiliates for any costs\n                  arising out of or relating to your use of the Synthetix protocol.\n                </ListItem>\n                <ListItem mt={2}>\n                  You are not accessing the protocol from Burma (Myanmar), Cuba, Iran, Sudan, Syria,\n                  the Western Balkans, Belarus, Côte d’Ivoire, Democratic Republic of the Congo,\n                  Iraq, Lebanon, Liberia, Libya, North Korea, Russia, certain sanctioned areas of\n                  Ukraine, Somalia, Venezuela, Yemen, or Zimbabwe (collectively, “Prohibited\n                  Jurisdictions”), or any other jurisdiction listed as a Specially Designated\n                  National by the United States Office of Foreign Asset Control (“OFAC”).\n                </ListItem>\n              </Text>\n            </UnorderedList>\n          </Box>\n        </ModalBody>\n        <Button\n          variant=\"outline\"\n          _focusVisible={{ outline: 'none' }}\n          my={4}\n          mx={6}\n          onClick={onSubmit}\n          isDisabled={!enabled}\n        >\n          I agree\n        </Button>\n      </ModalContent>\n    </Modal>\n  );\n};\n","import { appMetadata, NETWORKS } from '@snx-v3/useBlockchain';\nimport coinbaseModule from '@web3-onboard/coinbase';\nimport type { ChainWithDecimalId } from '@web3-onboard/common';\nimport gnosisModule from '@web3-onboard/gnosis';\nimport injectedModule, { ProviderLabel } from '@web3-onboard/injected-wallets';\nimport ledgerModule from '@web3-onboard/ledger';\nimport { init } from '@web3-onboard/react';\nimport trezorModule from '@web3-onboard/trezor';\nimport walletConnectModule from '@web3-onboard/walletconnect';\n\n// Filter networks to only supported ones\nexport const chains: ChainWithDecimalId[] = Object.values(\n  NETWORKS.reduce((result, network) => {\n    if (!network.isSupported) {\n      return result;\n    }\n    if (network.id in result) {\n      // We cannot have duplicate chains, but we can have multiple deployments per chain\n      return result;\n    }\n    return Object.assign(result, {\n      [network.id]: {\n        id: network.id,\n        token: network.token,\n        label: network.label,\n        rpcUrl: network.rpcUrl,\n        publicRpcUrl: network.publicRpcUrl,\n      },\n    });\n  }, {})\n);\n\nexport const onboard = init({\n  theme: 'dark',\n  connect: {\n    autoConnectLastWallet: true,\n    autoConnectAllPreviousWallet: true,\n  },\n  wallets: window.$magicWallet\n    ? [injectedModule()]\n    : [\n        coinbaseModule(),\n        injectedModule({ displayUnavailable: [ProviderLabel.MetaMask, ProviderLabel.Trust] }),\n        trezorModule({\n          appUrl: 'https://liquidity.synthetix.io',\n          email: 'info@synthetix.io',\n        }),\n        ledgerModule({\n          projectId: 'd6eac005846a1c3be1f8eea3a294eed9',\n          walletConnectVersion: 2,\n        }),\n        walletConnectModule({\n          version: 2,\n          projectId: 'd6eac005846a1c3be1f8eea3a294eed9',\n          dappUrl: 'liquidity.synthetix.io',\n        }),\n        gnosisModule(),\n      ],\n  chains,\n  appMetadata: {\n    ...appMetadata,\n    name: 'Synthetix Liquidity',\n  },\n  accountCenter: {\n    desktop: {\n      enabled: false,\n    },\n    mobile: {\n      enabled: false,\n    },\n  },\n  notify: {\n    enabled: false,\n  },\n});\n","import React from 'react';\nimport { createSearchParams, useSearchParams } from 'react-router-dom';\nimport { z } from 'zod';\n\nexport const HomePageSchema = z.object({\n  page: z.literal('home').optional(),\n  accountId: z.string().optional(),\n  showAll: z.string().optional(),\n});\nexport type HomePageSchemaType = z.infer<typeof HomePageSchema>;\n\nexport const SettingsPageSchema = z.object({\n  page: z.literal('settings'),\n  accountId: z.string().optional(),\n});\nexport type SettingsPageSchemaType = z.infer<typeof SettingsPageSchema>;\n\nexport const ManageActionSchema = z.union([\n  z.literal('deposit'),\n  z.literal('repay'),\n  z.literal('claim'),\n  z.literal('undelegate'),\n  z.literal('withdraw'),\n  z.literal('withdraw-debt'),\n  z.literal('close'),\n  z.literal('locked'),\n]);\nexport type ManageActionType = z.infer<typeof ManageActionSchema>;\n\nexport const PositionPageSchema = z.object({\n  page: z.literal('position'),\n  collateralSymbol: z.string(),\n  manageAction: ManageActionSchema,\n  accountId: z.string().optional(),\n});\nexport type PositionPageSchemaType = z.infer<typeof PositionPageSchema>;\n\nconst AllowedQueriesSchema = z.union([HomePageSchema, SettingsPageSchema, PositionPageSchema]);\ntype AllowedQueriesType = z.infer<typeof AllowedQueriesSchema>;\n\nexport function searchParamsToObject(searchParams: URLSearchParams) {\n  const params = Object.fromEntries(Array.from(searchParams));\n\n  for (const schema of [HomePageSchema, SettingsPageSchema, PositionPageSchema]) {\n    const parsed = schema.safeParse(params);\n    if (parsed.success) {\n      return parsed.data;\n    }\n  }\n  console.error('Route cannot be matched', params);\n  return {}; // Go to homepage\n}\n\nexport function sortObject(params: AllowedQueriesType): AllowedQueriesType {\n  return Object.fromEntries(Object.entries(params).sort(([a], [b]) => a.localeCompare(b)));\n}\n\nexport function cleanObject(params: AllowedQueriesType): AllowedQueriesType {\n  const cleaned = Object.entries(params).filter(([, value]) => value !== undefined);\n  return Object.fromEntries(cleaned);\n}\n\nexport function makeParams(newParams: AllowedQueriesType) {\n  return createSearchParams(sortObject(cleanObject(newParams)));\n}\n\nexport function makeSearch(newParams: AllowedQueriesType) {\n  return makeParams(newParams).toString();\n}\n\nexport function useParams<T = AllowedQueriesType>(): [T, (newParams: AllowedQueriesType) => void] {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const params = React.useMemo(() => searchParamsToObject(searchParams) as T, [searchParams]);\n\n  const setParams = React.useCallback(\n    (newParams: AllowedQueriesType): void => {\n      setSearchParams(makeParams(newParams));\n    },\n    [setSearchParams]\n  );\n\n  return [params, setParams];\n}\n","import { ethers } from 'ethers';\nimport { wei, WeiSource } from '@synthetixio/wei';\n\nexport const formatValue = (value: ethers.BigNumberish, decimals = 18) =>\n  parseFloat(ethers.utils.formatUnits(value, decimals));\n\nexport const parseUnits = (value: WeiSource, decimals = 18) => wei(value, decimals).toBN();\n\nexport const compareAddress = (add1: string | null = '', add2: string | null = '') =>\n  !!add1 && !!add2 && add1.toLowerCase() === add2.toLowerCase();\n\nexport const prettyString = (text: string, startLength = 6, endLength = 4) => {\n  if (text.length <= startLength + endLength) {\n    return text;\n  }\n  return `${text.substring(0, startLength)}...${text.substring(text.length - endLength)}`;\n};\n\nexport function renderAccountId(accountId?: ethers.BigNumber) {\n  if (!accountId) {\n    return '---';\n  }\n  const hex = accountId.toHexString();\n  // auto-generated 0x80000000000000000000000000000008 value\n  if (hex.length === 34) {\n    return `${hex.slice(0, 5)}...${hex.slice(-6)}`;\n  }\n  return `#${accountId}`;\n}\n","import { Wei } from '@synthetixio/wei';\nimport numbro from 'numbro';\n\nexport function currency(value?: Wei) {\n  try {\n    if (!value) {\n      return '-';\n    }\n    if (value.eq(0)) {\n      return '0.00';\n    }\n    if (value.abs().lt(0.01)) {\n      return value.toString();\n    }\n    const number = value.toNumber();\n    const m2 = numbro(number).format({\n      thousandSeparated: false,\n      mantissa: 2,\n    });\n    const m0 = numbro(number).format({\n      thousandSeparated: false,\n      mantissa: 0,\n    });\n    // Strip unnecessary .00\n    return parseFloat(m2) === parseFloat(m0)\n      ? numbro(number).format({\n          thousandSeparated: true,\n          mantissa: 0,\n        })\n      : numbro(number).format({\n          thousandSeparated: true,\n          mantissa: 2,\n        });\n  } catch {\n    return `${value}`;\n  }\n}\n","export async function importAccountProxy(\n  chainId?: number,\n  preset?: string\n): Promise<{ address: string; abi: string[] }> {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/meta.json'),\n        import('@synthetixio/v3-contracts/1-main/AccountProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.AccountProxy, abi };\n    }\n    case '11155111-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/meta.json'),\n        import('@synthetixio/v3-contracts/11155111-main/AccountProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.AccountProxy, abi };\n    }\n    case '10-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/meta.json'),\n        import('@synthetixio/v3-contracts/10-main/AccountProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.AccountProxy, abi };\n    }\n    case '8453-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/8453-andromeda/AccountProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.AccountProxy, abi };\n    }\n    case '84532-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/84532-andromeda/AccountProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.AccountProxy, abi };\n    }\n    case '42161-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/meta.json'),\n        import('@synthetixio/v3-contracts/42161-main/AccountProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.AccountProxy, abi };\n    }\n    case '421614-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/meta.json'),\n        import('@synthetixio/v3-contracts/421614-main/AccountProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.AccountProxy, abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for AccountProxy`);\n    }\n  }\n}\n","import { importAccountProxy } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useAccountProxy(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'AccountProxy'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw new Error('OMFG');\n      return importAccountProxy(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","import { useAccountProxy } from '@snx-v3/useAccountProxy';\nimport { useProvider, useSigner, useWallet } from '@snx-v3/useBlockchain';\nimport { useMutation } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\n\nconst log = debug('snx:useTransferAccountId');\n\nexport function useTransferAccountId(to: string, accountId: ethers.BigNumber) {\n  const { data: AccountProxy } = useAccountProxy();\n  const { activeWallet } = useWallet();\n  const signer = useSigner();\n  const provider = useProvider();\n  const walletAddress = activeWallet?.address;\n\n  return useMutation({\n    mutationFn: async () => {\n      if (!AccountProxy) throw new Error('AccountProxy not defined');\n      if (!(walletAddress && signer && provider)) throw new Error('Wallet is not connected');\n      const AccountProxyContract = new ethers.Contract(\n        AccountProxy.address,\n        AccountProxy.abi,\n        signer\n      );\n      const txn = await AccountProxyContract.transferFrom(walletAddress, to, accountId);\n      log('txn', txn);\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n      return receipt;\n    },\n  });\n}\n","import {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  Button,\n  Divider,\n  Flex,\n  Input,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Spinner,\n  Text,\n} from '@chakra-ui/react';\nimport { renderAccountId } from '@snx-v3/format';\nimport { useTransferAccountId } from '@snx-v3/useTransferAccountId';\nimport { ethers } from 'ethers';\nimport { useMemo, useState } from 'react';\n\nexport function TransferOwnershipModal({\n  isOpen,\n  onClose,\n  accountId,\n  refetch,\n  owner,\n}: {\n  isOpen: boolean;\n  onClose: () => void;\n  accountId: ethers.BigNumber;\n  owner: string;\n  refetch: () => void;\n}) {\n  const [to, setTo] = useState('');\n  const { isPending, mutateAsync: submit } = useTransferAccountId(to, accountId);\n\n  const isTargetValid = useMemo(\n    () => ethers.utils.isAddress(to) && to.toLowerCase() !== owner.toLowerCase(),\n    [owner, to]\n  );\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent pb={1} border=\"1px solid\" rounded=\"base\" borderColor=\"gray.900\" bg=\"navy.700\">\n        <ModalHeader>Transfer Ownership</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <Divider />\n          <Text fontSize=\"18px\" fontWeight={700} mt=\"4\">\n            Account {renderAccountId(accountId)}\n          </Text>\n          <Text fontSize=\"14px\" color=\"white\" mt=\"2\">\n            Will be transferred from:\n          </Text>\n          <Input mt=\"2\" bg=\"navy.900\" disabled value={owner} />\n          <Text fontSize=\"14px\" color=\"white\" mt=\"2\">\n            Will be transferred to:\n          </Text>\n          <Input\n            mt=\"2\"\n            bg=\"navy.900\"\n            onChange={(e) => {\n              setTo(e.target.value.trim());\n            }}\n            value={to}\n          />\n        </ModalBody>\n        <ModalFooter display=\"flex\" flexDirection=\"column\" gap={4} justifyContent=\"center\">\n          <Alert status=\"warning\" borderRadius=\"6px\">\n            <AlertIcon />\n            <Flex direction=\"column\">\n              <AlertDescription>This action cannot be undone</AlertDescription>\n            </Flex>\n          </Alert>\n\n          {isPending ? (\n            <Spinner color=\"cyan\" />\n          ) : (\n            <Button\n              w=\"100%\"\n              onClick={() =>\n                submit().then(() => {\n                  setTo('');\n                  refetch();\n                  onClose();\n                })\n              }\n              isDisabled={!isTargetValid}\n            >\n              Confirm\n            </Button>\n          )}\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n","export function etherscanLink({\n  chain,\n  address,\n  isTx = false,\n}: {\n  chain: string;\n  address: string;\n  isTx?: boolean;\n}): string {\n  switch (chain) {\n    case 'sepolia':\n      return `https://sepolia.etherscan.io/${isTx ? 'tx' : 'address'}/${address}`;\n    case 'arbitrum':\n      return `https://arbiscan.io/${isTx ? 'tx' : 'address'}/${address}`;\n    case 'optimism':\n      return `https://optimistic.etherscan.io/${isTx ? 'tx' : 'address'}/${address}`;\n    case 'base':\n      return `https://basescan.org/${isTx ? 'tx' : 'address'}/${address}`;\n    case 'base-sepolia':\n      return `https://sepolia.basescan.org/${isTx ? 'tx' : 'address'}/${address}`;\n    case 'mainnet':\n    default:\n      return `https://etherscan.io/${isTx ? 'tx' : 'address'}/${address}`;\n  }\n}\n\nexport function transactionLink({\n  chainId,\n  txnHash,\n}: {\n  chainId?: number;\n  txnHash?: string | null;\n}) {\n  switch (chainId) {\n    case 1:\n      return `https://etherscan.io/tx/${txnHash}`;\n    case 11155420:\n      return `https://sepolia.etherscan.io/tx/${txnHash}`;\n    case 42161:\n      return `https://arbiscan.io/tx/${txnHash}`;\n    case 421614:\n      return `https://sepolia.arbiscan.io/tx/${txnHash}`;\n    case 10:\n      return `https://optimistic.etherscan.io/tx/${txnHash}`;\n    case 8453:\n      return `https://basescan.org/tx/${txnHash}`;\n    case 84532:\n      return `https://sepolia.basescan.org/tx/${txnHash}`;\n  }\n}\n","import { CopyIcon, ExternalLinkIcon } from '@chakra-ui/icons';\nimport { Flex, Tooltip } from '@chakra-ui/react';\nimport { etherscanLink } from '@snx-v3/etherscanLink';\nimport { prettyString } from '@snx-v3/format';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { FC, useMemo } from 'react';\n\ninterface AddressProps {\n  address: string;\n}\n\nexport const Address: FC<AddressProps> = ({ address }) => {\n  const { network } = useNetwork();\n  const link = useMemo(\n    () =>\n      etherscanLink({\n        chain: network?.name || '',\n        address,\n      }),\n    [address, network?.name]\n  );\n  return (\n    <Flex alignItems=\"center\" gap={2}>\n      <Tooltip label={address}>{prettyString(address)}</Tooltip>\n      <CopyIcon\n        onClick={() => {\n          navigator.clipboard.writeText(address);\n        }}\n        cursor=\"pointer\"\n        _hover={{\n          color: 'cyan',\n        }}\n      />\n      <a target=\"_blank\" href={link} rel=\"noreferrer\">\n        <ExternalLinkIcon\n          _hover={{\n            color: 'cyan',\n          }}\n        />\n      </a>\n    </Flex>\n  );\n};\n","export async function importCoreProxy(\n  chainId?: number,\n  preset?: string\n): Promise<{ address: string; abi: string[] }> {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/meta.json'),\n        import('@synthetixio/v3-contracts/1-main/CoreProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.CoreProxy, abi };\n    }\n    case '11155111-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/meta.json'),\n        import('@synthetixio/v3-contracts/11155111-main/CoreProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.CoreProxy, abi };\n    }\n    case '10-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/meta.json'),\n        import('@synthetixio/v3-contracts/10-main/CoreProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.CoreProxy, abi };\n    }\n    case '8453-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/8453-andromeda/CoreProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.CoreProxy, abi };\n    }\n    case '84532-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/84532-andromeda/CoreProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.CoreProxy, abi };\n    }\n    case '42161-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/meta.json'),\n        import('@synthetixio/v3-contracts/42161-main/CoreProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.CoreProxy, abi };\n    }\n    case '421614-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/meta.json'),\n        import('@synthetixio/v3-contracts/421614-main/CoreProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.CoreProxy, abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for CoreProxy`);\n    }\n  }\n}\n","import { importCoreProxy } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useCoreProxy(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'CoreProxy'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw 'OMFG';\n      return importCoreProxy(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","export async function importTrustedMulticallForwarder(\n  chainId?: number,\n  preset?: string\n): Promise<{ address: string; abi: string[] }> {\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/meta.json'),\n        import('@synthetixio/v3-contracts/1-main/TrustedMulticallForwarder.readable.json'),\n      ]);\n      return { address: meta.contracts.TrustedMulticallForwarder, abi };\n    }\n    case '11155111-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/meta.json'),\n        import('@synthetixio/v3-contracts/11155111-main/TrustedMulticallForwarder.readable.json'),\n      ]);\n      return { address: meta.contracts.TrustedMulticallForwarder, abi };\n    }\n    case '10-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/meta.json'),\n        import('@synthetixio/v3-contracts/10-main/TrustedMulticallForwarder.readable.json'),\n      ]);\n      return { address: meta.contracts.TrustedMulticallForwarder, abi };\n    }\n    case '8453-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/8453-andromeda/TrustedMulticallForwarder.readable.json'),\n      ]);\n      return { address: meta.contracts.TrustedMulticallForwarder, abi };\n    }\n    case '84532-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/84532-andromeda/TrustedMulticallForwarder.readable.json'),\n      ]);\n      return { address: meta.contracts.TrustedMulticallForwarder, abi };\n    }\n    case '42161-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/meta.json'),\n        import('@synthetixio/v3-contracts/42161-main/TrustedMulticallForwarder.readable.json'),\n      ]);\n      return { address: meta.contracts.TrustedMulticallForwarder, abi };\n    }\n    case '421614-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/meta.json'),\n        import('@synthetixio/v3-contracts/421614-main/TrustedMulticallForwarder.readable.json'),\n      ]);\n      return { address: meta.contracts.TrustedMulticallForwarder, abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for Multicall3`);\n    }\n  }\n}\n","import { importTrustedMulticallForwarder } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useTrustedMulticallForwarder(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'Multicall3'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw new Error('OMFG');\n      return importTrustedMulticallForwarder(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","import { useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useTrustedMulticallForwarder } from '@snx-v3/useTrustedMulticallForwarder';\nimport { useMutation } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\n\nconst log = debug('snx:useManagePermissions');\n\ntype Permissions = Array<string>;\nconst getPermissionDiff = (\n  existing: Permissions,\n  selected: Permissions\n): {\n  grants: Permissions;\n  revokes: Permissions;\n} => {\n  let grants: Permissions = [],\n    revokes: Permissions = [];\n  existing.concat(selected).forEach((permission) => {\n    if (!existing.includes(permission)) {\n      grants = [...grants, permission];\n    }\n    if (!selected.includes(permission)) {\n      revokes = [...revokes, permission];\n    }\n  });\n  return { grants, revokes };\n};\n\nexport const useManagePermissions = ({\n  accountId,\n  target,\n  existing = [],\n  selected = [],\n}: {\n  accountId: ethers.BigNumber;\n  target: string;\n  existing: Permissions;\n  selected: Permissions;\n}) => {\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: Multicall3 } = useTrustedMulticallForwarder();\n  const signer = useSigner();\n  const provider = useProvider();\n\n  return useMutation({\n    mutationFn: async () => {\n      if (!(CoreProxy && Multicall3 && signer && provider)) {\n        throw 'OMFG';\n      }\n\n      const { grants, revokes } = getPermissionDiff(existing, selected);\n\n      try {\n        const CoreProxyInterface = new ethers.utils.Interface(CoreProxy.abi);\n\n        const grantCalls = grants.map((permission) => ({\n          target: CoreProxy.address,\n          callData: CoreProxyInterface.encodeFunctionData('grantPermission', [\n            accountId,\n            ethers.utils.formatBytes32String(permission),\n            target,\n          ]),\n          allowFailure: false,\n          requireSuccess: true,\n        }));\n\n        const revokeCalls = revokes.map((permission) => ({\n          target: CoreProxy.address,\n          callData: CoreProxyInterface.encodeFunctionData('revokePermission', [\n            accountId,\n            ethers.utils.formatBytes32String(permission),\n            target,\n          ]),\n          allowFailure: false,\n          requireSuccess: true,\n        }));\n\n        const Multicall3Contract = new ethers.Contract(Multicall3.address, Multicall3.abi, signer);\n        const txn = await Multicall3Contract.aggregate3([...grantCalls, ...revokeCalls]);\n        log('txn', txn);\n        const receipt = await provider.waitForTransaction(txn.hash);\n        log('receipt', receipt);\n      } catch (error: any) {\n        throw error;\n      }\n    },\n  });\n};\n","export const permissionsList = ['ADMIN', 'BURN', 'DELEGATE', 'MINT', 'REWARDS', 'WITHDRAW'];\n","import { stringToHash } from './stringToHash';\n\nexport function contractsHash(Contracts: ({ address: string } | undefined)[]) {\n  // If any of the contracts are undefined - treat all as undefined.\n  // We only care when we have all contracts ready\n  if (Contracts.some((Contract) => Contract === undefined)) {\n    return '~';\n  }\n  return stringToHash(\n    Contracts.map((Contract) => Contract?.address.toLowerCase() || '')\n      .sort()\n      .join()\n  );\n}\n","export function stringToHash(s: string | undefined) {\n  return (s || '').split('').reduce(function (a, b) {\n    a = (a << 5) - a + b.charCodeAt(0);\n    return a & a;\n  }, 0);\n}\n","import { contractsHash } from '@snx-v3/tsHelpers';\nimport { useAccountProxy } from '@snx-v3/useAccountProxy';\nimport { useNetwork, useProvider } from '@snx-v3/useBlockchain';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useQuery } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\n\nexport function useAccountPermissions(accountId?: ethers.BigNumber) {\n  const { data: CoreProxy } = useCoreProxy();\n  const { network } = useNetwork();\n  const provider = useProvider();\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'AccountPermissions',\n      { accountId },\n      { contractsHash: contractsHash([CoreProxy]) },\n    ],\n    enabled: Boolean(provider && CoreProxy && accountId),\n    queryFn: async function () {\n      if (!(provider && CoreProxy && accountId)) throw 'OMFG';\n      const CoreProxyContract = new ethers.Contract(CoreProxy.address, CoreProxy.abi, provider);\n      const permissions = await CoreProxyContract.getAccountPermissions(accountId);\n      return permissions.reduce(\n        (\n          acc: { [key: string]: string[] },\n          { user, permissions }: { user: string; permissions: string[] }\n        ) => ({\n          ...acc,\n          [user.toLowerCase()]: permissions.map((r: string) => ethers.utils.parseBytes32String(r)),\n        }),\n        {}\n      );\n    },\n  });\n}\n\nexport function useAccountOwner(accountId?: ethers.BigNumber) {\n  const { data: AccountProxy } = useAccountProxy();\n  const { network } = useNetwork();\n  const provider = useProvider();\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'AccountOwner',\n      { accountId },\n      { contractsHash: contractsHash([AccountProxy]) },\n    ],\n    enabled: Boolean(provider && AccountProxy && accountId),\n    queryFn: async function () {\n      if (!(provider && AccountProxy && accountId)) throw 'OMFG';\n      const AccountProxyContract = new ethers.Contract(\n        AccountProxy.address,\n        AccountProxy.abi,\n        provider\n      );\n      return (await AccountProxyContract.ownerOf(accountId)) as string;\n    },\n  });\n}\n","/* eslint-disable react/no-unescaped-entities */\nimport { InfoIcon } from '@chakra-ui/icons';\nimport { Text, Tooltip } from '@chakra-ui/react';\n\nexport function PermissionsInfo() {\n  return (\n    <Tooltip\n      label={\n        <>\n          <Text fontWeight={600} textAlign=\"left\">\n            ADMIN: Full control over the account, except for transferring ownership <br />\n            WITHDRAW: Ability to withdraw collateral from the account\n            <br />\n            REWARDS: Ability to claim rewards on behalf of the account\n            <br />\n            MINT: Ability to mint snxUSD using the account's collateral\n            <br />\n            DELEGATE: Ability to delegate the account's collateral to pools\n          </Text>\n        </>\n      }\n    >\n      <InfoIcon ml={1.5} w=\"10px\" h=\"10px\" />\n    </Tooltip>\n  );\n}\n","import {\n  Badge,\n  Button,\n  Divider,\n  Flex,\n  Input,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Spinner,\n  Text,\n} from '@chakra-ui/react';\nimport { useAccountOwner, useAccountPermissions } from '@snx-v3/useAccountPermissions';\nimport { useManagePermissions } from '@snx-v3/useManagePermissions';\nimport { ethers, utils } from 'ethers';\nimport { useEffect, useMemo, useState } from 'react';\nimport { permissionsList } from './AccountPermissions';\nimport { PermissionsInfo } from './PermissionsInfo';\n\nexport function PermissionModal({\n  accountId,\n  isOpen,\n  onClose,\n  refetch,\n  existingPermissions,\n  target,\n}: {\n  accountId: ethers.BigNumber;\n  target?: string;\n  existingPermissions?: string[];\n  isOpen: boolean;\n  onClose: () => void;\n  refetch: () => void;\n}) {\n  const [address, setAddress] = useState(target || '');\n  const [selectedPermissions, setSelectedPermissions] = useState<string[]>([\n    ...(existingPermissions || []),\n  ]);\n  const { mutateAsync: submit, isPending } = useManagePermissions({\n    target: address,\n    accountId,\n    existing: existingPermissions || [],\n    selected: selectedPermissions,\n  });\n\n  const { data: permissionData } = useAccountPermissions(accountId);\n  const { data: accountOwner } = useAccountOwner(accountId);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setSelectedPermissions([...(existingPermissions || [])]);\n    }\n  }, [existingPermissions, isOpen]);\n\n  const isAddressValid = useMemo(() => {\n    return (\n      utils.isAddress(address) &&\n      accountOwner?.toLowerCase() !== address.toLowerCase() &&\n      (!!target || (permissionData && !permissionData[address.toLowerCase()]))\n    );\n  }, [accountOwner, address, permissionData, target]);\n\n  const isFormValid = useMemo(() => {\n    return selectedPermissions.length > 0 && isAddressValid;\n  }, [isAddressValid, selectedPermissions.length]);\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent py={2} border=\"1px solid\" rounded=\"base\" borderColor=\"gray.900\" bg=\"navy.700\">\n        <ModalHeader>{target ? 'Edit' : 'New'} Permission</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <Divider />\n          <Flex pt={6} flexDir=\"column\" gap=\"5\">\n            {!target && (\n              <>\n                <Text fontWeight={600} fontSize=\"14px\" color=\"white\">\n                  Address\n                </Text>\n                <Input\n                  bg=\"navy.900\"\n                  onChange={(e) => {\n                    setAddress(e.target.value.trim());\n                  }}\n                  value={address}\n                  isInvalid={!isAddressValid && !!address}\n                />\n              </>\n            )}\n            <Text fontWeight={600} color=\"white\" fontSize=\"14px\">\n              Select Permissions <PermissionsInfo />\n            </Text>\n            <Flex justifyContent=\"space-evenly\">\n              {permissionsList.map((permission) => {\n                const isActive = selectedPermissions.includes(permission);\n                return (\n                  <Badge\n                    onClick={() =>\n                      setSelectedPermissions((state) => {\n                        if (state.includes(permission)) {\n                          return state.filter((s) => s !== permission);\n                        }\n                        return [...state, permission];\n                      })\n                    }\n                    variant=\"outline\"\n                    key={permission}\n                    color={isActive ? 'cyan' : 'gray'}\n                    textTransform=\"capitalize\"\n                    cursor=\"pointer\"\n                    bg=\"gray.900\"\n                    colorScheme={isActive ? 'cyan' : 'gray'}\n                  >\n                    {permission}\n                  </Badge>\n                );\n              })}\n            </Flex>\n          </Flex>\n        </ModalBody>\n        <ModalFooter justifyContent=\"center\">\n          {isPending ? (\n            <Spinner color=\"cyan\" />\n          ) : (\n            <Button\n              w=\"100%\"\n              onClick={() => {\n                submit().then(() => {\n                  setAddress('');\n                  setSelectedPermissions([]);\n                  refetch();\n                  onClose();\n                });\n              }}\n              isDisabled={!isFormValid}\n            >\n              {target ? 'Update ' : 'Add new '} permissions\n            </Button>\n          )}\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import { DeleteIcon, EditIcon } from '@chakra-ui/icons';\nimport { Badge, Flex, IconButton, Td, Text, Tr, useDisclosure } from '@chakra-ui/react';\nimport { Address } from '@snx-v3/Address';\nimport { useManagePermissions } from '@snx-v3/useManagePermissions';\nimport { ethers } from 'ethers';\nimport { useEffect } from 'react';\nimport { permissionsList } from './AccountPermissions';\nimport { PermissionModal } from './PermissionModal';\n\nexport function PermissionRow({\n  address,\n  currentPermissions,\n  accountId,\n  refetch,\n  isOwner,\n}: {\n  address: string;\n  currentPermissions: string[];\n  accountId: ethers.BigNumber;\n  refetch: () => void;\n  isOwner: boolean;\n}) {\n  const {\n    isOpen: isPermissionOpen,\n    onClose: onPermissionClose,\n    onOpen: onPermissionOpen,\n  } = useDisclosure();\n\n  const {\n    mutate: removePermissions,\n    isPending,\n    isSuccess,\n  } = useManagePermissions({\n    accountId,\n    target: address,\n    selected: [],\n    existing: currentPermissions,\n  });\n\n  useEffect(() => {\n    if (isSuccess) {\n      refetch();\n      onPermissionClose();\n    }\n  }, [isSuccess, onPermissionClose, refetch]);\n\n  return (\n    <Tr>\n      <Td width={240} borderBottomColor=\"gray.900\" py=\"4\">\n        <Text fontWeight={400} color=\"white\" fontSize=\"16px\">\n          <Address address={address} />\n        </Text>\n      </Td>\n      <Td borderBottomColor=\"gray.900\">\n        <Flex py={2} flexWrap=\"wrap\" gap={3}>\n          {permissionsList.map((permission) => {\n            const isActive = currentPermissions.includes(permission);\n            return (\n              <Badge\n                color={isActive ? 'cyan' : 'gray'}\n                colorScheme={isActive ? 'cyan' : 'gray'}\n                variant=\"outline\"\n                bg={isActive ? 'cyan.900' : 'gray.900'}\n                size=\"sm\"\n                textTransform=\"capitalize\"\n                key={permission.concat('permission-row')}\n              >\n                {permission}\n              </Badge>\n            );\n          })}\n        </Flex>\n      </Td>\n\n      <Td borderBottomColor=\"gray.900\" textAlign=\"end\">\n        {isOwner && (\n          <>\n            <PermissionModal\n              isOpen={isPermissionOpen}\n              onClose={onPermissionClose}\n              accountId={accountId}\n              refetch={refetch}\n              existingPermissions={currentPermissions}\n              target={address}\n            />\n            <IconButton\n              onClick={onPermissionOpen}\n              size=\"sm\"\n              aria-label=\"edit\"\n              variant=\"outline\"\n              colorScheme=\"gray\"\n              icon={<EditIcon />}\n              mr=\"2\"\n            />\n            <IconButton\n              variant=\"outline\"\n              isLoading={isPending}\n              colorScheme=\"gray\"\n              onClick={() => {\n                removePermissions();\n              }}\n              size=\"sm\"\n              aria-label=\"delete\"\n              icon={<DeleteIcon />}\n            />\n          </>\n        )}\n      </Td>\n    </Tr>\n  );\n}\n","import { Skeleton, Td, Text, Tr } from '@chakra-ui/react';\nimport { prettyString } from '@snx-v3/format';\nimport { ethers } from 'ethers';\n\nexport function PermissionTableLoading() {\n  const rows = Array.from({ length: 2 }, (_, i) => i);\n  return (\n    <>\n      {rows.map((row) => {\n        return (\n          <Tr borderBottomWidth={row === 1 ? 'none' : '1px'} key={row}>\n            <Td borderBottomColor=\"gray.900\" py=\"4\" width=\"200px\">\n              <Skeleton>\n                <Text fontWeight={400} color=\"white\" fontSize=\"16px\">\n                  {prettyString(ethers.constants.AddressZero)}{' '}\n                </Text>\n              </Skeleton>\n            </Td>\n            <Td borderBottomColor=\"gray.900\" py=\"4\">\n              <Skeleton>-</Skeleton>\n            </Td>\n            <Td borderBottomColor=\"gray.900\" py=\"4\">\n              <Skeleton>-</Skeleton>\n            </Td>\n          </Tr>\n        );\n      })}\n    </>\n  );\n}\n","/* eslint-disable react/no-unescaped-entities */\nimport {\n  Badge,\n  Button,\n  Flex,\n  Heading,\n  Skeleton,\n  Table,\n  TableContainer,\n  Tbody,\n  Td,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useDisclosure,\n} from '@chakra-ui/react';\nimport { Address } from '@snx-v3/Address';\nimport { renderAccountId } from '@snx-v3/format';\nimport { useAccountOwner, useAccountPermissions } from '@snx-v3/useAccountPermissions';\nimport { useWallet } from '@snx-v3/useBlockchain';\nimport { ethers } from 'ethers';\nimport { useMemo } from 'react';\nimport { PermissionModal } from './PermissionModal';\nimport { PermissionRow } from './PermissionRow';\nimport { PermissionsInfo } from './PermissionsInfo';\nimport { PermissionTableLoading } from './PermissionTableLoading';\nimport { TransferOwnershipModal } from './TransferOwnershipModal';\n\nexport function PermissionTable({\n  accountId,\n  refetchAccounts,\n}: {\n  accountId: ethers.BigNumber;\n  refetchAccounts: () => void;\n}) {\n  const {\n    isOpen: isPermissionOpen,\n    onClose: onPermissionClose,\n    onOpen: onPermissionOpen,\n  } = useDisclosure();\n  const {\n    isOpen: isTransferOpen,\n    onClose: onTransferClose,\n    onOpen: onTransferOpen,\n  } = useDisclosure();\n\n  const { activeWallet } = useWallet();\n  const { data: permissions, isLoading, refetch } = useAccountPermissions(accountId);\n  const {\n    data: accountOwner,\n    isLoading: loadingOwner,\n    refetch: refetchAccountOwner,\n  } = useAccountOwner(accountId);\n\n  const isOwner = useMemo(\n    () => !!(accountOwner && accountOwner?.toLowerCase() === activeWallet?.address.toLowerCase()),\n    [accountOwner, activeWallet?.address]\n  );\n  return (\n    <>\n      <TableContainer\n        flexGrow=\"2\"\n        borderColor=\"gray.900\"\n        borderWidth=\"1px\"\n        borderRadius=\"5px\"\n        p={6}\n        sx={{\n          borderCollapse: 'separate',\n          borderSpacing: 0,\n        }}\n        bg=\"navy.700\"\n      >\n        <Flex mb=\"2\" w=\"100%\" justifyContent=\"space-between\">\n          <Heading size=\"md\" mb=\"1\">\n            Account {renderAccountId(accountId)}\n          </Heading>\n          {isOwner && (\n            <Button\n              size=\"xs\"\n              onClick={() => {\n                onPermissionOpen();\n              }}\n            >\n              + New Permission\n            </Button>\n          )}\n        </Flex>\n        <Table variant=\"simple\">\n          <Thead>\n            <Tr>\n              <Th\n                py={5}\n                textTransform=\"unset\"\n                color=\"gray.600\"\n                fontFamily=\"heading\"\n                fontSize=\"12px\"\n                lineHeight=\"16px\"\n                borderBottomColor=\"gray.900\"\n              >\n                Address\n              </Th>\n              <Th\n                py={5}\n                textTransform=\"unset\"\n                color=\"gray.600\"\n                fontFamily=\"heading\"\n                fontSize=\"12px\"\n                lineHeight=\"16px\"\n                borderBottomColor=\"gray.900\"\n              >\n                Permissions\n                <PermissionsInfo />\n              </Th>\n              <Th\n                py={5}\n                textTransform=\"unset\"\n                color=\"gray.600\"\n                fontFamily=\"heading\"\n                fontSize=\"12px\"\n                lineHeight=\"16px\"\n                borderBottomColor=\"gray.900\"\n              ></Th>\n            </Tr>\n          </Thead>\n\n          <Tbody>\n            <Tr>\n              <Td width={240} py={5} borderBottomColor=\"gray.900\">\n                <Skeleton isLoaded={!loadingOwner}>\n                  {accountOwner && (\n                    <Text fontWeight={400} color=\"white\" fontSize=\"16px\">\n                      <Address address={accountOwner} />\n                    </Text>\n                  )}\n                </Skeleton>\n              </Td>\n              <Td py={5} borderBottomColor=\"gray.900\">\n                <Badge\n                  color=\"cyan\"\n                  variant=\"outline\"\n                  bg=\"cyan.900\"\n                  size=\"sm\"\n                  textTransform=\"capitalize\"\n                >\n                  OWNER\n                </Badge>\n              </Td>\n              <Td py={5} borderBottomColor=\"gray.900\" textAlign=\"end\">\n                {isOwner && (\n                  <Button\n                    size=\"xs\"\n                    variant=\"outline\"\n                    colorScheme=\"gray\"\n                    color=\"white\"\n                    onClick={() => {\n                      onTransferOpen();\n                    }}\n                  >\n                    Transfer Ownership\n                  </Button>\n                )}\n              </Td>\n            </Tr>\n\n            {isLoading && <PermissionTableLoading />}\n\n            {!isLoading &&\n              permissions &&\n              Object.keys(permissions)\n                .filter((target) => permissions[target]?.length > 0)\n                .map((target) => (\n                  <PermissionRow\n                    key={target}\n                    address={target}\n                    currentPermissions={permissions[target]}\n                    accountId={accountId}\n                    refetch={refetch}\n                    isOwner={isOwner}\n                  />\n                ))}\n          </Tbody>\n        </Table>\n      </TableContainer>\n\n      <PermissionModal\n        isOpen={isPermissionOpen}\n        onClose={onPermissionClose}\n        accountId={accountId}\n        refetch={refetch}\n      />\n      {accountOwner ? (\n        <TransferOwnershipModal\n          isOpen={isTransferOpen}\n          onClose={onTransferClose}\n          accountId={accountId}\n          owner={accountOwner}\n          refetch={() => {\n            refetch();\n            refetchAccountOwner();\n            refetchAccounts();\n          }}\n        />\n      ) : null}\n    </>\n  );\n}\n","export const DelegationIcon = () => {\n  return (\n    <svg width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M29.3662 7.14593C29.8933 6.89158 30.5156 6.97433 30.9627 7.35822L42.9627 17.6613C43.3047 17.9549 43.5024 18.3898 43.5024 18.8485C43.5024 19.3072 43.3047 19.7421 42.9627 20.0358L30.9627 30.3388C30.5156 30.7227 29.8933 30.8054 29.3662 30.5511C28.8391 30.2967 28.5024 29.7512 28.5024 29.1515V25.5455H18.0024C17.174 25.5455 16.5024 24.8536 16.5024 24C16.5024 23.1465 17.174 22.4546 18.0024 22.4546H30.0024C30.8309 22.4546 31.5024 23.1465 31.5024 24V25.8519L39.6594 18.8485L31.5024 11.8451V13.697C31.5024 14.5505 30.8309 15.2424 30.0024 15.2424H18.0024C17.174 15.2424 16.5024 14.5505 16.5024 13.697C16.5024 12.8435 17.174 12.1515 18.0024 12.1515H28.5024V8.54547C28.5024 7.94581 28.8391 7.40028 29.3662 7.14593Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M18.6362 40.8541C18.1092 41.1084 17.4868 41.0257 17.0397 40.6418L5.03972 30.3387C4.69774 30.0451 4.5 29.6102 4.5 29.1515C4.5 28.6928 4.69774 28.2579 5.03972 27.9642L17.0397 17.6612C17.4869 17.2773 18.1092 17.1946 18.6362 17.4489C19.1633 17.7033 19.5 18.2488 19.5 18.8485L19.5 22.4545L30 22.4545C30.8284 22.4545 31.5 23.1464 31.5 24C31.5 24.8535 30.8284 25.5454 30 25.5454L18 25.5454C17.1716 25.5454 16.5 24.8535 16.5 24L16.5 22.1481L8.34308 29.1515L16.5 36.1549L16.5 34.303C16.5 33.4495 17.1716 32.7576 18 32.7576L30 32.7576C30.8284 32.7576 31.5 33.4495 31.5 34.303C31.5 35.1565 30.8284 35.8485 30 35.8485L19.5 35.8485L19.5 39.4545C19.5 40.0542 19.1633 40.5997 18.6362 40.8541Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M9.3584 13.6973C9.3584 12.8438 10.03 12.1519 10.8584 12.1519H12.5727C13.4011 12.1519 14.0727 12.8438 14.0727 13.6973C14.0727 14.5508 13.4011 15.2428 12.5727 15.2428H10.8584C10.03 15.2428 9.3584 14.5508 9.3584 13.6973Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M38.644 34.3027C38.644 35.1562 37.9725 35.8481 37.144 35.8481L35.4298 35.8481C34.6013 35.8481 33.9298 35.1562 33.9298 34.3027C33.9298 33.4492 34.6013 32.7572 35.4298 32.7572L37.144 32.7572C37.9725 32.7572 38.644 33.4492 38.644 34.3027Z\"\n        fill=\"white\"\n      />\n    </svg>\n  );\n};\n","import { contractsHash } from '@snx-v3/tsHelpers';\nimport { useAccountProxy } from '@snx-v3/useAccountProxy';\nimport { useNetwork, useProvider, useWallet } from '@snx-v3/useBlockchain';\nimport { useTrustedMulticallForwarder } from '@snx-v3/useTrustedMulticallForwarder';\nimport { useQuery } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\n\nconst log = debug('snx:useAccounts');\n\nexport function useAccounts() {\n  const { activeWallet } = useWallet();\n  const { network } = useNetwork();\n  const provider = useProvider();\n  const { data: AccountProxy } = useAccountProxy();\n  const { data: Multicall3 } = useTrustedMulticallForwarder();\n  const walletAddress = activeWallet?.address;\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'Accounts',\n      { walletAddress },\n      { contractsHash: contractsHash([AccountProxy, Multicall3]) },\n    ],\n    enabled: Boolean(provider && walletAddress && AccountProxy && Multicall3),\n    queryFn: async function (): Promise<ethers.BigNumber[]> {\n      if (!(provider && walletAddress && AccountProxy && Multicall3)) throw 'OMFG';\n\n      const AccountProxyContract = new ethers.Contract(\n        AccountProxy.address,\n        AccountProxy.abi,\n        provider\n      );\n      const Multicall3Contract = new ethers.Contract(Multicall3.address, Multicall3.abi, provider);\n\n      log('walletAddress', walletAddress);\n      const numberOfAccountTokens = await AccountProxyContract.balanceOf(walletAddress);\n      log('numberOfAccountTokens', numberOfAccountTokens);\n\n      if (numberOfAccountTokens.eq(0)) {\n        // No accounts created yet\n        return [];\n      }\n      const accountIndexes: number[] = Array.from(Array(numberOfAccountTokens.toNumber()).keys());\n      log('accountIndexes', accountIndexes);\n\n      const calls = accountIndexes.map((index) => ({\n        target: AccountProxy.address,\n        callData: AccountProxyContract.interface.encodeFunctionData('tokenOfOwnerByIndex', [\n          walletAddress,\n          index,\n        ]),\n      }));\n\n      const multicallResponse = await Multicall3Contract.callStatic.aggregate3(calls);\n      log('multicallResponse', multicallResponse);\n\n      const accounts = accountIndexes.map((index) => {\n        const { returnData } = multicallResponse[index];\n        const [tokenOfOwnerByIndex] = AccountProxyContract.interface.decodeFunctionResult(\n          'tokenOfOwnerByIndex',\n          returnData\n        );\n        return tokenOfOwnerByIndex;\n      });\n      log('accounts', accounts);\n\n      return accounts;\n    },\n  });\n}\n","import { Button, Flex, Heading, Link, Text } from '@chakra-ui/react';\nimport { useAccounts } from '@snx-v3/useAccounts';\nimport { DelegationIcon } from './DelegationIcon';\nimport { PermissionTable } from './PermissionTable';\n\nexport function Permissions() {\n  const { data: accounts, refetch: refetchAccounts } = useAccounts();\n\n  return (\n    <Flex flexDir=\"column\" gap=\"7\">\n      <Flex flexDir=\"column\" gap={7}>\n        {accounts?.map((accountId) => (\n          <PermissionTable\n            key={accountId.toString()}\n            accountId={accountId}\n            refetchAccounts={refetchAccounts}\n          />\n        ))}\n      </Flex>\n      <Flex\n        flexGrow=\"1\"\n        h=\"fit-content\"\n        border=\"1px solid\"\n        borderColor=\"gray.900\"\n        rounded=\"base\"\n        flexDir=\"column\"\n        width=\"100%\"\n        p=\"6\"\n        bg=\"navy.700\"\n      >\n        <DelegationIcon />\n        <Heading fontSize=\"14px\" mt=\"6\">\n          Delegate Permissions\n        </Heading>\n        <Text color=\"gray.500\" fontSize=\"12px\" mb=\"6\">\n          Delegation enables a wallet to execute functions on behalf of another wallet/account:\n          lock, borrow, withdraw, claim, but not transfer. Manage addresses and their powers below.\n        </Text>\n        <Link\n          href=\"https://docs.synthetix.io/v/synthetix-v3-user-documentation/protocol-design/vaults#account-permissions\"\n          rel=\"noopener\"\n          target=\"_blank\"\n        >\n          <Button variant=\"outline\" color=\"white\" colorScheme=\"gray\" size=\"xs\">\n            Learn More\n          </Button>\n        </Link>\n      </Flex>\n    </Flex>\n  );\n}\n","import { Flex, Heading } from '@chakra-ui/react';\nimport { Permissions } from '@snx-v3/Permissions';\nimport { Helmet } from 'react-helmet';\n\nexport function AccountSettingsPage() {\n  return (\n    <>\n      <Helmet>\n        <title>Synthetix Account Settings</title>\n        <meta name=\"description\" content=\"Synthetix Liquidity V3 - Account Settings\" />\n      </Helmet>\n      <Flex flexDir=\"column\" mb={16}>\n        <Heading\n          mt={{\n            base: 2,\n            sm: 8,\n          }}\n          mb={6}\n          color=\"gray.50\"\n          fontSize=\"1.5rem\"\n          data-cy=\"account settings\"\n        >\n          Account Settings\n        </Heading>\n        <Permissions />\n      </Flex>\n    </>\n  );\n}\n","import { Tooltip as ChakraTooltip, type TooltipProps } from '@chakra-ui/react';\n\nexport const Tooltip = ({ ...props }: TooltipProps) => {\n  return <ChakraTooltip hasArrow bg=\"gray.900\" p={3} borderRadius=\"4px\" {...props} />;\n};\n","import { Button, Collapse, Text } from '@chakra-ui/react';\nimport { ContractErrorType } from '@snx-v3/parseContractError';\nimport format from 'date-fns/format';\nimport React from 'react';\n\nconst defaultOpen = window?.localStorage?.CONTRACT_ERROR_OPEN === 'true';\n\nexport function ContractError({ contractError }: { contractError: ContractErrorType }) {\n  const [isOpen, setIsOpen] = React.useState(defaultOpen);\n\n  return (\n    <>\n      {!isOpen ? (\n        <Button\n          variant=\"link\"\n          onClick={() => setIsOpen(true)}\n          color=\"inherit\"\n          fontWeight=\"normal\"\n          fontStyle=\"italic\"\n        >\n          details...\n        </Button>\n      ) : null}\n      <Collapse in={isOpen} animateOpacity unmountOnExit>\n        <Text fontStyle=\"italic\" fontSize=\"0.8em\">\n          {contractError.name}\n        </Text>\n        <Text whiteSpace=\"pre\" fontSize=\"0.8em\" fontStyle=\"italic\" pl=\"0.5em\">\n          {Object.entries(contractError.args)\n            .map(\n              ([key, val]) =>\n                `${key}: ${val instanceof Date ? format(val, 'yyyy-MM-dd HH:mm:ss') : val}`\n            )\n            .join('\\n')}\n        </Text>\n      </Collapse>\n    </>\n  );\n}\n","export type TransactionStatus = 'unsent' | 'prompting' | 'pending' | 'success' | 'error';\n\ntype TxnState = {\n  error: Error | null;\n  modalOpen: boolean;\n  txnStatus: TransactionStatus;\n  txnHash: string | null;\n};\n\nexport const initialState: TxnState = {\n  error: null,\n  modalOpen: false,\n  txnStatus: 'unsent',\n  txnHash: null,\n};\n\nexport type Actions =\n  | { type: 'prompting' }\n  | { type: 'pending'; payload: { txnHash: string } }\n  | { type: 'success' }\n  | { type: 'error'; payload: { error: Error } }\n  | { type: 'settled' };\n\nexport function reducer(state: TxnState, action: Actions): TxnState {\n  switch (action.type) {\n    case 'prompting':\n      return {\n        ...state,\n        txnStatus: 'prompting',\n        modalOpen: true,\n        error: null,\n      };\n\n    case 'pending':\n      return {\n        ...state,\n        txnStatus: 'pending',\n        txnHash: action.payload.txnHash,\n      };\n\n    case 'success':\n      return {\n        ...state,\n        txnStatus: 'success',\n      };\n\n    case 'error':\n      return {\n        ...state,\n        txnStatus: 'error',\n        error: action.payload.error,\n      };\n\n    case 'settled':\n      return {\n        ...state,\n        modalOpen: false,\n        txnStatus: 'unsent',\n        error: null,\n        txnHash: null,\n      };\n\n    default:\n      return state;\n  }\n}\n","function filterDeprecated(feedId: string) {\n  return ![\n    //\n    '0x5c6c0d2386e3352356c3ab84434fafb5ea067ac2678a38a338c4a69ddc4bdb0c', // FTM\n    '0x06ade621dbc31ed0fc9255caaab984a468abe84164fb2ccc76f02a4636d97e31', // EOS\n  ].includes(feedId);\n}\n\nexport async function importPythFeeds(chainId?: number, preset?: string): Promise<string[]> {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: pythFeeds }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/pythFeeds.json'),\n      ]);\n      return pythFeeds.filter(filterDeprecated);\n    }\n    case '11155111-main': {\n      const [{ default: pythFeeds }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/pythFeeds.json'),\n      ]);\n      return pythFeeds.filter(filterDeprecated);\n    }\n    case '10-main': {\n      const [{ default: pythFeeds }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/pythFeeds.json'),\n      ]);\n      return pythFeeds.filter(filterDeprecated);\n    }\n    case '8453-andromeda': {\n      const [{ default: pythFeeds }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/pythFeeds.json'),\n      ]);\n      return pythFeeds.filter(filterDeprecated);\n    }\n    case '84532-andromeda': {\n      const [{ default: pythFeeds }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/pythFeeds.json'),\n      ]);\n      return pythFeeds.filter(filterDeprecated);\n    }\n    case '42161-main': {\n      const [{ default: pythFeeds }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/pythFeeds.json'),\n      ]);\n      return pythFeeds.filter(filterDeprecated);\n    }\n    case '421614-main': {\n      const [{ default: pythFeeds }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/pythFeeds.json'),\n      ]);\n      return pythFeeds.filter(filterDeprecated);\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for pythFeeds`);\n    }\n  }\n}\n","// [\n//   \"constructor()\",\n//   \"error InsufficientFee()\",\n//   \"error InvalidArgument()\",\n//   \"error InvalidGovernanceDataSource()\",\n//   \"error InvalidGovernanceMessage()\",\n//   \"error InvalidGovernanceTarget()\",\n//   \"error InvalidUpdateData()\",\n//   \"error InvalidUpdateDataSource()\",\n//   \"error InvalidWormholeAddressToSet()\",\n//   \"error InvalidWormholeVaa()\",\n//   \"error NoFreshUpdate()\",\n//   \"error OldGovernanceMessage()\",\n//   \"error PriceFeedNotFound()\",\n//   \"error PriceFeedNotFoundWithinRange()\",\n//   \"error StalePrice()\",\n//   \"event AdminChanged(address previousAdmin, address newAdmin)\",\n//   \"event BatchPriceFeedUpdate(uint16 chainId, uint64 sequenceNumber)\",\n//   \"event BeaconUpgraded(address indexed beacon)\",\n//   \"event ContractUpgraded(address oldImplementation, address newImplementation)\",\n//   \"event DataSourcesSet(tuple(uint16 chainId, bytes32 emitterAddress)[] oldDataSources, tuple(uint16 chainId, bytes32 emitterAddress)[] newDataSources)\",\n//   \"event FeeSet(uint256 oldFee, uint256 newFee)\",\n//   \"event GovernanceDataSourceSet(tuple(uint16 chainId, bytes32 emitterAddress) oldDataSource, tuple(uint16 chainId, bytes32 emitterAddress) newDataSource, uint64 initialSequence)\",\n//   \"event Initialized(uint8 version)\",\n//   \"event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)\",\n//   \"event PriceFeedUpdate(bytes32 indexed id, uint64 publishTime, int64 price, uint64 conf)\",\n//   \"event Upgraded(address indexed implementation)\",\n//   \"event ValidPeriodSet(uint256 oldValidPeriod, uint256 newValidPeriod)\",\n//   \"event WormholeAddressSet(address oldWormholeAddress, address newWormholeAddress)\",\n//   \"function chainId() view returns (uint16)\",\n//   \"function executeGovernanceInstruction(bytes encodedVM)\",\n//   \"function getEmaPrice(bytes32 id) view returns (tuple(int64 price, uint64 conf, int32 expo, uint256 publishTime) price)\",\n//   \"function getEmaPriceNoOlderThan(bytes32 id, uint256 age) view returns (tuple(int64 price, uint64 conf, int32 expo, uint256 publishTime) price)\",\n//   \"function getEmaPriceUnsafe(bytes32 id) view returns (tuple(int64 price, uint64 conf, int32 expo, uint256 publishTime) price)\",\n//   \"function getPrice(bytes32 id) view returns (tuple(int64 price, uint64 conf, int32 expo, uint256 publishTime) price)\",\n//   \"function getPriceNoOlderThan(bytes32 id, uint256 age) view returns (tuple(int64 price, uint64 conf, int32 expo, uint256 publishTime) price)\",\n//   \"function getPriceUnsafe(bytes32 id) view returns (tuple(int64 price, uint64 conf, int32 expo, uint256 publishTime) price)\",\n//   \"function getUpdateFee(bytes[] updateData) view returns (uint256 feeAmount)\",\n//   \"function getUpdateFee(uint256 updateDataSize) view returns (uint256 feeAmount)\",\n//   \"function getValidTimePeriod() view returns (uint256)\",\n//   \"function governanceDataSource() view returns (tuple(uint16 chainId, bytes32 emitterAddress))\",\n//   \"function governanceDataSourceIndex() view returns (uint32)\",\n//   \"function hashDataSource(tuple(uint16 chainId, bytes32 emitterAddress) ds) pure returns (bytes32)\",\n//   \"function initialize(address wormhole, uint16[] dataSourceEmitterChainIds, bytes32[] dataSourceEmitterAddresses, uint16 governanceEmitterChainId, bytes32 governanceEmitterAddress, uint64 governanceInitialSequence, uint256 validTimePeriodSeconds, uint256 singleUpdateFeeInWei)\",\n//   \"function isValidDataSource(uint16 dataSourceChainId, bytes32 dataSourceEmitterAddress) view returns (bool)\",\n//   \"function isValidGovernanceDataSource(uint16 governanceChainId, bytes32 governanceEmitterAddress) view returns (bool)\",\n//   \"function lastExecutedGovernanceSequence() view returns (uint64)\",\n//   \"function latestPriceInfoPublishTime(bytes32 priceId) view returns (uint64)\",\n//   \"function owner() view returns (address)\",\n//   \"function parseAuthorizeGovernanceDataSourceTransferPayload(bytes encodedPayload) pure returns (tuple(bytes claimVaa) sgds)\",\n//   \"function parseGovernanceInstruction(bytes encodedInstruction) pure returns (tuple(uint8 module, uint8 action, uint16 targetChainId, bytes payload) gi)\",\n//   \"function parsePriceFeedUpdates(bytes[] updateData, bytes32[] priceIds, uint64 minPublishTime, uint64 maxPublishTime) payable returns (tuple(bytes32 id, tuple(int64 price, uint64 conf, int32 expo, uint256 publishTime) price, tuple(int64 price, uint64 conf, int32 expo, uint256 publishTime) emaPrice)[] priceFeeds)\",\n//   \"function parsePriceFeedUpdatesUnique(bytes[] updateData, bytes32[] priceIds, uint64 minPublishTime, uint64 maxPublishTime) payable returns (tuple(bytes32 id, tuple(int64 price, uint64 conf, int32 expo, uint256 publishTime) price, tuple(int64 price, uint64 conf, int32 expo, uint256 publishTime) emaPrice)[] priceFeeds)\",\n//   \"function parseRequestGovernanceDataSourceTransferPayload(bytes encodedPayload) pure returns (tuple(uint32 governanceDataSourceIndex) sgdsClaim)\",\n//   \"function parseSetDataSourcesPayload(bytes encodedPayload) pure returns (tuple(tuple(uint16 chainId, bytes32 emitterAddress)[] dataSources) sds)\",\n//   \"function parseSetFeePayload(bytes encodedPayload) pure returns (tuple(uint256 newFee) sf)\",\n//   \"function parseSetValidPeriodPayload(bytes encodedPayload) pure returns (tuple(uint256 newValidPeriod) svp)\",\n//   \"function parseSetWormholeAddressPayload(bytes encodedPayload) pure returns (tuple(address newWormholeAddress) sw)\",\n//   \"function parseUpgradeContractPayload(bytes encodedPayload) pure returns (tuple(address newImplementation) uc)\",\n//   \"function priceFeedExists(bytes32 id) view returns (bool)\",\n//   \"function proxiableUUID() view returns (bytes32)\",\n//   \"function pythUpgradableMagic() pure returns (uint32)\",\n//   \"function queryPriceFeed(bytes32 id) view returns (tuple(bytes32 id, tuple(int64 price, uint64 conf, int32 expo, uint256 publishTime) price, tuple(int64 price, uint64 conf, int32 expo, uint256 publishTime) emaPrice) priceFeed)\",\n//   \"function renounceOwnership()\",\n//   \"function singleUpdateFeeInWei() view returns (uint256)\",\n//   \"function transferOwnership(address newOwner)\",\n//   \"function updatePriceFeeds(bytes[] updateData) payable\",\n//   \"function updatePriceFeedsIfNecessary(bytes[] updateData, bytes32[] priceIds, uint64[] publishTimes) payable\",\n//   \"function upgradeTo(address newImplementation)\",\n//   \"function upgradeToAndCall(address newImplementation, bytes data) payable\",\n//   \"function validDataSources() view returns (tuple(uint16 chainId, bytes32 emitterAddress)[])\",\n//   \"function validTimePeriodSeconds() view returns (uint256)\",\n//   \"function version() pure returns (string)\",\n//   \"function wormhole() view returns (address)\"\n// ]\nconst abi = ['function updatePriceFeeds(bytes[] updateData) payable'];\n\nexport async function importPythVerifier(\n  chainId?: number,\n  preset?: string\n): Promise<{ address: string; abi: string[] }> {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n\n  switch (deployment) {\n    case '1-main': {\n      return {\n        address: '0x4305FB66699C3B2702D4d05CF36551390A4c69C6',\n        abi,\n      };\n    }\n    case '11155111-main': {\n      return {\n        address: '0xDd24F84d36BF92C65F92307595335bdFab5Bbd21',\n        abi,\n      };\n    }\n    case '10-main': {\n      return {\n        address: '0xff1a0f4744e8582DF1aE09D5611b887B6a12925C',\n        abi,\n      };\n    }\n    case '8453-andromeda': {\n      return {\n        address: '0x8250f4aF4B972684F7b336503E2D6dFeDeB1487a',\n        abi,\n      };\n    }\n    case '84532-andromeda': {\n      return {\n        address: '0xA2aa501b19aff244D90cc15a4Cf739D2725B5729',\n        abi,\n      };\n    }\n    case '42161-main': {\n      return {\n        address: '0xff1a0f4744e8582DF1aE09D5611b887B6a12925C',\n        abi,\n      };\n    }\n    case '421614-main': {\n      return {\n        address: '0x4374e5a8b9C22271E9EB878A2AA31DE97DF15DAF',\n        abi,\n      };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for Extras`);\n    }\n  }\n}\n","import { getSubgraphUrl, POOL_ID } from '@snx-v3/constants';\nimport { ARBITRUM, BASE_ANDROMEDA, MAINNET, NETWORKS } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nconst supportedNetworks = [MAINNET.id, BASE_ANDROMEDA.id, ARBITRUM.id];\n\nexport const networksOffline = NETWORKS.filter(\n  (n) => supportedNetworks.includes(n.id) && n.isSupported\n).map((n) => n);\n\nasync function fetchPoolsList() {\n  const urls = networksOffline.map((network) => getSubgraphUrl(network.name));\n\n  // Fetch all the pools from the subgraphs\n  const responses = await Promise.all(\n    urls.map((url) =>\n      fetch(url, { method: 'POST', body: JSON.stringify({ query: PoolsListData }) }).then((res) =>\n        res.json()\n      )\n    )\n  );\n\n  return responses.map((response, i) => ({\n    network: networksOffline[i],\n    poolInfo: (response?.data?.vaults ?? []) as PoolInfo[],\n  }));\n}\n\nconst gql = (data: TemplateStringsArray) => data[0];\n\nconst PoolsListData = gql`\n  query PoolsListData {\n    vaults(where: { pool: \"1\" }) {\n      collateral_type {\n        id\n        oracle_node_id\n        total_amount_deposited\n      }\n      pool {\n        name\n        id\n      }\n    }\n  }\n`;\n\ninterface PoolInfo {\n  collateral_type: {\n    id: string;\n    oracle_node_id: string;\n    total_amount_deposited: string;\n  };\n  pool: {\n    name: string;\n    id: string;\n  };\n}\n\nexport function usePoolsList() {\n  return useQuery({\n    queryKey: ['poolsList'],\n    queryFn: async () => {\n      return fetchPoolsList();\n    },\n    staleTime: 60000 * 10,\n  });\n}\n\nexport function usePool(networkId?: number) {\n  const { data, isPending } = usePoolsList();\n\n  return {\n    data: data?.find((p) => p?.network?.id === networkId && p?.poolInfo?.[0]?.pool?.id === POOL_ID),\n    isPending,\n  };\n}\n","import { EvmPriceServiceConnection } from '@pythnetwork/pyth-evm-js';\nimport { offchainMainnetEndpoint } from '@snx-v3/constants';\nimport {\n  importExtras,\n  importPythERC7412Wrapper,\n  importPythFeeds,\n  importPythVerifier,\n  importTrustedMulticallForwarder,\n} from '@snx-v3/contracts';\nimport { parseUnits } from '@snx-v3/format';\nimport { Network, useNetwork, useProvider, useWallet } from '@snx-v3/useBlockchain';\nimport { networksOffline } from '@snx-v3/usePoolsList';\nimport { wei } from '@synthetixio/wei';\nimport { useQuery } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\n\nconst priceService = new EvmPriceServiceConnection(offchainMainnetEndpoint);\n\nfunction getAllPriceIdsEntries(extras: any) {\n  return Array.from(\n    new Set(\n      Object.entries(extras).filter(\n        ([key, value]) =>\n          String(value).length === 66 &&\n          (key.startsWith('pyth_feed_id_') || (key.startsWith('pyth') && key.endsWith('FeedId')))\n      )\n    )\n  );\n}\n\nexport async function getPythFeedIds(network: Network) {\n  return await importPythFeeds(network.id, network.preset);\n}\n\nasync function getPythFeedIdsFromCollateralList(\n  collateralList: {\n    symbol: string;\n  }[]\n) {\n  const extras = await Promise.all(\n    networksOffline.map((network) => importExtras(network.id, network.preset))\n  );\n\n  // Go over extras and find everything that starts with pyth and ends with FeedId, store in array\n  const priceIds = extras.map(getAllPriceIdsEntries).flat();\n\n  const deduped = Array.from(\n    new Set(\n      priceIds\n        .map(([key, priceId]) => {\n          if (key.startsWith('pyth_feed_id_')) {\n            return {\n              symbol: key.replace('pyth_feed_id_', '').toUpperCase(),\n              priceId,\n            };\n          }\n          if (key.startsWith('pyth') && key.endsWith('FeedId')) {\n            return {\n              symbol: key.replace('pyth', '').replace('FeedId', '').toUpperCase(),\n              priceId,\n            };\n          }\n          return { symbol: null, priceId: null };\n        })\n        .filter(({ symbol, priceId }) => symbol && priceId)\n    )\n  );\n\n  // Find the corresponding price feed id for each symbol\n  return collateralList.map((collateral) => {\n    const symbol = collateral.symbol === 'WETH' ? 'ETH' : collateral.symbol;\n    const id = deduped.find((x) => x.symbol?.toUpperCase() === symbol.toUpperCase());\n    return {\n      ...collateral,\n      priceId: id?.priceId,\n    };\n  });\n}\n\nexport const getPriceUpdates = async (priceIds: string[], network: Network) => {\n  if (!priceIds.length) {\n    return null;\n  }\n  const unique = Array.from(new Set(priceIds));\n  const signedOffchainData = await priceService.getPriceFeedsUpdateData(unique);\n  const PythVerfier = await importPythVerifier(network.id, network.preset);\n\n  return {\n    to: PythVerfier.address,\n    data: new ethers.utils.Interface(PythVerfier.abi).encodeFunctionData('updatePriceFeeds', [\n      signedOffchainData,\n    ]),\n    value: unique.length,\n  };\n};\n\ninterface Collaterals {\n  symbol: string;\n  oracleId: string;\n  id: string;\n}\n\nexport const useOfflinePrices = (collaterals?: Collaterals[]) => {\n  return useQuery({\n    queryKey: ['offline-prices', collaterals?.map((collateral) => collateral.id).join('-')],\n    enabled: Boolean(collaterals && collaterals.length > 0),\n    queryFn: async (): Promise<{ symbol: string; price: ethers.BigNumber }[]> => {\n      if (!collaterals) {\n        throw 'useOfflinePrices is missing required data';\n      }\n\n      const stables = ['sUSDC', 'USDC'];\n      const filteredCollaterals = collaterals.filter((item) => !stables.includes(item.symbol));\n\n      const returnData = [\n        {\n          symbol: 'sUSDC',\n          price: wei(1).toBN(),\n        },\n        {\n          symbol: 'USDC',\n          price: wei(1).toBN(),\n        },\n        {\n          symbol: 'USDx',\n          price: wei(1).toBN(),\n        },\n      ];\n\n      if (!filteredCollaterals.length) {\n        return returnData;\n      }\n\n      const collateralsWithPriceId = await getPythFeedIdsFromCollateralList(filteredCollaterals);\n      const prices = await priceService.getLatestPriceFeeds(\n        collateralsWithPriceId.map((x) => x.priceId) as string[]\n      );\n      prices?.forEach((item) => {\n        const col = collateralsWithPriceId.find(({ priceId }) => priceId === `0x${item.id}`);\n        const price = item.getPriceUnchecked();\n        if (col) {\n          returnData.push({\n            symbol: col.symbol,\n            price: parseUnits(price.price, 18 + price.expo),\n          });\n        }\n      });\n      return returnData;\n    },\n    refetchInterval: 60_000,\n  });\n};\n\nexport const useCollateralPriceUpdates = (customNetwork?: Network) => {\n  const { network: currentNetwork } = useNetwork();\n  const network = customNetwork || currentNetwork;\n  const provider = useProvider();\n  const { activeWallet } = useWallet();\n  const walletAddress = activeWallet?.address;\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'PriceUpdates', { walletAddress }],\n    enabled: Boolean(network && provider && activeWallet),\n    queryFn: async () => {\n      const stalenessTolerance = 1600;\n      if (!(network && provider && activeWallet)) {\n        throw 'OMG';\n      }\n\n      try {\n        const { address: multicallAddress, abi: multiCallAbi } =\n          await importTrustedMulticallForwarder(network.id, network.preset);\n\n        const multicallInterface = new ethers.utils.Interface(multiCallAbi);\n        const pythInterface = new ethers.utils.Interface([\n          'function getLatestPrice(bytes32 priceId, uint256 stalenessTolerance) external view returns (int256)',\n        ]);\n\n        const pythFeedIds = (await getPythFeedIds(network)) as string[];\n        if (window.localStorage.getItem('DEBUG') === 'true') {\n          // eslint-disable-next-line no-console\n          console.log('[useCollateralPriceUpdates]', { pythFeedIds });\n        }\n\n        if (pythFeedIds.length === 0) {\n          return null;\n        }\n\n        const { address } = await importPythERC7412Wrapper(network.id, network.preset);\n\n        const txs = [\n          ...pythFeedIds.map((priceId) => ({\n            target: address,\n            callData: pythInterface.encodeFunctionData('getLatestPrice', [\n              priceId,\n              stalenessTolerance,\n            ]),\n            value: 0,\n            requireSuccess: false,\n          })),\n        ];\n\n        const getPricesTx = multicallInterface.encodeFunctionData('aggregate3Value', [txs]);\n\n        const result = await provider.call({\n          data: getPricesTx,\n          to: multicallAddress,\n        });\n\n        const decodedMultiCall: { success: boolean }[] = multicallInterface.decodeFunctionResult(\n          'aggregate3Value',\n          result || ''\n        )[0];\n\n        const outdatedPriceIds: string[] = [];\n\n        decodedMultiCall.forEach(({ success }, i) => {\n          if (!success) {\n            outdatedPriceIds.push(pythFeedIds[i]);\n          }\n        });\n        if (window.localStorage.getItem('DEBUG') === 'true') {\n          // eslint-disable-next-line no-console\n          console.log('[useCollateralPriceUpdates]', { outdatedPriceIds });\n        }\n\n        if (outdatedPriceIds.length) {\n          const priceUpdateTx = (await getPriceUpdates(outdatedPriceIds, network).catch(\n            () => undefined\n          )) as any;\n          if (priceUpdateTx) {\n            return {\n              ...priceUpdateTx,\n              from: walletAddress,\n            };\n          }\n        }\n\n        return null;\n      } catch (error) {\n        return null;\n      }\n    },\n    refetchInterval: 120_000,\n  });\n};\n","export async function importExtras(\n  chainId?: number,\n  preset?: string\n): Promise<{\n  [key: string]: string;\n}> {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: extras }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/extras.json'),\n      ]);\n      return extras;\n    }\n    case '11155111-main': {\n      const [{ default: extras }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/extras.json'),\n      ]);\n      return extras;\n    }\n    case '10-main': {\n      const [{ default: extras }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/extras.json'),\n      ]);\n      return extras;\n    }\n    case '8453-andromeda': {\n      const [{ default: extras }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/extras.json'),\n      ]);\n      return extras;\n    }\n    case '84532-andromeda': {\n      const [{ default: extras }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/extras.json'),\n      ]);\n      return extras;\n    }\n    case '42161-main': {\n      const [{ default: extras }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/extras.json'),\n      ]);\n      return extras;\n    }\n    case '421614-main': {\n      const [{ default: extras }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/extras.json'),\n      ]);\n      return extras;\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for Extras`);\n    }\n  }\n}\n","import {\n  importAllErrors,\n  importClosePosition,\n  importPositionManager,\n  importPositionManagerAndromedaStataUSDC,\n  importPositionManagerAndromedaUSDC,\n} from '@snx-v3/contracts';\nimport { ethers } from 'ethers';\n\nconst ERC721_ERRORS: `error ${string}`[] = [\n  'error CannotSelfApprove(address addr)',\n  'error InvalidTransferRecipient(address addr)',\n  'error InvalidOwner(address addr)',\n  'error TokenDoesNotExist(uint256 id)',\n  'error TokenAlreadyMinted(uint256 id)',\n];\n\nexport type ContractErrorType = {\n  data: string;\n  name: string;\n  signature: string;\n  args: Record<string, any>;\n};\n\nexport const PYTH_ERRORS: `error ${string}`[] = [\n  // Function arguments are invalid (e.g., the arguments lengths mismatch)\n  // Signature: 0xa9cb9e0d\n  'error InvalidArgument()',\n  // Update data is coming from an invalid data source.\n  // Signature: 0xe60dce71\n  'error InvalidUpdateDataSource()',\n  // Update data is invalid (e.g., deserialization error)\n  // Signature: 0xe69ffece\n  'error InvalidUpdateData()',\n  // Insufficient fee is paid to the method.\n  // Signature: 0x025dbdd4\n  'error InsufficientFee()',\n  // There is no fresh update, whereas expected fresh updates.\n  // Signature: 0xde2c57fa\n  'error NoFreshUpdate()',\n  // There is no price feed found within the given range or it does not exists.\n  // Signature: 0x45805f5d\n  'error PriceFeedNotFoundWithinRange()',\n  // Price feed not found or it is not pushed on-chain yet.\n  // Signature: 0x14aebe68\n  'error PriceFeedNotFound()',\n  // Requested price is stale.\n  // Signature: 0x19abf40e\n  'error StalePrice()',\n  // Given message is not a valid Wormhole VAA.\n  // Signature: 0x2acbe915\n  'error InvalidWormholeVaa()',\n  // Governance message is invalid (e.g., deserialization error).\n  // Signature: 0x97363b35\n  'error InvalidGovernanceMessage()',\n  // Governance message is not for this contract.\n  // Signature: 0x63daeb77\n  'error InvalidGovernanceTarget()',\n  // Governance message is coming from an invalid data source.\n  // Signature: 0x360f2d87\n  'error InvalidGovernanceDataSource()',\n  // Governance message is old.\n  // Signature: 0x88d1b847\n  'error OldGovernanceMessage()',\n  // The wormhole address to set in SetWormholeAddress governance is invalid.\n  // Signature: 0x13d3ed82\n  'error InvalidWormholeAddressToSet()',\n];\n\nconst PANIC_REASONS: { [key: string]: string } = {\n  '00': 'Generic compiler inserted panics.',\n  '01': 'Assert evaluates to false.',\n  '11': 'Arithmetic operation results in underflow or overflow.',\n  '12': 'Division by zero.',\n  '21': 'Cannot convert value into an enum type.',\n  '22': 'Storage byte array is incorrectly encoded.',\n  '31': \"Call to 'pop' on an empty array.\",\n  '32': 'Array index is out of bounds.',\n  '41': 'Allocation of too much memory.',\n  '51': 'Call to a zero-initialized variable of internal function type.',\n};\n\nexport function extractErrorData(error: Error | any) {\n  return (\n    error.cause?.cause?.cause?.error?.data ||\n    error.cause?.cause?.cause?.data ||\n    error.cause?.cause?.error?.data ||\n    error.cause?.cause?.data ||\n    error.cause?.data ||\n    error?.error?.error?.error?.data ||\n    error?.error?.error?.data ||\n    error?.error?.data?.data ||\n    error?.error?.data ||\n    error?.data?.data ||\n    error?.data\n  );\n}\n\nexport function dedupeErrors(abiErrors: `error ${string}`[]) {\n  const unique = new Set();\n  const uniqueAbiErrors: string[] = [];\n  abiErrors.forEach((errorLine) => {\n    const fragment = ethers.utils.Fragment.from(errorLine);\n    const sighash = fragment.format(ethers.utils.FormatTypes.sighash);\n    if (!unique.has(sighash)) {\n      uniqueAbiErrors.push(fragment.format(ethers.utils.FormatTypes.full));\n      unique.add(sighash);\n    }\n  });\n  return uniqueAbiErrors;\n}\n\nexport function combineErrors(contracts: ({ abi: string[] } | undefined)[]) {\n  const abiErrors: `error ${string}`[] = [];\n  contracts.forEach((contract) => {\n    if (contract) {\n      contract.abi.forEach((line) => {\n        if (line.startsWith('error ')) {\n          abiErrors.push(line as `error ${string}`);\n        }\n      });\n    }\n  });\n  return abiErrors;\n}\n\nexport function parseErrorData({\n  errorData,\n  abi,\n}: {\n  errorData?: any;\n  abi?: `error ${string}`[];\n}): ContractErrorType | void {\n  if (`${errorData}`.startsWith('0x08c379a0')) {\n    const content = `0x${errorData.substring(10)}`;\n    // reason: string; for standard revert error string\n    const reason = ethers.utils.defaultAbiCoder.decode(['string'], content);\n    console.error(reason);\n    return {\n      data: errorData,\n      signature: content,\n      name: `Revert ${reason[0]}`,\n      args: { reason: reason[0] },\n    };\n  }\n  if (`${errorData}`.startsWith('0x4e487b71')) {\n    const content = `0x${errorData.substring(10)}`;\n    const code = errorData.slice(-2);\n    if (code in PANIC_REASONS) {\n      console.error(`Panic ${PANIC_REASONS[code]}`);\n      return {\n        data: errorData,\n        signature: content,\n        name: `Panic ${PANIC_REASONS[code]}`,\n        args: { code },\n      };\n    }\n    console.error(`Panic ${code}`);\n    return {\n      data: errorData,\n      signature: content,\n      name: `Panic ${code}`,\n      args: { code },\n    };\n  }\n\n  try {\n    const AllErrorsInterface = new ethers.utils.Interface(\n      dedupeErrors([...(abi ? abi : []), ...PYTH_ERRORS, ...ERC721_ERRORS])\n    );\n\n    const errorParsed = AllErrorsInterface.parseError(errorData);\n    const errorArgs = Object.fromEntries(\n      Object.entries(errorParsed.args)\n        .filter(([key]) => `${parseInt(key)}` !== key)\n        .map(([key, value]) => {\n          if (value instanceof ethers.BigNumber) {\n            // Guess wei\n            const unwei = parseFloat(ethers.utils.formatEther(value.toString()));\n            if (unwei > 0.001) {\n              // must be wei\n              return [key, unwei];\n            }\n\n            // Guess date\n            if (\n              value.toNumber() > new Date(2000, 1, 1).getTime() / 1000 &&\n              value.toNumber() < new Date(2100, 1, 1).getTime() / 1000\n            ) {\n              return [key, new Date(value.toNumber() * 1000)];\n            }\n\n            // Just a number\n            return [key, parseFloat(value.toString())];\n          }\n\n          // Not a number\n          return [key, value];\n        })\n    );\n\n    return {\n      data: errorData,\n      name: errorParsed.name,\n      signature: errorParsed.signature,\n      args: errorArgs,\n    };\n  } catch (error) {\n    console.error(`Error parsing failure: ${error}`);\n  }\n}\n\nexport function parseContractError({\n  error,\n  abi,\n}: {\n  error?: any;\n  abi?: `error ${string}`[];\n}): ContractErrorType | void {\n  const errorData = extractErrorData(error);\n  if (!errorData) {\n    console.error({ error }); // intentional logging as object so we can inspect all properties\n    return;\n  }\n  return parseErrorData({ errorData, abi });\n}\n\nexport async function importAllContractErrors(chainId?: number, preset?: string) {\n  return chainId && preset\n    ? combineErrors(\n        await Promise.all([\n          importAllErrors(chainId, preset).catch(() => undefined),\n          importClosePosition(chainId, preset).catch(() => undefined),\n          importPositionManager(chainId, preset).catch(() => undefined),\n          importPositionManagerAndromedaUSDC(chainId, preset).catch(() => undefined),\n          importPositionManagerAndromedaStataUSDC(chainId, preset).catch(() => undefined),\n        ])\n      )\n    : [];\n}\n","import { importAllErrors } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useAllErrors(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'AllErrors'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw new Error('OMFG');\n      return importAllErrors(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","export async function importAllErrors(\n  chainId?: number,\n  preset?: string\n): Promise<{ address: undefined; abi: string[] }> {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/AllErrors.readable.json'),\n      ]);\n      return { address: undefined, abi };\n    }\n    case '11155111-main': {\n      const [{ default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/AllErrors.readable.json'),\n      ]);\n      return { address: undefined, abi };\n    }\n    case '10-main': {\n      const [{ default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/AllErrors.readable.json'),\n      ]);\n      return { address: undefined, abi };\n    }\n    case '8453-andromeda': {\n      const [{ default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/AllErrors.readable.json'),\n      ]);\n      return { address: undefined, abi };\n    }\n    case '84532-andromeda': {\n      const [{ default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/AllErrors.readable.json'),\n      ]);\n      return { address: undefined, abi };\n    }\n    case '42161-main': {\n      const [{ default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/AllErrors.readable.json'),\n      ]);\n      return { address: undefined, abi };\n    }\n    case '421614-main': {\n      const [{ default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/AllErrors.readable.json'),\n      ]);\n      return { address: undefined, abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for AllErrors`);\n    }\n  }\n}\n","const abi = [\n  'function clearDebt(address coreProxyAddress, address accountProxyAddress, uint128 accountId, uint128 poolId, address collateralType)',\n  'function closePosition(address coreProxyAddress, address accountProxyAddress, uint128 accountId, uint128 poolId, address collateralType)',\n  'function decreasePosition(address coreProxyAddress, address accountProxyAddress, uint128 accountId, uint128 poolId, address collateralType, uint256 amount)',\n  'function increasePosition(address coreProxyAddress, address accountProxyAddress, uint128 accountId, uint128 poolId, address collateralType, uint256 amount)',\n  'function onERC721Received(address, address, uint256, bytes) pure returns (bytes4)',\n  'function repay(address coreProxyAddress, address accountProxyAddress, uint128 accountId, uint128 poolId, address collateralType, uint256 debtAmount)',\n  'function setupPosition(address coreProxyAddress, address accountProxyAddress, uint128 accountId, uint128 poolId, address collateralType, uint256 amount)',\n  'error NotEnoughAllowance(address walletAddress, address tokenAddress, uint256 requiredAllowance, uint256 availableAllowance)',\n  'error NotEnoughBalance(address walletAddress, address tokenAddress, uint256 requiredAmount, uint256 availableAmount)',\n];\n\nexport async function importPositionManager(\n  chainId?: number,\n  preset?: string\n): Promise<{ address: string; abi: string[] }> {\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      // https://etherscan.io/address/0x21e9D735Db12221a787317954bDdD7144353b5D7#code\n      return { address: '0x21e9D735Db12221a787317954bDdD7144353b5D7', abi };\n    }\n    case '11155111-main': {\n      // https://sepolia.etherscan.io/address/0xfaa4d64521db83195b5b3ff502812b267dde4a53#code\n      return { address: '0xfaa4d64521db83195b5b3ff502812b267dde4a53', abi };\n    }\n    case '42161-main': {\n      // https://arbiscan.io/address/0x42c7720912fdc1cdff1f73ff0eee5f0af8522491#code\n      return { address: '0x42c7720912fdc1cdff1f73ff0eee5f0af8522491', abi };\n    }\n    case '421614-main': {\n      // https://sepolia.arbiscan.io/address/0xa86339a1ce701b0c708a56cae3d5142f675e1540#code\n      return { address: '0xa86339a1ce701b0c708a56cae3d5142f675e1540', abi };\n    }\n    case '10-main': {\n      // https://optimistic.etherscan.io/address/0x8D99de5C3528883fcb9cCFa8E13ffF6330e45CDB#code\n      return { address: '0x8D99de5C3528883fcb9cCFa8E13ffF6330e45CDB', abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for ClosePosition`);\n    }\n  }\n}\n","import { importPositionManager } from './importPositionManager';\n\nexport async function importClosePosition(\n  chainId?: number,\n  preset?: string\n): Promise<{ address: string; abi: string[] }> {\n  return importPositionManager(chainId, preset);\n}\n","import { importClosePosition } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useClosePosition(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'ClosePosition'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw 'OMFG';\n      return importClosePosition(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","import { importPositionManager } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function usePositionManager(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'PositionManager'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw 'OMFG';\n      return importPositionManager(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","const abi = [\n  'constructor(address CoreProxy_, address AccountProxy_, address SpotMarketProxy_, address $USDC_, address $stataUSDC_, address $synthUSDC_, address $synthStataUSDC_, uint128 synthIdUSDC_, uint128 synthIdStataUSDC_, uint128 poolId_)',\n  'function $USDC() view returns (address)',\n  'function $stataUSDC() view returns (address)',\n  'function $synthStataUSDC() view returns (address)',\n  'function $synthUSDC() view returns (address)',\n  'function AccountProxy() view returns (address)',\n  'function CoreProxy() view returns (address)',\n  'function SpotMarketProxy() view returns (address)',\n  'function clearDebt(uint128 accountId)',\n  'function closePosition(uint128 accountId)',\n  'function decreasePosition(uint128 accountId, uint256 usdcAmount)',\n  'function getAccounts() view returns (uint128[] accountIds)',\n  'function increasePosition(uint128 accountId, uint256 usdcAmount)',\n  'function onERC721Received(address, address, uint256, bytes) pure returns (bytes4)',\n  'function poolId() view returns (uint128)',\n  'function repay(uint128 accountId, uint256 debtAmount)',\n  'function setupPosition(uint256 usdcAmount)',\n  'function synthIdStataUSDC() view returns (uint128)',\n  'function synthIdUSDC() view returns (uint128)',\n  'function withdraw(uint128 accountId)',\n  'error AccountExists()',\n  'error NotEnoughAllowance(address walletAddress, address tokenAddress, uint256 requiredAllowance, uint256 availableAllowance)',\n  'error NotEnoughBalance(address walletAddress, address tokenAddress, uint256 requiredAmount, uint256 availableAmount)',\n];\n\nexport async function importPositionManagerAndromedaStataUSDC(\n  chainId?: number,\n  preset?: string\n): Promise<{ address: string; abi: string[] }> {\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '8453-andromeda': {\n      // https://basescan.org/address/0x3b7820430e1cb6d2f3072a389138fb572468b5ae#code\n      return { address: '0x3b7820430e1cb6d2f3072a389138fb572468b5ae', abi };\n    }\n    case '84532-andromeda': {\n      // https://sepolia.basescan.org/address/0x3114ab72576b154a2896114999ed7c2399b92783#code\n      return { address: '0x3114ab72576b154a2896114999ed7c2399b92783', abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for PositionManagerAndromedaStataUSDC`);\n    }\n  }\n}\n","const abi = [\n  'constructor(address CoreProxy_, address AccountProxy_, address SpotMarketProxy_, address $USDC_, address $synthUSDC_, uint128 synthIdUSDC_, uint128 poolId_)',\n  'function $USDC() view returns (address)',\n  'function $synthUSDC() view returns (address)',\n  'function AccountProxy() view returns (address)',\n  'function CoreProxy() view returns (address)',\n  'function SpotMarketProxy() view returns (address)',\n  'function clearDebt(uint128 accountId)',\n  'function closePosition(uint128 accountId)',\n  'function decreasePosition(uint128 accountId, uint256 usdcAmount)',\n  'function getAccounts() view returns (uint128[] accountIds)',\n  'function increasePosition(uint128 accountId, uint256 usdcAmount)',\n  'function onERC721Received(address, address, uint256, bytes) pure returns (bytes4)',\n  'function poolId() view returns (uint128)',\n  'function repay(uint128 accountId, uint256 debtAmount)',\n  'function setupPosition(uint256 usdcAmount)',\n  'function synthIdUSDC() view returns (uint128)',\n  'function withdraw(uint128 accountId)',\n  'error AccountExists()',\n  'error NotEnoughAllowance(address walletAddress, address tokenAddress, uint256 requiredAllowance, uint256 availableAllowance)',\n  'error NotEnoughBalance(address walletAddress, address tokenAddress, uint256 requiredAmount, uint256 availableAmount)',\n];\n\nexport async function importPositionManagerAndromedaUSDC(\n  chainId?: number,\n  preset?: string\n): Promise<{ address: string; abi: string[] }> {\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '8453-andromeda': {\n      // https://basescan.org/address/0xe7527c762a706c1b78721f6947c75460db5bcd45#code\n      return { address: '0xe7527c762a706c1b78721f6947c75460db5bcd45', abi };\n    }\n    case '84532-andromeda': {\n      // https://sepolia.basescan.org/address/0x71f6fab9522e2427a16b0466eb64dabb50294064#code\n      return { address: '0x71f6fab9522e2427a16b0466eb64dabb50294064', abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for PositionManagerAndromedaStataUSDC`);\n    }\n  }\n}\n","const abi = [\n  'constructor(address pool, address rewardsController)',\n  'error ECDSAInvalidSignature()',\n  'error ECDSAInvalidSignatureLength(uint256 length)',\n  'error ECDSAInvalidSignatureS(bytes32 s)',\n  'error SafeERC20FailedOperation(address token)',\n  'event Approval(address indexed owner, address indexed spender, uint256 amount)',\n  'event Deposit(address indexed sender, address indexed owner, uint256 assets, uint256 shares)',\n  'event Initialized(uint8 version)',\n  'event Initialized(address indexed aToken, string staticATokenName, string staticATokenSymbol)',\n  'event RewardTokenRegistered(address indexed reward, uint256 startIndex)',\n  'event Transfer(address indexed from, address indexed to, uint256 amount)',\n  'event Withdraw(address indexed sender, address indexed receiver, address indexed owner, uint256 assets, uint256 shares)',\n  'function DOMAIN_SEPARATOR() view returns (bytes32)',\n  'function INCENTIVES_CONTROLLER() view returns (address)',\n  'function METADEPOSIT_TYPEHASH() view returns (bytes32)',\n  'function METAWITHDRAWAL_TYPEHASH() view returns (bytes32)',\n  'function PERMIT_TYPEHASH() view returns (bytes32)',\n  'function POOL() view returns (address)',\n  'function STATIC__ATOKEN_LM_REVISION() view returns (uint256)',\n  'function aToken() view returns (address)',\n  'function allowance(address, address) view returns (uint256)',\n  'function approve(address spender, uint256 amount) returns (bool)',\n  'function asset() view returns (address)',\n  'function balanceOf(address) view returns (uint256)',\n  'function claimRewards(address receiver, address[] rewards)',\n  'function claimRewardsOnBehalf(address onBehalfOf, address receiver, address[] rewards)',\n  'function claimRewardsToSelf(address[] rewards)',\n  'function collectAndUpdateRewards(address reward) returns (uint256)',\n  'function convertToAssets(uint256 shares) view returns (uint256)',\n  'function convertToShares(uint256 assets) view returns (uint256)',\n  'function decimals() view returns (uint8)',\n  'function deposit(uint256 assets, address receiver, uint16 referralCode, bool depositToAave) returns (uint256)',\n  'function deposit(uint256 assets, address receiver) returns (uint256)',\n  'function getClaimableRewards(address user, address reward) view returns (uint256)',\n  'function getCurrentRewardsIndex(address reward) view returns (uint256)',\n  'function getTotalClaimableRewards(address reward) view returns (uint256)',\n  'function getUnclaimedRewards(address user, address reward) view returns (uint256)',\n  'function initialize(address newAToken, string staticATokenName, string staticATokenSymbol)',\n  'function isRegisteredRewardToken(address reward) view returns (bool)',\n  'function maxDeposit(address) view returns (uint256)',\n  'function maxMint(address) view returns (uint256)',\n  'function maxRedeem(address owner) view returns (uint256)',\n  'function maxWithdraw(address owner) view returns (uint256)',\n  'function metaDeposit(address depositor, address receiver, uint256 assets, uint16 referralCode, bool depositToAave, uint256 deadline, tuple(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) permit, tuple(uint8 v, bytes32 r, bytes32 s) sigParams) returns (uint256)',\n  'function metaWithdraw(address owner, address receiver, uint256 shares, uint256 assets, bool withdrawFromAave, uint256 deadline, tuple(uint8 v, bytes32 r, bytes32 s) sigParams) returns (uint256, uint256)',\n  'function mint(uint256 shares, address receiver) returns (uint256)',\n  'function name() view returns (string)',\n  'function nonces(address) view returns (uint256)',\n  'function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)',\n  'function previewDeposit(uint256 assets) view returns (uint256)',\n  'function previewMint(uint256 shares) view returns (uint256)',\n  'function previewRedeem(uint256 shares) view returns (uint256)',\n  'function previewWithdraw(uint256 assets) view returns (uint256)',\n  'function rate() view returns (uint256)',\n  'function redeem(uint256 shares, address receiver, address owner) returns (uint256)',\n  'function redeem(uint256 shares, address receiver, address owner, bool withdrawFromAave) returns (uint256, uint256)',\n  'function refreshRewardTokens()',\n  'function rewardTokens() view returns (address[])',\n  'function symbol() view returns (string)',\n  'function totalAssets() view returns (uint256)',\n  'function totalSupply() view returns (uint256)',\n  'function transfer(address to, uint256 amount) returns (bool)',\n  'function transferFrom(address from, address to, uint256 amount) returns (bool)',\n  'function withdraw(uint256 assets, address receiver, address owner) returns (uint256)',\n];\n\nexport async function importStaticAaveUSDC(\n  chainId?: number,\n  preset?: string\n): Promise<{ address: string; abi: string[] }> {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '8453-andromeda': {\n      const [{ default: meta }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/meta.json'),\n      ]);\n\n      return {\n        address: meta.contracts.CollateralToken_stataBasUSDC,\n        abi,\n      };\n    }\n    //    CollateralToken_stataBasUSDC.readable.json\n    case '84532-andromeda': {\n      const [{ default: meta }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/meta.json'),\n      ]);\n\n      return {\n        address: meta.contracts.CollateralToken_stataUSDC,\n        abi,\n      };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for Extras`);\n    }\n  }\n}\n","import { importStaticAaveUSDC } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useStaticAaveUSDC(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'StaticAaveUSDC'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw new Error('OMFG');\n      return importStaticAaveUSDC(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","import { combineErrors, parseContractError } from '@snx-v3/parseContractError';\nimport { useAllErrors } from '@snx-v3/useAllErrors';\nimport { useClosePosition } from '@snx-v3/useClosePosition';\nimport { usePositionManager } from '@snx-v3/usePositionManager';\nimport { usePositionManagerAndromedaStataUSDC } from '@snx-v3/usePositionManagerAndromedaStataUSDC';\nimport { usePositionManagerAndromedaUSDC } from '@snx-v3/usePositionManagerAndromedaUSDC';\nimport { useStaticAaveUSDC } from '@snx-v3/useStaticAaveUSDC';\nimport { useCallback } from 'react';\n\nexport function useContractErrorParser() {\n  const { data: AllErrors } = useAllErrors();\n  const { data: ClosePosition } = useClosePosition();\n  const { data: StaticAaveUSDC } = useStaticAaveUSDC();\n  const { data: PositionManager } = usePositionManager();\n  const { data: PositionManagerAndromedaStataUSDC } = usePositionManagerAndromedaStataUSDC();\n  const { data: PositionManagerAndromedaUSDC } = usePositionManagerAndromedaUSDC();\n\n  return useCallback(\n    (error: any) => {\n      return parseContractError({\n        error,\n        abi: combineErrors([\n          AllErrors,\n          ClosePosition,\n          StaticAaveUSDC,\n          PositionManager,\n          PositionManagerAndromedaStataUSDC,\n          PositionManagerAndromedaUSDC,\n        ]),\n      });\n    },\n    [\n      AllErrors,\n      ClosePosition,\n      PositionManager,\n      PositionManagerAndromedaStataUSDC,\n      PositionManagerAndromedaUSDC,\n      StaticAaveUSDC,\n    ]\n  );\n}\n","import { importPositionManagerAndromedaStataUSDC } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function usePositionManagerAndromedaStataUSDC(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [\n      `${targetNetwork?.id}-${targetNetwork?.preset}`,\n      'PositionManagerAndromedaStataUSDC',\n    ],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw 'OMFG';\n      return importPositionManagerAndromedaStataUSDC(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","import { importPositionManagerAndromedaUSDC } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function usePositionManagerAndromedaUSDC(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [\n      `${targetNetwork?.id}-${targetNetwork?.preset}`,\n      'PositionManagerAndromedaStataUSDC',\n    ],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw 'OMFG';\n      return importPositionManagerAndromedaUSDC(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","const abi = [\n  // ERC20\n  'error InsufficientAllowance(uint256 required, uint256 existing)',\n  'error InsufficientBalance(uint256 required, uint256 existing)',\n  'event Approval(address indexed owner, address indexed spender, uint256 amount)',\n  'event Transfer(address indexed from, address indexed to, uint256 amount)',\n  'function allowance(address owner, address spender) view returns (uint256)',\n  'function approve(address spender, uint256 amount) returns (bool)',\n  'function balanceOf(address owner) view returns (uint256)',\n  'function decimals() view returns (uint8)',\n  'function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)',\n  'function increaseAllowance(address spender, uint256 addedValue) returns (bool)',\n  'function name() view returns (string)',\n  'function symbol() view returns (string)',\n  'function totalSupply() view returns (uint256)',\n  'function transfer(address to, uint256 amount) returns (bool)',\n  'function transferFrom(address from, address to, uint256 amount) returns (bool)',\n\n  // SNX\n  'function transferableSynthetix(address account) view returns (uint256 transferable)',\n  'function collateral(address account) view returns (uint256 collateral)',\n];\n\nexport async function importSNX(\n  chainId?: number,\n  preset?: string\n): Promise<{ address: string; abi: string[] }> {\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: meta }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/meta.json'),\n      ]);\n      return { address: meta.contracts.CollateralToken_SNX, abi };\n    }\n    case '11155111-main': {\n      const [{ default: meta }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/meta.json'),\n      ]);\n      return { address: meta.contracts.CollateralToken_SNX, abi };\n    }\n    case '10-main': {\n      const [{ default: meta }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/meta.json'),\n      ]);\n      return { address: meta.contracts.CollateralToken_SNX, abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for SNX`);\n    }\n  }\n}\n","import { importSNX } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useSNX(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'SNX'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw new Error('OMFG');\n      return importSNX(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","import { tokenOverrides } from '@snx-v3/constants';\nimport { importSystemToken } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useSystemToken(customNetwork?: Network) {\n  const { network: currentNetwork } = useNetwork();\n  const network = customNetwork || currentNetwork;\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'SystemToken'],\n    enabled: Boolean(network),\n    queryFn: async function (): Promise<{\n      address: string;\n      symbol: string;\n      name: string;\n      decimals: number;\n      displaySymbol: string;\n    }> {\n      if (!network) throw new Error('OMFG');\n      const systemToken = await importSystemToken(network.id, network.preset);\n      return {\n        ...systemToken,\n        displaySymbol:\n          tokenOverrides[`${network.id}-${network.preset}`]?.[systemToken.address]?.displaySymbol ??\n          systemToken.symbol,\n      };\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","export async function importSystemToken(\n  chainId?: number,\n  preset?: string\n): Promise<{\n  address: string;\n  symbol: string;\n  name: string;\n  decimals: number;\n}> {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: systemToken }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/systemToken.json'),\n      ]);\n      return systemToken;\n    }\n    case '11155111-main': {\n      const [{ default: systemToken }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/systemToken.json'),\n      ]);\n      return systemToken;\n    }\n    case '10-main': {\n      const [{ default: systemToken }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/systemToken.json'),\n      ]);\n      return systemToken;\n    }\n    case '8453-andromeda': {\n      const [{ default: systemToken }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/systemToken.json'),\n      ]);\n      return systemToken;\n    }\n    case '84532-andromeda': {\n      const [{ default: systemToken }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/systemToken.json'),\n      ]);\n      return systemToken;\n    }\n    case '42161-main': {\n      const [{ default: systemToken }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/systemToken.json'),\n      ]);\n      return systemToken;\n    }\n    case '421614-main': {\n      const [{ default: systemToken }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/systemToken.json'),\n      ]);\n      return systemToken;\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for SystemToken`);\n    }\n  }\n}\n","import { tokenOverrides } from '@snx-v3/constants';\nimport { importCollateralTokens } from '@snx-v3/contracts';\nimport { contractsHash } from '@snx-v3/tsHelpers';\nimport { MAINNET, Network, OPTIMISM, useNetwork } from '@snx-v3/useBlockchain';\nimport { useSNX } from '@snx-v3/useSNX';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { wei, Wei } from '@synthetixio/wei';\nimport { useQuery } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\n\nexport type CollateralType = {\n  address: string;\n  symbol: string;\n  displaySymbol: string;\n  name: string;\n  decimals: number;\n  depositingEnabled: boolean;\n  issuanceRatioD18: Wei;\n  liquidationRatioD18: Wei;\n  liquidationRewardD18: Wei;\n  minDelegationD18: Wei;\n  oracleNodeId: string;\n  tokenAddress: string;\n  oracle: {\n    constPrice?: Wei;\n    externalContract?: string;\n    stalenessTolerance?: string;\n    pythFeedId?: string;\n  };\n};\n\nasync function loadCollateralTypes(chainId: number, preset: string) {\n  return (await importCollateralTokens(chainId, preset)).map((config) => ({\n    address: config.address,\n    symbol: config.symbol,\n    displaySymbol: config.symbol,\n    name: config.name,\n    decimals: config.decimals,\n    depositingEnabled: config.depositingEnabled,\n    issuanceRatioD18: wei(config.issuanceRatioD18, 18, true),\n    liquidationRatioD18: wei(config.liquidationRatioD18, 18, true),\n    liquidationRewardD18: wei(config.liquidationRewardD18, 18, true),\n    minDelegationD18: wei(config.minDelegationD18, 18, true),\n    oracleNodeId: config.oracleNodeId,\n    tokenAddress: config.tokenAddress,\n    oracle: {\n      constPrice: config.oracle.constPrice ? wei(config.oracle.constPrice, 18, true) : undefined,\n      externalContract: config.oracle.externalContract,\n      stalenessTolerance: config.oracle.stalenessTolerance,\n      pythFeedId: config.oracle.pythFeedId,\n    },\n  }));\n}\n\nexport function useCollateralTypes(includeDelegationOff = false, customNetwork?: Network) {\n  const { network: currentNetwork } = useNetwork();\n  const network = customNetwork ?? currentNetwork;\n  const { data: systemToken } = useSystemToken(customNetwork);\n  const { data: MainnetSNX } = useSNX(MAINNET);\n  const { data: OptimismSNX } = useSNX(OPTIMISM);\n\n  return useQuery({\n    enabled: Boolean(network?.id && network?.preset && systemToken && MainnetSNX && OptimismSNX),\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'CollateralTypes',\n      { includeDelegationOff },\n      { contractsHash: contractsHash([systemToken, MainnetSNX, OptimismSNX]) },\n    ],\n    queryFn: async () => {\n      if (!(network?.id && network?.preset && systemToken && MainnetSNX && OptimismSNX))\n        throw Error('useCollateralTypes should not be enabled when contracts missing');\n\n      const collateralTypes = (await loadCollateralTypes(network.id, network.preset))\n        .map((collateralType) => {\n          if (network?.preset === 'andromeda' && collateralType.symbol === 'sUSDC') {\n            return {\n              ...collateralType,\n              symbol: 'USDC',\n              displaySymbol: 'USDC',\n              name: 'USD Coin',\n            };\n          }\n          if (network?.preset === 'andromeda' && collateralType.symbol === 'sStataUSDC') {\n            return {\n              ...collateralType,\n              symbol: 'stataUSDC',\n              displaySymbol: 'Static aUSDC',\n              name: 'Static aUSDC',\n            };\n          }\n\n          return {\n            ...collateralType,\n            displaySymbol:\n              tokenOverrides[`${network.id}-${network.preset}`]?.[collateralType.address]\n                ?.displaySymbol ??\n              collateralType.displaySymbol ??\n              collateralType.symbol,\n          };\n        })\n        .filter((collateralType) => collateralType.tokenAddress !== systemToken.address);\n\n      return collateralTypes\n        .filter(\n          (collateralType) =>\n            collateralType.depositingEnabled ||\n            (network.id === MAINNET.id && collateralType.address === MainnetSNX.address) ||\n            (network.id === OPTIMISM.id && collateralType.address === OptimismSNX.address)\n        )\n        .filter(\n          (collateralType) =>\n            // Return collateral types that have minDelegationD18 < MaxUint256\n            // When minDelegationD18 === MaxUint256, delegation is effectively disabled\n            includeDelegationOff || collateralType.minDelegationD18.lt(ethers.constants.MaxUint256)\n        );\n    },\n    // one hour in ms\n    staleTime: 3_600_000,\n  });\n}\n\nexport function useCollateralType(collateralSymbol?: string, networkOverride?: Network) {\n  const { network: currentNetwork } = useNetwork();\n  const network = networkOverride || currentNetwork;\n  const { data: collateralTypes } = useCollateralTypes(true, networkOverride);\n\n  return useQuery({\n    enabled: Boolean(network && collateralTypes && collateralSymbol),\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'CollateralType',\n      { collateralSymbol },\n      { contractsHash: contractsHash(collateralTypes ?? []) },\n    ],\n    queryFn: async () => {\n      if (!(network && collateralTypes && collateralSymbol)) {\n        throw new Error('OMFG');\n      }\n\n      const collateralType = collateralTypes.find(\n        (collateral) => `${collateral.symbol}`.toLowerCase() === `${collateralSymbol}`.toLowerCase()\n      );\n      if (!collateralType) {\n        throw new Error('Unsupported collateral');\n      }\n      return collateralType;\n    },\n    // one hour in ms\n    staleTime: 3_600_000,\n    throwOnError: false,\n  });\n}\n","export async function importCollateralTokens(\n  chainId?: number,\n  preset?: string\n): Promise<\n  {\n    address: string;\n    symbol: string;\n    name: string;\n    decimals: number;\n    depositingEnabled: boolean;\n    issuanceRatioD18: string;\n    liquidationRatioD18: string;\n    liquidationRewardD18: string;\n    oracleNodeId: string;\n    tokenAddress: string;\n    minDelegationD18: string;\n    oracle: {\n      constPrice?: string;\n      externalContract?: string;\n      stalenessTolerance?: string;\n      pythFeedId?: string;\n    };\n  }[]\n> {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: collateralTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/collateralTokens.json'),\n      ]);\n      return collateralTokens;\n    }\n    case '11155111-main': {\n      const [{ default: collateralTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/collateralTokens.json'),\n      ]);\n      return collateralTokens;\n    }\n    case '10-main': {\n      const [{ default: collateralTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/collateralTokens.json'),\n      ]);\n      return collateralTokens;\n    }\n    case '8453-andromeda': {\n      const [{ default: collateralTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/collateralTokens.json'),\n      ]);\n      return collateralTokens;\n    }\n    case '84532-andromeda': {\n      const [{ default: collateralTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/collateralTokens.json'),\n      ]);\n      return collateralTokens;\n    }\n    case '42161-main': {\n      const [{ default: collateralTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/collateralTokens.json'),\n      ]);\n      return collateralTokens;\n    }\n    case '421614-main': {\n      const [{ default: collateralTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/collateralTokens.json'),\n      ]);\n      return collateralTokens;\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for CollateralTokens`);\n    }\n  }\n}\n","import { importRewardsDistributors } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useRewardsDistributors(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'RewardsDistributors'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw new Error('OMFG');\n      return importRewardsDistributors(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","export async function importRewardsDistributors(\n  chainId?: number,\n  preset?: string\n): Promise<\n  {\n    address: string;\n    name: string;\n    poolId: string;\n\n    // undefined for Pool-level distributors\n    collateralType?: {\n      address: string;\n      symbol: string;\n      name: string;\n      decimals: number;\n    };\n\n    payoutToken: {\n      address: string;\n      symbol: string;\n      name: string;\n      decimals: number;\n    };\n    rewardManager: string;\n    isRegistered: boolean;\n  }[]\n> {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: rewardsDistributors }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/rewardsDistributors.json'),\n      ]);\n      return rewardsDistributors;\n    }\n    case '11155111-main': {\n      const [{ default: rewardsDistributors }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/rewardsDistributors.json'),\n      ]);\n      return rewardsDistributors;\n    }\n    case '10-main': {\n      const [{ default: rewardsDistributors }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/rewardsDistributors.json'),\n      ]);\n      return rewardsDistributors;\n    }\n    case '8453-andromeda': {\n      const [{ default: rewardsDistributors }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/rewardsDistributors.json'),\n      ]);\n      return rewardsDistributors;\n    }\n    case '84532-andromeda': {\n      const [{ default: rewardsDistributors }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/rewardsDistributors.json'),\n      ]);\n      return rewardsDistributors;\n    }\n    case '42161-main': {\n      const [{ default: rewardsDistributors }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/rewardsDistributors.json'),\n      ]);\n      return rewardsDistributors;\n    }\n    case '421614-main': {\n      const [{ default: rewardsDistributors }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/rewardsDistributors.json'),\n      ]);\n      return rewardsDistributors;\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for RewardsDistributors`);\n    }\n  }\n}\n","import { importSynthTokens } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useSynthTokens(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'SynthTokens'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw new Error('OMFG');\n      return importSynthTokens(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","export async function importSynthTokens(\n  chainId?: number,\n  preset?: string\n): Promise<\n  {\n    synthMarketId: string;\n    address: string;\n    symbol: string;\n    name: string;\n    decimals: number;\n\n    // undefined for some synths (like Synthetic USDe on Mainnet)\n    token?: {\n      address: string;\n      symbol: string;\n      name: string;\n      decimals: number;\n    };\n  }[]\n> {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: synthTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/synthTokens.json'),\n      ]);\n      return synthTokens;\n    }\n    case '11155111-main': {\n      const [{ default: synthTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/synthTokens.json'),\n      ]);\n      return synthTokens;\n    }\n    case '10-main': {\n      const [{ default: synthTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/synthTokens.json'),\n      ]);\n      return synthTokens;\n    }\n    case '8453-andromeda': {\n      const [{ default: synthTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/synthTokens.json'),\n      ]);\n      return synthTokens;\n    }\n    case '84532-andromeda': {\n      const [{ default: synthTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/synthTokens.json'),\n      ]);\n      return synthTokens;\n    }\n    case '42161-main': {\n      const [{ default: synthTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/synthTokens.json'),\n      ]);\n      return synthTokens;\n    }\n    case '421614-main': {\n      const [{ default: synthTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/synthTokens.json'),\n      ]);\n      return synthTokens;\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for SynthTokens`);\n    }\n  }\n}\n","import { POOL_ID, tokenOverrides } from '@snx-v3/constants';\nimport { contractsHash } from '@snx-v3/tsHelpers';\n// import { useAllErrors } from '@snx-v3/useAllErrors';\nimport { type Network, useNetwork, useProvider } from '@snx-v3/useBlockchain';\nimport { useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useRewardsDistributors } from '@snx-v3/useRewardsDistributors';\nimport { useSynthTokens } from '@snx-v3/useSynthTokens';\nimport { useTrustedMulticallForwarder } from '@snx-v3/useTrustedMulticallForwarder';\nimport { Wei, wei } from '@synthetixio/wei';\nimport { useQuery } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\n\nconst log = debug('snx:useRewards');\n\nexport function groupRewardsBySymbol({\n  network,\n  rewards,\n  synthTokens,\n}: {\n  network: Network;\n  rewards?: {\n    distributor: {\n      payoutToken: {\n        address: string;\n        symbol: string;\n      };\n    };\n    claimableAmount: Wei;\n  }[];\n  synthTokens?: {\n    address: string;\n    token?: {\n      address: string;\n      symbol: string;\n    };\n  }[];\n}):\n  | undefined\n  | {\n      displaySymbol: string;\n      claimableAmount: Wei;\n    }[] {\n  if (rewards && rewards.length > 0) {\n    const map = new Map();\n    rewards\n      .filter(({ claimableAmount }) => claimableAmount.gt(0))\n      .forEach(({ distributor, claimableAmount }) => {\n        const synthToken = synthTokens?.find(\n          (synth) => synth.address.toLowerCase() === distributor.payoutToken.address.toLowerCase()\n        );\n        const token = synthToken && synthToken.token ? synthToken.token : distributor.payoutToken;\n        const displaySymbol =\n          tokenOverrides[`${network.id}-${network.preset}`]?.[token.address]?.symbol ??\n          token.symbol;\n        if (map.has(displaySymbol)) {\n          map.set(displaySymbol, map.get(displaySymbol).add(claimableAmount));\n        } else {\n          map.set(displaySymbol, claimableAmount);\n        }\n      });\n    return Array.from(map.entries())\n      .map(([displaySymbol, claimableAmount]) => ({\n        displaySymbol,\n        claimableAmount,\n      }))\n      .sort((a, b) => a.displaySymbol.localeCompare(b.displaySymbol))\n      .sort((a, b) => b.claimableAmount.toNumber() - a.claimableAmount.toNumber());\n  }\n}\n\nexport function useRewards({ accountId }: { accountId?: string }) {\n  const { network } = useNetwork();\n  const provider = useProvider();\n  const { data: synthTokens } = useSynthTokens();\n  const { data: collateralTypes } = useCollateralTypes();\n  const { data: Multicall3 } = useTrustedMulticallForwarder(network);\n  const { data: CoreProxy } = useCoreProxy(network);\n  // const { data: AllErrors } = useAllErrors(network);\n  const { data: rewardsDistributors } = useRewardsDistributors(network);\n\n  return useQuery({\n    enabled: Boolean(\n      network &&\n        CoreProxy &&\n        Multicall3 &&\n        // AllErrors &&\n        rewardsDistributors &&\n        accountId &&\n        collateralTypes &&\n        synthTokens\n    ),\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'Rewards',\n      { accountId },\n      {\n        contractsHash: contractsHash([\n          CoreProxy,\n          Multicall3,\n          ...(rewardsDistributors ?? []),\n          ...(synthTokens ?? []),\n          ...(collateralTypes ?? []),\n        ]),\n      },\n    ],\n    queryFn: async () => {\n      if (\n        !(\n          CoreProxy &&\n          Multicall3 &&\n          // AllErrors &&\n          rewardsDistributors &&\n          accountId &&\n          collateralTypes &&\n          synthTokens\n        )\n      ) {\n        throw new Error('OMG');\n      }\n\n      const vaultDistributors = rewardsDistributors\n        .map((distributor) => {\n          if (distributor.collateralType) {\n            return {\n              method: 'getAvailableRewards',\n              claimMethod: 'claimRewards',\n              args: [\n                ethers.BigNumber.from(accountId),\n                ethers.BigNumber.from(POOL_ID),\n                distributor.collateralType.address,\n                distributor.address,\n              ],\n              distributor,\n              collateralType: distributor.collateralType,\n            };\n          }\n        })\n        .filter((item) => item !== undefined);\n      log('vaultDistributors', vaultDistributors);\n\n      const poolDistributors = rewardsDistributors\n        .filter((distributor) => !distributor.collateralType)\n        .filter((distributor) => !distributor.name.includes('Liquidation Rewards'))\n        .flatMap((distributor) => ({\n          method: 'getAvailablePoolRewards',\n          claimMethod: 'claimPoolRewards',\n          args: [\n            ethers.BigNumber.from(accountId),\n            ethers.BigNumber.from(POOL_ID),\n            ethers.constants.AddressZero,\n            distributor.address,\n          ],\n          distributor,\n          collateralType: undefined,\n        }));\n      log('poolDistributors', poolDistributors);\n\n      const poolDistributorsPerCollateral = rewardsDistributors\n        .filter((distributor) => !distributor.collateralType)\n        .filter((distributor) => !distributor.name.includes('Liquidation Rewards'))\n        .flatMap((distributor) =>\n          collateralTypes.map((collateralType) => ({\n            method: 'getAvailablePoolRewards',\n            claimMethod: 'claimPoolRewards',\n            args: [\n              ethers.BigNumber.from(accountId),\n              ethers.BigNumber.from(POOL_ID),\n              collateralType.address,\n              distributor.address,\n            ],\n            distributor,\n            collateralType,\n          }))\n        );\n      log('poolDistributorsPerCollateral', poolDistributorsPerCollateral);\n\n      const liquidationRewardsDistributors = rewardsDistributors\n        .filter((distributor) => !distributor.collateralType)\n        .filter((distributor) => distributor.name.includes('Liquidation Rewards'))\n        .flatMap((distributor) =>\n          collateralTypes.map((collateralType) => ({\n            method: 'getAvailableRewards',\n            claimMethod: 'claimRewards',\n            args: [\n              ethers.BigNumber.from(accountId),\n              ethers.BigNumber.from(POOL_ID),\n              collateralType.address,\n              distributor.address,\n            ],\n            distributor,\n            collateralType,\n          }))\n        );\n      log('liquidationRewardsDistributors', liquidationRewardsDistributors);\n\n      const multicall = [\n        ...vaultDistributors,\n        ...poolDistributors,\n        ...poolDistributorsPerCollateral,\n        ...liquidationRewardsDistributors,\n      ];\n      log('multicall', multicall);\n\n      const CoreProxyContract = new ethers.Contract(CoreProxy.address, CoreProxy.abi, provider);\n      const calls = await Promise.all(\n        multicall.map(async ({ method, args }) => {\n          const { to, data } = await CoreProxyContract.populateTransaction[method](...args);\n          return {\n            target: to,\n            callData: data,\n            allowFailure: true,\n          };\n        })\n      );\n      log('calls', calls);\n\n      const Multicall3Contract = new ethers.Contract(Multicall3.address, Multicall3.abi, provider);\n      const multicallResponse = await Multicall3Contract.callStatic.aggregate3(calls);\n      log('multicallResponse', multicallResponse);\n\n      // const AllErrorsInterface = new ethers.utils.Interface(AllErrors.abi);\n      const availableRewards = multicall\n        .map(({ method, claimMethod, args, distributor, collateralType }, i) => {\n          const { success, returnData } = multicallResponse[i];\n          if (!success) {\n            // log(\n            //   `${method} call error for ${distributor.name}`,\n            //   AllErrorsInterface.parseError(returnData)\n            // );\n            return;\n          }\n          const [amount] = CoreProxyContract.interface.decodeFunctionResult(method, returnData);\n          return {\n            method,\n            claimMethod,\n            args,\n            distributor,\n            collateralType,\n            claimableAmount: wei(amount),\n          };\n        })\n        .filter((info) => info !== undefined);\n      log('availableRewards', availableRewards);\n      return availableRewards;\n    },\n  });\n}\n","export async function importSpotMarketProxy(\n  chainId?: number,\n  preset?: string\n): Promise<{ address: string; abi: string[] }> {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/meta.json'),\n        import('@synthetixio/v3-contracts/1-main/SpotMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.SpotMarketProxy, abi };\n    }\n    case '11155111-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/meta.json'),\n        import('@synthetixio/v3-contracts/11155111-main/SpotMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.SpotMarketProxy, abi };\n    }\n    case '10-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/meta.json'),\n        import('@synthetixio/v3-contracts/10-main/SpotMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.SpotMarketProxy, abi };\n    }\n    case '8453-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/8453-andromeda/SpotMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.SpotMarketProxy, abi };\n    }\n    case '84532-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/84532-andromeda/SpotMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.SpotMarketProxy, abi };\n    }\n    case '42161-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/meta.json'),\n        import('@synthetixio/v3-contracts/42161-main/SpotMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.SpotMarketProxy, abi };\n    }\n    case '421614-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/meta.json'),\n        import('@synthetixio/v3-contracts/421614-main/SpotMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.SpotMarketProxy, abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for SpotMarketProxy`);\n    }\n  }\n}\n","import { importSpotMarketProxy } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useSpotMarketProxy(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'SpotMarketProxy'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw new Error('OMFG');\n      return importSpotMarketProxy(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","export async function importUSDProxy(\n  chainId?: number,\n  preset?: string\n): Promise<{ address: string; abi: string[] }> {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/meta.json'),\n        import('@synthetixio/v3-contracts/1-main/USDProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.USDProxy, abi };\n    }\n    case '11155111-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/meta.json'),\n        import('@synthetixio/v3-contracts/11155111-main/USDProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.USDProxy, abi };\n    }\n    case '10-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/meta.json'),\n        import('@synthetixio/v3-contracts/10-main/USDProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.USDProxy, abi };\n    }\n    case '8453-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/8453-andromeda/USDProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.USDProxy, abi };\n    }\n    case '84532-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/84532-andromeda/USDProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.USDProxy, abi };\n    }\n    case '42161-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/meta.json'),\n        import('@synthetixio/v3-contracts/42161-main/USDProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.USDProxy, abi };\n    }\n    case '421614-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/meta.json'),\n        import('@synthetixio/v3-contracts/421614-main/USDProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.USDProxy, abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for USDProxy`);\n    }\n  }\n}\n","// This is a type guard function that checks if a value is not null and not undefined.\n// This is useful when filtering an array that might have null or undefined values.\nexport const notNil = <T>(x: T | null | undefined): x is T => x !== null && x !== undefined;\n","/* eslint-disable no-console */\nimport { EvmPriceServiceConnection } from '@pythnetwork/pyth-evm-js';\nimport { offchainMainnetEndpoint, offchainTestnetEndpoint } from '@snx-v3/constants';\nimport {\n  importAccountProxy,\n  importClosePosition,\n  importCoreProxy,\n  importPositionManager,\n  importPositionManagerAndromedaStataUSDC,\n  importPositionManagerAndromedaUSDC,\n  importPythERC7412Wrapper,\n  importPythVerifier,\n  importSpotMarketProxy,\n  importTrustedMulticallForwarder,\n  importUSDProxy,\n} from '@snx-v3/contracts';\nimport { extractErrorData } from '@snx-v3/parseContractError';\nimport { notNil } from '@snx-v3/tsHelpers';\nimport { deploymentHasERC7412, Network } from '@snx-v3/useBlockchain';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\n\nasync function fetchOffchainData({\n  priceIds,\n  isTestnet,\n}: {\n  priceIds: string[];\n  isTestnet: boolean;\n}) {\n  const priceService = new EvmPriceServiceConnection(\n    isTestnet ? offchainTestnetEndpoint : offchainMainnetEndpoint\n  );\n  const signedOffchainData = await priceService.getPriceFeedsUpdateData(priceIds);\n  return signedOffchainData;\n}\n\n// simulate w/ wETH contract because it will have eth balance\n// This is useful when we do read/static calls but still need an balance for the price update\n// TODO: this probably need to be network aware, maybe look into a different solution even.\nexport const getDefaultFromAddress = (chainName: string) => {\n  switch (chainName) {\n    case 'cannon':\n      return '0x4200000000000000000000000000000000000006'; // TODO, unclear what to put here\n    case 'mainnet':\n      return '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2';\n    case 'sepolia':\n      return '0x7b79995e5f793a07bc00c21412e50ecae098e7f9';\n    case 'arbitrum':\n      return '0x82aF49447D8a07e3bd95BD0d56f35241523fBab1';\n    case 'arbitrum-sepolia':\n      return '0x980B62Da83eFf3D4576C647993b0c1D7faf17c73';\n    case 'optimism-mainnet':\n    case 'base':\n    case 'base-sepolia':\n      return '0x4200000000000000000000000000000000000006';\n\n    default:\n      throw new Error(`Unsupported chain ${chainName}`);\n  }\n};\n\nfunction dedupedFunctions(abi: string[]) {\n  const deduped = new Set();\n  const readableAbi: string[] = [];\n  abi\n    .filter((line: string) => line.startsWith('function '))\n    .forEach((line: string) => {\n      const fragment = ethers.utils.Fragment.from(line);\n      if (fragment) {\n        const minimal = fragment.format(ethers.utils.FormatTypes.sighash);\n        if (!deduped.has(minimal)) {\n          readableAbi.push(fragment.format(ethers.utils.FormatTypes.full));\n          deduped.add(minimal);\n        }\n      }\n    });\n  return readableAbi;\n}\n\nexport async function logMulticall({\n  network,\n  calls,\n  label,\n}: {\n  network: Network;\n  calls: (ethers.PopulatedTransaction & { requireSuccess?: boolean })[];\n  label: string;\n}) {\n  const log = debug(`snx:withERC7412:${label}`);\n  if (!log.enabled) {\n    return;\n  }\n  const AllInterface = new ethers.utils.Interface(\n    dedupedFunctions(\n      (\n        await Promise.all([\n          importCoreProxy(network.id, network.preset).catch(() => ({ abi: [] })),\n          importSpotMarketProxy(network.id, network.preset).catch(() => ({ abi: [] })),\n          importAccountProxy(network.id, network.preset).catch(() => ({ abi: [] })),\n          importUSDProxy(network.id, network.preset).catch(() => ({ abi: [] })),\n          importClosePosition(network.id, network.preset).catch(() => ({ abi: [] })),\n          importPythERC7412Wrapper(network.id, network.preset).catch(() => ({ abi: [] })),\n          importPythVerifier(network.id, network.preset).catch(() => ({ abi: [] })),\n          importPositionManager(network.id, network.preset).catch(() => ({ abi: [] })),\n          importPositionManagerAndromedaUSDC(network.id, network.preset).catch(() => ({ abi: [] })),\n          importPositionManagerAndromedaStataUSDC(network.id, network.preset).catch(() => ({\n            abi: [],\n          })),\n        ])\n      ).flatMap((c) => (c ? c.abi : []))\n    )\n  );\n  log(\n    'multicall calls',\n    calls.map(({ data, value, ...rest }) => {\n      try {\n        // @ts-ignore\n        const { name, args } = AllInterface.parseTransaction({ data, value });\n        if (Object.keys(args).filter(([key]) => `${key}` !== `${parseInt(key)}`).length > 0) {\n          const namedArgs = Object.fromEntries(\n            Object.entries(args).filter(([key]) => `${key}` !== `${parseInt(key)}`)\n          );\n          return { $: name, ...namedArgs };\n        }\n\n        const unnamedArgs = Object.entries(args)\n          .filter(([key]) => `${key}` === `${parseInt(key)}`)\n          .map(([, value]) => value);\n        return { $: name, ...unnamedArgs };\n      } catch {\n        return { $: 'unknown', data, value, ...rest };\n      }\n    })\n  );\n}\n\nasync function getMulticallTransaction(\n  network: Network,\n  calls: (ethers.PopulatedTransaction & { requireSuccess?: boolean })[],\n  from: string,\n  provider: ethers.providers.BaseProvider\n) {\n  const Multicall3Contract = await importTrustedMulticallForwarder(network.id, network.preset);\n  const Multicall3Interface = new ethers.utils.Interface(Multicall3Contract.abi);\n\n  const multicallTxn = {\n    from: from ? from : getDefaultFromAddress(network.name),\n    to: Multicall3Contract.address,\n    data: Multicall3Interface.encodeFunctionData('aggregate3Value', [\n      calls.map((call) => ({\n        target: call.to,\n        callData: call.data,\n        value: call.value ? ethers.BigNumber.from(call.value) : ethers.BigNumber.from(0),\n        requireSuccess: call.requireSuccess ?? true,\n      })),\n    ]),\n    value: calls.reduce(\n      (totalValue, call) => (call.value ? totalValue.add(call.value) : totalValue),\n      ethers.BigNumber.from(0)\n    ),\n  };\n  const gasLimit = await provider.estimateGas(multicallTxn);\n  return { multicallTxn, gasLimit, _calls: calls };\n}\n\n/**\n * If a tx requires ERC7412 pattern, wrap your tx with this function.\n */\nexport const withERC7412 = async (\n  provider: ethers.providers.BaseProvider,\n  network: Network,\n  calls: (ethers.PopulatedTransaction & { requireSuccess?: boolean })[],\n  label: string,\n  from: string\n) => {\n  const log = debug(`snx:withERC7412:${label}`);\n\n  if (!(await deploymentHasERC7412(network.id, network.preset))) {\n    await logMulticall({ network, calls, label });\n    return await getMulticallTransaction(network, calls, from, provider);\n  }\n\n  const PythVerfier = await importPythVerifier(network.id, network.preset);\n\n  while (true) {\n    try {\n      await logMulticall({ network, calls, label });\n      return await getMulticallTransaction(network, calls, from, provider);\n    } catch (error: Error | any) {\n      console.error(error);\n      let errorData = extractErrorData(error);\n      if (!errorData && error.transaction) {\n        try {\n          log('Error is missing revert data, trying provider.call, instead of estimate gas...');\n          // Some wallets swallows the revert reason when calling estimate gas,try to get the error by using provider.call\n          // provider.call wont actually revert, instead the error data is just returned\n          const lookedUpError = await provider.call(error.transaction);\n          errorData = lookedUpError;\n        } catch (newError: any) {\n          // console.error(newError);\n          log('provider.call(error.transaction) failed, trying to extract error', newError);\n          errorData = extractErrorData(error);\n        }\n      }\n      if (!errorData) {\n        throw error;\n      }\n      log('errorData', errorData);\n\n      // Collect all the price IDs that require updates\n      const missingPriceUpdates: string[] = errorData\n        // Signature of OracleDataRequired\n        .split('cf2cabdf')\n        // Skip all the data before the first signature of OracleDataRequired\n        .slice(1)\n        // Full OracleDataRequired without signature is 512 bytes\n        .map((s: string) => s.slice(0, 512))\n        // Price feed is the last and has 64 bytes, prefix with 0x\n        .map((s: string) => `0x${s.slice(-64)}`);\n      if (missingPriceUpdates.length < 1) {\n        // some other kind of error that's not related to price\n        throw error;\n      }\n\n      const missingPriceUpdatesUnique = Array.from(new Set(missingPriceUpdates));\n      log('missingPriceUpdates', missingPriceUpdatesUnique);\n\n      const signedOffchainData = await fetchOffchainData({\n        priceIds: missingPriceUpdatesUnique,\n        isTestnet: network.isTestnet,\n      });\n\n      const extraPriceUpdateTxn = {\n        from,\n        to: PythVerfier.address,\n        data: new ethers.utils.Interface(PythVerfier.abi).encodeFunctionData('updatePriceFeeds', [\n          signedOffchainData,\n        ]),\n        value: ethers.BigNumber.from(missingPriceUpdatesUnique.length),\n        requireSuccess: false,\n      };\n      log('extraPriceUpdateTxn', extraPriceUpdateTxn);\n\n      // Update calls to include price update txn\n      // And carry on with our while(true)\n      calls = [extraPriceUpdateTxn, ...calls];\n    }\n  }\n};\n\n/**\n * This can be used to do reads plus decoding. The return type will be whatever the type of the decode function is. And the arguments passed will have the multicall decoded and price updates removed\n */\nexport async function erc7412Call<T>(\n  network: Network,\n  provider: ethers.providers.BaseProvider,\n  calls: (ethers.PopulatedTransaction & { requireSuccess?: boolean })[],\n  decode: (x: { success: boolean; returnData: string }[]) => T,\n  label: string\n) {\n  const log = debug(`snx:withERC7412:${label}`);\n\n  const TrustedMulticallForwarder = await importTrustedMulticallForwarder(\n    network.id,\n    network.preset\n  );\n\n  const from = getDefaultFromAddress(network.name);\n\n  const {\n    _calls: newCalls,\n    multicallTxn: erc7412Tx,\n    gasLimit,\n  } = await withERC7412(\n    provider,\n    network,\n    calls.filter(notNil).map((call) => (call.from ? call : { ...call, from })), // fill missing \"from\"\n    label,\n    from\n  );\n\n  const res = await provider.call({\n    ...erc7412Tx,\n    gasLimit: gasLimit.mul(15).div(10),\n  });\n  if (res === '0x') {\n    throw new Error(`[${label}] Call returned 0x`);\n  }\n\n  const decodedMulticall: { success: boolean; returnData: string }[] = new ethers.utils.Interface(\n    TrustedMulticallForwarder.abi\n  ).decodeFunctionResult('aggregate3Value', res)[0];\n  log('multicall response', decodedMulticall);\n\n  const PythVerifier = await importPythVerifier(network.id, network.preset);\n  const decodedMulticallWithoutPriceUpdates = decodedMulticall\n    // Remove the price updates\n    .filter((_, i) => newCalls?.[i]?.to?.toLowerCase() !== PythVerifier.address?.toLowerCase());\n\n  if (calls.length !== decodedMulticallWithoutPriceUpdates.length) {\n    throw new Error(`[${label}] Unexpected multicall response`);\n  }\n  const decoded = decode(decodedMulticallWithoutPriceUpdates);\n  log(`multicall decoded`, decoded);\n  return decoded;\n}\n","import { useToast } from '@chakra-ui/react';\nimport { D18 } from '@snx-v3/constants';\nimport { ContractError } from '@snx-v3/ContractError';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { useCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useRewards } from '@snx-v3/useRewards';\nimport { useSpotMarketProxy } from '@snx-v3/useSpotMarketProxy';\nimport { useSynthTokens } from '@snx-v3/useSynthTokens';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\nimport React from 'react';\n\nconst log = debug('snx:useClaimAllRewards');\n\nexport function useClaimAllRewards({ accountId }: { accountId?: string }) {\n  const { data: rewards } = useRewards({ accountId });\n\n  const toast = useToast({ isClosable: true, duration: 9000 });\n\n  const { network } = useNetwork();\n  const { data: SpotMarketProxy } = useSpotMarketProxy();\n  const signer = useSigner();\n  const { data: CoreProxy } = useCoreProxy();\n  const [txnState, dispatch] = React.useReducer(reducer, initialState);\n  const queryClient = useQueryClient();\n  const provider = useProvider();\n  const { data: synthTokens } = useSynthTokens();\n\n  const { data: priceUpdateTx } = useCollateralPriceUpdates();\n\n  const errorParser = useContractErrorParser();\n\n  const mutation = useMutation({\n    mutationFn: async function () {\n      if (\n        !(network && provider && signer && SpotMarketProxy && CoreProxy && rewards && synthTokens)\n      ) {\n        throw new Error('Not ready');\n      }\n\n      dispatch({ type: 'prompting' });\n\n      const transactions: Promise<ethers.PopulatedTransaction>[] = [];\n\n      const CoreProxyContract = new ethers.Contract(CoreProxy.address, CoreProxy.abi, signer);\n      const SpotMarketProxyContract = new ethers.Contract(\n        SpotMarketProxy.address,\n        SpotMarketProxy.abi,\n        signer\n      );\n\n      rewards.forEach(({ distributor, claimableAmount, claimMethod, args }) => {\n        if (claimableAmount.gt(0)) {\n          transactions.push(CoreProxyContract.populateTransaction[claimMethod](...args));\n\n          const synthToken = synthTokens.find(\n            (synth) => synth.address.toLowerCase() === distributor.payoutToken.address.toLowerCase()\n          );\n          if (synthToken && synthToken.token) {\n            const minAmountReceived = claimableAmount\n              .toBN()\n              .sub(claimableAmount.toBN().div(100))\n              // Adjust precision for underlying token\n              .mul(ethers.utils.parseUnits('1', synthToken.token.decimals))\n              .div(D18);\n\n            transactions.push(\n              SpotMarketProxyContract.populateTransaction.unwrap(\n                synthToken.synthMarketId,\n                claimableAmount.toBN(),\n                minAmountReceived\n              )\n            );\n          }\n        }\n      });\n\n      const calls = await Promise.all(transactions);\n      log('calls', calls);\n\n      if (priceUpdateTx) {\n        calls.unshift(priceUpdateTx as any);\n      }\n\n      const walletAddress = await signer.getAddress();\n      const { multicallTxn: erc7412Tx, gasLimit } = await withERC7412(\n        provider,\n        network,\n        calls,\n        'useClaimAllRewards',\n        walletAddress\n      );\n      const txn = await signer.sendTransaction({\n        ...erc7412Tx,\n        gasLimit: gasLimit.mul(15).div(10),\n      });\n      log('txn', txn);\n      dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n      return receipt;\n    },\n\n    onError(error) {\n      const contractError = errorParser(error);\n      if (contractError) {\n        console.error(new Error(contractError.name), contractError);\n      }\n\n      dispatch({ type: 'error', payload: { error } });\n\n      toast.closeAll();\n      toast({\n        title: 'Claiming failed',\n        description: contractError ? (\n          <ContractError contractError={contractError} />\n        ) : (\n          'Please try again.'\n        ),\n        status: 'error',\n        variant: 'left-accent',\n        duration: 3_600_000,\n      });\n    },\n\n    onSuccess: async () => {\n      const deployment = `${network?.id}-${network?.preset}`;\n      await Promise.all(\n        [\n          //\n          'PriceUpdates',\n          'Rewards',\n          'TokenBalance',\n          'SynthBalances',\n          'EthBalance',\n        ].map((key) => queryClient.invalidateQueries({ queryKey: [deployment, key] }))\n      );\n      dispatch({ type: 'success' });\n\n      toast.closeAll();\n      toast({\n        title: 'Success',\n        description: 'Your rewards have been claimed',\n        status: 'success',\n        duration: 5000,\n        variant: 'left-accent',\n      });\n    },\n  });\n\n  return {\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n}\n","import { Text, TextProps } from '@chakra-ui/react';\nimport { currency } from '@snx-v3/format';\nimport { wei, Wei } from '@synthetixio/wei';\nimport { constants } from 'ethers';\nimport React from 'react';\n\nexport function Amount({\n  value,\n  prefix = '',\n  suffix = '',\n  'data-cy': testId,\n  ...props\n}: {\n  prefix?: string;\n  value?: Wei;\n  suffix?: string;\n  'data-cy'?: string;\n} & TextProps) {\n  const isMaxUint = value && wei(constants.MaxInt256).lte(value);\n  const formattedValue = React.useMemo(() => currency(value), [value]);\n\n  return (\n    <Text as=\"span\" data-cy={testId} {...props}>\n      {prefix}\n      {isMaxUint ? 'Infinite' : formattedValue}\n      {!isMaxUint && suffix}\n    </Text>\n  );\n}\n","import { contractsHash } from '@snx-v3/tsHelpers';\nimport { useNetwork, useProvider } from '@snx-v3/useBlockchain';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useQuery } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\n\nexport function useAccountCollateralUnlockDate({ accountId }: { accountId?: string }) {\n  const { data: CoreProxy } = useCoreProxy();\n  const { network } = useNetwork();\n  const provider = useProvider();\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'AccountCollateralUnlockDate',\n      { accountId },\n      { contractsHash: contractsHash([CoreProxy]) },\n    ],\n    enabled: Boolean(provider && CoreProxy && accountId),\n    queryFn: async function () {\n      if (!(provider && CoreProxy && accountId)) throw 'OMFG';\n      const CoreProxyContract = new ethers.Contract(CoreProxy.address, CoreProxy.abi, provider);\n      const [lastInteraction, accountTimeoutWithdraw] = await Promise.all([\n        CoreProxyContract.getAccountLastInteraction(accountId),\n        CoreProxyContract.getConfigUint(ethers.utils.formatBytes32String('accountTimeoutWithdraw')),\n      ]);\n      const collateralUnlock = lastInteraction.add(accountTimeoutWithdraw);\n      return new Date(collateralUnlock.toNumber() * 1000);\n    },\n  });\n}\n","import { Alert, AlertIcon, Text } from '@chakra-ui/react';\nimport { useAccountCollateralUnlockDate } from '@snx-v3/useAccountCollateralUnlockDate';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\n\nexport function WithdrawIncrease() {\n  return (\n    <Alert borderRadius=\"6px\" status=\"warning\" mb=\"6\">\n      <AlertIcon />\n      <Text>This action will reset the withdrawal waiting period to 24 hours</Text>\n    </Alert>\n  );\n}\n\nexport function DepositsIncreaseTimeout() {\n  const [params] = useParams<PositionPageSchemaType>();\n  const { data: accountCollateralUnlockDate } = useAccountCollateralUnlockDate({\n    accountId: params.accountId,\n  });\n\n  return (\n    <Alert borderRadius=\"6px\" status=\"warning\" mb=\"6\">\n      <AlertIcon />\n      {accountCollateralUnlockDate && accountCollateralUnlockDate.getTime() > Date.now() ? (\n        <Text>\n          All new deposits have a 24 hour withdrawal waiting period. This action will reset your\n          active withdrawal waiting period to 24 hours.\n        </Text>\n      ) : (\n        <Text>All new deposits have a 24 hour withdrawal waiting period.</Text>\n      )}\n    </Alert>\n  );\n}\n","import { CheckIcon } from '@chakra-ui/icons';\nimport {\n  Button,\n  CircularProgress,\n  Divider,\n  Flex,\n  Link,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalOverlay,\n  Text,\n} from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { etherscanLink } from '@snx-v3/etherscanLink';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { groupRewardsBySymbol, useRewards } from '@snx-v3/useRewards';\nimport { useSynthTokens } from '@snx-v3/useSynthTokens';\nimport { WithdrawIncrease } from '@snx-v3/WithdrawIncrease';\nimport { Wei } from '@synthetixio/wei';\nimport React from 'react';\n\nexport function AllRewardsModal({\n  txnStatus,\n  txnHash,\n}: {\n  txnStatus?: string;\n  txnHash: string | null;\n}) {\n  const [params] = useParams<PositionPageSchemaType>();\n  const { network } = useNetwork();\n  const { data: rewards } = useRewards({ accountId: params.accountId });\n  const { data: synthTokens } = useSynthTokens();\n\n  const [isOpen, setIsOpen] = React.useState(false);\n  // This caching is necessary to keep initial values after success and not reset them to zeroes\n  const [cachedRewards, setCachedRewards] = React.useState<\n    { displaySymbol: string; claimableAmount: Wei }[] | undefined\n  >();\n\n  const onClose = React.useCallback(() => {\n    setIsOpen(false);\n    setCachedRewards(undefined);\n  }, []);\n\n  React.useEffect(() => {\n    if (txnStatus === 'prompting') {\n      setIsOpen(true);\n    }\n    if (txnStatus === 'error') {\n      onClose();\n    }\n  }, [onClose, txnStatus]);\n\n  React.useEffect(() => {\n    if (isOpen && rewards && synthTokens && network) {\n      const groupedRewards = groupRewardsBySymbol({ network, rewards, synthTokens });\n      if (!cachedRewards) {\n        setCachedRewards(groupedRewards);\n      }\n    }\n  }, [isOpen, rewards, synthTokens, cachedRewards, network]);\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay bg=\"#06061B80\" />\n      <ModalContent\n        bg=\"navy.700\"\n        mt=\"10%\"\n        borderWidth=\"1px\"\n        borderColor=\"gray.900\"\n        minWidth=\"384px\"\n      >\n        <ModalBody data-cy=\"claim rewards dialog\" p={6}>\n          <Text color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n            Claiming Rewards\n          </Text>\n\n          <Divider my={4} />\n\n          <Flex\n            position=\"relative\"\n            alignItems=\"center\"\n            gap={4}\n            mb={6}\n            rounded=\"lg\"\n            mt=\"6\"\n            p=\"4\"\n            border=\"2px solid\"\n            transitionProperty=\"border-color\"\n            transitionDuration=\"normal\"\n            borderColor={txnStatus === 'success' ? 'green.500' : 'gray.900'}\n          >\n            <Flex\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              borderRadius=\"100px\"\n              bg={txnStatus === 'success' ? 'green.600' : 'gray.900'}\n              width=\"40px\"\n              height=\"40px\"\n              p={3}\n            >\n              {txnStatus === 'success' ? (\n                <CheckIcon color=\"white\" />\n              ) : (\n                <CircularProgress size=\"25px\" isIndeterminate color=\"gray.700\" />\n              )}\n            </Flex>\n            <Flex\n              flexDirection=\"column\"\n              alignItems=\"space-between\"\n              justifyContent=\"space-between\"\n              ml={2}\n              data-cy=\"claim rewards info\"\n            >\n              {cachedRewards ? (\n                cachedRewards.map(({ displaySymbol, claimableAmount }) => (\n                  <Text\n                    key={displaySymbol}\n                    fontSize=\"14px\"\n                    fontWeight={700}\n                    lineHeight=\"20px\"\n                    color=\"white\"\n                  >\n                    <Amount\n                      prefix={txnStatus === 'success' ? 'Claimed ' : 'Claiming '}\n                      value={claimableAmount}\n                      suffix={` ${displaySymbol}`}\n                    />\n                  </Text>\n                ))\n              ) : (\n                <Text fontSize=\"12px\" lineHeight=\"16px\" color=\"gray.500\">\n                  Claim your rewards\n                </Text>\n              )}\n            </Flex>\n          </Flex>\n          <WithdrawIncrease />\n          {txnStatus === 'success' ? (\n            <Button\n              mt={5}\n              variant=\"solid\"\n              justifyContent=\"center\"\n              px={3}\n              py={3}\n              width=\"100%\"\n              textAlign=\"center\"\n              onClick={onClose}\n            >\n              Done\n            </Button>\n          ) : null}\n          {txnHash && (\n            <Flex\n              justifyContent=\"center\"\n              px={3}\n              py={3}\n              mt={6}\n              mb={1}\n              borderTop=\"1px solid\"\n              borderTopColor=\"gray.900\"\n              data-cy=\"transaction hash\"\n            >\n              <Link\n                variant=\"outline\"\n                href={etherscanLink({ chain: network?.name || '', address: txnHash, isTx: true })}\n                fontFamily=\"heading\"\n                color=\"cyan.500\"\n                fontWeight={700}\n                lineHeight=\"20px\"\n                fontSize=\"14px\"\n                target=\"_blank\"\n                mt={3}\n              >\n                View Transaction\n              </Link>\n            </Flex>\n          )}\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import { Skeleton, SkeletonCircle, Td, Text, Tr } from '@chakra-ui/react';\n\nexport const RewardsLoading = () => (\n  <Tr>\n    <Td pl=\"16px\" border=\"none\">\n      <SkeletonCircle startColor=\"whiteAlpha.500\" endColor=\"whiteAlpha.200\" h=\"30px\" w=\"30px\" />\n    </Td>\n    <Td pl=\"16px\" border=\"none\">\n      <Skeleton startColor=\"whiteAlpha.500\" endColor=\"whiteAlpha.200\" height=\"30px\">\n        <Text mr={4}>Loading</Text>\n      </Skeleton>\n    </Td>\n    <Td textAlign=\"end\" pr=\"0px\" border=\"none\">\n      <Skeleton startColor=\"whiteAlpha.500\" endColor=\"whiteAlpha.200\" height=\"30px\">\n        <Text>Loading</Text>\n      </Skeleton>\n    </Td>\n  </Tr>\n);\n","import { Image, type ImageProps } from '@chakra-ui/react';\n\nexport function TokenIcon({\n  symbol,\n  width = 30,\n  height = 30,\n  ...props\n}: ImageProps & {\n  symbol?: string;\n  width?: number;\n  height?: number;\n}) {\n  const src = `https://assets.synthetix.io/collateral/${\n    symbol ? symbol.toUpperCase() : 'UNKNOWN'\n  }.svg`;\n\n  return (\n    <Image\n      src={src}\n      fallbackSrc=\"https://assets.synthetix.io/collateral/UNKNOWN.svg\"\n      alt={symbol}\n      style={{ width, height }}\n      {...props}\n    />\n  );\n}\n\nexport const SynthIcon = ({\n  symbol,\n  width = 30,\n  height = 30,\n  ...props\n}: ImageProps & {\n  symbol?: string;\n  width?: number;\n  height?: number;\n}) => {\n  const src = `https://assets.synthetix.io/synths/${symbol ?? 'UNKNOWN'}.svg`;\n  return (\n    <Image\n      src={src}\n      fallbackSrc=\"https://assets.synthetix.io/collateral/UNKNOWN.svg\"\n      alt={symbol}\n      style={{ width, height }}\n      {...props}\n    />\n  );\n};\n","import { Fade, Flex, Td, Text, Tr } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { TokenIcon } from '@snx-v3/TokenIcon';\nimport Wei from '@synthetixio/wei';\nimport React from 'react';\n\nexport function RewardsRow({\n  displaySymbol,\n  claimableAmount,\n}: {\n  displaySymbol: string;\n  claimableAmount: Wei;\n}) {\n  return (\n    <>\n      <Tr>\n        <Td display=\"flex\" alignItems=\"center\" px={4} py={3} border=\"none\" w=\"100%\">\n          <Fade in>\n            <TokenIcon height={30} width={30} symbol={displaySymbol} />\n          </Fade>\n          <Fade in>\n            <Flex flexDirection=\"column\" ml=\"12px\">\n              <Text\n                color=\"gray.50\"\n                fontSize=\"14px\"\n                fontFamily=\"heading\"\n                fontWeight={500}\n                lineHeight=\"20px\"\n              >\n                {displaySymbol}\n              </Text>\n            </Flex>\n          </Fade>\n        </Td>\n        <Td alignItems=\"center\" px={4} py={3} border=\"none\">\n          <Fade in>\n            <Text\n              color=\"gray.50\"\n              fontSize=\"14px\"\n              fontFamily=\"heading\"\n              fontWeight={500}\n              lineHeight=\"20px\"\n            >\n              <Amount value={claimableAmount} />\n            </Text>\n          </Fade>\n        </Td>\n      </Tr>\n    </>\n  );\n}\n","import { InfoIcon } from '@chakra-ui/icons';\nimport {\n  Button,\n  Flex,\n  Heading,\n  Table,\n  TableContainer,\n  Tbody,\n  Td,\n  Text,\n  Th,\n  Thead,\n  Tr,\n} from '@chakra-ui/react';\nimport { Tooltip } from '@snx-v3/Tooltip';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useClaimAllRewards } from '@snx-v3/useClaimAllRewards';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { groupRewardsBySymbol, useRewards } from '@snx-v3/useRewards';\nimport { useSynthTokens } from '@snx-v3/useSynthTokens';\nimport React from 'react';\nimport { AllRewardsModal } from './AllRewardsModal';\nimport { RewardsLoading } from './RewardsLoading';\nimport { RewardsRow } from './RewardsRow';\n\nexport function Rewards() {\n  const [params] = useParams<PositionPageSchemaType>();\n  const { data: rewards, isPending: isPendingRewards } = useRewards({\n    accountId: params.accountId,\n  });\n  const { exec: claimAll, txnState } = useClaimAllRewards({ accountId: params.accountId });\n\n  const { network } = useNetwork();\n\n  const { data: synthTokens } = useSynthTokens();\n  const groupedRewards = React.useMemo(\n    () =>\n      network && rewards && synthTokens\n        ? groupRewardsBySymbol({ network, rewards, synthTokens })\n        : undefined,\n    [network, rewards, synthTokens]\n  );\n\n  return (\n    <TableContainer>\n      <AllRewardsModal txnStatus={txnState.txnStatus} txnHash={txnState.txnHash} />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Heading fontSize=\"18px\" fontWeight={700} lineHeight=\"28px\" color=\"gray.50\" mb={3}>\n          Rewards\n        </Heading>\n        <Button\n          size=\"sm\"\n          variant=\"solid\"\n          isDisabled={!(groupedRewards && groupedRewards.length > 0)}\n          _disabled={{\n            bg: 'gray.900',\n            backgroundImage: 'none',\n            color: 'gray.500',\n            opacity: 0.5,\n            cursor: 'not-allowed',\n          }}\n          data-cy=\"claim rewards submit\"\n          onClick={() => {\n            window?._paq?.push([\n              'trackEvent',\n              'liquidity',\n              'v3_staking',\n              `submit_claim_rewards_v3`,\n            ]);\n            claimAll();\n          }}\n        >\n          Claim\n        </Button>\n      </Flex>\n\n      <Table data-cy=\"rewards table\">\n        <Thead>\n          <Tr borderBottom=\"1px solid #2D2D38\">\n            <Th\n              textTransform=\"unset\"\n              color=\"gray.600\"\n              border=\"none\"\n              fontFamily=\"heading\"\n              fontSize=\"12px\"\n              lineHeight=\"16px\"\n              letterSpacing={0.6}\n              fontWeight={700}\n              px={4}\n              py={3}\n            >\n              Token\n              <Tooltip label=\"Claimable rewards from trader collateral liquidations and incentives. Liquidated collateral rewards offset debt accrued during trader liquidations.\">\n                <InfoIcon ml={1} mb=\"1px\" />\n              </Tooltip>\n            </Th>\n            <Th\n              textTransform=\"unset\"\n              color=\"gray.600\"\n              border=\"none\"\n              fontFamily=\"heading\"\n              fontSize=\"12px\"\n              lineHeight=\"16px\"\n              letterSpacing={0.6}\n              fontWeight={700}\n              px={4}\n              py={3}\n            >\n              Earnings\n            </Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {!params.accountId ? (\n            <Tr>\n              <Td display=\"flex\" alignItems=\"left\" px={4} border=\"none\" w=\"100%\">\n                <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"xs\">\n                  Create a Position to see your earnings\n                </Text>\n              </Td>\n            </Tr>\n          ) : null}\n\n          {params.accountId && isPendingRewards ? <RewardsLoading /> : null}\n\n          {groupedRewards && groupedRewards.length === 0 ? (\n            <Tr>\n              <Td display=\"flex\" alignItems=\"left\" px={4} border=\"none\" w=\"100%\">\n                <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"xs\">\n                  No Rewards Available\n                </Text>\n              </Td>\n            </Tr>\n          ) : null}\n\n          {groupedRewards && groupedRewards.length\n            ? groupedRewards.map(({ displaySymbol, claimableAmount }) => (\n                <RewardsRow\n                  key={displaySymbol}\n                  displaySymbol={displaySymbol}\n                  claimableAmount={claimableAmount}\n                />\n              ))\n            : null}\n        </Tbody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import { Box, Button, Flex, Text, useToast } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { ContractError } from '@snx-v3/ContractError';\nimport { TokenIcon } from '@snx-v3/TokenIcon';\nimport { useNetwork, useProvider, useSigner, useWallet } from '@snx-v3/useBlockchain';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { useStaticAaveUSDC } from '@snx-v3/useStaticAaveUSDC';\nimport { wei } from '@synthetixio/wei';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\nimport React from 'react';\n\nconst log = debug('snx:StataUSDC');\n\nexport function StataUSDC() {\n  const { network } = useNetwork();\n  const provider = useProvider();\n  const signer = useSigner();\n  const { activeWallet } = useWallet();\n  const walletAddress = activeWallet?.address;\n\n  const { data: StaticAaveUSDC } = useStaticAaveUSDC();\n\n  const { data: stataBalance } = useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'StaticAaveUSDC Redeem'],\n    enabled: Boolean(network && provider && walletAddress && StaticAaveUSDC),\n    queryFn: async function () {\n      if (!(network && provider && walletAddress && StaticAaveUSDC)) {\n        throw new Error('OMFG');\n      }\n      const StaticAaveUSDCContract = new ethers.Contract(\n        StaticAaveUSDC.address,\n        StaticAaveUSDC.abi,\n        provider\n      );\n      const maxRedeem = await StaticAaveUSDCContract.maxRedeem(walletAddress);\n      const previewRedeem = await StaticAaveUSDCContract.previewRedeem(maxRedeem);\n      return {\n        maxRedeem,\n        previewRedeem,\n      };\n    },\n  });\n\n  const toast = useToast({ isClosable: true, duration: 9000 });\n  const queryClient = useQueryClient();\n  const errorParser = useContractErrorParser();\n  const isReady = network && provider && signer && walletAddress && StaticAaveUSDC && true;\n  const { mutateAsync: unwrapStaticAaveUSDC, isPending } = useMutation({\n    mutationFn: async function () {\n      if (!isReady) {\n        throw new Error('Not ready');\n      }\n      const StaticAaveUSDCContract = new ethers.Contract(\n        StaticAaveUSDC.address,\n        StaticAaveUSDC.abi,\n        signer\n      );\n      const maxRedeem = await StaticAaveUSDCContract.maxRedeem(walletAddress);\n      log('maxRedeem', maxRedeem);\n\n      const shares = maxRedeem;\n      log('shares', shares);\n      const receiver = walletAddress;\n      log('receiver', receiver);\n      const owner = walletAddress;\n      log('owner', owner);\n      const withdrawFromAave = true;\n      log('withdrawFromAave', withdrawFromAave);\n\n      const args = [\n        //\n        shares,\n        receiver,\n        owner,\n        withdrawFromAave,\n      ];\n      const gasLimit = await StaticAaveUSDCContract.estimateGas[\n        'redeem(uint256,address,address,bool)'\n      ](...args);\n      const txn = await StaticAaveUSDCContract['redeem(uint256,address,address,bool)'](...args, {\n        gasLimit: gasLimit.mul(15).div(10),\n      });\n      log('txn', txn);\n\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n      return receipt;\n    },\n\n    onSuccess: async () => {\n      const deployment = `${network?.id}-${network?.preset}`;\n      await Promise.all(\n        [\n          //\n          'StaticAaveUSDC Redeem',\n        ].map((key) => queryClient.invalidateQueries({ queryKey: [deployment, key] }))\n      );\n\n      toast.closeAll();\n      toast({\n        title: 'Success',\n        description: 'Your Static aUSDC has been unwrapped to USDC.',\n        status: 'success',\n        duration: 5000,\n        variant: 'left-accent',\n      });\n    },\n\n    onError: (error) => {\n      const contractError = errorParser(error);\n      if (contractError) {\n        console.error(new Error(contractError.name), contractError);\n      }\n      toast.closeAll();\n      toast({\n        title: 'Transaction failed',\n        variant: 'left-accent',\n        description: contractError ? (\n          <ContractError contractError={contractError} />\n        ) : (\n          'Please try again.'\n        ),\n        status: 'error',\n        duration: 3_600_000,\n      });\n      throw Error('Transaction failed', { cause: error });\n    },\n  });\n\n  if (!(stataBalance && stataBalance.maxRedeem.gt(0))) {\n    return null;\n  }\n\n  return (\n    <Box mt={6}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex alignItems=\"center\" textDecoration=\"none\" _hover={{ textDecoration: 'none' }}>\n          <TokenIcon height={30} width={30} symbol=\"stataUSDC\" />\n          <Flex flexDirection=\"column\" ml={3}>\n            <Text\n              color=\"white\"\n              fontWeight={700}\n              lineHeight=\"1.25rem\"\n              fontFamily=\"heading\"\n              fontSize=\"sm\"\n            >\n              Static aUSDC\n            </Text>\n          </Flex>\n        </Flex>\n        <Flex direction=\"column\" alignItems=\"flex-end\">\n          <Text\n            color=\"green.500\"\n            fontSize=\"14px\"\n            fontFamily=\"heading\"\n            fontWeight={500}\n            lineHeight=\"20px\"\n          >\n            <Amount prefix=\"$\" value={wei(stataBalance.previewRedeem, 6)} />\n          </Text>\n        </Flex>\n        <Button\n          size=\"sm\"\n          variant=\"solid\"\n          isDisabled={!isReady}\n          isLoading={isPending}\n          _disabled={{\n            bg: 'gray.900',\n            backgroundImage: 'none',\n            color: 'gray.500',\n            opacity: 0.5,\n            cursor: 'not-allowed',\n          }}\n          data-cy=\"unwrap stata submit\"\n          onClick={() => {\n            window?._paq?.push(['trackEvent', 'liquidity', 'v3_staking', `submit_unwrap_stata_v3`]);\n            unwrapStaticAaveUSDC();\n          }}\n        >\n          Unwrap\n        </Button>\n      </Flex>\n    </Box>\n  );\n}\n","import { Fade, Flex, Td, Text } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { SynthIcon } from '@snx-v3/TokenIcon';\nimport Wei from '@synthetixio/wei';\nimport React from 'react';\n\nexport function SynthRow({\n  synth,\n  balance,\n}: {\n  synth: {\n    address: string;\n    symbol: string;\n    name: string;\n  };\n  balance: Wei;\n}) {\n  return (\n    <>\n      <Td border=\"none\">\n        <Fade in>\n          <Flex alignItems=\"center\" textDecoration=\"none\" _hover={{ textDecoration: 'none' }}>\n            <SynthIcon height={30} width={30} symbol={synth.symbol} />\n            <Flex flexDirection=\"column\" ml={3}>\n              <Text\n                color=\"white\"\n                fontWeight={700}\n                lineHeight=\"1.25rem\"\n                fontFamily=\"heading\"\n                fontSize=\"sm\"\n              >\n                {synth.symbol}\n              </Text>\n              <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n                {synth.name}\n              </Text>\n            </Flex>\n          </Flex>\n        </Fade>\n      </Td>\n      <Td border=\"none\">\n        <Fade in>\n          <Text\n            color={balance.gt(0) ? 'green.500' : 'gray.50'}\n            fontSize=\"14px\"\n            fontFamily=\"heading\"\n            fontWeight={500}\n            lineHeight=\"20px\"\n          >\n            <Amount value={balance} />\n          </Text>\n        </Fade>\n      </Td>\n    </>\n  );\n}\n","import { contractsHash } from '@snx-v3/tsHelpers';\nimport { useNetwork, useProvider, useWallet } from '@snx-v3/useBlockchain';\nimport { useTrustedMulticallForwarder } from '@snx-v3/useTrustedMulticallForwarder';\nimport { useSynthTokens } from '@snx-v3/useSynthTokens';\nimport { wei } from '@synthetixio/wei';\nimport { useQuery } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\n\nconst log = debug('snx:useSynthBalances');\n\nexport function useSynthBalances() {\n  const { network } = useNetwork();\n  const provider = useProvider();\n  const { activeWallet } = useWallet();\n  const walletAddress = activeWallet?.address;\n\n  const { data: synthTokens } = useSynthTokens();\n  const { data: Multicall3 } = useTrustedMulticallForwarder();\n\n  return useQuery({\n    enabled: Boolean(network && Multicall3 && synthTokens && walletAddress),\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'SynthBalances',\n      { walletAddress },\n      {\n        contractsHash: contractsHash([Multicall3, ...(synthTokens ?? [])]),\n      },\n    ],\n    queryFn: async () => {\n      if (!(network && Multicall3 && synthTokens && walletAddress)) {\n        throw new Error('OMG');\n      }\n      log('synthTokens', synthTokens);\n\n      const TokenInterface = new ethers.utils.Interface([\n        'function balanceOf(address) view returns (uint256)',\n      ]);\n      const multicall = synthTokens.map((synth) => ({\n        synth,\n        method: 'balanceOf',\n        args: [walletAddress],\n        target: synth.address,\n        callData: TokenInterface.encodeFunctionData('balanceOf', [walletAddress]),\n        allowFailure: true,\n      }));\n      log('multicall', multicall);\n\n      const Multicall3Contract = new ethers.Contract(Multicall3.address, Multicall3.abi, provider);\n      const multicallResponse = await Multicall3Contract.callStatic.aggregate3(\n        multicall.map(({ target, callData, allowFailure }) => ({\n          target,\n          callData,\n          allowFailure,\n        }))\n      );\n      log('multicallResponse', multicallResponse);\n\n      const balances = multicall\n        .map(({ method, synth }, i) => {\n          const { success, returnData } = multicallResponse[i];\n          if (!success) {\n            log(`${method} call error for ${synth.symbol}`);\n            return;\n          }\n          const [balance] = TokenInterface.decodeFunctionResult(method, returnData);\n          return {\n            synth,\n            balance: wei(balance, synth.decimals),\n          };\n        })\n        .filter((info) => info !== undefined);\n      log('balances', balances);\n\n      return balances;\n    },\n  });\n}\n","import { useToast } from '@chakra-ui/react';\nimport { D18 } from '@snx-v3/constants';\nimport { ContractError } from '@snx-v3/ContractError';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { useCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { useSpotMarketProxy } from '@snx-v3/useSpotMarketProxy';\nimport { useSynthBalances } from '@snx-v3/useSynthBalances';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\nimport React from 'react';\n\nconst log = debug('snx:useUnwrapAllSynths');\n\nexport function useUnwrapAllSynths() {\n  const { data: synthBalances } = useSynthBalances();\n\n  const toast = useToast({ isClosable: true, duration: 9000 });\n\n  const { network } = useNetwork();\n  const provider = useProvider();\n  const signer = useSigner();\n\n  const { data: SpotMarketProxy } = useSpotMarketProxy();\n  const [txnState, dispatch] = React.useReducer(reducer, initialState);\n\n  const { data: priceUpdateTx } = useCollateralPriceUpdates();\n\n  const errorParser = useContractErrorParser();\n\n  const queryClient = useQueryClient();\n\n  const mutation = useMutation({\n    mutationFn: async function () {\n      if (!(network && provider && signer && SpotMarketProxy && synthBalances)) {\n        throw new Error('Not ready');\n      }\n\n      dispatch({ type: 'prompting' });\n\n      const transactions: Promise<ethers.PopulatedTransaction>[] = [];\n\n      const SpotMarketProxyContract = new ethers.Contract(\n        SpotMarketProxy.address,\n        SpotMarketProxy.abi,\n        signer\n      );\n      synthBalances.forEach(({ synth, balance }) => {\n        if (synth.token && balance.gt(0)) {\n          const minAmountReceived = balance\n            .toBN()\n            .sub(balance.toBN().div(100))\n            // Adjust precision for underlying token\n            .mul(ethers.utils.parseUnits('1', synth.token.decimals))\n            .div(D18);\n\n          transactions.push(\n            SpotMarketProxyContract.populateTransaction.unwrap(\n              synth.synthMarketId,\n              balance.toBN(),\n              minAmountReceived\n            )\n          );\n        }\n      });\n\n      const [calls] = await Promise.all([Promise.all(transactions)]);\n      log('calls', calls);\n\n      if (priceUpdateTx) {\n        calls.unshift(priceUpdateTx as any);\n      }\n\n      const walletAddress = await signer.getAddress();\n      const { multicallTxn: erc7412Tx, gasLimit } = await withERC7412(\n        provider,\n        network,\n        calls,\n        'useUnwrapAllSynths',\n        walletAddress\n      );\n\n      const txn = await signer.sendTransaction({\n        ...erc7412Tx,\n        gasLimit: gasLimit.mul(15).div(10),\n      });\n      log('txn', txn);\n      dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n      return receipt;\n    },\n\n    onError(error) {\n      const contractError = errorParser(error);\n      if (contractError) {\n        console.error(new Error(contractError.name), contractError);\n      }\n\n      dispatch({ type: 'error', payload: { error } });\n\n      toast.closeAll();\n      toast({\n        title: 'Withdrawal failed',\n        description: contractError ? (\n          <ContractError contractError={contractError} />\n        ) : (\n          'Please try again.'\n        ),\n        status: 'error',\n        variant: 'left-accent',\n        duration: 3_600_000,\n      });\n    },\n\n    onSuccess: async () => {\n      const deployment = `${network?.id}-${network?.preset}`;\n      await Promise.all(\n        [\n          //\n          'PriceUpdates',\n          'TokenBalance',\n          'SynthBalances',\n          'EthBalance',\n        ].map((key) => queryClient.invalidateQueries({ queryKey: [deployment, key] }))\n      );\n\n      dispatch({ type: 'success' });\n\n      toast.closeAll();\n      toast({\n        title: 'Success',\n        description: 'Your synths have been unwrapped',\n        status: 'success',\n        duration: 5000,\n        variant: 'left-accent',\n      });\n    },\n  });\n\n  return {\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n}\n","import { Skeleton, SkeletonCircle, Td, Text, Tr } from '@chakra-ui/react';\n\nexport const SynthsLoading = () => (\n  <Tr>\n    <Td pl=\"16px\" border=\"none\">\n      <SkeletonCircle\n        startColor=\"whiteAlpha.500\"\n        endColor=\"whiteAlpha.200\"\n        height={30}\n        width={30}\n      />\n    </Td>\n    <Td pl=\"16px\" border=\"none\">\n      <Skeleton startColor=\"whiteAlpha.500\" endColor=\"whiteAlpha.200\" height=\"30px\">\n        <Text fontSize=\"14px\" fontFamily=\"heading\" fontWeight={500} lineHeight=\"20px\">\n          &nbsp;\n        </Text>\n      </Skeleton>\n    </Td>\n  </Tr>\n);\n","import { CheckIcon } from '@chakra-ui/icons';\nimport {\n  Button,\n  CircularProgress,\n  Divider,\n  Flex,\n  Link,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalOverlay,\n  Text,\n} from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { tokenOverrides } from '@snx-v3/constants';\nimport { etherscanLink } from '@snx-v3/etherscanLink';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useSynthBalances } from '@snx-v3/useSynthBalances';\nimport { Wei } from '@synthetixio/wei';\nimport React from 'react';\n\nexport function SynthsUnwrapModal({\n  txnStatus,\n  txnHash,\n}: {\n  txnStatus?: string;\n  txnHash: string | null;\n}) {\n  const { network } = useNetwork();\n  const { data: synthBalances } = useSynthBalances();\n\n  const [isOpen, setIsOpen] = React.useState(false);\n  // This caching is necessary to keep initial values after success and not reset them to zeroes\n  const [cachedSynths, setCachedSynths] = React.useState<\n    { symbol: string; name: string; balance: Wei }[] | undefined\n  >();\n\n  const onClose = React.useCallback(() => {\n    setIsOpen(false);\n    setCachedSynths(undefined);\n  }, []);\n\n  React.useEffect(() => {\n    if (txnStatus === 'prompting') {\n      setIsOpen(true);\n    }\n    if (txnStatus === 'error') {\n      setCachedSynths(undefined);\n      setIsOpen(false);\n    }\n  }, [txnStatus]);\n\n  React.useEffect(() => {\n    if (isOpen && synthBalances && network) {\n      const filteredSynths = synthBalances\n        .map(({ synth, balance }) => ({\n          balance,\n          symbol: synth.token ? synth.token.symbol : synth.symbol,\n          name: synth.token ? synth.token.name : synth.name,\n          ...tokenOverrides[`${network.id}-${network.preset}`]?.[\n            synth.token ? synth.token.address : synth.address\n          ],\n        }))\n        .filter(({ balance }) => balance.gt(0))\n        .sort((a, b) => a.symbol.localeCompare(b.symbol))\n        .sort((a, b) => b.balance.toNumber() - a.balance.toNumber());\n\n      if (!cachedSynths) {\n        setCachedSynths(filteredSynths);\n      }\n    }\n  }, [cachedSynths, isOpen, network, synthBalances]);\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay bg=\"#06061B80\" />\n      <ModalContent\n        bg=\"navy.700\"\n        mt=\"10%\"\n        borderWidth=\"1px\"\n        borderColor=\"gray.900\"\n        minWidth=\"384px\"\n      >\n        <ModalBody data-cy=\"unwrap synths dialog\" p={6}>\n          <Text color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n            Unwrapping Synths\n          </Text>\n\n          <Divider my={4} />\n\n          <Flex\n            position=\"relative\"\n            alignItems=\"center\"\n            gap={4}\n            mb={6}\n            rounded=\"lg\"\n            mt=\"6\"\n            p=\"4\"\n            border=\"2px solid\"\n            transitionProperty=\"border-color\"\n            transitionDuration=\"normal\"\n            borderColor={txnStatus === 'success' ? 'green.500' : 'gray.900'}\n          >\n            <Flex\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              borderRadius=\"100px\"\n              bg={txnStatus === 'success' ? 'green.600' : 'gray.900'}\n              width=\"40px\"\n              height=\"40px\"\n              p={3}\n            >\n              {txnStatus === 'success' ? (\n                <CheckIcon color=\"white\" />\n              ) : (\n                <CircularProgress size=\"25px\" isIndeterminate color=\"gray.700\" />\n              )}\n            </Flex>\n            <Flex\n              flexDirection=\"column\"\n              alignItems=\"space-between\"\n              justifyContent=\"space-between\"\n              ml={2}\n              data-cy=\"unwrap synths info\"\n            >\n              {cachedSynths ? (\n                cachedSynths.map(({ symbol, balance }) => {\n                  return (\n                    <Text\n                      key={symbol}\n                      fontSize=\"14px\"\n                      fontWeight={700}\n                      lineHeight=\"20px\"\n                      color=\"white\"\n                    >\n                      <Amount\n                        prefix={txnStatus === 'success' ? 'Unwrapped ' : 'Unwrapping '}\n                        value={balance}\n                        suffix={` ${symbol}`}\n                      />\n                    </Text>\n                  );\n                })\n              ) : (\n                <Text fontSize=\"12px\" lineHeight=\"16px\" color=\"gray.500\">\n                  Unwrapping your synths\n                </Text>\n              )}\n            </Flex>\n          </Flex>\n          {txnStatus === 'success' ? (\n            <Button\n              mt={5}\n              variant=\"solid\"\n              justifyContent=\"center\"\n              px={3}\n              py={3}\n              width=\"100%\"\n              textAlign=\"center\"\n              onClick={onClose}\n            >\n              Done\n            </Button>\n          ) : null}\n          {txnHash && (\n            <Flex\n              justifyContent=\"center\"\n              px={3}\n              py={3}\n              mt={6}\n              mb={1}\n              borderTop=\"1px solid\"\n              borderTopColor=\"gray.900\"\n              data-cy=\"transaction hash\"\n            >\n              <Link\n                variant=\"outline\"\n                href={etherscanLink({ chain: network?.name || '', address: txnHash, isTx: true })}\n                fontFamily=\"heading\"\n                color=\"cyan.500\"\n                fontWeight={700}\n                lineHeight=\"20px\"\n                fontSize=\"14px\"\n                target=\"_blank\"\n                mt={3}\n              >\n                View Transaction\n              </Link>\n            </Flex>\n          )}\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import { InfoIcon } from '@chakra-ui/icons';\nimport {\n  Button,\n  Flex,\n  Heading,\n  Table,\n  TableContainer,\n  Tbody,\n  Td,\n  Text,\n  Th,\n  Thead,\n  Tr,\n} from '@chakra-ui/react';\nimport { Tooltip } from '@snx-v3/Tooltip';\nimport { useWallet } from '@snx-v3/useBlockchain';\nimport { useSynthBalances } from '@snx-v3/useSynthBalances';\nimport { useUnwrapAllSynths } from '@snx-v3/useUnwrapAllSynths';\nimport { wei } from '@synthetixio/wei';\nimport React from 'react';\nimport { SynthRow } from './SynthRow';\nimport { SynthsLoading } from './SynthsLoading';\nimport { SynthsUnwrapModal } from './SynthsUnwrapModal';\n\nexport function Synths() {\n  const { activeWallet } = useWallet();\n  const walletAddress = activeWallet?.address;\n\n  const { data: synthBalances, isPending: isPendingSynthBalances } = useSynthBalances();\n  const { exec: unwrapAll, txnState } = useUnwrapAllSynths();\n\n  const filteredSynths = React.useMemo(() => {\n    if (!synthBalances || !synthBalances.length) {\n      return;\n    }\n    return synthBalances\n      .filter(({ balance }) => balance.gt(wei(0.01))) // ignore the dust\n      .sort((a, b) => a.synth.symbol.localeCompare(b.synth.symbol))\n      .sort((a, b) => b.balance.toNumber() - a.balance.toNumber());\n  }, [synthBalances]);\n\n  const hasSynths = synthBalances && synthBalances.some(({ balance }) => balance.gt(0));\n\n  return (\n    <TableContainer>\n      <SynthsUnwrapModal txnStatus={txnState.txnStatus} txnHash={txnState.txnHash} />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Heading fontSize=\"18px\" fontWeight={700} lineHeight=\"28px\" color=\"gray.50\" mb={3}>\n          Synths\n        </Heading>\n        {hasSynths ? (\n          <Button\n            size=\"sm\"\n            variant=\"solid\"\n            isDisabled={!hasSynths}\n            _disabled={{\n              bg: 'gray.900',\n              backgroundImage: 'none',\n              color: 'gray.500',\n              opacity: 0.5,\n              cursor: 'not-allowed',\n            }}\n            data-cy=\"unwrap synths submit\"\n            onClick={() => {\n              window?._paq?.push([\n                'trackEvent',\n                'liquidity',\n                'v3_staking',\n                `submit_unwrap_synths_v3`,\n              ]);\n              unwrapAll();\n            }}\n          >\n            Unwrap\n          </Button>\n        ) : null}\n      </Flex>\n\n      <Table variant=\"simple\" data-cy=\"synths table\">\n        <Thead>\n          <Tr borderBottom=\"1px solid #2D2D38\">\n            <Th\n              textTransform=\"unset\"\n              color=\"gray.600\"\n              border=\"none\"\n              fontFamily=\"heading\"\n              fontSize=\"12px\"\n              lineHeight=\"16px\"\n              letterSpacing={0.6}\n              fontWeight={700}\n              px={4}\n              py={3}\n            >\n              Token\n            </Th>\n            <Th\n              textTransform=\"unset\"\n              color=\"gray.600\"\n              border=\"none\"\n              fontFamily=\"heading\"\n              fontSize=\"12px\"\n              lineHeight=\"16px\"\n              letterSpacing={0.6}\n              fontWeight={700}\n              px={4}\n              py={3}\n            >\n              Synth balance\n              <Tooltip label=\"Total synth balance in your wallet\">\n                <InfoIcon ml={1} mb=\"1px\" />\n              </Tooltip>\n            </Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {!walletAddress ? (\n            <Tr>\n              <Td display=\"flex\" alignItems=\"left\" px={4} border=\"none\" w=\"100%\">\n                <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"xs\">\n                  Please connect wallet to view synths\n                </Text>\n              </Td>\n            </Tr>\n          ) : null}\n          {walletAddress && isPendingSynthBalances ? <SynthsLoading /> : null}\n          {!isPendingSynthBalances && filteredSynths && filteredSynths.length === 0 ? (\n            <Tr>\n              <Td display=\"flex\" alignItems=\"left\" px={4} border=\"none\" w=\"100%\">\n                <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"xs\">\n                  You do not have any synths\n                </Text>\n              </Td>\n            </Tr>\n          ) : null}\n\n          {filteredSynths\n            ? filteredSynths.map(({ synth, balance }, i) => (\n                <Tr\n                  key={synth.symbol}\n                  borderBottomWidth={i === filteredSynths.length - 1 ? 'none' : '1px'}\n                >\n                  <SynthRow synth={synth} balance={balance} />\n                </Tr>\n              ))\n            : null}\n        </Tbody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import { importLegacyMarket } from '@snx-v3/contracts';\nimport { type Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useLegacyMarket(customNetwork?: Network) {\n  const { network: currentNetwork } = useNetwork();\n  const network = customNetwork ?? currentNetwork;\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'LegacyMarket'],\n    enabled: Boolean(network),\n    queryFn: async () => {\n      if (!network) {\n        throw new Error('OMFG');\n      }\n      return importLegacyMarket(network.id, network.preset);\n    },\n    staleTime: Number.POSITIVE_INFINITY,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","export async function importLegacyMarket(\n  chainId?: number,\n  preset?: string\n): Promise<{ address: string; abi: string[] }> {\n  if (!preset) {\n    throw new Error('Missing preset');\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/meta.json'),\n        import('@synthetixio/v3-contracts/1-main/LegacyMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.LegacyMarketProxy, abi };\n    }\n    case '10-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/meta.json'),\n        import('@synthetixio/v3-contracts/10-main/LegacyMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.LegacyMarketProxy, abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for Extras`);\n    }\n  }\n}\n","import { Network, useNetwork, useProviderForChain, useWallet } from '@snx-v3/useBlockchain';\nimport { wei } from '@synthetixio/wei';\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\n\nexport const tokenAbi = [\n  'function balanceOf(address) view returns (uint256)',\n  'function decimals() view returns (uint8)',\n];\n\nexport const useTokenBalance = (tokenAddress?: string, customNetwork?: Network) => {\n  const { activeWallet } = useWallet();\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n  const provider = useProviderForChain(targetNetwork);\n  const walletAddress = activeWallet?.address;\n  return useQuery({\n    enabled: Boolean(walletAddress && tokenAddress && provider && targetNetwork),\n    queryKey: [\n      `${targetNetwork?.id}-${targetNetwork?.preset}`,\n      'TokenBalance',\n      { accountAddress: walletAddress, tokenAddress },\n    ],\n    queryFn: async () => {\n      if (!(walletAddress && tokenAddress && provider && targetNetwork)) {\n        throw 'OMFG';\n      }\n\n      const TokenContract = new ethers.Contract(tokenAddress, tokenAbi, provider);\n      const [balance, decimals] = await Promise.all([\n        TokenContract.balanceOf(walletAddress),\n        TokenContract.decimals(),\n      ]);\n      return { balance, decimals };\n    },\n    select: ({ balance, decimals }) => wei(balance, decimals),\n    refetchInterval: 120_000,\n  });\n};\n\nexport const useTokenBalances = (tokenAddresses: string[], customNetwork?: Network) => {\n  const { activeWallet } = useWallet();\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n  const provider = useProviderForChain(targetNetwork);\n  const walletAddress = activeWallet?.address;\n\n  const queryClient = useQueryClient();\n  return useQuery({\n    queryKey: [\n      `${targetNetwork?.id}-${targetNetwork?.preset}`,\n      'TokenBalance',\n      {\n        accountAddress: walletAddress,\n        tokenAddresses: tokenAddresses.map((a) => a.slice(2, 6).toLowerCase()).sort(),\n      },\n    ],\n    enabled: Boolean(walletAddress && tokenAddresses.length && provider && targetNetwork),\n\n    queryFn: async () => {\n      if (!(walletAddress && tokenAddresses.length && provider && targetNetwork)) {\n        throw 'OMFG';\n      }\n\n      return await Promise.all(\n        tokenAddresses.map(async (tokenAddress) => {\n          const TokenContract = new ethers.Contract(tokenAddress, tokenAbi, provider);\n          const [balance, decimals] = await Promise.all([\n            TokenContract.balanceOf(walletAddress),\n            TokenContract.decimals(),\n          ]);\n          queryClient.setQueryData(\n            [\n              `${targetNetwork?.id}-${targetNetwork?.preset}`,\n              'TokenBalance',\n              {\n                accountAddress: walletAddress,\n                tokenAddresses: tokenAddresses.map((a) => a.slice(2, 6).toLowerCase()).sort(),\n              },\n            ],\n            { balance, decimals }\n          );\n          return { balance, decimals };\n        })\n      );\n    },\n    select: (balances) => balances.map(({ balance, decimals }) => wei(balance, decimals)),\n    refetchInterval: 120_000,\n  });\n};\n","import { Box, Button, Flex, Text, useToast } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { ContractError } from '@snx-v3/ContractError';\nimport { TokenIcon } from '@snx-v3/TokenIcon';\nimport { useNetwork, useProvider, useSigner, useWallet } from '@snx-v3/useBlockchain';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { useLegacyMarket } from '@snx-v3/useLegacyMarket';\nimport { useTokenBalance } from '@snx-v3/useTokenBalance';\nimport { useUSDProxy } from '@snx-v3/useUSDProxy';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\nimport React from 'react';\n\nconst log = debug('snx:SUSD');\n\nexport function SUSD() {\n  const { network } = useNetwork();\n  const provider = useProvider();\n  const signer = useSigner();\n  const { activeWallet } = useWallet();\n  const walletAddress = activeWallet?.address;\n\n  const { data: LegacyMarket } = useLegacyMarket();\n  const { data: USDProxy } = useUSDProxy();\n\n  const { data: systemTokenBalance } = useTokenBalance(USDProxy?.address);\n\n  const toast = useToast({ isClosable: true, duration: 90_000 });\n  const queryClient = useQueryClient();\n  const errorParser = useContractErrorParser();\n  const isReady =\n    network &&\n    provider &&\n    signer &&\n    walletAddress &&\n    LegacyMarket &&\n    USDProxy &&\n    // Boolean\n    true;\n\n  const { mutateAsync: unwrapSUSD, isPending } = useMutation({\n    mutationFn: async function () {\n      if (!isReady) {\n        throw new Error('Not ready');\n      }\n\n      const USDProxyContract = new ethers.Contract(USDProxy.address, USDProxy.abi, signer);\n      const balanceOfV3USD = await USDProxyContract.balanceOf(walletAddress);\n      log('balanceOfV3USD', balanceOfV3USD);\n\n      const alowanceOfV3USD = await USDProxyContract.allowance(walletAddress, LegacyMarket.address);\n      log('alowanceOfV3USD', alowanceOfV3USD);\n\n      if (balanceOfV3USD.gt(alowanceOfV3USD)) {\n        toast.closeAll();\n        toast({\n          title: 'Approving snxUSD...',\n          description: 'This may take a while. Please do not close this window.',\n          variant: 'left-accent',\n        });\n        const approveV3USDGasLimit = await USDProxyContract.estimateGas.approve(\n          LegacyMarket.address,\n          balanceOfV3USD\n        );\n        log('approve snxUSD gasLimit', approveV3USDGasLimit);\n        const txn = await USDProxyContract.approve(LegacyMarket.address, balanceOfV3USD, {\n          gasLimit: approveV3USDGasLimit.mul(15).div(10),\n        });\n        log('approve snxUSD txn', txn);\n        const receipt = await provider.waitForTransaction(txn.hash);\n        log('approve snxUSD receipt', receipt);\n      }\n\n      toast.closeAll();\n      toast({\n        title: 'Redeeming sUSD...',\n        description: 'This may take a while. Please do not close this window.',\n        variant: 'left-accent',\n      });\n\n      const LegacyMarketContract = new ethers.Contract(\n        LegacyMarket.address,\n        LegacyMarket.abi,\n        signer\n      );\n      const gasLimit = await LegacyMarketContract.estimateGas.returnUSD(balanceOfV3USD);\n      const txn = await LegacyMarketContract.returnUSD(balanceOfV3USD, {\n        gasLimit: gasLimit.mul(15).div(10),\n      });\n      log('txn', txn);\n\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n      return receipt;\n    },\n\n    onSuccess: async () => {\n      const deployment = `${network?.id}-${network?.preset}`;\n      await Promise.all(\n        [\n          //\n          'TokenBalance',\n        ].map((key) => queryClient.invalidateQueries({ queryKey: [deployment, key] }))\n      );\n\n      toast.closeAll();\n      toast({\n        title: 'Success',\n        description: 'Your sUSD has been redeemed.',\n        status: 'success',\n        duration: 90_000,\n        variant: 'left-accent',\n      });\n    },\n\n    onError: (error) => {\n      const contractError = errorParser(error);\n      if (contractError) {\n        console.error(new Error(contractError.name), contractError);\n      }\n      toast.closeAll();\n      toast({\n        title: 'Transaction failed',\n        variant: 'left-accent',\n        description: contractError ? (\n          <ContractError contractError={contractError} />\n        ) : (\n          'Please try again.'\n        ),\n        status: 'error',\n        duration: 3_600_000,\n      });\n      throw Error('Transaction failed', { cause: error });\n    },\n  });\n\n  if (!(systemTokenBalance && systemTokenBalance.gt(0))) {\n    return null;\n  }\n\n  return (\n    <Box mt={6}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex alignItems=\"center\" textDecoration=\"none\" _hover={{ textDecoration: 'none' }}>\n          <TokenIcon height={30} width={30} symbol=\"SUSD\" />\n          <Flex flexDirection=\"column\" ml={3}>\n            <Text\n              color=\"white\"\n              fontWeight={700}\n              lineHeight=\"1.25rem\"\n              fontFamily=\"heading\"\n              fontSize=\"sm\"\n            >\n              sUSD\n            </Text>\n          </Flex>\n        </Flex>\n        <Flex direction=\"column\" alignItems=\"flex-end\">\n          <Text\n            color=\"green.500\"\n            fontSize=\"14px\"\n            fontFamily=\"heading\"\n            fontWeight={500}\n            lineHeight=\"20px\"\n          >\n            <Amount prefix=\"$\" value={systemTokenBalance} />\n          </Text>\n        </Flex>\n        <Button\n          size=\"sm\"\n          variant=\"solid\"\n          isDisabled={!isReady}\n          isLoading={isPending}\n          _disabled={{\n            bg: 'gray.900',\n            backgroundImage: 'none',\n            color: 'gray.500',\n            opacity: 0.5,\n            cursor: 'not-allowed',\n          }}\n          data-cy=\"unwrap stata submit\"\n          onClick={() => {\n            window?._paq?.push(['trackEvent', 'liquidity', 'v3_staking', `submit_redeem_susd`]);\n            unwrapSUSD();\n          }}\n        >\n          Redeem\n        </Button>\n      </Flex>\n    </Box>\n  );\n}\n","import { importUSDProxy } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useUSDProxy(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'USDProxy'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw 'OMFG';\n      return importUSDProxy(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","import { useQuery } from '@tanstack/react-query';\n\nexport async function fetchMigrationData({ walletAddress }: { walletAddress: string }) {\n  const response = await fetch(\n    'https://yn4f3hixhj.execute-api.us-east-1.amazonaws.com/prod/migration',\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        walletAddress,\n      }),\n    }\n  );\n  return response.json();\n}\n\nexport function useMigrationData({ walletAddress }: { walletAddress?: string }) {\n  return useQuery({\n    queryKey: ['useMigrationData', { walletAddress }],\n    enabled: Boolean(walletAddress),\n    queryFn: async () => {\n      if (!walletAddress) {\n        throw new Error('OMFG');\n      }\n      const migrationData = await fetchMigrationData({ walletAddress });\n      return migrationData;\n    },\n    staleTime: 600_000,\n  });\n}\n","import { Alert, AlertIcon, Collapse, Flex, Link, Text } from '@chakra-ui/react';\nimport { Rewards } from '@snx-v3/Rewards';\nimport { StataUSDC, SUSD, Synths } from '@snx-v3/Synths';\nimport { useWallet } from '@snx-v3/useBlockchain';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useMigrationData } from './useMigrationData';\n\nexport function DashboardPage() {\n  const { activeWallet } = useWallet();\n  const walletAddress = activeWallet?.address;\n  const { data: migrationData } = useMigrationData({ walletAddress });\n  return (\n    <>\n      <Helmet>\n        <title>Synthetix Liquidity V3</title>\n        <meta name=\"description\" content=\"Synthetix Liquidity V3\" />\n      </Helmet>\n      <Flex pt={{ base: 2, sm: 10 }} flexDir=\"column\" mb={16}>\n        <Collapse in={Boolean(migrationData?.address)} animateOpacity unmountOnExit>\n          <Alert status=\"error\" mb=\"6\">\n            <AlertIcon />\n            <Text>\n              We’ve recently deprecated solo staking and your account was impacted. Please create a\n              ticket in discord and the team will help recover your account\n            </Text>\n          </Alert>\n        </Collapse>\n\n        <Alert status=\"warning\" mb=\"6\">\n          <AlertIcon />\n          <Text>\n            Legacy positions on Ethereum, Optimism and Base have been refunded or{' '}\n            <Link isExternal href=\"https://420.synthetix.io\" color=\"cyan.500\">\n              migrated to 420.\n            </Link>\n          </Text>\n        </Alert>\n\n        <Flex mt={6} flexDirection={['column', 'column', 'row']} gap={4}>\n          <Flex\n            flex={1}\n            flexDirection=\"column\"\n            borderColor=\"gray.900\"\n            borderWidth=\"1px\"\n            borderRadius=\"5px\"\n            p={6}\n            sx={{\n              borderCollapse: 'separate !important',\n              borderSpacing: 0,\n            }}\n            bg=\"navy.700\"\n          >\n            <Rewards />\n          </Flex>\n\n          <Flex\n            flex={1}\n            flexDirection=\"column\"\n            borderColor=\"gray.900\"\n            borderWidth=\"1px\"\n            borderRadius=\"5px\"\n            p={6}\n            sx={{\n              borderCollapse: 'separate !important',\n              borderSpacing: 0,\n            }}\n            bg=\"navy.700\"\n          >\n            <Synths />\n            <StataUSDC />\n            <SUSD />\n          </Flex>\n        </Flex>\n      </Flex>\n    </>\n  );\n}\n","import { Container, Flex, Link } from '@chakra-ui/react';\nimport { DiscordIcon, GithubIcon, Logo, XIcon } from '@snx-v3/icons';\n\nexport const Footer = () => {\n  return (\n    <Flex borderTop=\"1px solid\" borderTopColor=\"gray.900\" bg=\"navy.700\">\n      <Container\n        maxW=\"1236px\"\n        as={Flex}\n        height=\"72px\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n      >\n        <Logo withText={false} />\n        <Flex alignItems=\"center\">\n          <Link href=\"https://discord.com/invite/synthetix\" target=\"_blank\">\n            <DiscordIcon w=\"24px\" h=\"24px\" mr={2} />\n          </Link>\n          <Link href=\"https://x.com/synthetix_io\" target=\"_blank\">\n            <XIcon w=\"24px\" h=\"24px\" mr={2} />\n          </Link>\n          <Link href=\"https://github.com/Synthetixio/\" target=\"_blank\">\n            <GithubIcon w=\"24px\" h=\"24px\" mr={2} />\n          </Link>\n        </Flex>\n      </Container>\n    </Flex>\n  );\n};\n","import { CopyIcon, SettingsIcon } from '@chakra-ui/icons';\nimport {\n  Badge,\n  Button,\n  Flex,\n  IconButton,\n  Link,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Text,\n} from '@chakra-ui/react';\nimport { prettyString, renderAccountId } from '@snx-v3/format';\nimport { WalletIcon } from '@snx-v3/icons';\nimport { Tooltip } from '@snx-v3/Tooltip';\nimport { useAccounts } from '@snx-v3/useAccounts';\nimport { NetworkIcon, NETWORKS, useNetwork, useWallet } from '@snx-v3/useBlockchain';\nimport { makeSearch, useParams } from '@snx-v3/useParams';\nimport { ethers } from 'ethers';\nimport React from 'react';\n\nconst mainnets = NETWORKS.filter(({ isSupported, isTestnet }) => isSupported && !isTestnet);\n\nexport function NetworkController() {\n  const [params, setParams] = useParams();\n\n  const [toolTipLabel, setTooltipLabel] = React.useState('Copy');\n  const { activeWallet, walletsInfo, connect, disconnect } = useWallet();\n  const { network: currentNetwork, setNetwork } = useNetwork();\n  const { data: accounts, isPending: isPendingAccounts } = useAccounts();\n\n  const paramsAccountId = React.useMemo(() => {\n    try {\n      if (params.accountId && params.accountId.length > 0) {\n        return ethers.BigNumber.from(params.accountId);\n      }\n    } catch {\n      // malformed account id in url\n    }\n  }, [params.accountId]);\n\n  const notConnected = !activeWallet;\n  const notSupported = activeWallet && !currentNetwork;\n\n  React.useEffect(() => {\n    if (notConnected) {\n      const { accountId: _, ...newParams } = params;\n      setParams(newParams);\n      return;\n    }\n    if (!isPendingAccounts && accounts) {\n      if (accounts.length > 0 && !params.accountId) {\n        setParams({ ...params, accountId: accounts[0].toString() });\n        return;\n      }\n      if (\n        accounts.length > 0 &&\n        paramsAccountId &&\n        !accounts.some((account) => account.eq(paramsAccountId))\n      ) {\n        setParams({ ...params, accountId: accounts[0].toString() });\n        return;\n      }\n      if (!accounts.length) {\n        const { accountId: _, ...newParams } = params;\n        setParams(newParams);\n        return;\n      }\n    }\n  }, [accounts, isPendingAccounts, notConnected, params, paramsAccountId, setParams]);\n\n  React.useEffect(() => {\n    if (window.$magicWallet) {\n      connect({ autoSelect: { disableModals: true, label: 'MetaMask' } });\n    }\n  }, [connect]);\n\n  if (!activeWallet) {\n    return (\n      <Button\n        data-cy=\"connect wallet button\"\n        onClick={() => connect()}\n        type=\"button\"\n        size=\"sm\"\n        ml={2}\n        py={5}\n      >\n        Connect Wallet\n      </Button>\n    );\n  }\n  return (\n    <Flex>\n      {currentNetwork ? (\n        <Menu>\n          <MenuButton\n            as={Button}\n            variant=\"outline\"\n            colorScheme=\"gray\"\n            sx={{ '> span': { display: 'flex', alignItems: 'center' } }}\n            mr={1}\n            px={3}\n          >\n            <NetworkIcon\n              filter={currentNetwork.isTestnet ? 'grayscale(1)' : ''}\n              networkId={notConnected ? 8453 : notSupported ? 0 : currentNetwork.id}\n            />\n            <Text variant=\"nav\" ml={2} display={{ base: 'none', md: 'inline-block' }}>\n              {currentNetwork.label}\n            </Text>\n          </MenuButton>\n          <MenuList border=\"1px\" borderColor=\"gray.900\">\n            {mainnets.map(({ id, preset, label }) => (\n              <MenuItem\n                key={`${id}-${preset}`}\n                onClick={() => setNetwork(id)}\n                isDisabled={window.$chainId ? window.$chainId !== id : false}\n              >\n                <NetworkIcon networkId={id} size=\"20px\" />\n                <Text variant=\"nav\" ml={2}>\n                  {label}\n                </Text>\n              </MenuItem>\n            ))}\n          </MenuList>\n        </Menu>\n      ) : null}\n      <Menu placement=\"bottom-end\">\n        <MenuButton\n          as={Button}\n          variant=\"outline\"\n          colorScheme=\"gray\"\n          ml={2}\n          height={10}\n          py=\"6px\"\n          px=\"9.5px\"\n          whiteSpace=\"nowrap\"\n          data-cy=\"wallet button\"\n        >\n          <WalletIcon color=\"white\" />\n          <Text\n            as=\"span\"\n            ml={1}\n            color=\"white\"\n            fontWeight={700}\n            fontSize=\"xs\"\n            userSelect=\"none\"\n            data-cy=\"short wallet address\"\n          >\n            {activeWallet.ens?.name || prettyString(activeWallet.address)}\n          </Text>\n        </MenuButton>\n        <MenuList>\n          <Flex\n            border=\"1px solid\"\n            rounded=\"base\"\n            borderColor=\"gray.900\"\n            w=\"370px\"\n            _hover={{ bg: 'navy.700' }}\n            backgroundColor=\"navy.700\"\n            opacity={1}\n            p=\"4\"\n          >\n            <Flex flexDir=\"column\" w=\"100%\" gap=\"2\">\n              <Flex justifyContent=\"space-between\">\n                <Text fontSize=\"14px\" color=\"gray.500\">\n                  Connected with {walletsInfo?.label}\n                </Text>\n                <Button\n                  onClick={() => {\n                    if (walletsInfo) {\n                      disconnect(walletsInfo);\n                    }\n                  }}\n                  size=\"xs\"\n                  variant=\"outline\"\n                  colorScheme=\"gray\"\n                  color=\"white\"\n                >\n                  Disconnect\n                </Button>\n              </Flex>\n              <Flex fontWeight={700} color=\"white\" fontSize=\"16px\" alignItems=\"center\">\n                <Tooltip label={activeWallet.address} fontFamily=\"monospace\" fontSize=\"0.9em\">\n                  <Text>{prettyString(activeWallet.address)}</Text>\n                </Tooltip>\n                <Tooltip label={toolTipLabel} closeOnClick={false}>\n                  <CopyIcon\n                    ml=\"2\"\n                    onClick={() => {\n                      navigator.clipboard.writeText(activeWallet.address);\n                      setTooltipLabel('Copied');\n                      setTimeout(() => {\n                        setTooltipLabel('Copy');\n                      }, 10000);\n                    }}\n                  />\n                </Tooltip>\n              </Flex>\n\n              {accounts && accounts.length > 0 ? (\n                <Flex\n                  flexDir=\"column\"\n                  p=\"2\"\n                  border=\"1px solid\"\n                  borderColor=\"gray.900\"\n                  rounded=\"base\"\n                  gap=\"2\"\n                >\n                  <Flex w=\"100%\" justifyContent=\"space-between\">\n                    <Text fontWeight={400} fontSize=\"14px\">\n                      {accounts.length > 1 ? 'Accounts' : 'Account'}\n                    </Text>\n                    <Link\n                      href={`?${makeSearch({ page: 'settings', accountId: params.accountId })}`}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        setParams({ page: 'settings', accountId: params.accountId });\n                      }}\n                    >\n                      <IconButton\n                        variant=\"outline\"\n                        colorScheme=\"gray\"\n                        size=\"xs\"\n                        icon={<SettingsIcon />}\n                        aria-label=\"account settings\"\n                      />\n                    </Link>\n                  </Flex>\n                  <Flex data-cy=\"accounts list\" flexDir=\"column\">\n                    {accounts?.map((accountId) => (\n                      <Text\n                        key={accountId.toString()}\n                        display=\"flex\"\n                        alignItems=\"center\"\n                        color=\"white\"\n                        fontWeight={700}\n                        fontSize=\"16px\"\n                        cursor=\"pointer\"\n                        p=\"3\"\n                        data-cy=\"account id\"\n                        data-account-id={accountId}\n                        _hover={{ bg: 'whiteAlpha.300' }}\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          setParams({ ...params, accountId: accountId.toString() });\n                        }}\n                      >\n                        {renderAccountId(accountId)}\n                        {paramsAccountId && accountId.eq(paramsAccountId) ? (\n                          <Badge ml={2} colorScheme=\"cyan\" variant=\"outline\">\n                            Connected\n                          </Badge>\n                        ) : null}\n                      </Text>\n                    ))}\n                  </Flex>\n                </Flex>\n              ) : null}\n            </Flex>\n          </Flex>\n        </MenuList>\n      </Menu>\n    </Flex>\n  );\n}\n","import { Container, Flex, Link, useDisclosure } from '@chakra-ui/react';\nimport { Logo, LogoIcon } from '@snx-v3/icons';\nimport { useEffect } from 'react';\nimport { NavLink as RouterLink, useLocation } from 'react-router-dom';\nimport { NetworkController } from './NetworkController';\n\nexport default function Header() {\n  const { onClose } = useDisclosure();\n  const location = useLocation();\n\n  useEffect(() => {\n    onClose();\n  }, [location, onClose]);\n\n  return (\n    <Flex\n      bg=\"navy.700\"\n      mb=\"4\"\n      py=\"3\"\n      borderBottomWidth=\"1px\"\n      borderBottomColor=\"gray.900\"\n      px={{ base: 1, md: 10 }}\n    >\n      <Container maxW=\"1236px\" as={Flex} justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"row\" justifyContent=\"start\" alignItems=\"center\">\n          <Link mt={-1.5} to=\"/\" as={RouterLink} display={{ base: 'none', md: 'inline-block' }}>\n            <Logo />\n          </Link>\n          <Link mt={-1.5} to=\"/\" as={RouterLink} display={{ md: 'none' }}>\n            <LogoIcon />\n          </Link>\n        </Flex>\n        <Flex gap={3} flexWrap=\"wrap-reverse\" justifyContent=\"center\" alignItems=\"center\">\n          <NetworkController />\n        </Flex>\n      </Container>\n    </Flex>\n  );\n}\n","import { Flex, FlexProps } from '@chakra-ui/react';\n\nexport const BorderBox = (props: FlexProps) => (\n  <Flex bg=\"navy.700\" borderWidth=\"1px\" borderColor=\"gray.900\" borderRadius=\"base\" {...props} />\n);\n","import Wei, { wei } from '@synthetixio/wei';\nimport React, { createContext, useState, PropsWithChildren, Dispatch, SetStateAction } from 'react';\n\nexport const ManagePositionContext = createContext<{\n  collateralChange: Wei;\n  debtChange: Wei;\n  withdrawAmount: Wei;\n  setDebtChange: Dispatch<SetStateAction<Wei>>;\n  setCollateralChange: Dispatch<SetStateAction<Wei>>;\n  setWithdrawAmount: Dispatch<SetStateAction<Wei>>;\n}>({\n  collateralChange: wei(0),\n  debtChange: wei(0),\n  withdrawAmount: wei(0),\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  setDebtChange: () => {},\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  setCollateralChange: () => {},\n  setWithdrawAmount: () => {},\n});\n\nexport const ManagePositionProvider: React.FC<PropsWithChildren> = ({ children }) => {\n  const [debtChange, setDebtChange] = useState(wei(0));\n  const [collateralChange, setCollateralChange] = useState(wei(0));\n  const [withdrawAmount, setWithdrawAmount] = useState(wei(0));\n\n  return (\n    <ManagePositionContext.Provider\n      value={{\n        debtChange,\n        setDebtChange,\n        collateralChange,\n        setCollateralChange,\n        withdrawAmount,\n        setWithdrawAmount,\n      }}\n    >\n      {children}\n    </ManagePositionContext.Provider>\n  );\n};\n","import { Input, InputProps } from '@chakra-ui/react';\nimport { Wei, wei } from '@synthetixio/wei';\nimport { ChangeEvent, useCallback, useEffect, useRef, useState } from 'react';\n\nexport interface NumberInputProps extends InputProps {\n  'data-cy'?: string;\n  'data-max'?: string;\n}\n\nexport const NUMBER_REGEX = /^([0-9]*[.])?[0-9]{0,18}$/;\n\nfunction cleanupNumber(value: Wei) {\n  // Cleanup trailing precision zeroes\n  const float = parseFloat(value.toString());\n  if (float === value.toNumber()) {\n    return `${float}`;\n  }\n  return value.toString();\n}\n\nexport function NumberInput({\n  value,\n  onChange,\n  min,\n  max,\n  InputProps,\n  disabled,\n}: {\n  onChange?: (value: Wei) => void;\n  value: Wei;\n  min?: Wei;\n  max?: Wei;\n  InputProps?: NumberInputProps;\n  disabled?: boolean;\n}) {\n  const [inputValue, setInputValue] = useState(value.gt(0) ? value.toString() : '');\n\n  const onInputChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      // Define max length here\n      if (e.target.value.length > 24) return;\n\n      let _value = e.target.value;\n\n      if (!isNaN(Number(e.target.value))) {\n        if (!!min && min.gt(Number(e.target.value))) {\n          _value = min.toNumber().toString();\n        }\n      }\n\n      setInputValue(_value);\n      if (!onChange) {\n        // Could be a read-only input\n        return;\n      }\n      if (!NUMBER_REGEX.test(`${_value}`)) {\n        return;\n      }\n      let nextValue = value;\n      try {\n        nextValue = wei(_value || 0);\n      } catch (_err) {\n        // whatever\n      }\n      if (!value.eq(nextValue)) {\n        onChange(nextValue);\n      }\n    },\n    [min, onChange, value]\n  );\n\n  const ref = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n    if (!NUMBER_REGEX.test(`${inputValue}`)) {\n      ref.current.setCustomValidity('Invalid number');\n      return;\n    }\n    if (value && value.eq(0)) {\n      ref.current.setCustomValidity('Value required');\n      return;\n    }\n    if (min && min.gte(0) && value && value.lt(min)) {\n      ref.current.setCustomValidity(`Value smaller than minimum of ${cleanupNumber(min)}`);\n      return;\n    }\n    if (max && max.gte(0) && value && value.gt(max)) {\n      ref.current.setCustomValidity(`Value greater than maximum of ${cleanupNumber(max)}`);\n      return;\n    }\n    ref.current.setCustomValidity('');\n  }, [inputValue, min, max, value]);\n\n  useEffect(() => {\n    if (value.eq(0)) {\n      return setInputValue('');\n    }\n    return setInputValue(cleanupNumber(value));\n  }, [value]);\n\n  return (\n    <Input\n      ref={ref}\n      flex=\"1\"\n      type=\"number\"\n      step=\"any\"\n      border=\"none\"\n      borderWidth=\"0px\"\n      textAlign=\"end\"\n      p={0}\n      outline=\"none\"\n      fontFamily=\"heading\"\n      fontSize=\"xl\"\n      fontWeight=\"700\"\n      lineHeight=\"2xl\"\n      color=\"white\"\n      height=\"unset\"\n      autoFocus={true}\n      placeholder=\"00.00\"\n      _focus={{ boxShadow: 'none !important' }}\n      _placeholder={{ color: 'whiteAlpha.700' }}\n      _disabled={{ color: 'white' }}\n      value={inputValue}\n      onChange={onInputChange}\n      disabled={disabled}\n      {...InputProps}\n      maxLength={10}\n    />\n  );\n}\n","import { ZEROWEI } from '@snx-v3/constants';\nimport { Wei } from '@synthetixio/wei';\n\nexport function calculateCRatio(debt?: Wei, collateralValue?: Wei) {\n  if (debt && collateralValue && !debt.eq(0) && !collateralValue.eq(0)) {\n    return collateralValue.div(debt);\n  }\n  return ZEROWEI;\n}\n","import { calculateCRatio } from '@snx-v3/calculations';\nimport { POOL_ID } from '@snx-v3/constants';\nimport { contractsHash } from '@snx-v3/tsHelpers';\nimport { useNetwork, useProviderForChain } from '@snx-v3/useBlockchain';\nimport { CollateralType } from '@snx-v3/useCollateralTypes';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { erc7412Call } from '@snx-v3/withERC7412';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { useQuery } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\n\nconst log = debug('snx:useLiquidityPosition');\n\nexport type LiquidityPositionType = {\n  collateralType: CollateralType;\n  collateralPrice: Wei;\n  availableCollateral: Wei;\n  availableSystemToken: Wei;\n  collateralAmount: Wei;\n  collateralValue: Wei;\n  debt: Wei;\n  cRatio: Wei;\n  totalDeposited: Wei;\n  totalAssigned: Wei;\n  totalLocked: Wei;\n};\n\nexport const useLiquidityPosition = ({\n  accountId,\n  collateralType,\n}: {\n  accountId?: string;\n  collateralType?: CollateralType;\n}) => {\n  const { data: CoreProxy } = useCoreProxy();\n  const { network } = useNetwork();\n  const provider = useProviderForChain(network!);\n  const { data: systemToken } = useSystemToken();\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'LiquidityPosition',\n      { accountId },\n      { tokenAddress: collateralType?.tokenAddress },\n      { contractsHash: contractsHash([CoreProxy, systemToken]) },\n    ],\n    enabled: Boolean(\n      network && provider && CoreProxy && systemToken && accountId && collateralType\n    ),\n    queryFn: async (): Promise<LiquidityPositionType> => {\n      if (!(network && provider && CoreProxy && systemToken && accountId && collateralType)) {\n        throw 'OMFG';\n      }\n      const CoreProxyContract = new ethers.Contract(CoreProxy.address, CoreProxy.abi, provider);\n\n      const getAccountAvailableSystemTokenCallPromised =\n        CoreProxyContract.populateTransaction.getAccountAvailableCollateral(\n          accountId,\n          systemToken.address\n        );\n      const getPositionCollateralCallPromised =\n        CoreProxyContract.populateTransaction.getPositionCollateral(\n          accountId,\n          POOL_ID,\n          collateralType.tokenAddress\n        );\n      const getPositionDebtCallPromised = CoreProxyContract.populateTransaction.getPositionDebt(\n        accountId,\n        POOL_ID,\n        collateralType.tokenAddress\n      );\n      const getCollateralPriceCallPromised =\n        CoreProxyContract.populateTransaction.getCollateralPrice(collateralType.tokenAddress);\n\n      const getAccountCollateralCallPromised =\n        CoreProxyContract.populateTransaction.getAccountCollateral(\n          accountId,\n          collateralType.tokenAddress\n        );\n\n      const calls = await Promise.all([\n        getAccountAvailableSystemTokenCallPromised,\n        getPositionCollateralCallPromised,\n        getPositionDebtCallPromised,\n        getCollateralPriceCallPromised,\n        getAccountCollateralCallPromised,\n      ]);\n\n      return await erc7412Call(\n        network,\n        provider,\n        calls,\n        (decodedMulticall) => {\n          log('collateralType', collateralType);\n\n          const [accountAvailableSystemToken] = CoreProxyContract.interface.decodeFunctionResult(\n            'getAccountAvailableCollateral',\n            decodedMulticall[0].returnData\n          );\n          log('accountAvailableSystemToken', accountAvailableSystemToken);\n\n          const [positionCollateral] = CoreProxyContract.interface.decodeFunctionResult(\n            'getPositionCollateral',\n            decodedMulticall[1].returnData\n          );\n          log('positionCollateral', positionCollateral);\n\n          const [positionDebt] = CoreProxyContract.interface.decodeFunctionResult(\n            'getPositionDebt',\n            decodedMulticall[1 + 1].returnData\n          );\n          log('positionDebt', positionDebt);\n\n          const [collateralPriceRaw] = CoreProxyContract.interface.decodeFunctionResult(\n            'getCollateralPrice',\n            decodedMulticall[1 + 2].returnData\n          );\n          log('collateralPriceRaw', collateralPriceRaw);\n\n          const [totalDepositedBigNumber, totalAssignedBigNumber, totalLockedBigNumber] =\n            CoreProxyContract.interface.decodeFunctionResult(\n              'getAccountCollateral',\n              decodedMulticall[1 + 3].returnData\n            );\n\n          const totalDeposited = wei(totalDepositedBigNumber);\n          const totalAssigned = wei(totalAssignedBigNumber);\n          const totalLocked = wei(totalLockedBigNumber);\n          log('totalDeposited', totalDeposited);\n          log('totalAssigned', totalAssigned);\n          log('totalLocked', totalLocked);\n\n          const availableCollateral = wei(totalDeposited.sub(totalAssigned).sub(totalLocked));\n          const availableSystemToken = wei(accountAvailableSystemToken);\n\n          const collateralPrice = wei(collateralPriceRaw);\n          const collateralAmount = wei(positionCollateral);\n          const collateralValue = collateralAmount.mul(collateralPrice);\n          const debt = wei(positionDebt);\n          const cRatio = calculateCRatio(debt, collateralValue);\n\n          const liquidityPosition = {\n            collateralType,\n            collateralPrice,\n            availableCollateral,\n            availableSystemToken,\n            collateralAmount,\n            collateralValue,\n            debt,\n            cRatio,\n            totalDeposited,\n            totalAssigned,\n            totalLocked,\n          };\n\n          log('liquidityPosition', liquidityPosition);\n          return liquidityPosition;\n        },\n        'useLiquidityPosition'\n      );\n    },\n  });\n};\n","import { ZEROWEI } from '@snx-v3/constants';\nimport { useOfflinePrices } from '@snx-v3/useCollateralPriceUpdates';\nimport { useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { wei } from '@synthetixio/wei';\nimport { useMemo } from 'react';\n\nexport const useTokenPrice = (symbol?: string) => {\n  const { data: collateralTypes } = useCollateralTypes(true);\n\n  const pythCollateralPrices = collateralTypes?.filter((item) => item.symbol !== 'stataUSDC');\n\n  const { data: collateralPrices } = useOfflinePrices(\n    (pythCollateralPrices || []).map((item) => ({\n      id: item.tokenAddress,\n      oracleId: item.oracleNodeId,\n      symbol: item.symbol,\n    }))\n  );\n\n  return useMemo(() => {\n    if (!collateralTypes || !collateralPrices) {\n      return ZEROWEI;\n    }\n    const collateralPrice =\n      symbol === 'stataUSDC'\n        ? collateralPrices.find((price) => `${price.symbol}`.toUpperCase() === 'USDC')\n        : collateralPrices.find(\n            (price) => `${price.symbol}`.toUpperCase() === `${symbol}`.toUpperCase()\n          );\n    return collateralPrice && collateralPrice.price ? wei(collateralPrice.price) : ZEROWEI;\n  }, [collateralPrices, collateralTypes, symbol]);\n};\n","import { MultistepStatus } from './MultistepStatus';\n\nexport function statusColor(status: MultistepStatus): string {\n  switch (true) {\n    // order matters\n    case status.failed:\n      return 'red.700';\n    case status.disabled:\n      return 'gray.900';\n    case status.loading:\n      return 'gray.900';\n    case status.success:\n      return 'green.700';\n    default:\n      return 'gray.900';\n  }\n}\n","import { createIcon } from '@chakra-ui/icon';\nimport { Box, Spinner } from '@chakra-ui/react';\nimport { PropsWithChildren } from 'react';\nimport { MultistepStatus } from './MultistepStatus';\n\nexport const CheckIcon = createIcon({\n  viewBox: '0 0 14 14',\n  path: (\n    <g fill=\"currentColor\">\n      <polygon points=\"5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039\" />\n    </g>\n  ),\n});\n\nexport const CloseIcon = createIcon({\n  d: 'M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z',\n});\n\nexport function StepIcon({ status, children }: PropsWithChildren<{ status: MultistepStatus }>) {\n  switch (true) {\n    case status.failed:\n      return <CloseIcon color=\"white\" />;\n    case status.success:\n      return <CheckIcon color=\"white\" />;\n    case status.loading:\n      return <Spinner color=\"white\" width={6} height={6} />;\n    case status.disabled:\n    default:\n      return (\n        <Box\n          __css={{\n            display: 'inline',\n            fontWeight: 'medium',\n            textAlign: 'center',\n            fontSize: 'md',\n          }}\n        >\n          {children}\n        </Box>\n      );\n  }\n}\n","import { Flex } from '@chakra-ui/react';\nimport { PropsWithChildren } from 'react';\nimport { MultistepStatus } from './MultistepStatus';\nimport { statusColor } from './statusColor';\nimport { StepIcon } from './StepIcon';\n\nexport function Step({ status, children }: PropsWithChildren<{ status: MultistepStatus }>) {\n  return (\n    <Flex\n      width={10}\n      height={10}\n      minWidth={10}\n      minHeight={10}\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      bg={statusColor(status)}\n      rounded=\"full\"\n      transitionProperty=\"background\"\n      transitionDuration=\"normal\"\n    >\n      <StepIcon status={status}>{children}</StepIcon>\n    </Flex>\n  );\n}\n","import { Box, Checkbox, CheckboxProps, Flex, FlexProps, Text } from '@chakra-ui/react';\nimport { PropsWithChildren, ReactNode } from 'react';\nimport { MultistepStatus } from './MultistepStatus';\nimport { statusColor } from './statusColor';\nimport { Step } from './Step';\n\nfunction StepCheckbox({ children, ...props }: PropsWithChildren<CheckboxProps>) {\n  return (\n    <Flex mt=\"0.5\">\n      <Checkbox size=\"sm\" {...props}>\n        <Box fontSize=\"xs\" opacity=\"0.66\">\n          {children}\n        </Box>\n      </Checkbox>\n    </Flex>\n  );\n}\n\ninterface Props extends Omit<FlexProps, 'title'> {\n  step: number;\n  title: string | ReactNode;\n  subtitle?: string | ReactNode;\n  checkboxLabel?: string;\n  checkboxProps?: CheckboxProps;\n  status: MultistepStatus;\n  children?: ReactNode | undefined;\n}\n\nexport function Multistep({\n  step,\n  title,\n  subtitle,\n  checkboxLabel,\n  checkboxProps,\n  status,\n  children,\n  ...props\n}: Props) {\n  return (\n    <Flex\n      position=\"relative\"\n      alignItems=\"center\"\n      gap={4}\n      rounded=\"lg\"\n      mt=\"6\"\n      p=\"4\"\n      border=\"1px solid\"\n      transitionProperty=\"border-color\"\n      transitionDuration=\"normal\"\n      borderColor={statusColor(status)}\n      {...props}\n    >\n      <Step status={status}>{step}</Step>\n      <Flex direction=\"column\">\n        <Text color=\"white\" fontWeight={700}>\n          {title}\n        </Text>\n        {subtitle ? (\n          <Text as=\"div\" fontSize=\"xs\" opacity=\"0.66\">\n            {subtitle}\n          </Text>\n        ) : null}\n        {checkboxLabel ? <StepCheckbox {...checkboxProps}>{checkboxLabel}</StepCheckbox> : null}\n        {children}\n      </Flex>\n    </Flex>\n  );\n}\n","import { Alert, Button, Divider, Flex, Heading, Text } from '@chakra-ui/react';\nimport { CheckIcon } from '@snx-v3/Multistep';\nimport { ReactNode } from 'react';\n\nexport function LiquidityPositionUpdated({\n  title,\n  subline,\n  alertText,\n  summary,\n  onClose,\n}: {\n  title?: ReactNode;\n  subline?: ReactNode;\n  alertText?: ReactNode;\n  summary?: ReactNode;\n  onClose: () => void;\n}) {\n  return (\n    <Flex flexDir=\"column\" gap=\"6\" borderColor=\"gray.900\" rounded=\"base\" height=\"fit-content\">\n      {title && (\n        <>\n          <Heading color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n            {title}\n          </Heading>\n          <Divider />\n        </>\n      )}\n      {subline && (\n        <Text color=\"white\" fontSize=\"14px\" fontWeight={400}>\n          {subline}\n        </Text>\n      )}\n      <Alert status=\"success\" rounded=\"base\" borderRadius=\"6px\">\n        <Flex bg=\"green.500\" p=\"1\" rounded=\"full\" mr=\"2\">\n          <CheckIcon w=\"12px\" h=\"12px\" color=\"green.900\" />\n        </Flex>\n        <Text color=\"white\" fontSize=\"16px\" fontWeight={400}>\n          {alertText}\n        </Text>\n      </Alert>\n\n      {summary}\n\n      <Button w=\"100%\" onClick={onClose}>\n        Continue\n      </Button>\n    </Flex>\n  );\n}\n","import { ArrowForwardIcon } from '@chakra-ui/icons';\nimport { Flex, Text } from '@chakra-ui/react';\nimport Wei from '@synthetixio/wei';\nimport React from 'react';\n\nconst styles = {\n  sm: {\n    fontSize: '12px',\n    fontWeight: '700',\n    lineHeight: '14px',\n  },\n  md: {\n    fontSize: '16px',\n    fontWeight: '400',\n    lineHeight: '16px',\n  },\n  lg: {\n    fontSize: '18px',\n    fontWeight: '800',\n    lineHeight: '24px',\n  },\n};\n\nexport function ChangeStat({\n  formatFn,\n  value,\n  newValue,\n  hasChanges,\n  'data-cy': dataCy,\n  size = 'lg',\n  isPending,\n}: {\n  value?: Wei;\n  newValue: Wei;\n  hasChanges: boolean;\n  'data-cy'?: string;\n  formatFn: (val?: Wei) => React.ReactNode;\n  size?: 'sm' | 'md' | 'lg';\n  isPending?: boolean;\n}) {\n  return (\n    <Flex\n      gap=\"1\"\n      alignItems=\"center\"\n      color=\"white\"\n      fontSize={styles[size].fontSize}\n      fontWeight={styles[size].fontWeight}\n      lineHeight={styles[size].lineHeight}\n      flexWrap=\"wrap\"\n      data-cy={dataCy}\n    >\n      <Text\n        as=\"div\"\n        data-cy=\"change stats current\"\n        textAlign=\"center\"\n        opacity={value && value.eq(0) ? '70%' : undefined}\n        whiteSpace=\"nowrap\"\n      >\n        {isPending ? '~' : formatFn(value)}\n      </Text>\n      {hasChanges && !isPending && (!value || !value.eq(newValue)) ? (\n        <Flex gap=\"1\" alignItems=\"center\" isTruncated>\n          <ArrowForwardIcon />\n          <Text\n            as=\"div\"\n            data-cy=\"change stats new\"\n            textAlign=\"center\"\n            opacity={newValue.eq(0) ? '70%' : undefined}\n            whiteSpace=\"nowrap\"\n          >\n            {formatFn(newValue)}\n          </Text>\n        </Flex>\n      ) : null}\n    </Flex>\n  );\n}\n","import { Text, TextProps } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { Wei } from '@synthetixio/wei';\n\nexport function getDebtColor(debt?: Wei) {\n  if (!debt) {\n    return 'gray.50';\n  }\n  if (debt.gt(0)) {\n    return 'white.500';\n  }\n  if (debt.lt(0)) {\n    return 'green.500';\n  }\n  return 'white.500';\n}\n\nexport function PnlAmount({ debt, ...props }: TextProps & { debt?: Wei }) {\n  return (\n    <Text as=\"span\" {...props} color={getDebtColor(debt)}>\n      <Amount prefix={`${debt && debt.gt(0) ? '-' : ''}$`} value={debt ? debt.abs() : ZEROWEI} />\n    </Text>\n  );\n}\n\nexport function DebtAmount({ debt, ...props }: TextProps & { debt?: Wei }) {\n  return (\n    <Text as=\"span\" {...props} color={getDebtColor(debt)}>\n      <Amount prefix={`${debt && debt.lt(0) ? '-' : ''}$`} value={debt ? debt.abs() : ZEROWEI} />\n    </Text>\n  );\n}\n","import { InfoIcon } from '@chakra-ui/icons';\nimport { Flex, Text, Tooltip } from '@chakra-ui/react';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { ChangeStat } from '@snx-v3/ChangeStat';\nimport { DebtAmount } from '@snx-v3/DebtAmount';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { type Wei } from '@synthetixio/wei';\n\nexport function DebtStats({ newDebt, hasChanges }: { newDebt: Wei; hasChanges: boolean }) {\n  const [params] = useParams<PositionPageSchemaType>();\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: liquidityPosition, isPending: isPendingLiquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  return (\n    <BorderBox p={4} flex=\"1\" flexDirection=\"row\" bg=\"navy.700\">\n      <Flex flexDirection=\"column\" width=\"100%\">\n        <Flex alignItems=\"center\" mb=\"4px\">\n          <Text color=\"gray.500\" fontSize=\"xs\" fontFamily=\"heading\" lineHeight=\"16px\">\n            Debt\n          </Text>\n          <Tooltip\n            label={\n              <Text>\n                Debt consists of:\n                <br />\n                - Your portion of the pool&apos;s total debt, which fluctuates based on trader\n                performance and market conditions\n                <br />- The amount you&apos;ve borrowed against your collateral without incurring\n                interest\n              </Text>\n            }\n            textAlign=\"start\"\n            py={2}\n            px={3}\n          >\n            <Flex height=\"12px\" width=\"12px\" ml=\"4px\" alignItems=\"center\" justifyContent=\"center\">\n              <InfoIcon color=\"gray.500\" height=\"10px\" width=\"10px\" />\n            </Flex>\n          </Tooltip>\n        </Flex>\n        <Flex width=\"100%\">\n          <ChangeStat\n            value={liquidityPosition?.debt}\n            isPending={Boolean(params.accountId && isPendingLiquidityPosition)}\n            newValue={newDebt}\n            formatFn={(val?: Wei) => <DebtAmount debt={val} as=\"span\" />}\n            hasChanges={hasChanges}\n            data-cy=\"stats debt\"\n          />\n        </Flex>\n      </Flex>\n    </BorderBox>\n  );\n}\n","import { BigNumber } from 'ethers';\nimport { z } from 'zod';\nimport { wei } from '@synthetixio/wei';\n\nexport const ZodBigNumber = z.custom<BigNumber>((val) => BigNumber.isBigNumber(val));\n\nexport const SmallIntSchema = ZodBigNumber.transform((x) => wei(x, 0).toNumber());\nexport const WeiSchema = ZodBigNumber.transform((x) => wei(x));\n","import { POOL_ID } from '@snx-v3/constants';\nimport { contractsHash } from '@snx-v3/tsHelpers';\nimport { Network, useNetwork, useProviderForChain } from '@snx-v3/useBlockchain';\nimport { useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { erc7412Call } from '@snx-v3/withERC7412';\nimport { ZodBigNumber } from '@snx-v3/zod';\nimport { wei } from '@synthetixio/wei';\nimport { useQuery } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\nimport { z } from 'zod';\n\nconst VaultCollateralSchema = z\n  .object({ value: ZodBigNumber, amount: ZodBigNumber })\n  .transform(({ value, amount }) => ({ value: wei(value), amount: wei(amount) }));\n\nexport const useVaultsData = (customNetwork?: Network) => {\n  const { network: currentNetwork } = useNetwork();\n  const network = customNetwork ?? currentNetwork;\n\n  const { data: collateralTypes } = useCollateralTypes(false, network);\n  const { data: CoreProxy } = useCoreProxy(network);\n\n  const provider = useProviderForChain(network);\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'VaultsData',\n      { contractsHash: contractsHash([CoreProxy, ...(collateralTypes ?? [])]) },\n    ],\n    enabled: Boolean(CoreProxy && collateralTypes && network && provider),\n    queryFn: async () => {\n      if (!(CoreProxy && collateralTypes && network && provider)) {\n        throw Error('useVaultsData should not be enabled when missing data');\n      }\n      const CoreProxyContract = new ethers.Contract(CoreProxy.address, CoreProxy.abi, provider);\n      const calls = await Promise.all(\n        collateralTypes.map((collateralType) =>\n          CoreProxyContract.populateTransaction.getVaultCollateral(\n            POOL_ID,\n            collateralType.tokenAddress\n          )\n        )\n      );\n\n      return await erc7412Call(\n        network,\n        provider,\n        calls,\n        (decodedMulticall) => {\n          return decodedMulticall.map(({ returnData }, i) => {\n            const CoreProxyInterface = new ethers.utils.Interface(CoreProxy.abi);\n            const vaultCollateral = CoreProxyInterface.decodeFunctionResult(\n              'getVaultCollateral',\n              returnData\n            );\n            const collateral = VaultCollateralSchema.parse({ ...vaultCollateral });\n            return {\n              collateral,\n              collateralType: collateralTypes[i],\n            };\n          });\n        },\n        'useVaultsData'\n      );\n    },\n  });\n};\n","import { ArrowUpIcon } from '@chakra-ui/icons';\nimport { Flex, Heading, Link, Text } from '@chakra-ui/react';\nimport { formatNumberToUsd } from '@snx-v3/formatters';\nimport { getStatsUrl } from '@snx-v3/getStatsUrl';\nimport { TokenIcon } from '@snx-v3/TokenIcon';\nimport { NetworkIcon, useNetwork } from '@snx-v3/useBlockchain';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useVaultsData } from '@snx-v3/useVaultsData';\nimport React from 'react';\n\n// import { useApr } from '@snx-v3/useApr';\n\nexport function PositionTitle() {\n  const { network } = useNetwork();\n\n  const [params] = useParams<PositionPageSchemaType>();\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n\n  const { data: vaultsData, isPending: isPendingVaultsData } = useVaultsData(network);\n\n  // const { data: aprData, isPending: isAprLoading } = useApr(network);\n  // const { collateral: totalCollateral, debt: totalDebt } = React.useMemo(() => {\n  //   const zeroValues = { collateral: { value: wei(0), amount: wei(0) }, debt: wei(0) };\n  //   if (!vaultsData) return zeroValues;\n  //\n  //   return vaultsData.reduce((acc, { collateral, debt }) => {\n  //     acc.collateral = {\n  //       value: acc.collateral.value.add(collateral.value),\n  //       amount: acc.collateral.amount.add(collateral.amount),\n  //     };\n  //     acc.debt = acc.debt.add(debt);\n  //     return acc;\n  //   }, zeroValues);\n  // }, [vaultsData]);\n\n  const vaultData = React.useMemo(() => {\n    if (vaultsData && collateralType) {\n      return vaultsData.find(\n        (item) => item.collateralType.address.toLowerCase() === collateralType.address.toLowerCase()\n      );\n    }\n  }, [collateralType, vaultsData]);\n\n  return (\n    <Flex alignItems=\"center\">\n      <Flex\n        bg=\"linear-gradient(180deg, #08021E 0%, #1F0777 100%)\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        borderRadius=\"100%\"\n        display=\"flex\"\n      >\n        <TokenIcon\n          symbol={collateralType?.symbol ?? params.collateralSymbol}\n          height={42}\n          width={42}\n          fill=\"#0B0B22\"\n          color=\"#00D1FF\"\n        />\n      </Flex>\n      <Flex direction=\"column\" gap={0.5}>\n        <Heading\n          ml={4}\n          fontWeight={700}\n          fontSize={['18px', '20px', '24px']}\n          color=\"gray.50\"\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          {collateralType?.displaySymbol ?? params.collateralSymbol} Liquidity Position\n        </Heading>\n        <Flex\n          ml={4}\n          fontWeight={700}\n          fontSize={['10px', '12px']}\n          color=\"gray.50\"\n          alignItems=\"center\"\n          gap={3}\n          lineHeight=\"14px\"\n        >\n          <Flex\n            mt={0.25}\n            alignItems=\"center\"\n            color=\"gray.500\"\n            fontWeight=\"500\"\n            borderWidth={1}\n            borderRadius={4}\n            px={1}\n            py={0.5}\n            gap={2}\n          >\n            <NetworkIcon size=\"14px\" networkId={network?.id} />\n            <Text>{network?.label} Network</Text>\n          </Flex>\n          <Flex\n            alignItems=\"center\"\n            color=\"gray.500\"\n            fontWeight=\"500\"\n            borderWidth={1}\n            borderRadius={4}\n            px={1}\n            py={0.5}\n            gap={2}\n          >\n            <Text>TVL</Text>\n            <Text>\n              {isPendingVaultsData\n                ? '~'\n                : vaultData\n                  ? formatNumberToUsd(vaultData.collateral.value.toNumber(), {\n                      maximumFractionDigits: 0,\n                    })\n                  : '-'}\n            </Text>\n          </Flex>\n          <Flex\n            as={Link}\n            isExternal\n            href={getStatsUrl(network?.id)}\n            textDecoration=\"none\"\n            _hover={{ textDecoration: 'none' }}\n            cursor=\"pointer\"\n            alignItems=\"center\"\n            color=\"gray.500\"\n            fontWeight=\"500\"\n            borderWidth={1}\n            borderRadius={4}\n            px={1}\n            py={0.5}\n            gap={2}\n          >\n            <Text>More Stats</Text>\n            <ArrowUpIcon transform=\"rotate(45deg)\" />\n          </Flex>\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n}\n","export function numberWithCommas(value: string, decimals?: number) {\n  const parts = value.split('.');\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  const joinedParts = parts.join('.');\n  return decimals ? joinedParts.substring(0, joinedParts.indexOf('.') + decimals + 1) : joinedParts;\n}\n\nexport const formatNumberToUsd = (value: number, options?: Intl.NumberFormatOptions) => {\n  return new Intl.NumberFormat('en-EN', {\n    style: 'currency',\n    currency: 'USD',\n    ...options,\n  }).format(Number(value));\n};\n\nexport const formatNumber = (value: number, options?: Intl.NumberFormatOptions) => {\n  return new Intl.NumberFormat('en-EN', {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n    ...options,\n  }).format(Number(value));\n};\n\nexport const formatPercent = (value: number, options?: Intl.NumberFormatOptions) => {\n  return new Intl.NumberFormat('en-EN', {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2,\n    style: 'percent',\n    ...options,\n  }).format(Number(value));\n};\n","export function getStatsUrl(chainId?: number) {\n  if (chainId === 1) {\n    return 'https://stats.synthetix.io/all/?page=ethereum';\n  }\n  if (chainId === 10) {\n    return 'https://stats.synthetix.io/all/?page=optimism';\n  }\n  if (chainId === 8453) {\n    return 'https://stats.synthetix.io/all/?page=base';\n  }\n  if (chainId === 42161) {\n    return 'https://stats.synthetix.io/all/?page=arbitrum';\n  }\n  return 'https://stats.synthetix.io/all/';\n}\n","import { Button, Flex, Image, Link, Text } from '@chakra-ui/react';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport CoinImage from './coin.png';\n\nexport function StataDepositBanner() {\n  return (\n    <BorderBox\n      display=\"flex\"\n      flexDirection={['column', 'column', 'column', 'column', 'row']}\n      alignItems=\"center\"\n      gap={6}\n      p={6}\n      bg=\"navy.700\"\n    >\n      <Flex flexDir=\"column\" gap={3}>\n        <Text color=\"white.900\" fontSize=\"20px\" fontWeight={700}>\n          This position earns yield via Aave and Synthetix\n        </Text>\n        <Text color=\"white.600\" fontSize=\"14px\" fontWeight={300}>\n          Deposit USDC, and we’ll wrap it into Static aUSDC for you. Watch your balance stay the\n          same while the value grows, earning effortless yield through Aave and Synthetix.\n        </Text>\n        <Button\n          mt={1}\n          as={Link}\n          href=\"https://governance.aave.com/t/bgd-statatoken-v3/11894\"\n          target=\"_blank\"\n          textDecoration=\"none\"\n          variant=\"outline\"\n          colorScheme=\"gray\"\n          w=\"fit-content\"\n        >\n          Read more about Static aUSDC\n        </Button>\n      </Flex>\n\n      <Image rounded=\"8px\" src={CoinImage} width={257} />\n    </BorderBox>\n  );\n}\n","export const getHealthVariant = ({\n  targetCratio,\n  liquidationCratio,\n  cRatio,\n}: {\n  liquidationCratio: number | undefined;\n  targetCratio: number | undefined;\n  cRatio: number | undefined;\n}) => {\n  if (!liquidationCratio || !targetCratio || !cRatio) {\n    return 'success';\n  }\n  if (cRatio <= 0) {\n    return 'success';\n  }\n  if (cRatio < liquidationCratio) {\n    return 'error';\n  }\n  if (cRatio < targetCratio) {\n    return 'warning';\n  }\n  return 'success';\n};\n\nexport const ratioIsMaxUInt = (ratio: number) => ratio >= Number.MAX_SAFE_INTEGER;\n\nexport const getProgressSize = ({\n  targetCratio,\n  liquidationCratio,\n  cRatio,\n}: {\n  liquidationCratio: number | undefined;\n  targetCratio: number | undefined;\n  cRatio: number | undefined;\n}) => {\n  if (!liquidationCratio || !targetCratio || !cRatio) {\n    return 0;\n  }\n\n  if (cRatio < 0) {\n    return 0;\n  }\n\n  if (cRatio >= targetCratio) {\n    return 75 + (25 * (cRatio - targetCratio)) / liquidationCratio;\n  }\n\n  if (cRatio >= liquidationCratio) {\n    return 25 + (50 * (cRatio - liquidationCratio)) / (targetCratio - liquidationCratio);\n  }\n\n  return (25 * cRatio) / liquidationCratio;\n};\n","import { Amount } from '@snx-v3/Amount';\nimport { wei } from '@synthetixio/wei';\nimport { FC } from 'react';\nimport { ratioIsMaxUInt } from './CRatioBar.utils';\n\nexport const CRatioAmount: FC<{\n  value: number;\n}> = ({ value }) => {\n  if (!value || value < 0) {\n    return <>N/A</>;\n  }\n\n  if (ratioIsMaxUInt(value)) {\n    return <>Infinite</>;\n  }\n\n  return <Amount value={wei(Math.round(value))} suffix=\"%\" />;\n};\n","import { Badge } from '@chakra-ui/react';\nimport { FC } from 'react';\nimport { getHealthVariant } from './CRatioBar.utils';\n\nconst badgeColors = {\n  success: {\n    colorScheme: 'green',\n    bg: 'green.900',\n    label: 'HEALTHY',\n  },\n  error: {\n    colorScheme: 'red',\n    bg: 'red.900',\n    label: 'Unhealthy',\n  },\n  warning: {\n    colorScheme: 'orange',\n    bg: 'orange.900',\n    label: 'MANAGE',\n  },\n};\n\nexport const CRatioBadge: FC<{\n  liquidationCratio: number;\n  targetCratio: number;\n  cRatio: number;\n}> = ({ liquidationCratio, targetCratio, cRatio }) => {\n  const variant = getHealthVariant({\n    targetCratio,\n    liquidationCratio,\n    cRatio,\n  });\n  return (\n    <Badge\n      colorScheme={badgeColors[variant].colorScheme}\n      border=\"1px solid\"\n      bg={badgeColors[variant].bg}\n    >\n      {badgeColors[variant].label}\n    </Badge>\n  );\n};\n","import { InfoIcon } from '@chakra-ui/icons';\nimport { Box, Text, Tooltip } from '@chakra-ui/react';\nimport { FC } from 'react';\n\nexport const LineWithText: FC<{\n  left: string;\n  text: string;\n  tooltipText: string;\n}> = ({ left, text, tooltipText }) => {\n  return (\n    <>\n      <Box\n        position=\"absolute\"\n        height=\"40%\"\n        transform=\"translateX(-50%)\"\n        left={left}\n        top={0}\n        bottom={0}\n        margin=\"auto\"\n      >\n        <Text\n          color=\"gray.700\"\n          whiteSpace=\"nowrap\"\n          fontSize=\"xx-small\"\n          transform=\"translateY(calc(-100% - 10px) )\"\n        >\n          {text}{' '}\n          <Tooltip label={tooltipText} hasArrow>\n            <InfoIcon />\n          </Tooltip>\n        </Text>\n      </Box>\n      <Box\n        position=\"absolute\"\n        height=\"40%\"\n        width=\"1px\"\n        bg=\"gray.900\"\n        left={left}\n        top={0}\n        bottom={0}\n        margin=\"auto\"\n      />\n    </>\n  );\n};\n","import { InfoIcon, TriangleDownIcon, TriangleUpIcon } from '@chakra-ui/icons';\nimport { Box, Flex, Progress, Text, Tooltip } from '@chakra-ui/react';\nimport { CRatioAmount } from './CRatioAmount';\nimport { CRatioBadge } from './CRatioBadge';\nimport { getHealthVariant, getProgressSize, ratioIsMaxUInt } from './CRatioBar.utils';\nimport { LineWithText } from './LineWithText';\n\nexport function CRatioBar({\n  newCRatio,\n  currentCRatio,\n  targetCratio,\n  liquidationCratio,\n  hasChanges,\n}: {\n  liquidationCratio: number;\n  targetCratio: number;\n  currentCRatio: number;\n  newCRatio: number;\n  hasChanges: boolean;\n}) {\n  const variant = hasChanges\n    ? getHealthVariant({\n        targetCratio: targetCratio,\n        liquidationCratio: liquidationCratio,\n        cRatio: newCRatio,\n      })\n    : getHealthVariant({\n        targetCratio: targetCratio,\n        liquidationCratio: liquidationCratio,\n        cRatio: currentCRatio,\n      });\n\n  const newBarSize = getProgressSize({\n    cRatio: newCRatio,\n    targetCratio: targetCratio,\n    liquidationCratio: liquidationCratio,\n  });\n\n  const currentBarSize = getProgressSize({\n    cRatio: currentCRatio,\n    targetCratio: targetCratio,\n    liquidationCratio: liquidationCratio,\n  });\n\n  return (\n    <Flex flexDir=\"column\" gap=\"2\">\n      <Text color=\"gray.500\" fontSize=\"xs\">\n        C-Ratio{' '}\n        <Tooltip\n          textAlign=\"left\"\n          label=\"C-ratio is a dynamic number that represents a ratio between your locked collateral and your debt\"\n          p=\"3\"\n        >\n          <InfoIcon w=\"10px\" h=\"10px\" />\n        </Tooltip>\n      </Text>\n      <Flex\n        color=\"white\"\n        fontWeight={800}\n        fontSize=\"20px\"\n        flexDir={['column', 'row']}\n        alignItems=\"center\"\n        gap={2}\n      >\n        <CRatioAmount value={currentCRatio} />\n\n        {hasChanges ? (\n          <>\n            <span>&rarr;</span>\n            <Text>\n              {!newCRatio || newCRatio < 0\n                ? 'N/A'\n                : ratioIsMaxUInt(newCRatio)\n                  ? 'Infinite'\n                  : `${newCRatio.toFixed(2)} %`}\n            </Text>\n          </>\n        ) : null}\n\n        {(hasChanges ? newCRatio || 0 : currentCRatio) !== 0 ? (\n          <CRatioBadge\n            cRatio={hasChanges ? newCRatio || 0 : currentCRatio}\n            liquidationCratio={liquidationCratio}\n            targetCratio={targetCratio}\n          />\n        ) : null}\n      </Flex>\n\n      <Box position=\"relative\" height=\"100px\" width=\"full\" overflowX=\"hidden\">\n        <>\n          <LineWithText\n            left=\"25%\"\n            text={\n              liquidationCratio ? `Liquidation < ${liquidationCratio.toFixed(0)}%` : 'Liquidation'\n            }\n            tooltipText=\"Point at which your Position gets liquidated\"\n          />\n          <LineWithText\n            left=\"75%\"\n            text={\n              targetCratio\n                ? `Borrowing Ratio ${\n                    ratioIsMaxUInt(targetCratio) ? 'Infinite' : targetCratio.toFixed(0)\n                  }%`\n                : 'Borrowing Ratio'\n            }\n            tooltipText=\"Min point at which you can borrow assets\"\n          />\n        </>\n\n        <Box top={0} bottom={0} height=\"12px\" position=\"absolute\" margin=\"auto\" width=\"100%\">\n          <Progress\n            variant={\n              currentBarSize < newBarSize && !(currentBarSize >= 100 && newBarSize > 100)\n                ? `update-${variant}`\n                : variant\n            }\n            top={0}\n            bottom={0}\n            height=\"12px\"\n            position=\"absolute\"\n            margin=\"auto\"\n            left=\"0\"\n            width=\"100%\"\n            value={Math.min(newBarSize, currentBarSize)}\n          />\n          <Progress\n            variant={currentBarSize >= newBarSize ? `update-${variant}` : variant}\n            top={0}\n            bottom={0}\n            height=\"12px\"\n            position=\"absolute\"\n            margin=\"auto\"\n            width=\"100%\"\n            left={`${Math.min(newBarSize, currentBarSize)}%`}\n            display={newCRatio === 0 ? 'none' : 'block'}\n            value={Math.abs(newBarSize - currentBarSize)}\n          />\n        </Box>\n\n        <Box\n          bg={variant}\n          height=\"12px\"\n          position=\"absolute\"\n          left={`${newBarSize}%`}\n          top={0}\n          bottom={0}\n          margin=\"auto\"\n          display={newCRatio === 0 ? 'none' : 'block'}\n        >\n          {currentCRatio > 0 ? (\n            <>\n              <TriangleDownIcon\n                position=\"absolute\"\n                right={0}\n                top={0}\n                transform=\"translate(50%,-100%)\"\n                color={variant}\n              />\n              <TriangleUpIcon\n                position=\"absolute\"\n                right={0}\n                bottom={0}\n                transform=\"translate(50%,100%)\"\n                color={variant}\n              />\n            </>\n          ) : null}\n        </Box>\n      </Box>\n    </Flex>\n  );\n}\n","import { Flex, Text } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { calculateCRatio } from '@snx-v3/calculations';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport Wei from '@synthetixio/wei';\nimport { FC } from 'react';\n\nexport const CRatioChangeStat: FC<{\n  collateralChange: Wei;\n  currentCollateral?: Wei;\n  debtChange: Wei;\n  currentDebt?: Wei;\n  size?: 'sm' | 'lg';\n  collateralPrice?: Wei;\n}> = ({ size, currentCollateral, currentDebt, collateralChange, debtChange, collateralPrice }) => (\n  <Flex alignItems=\"center\" gap={1.5}>\n    <Text\n      color=\"white\"\n      fontSize={size === 'lg' ? '20px' : '12px'}\n      fontWeight={size === 'lg' ? '800' : '700'}\n    >\n      {!currentCollateral || !currentDebt || !collateralPrice ? (\n        ' N/A'\n      ) : currentCollateral.gt(0) && currentDebt.eq(0) ? (\n        'Infinite'\n      ) : (\n        <Amount\n          value={calculateCRatio(currentDebt, currentCollateral.mul(collateralPrice)).mul(100)}\n          suffix=\"%\"\n        />\n      )}\n    </Text>\n\n    {collateralPrice && (!collateralChange?.eq(0) || !debtChange.eq(0)) ? (\n      <>\n        <span>&rarr;</span>\n\n        <Text\n          color=\"white\"\n          fontSize={size === 'lg' ? '20px' : '12px'}\n          fontWeight={size === 'lg' ? '800' : '700'}\n        >\n          {(currentCollateral || ZEROWEI).add(collateralChange).gt(0) &&\n          (currentDebt || ZEROWEI).add(debtChange).eq(0) ? (\n            'Infinite'\n          ) : (\n            <Amount\n              value={calculateCRatio(\n                (currentDebt || ZEROWEI).add(debtChange),\n                (currentCollateral || ZEROWEI).add(collateralChange).mul(collateralPrice)\n              ).mul(100)}\n              suffix=\"%\"\n            />\n          )}\n        </Text>\n      </>\n    ) : null}\n  </Flex>\n);\n","import { Network } from '@snx-v3/useBlockchain';\nimport { useSynthTokens } from '@snx-v3/useSynthTokens';\nimport React from 'react';\n\nexport function useIsAndromedaStataUSDC({\n  tokenAddress,\n  customNetwork,\n}: {\n  tokenAddress?: string;\n  customNetwork?: Network;\n}) {\n  const { data: synthTokens } = useSynthTokens(customNetwork);\n  return React.useMemo(() => {\n    if (!synthTokens) {\n      return false;\n    }\n    if (!tokenAddress) {\n      return false;\n    }\n    const addr = tokenAddress?.toLowerCase();\n    const isAndromedaStataUSDC = synthTokens.some(\n      (synthToken) =>\n        synthToken.symbol === 'sStataUSDC' && addr === synthToken.address.toLowerCase()\n    );\n    return isAndromedaStataUSDC;\n  }, [tokenAddress, synthTokens]);\n}\n","import { calculateCRatio } from '@snx-v3/calculations';\nimport { Wei, wei } from '@synthetixio/wei';\n\nexport const validatePosition = ({\n  issuanceRatioD18,\n  collateralAmount,\n  collateralPrice,\n  debt,\n  collateralChange,\n  debtChange,\n}: {\n  issuanceRatioD18?: Wei;\n  collateralAmount?: Wei;\n  collateralPrice?: Wei;\n  debt?: Wei;\n  collateralChange: Wei;\n  debtChange: Wei;\n}) => {\n  const targetCRatio = issuanceRatioD18 ? issuanceRatioD18 : wei(1);\n  const newDebt = wei(debt || 0).add(debtChange);\n  const newCollateralAmount = wei(collateralAmount || 0).add(collateralChange);\n  const newCollateralValue = newCollateralAmount.mul(collateralPrice || 0);\n\n  const newCRatio = calculateCRatio(newDebt, newCollateralValue);\n\n  const maybeMaxDebt = wei(newCollateralAmount)\n    .mul(collateralPrice || 0)\n    .div(targetCRatio)\n    .sub(debt || 0);\n\n  const maxDebt = maybeMaxDebt.gte(0) ? maybeMaxDebt : wei(0);\n\n  const isValid =\n    (debtChange.lte(0) && collateralChange.gte(0)) ||\n    ((newCRatio.gte(targetCRatio) || newCRatio.lte(0)) &&\n      (newDebt.lte(0) || newCollateralAmount.gt(0)));\n\n  return {\n    isValid,\n    hasChanges: !collateralChange.eq(0) || !debtChange.eq(0),\n    newCRatio,\n    newDebt,\n    newCollateralAmount,\n    maxDebt,\n  };\n};\n","import { Flex, Link, Text } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { ChangeStat } from '@snx-v3/ChangeStat';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { currency } from '@snx-v3/format';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { makeSearch, type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { type Wei } from '@synthetixio/wei';\n\nexport function CollateralStats({\n  newCollateralAmount,\n  hasChanges,\n}: {\n  newCollateralAmount: Wei;\n  hasChanges: boolean;\n}) {\n  const [params, setParams] = useParams<PositionPageSchemaType>();\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: liquidityPosition, isPending: isPendingLiquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  return (\n    <BorderBox maxW={['100%', '50%']} p={4} flex=\"1\" flexDirection=\"row\" bg=\"navy.700\">\n      <Flex\n        opacity={!liquidityPosition && !hasChanges ? '40%' : '100%'}\n        flexDirection=\"column\"\n        width=\"100%\"\n      >\n        <Flex alignItems=\"center\" mb=\"4px\">\n          <Text color=\"gray.500\" fontSize=\"xs\" fontFamily=\"heading\" lineHeight=\"16px\">\n            Collateral\n          </Text>\n        </Flex>\n        <Flex width=\"100%\" isTruncated>\n          <Flex width=\"100%\" direction=\"column\" gap=\"1\">\n            <ChangeStat\n              isPending={Boolean(params.accountId && isPendingLiquidityPosition)}\n              value={liquidityPosition?.collateralAmount}\n              newValue={newCollateralAmount}\n              formatFn={(val?: Wei) =>\n                `${currency(val ?? ZEROWEI)} ${\n                  collateralType?.displaySymbol ?? params.collateralSymbol\n                }`\n              }\n              hasChanges={hasChanges}\n              data-cy=\"stats collateral\"\n            />\n            {liquidityPosition ? (\n              <ChangeStat\n                isPending={Boolean(params.accountId && isPendingLiquidityPosition)}\n                value={\n                  liquidityPosition\n                    ? liquidityPosition.collateralAmount.mul(liquidityPosition.collateralPrice)\n                    : ZEROWEI\n                }\n                newValue={newCollateralAmount.mul(liquidityPosition?.collateralPrice ?? ZEROWEI)}\n                formatFn={(val?: Wei) => currency(val ?? ZEROWEI)}\n                size=\"md\"\n                hasChanges={hasChanges}\n                data-cy=\"stats collateral value\"\n              />\n            ) : null}\n          </Flex>\n        </Flex>\n\n        {liquidityPosition && liquidityPosition.totalLocked.gt(0) ? (\n          <Flex data-cy=\"locked amount\" mt={4} alignItems=\"center\" gap={2} alignContent=\"center\">\n            <Text color=\"gray.500\" fontSize=\"sm\" fontFamily=\"heading\" lineHeight=\"16px\">\n              Escrowed\n            </Text>{' '}\n            <Link\n              data-cy=\"locked amount link\"\n              color=\"white\"\n              fontSize=\"sm\"\n              fontFamily=\"heading\"\n              lineHeight=\"16px\"\n              fontWeight={700}\n              ml={1}\n              href={`?${makeSearch({\n                ...params,\n                page: 'position',\n                manageAction: 'locked',\n              })}`}\n              onClick={(e) => {\n                e.preventDefault();\n                setParams({ ...params, page: 'position', manageAction: 'locked' });\n              }}\n            >\n              <Amount\n                value={liquidityPosition.totalLocked}\n                suffix={` ${collateralType?.displaySymbol}`}\n              />\n            </Link>\n          </Flex>\n        ) : null}\n      </Flex>\n    </BorderBox>\n  );\n}\n","import { InfoIcon } from '@chakra-ui/icons';\nimport { Flex, Text } from '@chakra-ui/react';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { ChangeStat } from '@snx-v3/ChangeStat';\nimport { PnlAmount } from '@snx-v3/DebtAmount';\nimport { Tooltip } from '@snx-v3/Tooltip';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { type Wei } from '@synthetixio/wei';\n\nexport function PnlStats({ newDebt, hasChanges }: { newDebt: Wei; hasChanges: boolean }) {\n  const [params] = useParams<PositionPageSchemaType>();\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: liquidityPosition, isPending: isPendingLiquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  return (\n    <BorderBox p={4} flex=\"1\" flexDirection=\"row\" bg=\"navy.700\" justifyContent=\"space-between\">\n      <Flex flexDirection=\"column\" width=\"100%\">\n        <Flex alignItems=\"center\" mb=\"4px\">\n          <Text color=\"gray.500\" fontSize=\"xs\" fontFamily=\"heading\" lineHeight=\"16px\">\n            PnL\n          </Text>\n          <Tooltip\n            label=\"Your portion of the pool's total debt, which fluctuates based on trader performance and market conditions. This PNL is not inclusive liquidated trader collateral rewards.\"\n            textAlign=\"start\"\n            py={2}\n            px={3}\n          >\n            <Flex height=\"12px\" width=\"12px\" ml=\"4px\" alignItems=\"center\" justifyContent=\"center\">\n              <InfoIcon color=\"white\" height=\"9px\" width=\"9px\" />\n            </Flex>\n          </Tooltip>\n        </Flex>\n        <Flex width=\"100%\">\n          <ChangeStat\n            value={liquidityPosition?.debt.mul(-1)}\n            isPending={Boolean(params.accountId && isPendingLiquidityPosition)}\n            newValue={newDebt.mul(-1)}\n            formatFn={(val?: Wei) => <PnlAmount debt={val ? val.mul(-1) : val} />}\n            hasChanges={hasChanges}\n            data-cy=\"stats pnl\"\n          />\n        </Flex>\n      </Flex>\n    </BorderBox>\n  );\n}\n","import { Flex, Text } from '@chakra-ui/react';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { calculateCRatio } from '@snx-v3/calculations';\nimport { D27 } from '@snx-v3/constants';\nimport { CRatioBar } from '@snx-v3/CRatioBar';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useIsAndromedaStataUSDC } from '@snx-v3/useIsAndromedaStataUSDC';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useStaticAaveUSDCRate } from '@snx-v3/useStaticAaveUSDCRate';\nimport { validatePosition } from '@snx-v3/validatePosition';\nimport React from 'react';\nimport { CollateralStats } from './CollateralStats';\nimport { DebtStats } from './DebtStats';\nimport { PnlStats } from './PnlStats';\n\nexport function ManageStats() {\n  const [params] = useParams<PositionPageSchemaType>();\n  const { network } = useNetwork();\n\n  const { debtChange, collateralChange } = React.useContext(ManagePositionContext);\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: liquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  const isAndromedaStataUSDC = useIsAndromedaStataUSDC({\n    tokenAddress: collateralType?.tokenAddress,\n  });\n  const { data: stataRate } = useStaticAaveUSDCRate();\n  const adjustedCollateralChange = React.useMemo(() => {\n    // Temporary adjustment until UI fully moves to show only USDC and avoid stata conversion\n    if (isAndromedaStataUSDC && stataRate) {\n      return collateralChange.div(stataRate).mul(D27);\n    }\n    return collateralChange;\n  }, [collateralChange, isAndromedaStataUSDC, stataRate]);\n\n  const cRatio = calculateCRatio(liquidityPosition?.debt, liquidityPosition?.collateralValue);\n  const { newCRatio, newCollateralAmount, newDebt, hasChanges } = validatePosition({\n    issuanceRatioD18: collateralType?.issuanceRatioD18,\n    collateralAmount: liquidityPosition?.collateralAmount,\n    collateralPrice: liquidityPosition?.collateralPrice,\n    debt: liquidityPosition?.debt,\n    collateralChange: adjustedCollateralChange,\n    debtChange,\n  });\n\n  return (\n    <Flex direction=\"column\" gap={4}>\n      <Text color=\"white\" fontSize=\"lg\" fontFamily=\"heading\" fontWeight=\"bold\" lineHeight=\"16px\">\n        Overview\n      </Text>\n      <Flex flexWrap=\"wrap\" direction={['column', 'row']} gap={4}>\n        <CollateralStats newCollateralAmount={newCollateralAmount} hasChanges={hasChanges} />\n        {network?.preset === 'andromeda' ? (\n          <PnlStats newDebt={newDebt} hasChanges={hasChanges} />\n        ) : (\n          <DebtStats newDebt={newDebt} hasChanges={hasChanges} />\n        )}\n      </Flex>\n      {network?.preset === 'andromeda' ? null : (\n        <BorderBox py={4} px={6} flexDirection=\"column\" bg=\"navy.700\">\n          <CRatioBar\n            hasChanges={hasChanges}\n            currentCRatio={\n              liquidityPosition?.collateralValue.gt(0) && liquidityPosition?.debt.eq(0)\n                ? Number.MAX_SAFE_INTEGER\n                : cRatio.toNumber() * 100\n            }\n            liquidationCratio={(collateralType?.liquidationRatioD18?.toNumber() || 0) * 100}\n            newCRatio={\n              newCollateralAmount.gt(0) && newDebt.eq(0)\n                ? Number.MAX_SAFE_INTEGER\n                : newCRatio.toNumber() * 100\n            }\n            targetCratio={(collateralType?.issuanceRatioD18.toNumber() || 0) * 100}\n          />\n        </BorderBox>\n      )}\n    </Flex>\n  );\n}\n","import { contractsHash } from '@snx-v3/tsHelpers';\nimport { Network, useNetwork, useProviderForChain } from '@snx-v3/useBlockchain';\nimport { useStaticAaveUSDC } from '@snx-v3/useStaticAaveUSDC';\nimport { useQuery } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\n\nexport function useStaticAaveUSDCRate(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n  const { data: StaticAaveUSDC } = useStaticAaveUSDC(targetNetwork);\n  const provider = useProviderForChain(targetNetwork);\n  return useQuery({\n    queryKey: [\n      `${targetNetwork?.id}-${targetNetwork?.preset}`,\n      'StaticAaveUSDC Rate',\n      { contractsHash: contractsHash([StaticAaveUSDC]) },\n    ],\n    enabled: Boolean(provider && StaticAaveUSDC),\n    queryFn: async function () {\n      if (!(provider && StaticAaveUSDC)) throw new Error('OMFG');\n      const StaticAaveUSDCContract = new ethers.Contract(\n        StaticAaveUSDC.address,\n        StaticAaveUSDC.abi,\n        provider\n      );\n      const rate = await StaticAaveUSDCContract.rate();\n\n      // IMPORTANT: 27 decimals!\n      return rate;\n    },\n  });\n}\n","import { ArrowBackIcon } from '@chakra-ui/icons';\nimport { Button, Divider, Flex, Link, Text, useToast } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { POOL_ID, ZEROWEI } from '@snx-v3/constants';\nimport { ContractError } from '@snx-v3/ContractError';\nimport { LiquidityPositionUpdated } from '@snx-v3/Manage';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { Multistep } from '@snx-v3/Multistep';\nimport { useAccountProxy } from '@snx-v3/useAccountProxy';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { useClosePosition } from '@snx-v3/useClosePosition';\nimport { useCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { usePythFeeds } from '@snx-v3/usePythFeeds';\nimport { usePythVerifier } from '@snx-v3/usePythVerifier';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { useTrustedMulticallForwarder } from '@snx-v3/useTrustedMulticallForwarder';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\nimport React from 'react';\n\nconst log = debug('snx:ClosePositionOneStep');\n\nexport function ClosePositionOneStep({\n  onClose,\n  onBack,\n}: {\n  onClose: () => void;\n  onBack: () => void;\n}) {\n  const [params] = useParams<PositionPageSchemaType>();\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: liquidityPosition, refetch: refetchLiquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  const { setCollateralChange, setDebtChange } = React.useContext(ManagePositionContext);\n  const toast = useToast({ isClosable: true, duration: 9000 });\n\n  const [txState, setTxState] = React.useState({ step: 0, status: 'idle' });\n\n  const queryClient = useQueryClient();\n  const errorParser = useContractErrorParser();\n\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: Multicall3 } = useTrustedMulticallForwarder();\n  const { data: AccountProxy } = useAccountProxy();\n  const { data: ClosePosition } = useClosePosition();\n  const { data: PythVerfier } = usePythVerifier();\n  const { data: pythFeeds } = usePythFeeds();\n  const { data: systemToken } = useSystemToken();\n\n  const { data: priceUpdateTx } = useCollateralPriceUpdates();\n\n  const { network } = useNetwork();\n  const signer = useSigner();\n  const provider = useProvider();\n\n  // const queryClient = useQueryClient();\n  // queryClient.invalidateQueries();\n\n  const { mutate: execClosePosition } = useMutation({\n    mutationFn: async function () {\n      log('params', params);\n      log('collateralType', collateralType);\n\n      setTxState({ step: 1, status: 'pending' });\n      if (\n        !(\n          network &&\n          provider &&\n          signer &&\n          CoreProxy &&\n          Multicall3 &&\n          AccountProxy &&\n          ClosePosition &&\n          PythVerfier &&\n          pythFeeds &&\n          params.accountId &&\n          systemToken?.address &&\n          collateralType?.tokenAddress\n        )\n      ) {\n        throw new Error('Not ready');\n      }\n\n      const ClosePositionContract = new ethers.Contract(\n        ClosePosition.address,\n        ClosePosition.abi,\n        signer\n      );\n      const AccountProxyContract = new ethers.Contract(\n        AccountProxy.address,\n        AccountProxy.abi,\n        signer\n      );\n      const TokenContract = new ethers.Contract(\n        systemToken?.address,\n        ['function approve(address spender, uint256 amount) returns (bool)'],\n        signer\n      );\n\n      const { data: freshLiquidityPosition } = await refetchLiquidityPosition({\n        throwOnError: true,\n      });\n      if (!freshLiquidityPosition) {\n        throw new Error('Could not fetch fresh liquidity position');\n      }\n      const adjustedAllowance = freshLiquidityPosition.debt.lt(1)\n        ? // For the case when debt fluctuates from negative/zero to slightly positive\n          ethers.utils.parseEther('1')\n        : // Add extra buffer for debt fluctuations\n          freshLiquidityPosition.debt.mul(120).div(100).toBN();\n      log('adjustedAllowance', adjustedAllowance);\n\n      const approveAccountTx = AccountProxyContract.populateTransaction.approve(\n        ClosePosition.address,\n        params.accountId\n      );\n      const approveUsdTx = TokenContract.populateTransaction.approve(\n        ClosePosition.address,\n        adjustedAllowance\n      );\n      const closePositionTx = ClosePositionContract.populateTransaction.closePosition(\n        CoreProxy.address,\n        AccountProxy.address,\n        params.accountId,\n        POOL_ID,\n        collateralType.tokenAddress\n      );\n      const callsPromise = Promise.all([approveAccountTx, approveUsdTx, closePositionTx]);\n      const [calls] = await Promise.all([callsPromise]);\n      if (priceUpdateTx) {\n        calls.unshift(priceUpdateTx as any);\n      }\n\n      const walletAddress = await signer.getAddress();\n      const { multicallTxn: erc7412Tx, gasLimit } = await withERC7412(\n        provider,\n        network,\n        calls,\n        'useClosePosition',\n        walletAddress\n      );\n\n      const txn = await signer.sendTransaction({\n        ...erc7412Tx,\n        gasLimit: gasLimit.mul(15).div(10),\n      });\n      log('txn', txn);\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n      return receipt;\n    },\n\n    onSuccess: async () => {\n      const deployment = `${network?.id}-${network?.preset}`;\n      await Promise.all(\n        [\n          //\n          'PriceUpdates',\n          'LiquidityPosition',\n          'LiquidityPositions',\n          'TokenBalance',\n          'SynthBalances',\n          'EthBalance',\n          'Allowance',\n          'TransferableSynthetix',\n          'AccountCollateralUnlockDate',\n        ].map((key) => queryClient.invalidateQueries({ queryKey: [deployment, key] }))\n      );\n\n      setCollateralChange(ZEROWEI);\n      setDebtChange(ZEROWEI);\n      setTxState({ step: 1, status: 'success' });\n    },\n\n    onError: (error) => {\n      setTxState({ step: 1, status: 'error' });\n      const contractError = errorParser(error);\n      if (contractError) {\n        console.error(new Error(contractError.name), contractError);\n      }\n      toast.closeAll();\n      toast({\n        title: 'Transaction failed',\n        variant: 'left-accent',\n        description: contractError ? (\n          <ContractError contractError={contractError} />\n        ) : (\n          'Please try again.'\n        ),\n        status: 'error',\n        duration: 3_600_000,\n      });\n      throw Error('Transaction failed', { cause: error });\n    },\n  });\n\n  if (txState.status === 'success') {\n    return (\n      <LiquidityPositionUpdated\n        onClose={onClose}\n        title=\"Position successfully closed\"\n        subline={\n          <>\n            Your position has been successfully closed. To learn more, visit the{' '}\n            <Link href=\"https://docs.synthetix.io/\" target=\"_blank\" color=\"cyan.500\">\n              Synthetix V3 Documentation\n            </Link>\n          </>\n        }\n        alertText={<>Position successfully closed</>}\n      />\n    );\n  }\n\n  return (\n    <Flex flexDirection=\"column\" data-cy=\"close position multistep\">\n      <Text color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n        <ArrowBackIcon cursor=\"pointer\" onClick={onBack} mr={2} />\n        Close Position\n      </Text>\n      <Divider mt={6} bg=\"gray.900\" />\n      <Multistep\n        step={1}\n        title=\"Close position\"\n        subtitle={\n          <>\n            <Text>Approve close position on behalf</Text>\n            {liquidityPosition && liquidityPosition.debt && liquidityPosition.debt.gt(0) ? (\n              <Text>\n                <Amount\n                  prefix=\"Repay \"\n                  value={liquidityPosition.debt}\n                  suffix={` ${systemToken ? systemToken.symbol : ''} of debt`}\n                />\n              </Text>\n            ) : null}\n            {liquidityPosition && liquidityPosition.debt && liquidityPosition.debt.lt(0) ? (\n              <Text>\n                <Amount\n                  prefix=\"Claim \"\n                  value={liquidityPosition.debt.abs()}\n                  suffix={` ${systemToken ? systemToken.symbol : ''}`}\n                />\n              </Text>\n            ) : null}\n            {liquidityPosition ? (\n              <Amount\n                prefix=\"Unlock \"\n                value={liquidityPosition.collateralAmount}\n                suffix={` ${collateralType ? collateralType.symbol : ''} from the pool`}\n              />\n            ) : null}\n          </>\n        }\n        status={{\n          failed: txState.status === 'error',\n          success: txState.status === 'success',\n          loading: txState.status === 'pending',\n        }}\n      />\n      <Button\n        data-cy=\"close position confirm button\"\n        isLoading={txState.status === 'pending'}\n        isDisabled={!(liquidityPosition && liquidityPosition.collateralAmount.gt(0))}\n        onClick={() => {\n          window?._paq?.push([\n            'trackEvent',\n            'liquidity',\n            'v3_staking',\n            `submit_close_position_${collateralType?.symbol?.toLowerCase()}_v3`,\n          ]);\n          execClosePosition();\n        }}\n        mt=\"6\"\n      >\n        {txState.status === 'error' ? 'Retry' : null}\n        {txState.status === 'pending' ? 'Processing...' : null}\n        {txState.status === 'idle' ? 'Execute Transaction' : null}\n      </Button>\n    </Flex>\n  );\n}\n","import { importPythVerifier } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function usePythVerifier(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'PythVerifier'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw new Error('OMFG');\n      return importPythVerifier(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","import { importPythFeeds } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function usePythFeeds(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'PythFeeds'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw new Error('OMFG');\n      return importPythFeeds(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","import { useQuery } from '@tanstack/react-query';\nimport { useWallet, useNetwork, useProvider } from '@snx-v3/useBlockchain';\nimport { BigNumber, Contract } from 'ethers';\n\nconst abi = ['function allowance(address, address) view returns (uint256)'];\n\nexport const useAllowance = ({\n  contractAddress,\n  spender,\n}: {\n  contractAddress?: string;\n  spender?: string;\n}) => {\n  const { activeWallet } = useWallet();\n  const { network } = useNetwork();\n  const provider = useProvider();\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'Allowance',\n      { accountAddress: activeWallet?.address },\n      { contractAddress, spender },\n    ],\n    queryFn: async () => {\n      if (!(contractAddress && spender && activeWallet?.address && provider))\n        throw new Error('OMG');\n      const contract = new Contract(contractAddress, abi, provider);\n      const allowance = await contract.allowance(activeWallet.address, spender);\n\n      return BigNumber.from(allowance);\n    },\n    enabled: Boolean(activeWallet?.address && contractAddress && spender && provider),\n  });\n};\n","import { initialState, reducer } from '@snx-v3/txnReducer';\nimport { useAllowance } from '@snx-v3/useAllowance';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\nimport React from 'react';\n\nconst log = debug('snx:useApprove');\n\nexport const approveAbi = ['function approve(address spender, uint256 amount) returns (bool)'];\n\nexport const useApprove = ({\n  contractAddress,\n  amount,\n  spender,\n}: {\n  contractAddress?: string;\n  amount?: ethers.BigNumber;\n  spender?: string;\n}) => {\n  const [txnState, dispatch] = React.useReducer(reducer, initialState);\n  const { data: allowance, refetch: refetchAllowance } = useAllowance({ contractAddress, spender });\n  const sufficientAllowance = allowance && amount && allowance.gte(amount);\n\n  const { network } = useNetwork();\n  const signer = useSigner();\n  const provider = useProvider();\n\n  const queryClient = useQueryClient();\n  const isReady =\n    network &&\n    provider &&\n    signer &&\n    contractAddress &&\n    spender &&\n    amount &&\n    // Make it boolean\n    true;\n\n  const mutation = useMutation({\n    mutationFn: async (infiniteApproval: boolean) => {\n      log(`contractAddress`, contractAddress);\n      log(`spender`, spender);\n      log(`amount`, amount);\n      if (!isReady) {\n        throw new Error('Not ready');\n      }\n      if (sufficientAllowance) {\n        dispatch({ type: 'success' });\n        return;\n      }\n\n      dispatch({ type: 'prompting' });\n      const contract = new ethers.Contract(contractAddress, approveAbi, signer);\n      const amountToApprove = infiniteApproval ? ethers.constants.MaxUint256 : amount;\n      log(`amountToApprove`, amountToApprove);\n\n      const gasLimitPromised = contract.estimateGas.approve(spender, amountToApprove);\n      const populatedTxnPromised = contract.populateTransaction.approve(spender, amountToApprove);\n      const [gasLimit, populatedTxn] = await Promise.all([gasLimitPromised, populatedTxnPromised]);\n\n      const txn = await signer.sendTransaction({\n        ...populatedTxn,\n        gasLimit: gasLimit.mul(15).div(10),\n      });\n      log('txn', txn);\n      dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n      return receipt;\n    },\n\n    onSuccess: async () => {\n      const deployment = `${network?.id}-${network?.preset}`;\n      await Promise.all(\n        [\n          //\n          'Allowance',\n        ].map((key) => queryClient.invalidateQueries({ queryKey: [deployment, key] }))\n      );\n      dispatch({ type: 'success' });\n    },\n\n    onError: (error) => {\n      dispatch({ type: 'error', payload: { error } });\n      throw error;\n    },\n  });\n  return {\n    isReady,\n    mutation,\n    txnState,\n    isLoading: mutation.isPending,\n    approve: mutation.mutateAsync,\n    refetchAllowance,\n    requireApproval: !sufficientAllowance,\n    allowance,\n  };\n};\n","import { POOL_ID } from '@snx-v3/constants';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { useCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport Wei from '@synthetixio/wei';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\nimport { useReducer } from 'react';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\n\nconst log = debug('snx:useBorrow');\n\nexport const useBorrow = ({ borrowAmount }: { borrowAmount?: Wei }) => {\n  const [params] = useParams<PositionPageSchemaType>();\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: priceUpdateTx } = useCollateralPriceUpdates();\n\n  const signer = useSigner();\n  const provider = useProvider();\n  const { network } = useNetwork();\n\n  const queryClient = useQueryClient();\n\n  const isReady =\n    signer &&\n    CoreProxy &&\n    params.accountId &&\n    collateralType?.address &&\n    network &&\n    provider &&\n    !!borrowAmount;\n\n  const mutation = useMutation({\n    mutationFn: async () => {\n      if (!isReady) {\n        throw new Error('Not ready');\n      }\n      dispatch({ type: 'prompting' });\n\n      const CoreProxyContract = new ethers.Contract(CoreProxy.address, CoreProxy.abi, signer);\n\n      const populatedTxnPromised = CoreProxyContract.populateTransaction.mintUsd(\n        ethers.BigNumber.from(params.accountId),\n        ethers.BigNumber.from(POOL_ID),\n        collateralType?.address,\n        borrowAmount.toBN()\n      );\n\n      const callsPromise = Promise.all([populatedTxnPromised]);\n      const [calls] = await Promise.all([callsPromise]);\n\n      if (priceUpdateTx) {\n        calls.unshift(priceUpdateTx as any);\n      }\n\n      const walletAddress = await signer.getAddress();\n      const { multicallTxn: erc7412Tx, gasLimit } = await withERC7412(\n        provider,\n        network,\n        calls,\n        'useBorrow',\n        walletAddress\n      );\n      const txn = await signer.sendTransaction({\n        ...erc7412Tx,\n        gasLimit: gasLimit.mul(15).div(10),\n      });\n      log('txn', txn);\n      dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n      return receipt;\n    },\n\n    onSuccess: async () => {\n      const deployment = `${network?.id}-${network?.preset}`;\n      await Promise.all(\n        [\n          //\n          'PriceUpdates',\n          'LiquidityPosition',\n          'LiquidityPositions',\n          'TokenBalance',\n          'SynthBalances',\n          'EthBalance',\n          'TransferableSynthetix',\n          'AccountCollateralUnlockDate',\n        ].map((key) => queryClient.invalidateQueries({ queryKey: [deployment, key] }))\n      );\n      dispatch({ type: 'success' });\n    },\n\n    onError: (error) => {\n      dispatch({ type: 'error', payload: { error } });\n      throw error;\n    },\n  });\n  return {\n    isReady,\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n};\n","const abi = [\n  'function depositDebtToRepay(address synthetixCore, address spotMarket, address accountProxy, uint128 accountId, uint128 poolId, address collateralType, uint128 spotMarketId)',\n];\n\nexport async function importDebtRepayer(\n  chainId?: number,\n  preset?: string\n): Promise<{ address: string; abi: string[] }> {\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '8453-andromeda': {\n      // https://basescan.org/address/0x624f2aB0f1DFF2297b9eca320898381Fbba4E3E3#code\n      return { address: '0x624f2aB0f1DFF2297b9eca320898381Fbba4E3E3', abi };\n    }\n    case '84532-andromeda': {\n      // https://sepolia.basescan.org/address/0xe4b0233F06a308B4732282e24ce7aE0c87bdEcbc#code\n      return { address: '0xe4b0233F06a308B4732282e24ce7aE0c87bdEcbc', abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for DebtRepayer`);\n    }\n  }\n}\n","import { importDebtRepayer } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useDebtRepayer(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'DebtRepayer'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw new Error('OMFG');\n      return importDebtRepayer(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","import { POOL_ID } from '@snx-v3/constants';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport { useAccountProxy } from '@snx-v3/useAccountProxy';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { useCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { usePositionManager } from '@snx-v3/usePositionManager';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { useTokenBalance } from '@snx-v3/useTokenBalance';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport Wei from '@synthetixio/wei';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\nimport { useReducer } from 'react';\n\nconst log = debug('snx:useRepay');\n\nexport function useRepay({ repayAmount }: { repayAmount?: Wei }) {\n  const [params] = useParams<PositionPageSchemaType>();\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: AccountProxy } = useAccountProxy();\n  const { data: PositionManager } = usePositionManager();\n\n  const { data: liquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  const { data: systemToken } = useSystemToken();\n  const { data: systemTokenBalance } = useTokenBalance(systemToken?.address);\n\n  const { data: priceUpdateTx } = useCollateralPriceUpdates();\n\n  const signer = useSigner();\n  const { network } = useNetwork();\n  const provider = useProvider();\n\n  const availableCollateral =\n    systemTokenBalance && liquidityPosition\n      ? systemTokenBalance.add(liquidityPosition.availableSystemToken)\n      : undefined;\n\n  const canRepay =\n    liquidityPosition &&\n    liquidityPosition.debt.gt(0) &&\n    availableCollateral &&\n    repayAmount &&\n    availableCollateral.gte(repayAmount);\n\n  const isReady =\n    repayAmount &&\n    repayAmount.gt(0) &&\n    canRepay &&\n    network &&\n    provider &&\n    signer &&\n    CoreProxy &&\n    AccountProxy &&\n    PositionManager &&\n    params.accountId &&\n    systemToken?.address &&\n    collateralType?.tokenAddress &&\n    // Make it boolean\n    true;\n\n  const queryClient = useQueryClient();\n  const mutation = useMutation({\n    mutationFn: async () => {\n      if (!isReady) {\n        throw new Error('Not ready');\n      }\n\n      dispatch({ type: 'prompting' });\n\n      const AccountProxyContract = new ethers.Contract(\n        AccountProxy.address,\n        AccountProxy.abi,\n        signer\n      );\n      const TokenContract = new ethers.Contract(\n        systemToken?.address,\n        ['function approve(address spender, uint256 amount) returns (bool)'],\n        signer\n      );\n      const PositionManagerContract = new ethers.Contract(\n        PositionManager.address,\n        PositionManager.abi,\n        signer\n      );\n\n      const approveAccountTx = AccountProxyContract.populateTransaction.approve(\n        PositionManager.address,\n        params.accountId\n      );\n      const approveUsdTx = TokenContract.populateTransaction.approve(\n        PositionManager.address,\n        repayAmount.toBN()\n      );\n      const repayTx = PositionManagerContract.populateTransaction.repay(\n        CoreProxy.address,\n        AccountProxy.address,\n        params.accountId,\n        POOL_ID,\n        collateralType.tokenAddress,\n        repayAmount.toBN()\n      );\n\n      const callsPromise = Promise.all([approveAccountTx, approveUsdTx, repayTx]);\n      const [calls] = await Promise.all([callsPromise]);\n      if (priceUpdateTx) {\n        calls.unshift(priceUpdateTx as any);\n      }\n\n      const walletAddress = await signer.getAddress();\n      const { multicallTxn: erc7412Tx, gasLimit } = await withERC7412(\n        provider,\n        network,\n        calls,\n        'useRepay',\n        walletAddress\n      );\n\n      const txn = await signer.sendTransaction({\n        ...erc7412Tx,\n        gasLimit: gasLimit.mul(15).div(10),\n      });\n      log('txn', txn);\n      dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n      return receipt;\n    },\n\n    onSuccess: async () => {\n      const deployment = `${network?.id}-${network?.preset}`;\n      await Promise.all(\n        [\n          //\n          'PriceUpdates',\n          'LiquidityPosition',\n          'LiquidityPositions',\n          'TokenBalance',\n          'SynthBalances',\n          'EthBalance',\n          'Allowance',\n          'TransferableSynthetix',\n        ].map((key) => queryClient.invalidateQueries({ queryKey: [deployment, key] }))\n      );\n      dispatch({ type: 'success' });\n    },\n\n    onError: (error) => {\n      dispatch({ type: 'error', payload: { error } });\n      throw error;\n    },\n  });\n  return {\n    isReady,\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n}\n","import { POOL_ID } from '@snx-v3/constants';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { useCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\nimport { useReducer } from 'react';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\n\nconst log = debug('snx:useUndelegate');\n\nexport const useUndelegate = ({ undelegateAmount }: { undelegateAmount?: Wei }) => {\n  const [params] = useParams<PositionPageSchemaType>();\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n\n  const collateralTypeAddress = collateralType?.tokenAddress;\n\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n\n  const { data: liquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  const { data: CoreProxy } = useCoreProxy();\n\n  const { data: priceUpdateTx } = useCollateralPriceUpdates();\n\n  const signer = useSigner();\n  const provider = useProvider();\n  const { network } = useNetwork();\n  const queryClient = useQueryClient();\n\n  const canUndelegate =\n    liquidityPosition &&\n    liquidityPosition.collateralAmount.gt(0) &&\n    undelegateAmount &&\n    liquidityPosition.collateralAmount.gte(undelegateAmount);\n\n  const isReady =\n    canUndelegate &&\n    network &&\n    provider &&\n    signer &&\n    CoreProxy &&\n    params.accountId &&\n    collateralTypeAddress &&\n    // Make it boolean\n    true;\n\n  const mutation = useMutation({\n    mutationFn: async () => {\n      if (!isReady) {\n        throw new Error('Not ready');\n      }\n\n      dispatch({ type: 'prompting' });\n\n      const CoreProxyContract = new ethers.Contract(CoreProxy.address, CoreProxy.abi, signer);\n      const populatedTxnPromised = CoreProxyContract.populateTransaction.delegateCollateral(\n        ethers.BigNumber.from(params.accountId),\n        ethers.BigNumber.from(POOL_ID),\n        collateralTypeAddress,\n        liquidityPosition.collateralAmount.sub(undelegateAmount).toBN(),\n        wei(1).toBN()\n      );\n\n      const walletAddress = await signer.getAddress();\n\n      const callsPromise = Promise.all([populatedTxnPromised]);\n      const [calls] = await Promise.all([callsPromise]);\n      if (priceUpdateTx) {\n        calls.unshift(priceUpdateTx as any);\n      }\n\n      const { multicallTxn: erc7412Tx, gasLimit } = await withERC7412(\n        provider,\n        network,\n        calls,\n        'useUndelegate',\n        walletAddress\n      );\n\n      const txn = await signer.sendTransaction({\n        ...erc7412Tx,\n        gasLimit: gasLimit.mul(15).div(10),\n      });\n      log('txn', txn);\n      dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n      return receipt;\n    },\n\n    onSuccess: async () => {\n      const deployment = `${network?.id}-${network?.preset}`;\n      await Promise.all(\n        [\n          //\n          'PriceUpdates',\n          'LiquidityPosition',\n          'LiquidityPositions',\n          'TokenBalance',\n          'SynthBalances',\n          'EthBalance',\n          'Allowance',\n          'TransferableSynthetix',\n          'AccountCollateralUnlockDate',\n        ].map((key) => queryClient.invalidateQueries({ queryKey: [deployment, key] }))\n      );\n      dispatch({ type: 'success' });\n    },\n\n    onError: (error) => {\n      dispatch({ type: 'error', payload: { error } });\n      throw error;\n    },\n  });\n  return {\n    isReady,\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n};\n","export const isBaseAndromeda = (id?: number | string, preset?: string) =>\n  (id?.toString() === '8453' || '84532') && preset === 'andromeda';\n\nexport function getSpotMarketId(collateralSymbol?: string) {\n  switch (collateralSymbol?.toLowerCase()) {\n    case 'usdc':\n    case 'susdc':\n      return USDC_BASE_MARKET;\n\n    case 'statausdc':\n    case 'sstatausdc':\n    case 'stataUSDC':\n      return STATA_BASE_MARKET;\n\n    default:\n      return USDC_BASE_MARKET;\n  }\n}\n\nexport const USDC_BASE_MARKET = '1';\nexport const STATA_BASE_MARKET = '3';\n","import { POOL_ID } from '@snx-v3/constants';\nimport { USDC_BASE_MARKET } from '@snx-v3/isBaseAndromeda';\nimport { notNil } from '@snx-v3/tsHelpers';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport { useAccountProxy } from '@snx-v3/useAccountProxy';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { useCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useDebtRepayer } from '@snx-v3/useDebtRepayer';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useSpotMarketProxy } from '@snx-v3/useSpotMarketProxy';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport { Wei, wei } from '@synthetixio/wei';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\nimport React from 'react';\n\nconst log = debug('snx:useUndelegateBaseAndromeda');\n\nexport function useUndelegateBaseAndromeda({ undelegateAmount }: { undelegateAmount?: Wei }) {\n  const [params] = useParams<PositionPageSchemaType>();\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: liquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  const collateralTypeAddress = collateralType?.tokenAddress;\n  const currentCollateral = liquidityPosition?.collateralAmount || wei(0);\n\n  const [txnState, dispatch] = React.useReducer(reducer, initialState);\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: SpotMarketProxy } = useSpotMarketProxy();\n  const { data: priceUpdateTx } = useCollateralPriceUpdates();\n\n  const signer = useSigner();\n  const provider = useProvider();\n  const { network } = useNetwork();\n\n  const { data: AccountProxy } = useAccountProxy();\n  const { data: DebtRepayer } = useDebtRepayer();\n\n  const queryClient = useQueryClient();\n\n  const canUndelegate =\n    liquidityPosition &&\n    liquidityPosition.collateralAmount.gt(0) &&\n    undelegateAmount &&\n    liquidityPosition.collateralAmount.gte(undelegateAmount);\n\n  const isReady =\n    canUndelegate &&\n    network &&\n    provider &&\n    signer &&\n    CoreProxy &&\n    AccountProxy &&\n    DebtRepayer &&\n    SpotMarketProxy &&\n    params.accountId &&\n    collateralTypeAddress &&\n    // Make it boolean\n    true;\n\n  const mutation = useMutation({\n    mutationFn: async () => {\n      if (!isReady) {\n        throw new Error('Not ready');\n      }\n\n      dispatch({ type: 'prompting' });\n\n      const AccountProxyContract = new ethers.Contract(\n        AccountProxy.address,\n        AccountProxy.abi,\n        signer\n      );\n\n      const DebtRepayerContract = new ethers.Contract(DebtRepayer.address, DebtRepayer.abi, signer);\n\n      const approveAccountTx = AccountProxyContract.populateTransaction.approve(\n        DebtRepayer.address,\n        params.accountId\n      );\n\n      const depositDebtToRepay = DebtRepayerContract.populateTransaction.depositDebtToRepay(\n        CoreProxy.address,\n        SpotMarketProxy.address,\n        AccountProxy.address,\n        params.accountId,\n        POOL_ID,\n        collateralTypeAddress,\n        USDC_BASE_MARKET\n      );\n\n      const CoreProxyContract = new ethers.Contract(CoreProxy.address, CoreProxy.abi, signer);\n\n      const delegateTx = CoreProxyContract.populateTransaction.delegateCollateral(\n        ethers.BigNumber.from(params.accountId),\n        ethers.BigNumber.from(POOL_ID),\n        collateralTypeAddress,\n        currentCollateral.sub(undelegateAmount).toBN(),\n        wei(1).toBN()\n      );\n\n      const callsPromise: Promise<(ethers.PopulatedTransaction & { requireSuccess?: boolean })[]> =\n        Promise.all([approveAccountTx, depositDebtToRepay, delegateTx].filter(notNil));\n\n      const [calls] = await Promise.all([callsPromise]);\n\n      if (priceUpdateTx) {\n        calls.unshift(priceUpdateTx as any);\n      }\n\n      const walletAddress = await signer.getAddress();\n\n      const { multicallTxn: erc7412Tx, gasLimit } = await withERC7412(\n        provider,\n        network,\n        calls,\n        'useUndelegateBase',\n        walletAddress\n      );\n\n      const txn = await signer.sendTransaction({\n        ...erc7412Tx,\n        gasLimit: gasLimit.mul(15).div(10),\n      });\n      log('txn', txn);\n      dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n      return receipt;\n    },\n\n    onSuccess: async () => {\n      const deployment = `${network?.id}-${network?.preset}`;\n      await Promise.all(\n        [\n          //\n          'PriceUpdates',\n          'LiquidityPosition',\n          'LiquidityPositions',\n          'TokenBalance',\n          'SynthBalances',\n          'EthBalance',\n          'Allowance',\n          'AccountCollateralUnlockDate',\n        ].map((key) => queryClient.invalidateQueries({ queryKey: [deployment, key] }))\n      );\n      dispatch({ type: 'success' });\n    },\n\n    onError: (error) => {\n      dispatch({ type: 'error', payload: { error } });\n      throw error;\n    },\n  });\n  return {\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n    isReady,\n  };\n}\n","const abi = [\n  'error InsufficientAllowance(uint256 required, uint256 existing)',\n  'error InsufficientBalance(uint256 required, uint256 existing)',\n  'event Approval(address indexed owner, address indexed spender, uint256 amount)',\n  'event Transfer(address indexed from, address indexed to, uint256 amount)',\n  'function allowance(address owner, address spender) view returns (uint256)',\n  'function approve(address spender, uint256 amount) returns (bool)',\n  'function balanceOf(address owner) view returns (uint256)',\n  'function decimals() view returns (uint8)',\n  'function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)',\n  'function increaseAllowance(address spender, uint256 addedValue) returns (bool)',\n  'function name() view returns (string)',\n  'function symbol() view returns (string)',\n  'function totalSupply() view returns (uint256)',\n  'function transfer(address to, uint256 amount) returns (bool)',\n  'function transferFrom(address from, address to, uint256 amount) returns (bool)',\n];\n\nexport async function importUSDC(\n  chainId?: number,\n  preset?: string\n): Promise<{ address: string; abi: string[] }> {\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      return { address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48', abi };\n    }\n    case '11155111-main': {\n      return { address: '0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238', abi };\n    }\n    case '10-main': {\n      return { address: '0x0b2c639c533813f4aa9d7837caf62653d097ff85', abi };\n    }\n    case '8453-andromeda': {\n      return { address: '0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913', abi };\n    }\n    case '84532-andromeda': {\n      return { address: '0x036CbD53842c5426634e7929541eC2318f3dCF7e', abi };\n    }\n    case '42161-main': {\n      return { address: '0xaf88d065e77c8cC2239327C5EDb3A432268e5831', abi };\n    }\n    case '421614-main': {\n      return { address: '0x75faf114eafb1BDbe2F0316DF893fd58CE46AA4d', abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for USDC`);\n    }\n  }\n}\n","import { importUSDC } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useUSDC(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'USDC'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw new Error('OMFG');\n      return importUSDC(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","import { ArrowBackIcon } from '@chakra-ui/icons';\nimport { Button, Divider, Flex, Link, Skeleton, Text, useToast } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { ContractError } from '@snx-v3/ContractError';\nimport { parseUnits } from '@snx-v3/format';\nimport { LiquidityPositionUpdated } from '@snx-v3/Manage';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { Multistep } from '@snx-v3/Multistep';\nimport { useApprove } from '@snx-v3/useApprove';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useBorrow } from '@snx-v3/useBorrow';\nimport { useClosePosition } from '@snx-v3/useClosePosition';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useDebtRepayer } from '@snx-v3/useDebtRepayer';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useRepay } from '@snx-v3/useRepay';\nimport { useSynthTokens } from '@snx-v3/useSynthTokens';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { useUndelegate } from '@snx-v3/useUndelegate';\nimport { useUndelegateBaseAndromeda } from '@snx-v3/useUndelegateBaseAndromeda';\nimport { useUSDC } from '@snx-v3/useUSDC';\nimport { ethers } from 'ethers';\nimport React from 'react';\n\nexport function ClosePositionTransactions({\n  onClose,\n  onBack,\n}: {\n  onClose: () => void;\n  onBack: () => void;\n}) {\n  const [params] = useParams<PositionPageSchemaType>();\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: liquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  const [steps, setSteps] = React.useState<\n    {\n      title: React.ReactNode;\n      subtitle?: React.ReactNode;\n      cb: () => Promise<any>;\n    }[]\n  >([]);\n  const { setCollateralChange, setDebtChange } = React.useContext(ManagePositionContext);\n  const { data: systemToken } = useSystemToken();\n  const { data: CoreProxy } = useCoreProxy();\n  const { network } = useNetwork();\n  const toast = useToast({ isClosable: true, duration: 9000 });\n\n  const collateralSymbol = collateralType?.displaySymbol;\n\n  const [txState, setTxState] = React.useState({\n    step: 0,\n    status: 'idle',\n  });\n\n  const { data: synthTokens } = useSynthTokens();\n  const wrapperToken = React.useMemo(() => {\n    if (synthTokens && collateralType) {\n      return synthTokens.find((synth) => synth.address === collateralType.tokenAddress)?.token\n        ?.address;\n    }\n  }, [collateralType, synthTokens]);\n\n  const collateralAddress = network?.preset === 'andromeda' ? wrapperToken : systemToken?.address;\n  const availableUSDCollateral = liquidityPosition?.availableCollateral || ZEROWEI;\n  const errorParser = useContractErrorParser();\n\n  //repay approval\n  const {\n    approve,\n    requireApproval,\n    isReady: isReadyApprove,\n  } = useApprove({\n    contractAddress: collateralAddress,\n    amount:\n      liquidityPosition &&\n      liquidityPosition.debt.gt(0) &&\n      liquidityPosition.debt.abs().sub(availableUSDCollateral).gt(0)\n        ? liquidityPosition.debt.abs().sub(availableUSDCollateral).toBN()\n        : ethers.BigNumber.from(0),\n    spender: CoreProxy?.address,\n  });\n  const { exec: execRepay } = useRepay({ repayAmount: liquidityPosition?.debt });\n  const { exec: undelegate } = useUndelegate({\n    undelegateAmount: liquidityPosition?.collateralAmount.gt(0)\n      ? liquidityPosition?.collateralAmount\n      : undefined,\n  });\n\n  const { data: DebtRepayer } = useDebtRepayer();\n  const { data: ClosePositionContract } = useClosePosition();\n  const { data: USDC } = useUSDC();\n\n  // repay approval for base\n  const {\n    approve: approveUSDC,\n    requireApproval: requireApprovalUSDC,\n    isLoading,\n    isReady: isReadyApproveUSDC,\n  } = useApprove({\n    contractAddress: USDC?.address,\n    // slippage for approval\n    amount: liquidityPosition\n      ? parseUnits(liquidityPosition.debt.abs().toString(), 6).mul(120).div(100)\n      : ethers.BigNumber.from(0),\n    spender: DebtRepayer?.address,\n  });\n\n  const { exec: undelegateBaseAndromeda } = useUndelegateBaseAndromeda({\n    undelegateAmount: liquidityPosition?.collateralAmount,\n  });\n\n  //claim\n  const { exec: execBorrow } = useBorrow({\n    borrowAmount: liquidityPosition?.debt.lt(0) ? liquidityPosition?.debt.abs() : undefined,\n  });\n\n  const getSteps = React.useCallback(() => {\n    const transactions: {\n      title: React.ReactNode;\n      subtitle?: React.ReactNode;\n      cb: () => Promise<any>;\n    }[] = [];\n\n    if (ClosePositionContract) {\n      // TODO: one step close\n      // console.log(`ClosePositionContract`, ClosePositionContract);\n    }\n\n    if (network?.preset !== 'andromeda') {\n      if (liquidityPosition?.debt.gt(0)) {\n        if (requireApproval) {\n          transactions.push({\n            title: `Approve ${systemToken?.displaySymbol} transfer`,\n            cb: () => approve(false),\n          });\n        }\n        transactions.push({\n          title: 'Repay',\n          subtitle: (\n            <Amount\n              prefix=\"Repay \"\n              value={liquidityPosition?.debt.abs()}\n              suffix={` ${systemToken?.displaySymbol}`}\n            />\n          ),\n          cb: () => execRepay(),\n        });\n      } else if (liquidityPosition?.debt.lt(0)) {\n        transactions.push({\n          title: 'Claim',\n          subtitle: (\n            <Amount\n              prefix=\"Claim \"\n              value={liquidityPosition?.debt.abs()}\n              suffix={` ${systemToken?.displaySymbol}`}\n            />\n          ),\n          cb: () => execBorrow(),\n        });\n      }\n\n      transactions.push({\n        title: 'Unlock collateral',\n        subtitle: (\n          <Amount\n            value={liquidityPosition?.collateralAmount || ZEROWEI}\n            suffix={` ${collateralSymbol} will be unlocked from the pool.`}\n          />\n        ),\n        cb: () => undelegate(),\n      });\n    } else {\n      if (liquidityPosition?.debt.gt(0) && requireApprovalUSDC) {\n        transactions.push({\n          title: `Approve ${\n            network?.preset === 'andromeda' ? collateralType?.symbol : systemToken?.symbol\n          } transfer`,\n          cb: () => approveUSDC(false),\n        });\n      }\n\n      transactions.push({\n        title: 'Unlock collateral',\n        subtitle: (\n          <Amount\n            value={liquidityPosition?.collateralAmount || ZEROWEI}\n            suffix={` ${collateralSymbol} will be unlocked from the pool.`}\n          />\n        ),\n        cb: () => undelegateBaseAndromeda(),\n      });\n    }\n\n    return transactions;\n  }, [\n    ClosePositionContract,\n    network?.preset,\n    liquidityPosition?.debt,\n    liquidityPosition?.collateralAmount,\n    collateralSymbol,\n    requireApproval,\n    systemToken?.displaySymbol,\n    systemToken?.symbol,\n    approve,\n    execRepay,\n    execBorrow,\n    undelegate,\n    requireApprovalUSDC,\n    collateralType?.symbol,\n    approveUSDC,\n    undelegateBaseAndromeda,\n  ]);\n\n  React.useEffect(() => {\n    if (!steps.length && !isLoading) {\n      setTxState({\n        step: 0,\n        status: 'idle',\n      });\n      setSteps(getSteps());\n    }\n  }, [getSteps, isLoading, steps.length]);\n\n  const isSuccess = txState.step >= steps.length;\n\n  const handleSubmit = React.useCallback(async () => {\n    try {\n      let i = txState.step > -1 ? txState.step : 0;\n\n      for (; i < steps.length; i++) {\n        setTxState({\n          step: i,\n          status: 'pending',\n        });\n\n        await steps[i].cb();\n      }\n\n      setTxState({\n        step: steps.length,\n        status: 'success',\n      });\n\n      setCollateralChange(ZEROWEI);\n      setDebtChange(ZEROWEI);\n    } catch (error) {\n      setTxState((state) => ({\n        step: state.step,\n        status: 'error',\n      }));\n\n      const contractError = errorParser(error);\n\n      if (contractError) {\n        console.error(new Error(contractError.name), contractError);\n      }\n      toast.closeAll();\n      toast({\n        title: 'Transaction failed',\n        variant: 'left-accent',\n        description: contractError ? (\n          <ContractError contractError={contractError} />\n        ) : (\n          'Please try again.'\n        ),\n        status: 'error',\n        duration: 3_600_000,\n      });\n      throw Error('Transaction failed', { cause: error });\n    }\n  }, [txState.step, steps, setCollateralChange, setDebtChange, errorParser, toast]);\n\n  if (isSuccess) {\n    return (\n      <LiquidityPositionUpdated\n        onClose={onClose}\n        title=\"Position successfully closed\"\n        subline={\n          <>\n            Your position has been successfully closed. To learn more, visit the{' '}\n            <Link href=\"https://docs.synthetix.io/\" target=\"_blank\" color=\"cyan.500\">\n              Synthetix V3 Documentation\n            </Link>\n          </>\n        }\n        alertText={<>Position successfully closed</>}\n      />\n    );\n  }\n\n  return (\n    <Flex flexDirection=\"column\" data-cy=\"close position multistep\">\n      <Text color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n        <ArrowBackIcon cursor=\"pointer\" onClick={onBack} mr={2} />\n        Close Position\n      </Text>\n\n      <Divider mt={6} bg=\"gray.900\" />\n\n      {isLoading && !steps.length && <Skeleton width=\"100%\" height=\"78px\" mt=\"6\" />}\n      {steps.map((step, i) => (\n        <Multistep\n          key={i}\n          step={i + 1}\n          title={step.title}\n          subtitle={step.subtitle}\n          status={{\n            failed: txState.step === i && txState.status === 'error',\n            success: txState.step > i,\n            loading: txState.step === i && txState.status === 'pending',\n          }}\n        />\n      ))}\n\n      <Button\n        data-cy=\"close position confirm button\"\n        isDisabled={\n          (requireApproval && !isReadyApprove) || (requireApprovalUSDC && !isReadyApproveUSDC)\n        }\n        isLoading={txState.status === 'pending'}\n        onClick={() => {\n          window?._paq?.push([\n            'trackEvent',\n            'liquidity',\n            'v3_staking',\n            `submit_close_position_${collateralType?.symbol?.toLowerCase()}_v3`,\n          ]);\n          handleSubmit();\n        }}\n        mt=\"6\"\n      >\n        {(() => {\n          switch (true) {\n            case txState.status === 'error':\n              return 'Retry';\n            case txState.status === 'pending':\n              return 'Processing...';\n            default:\n              return 'Execute Transaction';\n          }\n        })()}\n      </Button>\n    </Flex>\n  );\n}\n","import { ArrowBackIcon } from '@chakra-ui/icons';\nimport {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  Button,\n  Collapse,\n  Divider,\n  Flex,\n  Text,\n} from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { TokenIcon } from '@snx-v3/TokenIcon';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useClosePosition } from '@snx-v3/useClosePosition';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { useTokenBalance } from '@snx-v3/useTokenBalance';\nimport { useTokenPrice } from '@snx-v3/useTokenPrice';\nimport React from 'react';\nimport { ClosePositionOneStep } from './ClosePositionOneStep';\nimport { ClosePositionTransactions } from './ClosePositionTransactions';\n\nfunction ClosePositionUi({ onSubmit, onClose }: { onClose: () => void; onSubmit: () => void }) {\n  const [params] = useParams<PositionPageSchemaType>();\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: systemToken } = useSystemToken();\n\n  const { data: liquidityPosition, isPending: isPendingLiquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n  const collateralSymbol = collateralType?.displaySymbol;\n\n  const { network } = useNetwork();\n  const debtSymbol = network?.preset === 'andromeda' ? 'USDC' : systemToken?.symbol;\n\n  const { data: systemTokenBalance, isPending: isPendingSystemTokenBalance } = useTokenBalance(\n    systemToken?.address\n  );\n\n  const debtPrice = useTokenPrice(debtSymbol);\n  const collateralPrice = useTokenPrice(collateralSymbol);\n\n  const { data: ClosePositionDeployment } = useClosePosition();\n\n  return (\n    <Flex data-cy=\"close position multistep\" flexDirection=\"column\">\n      <Text color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n        <ArrowBackIcon cursor=\"pointer\" onClick={onClose} mr={2} />\n        Close Position\n      </Text>\n\n      <Divider my={5} bg=\"gray.900\" />\n\n      <Text color=\"gray.50\" fontSize=\"sm\" fontWeight=\"700\" mb={2}>\n        {!isPendingLiquidityPosition && liquidityPosition ? (\n          <>{liquidityPosition.debt.gt(0) ? 'Repay Debt' : 'Claim Profit'}</>\n        ) : (\n          <>&nbsp;</>\n        )}\n      </Text>\n      <BorderBox display=\"flex\" flexDirection=\"column\" p={3} mb=\"6\">\n        <Flex alignItems=\"center\">\n          <Flex alignItems=\"flex-start\" flexDir=\"column\" gap={1}>\n            <BorderBox display=\"flex\" justifyContent=\"center\" alignItems=\"center\" py={1.5} px={2.5}>\n              <Text display=\"flex\" gap={2} alignItems=\"center\" fontWeight=\"600\" whiteSpace=\"nowrap\">\n                <TokenIcon symbol={debtSymbol} width={16} height={16} />\n                {network?.preset === 'andromeda' ? 'USDC' : systemToken?.displaySymbol}\n              </Text>\n            </BorderBox>\n            <Text fontSize=\"12px\" whiteSpace=\"nowrap\" data-cy=\"debt amount\">\n              {isPendingLiquidityPosition ? '~' : null}\n              {!isPendingLiquidityPosition && liquidityPosition ? (\n                <>\n                  <Amount\n                    prefix={liquidityPosition.debt.gt(0) ? 'Debt: ' : 'Max Claim: '}\n                    value={liquidityPosition.debt.abs()}\n                  />{' '}\n                  <Text as=\"span\" color=\"gray.600\" fontWeight={700}>\n                    Max\n                  </Text>\n                </>\n              ) : null}\n            </Text>\n          </Flex>\n          <Flex flexGrow={1} flexDir=\"column\">\n            <NumberInput\n              value={\n                !isPendingLiquidityPosition && liquidityPosition\n                  ? liquidityPosition.debt.abs()\n                  : ZEROWEI\n              }\n              disabled\n            />\n            <Flex fontSize=\"xs\" color=\"whiteAlpha.700\" alignSelf=\"flex-end\" gap=\"1\">\n              {debtPrice.gt(0) && (\n                <Amount\n                  prefix=\"$\"\n                  value={\n                    !isPendingLiquidityPosition && liquidityPosition\n                      ? liquidityPosition.debt.abs().mul(debtPrice)\n                      : ZEROWEI\n                  }\n                />\n              )}\n            </Flex>\n          </Flex>\n        </Flex>\n      </BorderBox>\n\n      <Text color=\"gray.50\" fontSize=\"sm\" fontWeight=\"700\" mb={2}>\n        Unlock Collateral\n      </Text>\n      <BorderBox display=\"flex\" flexDirection=\"column\" p={3} mb=\"6\">\n        <Flex alignItems=\"center\">\n          <Flex alignItems=\"flex-start\" flexDir=\"column\" gap={1}>\n            <BorderBox display=\"flex\" justifyContent=\"center\" alignItems=\"center\" py={1.5} px={2.5}>\n              <Text display=\"flex\" gap={2} alignItems=\"center\" fontWeight=\"600\" whiteSpace=\"nowrap\">\n                <TokenIcon symbol={collateralSymbol} width={16} height={16} />\n                {collateralSymbol}\n              </Text>\n            </BorderBox>\n            <Text fontSize=\"12px\" whiteSpace=\"nowrap\" data-cy=\"locked collateral amount\">\n              {isPendingLiquidityPosition ? 'Locked: ~' : null}\n              {!isPendingLiquidityPosition && liquidityPosition ? (\n                <>\n                  <Amount prefix=\"Locked: \" value={liquidityPosition.collateralAmount} />{' '}\n                  <Text as=\"span\" color=\"gray.600\" fontWeight={700}>\n                    Max\n                  </Text>\n                </>\n              ) : null}\n            </Text>\n          </Flex>\n          <Flex flexGrow={1} flexDir=\"column\">\n            <NumberInput\n              value={\n                !isPendingLiquidityPosition && liquidityPosition\n                  ? liquidityPosition.collateralAmount\n                  : ZEROWEI\n              }\n              disabled\n            />\n            <Flex fontSize=\"xs\" color=\"whiteAlpha.700\" alignSelf=\"flex-end\" gap=\"1\">\n              {collateralPrice.gt(0) && (\n                <Amount\n                  prefix=\"$\"\n                  value={\n                    !isPendingLiquidityPosition && liquidityPosition\n                      ? liquidityPosition.collateralAmount.abs().mul(collateralPrice)\n                      : ZEROWEI\n                  }\n                />\n              )}\n            </Flex>\n          </Flex>\n        </Flex>\n      </BorderBox>\n\n      <Collapse\n        in={\n          // Deployments that do not have ClosePosition contract available should skip this check\n          ClosePositionDeployment &&\n          systemTokenBalance &&\n          liquidityPosition &&\n          !systemTokenBalance\n            .add(liquidityPosition.availableSystemToken)\n            .gte(liquidityPosition.debt)\n        }\n        animateOpacity\n        unmountOnExit\n      >\n        <Alert mb={6} status=\"error\" borderRadius=\"6px\">\n          <AlertIcon />\n          <AlertDescription>\n            <Text>You do not have enough {systemToken?.displaySymbol} to repay debt</Text>\n            <Text>\n              <Amount\n                prefix=\"Available: \"\n                value={\n                  systemTokenBalance &&\n                  liquidityPosition &&\n                  systemTokenBalance.add(liquidityPosition.availableSystemToken)\n                }\n                suffix={` ${systemToken?.displaySymbol}`}\n              />\n            </Text>\n          </AlertDescription>\n        </Alert>\n      </Collapse>\n\n      <Button\n        data-cy=\"close position submit\"\n        onClick={() => {\n          window?._paq?.push([\n            'trackEvent',\n            'liquidity',\n            'v3_staking',\n            `click_close_position_${collateralType?.symbol?.toLowerCase()}_v3`,\n          ]);\n          onSubmit();\n        }}\n        type=\"submit\"\n        isDisabled={\n          // Deployments that do not have ClosePosition contract available should skip this check\n          ClosePositionDeployment &&\n          !(\n            !isPendingSystemTokenBalance &&\n            systemTokenBalance &&\n            !isPendingLiquidityPosition &&\n            liquidityPosition &&\n            systemTokenBalance\n              .add(liquidityPosition.availableSystemToken)\n              .gte(liquidityPosition.debt)\n          )\n        }\n      >\n        Close Position\n      </Button>\n    </Flex>\n  );\n}\n\nexport const ClosePosition = ({ onClose }: { onClose: () => void }) => {\n  const [params] = useParams<PositionPageSchemaType>();\n\n  const [transactionStep, setTransactions] = React.useState(false);\n  const { setCollateralChange, setDebtChange } = React.useContext(ManagePositionContext);\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n\n  const { data: liquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  React.useEffect(() => {\n    if (liquidityPosition) {\n      setDebtChange(liquidityPosition.debt.mul(-1));\n      setCollateralChange(liquidityPosition.collateralAmount.mul(-1));\n    }\n\n    return () => {\n      setDebtChange(ZEROWEI);\n      setCollateralChange(ZEROWEI);\n    };\n  }, [liquidityPosition, setCollateralChange, setDebtChange]);\n\n  const { data: ClosePositionDeployment } = useClosePosition();\n\n  if (!collateralType) {\n    return null;\n  }\n\n  return (\n    <>\n      {!transactionStep ? (\n        <ClosePositionUi onClose={onClose} onSubmit={() => setTransactions(true)} />\n      ) : null}\n      {transactionStep && !ClosePositionDeployment ? (\n        <ClosePositionTransactions onBack={() => setTransactions(false)} onClose={onClose} />\n      ) : null}\n      {transactionStep && ClosePositionDeployment ? (\n        <ClosePositionOneStep onBack={() => setTransactions(false)} onClose={onClose} />\n      ) : null}\n    </>\n  );\n};\n","import {\n  Button,\n  Divider,\n  Link,\n  Modal,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n} from '@chakra-ui/react';\nimport { makeSearch, type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\n\nexport const UnsupportedCollateralAlert = ({ isOpen }: { isOpen: boolean }) => {\n  const [params, setParams] = useParams<PositionPageSchemaType>();\n  return (\n    <Modal isOpen={isOpen} onClose={() => {}}>\n      <ModalOverlay />\n      <ModalContent p={6} borderWidth=\"1px\" borderColor=\"gray.900\" mt=\"17.5%\" bg=\"navy.700\">\n        <ModalHeader p={0}>Collateral Not Supported</ModalHeader>\n        <Divider my={6} />\n        <Text color=\"white\" fontFamily=\"heading\" fontSize=\"14px\" lineHeight=\"20px\">\n          This collateral is not supported on this network. Go back to home page to see your active\n          positions on this network.\n        </Text>\n        <Button\n          as={Link}\n          href={`?${makeSearch({ accountId: params.accountId })}`}\n          onClick={(e) => {\n            e.preventDefault();\n            setParams({ accountId: params.accountId });\n          }}\n          mt={6}\n          textDecoration=\"none\"\n          _hover={{ textDecoration: 'none' }}\n        >\n          Back\n        </Button>\n      </ModalContent>\n    </Modal>\n  );\n};\n","import { ManageActionType } from '@snx-v3/useParams';\nimport React from 'react';\n\ntype ManageActionButtonType = {\n  title: string;\n  link: ManageActionType;\n  icon: (fill: 'white' | 'cyan') => React.ReactElement;\n};\n\nexport const COLLATERALACTIONS: ManageActionButtonType[] = [\n  {\n    title: 'Deposit and Lock',\n    link: 'deposit',\n    icon: (fill) => (\n      <svg\n        width=\"37\"\n        height=\"36\"\n        viewBox=\"0 0 37 36\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M6.875 18C6.875 15.7218 8.72183 13.875 11 13.875H26C28.2782 13.875 30.125 15.7218 30.125 18V27C30.125 29.2782 28.2782 31.125 26 31.125H11C8.72183 31.125 6.875 29.2782 6.875 27V18ZM11 16.125C9.96447 16.125 9.125 16.9645 9.125 18V27C9.125 28.0355 9.96447 28.875 11 28.875H26C27.0355 28.875 27.875 28.0355 27.875 27V18C27.875 16.9645 27.0355 16.125 26 16.125H11Z\"\n          fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M11.375 12C11.375 8.06497 14.565 4.875 18.5 4.875C22.435 4.875 25.625 8.06497 25.625 12V16.125H11.375V12ZM18.5 7.125C15.8076 7.125 13.625 9.30761 13.625 12V13.875H23.375V12C23.375 9.30761 21.1924 7.125 18.5 7.125Z\"\n          fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n        />\n      </svg>\n    ),\n  },\n  {\n    title: 'Unlock',\n    link: 'undelegate',\n    icon: (fill: 'white' | 'cyan') => (\n      <svg\n        width=\"32\"\n        height=\"28\"\n        viewBox=\"0 0 32 28\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M0.375 14C0.375 11.7218 2.22183 9.875 4.5 9.875H19.5C21.7782 9.875 23.625 11.7218 23.625 14V23C23.625 25.2782 21.7782 27.125 19.5 27.125H4.5C2.22183 27.125 0.375 25.2782 0.375 23V14ZM4.5 12.125C3.46447 12.125 2.625 12.9645 2.625 14V23C2.625 24.0355 3.46447 24.875 4.5 24.875H19.5C20.5355 24.875 21.375 24.0355 21.375 23V14C21.375 12.9645 20.5355 12.125 19.5 12.125H4.5Z\"\n          fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M16.875 8C16.875 4.06497 20.065 0.875 24 0.875C27.935 0.875 31.125 4.06497 31.125 8V11H28.875V8C28.875 5.30761 26.6924 3.125 24 3.125C21.3076 3.125 19.125 5.30761 19.125 8V11H16.875V8Z\"\n          fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n        />\n      </svg>\n    ),\n  },\n  {\n    title: 'Withdraw',\n    link: 'withdraw',\n    icon: (fill: 'white' | 'cyan') => (\n      <svg\n        width=\"37\"\n        height=\"36\"\n        viewBox=\"0 0 37 36\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M6.60986 29.7349C6.60986 29.942 6.77776 30.1099 6.98486 30.1099L28.7349 30.1099C28.942 30.1099 29.1099 29.942 29.1099 29.7349L29.1099 21.1099L31.3599 21.1099L31.3599 29.7349C31.3599 31.1846 30.1846 32.3599 28.7349 32.3599L6.98486 32.3599C5.53512 32.3599 4.35986 31.1846 4.35986 29.7349L4.35986 21.1099L6.60986 21.1099L6.60986 22.2348L6.60986 29.7349Z\"\n          fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n        />\n        <path\n          d=\"M18.9849 26.7349L16.7349 26.7349L16.7349 7.94653L12.3555 12.3259L10.8728 10.6273L17.8599 3.64019L24.8469 10.6273L23.3643 12.3259L18.9849 7.94653L18.9849 26.7349Z\"\n          fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n        />\n      </svg>\n    ),\n  },\n];\n\nexport const DEBTACTIONS = (isBase: boolean): ManageActionButtonType[] => {\n  const actions: ManageActionButtonType[] = [\n    {\n      title: isBase ? 'Claim' : 'Claim/Borrow',\n      link: 'claim',\n      icon: (fill) => (\n        <svg\n          width=\"37\"\n          height=\"36\"\n          viewBox=\"0 0 37 36\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <g clipPath=\"url(#clip0_11314_79978)\">\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M16.0903 8.50714C9.39782 8.50714 3.97247 13.9325 3.97247 20.625C3.97247 27.3175 9.39782 32.7429 16.0903 32.7429C22.7828 32.7429 28.2082 27.3175 28.2082 20.625C28.2082 13.9325 22.7828 8.50714 16.0903 8.50714ZM1.46533 20.625C1.46533 12.5478 8.01317 6 16.0903 6C24.1675 6 30.7153 12.5478 30.7153 20.625C30.7153 28.7022 24.1675 35.25 16.0903 35.25C8.01317 35.25 1.46533 28.7022 1.46533 20.625Z\"\n              fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n            />\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M14.5792 17.9742C14.589 17.5066 14.7225 17.3161 14.8124 17.2254C14.931 17.1058 15.1602 16.9772 15.5845 16.9097C16.4687 16.769 17.6646 16.9739 18.6515 17.2338L19.8638 17.553L20.5023 15.1286L19.29 14.8093C18.2491 14.5351 16.6222 14.2059 15.1905 14.4337C14.4569 14.5505 13.6548 14.8318 13.0317 15.4605C12.3834 16.1147 12.0715 16.9997 12.0715 18.0296V18.0771L12.0751 18.1244C12.1655 19.316 12.8745 20.108 13.6098 20.6288C14.284 21.1062 15.1197 21.4539 15.7947 21.7348C15.8202 21.7454 15.8454 21.7559 15.8704 21.7664C16.6329 22.084 17.1988 22.3286 17.591 22.6158C17.9362 22.8687 17.9707 23.0216 17.9707 23.1567C17.9707 23.6803 17.8165 23.8884 17.6957 23.9976C17.5342 24.1438 17.2307 24.2862 16.7131 24.3507C15.6587 24.482 14.289 24.2239 13.2807 23.9538L12.0698 23.6296L11.4212 26.0513L12.6321 26.3756C13.6977 26.661 15.462 27.0331 17.023 26.8386C17.8131 26.7402 18.6878 26.4808 19.3774 25.8572C20.1078 25.1967 20.4778 24.2672 20.4778 23.1567C20.4778 21.9459 19.8008 21.1267 19.0724 20.5932C18.4094 20.1076 17.5679 19.7573 16.8907 19.4754C16.8718 19.4675 16.8531 19.4597 16.8345 19.452C16.0731 19.1348 15.4848 18.8844 15.0588 18.5828C14.6976 18.3269 14.602 18.1399 14.5792 17.9742Z\"\n              fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n            />\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M16.0903 25.0125C16.7827 25.0125 17.3439 25.5737 17.3439 26.2661V29.4H14.8368V26.2661C14.8368 25.5737 15.398 25.0125 16.0903 25.0125Z\"\n              fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n            />\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M17.3439 11.85V14.9839C17.3439 15.6763 16.7827 16.2375 16.0903 16.2375C15.398 16.2375 14.8368 15.6763 14.8368 14.9839V11.85H17.3439Z\"\n              fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n            />\n            <path\n              d=\"M30.5 4.5V1.5H33.5V4.5H36.5V7.5H33.5V10.5H30.5V7.5H27.5V4.5H30.5Z\"\n              fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n            />\n          </g>\n          <defs>\n            <clipPath id=\"clip0_11314_79978\">\n              <rect\n                width=\"36\"\n                height=\"36\"\n                fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n                transform=\"translate(0.5)\"\n              />\n            </clipPath>\n          </defs>\n        </svg>\n      ),\n    },\n    {\n      title: 'Repay Debt',\n      link: 'repay',\n      icon: (fill) => (\n        <svg\n          width=\"37\"\n          height=\"36\"\n          viewBox=\"0 0 37 36\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <g clipPath=\"url(#clip0_11314_79981)\">\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M16.0903 8.50714C9.39782 8.50714 3.97247 13.9325 3.97247 20.625C3.97247 27.3175 9.39782 32.7429 16.0903 32.7429C22.7828 32.7429 28.2082 27.3175 28.2082 20.625C28.2082 13.9325 22.7828 8.50714 16.0903 8.50714ZM1.46533 20.625C1.46533 12.5478 8.01317 6 16.0903 6C24.1675 6 30.7153 12.5478 30.7153 20.625C30.7153 28.7022 24.1675 35.25 16.0903 35.25C8.01317 35.25 1.46533 28.7022 1.46533 20.625Z\"\n              fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n            />\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M14.5792 17.9742C14.589 17.5066 14.7225 17.3161 14.8124 17.2254C14.931 17.1058 15.1602 16.9772 15.5845 16.9097C16.4687 16.769 17.6646 16.9739 18.6515 17.2338L19.8638 17.553L20.5023 15.1286L19.29 14.8093C18.2491 14.5351 16.6222 14.2059 15.1905 14.4337C14.4569 14.5505 13.6548 14.8318 13.0317 15.4605C12.3834 16.1147 12.0715 16.9997 12.0715 18.0296V18.0771L12.0751 18.1244C12.1655 19.316 12.8745 20.108 13.6098 20.6288C14.284 21.1062 15.1197 21.4539 15.7947 21.7348C15.8202 21.7454 15.8454 21.7559 15.8704 21.7664C16.6329 22.084 17.1988 22.3286 17.591 22.6158C17.9362 22.8687 17.9707 23.0216 17.9707 23.1567C17.9707 23.6803 17.8165 23.8884 17.6957 23.9976C17.5342 24.1438 17.2307 24.2862 16.7131 24.3507C15.6587 24.482 14.289 24.2239 13.2807 23.9538L12.0698 23.6296L11.4212 26.0513L12.6321 26.3756C13.6977 26.661 15.462 27.0331 17.023 26.8386C17.8131 26.7402 18.6878 26.4808 19.3774 25.8572C20.1078 25.1967 20.4778 24.2672 20.4778 23.1567C20.4778 21.9459 19.8008 21.1267 19.0724 20.5932C18.4094 20.1076 17.5679 19.7573 16.8907 19.4754C16.8718 19.4675 16.8531 19.4597 16.8345 19.452C16.0731 19.1348 15.4848 18.8844 15.0588 18.5828C14.6976 18.3269 14.602 18.1399 14.5792 17.9742Z\"\n              fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n            />\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M16.0903 25.0125C16.7827 25.0125 17.3439 25.5737 17.3439 26.2661V29.4H14.8368V26.2661C14.8368 25.5737 15.398 25.0125 16.0903 25.0125Z\"\n              fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n            />\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M17.3439 11.85V14.9839C17.3439 15.6763 16.7827 16.2375 16.0903 16.2375C15.398 16.2375 14.8368 15.6763 14.8368 14.9839V11.85H17.3439Z\"\n              fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n            />\n            <path\n              d=\"M30.5 4.5H33.5H36.5V7.5H33.5H30.5H27.5V4.5H30.5Z\"\n              fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n            />\n          </g>\n          <defs>\n            <clipPath id=\"clip0_11314_79981\">\n              <rect\n                width=\"36\"\n                height=\"36\"\n                fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n                transform=\"translate(0.5)\"\n              />\n            </clipPath>\n          </defs>\n        </svg>\n      ),\n    },\n  ];\n\n  if (isBase) {\n    return actions;\n  }\n\n  return [\n    ...actions,\n    {\n      title: 'Withdraw',\n      link: 'withdraw-debt',\n      icon: (fill) => (\n        <svg\n          width=\"37\"\n          height=\"36\"\n          viewBox=\"0 0 37 36\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M6.60986 29.7349C6.60986 29.942 6.77776 30.1099 6.98486 30.1099L28.7349 30.1099C28.942 30.1099 29.1099 29.942 29.1099 29.7349L29.1099 21.1099L31.3599 21.1099L31.3599 29.7349C31.3599 31.1846 30.1846 32.3599 28.7349 32.3599L6.98486 32.3599C5.53512 32.3599 4.35986 31.1846 4.35986 29.7349L4.35986 21.1099L6.60986 21.1099L6.60986 22.2348L6.60986 29.7349Z\"\n            fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n          />\n          <path\n            d=\"M18.9849 26.7349L16.7349 26.7349L16.7349 7.94653L12.3555 12.3259L10.8728 10.6273L17.8599 3.64019L24.8469 10.6273L23.3643 12.3259L18.9849 7.94653L18.9849 26.7349Z\"\n            fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n          />\n        </svg>\n      ),\n    },\n  ];\n};\n","import { ArrowUpIcon, CheckIcon } from '@chakra-ui/icons';\nimport {\n  Button,\n  CircularProgress,\n  Divider,\n  Flex,\n  Link,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalOverlay,\n  Text,\n} from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { transactionLink } from '@snx-v3/etherscanLink';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { WithdrawIncrease } from '@snx-v3/WithdrawIncrease';\nimport { Wei, wei } from '@synthetixio/wei';\nimport React from 'react';\n\nexport function BorrowModal({ txnStatus, txnHash }: { txnStatus: string; txnHash: string | null }) {\n  const { debtChange, setCollateralChange, setDebtChange } =\n    React.useContext(ManagePositionContext);\n  const { data: systemToken } = useSystemToken();\n  const [isOpen, setIsOpen] = React.useState(false);\n  const { network } = useNetwork();\n\n  React.useEffect(() => {\n    if (txnStatus === 'prompting') {\n      setIsOpen(true);\n    }\n    if (txnStatus === 'error') {\n      setIsOpen(false);\n    }\n  }, [txnStatus]);\n\n  // This caching is necessary to keep initial values after success and not reset them to zeroes\n  const [borrowAmount, setBorrowAmount] = React.useState<Wei | undefined>();\n  React.useEffect(() => {\n    if (debtChange && debtChange.gt(0)) {\n      setBorrowAmount(debtChange.abs());\n    }\n  }, [debtChange]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={() => {\n        setCollateralChange(wei(0));\n        setDebtChange(wei(0));\n        setIsOpen(false);\n      }}\n    >\n      <ModalOverlay bg=\"#06061B80\" />\n      <ModalContent\n        bg=\"navy.700\"\n        mt=\"10%\"\n        borderWidth=\"1px\"\n        borderColor=\"gray.900\"\n        minWidth=\"384px\"\n      >\n        <ModalBody data-cy=\"borrow dialog\" p={6}>\n          <Text color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n            Borrowing Debt\n          </Text>\n\n          <Divider my={4} />\n\n          <Flex\n            position=\"relative\"\n            alignItems=\"center\"\n            gap={4}\n            mb={6}\n            rounded=\"lg\"\n            mt=\"6\"\n            p=\"4\"\n            border=\"2px solid\"\n            transitionProperty=\"border-color\"\n            transitionDuration=\"normal\"\n            borderColor={txnStatus === 'success' ? 'green.500' : 'gray.900'}\n          >\n            <Flex\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              borderRadius=\"100px\"\n              bg={txnStatus === 'success' ? 'green.600' : 'gray.900'}\n              width=\"40px\"\n              height=\"40px\"\n              p={3}\n            >\n              {txnStatus === 'success' ? (\n                <CheckIcon color=\"white\" />\n              ) : (\n                <CircularProgress size=\"25px\" isIndeterminate color=\"gray.700\" />\n              )}\n            </Flex>\n            <Flex\n              flexDirection=\"column\"\n              alignItems=\"space-between\"\n              justifyContent=\"space-between\"\n              ml={2}\n              data-cy=\"borrow info\"\n            >\n              {borrowAmount ? (\n                <Text fontSize=\"14px\" fontWeight={700} lineHeight=\"20px\" color=\"white\">\n                  <Amount\n                    prefix={txnStatus === 'success' ? 'Borrowed ' : 'Borrowing '}\n                    value={borrowAmount}\n                    suffix={` ${systemToken?.displaySymbol}`}\n                  />\n                </Text>\n              ) : null}\n            </Flex>\n          </Flex>\n          <WithdrawIncrease />\n          {txnStatus === 'success' ? (\n            <Button\n              mt={5}\n              variant=\"solid\"\n              justifyContent=\"center\"\n              px={3}\n              py={3}\n              width=\"100%\"\n              textAlign=\"center\"\n              onClick={() => setIsOpen(false)}\n            >\n              Done\n            </Button>\n          ) : null}\n          <Flex\n            justifyContent=\"center\"\n            px={3}\n            py={3}\n            mt={6}\n            mb={1}\n            borderTop=\"1px solid\"\n            borderTopColor=\"gray.900\"\n            data-cy=\"transaction hash\"\n          >\n            <Flex\n              as={Link}\n              isExternal\n              variant=\"outline\"\n              href={transactionLink({ chainId: network?.id, txnHash })}\n              fontFamily=\"heading\"\n              color={txnHash ? 'cyan.500' : 'gray.700'}\n              cursor={txnHash ? 'pointer' : 'default'}\n              fontWeight={700}\n              lineHeight=\"20px\"\n              fontSize=\"14px\"\n              target=\"_blank\"\n              mt={3}\n              alignItems=\"center\"\n              gap={1}\n            >\n              {txnHash ? (\n                <>\n                  <Text>View Transaction</Text>\n                  <ArrowUpIcon transform=\"rotate(45deg)\" />\n                </>\n              ) : (\n                <>\n                  <Text>Signing Transaction</Text>\n                </>\n              )}\n            </Flex>\n          </Flex>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import { Button, Flex, Text, useToast } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { ContractError } from '@snx-v3/ContractError';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { TokenIcon } from '@snx-v3/TokenIcon';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useBorrow } from '@snx-v3/useBorrow';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { validatePosition } from '@snx-v3/validatePosition';\nimport { wei } from '@synthetixio/wei';\nimport React from 'react';\nimport { BorrowModal } from './BorrowModal';\n\nexport function Borrow() {\n  const [params] = useParams<PositionPageSchemaType>();\n  const { debtChange, setDebtChange } = React.useContext(ManagePositionContext);\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: liquidityPosition, isPending: isPendingLiquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n  const { data: systemToken } = useSystemToken();\n  const { network } = useNetwork();\n\n  const {\n    isReady: isBorrowReady,\n    txnState,\n    mutation: mutationBorrow,\n  } = useBorrow({\n    borrowAmount: debtChange.gt(0) ? debtChange.abs() : undefined,\n  });\n\n  const maxClaimble = React.useMemo(() => {\n    if (!liquidityPosition || liquidityPosition?.debt.gte(0)) {\n      return ZEROWEI;\n    } else {\n      return wei(liquidityPosition.debt.abs().toBN());\n    }\n  }, [liquidityPosition]);\n\n  const { maxDebt } = validatePosition({\n    issuanceRatioD18: collateralType?.issuanceRatioD18,\n    collateralAmount: liquidityPosition?.collateralAmount,\n    collateralPrice: liquidityPosition?.collateralPrice,\n    debt: liquidityPosition?.debt,\n    collateralChange: ZEROWEI,\n    debtChange: debtChange,\n  });\n  const maxBorrowingCapacity = network?.preset === 'andromeda' ? ZEROWEI : maxDebt.mul(99).div(100);\n  const max = React.useMemo(\n    () => maxClaimble.add(maxBorrowingCapacity),\n    [maxClaimble, maxBorrowingCapacity]\n  );\n\n  const toast = useToast({ isClosable: true, duration: 9000 });\n  const errorParser = useContractErrorParser();\n  const onSubmit = React.useCallback(\n    async (e: React.FormEvent) => {\n      e.preventDefault();\n\n      try {\n        toast.closeAll();\n        toast({ title: 'Borrowing...', variant: 'left-accent' });\n\n        await mutationBorrow.mutateAsync();\n        setDebtChange(ZEROWEI);\n\n        toast.closeAll();\n        toast({\n          title: 'Success',\n          description: 'Your debt has been increased.',\n          status: 'success',\n          duration: 5000,\n          variant: 'left-accent',\n        });\n      } catch (error: any) {\n        const contractError = errorParser(error);\n        if (contractError) {\n          console.error(new Error(contractError.name), contractError);\n        }\n        toast({\n          title: 'Could not complete borrowing',\n          description: contractError ? (\n            <ContractError contractError={contractError} />\n          ) : (\n            'Please try again.'\n          ),\n          status: 'error',\n          variant: 'left-accent',\n          duration: 3_600_000,\n        });\n        throw Error('Borrow failed', { cause: error });\n      }\n    },\n    [errorParser, mutationBorrow, setDebtChange, toast]\n  );\n\n  return (\n    <Flex flexDirection=\"column\" data-cy=\"borrow form\" as=\"form\" onSubmit={onSubmit}>\n      <BorrowModal txnStatus={txnState.txnStatus} txnHash={txnState.txnHash} />\n      <Text color=\"gray./50\" fontSize=\"sm\" fontWeight=\"700\" mb=\"3\">\n        Borrow\n      </Text>\n      <BorderBox display=\"flex\" p={3} mb=\"6\">\n        <Flex alignItems=\"flex-start\" flexDir=\"column\" gap=\"1\">\n          <BorderBox display=\"flex\" py={1.5} px={2.5}>\n            <Text\n              display=\"flex\"\n              gap={2}\n              fontSize=\"16px\"\n              alignItems=\"center\"\n              fontWeight=\"600\"\n              whiteSpace=\"nowrap\"\n            >\n              <TokenIcon symbol={systemToken?.symbol} width={16} height={16} />\n              {systemToken?.displaySymbol}\n            </Text>\n          </BorderBox>\n          <Flex fontSize=\"12px\" gap=\"1\">\n            <Flex\n              gap=\"1\"\n              mr=\"3\"\n              alignItems=\"center\"\n              data-cy=\"max borrow amount\"\n              whiteSpace=\"nowrap\"\n            >\n              {isPendingLiquidityPosition ? '~' : null}\n              {!isPendingLiquidityPosition && liquidityPosition ? (\n                <>\n                  <Amount prefix=\"Debt: $\" value={max} />\n                  &nbsp;\n                  <Text\n                    as=\"span\"\n                    cursor=\"pointer\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      setDebtChange(max);\n                    }}\n                    color=\"cyan.500\"\n                    fontWeight={700}\n                  >\n                    Max\n                  </Text>\n                </>\n              ) : null}\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex flexDirection=\"column\" flexGrow={1}>\n          <NumberInput\n            InputProps={{\n              isRequired: true,\n              'data-cy': 'borrow amount input',\n              type: 'number',\n              min: 0,\n            }}\n            value={debtChange.abs()}\n            onChange={(val) => setDebtChange(val)}\n            max={max}\n            min={ZEROWEI}\n          />\n          <Text fontSize=\"xs\" color=\"whiteAlpha.700\" alignSelf=\"flex-end\">\n            {isPendingLiquidityPosition ? '~' : null}\n            {!isPendingLiquidityPosition &&\n            liquidityPosition &&\n            liquidityPosition.collateralPrice.gt(0) ? (\n              <Amount prefix=\"$\" value={debtChange.abs()} />\n            ) : null}\n          </Text>\n        </Flex>\n      </BorderBox>\n      <Button\n        data-cy=\"borrow submit\"\n        type=\"submit\"\n        isDisabled={!isBorrowReady || debtChange.gt(max)}\n        onClick={() => {\n          window?._paq?.push([\n            'trackEvent',\n            'liquidity',\n            'v3_staking',\n            `submit_borrow_${collateralType?.symbol?.toLowerCase()}_v3`,\n          ]);\n        }}\n      >\n        {debtChange.eq(0) ? 'Enter Amount' : 'Borrow'}\n      </Button>\n    </Flex>\n  );\n}\n","import { Alert, AlertIcon, Box, Button, Collapse, Flex, Text } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { TokenIcon } from '@snx-v3/TokenIcon';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { useTokenPrice } from '@snx-v3/useTokenPrice';\nimport { validatePosition } from '@snx-v3/validatePosition';\nimport { wei } from '@synthetixio/wei';\nimport { useContext, useMemo } from 'react';\n\nexport function Claim() {\n  const { network } = useNetwork();\n  const { debtChange, collateralChange, setDebtChange } = useContext(ManagePositionContext);\n  const [params] = useParams<PositionPageSchemaType>();\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: liquidityPosition, isPending: isPendingLiquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  const maxClaimble = useMemo(() => {\n    if (!liquidityPosition || liquidityPosition?.debt.gte(0)) {\n      return ZEROWEI;\n    } else {\n      return wei(liquidityPosition.debt.abs().toBN().mul(99).div(100));\n    }\n  }, [liquidityPosition]);\n\n  const { maxDebt } = validatePosition({\n    issuanceRatioD18: collateralType?.issuanceRatioD18,\n    collateralAmount: liquidityPosition?.collateralAmount,\n    collateralPrice: liquidityPosition?.collateralPrice,\n    debt: liquidityPosition?.debt,\n    collateralChange: collateralChange,\n    debtChange: debtChange,\n  });\n\n  const maxBorrowingCapacity = network?.preset === 'andromeda' ? ZEROWEI : maxDebt.mul(99).div(100);\n  const { data: systemToken } = useSystemToken();\n  const max = useMemo(\n    () => maxClaimble.add(maxBorrowingCapacity),\n    [maxClaimble, maxBorrowingCapacity]\n  );\n\n  const symbol = network?.preset === 'andromeda' ? collateralType?.symbol : systemToken?.symbol;\n  const price = useTokenPrice(symbol);\n\n  return (\n    <Flex flexDirection=\"column\" data-cy=\"claim form\">\n      <Text color=\"gray./50\" fontSize=\"sm\" fontWeight=\"700\" mb=\"3\">\n        {network?.preset === 'andromeda' ? 'Claim Profit' : 'Claim/Borrow'}\n      </Text>\n      <BorderBox display=\"flex\" p={3} mb=\"6\">\n        <Flex alignItems=\"flex-start\" flexDir=\"column\" gap=\"1\">\n          <BorderBox display=\"flex\" py={1.5} px={2.5}>\n            <Text\n              display=\"flex\"\n              gap={2}\n              fontSize=\"16px\"\n              alignItems=\"center\"\n              fontWeight=\"600\"\n              whiteSpace=\"nowrap\"\n            >\n              <TokenIcon symbol={symbol} width={16} height={16} />\n              {network?.preset === 'andromeda'\n                ? collateralType?.displaySymbol\n                : systemToken?.displaySymbol}\n            </Text>\n          </BorderBox>\n          <Flex fontSize=\"12px\" gap=\"1\" data-cy=\"credit amount\">\n            {isPendingLiquidityPosition ? 'Credit: ~' : null}\n            {!isPendingLiquidityPosition && maxClaimble ? (\n              <>\n                <Amount prefix=\"Credit: \" value={maxClaimble} />\n                &nbsp;\n                <Text\n                  cursor=\"pointer\"\n                  onClick={() => setDebtChange(maxClaimble)}\n                  color=\"cyan.500\"\n                  fontWeight={700}\n                >\n                  Max\n                </Text>\n              </>\n            ) : null}\n          </Flex>\n        </Flex>\n        <Flex flexDir=\"column\" flexGrow={1}>\n          <NumberInput\n            InputProps={{\n              isRequired: true,\n              'data-cy': 'claim amount input',\n              'data-max': maxClaimble.toString(),\n              type: 'number',\n              min: 0,\n            }}\n            value={debtChange}\n            onChange={(val) => setDebtChange(val)}\n            max={max}\n            min={ZEROWEI}\n          />\n          <Flex fontSize=\"xs\" color=\"whiteAlpha.700\" alignSelf=\"flex-end\" gap=\"1\">\n            {price.gt(0) && <Amount prefix=\"$\" value={debtChange.abs().mul(price)} />}\n          </Flex>\n        </Flex>\n      </BorderBox>\n      <Collapse in={debtChange.lte(0) && maxClaimble.gt(0)} animateOpacity unmountOnExit>\n        <Alert colorScheme=\"green\" mb=\"6\" borderRadius=\"6px\">\n          <AlertIcon />\n          <Text>\n            Positive market performance has credited your position. Claim up to{' '}\n            <Box\n              onClick={() => {\n                if (!maxClaimble) {\n                  return;\n                }\n                setDebtChange(maxClaimble);\n              }}\n              cursor=\"pointer\"\n              as=\"span\"\n              textDecoration=\"underline\"\n            >\n              <Amount value={maxClaimble} prefix=\"$\" />\n            </Box>\n            &nbsp;without accruing debt.\n          </Text>\n        </Alert>\n      </Collapse>\n      <Collapse in={debtChange.gt(0)} animateOpacity unmountOnExit>\n        <Alert status=\"warning\" mb=\"6\" borderRadius=\"6px\">\n          <AlertIcon />\n          <Text>\n            Assets will be available to withdraw 24 hours after your last interaction with this\n            position.\n          </Text>\n        </Alert>\n      </Collapse>\n      <Collapse\n        in={debtChange.lte(0) && network?.preset !== 'andromeda' && maxBorrowingCapacity.gt(0)}\n        animateOpacity\n        unmountOnExit\n      >\n        <Alert colorScheme=\"blue\" mb=\"6\" borderRadius=\"6px\">\n          <AlertIcon />\n          <Text>\n            You can take an interest-free loan up to &nbsp;\n            <Box\n              onClick={() => {\n                if (!maxBorrowingCapacity) {\n                  return;\n                }\n                setDebtChange(maxBorrowingCapacity.add(maxClaimble));\n              }}\n              cursor=\"pointer\"\n              as=\"span\"\n              textDecoration=\"underline\"\n            >\n              <Amount value={maxBorrowingCapacity} prefix=\"$\" />\n            </Box>\n          </Text>\n        </Alert>\n      </Collapse>\n      <Collapse\n        in={\n          !debtChange.gt(max) &&\n          debtChange.gt(0) &&\n          debtChange.gt(maxClaimble) &&\n          network?.preset !== 'andromeda'\n        }\n        animateOpacity\n        unmountOnExit\n      >\n        <Alert colorScheme=\"info\" mb=\"6\" borderRadius=\"6px\">\n          <AlertIcon />\n          <Text>\n            You are about to take a <Amount value={debtChange.sub(maxClaimble)} prefix=\"$\" />{' '}\n            interest-free loan\n          </Text>\n        </Alert>\n      </Collapse>\n      <Button\n        isDisabled={debtChange.lte(0) || debtChange.gt(max)}\n        data-cy=\"claim submit\"\n        type=\"submit\"\n        onClick={() => {\n          window?._paq?.push([\n            'trackEvent',\n            'liquidity',\n            'v3_staking',\n            `click_borrow_${collateralType?.symbol?.toLowerCase()}_v3`,\n          ]);\n        }}\n      >\n        {debtChange.lte(0)\n          ? 'Enter Amount'\n          : debtChange.gt(maxClaimble) && network?.preset !== 'andromeda'\n            ? 'Borrow'\n            : 'Claim Profit'}\n      </Button>\n    </Flex>\n  );\n}\n","import { ArrowUpIcon } from '@chakra-ui/icons';\nimport { Button, Divider, Flex, Heading, Image, Link, Text } from '@chakra-ui/react';\nimport SynthetixLogo from '@snx-v3/useBlockchain/SynthetixIcon.svg';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\n\nexport function ClaimSuccessBanner({ onClose }: { onClose: () => void }) {\n  const { data: systemToken } = useSystemToken();\n  return (\n    <Flex\n      data-cy=\"claim success\"\n      flexDir=\"column\"\n      gap=\"6\"\n      borderColor=\"gray.900\"\n      rounded=\"base\"\n      height=\"fit-content\"\n    >\n      <Heading color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n        What can you do with your {systemToken?.displaySymbol}?\n      </Heading>\n      <Divider />\n\n      <Flex flexWrap=\"wrap\" px={1} alignItems=\"center\" gap={4}>\n        <Image src={SynthetixLogo} width={42} />\n\n        <Flex flexDir=\"column\">\n          <Text color=\"white\" fontSize=\"16px\" fontWeight={800}>\n            Trade L1 Perp\n          </Text>\n          <Text color=\"white\" fontSize=\"14px\" fontWeight={300}>\n            Trade with synthetix integrators\n          </Text>\n        </Flex>\n\n        <Text ml=\"auto\" color=\"white\" fontSize=\"12px\" fontWeight={800}>\n          Coming soon\n        </Text>\n      </Flex>\n\n      <Flex flexWrap=\"wrap\" px={1} alignItems=\"center\" gap={4} mt={4} mb={2}>\n        <Image width=\"42px\" src=\"/curve.png\" alt=\"Curve\" />\n\n        <Flex flexDir=\"column\">\n          <Text color=\"white\" fontSize=\"16px\" fontWeight={800}>\n            sUSD/USDC Pool\n          </Text>\n          <Text color=\"white\" fontSize=\"14px\" fontWeight={300}>\n            Curve\n          </Text>\n        </Flex>\n\n        <Button\n          as={Link}\n          ml=\"auto\"\n          size=\"sm\"\n          href=\"https://curve.fi/#/ethereum/pools/factory-stable-ng-258/deposit\"\n          target=\"_blank\"\n          textDecoration=\"none\"\n          _hover={{ textDecoration: 'none' }}\n          display=\"flex\"\n          alignItems=\"center\"\n          fontWeight={700}\n          gap=\"2\"\n        >\n          Deposit on Curve{' '}\n          <ArrowUpIcon\n            style={{\n              transform: 'rotate(45deg)',\n            }}\n          />\n        </Button>\n      </Flex>\n\n      <Button onClick={onClose} variant=\"outline\" colorScheme=\"gray\" w=\"100%\">\n        Later\n      </Button>\n    </Flex>\n  );\n}\n","import { ArrowBackIcon } from '@chakra-ui/icons';\nimport { Button, Divider, Link, Text, useToast } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { ContractError } from '@snx-v3/ContractError';\nimport { LiquidityPositionUpdated } from '@snx-v3/Manage';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { Multistep } from '@snx-v3/Multistep';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useBorrow } from '@snx-v3/useBorrow';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { wei } from '@synthetixio/wei';\nimport { useCallback, useContext, useMemo, useState } from 'react';\nimport { ClaimSuccessBanner } from './ClaimSuccessBanner';\n\nexport function ClaimModal({ onClose }: { onClose: () => void }) {\n  const [params] = useParams<PositionPageSchemaType>();\n  const { debtChange, setDebtChange } = useContext(ManagePositionContext);\n  const { network } = useNetwork();\n  const [showClaimBanner, setShowClaimBanner] = useState(false);\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: liquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  const { data: systemToken } = useSystemToken();\n\n  const maxClaimble = useMemo(() => {\n    if (!liquidityPosition || liquidityPosition?.debt.gte(0)) {\n      return ZEROWEI;\n    } else {\n      return wei(liquidityPosition.debt.abs().toBN().sub(1));\n    }\n  }, [liquidityPosition]);\n  const isBorrow = useMemo(\n    () => debtChange.gt(maxClaimble) && network?.preset !== 'andromeda',\n    [debtChange, network?.preset, maxClaimble]\n  );\n\n  const {\n    exec: execBorrow,\n    txnState,\n    settle: settleBorrow,\n  } = useBorrow({\n    borrowAmount: debtChange.gt(0) ? debtChange.abs() : undefined,\n  });\n\n  const toast = useToast({ isClosable: true, duration: 9000 });\n  const errorParser = useContractErrorParser();\n  const execBorrowWithErrorParser = useCallback(async () => {\n    try {\n      await execBorrow();\n      setDebtChange(ZEROWEI);\n    } catch (error: any) {\n      const contractError = errorParser(error);\n      if (contractError) {\n        console.error(new Error(contractError.name), contractError);\n      }\n      toast.closeAll();\n      toast({\n        title: isBorrow ? 'Borrow' : 'Claim' + ' failed',\n        description: contractError ? (\n          <ContractError contractError={contractError} />\n        ) : (\n          'Please try again.'\n        ),\n        status: 'error',\n        variant: 'left-accent',\n        duration: 3_600_000,\n      });\n      throw Error(isBorrow ? 'Borrow' : 'Claim' + ' failed', { cause: error });\n    }\n  }, [execBorrow, setDebtChange, errorParser, toast, isBorrow]);\n\n  const symbol =\n    network?.preset === 'andromeda' ? collateralType?.displaySymbol : systemToken?.displaySymbol;\n\n  if (txnState.txnStatus === 'success') {\n    if (showClaimBanner) {\n      return (\n        <ClaimSuccessBanner\n          onClose={() => {\n            settleBorrow();\n            onClose();\n          }}\n        />\n      );\n    } else {\n      return (\n        <LiquidityPositionUpdated\n          onClose={() => {\n            if (network?.id === 1 && network?.preset === 'main') {\n              setShowClaimBanner(true);\n            } else {\n              settleBorrow();\n              onClose();\n            }\n          }}\n          title=\"Debt successfully updated\"\n          subline={\n            <>\n              Your <b>debt</b> has been updated. To learn more, visit the{' '}\n              <Link href=\"https://docs.synthetix.io/\" target=\"_blank\" color=\"cyan.500\">\n                Synthetix V3 Documentation\n              </Link>\n            </>\n          }\n          alertText={\n            <>\n              <b>Debt</b> successfully updated\n            </>\n          }\n        />\n      );\n    }\n  }\n\n  return (\n    <div data-cy=\"claim multistep\">\n      <Text color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n        <ArrowBackIcon\n          cursor=\"pointer\"\n          onClick={() => {\n            settleBorrow();\n            onClose();\n          }}\n          mr={2}\n        />\n        Manage Debt\n      </Text>\n\n      <Divider my={4} />\n\n      <Multistep\n        step={1}\n        title={network?.preset === 'andromeda' ? 'Claim' : 'Borrow'}\n        subtitle={\n          <Text as=\"div\">\n            {network?.preset === 'andromeda' ? 'Claim' : 'Borrow'}\n            <Amount prefix=\" \" value={debtChange} suffix={` ${symbol}`} />\n          </Text>\n        }\n        status={{\n          failed: txnState.txnStatus === 'error',\n          loading: ['prompting', 'pending'].includes(txnState.txnStatus),\n        }}\n      />\n\n      <Button\n        isDisabled={['pending', 'prompting'].includes(txnState.txnStatus)}\n        onClick={() => {\n          window?._paq?.push([\n            'trackEvent',\n            'liquidity',\n            'v3_staking',\n            `submit_borrow_${collateralType?.symbol?.toLowerCase()}_v3`,\n          ]);\n\n          if (['unsent', 'error'].includes(txnState.txnStatus)) {\n            execBorrowWithErrorParser();\n          }\n        }}\n        width=\"100%\"\n        mt=\"6\"\n        data-cy=\"claim confirm button\"\n      >\n        {(() => {\n          switch (txnState.txnStatus) {\n            case 'error':\n              return 'Retry';\n            case 'pending':\n            case 'prompting':\n              return 'Processing...';\n            default:\n              return 'Execute Transaction';\n          }\n        })()}\n      </Button>\n    </div>\n  );\n}\n","import { ClaimModal } from './ClaimModal';\n\nexport * from './ClaimModal';\nexport default ClaimModal;\n","import { Flex, FlexProps } from '@chakra-ui/react';\nimport { ReactNode } from 'react';\n\ninterface Props extends FlexProps {\n  items: {\n    label: ReactNode;\n    value: ReactNode;\n  }[];\n}\n\nexport const TransactionSummary = ({ items, ...props }: Props) => (\n  <Flex p={3.5} borderRadius=\"4px\" background=\"#1F1F34\" flexDir=\"column\" gap={3} {...props}>\n    {items.map(({ value, label }, i) => (\n      <Flex fontWeight={700} fontSize=\"12px\" key={i} flex={1} width=\"100%\">\n        <Flex alignItems=\"center\" justify=\"flex-start\" textAlign=\"left\" flexGrow={1}>\n          {label}\n        </Flex>\n        <Flex alignItems=\"center\" justify=\"flex-end\" textAlign=\"right\" flexGrow={1}>\n          {value}\n        </Flex>\n      </Flex>\n    ))}\n  </Flex>\n);\n","import { useQuery } from '@tanstack/react-query';\nimport { useWallet, useNetwork, useProvider } from '@snx-v3/useBlockchain';\nimport { ZodBigNumber } from '@snx-v3/zod';\nimport { wei } from '@synthetixio/wei';\n\nconst BalanceSchema = ZodBigNumber.transform((x) => wei(x));\n\nexport function useEthBalance() {\n  const { activeWallet } = useWallet();\n  const provider = useProvider();\n  const { network } = useNetwork();\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'EthBalance',\n      { accountAddress: activeWallet?.address },\n    ],\n    enabled: Boolean(provider && activeWallet),\n    queryFn: async () => {\n      if (!(provider && activeWallet)) throw 'OMFG';\n      return BalanceSchema.parse(await provider.getBalance(activeWallet.address));\n    },\n  });\n}\n","import {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  Button,\n  Collapse,\n  Flex,\n  Text,\n  Tooltip,\n} from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { ChangeStat } from '@snx-v3/ChangeStat';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { CRatioChangeStat } from '@snx-v3/CRatioBar';\nimport { currency } from '@snx-v3/format';\nimport { formatNumber } from '@snx-v3/formatters';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { TokenIcon } from '@snx-v3/TokenIcon';\nimport { TransactionSummary } from '@snx-v3/TransactionSummary';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useEthBalance } from '@snx-v3/useEthBalance';\nimport { useIsAndromedaStataUSDC } from '@snx-v3/useIsAndromedaStataUSDC';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useTokenBalance } from '@snx-v3/useTokenBalance';\nimport { useTokenPrice } from '@snx-v3/useTokenPrice';\nimport { useTransferableSynthetix } from '@snx-v3/useTransferableSynthetix';\nimport { useUSDC } from '@snx-v3/useUSDC';\nimport { DepositsIncreaseTimeout } from '@snx-v3/WithdrawIncrease';\nimport { Wei } from '@synthetixio/wei';\nimport React from 'react';\n\nexport function Deposit() {\n  const [params] = useParams<PositionPageSchemaType>();\n\n  const { collateralChange, setCollateralChange } = React.useContext(ManagePositionContext);\n  const { network } = useNetwork();\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: liquidityPosition, isPending: isPendingLiquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n  const { data: transferrableSnx } = useTransferableSynthetix();\n\n  const isAndromedaStataUSDC = useIsAndromedaStataUSDC({\n    tokenAddress: collateralType?.tokenAddress,\n  });\n\n  const { data: collateralBalance } = useTokenBalance(collateralType?.tokenAddress);\n\n  const { data: ethBalance } = useEthBalance();\n\n  const price = useTokenPrice(collateralType?.symbol);\n  const { data: USDCToken } = useUSDC();\n  const { data: usdcBalance, isPending: isPendingUsdcBalance } = useTokenBalance(\n    USDCToken?.address\n  );\n\n  const maxAmount = React.useMemo(() => {\n    if (collateralType?.symbol === 'SNX') {\n      return (\n        ZEROWEI\n          //\n          .add(transferrableSnx ? transferrableSnx.transferable : ZEROWEI)\n          .add(liquidityPosition ? liquidityPosition.availableCollateral : ZEROWEI)\n      );\n    }\n\n    if (collateralType?.symbol === 'WETH') {\n      return (\n        ZEROWEI\n          //\n          .add(ethBalance ?? ZEROWEI)\n          .add(collateralBalance ?? ZEROWEI)\n          .add(liquidityPosition ? liquidityPosition.availableCollateral : ZEROWEI)\n      );\n    }\n\n    if (network?.preset === 'andromeda') {\n      return (\n        ZEROWEI\n          //\n          .add(usdcBalance ? usdcBalance : ZEROWEI)\n      );\n    }\n\n    return (\n      ZEROWEI\n        //\n        .add(collateralBalance ?? ZEROWEI)\n        .add(liquidityPosition ? liquidityPosition.availableCollateral : ZEROWEI)\n    );\n  }, [\n    collateralType?.symbol,\n    liquidityPosition,\n    transferrableSnx,\n    collateralBalance,\n    ethBalance,\n    usdcBalance,\n    network?.preset,\n  ]);\n\n  const overAvailableBalance = collateralChange.gt(maxAmount);\n\n  return (\n    <Flex flexDirection=\"column\" data-cy=\"deposit and lock collateral form\">\n      <Text color=\"gray./50\" fontSize=\"sm\" fontWeight=\"700\" mb=\"3\">\n        Deposit and Lock Collateral\n      </Text>\n      <BorderBox display=\"flex\" p={3} mb=\"6\">\n        <Flex alignItems=\"flex-start\" flexDir=\"column\" gap=\"1\">\n          <BorderBox display=\"flex\" py={1.5} px={2.5}>\n            <Text display=\"flex\" gap={2} alignItems=\"center\" fontWeight=\"600\">\n              <TokenIcon\n                symbol={collateralType?.symbol ?? params.collateralSymbol}\n                width={16}\n                height={16}\n              />\n              {collateralType?.displaySymbol ?? params.collateralSymbol}\n            </Text>\n          </BorderBox>\n          <Tooltip\n            label={\n              <Flex\n                flexDirection=\"column\"\n                alignItems=\"flex-start\"\n                fontSize=\"xs\"\n                color=\"whiteAlpha.700\"\n              >\n                {network?.preset === 'andromeda' ? (\n                  <>\n                    {isPendingUsdcBalance ? (\n                      'Wallet Balance: ~'\n                    ) : (\n                      <Amount prefix=\"Wallet Balance: \" value={usdcBalance} />\n                    )}\n                  </>\n                ) : null}\n\n                {network?.preset !== 'andromeda' ? (\n                  <>\n                    {isPendingLiquidityPosition ? (\n                      'Unlocked Balance: ~'\n                    ) : (\n                      <Amount\n                        prefix=\"Unlocked Balance: \"\n                        value={liquidityPosition?.availableCollateral}\n                      />\n                    )}\n\n                    <Amount\n                      prefix=\"Wallet Balance: \"\n                      value={\n                        collateralType?.symbol === 'SNX'\n                          ? transferrableSnx?.transferable\n                          : collateralBalance\n                      }\n                    />\n\n                    {collateralType?.symbol === 'WETH' ? (\n                      <Amount prefix=\"ETH Balance: \" value={ethBalance} />\n                    ) : null}\n                  </>\n                ) : null}\n              </Flex>\n            }\n          >\n            <Text fontSize=\"12px\" data-cy=\"balance amount\">\n              {params.accountId && isPendingLiquidityPosition ? 'Balance: ~' : null}\n              {(!params.accountId || (params.accountId && !isPendingLiquidityPosition)) &&\n              maxAmount ? (\n                <>\n                  <Amount prefix=\"Balance: \" value={maxAmount} />\n                  &nbsp;\n                  <Text\n                    as=\"span\"\n                    cursor=\"pointer\"\n                    onClick={() => setCollateralChange(maxAmount)}\n                    color=\"cyan.500\"\n                    fontWeight={700}\n                  >\n                    Max\n                  </Text>\n                </>\n              ) : null}\n            </Text>\n          </Tooltip>\n        </Flex>\n        <Flex flexDir=\"column\" flexGrow={1}>\n          <NumberInput\n            InputProps={{\n              'data-cy': 'deposit amount input',\n              'data-max': maxAmount?.toString(),\n              min: 0,\n            }}\n            value={collateralChange}\n            onChange={(value) => {\n              setCollateralChange(value);\n            }}\n            max={maxAmount}\n            min={ZEROWEI}\n          />\n          <Flex fontSize=\"xs\" color=\"whiteAlpha.700\" alignSelf=\"flex-end\" gap=\"1\">\n            <Amount prefix=\"$\" value={collateralChange.abs().mul(price)} />\n          </Flex>\n        </Flex>\n      </BorderBox>\n\n      <Collapse in={collateralChange.gt(0) && !overAvailableBalance} animateOpacity unmountOnExit>\n        <DepositsIncreaseTimeout />\n      </Collapse>\n\n      <Collapse in={isAndromedaStataUSDC} animateOpacity unmountOnExit>\n        <Alert mb={6} status=\"info\" borderRadius=\"6px\">\n          <AlertIcon />\n          <AlertDescription>\n            Deposit USDC and it will automatically wrap into Static aUSDC\n          </AlertDescription>\n        </Alert>\n      </Collapse>\n\n      {collateralType && (liquidityPosition || !params.accountId) ? (\n        <Collapse\n          in={\n            collateralChange.gt(0) &&\n            collateralChange\n              .add(liquidityPosition ? liquidityPosition.collateralAmount : ZEROWEI)\n              .lt(collateralType.minDelegationD18)\n          }\n          animateOpacity\n          unmountOnExit\n        >\n          <Alert mb={6} status=\"error\" borderRadius=\"6px\">\n            <AlertIcon />\n            <AlertDescription>\n              Your deposit must be{' '}\n              {formatNumber(parseFloat(collateralType.minDelegationD18.toString()))}{' '}\n              {collateralType.symbol} or higher\n            </AlertDescription>\n          </Alert>\n        </Collapse>\n      ) : null}\n\n      <Collapse in={overAvailableBalance} animateOpacity unmountOnExit>\n        <Alert mb={6} status=\"error\" borderRadius=\"6px\">\n          <AlertIcon />\n          <AlertDescription>\n            You cannot Deposit and Lock more Collateral than your Balance amount\n          </AlertDescription>\n        </Alert>\n      </Collapse>\n\n      <Collapse in={true} animateOpacity unmountOnExit>\n        <Alert mb={6} status=\"error\" borderRadius=\"6px\">\n          <AlertIcon />\n          <AlertDescription>Depositing is disabled.</AlertDescription>\n        </Alert>\n      </Collapse>\n\n      {collateralType && liquidityPosition ? (\n        <Collapse\n          in={\n            collateralChange.abs().gt(0) &&\n            !overAvailableBalance &&\n            collateralChange\n              .add(liquidityPosition.collateralAmount)\n              .gte(collateralType.minDelegationD18)\n          }\n          animateOpacity\n          unmountOnExit\n        >\n          <TransactionSummary\n            mb={6}\n            items={[\n              ...(liquidityPosition\n                ? [\n                    {\n                      label: `Locked ${collateralType?.displaySymbol ?? params.collateralSymbol}`,\n                      value: (\n                        <ChangeStat\n                          value={liquidityPosition.collateralAmount}\n                          newValue={liquidityPosition.collateralAmount.add(collateralChange)}\n                          formatFn={(val?: Wei) => currency(val ?? ZEROWEI)}\n                          hasChanges={collateralChange.abs().gt(0)}\n                          size=\"sm\"\n                        />\n                      ),\n                    },\n                  ]\n                : []),\n              ...(liquidityPosition && network?.preset !== 'andromeda'\n                ? [\n                    {\n                      label: 'C-ratio',\n                      value: (\n                        <CRatioChangeStat\n                          currentCollateral={liquidityPosition.collateralAmount}\n                          currentDebt={liquidityPosition.debt}\n                          collateralChange={collateralChange}\n                          collateralPrice={liquidityPosition.collateralPrice}\n                          debtChange={ZEROWEI}\n                          size=\"sm\"\n                        />\n                      ),\n                    },\n                  ]\n                : []),\n            ]}\n          />\n        </Collapse>\n      ) : null}\n\n      <Button\n        data-cy=\"deposit submit\"\n        type=\"submit\"\n        isDisabled={true}\n        onClick={() => {\n          window?._paq?.push([\n            'trackEvent',\n            'liquidity',\n            'v3_staking',\n            `click_deposit_${collateralType?.symbol?.toLowerCase()}_v3`,\n          ]);\n        }}\n      >\n        {collateralChange.lte(0) ? 'Enter Amount' : 'Deposit and Lock Collateral'}\n      </Button>\n    </Flex>\n  );\n}\n","import { useQuery } from '@tanstack/react-query';\nimport { MAINNET, useProviderForChain, useWallet } from '@snx-v3/useBlockchain';\nimport { Wei, wei } from '@synthetixio/wei';\nimport { ethers } from 'ethers';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\n\nexport function useTransferableSynthetix() {\n  const { activeWallet } = useWallet();\n  const provider = useProviderForChain(MAINNET);\n  const { data: snxCollateral } = useCollateralType('SNX', MAINNET);\n\n  const accountAddress = activeWallet?.address;\n  const snxAddress = snxCollateral?.tokenAddress;\n\n  return useQuery({\n    enabled: Boolean(provider && accountAddress && snxAddress),\n    queryKey: [\n      `${MAINNET?.id}-${MAINNET?.preset}`,\n      'TransferableSynthetix',\n      { address: activeWallet?.address },\n    ],\n    queryFn: async function (): Promise<{ transferable: Wei; collateral?: Wei }> {\n      if (!(provider && accountAddress && snxAddress)) {\n        throw 'useTransferableSynthetix should not be enabled';\n      }\n      const contract = new ethers.Contract(\n        snxAddress,\n        [\n          'function balanceOf(address owner) view returns (uint256)',\n          'function transferableSynthetix(address account) view returns (uint256 transferable)',\n          'function collateral(address account) view returns (uint256 collateral)',\n        ],\n        provider\n      );\n      try {\n        // Normal case for SNX case\n        const [transferableSynthetix, collateral] = await Promise.all([\n          contract.transferableSynthetix(accountAddress),\n          contract.collateral(accountAddress),\n        ]);\n\n        return {\n          transferable: wei(transferableSynthetix),\n          collateral: wei(collateral),\n        };\n      } catch (e) {\n        console.error(e);\n        throw e;\n      }\n    },\n  });\n}\n","import {\n  importPositionManager,\n  importPositionManagerAndromedaStataUSDC,\n  importPositionManagerAndromedaUSDC,\n} from '@snx-v3/contracts';\nimport { type Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { type CollateralType } from '@snx-v3/useCollateralTypes';\nimport { useSynthTokens } from '@snx-v3/useSynthTokens';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function usePositionManagerForCollateral({\n  collateralType,\n  customNetwork,\n}: {\n  collateralType?: CollateralType;\n  customNetwork?: Network;\n}) {\n  const { network: currentNetwork } = useNetwork();\n  const network = customNetwork || currentNetwork;\n  const { data: synthTokens } = useSynthTokens(customNetwork);\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'PositionManager',\n      { collateralType: collateralType?.address },\n      { synthTokens: Boolean(synthTokens) },\n    ],\n    enabled: Boolean(network && synthTokens && collateralType),\n    queryFn: async function () {\n      if (!(network && synthTokens && collateralType)) throw 'OMFG';\n      const addr = collateralType.address.toLowerCase();\n      for (const synthToken of synthTokens) {\n        if (addr === synthToken.address.toLowerCase()) {\n          if (network.preset === 'andromeda' && synthToken.symbol === 'sUSDC') {\n            return importPositionManagerAndromedaUSDC(network.id, network.preset);\n          }\n          if (network.preset === 'andromeda' && synthToken.symbol === 'sStataUSDC') {\n            return importPositionManagerAndromedaStataUSDC(network.id, network.preset);\n          }\n        }\n      }\n      return importPositionManager(network.id, network.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","import { ArrowBackIcon } from '@chakra-ui/icons';\nimport { Button, Divider, Flex, Text, useToast } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { D18, D6, ZEROWEI } from '@snx-v3/constants';\nimport { ContractError } from '@snx-v3/ContractError';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { Multistep } from '@snx-v3/Multistep';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport { useAccountProxy } from '@snx-v3/useAccountProxy';\nimport { useApprove } from '@snx-v3/useApprove';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { useCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { usePositionManagerForCollateral } from '@snx-v3/usePositionManagerForCollateral';\nimport { useUSDC } from '@snx-v3/useUSDC';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport { Wei } from '@synthetixio/wei';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\nimport React from 'react';\n\nconst log = debug('snx:DepositModalAndromeda');\n\nexport function DepositModalAndromeda({ onClose }: { onClose: () => void }) {\n  const [params] = useParams<PositionPageSchemaType>();\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n\n  const { collateralChange, setCollateralChange } = React.useContext(ManagePositionContext);\n\n  const toast = useToast({ isClosable: true, duration: 9000 });\n\n  const queryClient = useQueryClient();\n  const errorParser = useContractErrorParser();\n\n  const { data: USDC } = useUSDC();\n  const { data: AccountProxy } = useAccountProxy();\n  const { data: PositionManager } = usePositionManagerForCollateral({ collateralType });\n\n  const { data: priceUpdateTx } = useCollateralPriceUpdates();\n\n  const { network } = useNetwork();\n  const signer = useSigner();\n  const provider = useProvider();\n\n  const {\n    approve: approveUSDC,\n    requireApproval: requireApprovalUSDC,\n    txnState: txnStateApproveUSDC,\n    isReady: isReadyApproveUSDC,\n  } = useApprove({\n    contractAddress: USDC?.address,\n    amount: collateralChange.toBN().mul(D6).div(D18),\n    spender: PositionManager?.address,\n  });\n\n  const isReady =\n    network &&\n    provider &&\n    signer &&\n    AccountProxy &&\n    PositionManager &&\n    USDC?.address &&\n    collateralType?.tokenAddress &&\n    collateralChange.gt(0) &&\n    isReadyApproveUSDC &&\n    // Make it boolean\n    true;\n\n  const [txnStateDeposit, dispatch] = React.useReducer(reducer, initialState);\n\n  // This caching is necessary to keep initial values after success and not reset them to zeroes\n  const [cachedCollateralChange, setCachedCollateralChange] = React.useState<Wei>(collateralChange);\n\n  const { mutate: execDeposit } = useMutation({\n    mutationFn: async function () {\n      log('params', params);\n      log('collateralType', collateralType);\n\n      if (!isReady) {\n        throw new Error('Not ready');\n      }\n\n      if (requireApprovalUSDC) {\n        await approveUSDC(false);\n      }\n\n      dispatch({ type: 'prompting' });\n\n      const walletAddress = await signer.getAddress();\n\n      const callsPromises = [];\n\n      if (params.accountId) {\n        const AccountProxyContract = new ethers.Contract(\n          AccountProxy.address,\n          AccountProxy.abi,\n          signer\n        );\n        const approveAccountTx = AccountProxyContract.populateTransaction.approve(\n          PositionManager.address,\n          params.accountId\n        );\n        callsPromises.push(approveAccountTx);\n      }\n\n      const PositionManagerContract = new ethers.Contract(\n        PositionManager.address,\n        PositionManager.abi,\n        signer\n      );\n\n      if (params.accountId) {\n        const increasePositionTx = PositionManagerContract.populateTransaction.increasePosition(\n          params.accountId,\n          collateralChange.toBN().mul(D6).div(D18)\n        );\n        callsPromises.push(increasePositionTx);\n      } else {\n        const setupPositionTx = PositionManagerContract.populateTransaction.setupPosition(\n          collateralChange.toBN().mul(D6).div(D18)\n        );\n        callsPromises.push(setupPositionTx);\n      }\n\n      const calls = await Promise.all(callsPromises);\n      if (priceUpdateTx) {\n        calls.unshift(priceUpdateTx as any);\n      }\n\n      const { multicallTxn: erc7412Tx, gasLimit } = await withERC7412(\n        provider,\n        network,\n        calls,\n        'useDepositAndromeda',\n        walletAddress\n      );\n\n      const txn = await signer.sendTransaction({\n        ...erc7412Tx,\n        gasLimit: gasLimit.mul(15).div(10),\n      });\n      log('txn', txn);\n      dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n      return receipt;\n    },\n\n    onSuccess: async () => {\n      const deployment = `${network?.id}-${network?.preset}`;\n      await Promise.all(\n        [\n          //\n          'Accounts',\n          'PriceUpdates',\n          'LiquidityPosition',\n          'LiquidityPositions',\n          'TokenBalance',\n          'SynthBalances',\n          'EthBalance',\n          'Allowance',\n        ].map((key) => queryClient.invalidateQueries({ queryKey: [deployment, key] }))\n      );\n\n      toast.closeAll();\n      toast({\n        title: 'Success',\n        description: 'Your locked collateral amount has been updated.',\n        status: 'success',\n        duration: 5000,\n        variant: 'left-accent',\n      });\n\n      setCollateralChange(ZEROWEI);\n      dispatch({ type: 'success' });\n    },\n\n    onError: (error) => {\n      dispatch({ type: 'error', payload: { error } });\n\n      const contractError = errorParser(error);\n      if (contractError) {\n        console.error(new Error(contractError.name), contractError);\n      }\n      toast.closeAll();\n      toast({\n        title: 'Transaction failed',\n        variant: 'left-accent',\n        description: contractError ? (\n          <ContractError contractError={contractError} />\n        ) : (\n          'Please try again.'\n        ),\n        status: 'error',\n        duration: 3_600_000,\n      });\n      throw Error('Transaction failed', { cause: error });\n    },\n  });\n\n  return (\n    <Flex flexDirection=\"column\" data-cy=\"deposit multistep\">\n      <Text color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n        <ArrowBackIcon\n          cursor=\"pointer\"\n          onClick={() => {\n            dispatch({ type: 'settled' });\n            setCachedCollateralChange(collateralChange);\n            onClose();\n          }}\n          mr={2}\n        />\n        {params.accountId ? <>Manage Collateral</> : <>Open Liquidity Position</>}\n      </Text>\n      <Divider my={4} />\n      <Multistep\n        step={1}\n        title=\"Approve USDC\"\n        subtitle={\n          <>\n            <Amount\n              prefix=\"Approve spending of \"\n              value={cachedCollateralChange}\n              suffix={` USDC.`}\n            />\n          </>\n        }\n        status={{\n          failed: txnStateApproveUSDC.txnStatus === 'error',\n          success: txnStateApproveUSDC.txnStatus === 'success',\n          loading:\n            txnStateApproveUSDC.txnStatus === 'prompting' ||\n            txnStateApproveUSDC.txnStatus === 'pending',\n        }}\n      />\n      <Multistep\n        step={2}\n        title=\"Deposit and Lock USDC\"\n        subtitle={\n          <>\n            {!params.accountId ? <Text>Create new account</Text> : null}\n            {params.accountId ? <Text>Approve update position on behalf</Text> : null}\n            <Amount prefix=\"Deposit and lock \" value={cachedCollateralChange} suffix={` USDC.`} />\n          </>\n        }\n        status={{\n          failed: txnStateDeposit.txnStatus === 'error',\n          success: txnStateDeposit.txnStatus === 'success',\n          loading:\n            txnStateDeposit.txnStatus === 'prompting' || txnStateDeposit.txnStatus === 'pending',\n        }}\n      />\n\n      {txnStateDeposit.txnStatus === 'success' ? (\n        <Button\n          onClick={() => {\n            dispatch({ type: 'settled' });\n            setCachedCollateralChange(collateralChange);\n            onClose();\n          }}\n          mt=\"6\"\n        >\n          Done\n        </Button>\n      ) : (\n        <Button\n          data-cy=\"deposit confirm button\"\n          isLoading={\n            txnStateApproveUSDC.txnStatus === 'prompting' ||\n            txnStateApproveUSDC.txnStatus === 'pending' ||\n            txnStateDeposit.txnStatus === 'prompting' ||\n            txnStateDeposit.txnStatus === 'pending'\n          }\n          isDisabled={true}\n          onClick={() => {\n            window?._paq?.push([\n              'trackEvent',\n              'liquidity',\n              'v3_staking',\n              `submit_deposit_${collateralType?.symbol?.toLowerCase()}_v3`,\n            ]);\n            execDeposit();\n          }}\n          mt=\"6\"\n        >\n          {(() => {\n            if (\n              txnStateApproveUSDC.txnStatus === 'unsent' &&\n              txnStateDeposit.txnStatus === 'unsent'\n            ) {\n              return 'Execute Transaction';\n            }\n            if (\n              txnStateApproveUSDC.txnStatus === 'error' ||\n              txnStateDeposit.txnStatus === 'error'\n            ) {\n              return 'Retry';\n            }\n            if (\n              txnStateApproveUSDC.txnStatus === 'prompting' ||\n              txnStateApproveUSDC.txnStatus === 'pending' ||\n              txnStateDeposit.txnStatus === 'prompting' ||\n              txnStateDeposit.txnStatus === 'pending'\n            ) {\n              return 'Processing...';\n            }\n            return 'Execute Transaction';\n          })()}\n        </Button>\n      )}\n    </Flex>\n  );\n}\n","import { ArrowUpIcon, CheckIcon } from '@chakra-ui/icons';\nimport {\n  Button,\n  CircularProgress,\n  Divider,\n  Flex,\n  Link,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalOverlay,\n  Text,\n} from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { transactionLink } from '@snx-v3/etherscanLink';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { WithdrawIncrease } from '@snx-v3/WithdrawIncrease';\nimport { Wei, wei } from '@synthetixio/wei';\nimport React from 'react';\n\nexport function RepayModal({ txnStatus, txnHash }: { txnStatus: string; txnHash: string | null }) {\n  const { debtChange, setCollateralChange, setDebtChange } =\n    React.useContext(ManagePositionContext);\n  const { data: systemToken } = useSystemToken();\n  const [isOpen, setIsOpen] = React.useState(false);\n  const { network } = useNetwork();\n\n  React.useEffect(() => {\n    if (txnStatus === 'prompting') {\n      setIsOpen(true);\n    }\n    if (txnStatus === 'error') {\n      setIsOpen(false);\n    }\n  }, [txnStatus]);\n\n  // This caching is necessary to keep initial values after success and not reset them to zeroes\n  const [repayAmount, setRepayAmount] = React.useState<Wei | undefined>();\n  React.useEffect(() => {\n    if (debtChange && debtChange.lt(0)) {\n      setRepayAmount(debtChange.abs());\n    }\n  }, [debtChange]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={() => {\n        setCollateralChange(wei(0));\n        setDebtChange(wei(0));\n        setIsOpen(false);\n      }}\n    >\n      <ModalOverlay bg=\"#06061B80\" />\n      <ModalContent\n        bg=\"navy.700\"\n        mt=\"10%\"\n        borderWidth=\"1px\"\n        borderColor=\"gray.900\"\n        minWidth=\"384px\"\n      >\n        <ModalBody data-cy=\"repay dialog\" p={6}>\n          <Text color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n            Repaying Debt\n          </Text>\n\n          <Divider my={4} />\n\n          <Flex\n            position=\"relative\"\n            alignItems=\"center\"\n            gap={4}\n            mb={6}\n            rounded=\"lg\"\n            mt=\"6\"\n            p=\"4\"\n            border=\"2px solid\"\n            transitionProperty=\"border-color\"\n            transitionDuration=\"normal\"\n            borderColor={txnStatus === 'success' ? 'green.500' : 'gray.900'}\n          >\n            <Flex\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              borderRadius=\"100px\"\n              bg={txnStatus === 'success' ? 'green.600' : 'gray.900'}\n              width=\"40px\"\n              height=\"40px\"\n              p={3}\n            >\n              {txnStatus === 'success' ? (\n                <CheckIcon color=\"white\" />\n              ) : (\n                <CircularProgress size=\"25px\" isIndeterminate color=\"gray.700\" />\n              )}\n            </Flex>\n            <Flex\n              flexDirection=\"column\"\n              alignItems=\"space-between\"\n              justifyContent=\"space-between\"\n              ml={2}\n              data-cy=\"claim rewards info\"\n            >\n              {repayAmount ? (\n                <Text fontSize=\"14px\" fontWeight={700} lineHeight=\"20px\" color=\"white\">\n                  <Amount\n                    prefix={txnStatus === 'success' ? 'Repaid ' : 'Repaying '}\n                    value={repayAmount}\n                    suffix={` ${systemToken?.displaySymbol}`}\n                  />\n                </Text>\n              ) : (\n                <Text fontSize=\"12px\" lineHeight=\"16px\" color=\"gray.500\">\n                  Claim your rewards\n                </Text>\n              )}\n            </Flex>\n          </Flex>\n          <WithdrawIncrease />\n          {txnStatus === 'success' ? (\n            <Button\n              mt={5}\n              variant=\"solid\"\n              justifyContent=\"center\"\n              px={3}\n              py={3}\n              width=\"100%\"\n              textAlign=\"center\"\n              onClick={() => setIsOpen(false)}\n            >\n              Done\n            </Button>\n          ) : null}\n          <Flex\n            justifyContent=\"center\"\n            px={3}\n            py={3}\n            mt={6}\n            mb={1}\n            borderTop=\"1px solid\"\n            borderTopColor=\"gray.900\"\n            data-cy=\"transaction hash\"\n          >\n            <Flex\n              as={Link}\n              isExternal\n              variant=\"outline\"\n              href={transactionLink({ chainId: network?.id, txnHash })}\n              fontFamily=\"heading\"\n              color={txnHash ? 'cyan.500' : 'gray.700'}\n              cursor={txnHash ? 'pointer' : 'default'}\n              fontWeight={700}\n              lineHeight=\"20px\"\n              fontSize=\"14px\"\n              target=\"_blank\"\n              mt={3}\n              alignItems=\"center\"\n              gap={1}\n            >\n              {txnHash ? (\n                <>\n                  <Text>View Transaction</Text>\n                  <ArrowUpIcon transform=\"rotate(45deg)\" />\n                </>\n              ) : (\n                <>\n                  <Text>Signing Transaction</Text>\n                </>\n              )}\n            </Flex>\n          </Flex>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import { Button, Flex, Text, useToast } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { ContractError } from '@snx-v3/ContractError';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { TokenIcon } from '@snx-v3/TokenIcon';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useRepay } from '@snx-v3/useRepay';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { useTokenBalance } from '@snx-v3/useTokenBalance';\nimport { wei } from '@synthetixio/wei';\nimport React from 'react';\nimport { RepayModal } from './RepayModal';\n\nexport function Repay() {\n  const [params] = useParams<PositionPageSchemaType>();\n  const { debtChange, setDebtChange } = React.useContext(ManagePositionContext);\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: liquidityPosition, isPending: isPendingLiquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n  const { data: systemToken } = useSystemToken();\n  const { data: systemTokenBalance, isPending: isPendingSystemTokenBalance } = useTokenBalance(\n    systemToken?.address\n  );\n\n  const availableSystemToken =\n    systemTokenBalance && liquidityPosition\n      ? systemTokenBalance.add(liquidityPosition.availableSystemToken)\n      : undefined;\n\n  const {\n    isReady: isReadyRepay,\n    txnState,\n    mutation: mutationRepay,\n  } = useRepay({\n    repayAmount: debtChange && debtChange.lt(0) ? debtChange.abs() : undefined,\n  });\n\n  const toast = useToast({ isClosable: true, duration: 9000 });\n  const errorParser = useContractErrorParser();\n  const onSubmit = React.useCallback(\n    async (e: React.FormEvent) => {\n      e.preventDefault();\n\n      try {\n        toast.closeAll();\n        toast({ title: 'Repaying...', variant: 'left-accent' });\n\n        await mutationRepay.mutateAsync();\n        setDebtChange(ZEROWEI);\n\n        toast.closeAll();\n        toast({\n          title: 'Success',\n          description: 'Your debt has been repaid.',\n          status: 'success',\n          duration: 5000,\n          variant: 'left-accent',\n        });\n      } catch (error: any) {\n        const contractError = errorParser(error);\n        if (contractError) {\n          console.error(new Error(contractError.name), contractError);\n        }\n        toast({\n          title: 'Could not complete repaying',\n          description: contractError ? (\n            <ContractError contractError={contractError} />\n          ) : (\n            'Please try again.'\n          ),\n          status: 'error',\n          variant: 'left-accent',\n          duration: 3_600_000,\n        });\n        throw Error('Repay failed', { cause: error });\n      }\n    },\n    [errorParser, mutationRepay, setDebtChange, toast]\n  );\n\n  return (\n    <Flex flexDirection=\"column\" data-cy=\"repay debt form\" as=\"form\" onSubmit={onSubmit}>\n      <RepayModal txnStatus={txnState.txnStatus} txnHash={txnState.txnHash} />\n      <Text color=\"gray./50\" fontSize=\"sm\" fontWeight=\"700\" mb=\"3\">\n        Repay Debt\n      </Text>\n      <BorderBox display=\"flex\" p={3} mb=\"6\">\n        <Flex alignItems=\"flex-start\" flexDir=\"column\" gap=\"1\">\n          <BorderBox display=\"flex\" py={1.5} px={2.5}>\n            <Text\n              display=\"flex\"\n              gap={2}\n              fontSize=\"16px\"\n              alignItems=\"center\"\n              fontWeight=\"600\"\n              whiteSpace=\"nowrap\"\n            >\n              <TokenIcon symbol={systemToken?.symbol} width={16} height={16} />\n              {systemToken?.displaySymbol}\n            </Text>\n          </BorderBox>\n          <Flex fontSize=\"12px\" gap=\"1\">\n            <Flex\n              gap=\"1\"\n              mr=\"3\"\n              alignItems=\"center\"\n              data-cy=\"current debt amount\"\n              whiteSpace=\"nowrap\"\n            >\n              {isPendingLiquidityPosition || isPendingSystemTokenBalance ? '~' : null}\n              {!(isPendingLiquidityPosition || isPendingSystemTokenBalance) &&\n              liquidityPosition &&\n              availableSystemToken ? (\n                <>\n                  {liquidityPosition.debt.abs().gt(availableSystemToken) ? (\n                    <>\n                      <Amount prefix=\"Available: $\" value={availableSystemToken} />\n                      &nbsp;\n                      <Text\n                        as=\"span\"\n                        cursor=\"pointer\"\n                        onClick={(e) => {\n                          e.preventDefault();\n                          setDebtChange(availableSystemToken.mul(-1));\n                        }}\n                        color=\"cyan.500\"\n                        fontWeight={700}\n                      >\n                        Max\n                      </Text>\n                    </>\n                  ) : null}\n                  {availableSystemToken.gt(liquidityPosition.debt.abs()) ? (\n                    <>\n                      <Amount prefix=\"Debt: $\" value={liquidityPosition.debt.abs()} />\n                      &nbsp;\n                      <Text\n                        as=\"span\"\n                        cursor=\"pointer\"\n                        onClick={(e) => {\n                          e.preventDefault();\n                          setDebtChange(liquidityPosition.debt.neg());\n                        }}\n                        color=\"cyan.500\"\n                        fontWeight={700}\n                      >\n                        Max\n                      </Text>\n                    </>\n                  ) : null}\n                </>\n              ) : null}\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex flexDirection=\"column\" flexGrow={1}>\n          <NumberInput\n            InputProps={{\n              isRequired: true,\n              'data-cy': 'repay amount input',\n              type: 'number',\n              min: 0,\n            }}\n            value={debtChange.abs()}\n            onChange={(val) => setDebtChange(val.mul(-1))}\n            max={liquidityPosition ? liquidityPosition.debt : wei(0)}\n            min={ZEROWEI}\n          />\n          <Text fontSize=\"xs\" color=\"whiteAlpha.700\" alignSelf=\"flex-end\">\n            {isPendingLiquidityPosition ? '~' : null}\n            {!isPendingLiquidityPosition &&\n            liquidityPosition &&\n            liquidityPosition.collateralPrice.gt(0) ? (\n              <Amount prefix=\"$\" value={debtChange.abs()} />\n            ) : null}\n          </Text>\n        </Flex>\n      </BorderBox>\n      <Button\n        data-cy=\"repay submit\"\n        type=\"submit\"\n        isDisabled={!isReadyRepay}\n        onClick={() => {\n          window?._paq?.push([\n            'trackEvent',\n            'liquidity',\n            'v3_staking',\n            `submit_repay_${collateralType?.symbol?.toLowerCase()}_v3`,\n          ]);\n        }}\n      >\n        {debtChange.eq(0) ? 'Enter Amount' : 'Repay'}\n      </Button>\n    </Flex>\n  );\n}\n","import { POOL_ID } from '@snx-v3/constants';\nimport { USDC_BASE_MARKET } from '@snx-v3/isBaseAndromeda';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport { useAccountProxy } from '@snx-v3/useAccountProxy';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { useCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useDebtRepayer } from '@snx-v3/useDebtRepayer';\nimport { useSpotMarketProxy } from '@snx-v3/useSpotMarketProxy';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\nimport React from 'react';\n\nconst log = debug('snx:useClearDebt');\n\nexport const useClearDebt = ({\n  accountId,\n  collateralTypeAddress,\n}: {\n  accountId?: string;\n  collateralTypeAddress?: string;\n}) => {\n  const [txnState, dispatch] = React.useReducer(reducer, initialState);\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: SpotMarketProxy } = useSpotMarketProxy();\n  const { data: AccountProxy } = useAccountProxy();\n  const { data: priceUpdateTx } = useCollateralPriceUpdates();\n\n  const signer = useSigner();\n  const { network } = useNetwork();\n  const provider = useProvider();\n\n  const { data: DebtRepayer } = useDebtRepayer();\n\n  const queryClient = useQueryClient();\n  const mutation = useMutation({\n    mutationFn: async () => {\n      if (!signer || !network || !provider) throw new Error('No signer or network');\n      if (\n        !(\n          CoreProxy &&\n          accountId &&\n          collateralTypeAddress &&\n          SpotMarketProxy &&\n          DebtRepayer &&\n          AccountProxy\n        )\n      ) {\n        return;\n      }\n\n      dispatch({ type: 'prompting' });\n\n      const AccountProxyContract = new ethers.Contract(\n        AccountProxy.address,\n        AccountProxy.abi,\n        signer\n      );\n      const DebtRepayerContract = new ethers.Contract(DebtRepayer.address, DebtRepayer.abi, signer);\n\n      const approveAccountTx = AccountProxyContract.populateTransaction.approve(\n        DebtRepayer.address,\n        accountId\n      );\n\n      const depositDebtToRepay = DebtRepayerContract.populateTransaction.depositDebtToRepay(\n        CoreProxy.address,\n        SpotMarketProxy.address,\n        AccountProxy.address,\n        accountId,\n        POOL_ID,\n        collateralTypeAddress,\n        USDC_BASE_MARKET\n      );\n\n      const callsPromise = Promise.all([approveAccountTx, depositDebtToRepay]);\n      const [calls] = await Promise.all([callsPromise]);\n\n      if (priceUpdateTx) {\n        calls.unshift(priceUpdateTx as any);\n      }\n\n      const walletAddress = await signer.getAddress();\n      const { multicallTxn: erc7412Tx, gasLimit } = await withERC7412(\n        provider,\n        network,\n        calls,\n        'useRepay',\n        walletAddress\n      );\n\n      const txn = await signer.sendTransaction({\n        ...erc7412Tx,\n        gasLimit: gasLimit.mul(15).div(10),\n      });\n      log('txn', txn);\n      dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n      dispatch({ type: 'success' });\n      return receipt;\n    },\n\n    onSuccess: async () => {\n      const deployment = `${network?.id}-${network?.preset}`;\n      await Promise.all(\n        [\n          //\n          'PriceUpdates',\n          'LiquidityPosition',\n          'LiquidityPositions',\n          'TokenBalance',\n          'SynthBalances',\n          'EthBalance',\n          'Allowance',\n          'TransferableSynthetix',\n        ].map((key) => queryClient.invalidateQueries({ queryKey: [deployment, key] }))\n      );\n      dispatch({ type: 'success' });\n    },\n\n    onError: (error) => {\n      dispatch({ type: 'error', payload: { error } });\n      throw error;\n    },\n  });\n  return {\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n};\n","import { CheckIcon } from '@chakra-ui/icons';\nimport { Alert, Button, Flex, Text } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { parseUnits } from '@snx-v3/format';\nimport { useApprove } from '@snx-v3/useApprove';\nimport { useClearDebt } from '@snx-v3/useClearDebt';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useDebtRepayer } from '@snx-v3/useDebtRepayer';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useTokenBalance } from '@snx-v3/useTokenBalance';\nimport { useUSDC } from '@snx-v3/useUSDC';\nimport React from 'react';\n\nexport function RepayAndromedaDebt() {\n  const [params] = useParams<PositionPageSchemaType>();\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: liquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  // Andromeda users pay with USDC\n  const { data: USDC } = useUSDC();\n  const { data: usdcBalance } = useTokenBalance(USDC?.address);\n\n  const {\n    exec: clearDebt,\n    settle: settleRepay,\n    isLoading,\n  } = useClearDebt({\n    accountId: params.accountId,\n    collateralTypeAddress: collateralType?.address,\n  });\n\n  const { data: DebtRepayer } = useDebtRepayer();\n  const {\n    approve,\n    requireApproval,\n    isLoading: approvalLoading,\n    isReady: isReadyApprove,\n  } = useApprove({\n    contractAddress: USDC?.address,\n    // slippage for approval\n    amount: liquidityPosition\n      ? parseUnits(liquidityPosition.debt.toString(), 6).mul(150).div(100)\n      : undefined,\n    spender: DebtRepayer?.address,\n  });\n\n  const submit = React.useCallback(async () => {\n    try {\n      if (requireApproval) {\n        await approve(false);\n      }\n      await clearDebt();\n\n      settleRepay();\n    } catch (error) {}\n  }, [approve, clearDebt, requireApproval, settleRepay]);\n\n  const hasEnoughBalance =\n    liquidityPosition &&\n    usdcBalance &&\n    liquidityPosition.availableSystemToken.add(usdcBalance).gte(liquidityPosition.debt);\n\n  return (\n    <Flex data-cy=\"repay debt form\" flexDirection=\"column\">\n      <Text fontSize=\"md\" fontWeight=\"700\" mb=\"0.5\">\n        Repay USDC\n      </Text>\n      {liquidityPosition ? (\n        <>\n          {liquidityPosition.debt.lte(0) ? (\n            <Alert\n              data-cy=\"repay debt success\"\n              my={2}\n              status=\"success\"\n              rounded=\"base\"\n              borderRadius=\"6px\"\n            >\n              <Flex bg=\"green.500\" p=\"1\" rounded=\"full\" mr=\"2\">\n                <CheckIcon w=\"12px\" h=\"12px\" color=\"green.900\" />\n              </Flex>\n              <Text color=\"white\" fontSize=\"16px\" fontWeight={400}>\n                Your account currently has no debt.\n              </Text>\n            </Alert>\n          ) : null}\n\n          {liquidityPosition.debt.gt(0) ? (\n            <>\n              <Text fontSize=\"sm\" color=\"gray.400\" mb=\"4\">\n                Your account currently has a positive debt. This amount must be paid to initiate\n                collateral withdrawal.\n              </Text>\n              <Button\n                isDisabled={!hasEnoughBalance || !isReadyApprove}\n                isLoading={isLoading || approvalLoading}\n                onClick={() => {\n                  window?._paq?.push([\n                    'trackEvent',\n                    'liquidity',\n                    'v3_staking',\n                    `submit_repay_${collateralType?.symbol?.toLowerCase()}_v3`,\n                  ]);\n                  submit();\n                }}\n                data-cy=\"repay debt submit\"\n              >\n                <Amount\n                  prefix=\"Repay USDC $\"\n                  value={liquidityPosition.debt}\n                  suffix={hasEnoughBalance ? '' : ' (Insufficient Balance)'}\n                />\n              </Button>\n            </>\n          ) : null}\n        </>\n      ) : null}\n    </Flex>\n  );\n}\n","import { POOL_ID } from '@snx-v3/constants';\nimport { parseUnits } from '@snx-v3/format';\nimport { getSpotMarketId } from '@snx-v3/isBaseAndromeda';\nimport { notNil } from '@snx-v3/tsHelpers';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport { approveAbi } from '@snx-v3/useApprove';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { useCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useGetUSDTokens } from '@snx-v3/useGetUSDTokens';\nimport { useSpotMarketProxy } from '@snx-v3/useSpotMarketProxy';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport Wei from '@synthetixio/wei';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { BigNumber, ethers } from 'ethers';\nimport { useReducer } from 'react';\n\nconst log = debug('snx:useRepayBaseAndromeda');\n\nexport const useRepayBaseAndromeda = ({\n  accountId,\n  collateralTypeAddress,\n  debtChange,\n  availableUSDCollateral,\n  collateralSymbol,\n}: {\n  accountId?: string;\n  collateralTypeAddress?: string;\n  availableUSDCollateral?: Wei;\n  debtChange: Wei;\n  collateralSymbol?: string;\n}) => {\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: systemToken } = useSystemToken();\n  const { data: SpotMarketProxy } = useSpotMarketProxy();\n  const { data: priceUpdateTx } = useCollateralPriceUpdates();\n  const { data: usdTokens } = useGetUSDTokens();\n\n  const signer = useSigner();\n  const { network } = useNetwork();\n  const provider = useProvider();\n\n  const queryClient = useQueryClient();\n  const mutation = useMutation({\n    mutationFn: async () => {\n      if (!signer || !network || !provider) throw new Error('No signer or network');\n\n      if (\n        !(\n          CoreProxy &&\n          accountId &&\n          collateralTypeAddress &&\n          systemToken &&\n          SpotMarketProxy &&\n          usdTokens?.sUSD\n        )\n      ) {\n        return;\n      }\n\n      if (!availableUSDCollateral) return;\n      if (debtChange.eq(0)) return;\n      const debtChangeAbs = debtChange.abs();\n      const amountToDeposit = debtChangeAbs.sub(availableUSDCollateral);\n      const collateralAmount = amountToDeposit.gt(0)\n        ? parseUnits(amountToDeposit.toString(), 6)\n        : BigNumber.from(0);\n\n      dispatch({ type: 'prompting' });\n\n      const spotMarketId = getSpotMarketId(collateralSymbol);\n\n      const SpotMarketProxyContract = new ethers.Contract(\n        SpotMarketProxy.address,\n        SpotMarketProxy.abi,\n        signer\n      );\n\n      // USDC or stataUSDC to sUSDC or sStataUSDC\n      const wrap = collateralAmount.gt(0)\n        ? SpotMarketProxyContract.populateTransaction.wrap(spotMarketId, collateralAmount, 0)\n        : undefined;\n\n      const Synth_Contract = new ethers.Contract(collateralTypeAddress, approveAbi, signer);\n      const synth_approval = amountToDeposit.gt(0)\n        ? Synth_Contract.populateTransaction.approve(\n            SpotMarketProxy.address,\n            amountToDeposit.toBN()\n          )\n        : undefined;\n\n      // sUSDC or sStataUSDC => snxUSD\n      const sell_synth = amountToDeposit.gt(0)\n        ? SpotMarketProxyContract.populateTransaction.sell(\n            spotMarketId,\n            amountToDeposit.toBN(),\n            0,\n            ethers.constants.AddressZero\n          )\n        : undefined;\n\n      // approve sUSD to Core\n      const SystemTokenContract = new ethers.Contract(systemToken.address, approveAbi, signer);\n      const sUSD_Approval = amountToDeposit.gt(0)\n        ? SystemTokenContract.populateTransaction.approve(CoreProxy.address, amountToDeposit.toBN())\n        : undefined;\n\n      const CoreProxyContract = new ethers.Contract(CoreProxy.address, CoreProxy.abi, signer);\n\n      // Only deposit if user doesn't have enough sUSD collateral\n      const deposit = amountToDeposit.lte(0)\n        ? undefined\n        : CoreProxyContract.populateTransaction.deposit(\n            BigNumber.from(accountId),\n            systemToken.address,\n            amountToDeposit.toBN() // only deposit what's needed\n          );\n\n      const burn = CoreProxyContract.populateTransaction.burnUsd(\n        BigNumber.from(accountId),\n        BigNumber.from(POOL_ID),\n        collateralTypeAddress,\n        debtChangeAbs.toBN()\n      );\n\n      const callsPromise = Promise.all(\n        [wrap, synth_approval, sell_synth, sUSD_Approval, deposit, burn].filter(notNil)\n      );\n\n      const [calls] = await Promise.all([callsPromise]);\n      if (priceUpdateTx) {\n        calls.unshift(priceUpdateTx as any);\n      }\n\n      const walletAddress = await signer.getAddress();\n      const { multicallTxn: erc7412Tx, gasLimit } = await withERC7412(\n        provider,\n        network,\n        calls,\n        'useRepay',\n        walletAddress\n      );\n\n      const txn = await signer.sendTransaction({\n        ...erc7412Tx,\n        gasLimit: gasLimit.mul(15).div(10),\n      });\n      log('txn', txn);\n      dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n      return receipt;\n    },\n\n    onSuccess: async () => {\n      const deployment = `${network?.id}-${network?.preset}`;\n      await Promise.all(\n        [\n          //\n          'PriceUpdates',\n          'LiquidityPosition',\n          'LiquidityPositions',\n          'TokenBalance',\n          'SynthBalances',\n          'EthBalance',\n          'Allowance',\n        ].map((key) => queryClient.invalidateQueries({ queryKey: [deployment, key] }))\n      );\n      dispatch({ type: 'success' });\n    },\n\n    onError: (error) => {\n      dispatch({ type: 'error', payload: { error } });\n      throw error;\n    },\n  });\n  return {\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n};\n","import { USDC_BASE_MARKET } from '@snx-v3/isBaseAndromeda';\nimport { Network, useNetwork, useProviderForChain } from '@snx-v3/useBlockchain';\nimport { useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { useSpotMarketProxy } from '@snx-v3/useSpotMarketProxy';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { useQuery } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\n\nexport function useGetUSDTokens(customNetwork?: Network) {\n  const { network: currentNetwork } = useNetwork();\n  const network = customNetwork ?? currentNetwork;\n  const provider = useProviderForChain(network);\n\n  const { data: collateralTypes } = useCollateralTypes(false, customNetwork);\n  const { data: SpotMarketProxy } = useSpotMarketProxy(customNetwork);\n  const { data: systemToken } = useSystemToken(customNetwork);\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'GetUSDTokens'],\n    enabled: Boolean(\n      SpotMarketProxy && provider && network && collateralTypes?.length && systemToken\n    ),\n    queryFn: async () => {\n      if (!(SpotMarketProxy && provider && network && collateralTypes?.length && systemToken)) {\n        throw 'OMFG';\n      }\n      const SpotMarketProxyContract = new ethers.Contract(\n        SpotMarketProxy.address,\n        SpotMarketProxy.abi,\n        provider\n      );\n\n      const USDC: string =\n        network?.preset === 'andromeda'\n          ? (await SpotMarketProxyContract.getWrapper(USDC_BASE_MARKET))?.wrapCollateralType\n          : undefined;\n\n      return {\n        snxUSD: systemToken.address,\n        sUSD: collateralTypes?.find((type) =>\n          network?.preset === 'andromeda'\n            ? type.symbol.toLowerCase() === 'usdc'\n            : type.symbol.toLowerCase() === 'susdc'\n        )?.tokenAddress,\n        USDC,\n      };\n    },\n  });\n}\n","import { assign, createMachine } from 'xstate';\n\nexport const Events = {\n  SET_REQUIRE_APPROVAL: 'SET_REQUIRE_APPROVAL',\n  SET_INFINITE_APPROVAL: 'SET_INFINITE_APPROVAL',\n  RETRY: 'RETRY',\n  RUN: 'RUN',\n  SUCCESS: 'SUCCESS',\n  FAILURE: 'FAILURE',\n  RESET: 'RESET',\n} as const;\n\nexport const State = {\n  idle: 'idle',\n  approve: 'approve',\n  repay: 'repay',\n  failed: 'failed',\n  success: 'success',\n} as const;\n\nconst FailedSteps = {\n  [State.approve]: State.approve,\n  [State.repay]: State.repay,\n} as const;\n\nexport const ServiceNames = {\n  approveSUSD: 'approveSUSD',\n  executeRepay: 'executeRepay',\n} as const;\n\ntype Context = {\n  error: {\n    error: Error;\n    step: keyof typeof FailedSteps;\n  } | null;\n  requireApproval: boolean;\n  infiniteApproval: boolean;\n};\n\ntype EventNamesType = typeof Events;\ntype RepayEvents =\n  | { type: EventNamesType['SET_REQUIRE_APPROVAL']; requireApproval: boolean }\n  | { type: EventNamesType['SET_INFINITE_APPROVAL']; infiniteApproval: boolean }\n  | { type: EventNamesType['RETRY'] }\n  | { type: EventNamesType['RUN'] }\n  | { type: EventNamesType['SUCCESS'] }\n  | { type: EventNamesType['FAILURE'] }\n  | { type: EventNamesType['RESET'] };\n\ntype StateType = typeof State;\ntype MachineState =\n  | {\n      value: StateType['idle'];\n      context: Context & { error: null };\n    }\n  | {\n      value: StateType['approve'];\n      context: Context & { error: null };\n    }\n  | {\n      value: StateType['repay'];\n      context: Context & { error: null };\n    }\n  | {\n      value: StateType['failed'];\n      context: Context & { error: { error: Error; step: keyof typeof FailedSteps } };\n    }\n  | {\n      value: StateType['success'];\n      context: Context & {\n        error: null;\n      };\n    };\n\nconst initialContext = {\n  error: null,\n  requireApproval: false,\n  infiniteApproval: false,\n};\n\nexport const RepayMachine = createMachine<Context, RepayEvents, MachineState>({\n  id: 'RepayMachine',\n  initial: State.idle,\n  predictableActionArguments: true,\n  context: initialContext,\n  on: {\n    [Events.RUN]: {\n      target: State.repay,\n      actions: assign({\n        error: (_) => initialContext.error,\n        requireApproval: (_) => initialContext.requireApproval,\n        infiniteApproval: (_) => initialContext.infiniteApproval,\n      }),\n    },\n    [Events.SET_REQUIRE_APPROVAL]: {\n      actions: assign({ requireApproval: (_context, event) => event.requireApproval }),\n    },\n\n    [Events.SET_INFINITE_APPROVAL]: {\n      actions: assign({ infiniteApproval: (_context, event) => event.infiniteApproval }),\n    },\n  },\n  states: {\n    [State.idle]: {\n      on: {\n        [Events.RUN]: [\n          { target: State.approve, cond: (context) => context.requireApproval },\n          { target: State.repay },\n        ],\n      },\n    },\n\n    [State.approve]: {\n      invoke: {\n        src: ServiceNames.approveSUSD,\n        onDone: {\n          target: State.repay,\n        },\n        onError: {\n          target: State.failed,\n          actions: assign({\n            error: (_context, event) => ({ error: event.data, step: FailedSteps.approve }),\n          }),\n        },\n      },\n    },\n    [State.repay]: {\n      invoke: {\n        src: ServiceNames.executeRepay,\n        onDone: {\n          target: State.success,\n        },\n        onError: {\n          target: State.failed,\n          actions: assign({\n            error: (_context, event) => ({ error: event.data, step: FailedSteps.repay }),\n          }),\n        },\n      },\n    },\n    [State.failed]: {\n      on: {\n        [Events.RETRY]: [\n          {\n            target: State.approve,\n            cond: (c) => c.error?.step === FailedSteps.approve,\n            actions: assign({ error: (_) => null }),\n          },\n\n          {\n            target: State.repay,\n            cond: (c) => c.error?.step === FailedSteps.repay,\n            actions: assign({ error: (_) => null }),\n          },\n        ],\n      },\n    },\n    [State.success]: {},\n  },\n});\n","import { ArrowBackIcon } from '@chakra-ui/icons';\nimport { Button, Divider, Link, Text, useToast } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { D18, D6, ZEROWEI } from '@snx-v3/constants';\nimport { ContractError } from '@snx-v3/ContractError';\nimport { LiquidityPositionUpdated } from '@snx-v3/Manage';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { Multistep } from '@snx-v3/Multistep';\nimport { useApprove } from '@snx-v3/useApprove';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useRepay } from '@snx-v3/useRepay';\nimport { useRepayBaseAndromeda } from '@snx-v3/useRepayBaseAndromeda';\nimport { useSpotMarketProxy } from '@snx-v3/useSpotMarketProxy';\nimport { useSynthTokens } from '@snx-v3/useSynthTokens';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { useMachine } from '@xstate/react';\nimport React from 'react';\nimport { Events, RepayMachine, ServiceNames, State } from './RepayMachine';\n\nexport function RepayModal({ onClose }: { onClose: () => void }) {\n  const { debtChange, setDebtChange } = React.useContext(ManagePositionContext);\n  const [params] = useParams<PositionPageSchemaType>();\n\n  const { network } = useNetwork();\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n\n  const { data: liquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  const { data: systemToken } = useSystemToken();\n\n  const { exec: execRepay, settle: settleRepay } = useRepay({\n    repayAmount: debtChange && debtChange.lt(0) ? debtChange.abs() : undefined,\n  });\n\n  const { exec: execRepayBaseAndromeda, settle: settleRepayBaseAndromeda } = useRepayBaseAndromeda({\n    accountId: params.accountId,\n    collateralTypeAddress: collateralType?.tokenAddress,\n    debtChange,\n    availableUSDCollateral: liquidityPosition ? liquidityPosition.availableSystemToken : undefined,\n  });\n\n  const toast = useToast({ isClosable: true, duration: 9000 });\n\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: SpotMarketProxy } = useSpotMarketProxy();\n\n  const errorParser = useContractErrorParser();\n  const amountToDeposit = debtChange\n    .abs()\n    .sub(liquidityPosition ? liquidityPosition.availableSystemToken : 0);\n\n  const { data: synthTokens } = useSynthTokens();\n  const wrapperToken = React.useMemo(() => {\n    if (synthTokens && collateralType) {\n      return synthTokens.find((synth) => synth.address === collateralType.tokenAddress)?.token\n        ?.address;\n    }\n  }, [collateralType, synthTokens]);\n\n  const collateralAddress = network?.preset === 'andromeda' ? wrapperToken : systemToken?.address;\n\n  const {\n    approve,\n    requireApproval,\n    isReady: isReadyApprove,\n  } = useApprove({\n    contractAddress: collateralAddress,\n    amount:\n      network?.preset === 'andromeda'\n        ? amountToDeposit.toBN().mul(D6).div(D18) // On Base we use USDC and it has 6 decimals\n        : amountToDeposit.toBN(),\n    spender: network?.preset === 'andromeda' ? SpotMarketProxy?.address : CoreProxy?.address,\n  });\n\n  const [state, send] = useMachine(RepayMachine, {\n    services: {\n      [ServiceNames.approveSUSD]: async () => {\n        try {\n          toast({\n            title: `Approve ${systemToken?.displaySymbol} for transfer`,\n            description: 'The next transaction will repay your debt.',\n            status: 'info',\n            variant: 'left-accent',\n          });\n\n          await approve(Boolean(state.context.infiniteApproval));\n        } catch (error: any) {\n          const contractError = errorParser(error);\n          if (contractError) {\n            console.error(new Error(contractError.name), contractError);\n          }\n          toast.closeAll();\n          toast({\n            title: 'Approval failed',\n            description: contractError ? (\n              <ContractError contractError={contractError} />\n            ) : (\n              'Please try again.'\n            ),\n            status: 'error',\n            variant: 'left-accent',\n            duration: 3_600_000,\n          });\n          throw Error('Approve failed', { cause: error });\n        }\n      },\n\n      [ServiceNames.executeRepay]: async () => {\n        try {\n          toast.closeAll();\n          toast({ title: 'Repaying...', variant: 'left-accent' });\n\n          if (network?.preset === 'andromeda') {\n            await execRepayBaseAndromeda();\n          } else {\n            await execRepay();\n          }\n\n          setDebtChange(ZEROWEI);\n\n          toast.closeAll();\n          toast({\n            title: 'Success',\n            description: 'Your debt has been repaid.',\n            status: 'success',\n            duration: 5000,\n            variant: 'left-accent',\n          });\n        } catch (error: any) {\n          const contractError = errorParser(error);\n          if (contractError) {\n            console.error(new Error(contractError.name), contractError);\n          }\n          toast({\n            title: 'Could not complete repaying',\n            description: contractError ? (\n              <ContractError contractError={contractError} />\n            ) : (\n              'Please try again.'\n            ),\n            status: 'error',\n            variant: 'left-accent',\n            duration: 3_600_000,\n          });\n          throw Error('Repay failed', { cause: error });\n        }\n      },\n    },\n  });\n  const needToDeposit = amountToDeposit.gt(0);\n\n  React.useEffect(() => {\n    send(Events.SET_REQUIRE_APPROVAL, { requireApproval: requireApproval && needToDeposit });\n  }, [needToDeposit, requireApproval, send]);\n\n  const onSubmit = React.useCallback(async () => {\n    if (state.matches(State.success)) {\n      send(Events.RESET);\n      onClose();\n      return;\n    }\n    if (state.context.error) {\n      send(Events.RETRY);\n      return;\n    }\n    send(Events.RUN);\n  }, [onClose, send, state]);\n\n  const symbol = network?.preset === 'andromeda' ? 'USDC' : systemToken?.displaySymbol;\n\n  if (state.matches(State.success)) {\n    return (\n      <LiquidityPositionUpdated\n        onClose={onSubmit}\n        title=\"Debt successfully updated\"\n        subline={\n          <>\n            Your <b>debt</b> has been updated. To learn more, visit the{' '}\n            <Link href=\"https://docs.synthetix.io/\" target=\"_blank\" color=\"cyan.500\">\n              Synthetix V3 Documentation\n            </Link>\n          </>\n        }\n        alertText={\n          <>\n            <b>Debt</b> successfully updated\n          </>\n        }\n      />\n    );\n  }\n\n  return (\n    <div data-cy=\"repay multistep\">\n      <Text color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n        <ArrowBackIcon\n          cursor=\"pointer\"\n          onClick={() => {\n            settleRepay();\n            settleRepayBaseAndromeda();\n            onClose();\n          }}\n          mr={2}\n        />\n        Manage Debt\n      </Text>\n      <Divider my={4} />\n      <Multistep\n        step={1}\n        title={`Approve ${symbol} transfer`}\n        status={{\n          failed: state.context.error?.step === State.approve,\n          success: !state.context.requireApproval || state.matches(State.success),\n          loading: state.matches(State.approve) && !state.context.error,\n        }}\n        checkboxLabel={\n          state.context.requireApproval\n            ? `Approve unlimited ${symbol} transfers to Synthetix.`\n            : undefined\n        }\n        checkboxProps={{\n          isChecked: state.context.infiniteApproval,\n          onChange: (e) =>\n            send(Events.SET_INFINITE_APPROVAL, { infiniteApproval: e.target.checked }),\n        }}\n      />\n      <Multistep\n        step={2}\n        title=\"Repay\"\n        subtitle={\n          <Text>\n            Repay <Amount value={debtChange.abs()} suffix={` ${symbol}`} />\n          </Text>\n        }\n        status={{\n          failed: state.context.error?.step === State.repay,\n          success: state.matches(State.success),\n          loading: state.matches(State.repay) && !state.context.error,\n        }}\n      />\n\n      <Button\n        isDisabled={state.matches(State.approve) || state.matches(State.repay) || !isReadyApprove}\n        onClick={() => {\n          window?._paq?.push([\n            'trackEvent',\n            'liquidity',\n            'v3_staking',\n            `submit_repay_${collateralType?.symbol?.toLowerCase()}_v3`,\n          ]);\n          onSubmit();\n        }}\n        width=\"100%\"\n        mt=\"6\"\n        data-cy=\"repay confirm button\"\n      >\n        {(() => {\n          switch (true) {\n            case Boolean(state.context.error):\n              return 'Retry';\n            case state.matches(State.approve) || state.matches(State.repay):\n              return 'Processing...';\n            case state.matches(State.success):\n              return 'Continue';\n            default:\n              return 'Execute Transaction';\n          }\n        })()}\n      </Button>\n    </div>\n  );\n}\n","import { POOL_ID } from '@snx-v3/constants';\nimport { contractsHash } from '@snx-v3/tsHelpers';\nimport { useNetwork, useProvider } from '@snx-v3/useBlockchain';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { erc7412Call } from '@snx-v3/withERC7412';\nimport { SmallIntSchema, WeiSchema } from '@snx-v3/zod';\nimport { useQuery } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\nimport { z } from 'zod';\n\nexport const MarketConfigurationSchema = z.object({\n  id: SmallIntSchema,\n  weight: WeiSchema,\n  maxDebtShareValue: WeiSchema,\n  isLocked: z.boolean(),\n});\n\nexport const PoolConfigurationSchema = z.object({\n  id: z.number(),\n  markets: MarketConfigurationSchema.array(),\n  isAnyMarketLocked: z.boolean(),\n});\n\nexport const usePoolConfiguration = () => {\n  const { network } = useNetwork();\n  const { data: CoreProxy } = useCoreProxy();\n  const provider = useProvider();\n\n  return useQuery({\n    enabled: Boolean(CoreProxy && network && provider),\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'PoolConfiguration',\n      { contractsHash: contractsHash([CoreProxy]) },\n    ],\n    queryFn: async () => {\n      if (!(CoreProxy && network && provider)) throw 'OMFG';\n      const CoreProxyContract = new ethers.Contract(CoreProxy.address, CoreProxy.abi, provider);\n\n      const marketsData: {\n        marketId: ethers.BigNumber;\n        maxDebtShareValueD18: ethers.BigNumber;\n        weightD18: ethers.BigNumber;\n      }[] = await CoreProxyContract.getPoolConfiguration(ethers.BigNumber.from(POOL_ID));\n      const markets = marketsData.map(({ marketId, maxDebtShareValueD18, weightD18 }) => ({\n        id: marketId,\n        weight: maxDebtShareValueD18,\n        maxDebtShareValue: weightD18,\n      }));\n\n      const allCalls = await Promise.all(\n        markets.map((m) => CoreProxyContract.populateTransaction.isMarketCapacityLocked(m.id))\n      );\n\n      const decoded = await erc7412Call(\n        network,\n        provider,\n        allCalls,\n        (decodedMulticall) => {\n          return decodedMulticall.map(({ returnData }) => {\n            const [isMarketCapacityLocked] = CoreProxyContract.interface.decodeFunctionResult(\n              'isMarketCapacityLocked',\n              returnData\n            );\n            return isMarketCapacityLocked;\n          });\n        },\n        'isMarketCapacityLocked'\n      );\n\n      return PoolConfigurationSchema.parse({\n        id: parseInt(POOL_ID),\n        markets: markets.map((market, i) => ({\n          ...market,\n          isLocked: decoded[i],\n        })),\n        isAnyMarketLocked: decoded.some(Boolean),\n      });\n    },\n  });\n};\n","import { useEffect } from 'react';\nimport { useAccountCollateralUnlockDate } from '@snx-v3/useAccountCollateralUnlockDate';\nimport { useTimer } from 'react-timer-hook';\n\nexport function useWithdrawTimer(accountId: string | undefined) {\n  const { data: accountCollateralUnlockDate, isLoading: isLoadingDate } =\n    useAccountCollateralUnlockDate({\n      accountId,\n    });\n  const { minutes, hours, seconds, isRunning, restart } = useTimer({\n    expiryTimestamp: new Date(),\n    autoStart: false,\n  });\n\n  useEffect(() => {\n    if (accountCollateralUnlockDate && !isLoadingDate) {\n      restart(accountCollateralUnlockDate, true);\n    }\n  }, [accountCollateralUnlockDate, isLoadingDate, restart]);\n\n  return {\n    minutes,\n    hours,\n    seconds,\n    isRunning: isRunning && !![minutes, hours, seconds].find((a) => a > 0),\n    accountCollateralUnlockDate,\n  };\n}\n","import { ArrowUpIcon, CheckIcon } from '@chakra-ui/icons';\nimport {\n  Button,\n  CircularProgress,\n  Divider,\n  Flex,\n  Link,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalOverlay,\n  Text,\n} from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { transactionLink } from '@snx-v3/etherscanLink';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { Wei, wei } from '@synthetixio/wei';\nimport React from 'react';\n\nexport function UndelegateModal({\n  txnStatus,\n  approvalTxnStatus,\n  txnHash,\n}: {\n  txnStatus: string;\n  approvalTxnStatus?: string;\n  txnHash: string | null;\n}) {\n  const [params] = useParams<PositionPageSchemaType>();\n  const { collateralChange, setCollateralChange, setDebtChange } =\n    React.useContext(ManagePositionContext);\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const [isOpen, setIsOpen] = React.useState(false);\n  const { network } = useNetwork();\n\n  React.useEffect(() => {\n    if (txnStatus === 'prompting' || approvalTxnStatus === 'prompting') {\n      setIsOpen(true);\n    }\n    if (txnStatus === 'error' || approvalTxnStatus === 'error') {\n      setIsOpen(false);\n    }\n  }, [approvalTxnStatus, txnStatus]);\n\n  // This caching is necessary to keep initial values after success and not reset them to zeroes\n  const [undelegateAmount, setUndelegateAmount] = React.useState<Wei | undefined>();\n  React.useEffect(() => {\n    if (collateralChange && collateralChange.lt(0)) {\n      setUndelegateAmount(collateralChange.abs());\n    }\n  }, [collateralChange]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={() => {\n        setCollateralChange(wei(0));\n        setDebtChange(wei(0));\n        setIsOpen(false);\n      }}\n    >\n      <ModalOverlay bg=\"#06061B80\" />\n      <ModalContent\n        bg=\"navy.700\"\n        mt=\"10%\"\n        borderWidth=\"1px\"\n        borderColor=\"gray.900\"\n        minWidth=\"384px\"\n      >\n        <ModalBody data-cy=\"undelegate dialog\" p={6}>\n          <Text color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n            Unlocking Collateral\n          </Text>\n\n          <Divider my={4} />\n\n          <Flex\n            position=\"relative\"\n            alignItems=\"center\"\n            gap={4}\n            mb={6}\n            rounded=\"lg\"\n            mt=\"6\"\n            p=\"4\"\n            border=\"2px solid\"\n            transitionProperty=\"border-color\"\n            transitionDuration=\"normal\"\n            borderColor={txnStatus === 'success' ? 'green.500' : 'gray.900'}\n          >\n            <Flex\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              borderRadius=\"100px\"\n              bg={txnStatus === 'success' ? 'green.600' : 'gray.900'}\n              width=\"40px\"\n              height=\"40px\"\n              p={3}\n            >\n              {txnStatus === 'success' ? (\n                <CheckIcon color=\"white\" />\n              ) : (\n                <CircularProgress size=\"25px\" isIndeterminate color=\"gray.700\" />\n              )}\n            </Flex>\n            <Flex\n              flexDirection=\"column\"\n              alignItems=\"space-between\"\n              justifyContent=\"space-between\"\n              ml={2}\n              data-cy=\"undelegate collateral info\"\n            >\n              {undelegateAmount ? (\n                <Text fontSize=\"14px\" fontWeight={700} lineHeight=\"20px\" color=\"white\">\n                  <Amount\n                    prefix={txnStatus === 'success' ? 'Unlocked ' : 'Unlocking '}\n                    value={undelegateAmount}\n                    suffix={` ${collateralType?.displaySymbol}`}\n                  />\n                </Text>\n              ) : null}\n            </Flex>\n          </Flex>\n\n          {txnStatus === 'success' ? (\n            <Button\n              mt={5}\n              variant=\"solid\"\n              justifyContent=\"center\"\n              px={3}\n              py={3}\n              width=\"100%\"\n              textAlign=\"center\"\n              onClick={() => setIsOpen(false)}\n            >\n              Done\n            </Button>\n          ) : null}\n          <Flex\n            justifyContent=\"center\"\n            px={3}\n            py={3}\n            mt={6}\n            mb={1}\n            borderTop=\"1px solid\"\n            borderTopColor=\"gray.900\"\n            data-cy=\"transaction hash\"\n          >\n            <Flex\n              as={Link}\n              isExternal\n              variant=\"outline\"\n              href={transactionLink({ chainId: network?.id, txnHash })}\n              fontFamily=\"heading\"\n              color={txnHash ? 'cyan.500' : 'gray.700'}\n              cursor={txnHash ? 'pointer' : 'default'}\n              fontWeight={700}\n              lineHeight=\"20px\"\n              fontSize=\"14px\"\n              target=\"_blank\"\n              mt={3}\n              alignItems=\"center\"\n              gap={1}\n            >\n              {txnHash ? (\n                <>\n                  <Text>View Transaction</Text>\n                  <ArrowUpIcon transform=\"rotate(45deg)\" />\n                </>\n              ) : (\n                <>\n                  <Text>Signing Transaction</Text>\n                </>\n              )}\n            </Flex>\n          </Flex>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertTitle,\n  Button,\n  Collapse,\n  Flex,\n  Link,\n  Text,\n  useToast,\n} from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { ChangeStat } from '@snx-v3/ChangeStat';\nimport { D18, D6, ZEROWEI } from '@snx-v3/constants';\nimport { ContractError } from '@snx-v3/ContractError';\nimport { CRatioChangeStat } from '@snx-v3/CRatioBar';\nimport { currency } from '@snx-v3/format';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { TokenIcon } from '@snx-v3/TokenIcon';\nimport { TransactionSummary } from '@snx-v3/TransactionSummary';\nimport { useApprove } from '@snx-v3/useApprove';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { useDebtRepayer } from '@snx-v3/useDebtRepayer';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { makeSearch, type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { usePoolConfiguration } from '@snx-v3/usePoolConfiguration';\nimport { useUndelegate } from '@snx-v3/useUndelegate';\nimport { useUndelegateBaseAndromeda } from '@snx-v3/useUndelegateBaseAndromeda';\nimport { useUSDC } from '@snx-v3/useUSDC';\nimport { useWithdrawTimer } from '@snx-v3/useWithdrawTimer';\nimport { validatePosition } from '@snx-v3/validatePosition';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { ethers } from 'ethers';\nimport React from 'react';\nimport { UndelegateModal } from './UndelegateModal';\n\nexport function Undelegate() {\n  const [params, setParams] = useParams<PositionPageSchemaType>();\n  const { collateralChange, debtChange, setCollateralChange } =\n    React.useContext(ManagePositionContext);\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n\n  const poolConfiguration = usePoolConfiguration();\n  const { network } = useNetwork();\n  const { data: USDC } = useUSDC();\n  const { data: DebtRepayer } = useDebtRepayer();\n\n  const { data: liquidityPosition, isPending: isPendingLiquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  const collateralPrice = liquidityPosition?.collateralPrice;\n\n  const { newDebt } = validatePosition({\n    issuanceRatioD18: collateralType?.issuanceRatioD18,\n    collateralAmount: liquidityPosition?.collateralAmount,\n    collateralPrice,\n    debt: liquidityPosition?.debt,\n    collateralChange: collateralChange,\n    debtChange: debtChange,\n  });\n\n  const approveAndromedaUSDCAmount = React.useMemo(() => {\n    if (network?.preset !== 'andromeda') {\n      return ethers.BigNumber.from(0);\n    }\n    if (!liquidityPosition) {\n      return undefined;\n    }\n    if (liquidityPosition.debt.lte(0)) {\n      return ethers.BigNumber.from(0);\n    }\n    return liquidityPosition.debt.toBN().mul(D6).div(D18).mul(110).div(100);\n  }, [liquidityPosition, network?.preset]);\n  const {\n    approve,\n    requireApproval,\n    txnState: approvalTxnState,\n    isReady: isReadyApproveAndromedaUSDC,\n  } = useApprove({\n    contractAddress: USDC?.address,\n    amount: approveAndromedaUSDCAmount,\n    spender: DebtRepayer?.address,\n  });\n\n  const {\n    isReady: isReadyUndelegate,\n    txnState: undelegateTxnState,\n    mutation: undelegate,\n  } = useUndelegate({\n    undelegateAmount:\n      collateralChange && collateralChange.lt(0) ? collateralChange.abs() : undefined,\n  });\n\n  const {\n    isReady: isReadyUndelegateAndromeda,\n    txnState: undelegateAndromedaTxnState,\n    mutation: undelegateAndromeda,\n  } = useUndelegateBaseAndromeda({\n    undelegateAmount:\n      collateralChange && collateralChange.lt(0) ? collateralChange.abs() : undefined,\n  });\n\n  const isReady =\n    (network?.preset === 'andromeda' &&\n      isReadyApproveAndromedaUSDC &&\n      isReadyUndelegateAndromeda) ||\n    (network?.preset !== 'andromeda' && isReadyUndelegate);\n\n  const txnState =\n    network?.preset === 'andromeda' ? undelegateAndromedaTxnState : undelegateTxnState;\n\n  const maxWithdrawable = liquidityPosition?.availableCollateral;\n\n  // To get the max withdrawable collateral we look at the new debt and the issuance ratio.\n  // This gives us the amount in dollar. We then divide by the collateral price.\n  // To avoid the transaction failing due to small price deviations, we also apply a 2% buffer by multiplying with 0.98\n  const max = (() => {\n    if (!liquidityPosition || !collateralType) {\n      return undefined;\n    }\n    const { collateralAmount, collateralValue } = liquidityPosition;\n\n    if (network?.preset === 'andromeda') {\n      return collateralAmount;\n    }\n\n    // if debt is negative it's actually credit, which means we can undelegate all collateral\n    if (newDebt.lte(0)) return collateralAmount;\n\n    const minCollateralRequired = newDebt.mul(collateralType.liquidationRatioD18);\n\n    if (collateralValue.lt(minCollateralRequired))\n      // If you're below issuance ratio, you can't withdraw anything\n      return wei(0);\n\n    const maxWithdrawable = collateralValue.sub(minCollateralRequired).mul(0.98);\n\n    return Wei.min(collateralAmount, maxWithdrawable);\n  })();\n\n  const isLoadingRequiredData = poolConfiguration.isLoading || !max;\n  const isAnyMarketLocked = poolConfiguration.data?.isAnyMarketLocked;\n\n  const { minutes, hours, isRunning } = useWithdrawTimer(params.accountId);\n\n  const leftoverCollateral = liquidityPosition?.collateralAmount?.add(collateralChange) || wei(0);\n  const isValidLeftover =\n    leftoverCollateral.gte(collateralType?.minDelegationD18 || wei(0)) || leftoverCollateral.eq(0);\n\n  const isInputDisabled = isAnyMarketLocked;\n  const overAvailableBalance = max ? collateralChange.abs().gt(max) : false;\n  const isSubmitDisabled =\n    !isReady ||\n    isLoadingRequiredData ||\n    isAnyMarketLocked ||\n    collateralChange.gte(0) ||\n    !isValidLeftover ||\n    overAvailableBalance;\n\n  const toast = useToast({ isClosable: true, duration: 9000 });\n  const errorParser = useContractErrorParser();\n\n  const onSubmit = React.useCallback(\n    async (e: React.FormEvent) => {\n      e.preventDefault();\n\n      try {\n        toast.closeAll();\n        toast({ title: 'Undelegating...', variant: 'left-accent' });\n\n        if (network?.preset === 'andromeda') {\n          if (requireApproval) {\n            await approve(false);\n          }\n          await undelegateAndromeda.mutateAsync();\n        } else {\n          await undelegate.mutateAsync();\n        }\n\n        setCollateralChange(ZEROWEI);\n\n        toast.closeAll();\n        toast({\n          title: 'Success',\n          description: 'Your collateral has been updated.',\n          status: 'success',\n          duration: 5000,\n          variant: 'left-accent',\n        });\n      } catch (error: any) {\n        const contractError = errorParser(error);\n        if (contractError) {\n          console.error(new Error(contractError.name), contractError);\n        }\n        toast({\n          title: 'Could not complete repaying',\n          description: contractError ? (\n            <ContractError contractError={contractError} />\n          ) : (\n            'Please try again.'\n          ),\n          status: 'error',\n          variant: 'left-accent',\n          duration: 3_600_000,\n        });\n        throw Error('Undelegate failed', { cause: error });\n      }\n    },\n    [\n      approve,\n      errorParser,\n      network?.preset,\n      requireApproval,\n      setCollateralChange,\n      toast,\n      undelegate,\n      undelegateAndromeda,\n    ]\n  );\n\n  return (\n    <Flex flexDirection=\"column\" data-cy=\"undelegate collateral form\">\n      <UndelegateModal\n        txnStatus={txnState.txnStatus}\n        txnHash={txnState.txnHash}\n        approvalTxnStatus={approvalTxnState.txnStatus}\n      />\n      <Text color=\"gray./50\" fontSize=\"sm\" fontWeight=\"700\" mb=\"3\">\n        Unlock Collateral\n      </Text>\n\n      <BorderBox display=\"flex\" p={3} mb=\"6\">\n        <Flex alignItems=\"flex-start\" flexDir=\"column\" gap=\"1\">\n          <BorderBox display=\"flex\" py={1.5} px={2.5}>\n            <Text display=\"flex\" gap={2} alignItems=\"center\" fontWeight=\"600\">\n              <TokenIcon\n                symbol={collateralType?.symbol ?? params.collateralSymbol}\n                width={16}\n                height={16}\n              />\n              {collateralType?.displaySymbol ?? params.collateralSymbol}\n            </Text>\n          </BorderBox>\n          <Text fontSize=\"12px\" whiteSpace=\"nowrap\" data-cy=\"locked amount\">\n            {isPendingLiquidityPosition ? 'Locked: ~' : null}\n            {!isPendingLiquidityPosition && max ? (\n              <>\n                <Amount prefix=\"Locked: \" value={max} />\n                &nbsp;\n                <Text\n                  as=\"span\"\n                  cursor=\"pointer\"\n                  onClick={() => setCollateralChange(max.mul(-1))}\n                  color=\"cyan.500\"\n                  fontWeight={700}\n                >\n                  Max\n                </Text>\n              </>\n            ) : null}\n          </Text>\n        </Flex>\n        <Flex flexDir=\"column\" flexGrow={1}>\n          <NumberInput\n            InputProps={{\n              isDisabled: isInputDisabled,\n              isRequired: true,\n              'data-cy': 'undelegate amount input',\n              type: 'number',\n              min: 0,\n            }}\n            value={collateralChange.abs()}\n            onChange={(val) => setCollateralChange(val.mul(-1))}\n            max={max}\n            min={ZEROWEI}\n          />\n          <Flex fontSize=\"xs\" color=\"whiteAlpha.700\" alignSelf=\"flex-end\" gap=\"1\">\n            {isPendingLiquidityPosition ? '~' : null}\n            {!isPendingLiquidityPosition &&\n            liquidityPosition &&\n            liquidityPosition.collateralPrice.gt(0) ? (\n              <Amount\n                prefix=\"$\"\n                value={collateralChange.abs().mul(liquidityPosition.collateralPrice)}\n              />\n            ) : null}\n          </Flex>\n        </Flex>\n      </BorderBox>\n\n      <Collapse in={isInputDisabled} animateOpacity unmountOnExit>\n        <Alert mb={6} status=\"warning\" borderRadius=\"6px\">\n          <AlertIcon />\n          <Flex direction=\"column\">\n            <AlertTitle>Credit capacity reached</AlertTitle>\n            <AlertDescription>\n              One of the markets has reached its credit capacity and is currently in a locked state.\n              You cannot unlock collateral from the pool at this time.\n            </AlertDescription>\n          </Flex>\n        </Alert>\n      </Collapse>\n\n      {collateralType ? (\n        <Collapse in={!isValidLeftover && !collateralChange.eq(0)} animateOpacity unmountOnExit>\n          <Alert mb={6} status=\"info\" borderRadius=\"6px\">\n            <AlertIcon />\n            <Flex direction=\"column\">\n              <AlertTitle>\n                The minimal locked amount is{' '}\n                <Amount\n                  value={collateralType.minDelegationD18}\n                  suffix={` ${collateralType?.displaySymbol ?? params.collateralSymbol}`}\n                />\n              </AlertTitle>\n              <AlertDescription>\n                You can close your position by removing all the collateral.\n              </AlertDescription>\n            </Flex>\n          </Alert>\n        </Collapse>\n      ) : null}\n\n      <Collapse\n        in={collateralChange.abs().gt(0) && isValidLeftover && isRunning}\n        animateOpacity\n        unmountOnExit\n      >\n        <Alert status=\"warning\" mb=\"6\">\n          <AlertIcon />\n          <Text>\n            You will be able to withdraw assets in {hours}H{minutes}M. Any account activity will\n            reset this timer to 24H.\n          </Text>\n        </Alert>\n      </Collapse>\n\n      {liquidityPosition ? (\n        <Collapse\n          in={\n            collateralChange.abs().gt(0) && isValidLeftover && !isRunning && maxWithdrawable?.gt(0)\n          }\n          animateOpacity\n          unmountOnExit\n        >\n          <Alert status=\"info\" mb=\"6\" borderRadius=\"6px\">\n            <AlertIcon />\n            <Text>\n              You already have{' '}\n              <Amount\n                value={maxWithdrawable}\n                suffix={` ${liquidityPosition.collateralType.symbol}`}\n              />{' '}\n              unlocked. &nbsp;\n              <Link\n                href={`?${makeSearch({\n                  page: 'position',\n                  collateralSymbol: params.collateralSymbol,\n                  manageAction: 'withdraw',\n                  accountId: params.accountId,\n                })}`}\n                onClick={(e) => {\n                  e.preventDefault();\n                  setParams({\n                    page: 'position',\n                    collateralSymbol: params.collateralSymbol,\n                    manageAction: 'withdraw',\n                    accountId: params.accountId,\n                  });\n                }}\n                textDecoration=\"underline\"\n              >\n                Withdraw\n              </Link>{' '}\n              before unlocking again as it will restart the 24h withdrawal timeout.\n            </Text>\n          </Alert>\n        </Collapse>\n      ) : null}\n\n      {network?.preset === 'andromeda' && liquidityPosition ? (\n        <Collapse in={liquidityPosition.debt.gt(0)} animateOpacity unmountOnExit>\n          <Alert status=\"info\" mb=\"6\" borderRadius=\"6px\">\n            <AlertIcon />\n            <Text>\n              <Amount prefix=\"You will repay \" value={liquidityPosition.debt} suffix=\" USDC\" /> to\n              unlock {liquidityPosition.collateralType.displaySymbol}\n            </Text>\n          </Alert>\n        </Collapse>\n      ) : null}\n\n      {liquidityPosition ? (\n        <Collapse in={collateralChange.abs().gt(0)} animateOpacity unmountOnExit>\n          <TransactionSummary\n            mb={6}\n            items={[\n              {\n                label: `Locked ${collateralType?.displaySymbol ?? params.collateralSymbol}`,\n                value: (\n                  <ChangeStat\n                    value={liquidityPosition.collateralAmount || ZEROWEI}\n                    newValue={leftoverCollateral}\n                    formatFn={(val?: Wei) => currency(val ?? ZEROWEI)}\n                    hasChanges={collateralChange.abs().gt(0)}\n                    size=\"sm\"\n                  />\n                ),\n              },\n              ...(network?.preset !== 'andromeda'\n                ? [\n                    {\n                      label: 'C-ratio',\n                      value: (\n                        <CRatioChangeStat\n                          currentCollateral={liquidityPosition.collateralAmount}\n                          currentDebt={liquidityPosition.debt}\n                          collateralChange={collateralChange}\n                          collateralPrice={liquidityPosition.collateralPrice}\n                          debtChange={ZEROWEI}\n                          size=\"sm\"\n                        />\n                      ),\n                    },\n                  ]\n                : []),\n            ]}\n          />\n        </Collapse>\n      ) : null}\n\n      <Button\n        onClick={(e: React.FormEvent) => {\n          window?._paq?.push([\n            'trackEvent',\n            'liquidity',\n            'v3_staking',\n            `submit_undelegate_${collateralType?.symbol?.toLowerCase()}_v3`,\n          ]);\n          onSubmit(e);\n        }}\n        data-cy=\"undelegate submit\"\n        type=\"submit\"\n        isDisabled={isSubmitDisabled}\n      >\n        {collateralChange.gte(0) ? 'Enter Amount' : 'Unlock Collateral'}\n      </Button>\n    </Flex>\n  );\n}\n","import Wei, { wei } from '@synthetixio/wei';\nimport { assign, createMachine } from 'xstate';\n\nexport const Events = {\n  SET_AMOUNT: 'SET_AMOUNT',\n  SET_COLLATERAL_SYMBOL: 'SET_COLLATERAL_SYMBOL',\n  RETRY: 'RETRY',\n  RUN: 'RUN',\n  SUCCESS: 'SUCCESS',\n  FAILURE: 'FAILURE',\n  RESET: 'RESET',\n} as const;\n\nexport const State = {\n  idle: 'idle',\n  undelegate: 'undelegate',\n  failed: 'failed',\n  success: 'success',\n} as const;\n\nexport const FailedSteps = {\n  [State.undelegate]: State.undelegate,\n} as const;\n\nexport const ServiceNames = {\n  undelegate: 'undelegate',\n} as const;\n\ntype Context = {\n  error: { error: Error; step: keyof typeof FailedSteps } | null;\n  amount: Wei;\n  collateralSymbol?: string;\n};\n\ntype EventType = typeof Events;\ntype UndelegateEvents =\n  | { type: EventType['SET_AMOUNT']; amount: Wei }\n  | { type: EventType['SET_COLLATERAL_SYMBOL']; symbol: string }\n  | { type: EventType['RETRY'] }\n  | { type: EventType['RUN'] }\n  | { type: EventType['SUCCESS'] }\n  | { type: EventType['FAILURE'] }\n  | { type: EventType['RESET'] };\n\ntype StateType = typeof State;\nexport type MachineState =\n  | {\n      value: StateType['idle'];\n      context: Context & { error: null };\n    }\n  | {\n      value: StateType['undelegate'];\n      context: Context & { error: null };\n    }\n  | {\n      value: StateType['failed'];\n      context: Context & { error: { error: Error; step: keyof typeof FailedSteps } };\n    }\n  | {\n      value: StateType['success'];\n      context: Context & {\n        error: null;\n      };\n    };\n\nconst initialContext = {\n  amount: wei(0),\n  error: null,\n  collateralSymbol: undefined,\n};\nexport const UndelegateMachine = createMachine<Context, UndelegateEvents, MachineState>({\n  id: 'UndelegateMachine',\n  initial: State.idle,\n  predictableActionArguments: true,\n  context: initialContext,\n  on: {\n    [Events.RESET]: {\n      target: State.idle,\n      actions: assign({\n        amount: (_) => initialContext.amount,\n        error: (_) => initialContext.error,\n        collateralSymbol: (_) => initialContext.collateralSymbol,\n      }),\n    },\n    [Events.SET_AMOUNT]: {\n      actions: assign({ amount: (_context, event) => event.amount }),\n    },\n    [Events.SET_COLLATERAL_SYMBOL]: {\n      actions: assign({ collateralSymbol: (_context, event) => event.symbol }),\n    },\n  },\n  states: {\n    [State.idle]: {\n      on: {\n        [Events.RUN]: [{ target: State.undelegate, cond: (context) => context.amount.gt(0) }],\n      },\n    },\n\n    [State.undelegate]: {\n      invoke: {\n        src: ServiceNames.undelegate,\n        onError: {\n          target: State.failed,\n          actions: assign({\n            error: (_context, event) => ({ error: event.data, step: FailedSteps.undelegate }),\n          }),\n        },\n        onDone: [{ target: State.success }],\n      },\n    },\n\n    [State.failed]: {\n      on: {\n        [Events.RETRY]: [\n          {\n            target: State.undelegate,\n            cond: (c) => c.error?.step === FailedSteps.undelegate,\n            actions: assign({ error: (_) => null }),\n          },\n        ],\n      },\n    },\n    [State.success]: {},\n  },\n});\n","import { ArrowBackIcon } from '@chakra-ui/icons';\nimport { Button, Divider, Link, Text, useToast } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { ChangeStat } from '@snx-v3/ChangeStat';\nimport { D18, D6, ZEROWEI } from '@snx-v3/constants';\nimport { ContractError } from '@snx-v3/ContractError';\nimport { CRatioChangeStat } from '@snx-v3/CRatioBar';\nimport { currency } from '@snx-v3/format';\nimport { LiquidityPositionUpdated } from '@snx-v3/Manage';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { Multistep } from '@snx-v3/Multistep';\nimport { TransactionSummary } from '@snx-v3/TransactionSummary';\nimport { useApprove } from '@snx-v3/useApprove';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { useDebtRepayer } from '@snx-v3/useDebtRepayer';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useUndelegate } from '@snx-v3/useUndelegate';\nimport { useUndelegateBaseAndromeda } from '@snx-v3/useUndelegateBaseAndromeda';\nimport { useUSDC } from '@snx-v3/useUSDC';\nimport { Wei, wei } from '@synthetixio/wei';\nimport { useMachine } from '@xstate/react';\nimport { ethers } from 'ethers';\nimport React from 'react';\nimport { Events, ServiceNames, State, UndelegateMachine } from './UndelegateMachine';\n\nexport function UndelegateModal({ onClose }: { onClose: () => void }) {\n  const [params] = useParams<PositionPageSchemaType>();\n  const { collateralChange, setCollateralChange } = React.useContext(ManagePositionContext);\n  const { network } = useNetwork();\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: liquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  const toast = useToast({ isClosable: true, duration: 9000 });\n\n  const [txSummary, setTxSummary] = React.useState({\n    currentCollateral: ZEROWEI,\n    collateralChange: ZEROWEI,\n    currentDebt: ZEROWEI,\n  });\n\n  const currentCollateral = liquidityPosition?.collateralAmount || wei(0);\n\n  const { exec: execUndelegate, isReady: isReadyUndelegate } = useUndelegate({\n    undelegateAmount:\n      collateralChange && collateralChange.lt(0) ? collateralChange.abs() : undefined,\n  });\n\n  // Andromeda debt repayment\n  const { data: USDC } = useUSDC();\n  const { data: DebtRepayer } = useDebtRepayer();\n  const approveAndromedaUSDCAmount = React.useMemo(() => {\n    if (network?.preset !== 'andromeda') {\n      return ethers.BigNumber.from(0);\n    }\n    if (!liquidityPosition) {\n      return undefined;\n    }\n    if (liquidityPosition.debt.lte(0)) {\n      return ethers.BigNumber.from(0);\n    }\n    return liquidityPosition.debt.toBN().mul(D6).div(D18).mul(110).div(100);\n  }, [liquidityPosition, network?.preset]);\n  const {\n    approve,\n    requireApproval,\n    isReady: isReadyApproveAndromedaUSDC,\n  } = useApprove({\n    contractAddress: USDC?.address,\n    amount: approveAndromedaUSDCAmount,\n    spender: DebtRepayer?.address,\n  });\n  const { exec: undelegateBaseAndromeda, isReady: isReadyUndelegateAndromeda } =\n    useUndelegateBaseAndromeda({\n      undelegateAmount:\n        collateralChange && collateralChange.lt(0) ? collateralChange.abs() : undefined,\n    });\n  // End of Andromeda debt repayment\n\n  const errorParser = useContractErrorParser();\n\n  const [state, send] = useMachine(UndelegateMachine, {\n    context: {\n      amount: collateralChange.abs(),\n    },\n    services: {\n      [ServiceNames.undelegate]: async () => {\n        try {\n          setTxSummary({\n            currentCollateral,\n            currentDebt: liquidityPosition?.debt || ZEROWEI,\n            collateralChange,\n          });\n\n          if (network?.preset === 'andromeda') {\n            if (requireApproval) {\n              await approve(false);\n            }\n            await undelegateBaseAndromeda();\n          } else {\n            await execUndelegate();\n          }\n\n          setCollateralChange(ZEROWEI);\n\n          toast.closeAll();\n          toast({\n            title: 'Success',\n            description: 'Your locked collateral amount has been updated.',\n            status: 'success',\n            duration: 5000,\n            variant: 'left-accent',\n          });\n        } catch (error: any) {\n          const contractError = errorParser(error);\n          if (contractError) {\n            console.error(new Error(contractError.name), contractError);\n          }\n          toast.closeAll();\n          toast({\n            title: 'Unlock collateral failed',\n            description: contractError ? (\n              <ContractError contractError={contractError} />\n            ) : (\n              'Please try again.'\n            ),\n            status: 'error',\n            variant: 'left-accent',\n            duration: 3_600_000,\n          });\n          throw Error('Unlock collateral failed', { cause: error });\n        }\n      },\n    },\n  });\n\n  const collateralChangeString = collateralChange.toString();\n\n  React.useEffect(() => {\n    send(Events.SET_AMOUNT, { amount: wei(collateralChangeString).abs() });\n  }, [collateralChangeString, send]);\n\n  React.useEffect(() => {\n    send(Events.SET_COLLATERAL_SYMBOL, { symbol: wei(collateralChangeString).abs() });\n  }, [collateralChangeString, send]);\n\n  const onSubmit = React.useCallback(async () => {\n    if (state.matches(State.success)) {\n      send(Events.RESET);\n      onClose();\n      return;\n    }\n    if (state.context.error) {\n      send(Events.RETRY);\n      return;\n    }\n    send(Events.RUN);\n  }, [onClose, send, state]);\n\n  const isProcessing = state.matches(State.undelegate);\n  if (state.matches(State.success)) {\n    return (\n      <LiquidityPositionUpdated\n        onClose={onSubmit}\n        title=\"Collateral successfully updated\"\n        subline={\n          <>\n            Your <b>collateral</b> has been updated. To learn more, visit the{' '}\n            <Link href=\"https://docs.synthetix.io/\" target=\"_blank\" color=\"cyan.500\">\n              Synthetix V3 Documentation\n            </Link>\n          </>\n        }\n        alertText={\n          <>\n            <b>Collateral</b> successfully updated\n          </>\n        }\n        summary={\n          <TransactionSummary\n            items={[\n              ...(liquidityPosition\n                ? [\n                    {\n                      label: 'Locked ' + collateralType?.displaySymbol,\n                      value: (\n                        <ChangeStat\n                          value={txSummary.currentCollateral}\n                          newValue={txSummary.currentCollateral.add(txSummary.collateralChange)}\n                          formatFn={(val?: Wei) => currency(val ?? ZEROWEI)}\n                          hasChanges={txSummary.collateralChange.abs().gt(0)}\n                          size=\"sm\"\n                        />\n                      ),\n                    },\n                  ]\n                : []),\n              ...(liquidityPosition && network?.preset !== 'andromeda'\n                ? [\n                    {\n                      label: 'C-ratio',\n                      value: (\n                        <CRatioChangeStat\n                          currentCollateral={txSummary.currentCollateral}\n                          currentDebt={txSummary.currentDebt}\n                          collateralChange={txSummary.collateralChange}\n                          collateralPrice={liquidityPosition?.collateralPrice ?? ZEROWEI}\n                          debtChange={ZEROWEI}\n                          size=\"sm\"\n                        />\n                      ),\n                    },\n                  ]\n                : []),\n            ]}\n          />\n        }\n      />\n    );\n  }\n\n  const isReady =\n    !isProcessing &&\n    ((network?.preset === 'andromeda' &&\n      isReadyApproveAndromedaUSDC &&\n      isReadyUndelegateAndromeda) ||\n      (network?.preset !== 'andromeda' && isReadyUndelegate));\n\n  return (\n    <div data-cy=\"undelegate multistep\">\n      <Text color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n        <ArrowBackIcon cursor=\"pointer\" onClick={onClose} mr={2} />\n        Manage Collateral\n      </Text>\n      <Divider my={4} />\n      <Multistep\n        step={1}\n        title=\"Unlock collateral\"\n        subtitle={\n          <Amount\n            value={state.context.amount}\n            suffix={` ${collateralType?.displaySymbol} will be unlocked from the pool.`}\n          />\n        }\n        status={{\n          failed: Boolean(state.context.error?.step === State.undelegate),\n          disabled: state.context.amount.eq(0),\n          success: state.matches(State.success),\n          loading: state.matches(State.undelegate) && !state.context.error,\n        }}\n      />\n\n      <Button\n        isDisabled={!isReady}\n        onClick={() => {\n          window?._paq?.push([\n            'trackEvent',\n            'liquidity',\n            'v3_staking',\n            `submit_undelegate_${collateralType?.symbol?.toLowerCase()}_v3`,\n          ]);\n          onSubmit();\n        }}\n        width=\"100%\"\n        mt=\"6\"\n        data-cy=\"undelegate confirm button\"\n      >\n        {(() => {\n          switch (true) {\n            case Boolean(state.context.error):\n              return 'Retry';\n            case isProcessing:\n              return 'Processing...';\n            case state.matches(State.success):\n              return 'Continue';\n            default:\n              return 'Execute Transaction';\n          }\n        })()}\n      </Button>\n    </div>\n  );\n}\n","import { UndelegateModal } from './UndelegateModal';\n\nexport * from './UndelegateModal';\nexport default UndelegateModal;\n","import { parseUnits } from '@snx-v3/format';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { useCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport Wei from '@synthetixio/wei';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { BigNumber, ethers } from 'ethers';\nimport { useReducer } from 'react';\n\nconst log = debug('snx:useWithdraw');\n\nexport const useWithdraw = ({\n  accountId,\n  token,\n  amount,\n}: {\n  accountId?: string;\n  token?: { address: string; decimals: number };\n  amount: Wei;\n}) => {\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: priceUpdateTx } = useCollateralPriceUpdates();\n  const { network } = useNetwork();\n\n  const signer = useSigner();\n  const provider = useProvider();\n\n  const isReady = signer && network && provider && CoreProxy && token && amount && amount.gt(0);\n  const queryClient = useQueryClient();\n  const mutation = useMutation({\n    mutationFn: async () => {\n      if (!isReady) {\n        throw new Error('Not ready');\n      }\n      const walletAddress = await signer.getAddress();\n\n      dispatch({ type: 'prompting' });\n\n      const CoreProxyContract = new ethers.Contract(CoreProxy.address, CoreProxy.abi, signer);\n      const populatedTxnPromised = CoreProxyContract.populateTransaction.withdraw(\n        BigNumber.from(accountId),\n        token.address,\n        parseUnits(amount.toString(), token.decimals)\n      );\n\n      const callsPromise = Promise.all([populatedTxnPromised]);\n      const [calls] = await Promise.all([callsPromise]);\n      if (priceUpdateTx) {\n        calls.unshift(priceUpdateTx as any);\n      }\n\n      const { multicallTxn: erc7412Tx, gasLimit } = await withERC7412(\n        provider,\n        network,\n        calls,\n        'useWithdraw',\n        walletAddress\n      );\n\n      const txn = await signer.sendTransaction({\n        ...erc7412Tx,\n        gasLimit: gasLimit.mul(15).div(10),\n      });\n      log('txn', txn);\n      dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n      return receipt;\n    },\n\n    onSuccess: async () => {\n      const deployment = `${network?.id}-${network?.preset}`;\n      await Promise.all(\n        [\n          //\n          'PriceUpdates',\n          'LiquidityPosition',\n          'LiquidityPositions',\n          'TokenBalance',\n          'SynthBalances',\n          'EthBalance',\n          'Allowance',\n          'TransferableSynthetix',\n          'AccountCollateralUnlockDate',\n        ].map((key) => queryClient.invalidateQueries({ queryKey: [deployment, key] }))\n      );\n      dispatch({ type: 'success' });\n    },\n\n    onError: (error) => {\n      dispatch({ type: 'error', payload: { error } });\n      throw error;\n    },\n  });\n  return {\n    isReady,\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n};\n","import { ArrowUpIcon, CheckIcon } from '@chakra-ui/icons';\nimport {\n  Button,\n  CircularProgress,\n  Divider,\n  Flex,\n  Link,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalOverlay,\n  Text,\n} from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { transactionLink } from '@snx-v3/etherscanLink';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { WithdrawIncrease } from '@snx-v3/WithdrawIncrease';\nimport { Wei, wei } from '@synthetixio/wei';\nimport React from 'react';\n\nexport function WithdrawModal({\n  txnStatus,\n  txnHash,\n  isDebtWithdrawal,\n}: {\n  txnStatus: string;\n  txnHash: string | null;\n  isDebtWithdrawal?: boolean;\n}) {\n  const [params] = useParams<PositionPageSchemaType>();\n  const { withdrawAmount, setWithdrawAmount } = React.useContext(ManagePositionContext);\n  const { data: systemToken } = useSystemToken();\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const [isOpen, setIsOpen] = React.useState(false);\n  const { network } = useNetwork();\n\n  React.useEffect(() => {\n    if (txnStatus === 'prompting') {\n      setIsOpen(true);\n    }\n    if (txnStatus === 'error') {\n      setIsOpen(false);\n    }\n  }, [txnStatus]);\n\n  // This caching is necessary to keep initial values after success and not reset them to zeroes\n  const [cachedWithdrawAmount, setCachedWithdrawAmount] = React.useState<Wei | undefined>();\n  React.useEffect(() => {\n    if (withdrawAmount && withdrawAmount.gt(0)) {\n      setCachedWithdrawAmount(withdrawAmount.abs());\n    }\n  }, [withdrawAmount]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={() => {\n        setWithdrawAmount(wei(0));\n        setIsOpen(false);\n      }}\n    >\n      <ModalOverlay bg=\"#06061B80\" />\n      <ModalContent\n        bg=\"navy.700\"\n        mt=\"10%\"\n        borderWidth=\"1px\"\n        borderColor=\"gray.900\"\n        minWidth=\"384px\"\n      >\n        <ModalBody data-cy=\"withdraw dialog\" p={6}>\n          <Text color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n            {isDebtWithdrawal ? 'Withdrawing' : 'Withdrawing Collateral'}\n          </Text>\n\n          <Divider my={4} />\n\n          <Flex\n            position=\"relative\"\n            alignItems=\"center\"\n            gap={4}\n            mb={6}\n            rounded=\"lg\"\n            mt=\"6\"\n            p=\"4\"\n            border=\"2px solid\"\n            transitionProperty=\"border-color\"\n            transitionDuration=\"normal\"\n            borderColor={txnStatus === 'success' ? 'green.500' : 'gray.900'}\n          >\n            <Flex\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              borderRadius=\"100px\"\n              bg={txnStatus === 'success' ? 'green.600' : 'gray.900'}\n              width=\"40px\"\n              height=\"40px\"\n              p={3}\n            >\n              {txnStatus === 'success' ? (\n                <CheckIcon color=\"white\" />\n              ) : (\n                <CircularProgress size=\"25px\" isIndeterminate color=\"gray.700\" />\n              )}\n            </Flex>\n            <Flex\n              flexDirection=\"column\"\n              alignItems=\"space-between\"\n              justifyContent=\"space-between\"\n              ml={2}\n              data-cy=\"withdraw info\"\n            >\n              {withdrawAmount ? (\n                <Text fontSize=\"14px\" fontWeight={700} lineHeight=\"20px\" color=\"white\">\n                  <Amount\n                    prefix={txnStatus === 'success' ? 'Withdrew ' : 'Withdrawing '}\n                    value={cachedWithdrawAmount}\n                    suffix={` ${\n                      isDebtWithdrawal ? systemToken?.displaySymbol : collateralType?.displaySymbol\n                    }`}\n                  />\n                </Text>\n              ) : null}\n            </Flex>\n          </Flex>\n          <WithdrawIncrease />\n          {txnStatus === 'success' ? (\n            <Button\n              mt={5}\n              variant=\"solid\"\n              justifyContent=\"center\"\n              px={3}\n              py={3}\n              width=\"100%\"\n              textAlign=\"center\"\n              onClick={() => setIsOpen(false)}\n            >\n              Done\n            </Button>\n          ) : null}\n          <Flex\n            justifyContent=\"center\"\n            px={3}\n            py={3}\n            mt={6}\n            mb={1}\n            borderTop=\"1px solid\"\n            borderTopColor=\"gray.900\"\n            data-cy=\"transaction hash\"\n          >\n            <Flex\n              as={Link}\n              isExternal\n              variant=\"outline\"\n              href={transactionLink({ chainId: network?.id, txnHash })}\n              fontFamily=\"heading\"\n              color={txnHash ? 'cyan.500' : 'gray.700'}\n              cursor={txnHash ? 'pointer' : 'default'}\n              fontWeight={700}\n              lineHeight=\"20px\"\n              fontSize=\"14px\"\n              target=\"_blank\"\n              mt={3}\n              alignItems=\"center\"\n              gap={1}\n            >\n              {txnHash ? (\n                <>\n                  <Text>View Transaction</Text>\n                  <ArrowUpIcon transform=\"rotate(45deg)\" />\n                </>\n              ) : (\n                <>\n                  <Text>Signing Transaction</Text>\n                </>\n              )}\n            </Flex>\n          </Flex>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import { Alert, AlertIcon, Button, Collapse, Flex, Text, useToast } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { ContractError } from '@snx-v3/ContractError';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { TokenIcon } from '@snx-v3/TokenIcon';\nimport { useAccountCollateralUnlockDate } from '@snx-v3/useAccountCollateralUnlockDate';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { useWithdraw } from '@snx-v3/useWithdraw';\nimport { useWithdrawTimer } from '@snx-v3/useWithdrawTimer';\nimport React from 'react';\nimport { WithdrawModal } from './WithdrawModal';\n\nexport function Withdraw({ isDebtWithdrawal = false }: { isDebtWithdrawal?: boolean }) {\n  const [params] = useParams<PositionPageSchemaType>();\n  const { setWithdrawAmount, withdrawAmount } = React.useContext(ManagePositionContext);\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n\n  const { data: liquidityPosition, isPending: isPendingLiquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  const { data: systemToken } = useSystemToken();\n\n  const { data: accountCollateralUnlockDate, isLoading: isLoadingDate } =\n    useAccountCollateralUnlockDate({ accountId: params.accountId });\n\n  const symbol = isDebtWithdrawal ? systemToken?.symbol : collateralType?.symbol;\n  const displaySymbol = isDebtWithdrawal\n    ? systemToken?.displaySymbol\n    : collateralType?.displaySymbol;\n  const { minutes, hours, isRunning } = useWithdrawTimer(params.accountId);\n  const unlockDate = !isLoadingDate ? accountCollateralUnlockDate : null;\n\n  const maxWithdrawable = React.useMemo(() => {\n    if (isDebtWithdrawal && liquidityPosition) {\n      return liquidityPosition.availableSystemToken;\n    }\n    if (!isDebtWithdrawal && liquidityPosition) {\n      return liquidityPosition.availableCollateral;\n    }\n  }, [isDebtWithdrawal, liquidityPosition]);\n\n  const {\n    mutation: withdraw,\n    isReady: isWithdrawReady,\n    txnState,\n  } = useWithdraw({\n    amount: withdrawAmount,\n    accountId: params.accountId,\n    token: isDebtWithdrawal ? systemToken : collateralType,\n  });\n\n  const toast = useToast({ isClosable: true, duration: 9000 });\n  const errorParser = useContractErrorParser();\n  const onSubmit = React.useCallback(\n    async (e: React.FormEvent) => {\n      e.preventDefault();\n\n      try {\n        toast.closeAll();\n        toast({ title: 'Withdrawing...', variant: 'left-accent' });\n\n        await withdraw.mutateAsync();\n        setWithdrawAmount(ZEROWEI);\n\n        toast.closeAll();\n        toast({\n          title: 'Success',\n          description: 'Withdrawal was successful',\n          status: 'success',\n          duration: 5000,\n          variant: 'left-accent',\n        });\n      } catch (error: any) {\n        const contractError = errorParser(error);\n        if (contractError) {\n          console.error(new Error(contractError.name), contractError);\n        }\n        toast.closeAll();\n        toast({\n          title: 'Could not complete withdrawing',\n          description: contractError ? (\n            <ContractError contractError={contractError} />\n          ) : (\n            'Please try again.'\n          ),\n          status: 'error',\n          variant: 'left-accent',\n          duration: 3_600_000,\n        });\n      }\n    },\n    [errorParser, setWithdrawAmount, toast, withdraw]\n  );\n\n  return (\n    <Flex flexDirection=\"column\" data-cy=\"withdraw form\" as=\"form\" onSubmit={onSubmit}>\n      <WithdrawModal\n        isDebtWithdrawal={isDebtWithdrawal}\n        txnStatus={txnState.txnStatus}\n        txnHash={txnState.txnHash}\n      />\n      <Text color=\"gray./50\" fontSize=\"sm\" fontWeight=\"700\" mb=\"3\">\n        {isDebtWithdrawal ? 'Withdraw' : 'Withdraw Collateral'}\n      </Text>\n      <BorderBox display=\"flex\" p={3} mb=\"6\">\n        <Flex alignItems=\"flex-start\" flexDir=\"column\" gap=\"1\">\n          <BorderBox display=\"flex\" py={1.5} px={2.5}>\n            <Text\n              display=\"flex\"\n              gap={2}\n              fontSize=\"16px\"\n              alignItems=\"center\"\n              fontWeight=\"600\"\n              whiteSpace=\"nowrap\"\n            >\n              <TokenIcon symbol={symbol} width={16} height={16} />\n              {isDebtWithdrawal ? systemToken?.displaySymbol : collateralType?.displaySymbol}\n            </Text>\n          </BorderBox>\n          <Text fontSize=\"12px\" whiteSpace=\"nowrap\" data-cy=\"withdraw amount\">\n            {isDebtWithdrawal && isPendingLiquidityPosition ? 'Available: ~' : null}\n            {!isDebtWithdrawal && isPendingLiquidityPosition ? 'Unlocked: ~' : null}\n            {maxWithdrawable ? (\n              <>\n                <Amount\n                  prefix={isDebtWithdrawal ? 'Available: ' : 'Unlocked: '}\n                  value={maxWithdrawable}\n                />\n                &nbsp;\n                <Text\n                  as=\"span\"\n                  cursor=\"pointer\"\n                  onClick={() => setWithdrawAmount(maxWithdrawable)}\n                  color=\"cyan.500\"\n                  fontWeight={700}\n                >\n                  Max\n                </Text>\n              </>\n            ) : null}\n          </Text>\n        </Flex>\n        <Flex flexDir=\"column\" flexGrow={1}>\n          <NumberInput\n            InputProps={{\n              isRequired: true,\n              'data-cy': 'withdraw amount input',\n              type: 'number',\n              min: 0,\n            }}\n            value={withdrawAmount}\n            onChange={(val) => setWithdrawAmount(val)}\n            max={maxWithdrawable}\n            min={ZEROWEI}\n          />\n          <Flex fontSize=\"xs\" color=\"whiteAlpha.700\" alignSelf=\"flex-end\" gap=\"1\">\n            {isPendingLiquidityPosition ? '~' : null}\n            {!isPendingLiquidityPosition &&\n            liquidityPosition &&\n            liquidityPosition.collateralPrice.gt(0) ? (\n              <Amount\n                prefix=\"$\"\n                value={withdrawAmount.abs().mul(liquidityPosition.collateralPrice)}\n              />\n            ) : null}\n          </Flex>\n        </Flex>\n      </BorderBox>\n\n      <Collapse\n        in={maxWithdrawable && maxWithdrawable.gt(0) && isRunning}\n        animateOpacity\n        unmountOnExit\n      >\n        <Alert status=\"warning\" mb=\"6\" borderRadius=\"6px\">\n          <AlertIcon />\n          <Text>\n            You will be able to withdraw assets in {hours}H{minutes}M. Any account activity will\n            reset this timer to 24H.\n          </Text>\n        </Alert>\n      </Collapse>\n\n      <Collapse\n        in={maxWithdrawable && maxWithdrawable.gt(0) && !isRunning}\n        animateOpacity\n        unmountOnExit\n      >\n        <Alert status=\"success\" mb=\"6\" borderRadius=\"6px\">\n          <AlertIcon />\n          <Amount\n            prefix=\"You can now withdraw \"\n            value={maxWithdrawable}\n            suffix={` ${displaySymbol}`}\n          />\n        </Alert>\n      </Collapse>\n\n      <Collapse\n        in={maxWithdrawable && withdrawAmount.gt(maxWithdrawable)}\n        animateOpacity\n        unmountOnExit\n      >\n        <Alert colorScheme=\"red\" mb=\"6\" borderRadius=\"6px\">\n          <AlertIcon />\n          <Text>\n            You cannot Withdraw more {!isDebtWithdrawal ? 'Collateral' : ''} than your Unlocked\n            Balance\n          </Text>\n        </Alert>\n      </Collapse>\n\n      <Button\n        isDisabled={\n          !isWithdrawReady ||\n          isRunning ||\n          !unlockDate ||\n          (maxWithdrawable && withdrawAmount.gt(maxWithdrawable))\n        }\n        data-cy=\"withdraw submit\"\n        type=\"submit\"\n        onClick={() => {\n          window?._paq?.push([\n            'trackEvent',\n            'liquidity',\n            'v3_staking',\n            `submit_withdraw_${collateralType?.symbol?.toLowerCase()}_v3`,\n          ]);\n        }}\n      >\n        {withdrawAmount.gt(0) ? 'Withdraw' : 'Enter Amount'}\n      </Button>\n    </Flex>\n  );\n}\n","import { ArrowUpIcon, CheckIcon } from '@chakra-ui/icons';\nimport {\n  Button,\n  CircularProgress,\n  Divider,\n  Flex,\n  Link,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalOverlay,\n  Text,\n} from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { transactionLink } from '@snx-v3/etherscanLink';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { WithdrawIncrease } from '@snx-v3/WithdrawIncrease';\nimport { Wei, wei } from '@synthetixio/wei';\nimport React from 'react';\n\nexport function WithdrawModalAndromeda({\n  txnStatus,\n  txnHash,\n}: {\n  txnStatus: string;\n  txnHash: string | null;\n}) {\n  const { withdrawAmount, setWithdrawAmount } = React.useContext(ManagePositionContext);\n  const [isOpen, setIsOpen] = React.useState(false);\n  const { network } = useNetwork();\n\n  React.useEffect(() => {\n    if (txnStatus === 'prompting') {\n      setIsOpen(true);\n    }\n    if (txnStatus === 'error') {\n      setIsOpen(false);\n    }\n  }, [txnStatus]);\n\n  // This caching is necessary to keep initial values after success and not reset them to zeroes\n  const [cachedWithdrawAmount, setCachedWithdrawAmount] = React.useState<Wei | undefined>();\n  React.useEffect(() => {\n    if (withdrawAmount && withdrawAmount.gt(0)) {\n      setCachedWithdrawAmount(withdrawAmount.abs());\n    }\n  }, [withdrawAmount]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={() => {\n        setWithdrawAmount(wei(0));\n        setIsOpen(false);\n      }}\n    >\n      <ModalOverlay bg=\"#06061B80\" />\n      <ModalContent\n        bg=\"navy.700\"\n        mt=\"10%\"\n        borderWidth=\"1px\"\n        borderColor=\"gray.900\"\n        minWidth=\"384px\"\n      >\n        <ModalBody data-cy=\"withdraw dialog\" p={6}>\n          <Text color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n            Withdrawing USDC\n          </Text>\n\n          <Divider my={4} />\n\n          <Flex\n            position=\"relative\"\n            alignItems=\"center\"\n            gap={4}\n            mb={6}\n            rounded=\"lg\"\n            mt=\"6\"\n            p=\"4\"\n            border=\"2px solid\"\n            transitionProperty=\"border-color\"\n            transitionDuration=\"normal\"\n            borderColor={txnStatus === 'success' ? 'green.500' : 'gray.900'}\n          >\n            <Flex\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              borderRadius=\"100px\"\n              bg={txnStatus === 'success' ? 'green.600' : 'gray.900'}\n              width=\"40px\"\n              height=\"40px\"\n              p={3}\n            >\n              {txnStatus === 'success' ? (\n                <CheckIcon color=\"white\" />\n              ) : (\n                <CircularProgress size=\"25px\" isIndeterminate color=\"gray.700\" />\n              )}\n            </Flex>\n            <Flex\n              flexDirection=\"column\"\n              alignItems=\"space-between\"\n              justifyContent=\"space-between\"\n              ml={2}\n              data-cy=\"withdraw info\"\n            >\n              {withdrawAmount ? (\n                <Text fontSize=\"14px\" fontWeight={700} lineHeight=\"20px\" color=\"white\">\n                  <Amount\n                    prefix={txnStatus === 'success' ? 'Withdrew ' : 'Withdrawing '}\n                    value={cachedWithdrawAmount}\n                    suffix={` USDC`}\n                  />\n                </Text>\n              ) : null}\n            </Flex>\n          </Flex>\n          <WithdrawIncrease />\n          {txnStatus === 'success' ? (\n            <Button\n              mt={5}\n              variant=\"solid\"\n              justifyContent=\"center\"\n              px={3}\n              py={3}\n              width=\"100%\"\n              textAlign=\"center\"\n              onClick={() => setIsOpen(false)}\n            >\n              Done\n            </Button>\n          ) : null}\n          <Flex\n            justifyContent=\"center\"\n            px={3}\n            py={3}\n            mt={6}\n            mb={1}\n            borderTop=\"1px solid\"\n            borderTopColor=\"gray.900\"\n            data-cy=\"transaction hash\"\n          >\n            <Flex\n              as={Link}\n              isExternal\n              variant=\"outline\"\n              href={transactionLink({ chainId: network?.id, txnHash })}\n              fontFamily=\"heading\"\n              color={txnHash ? 'cyan.500' : 'gray.700'}\n              cursor={txnHash ? 'pointer' : 'default'}\n              fontWeight={700}\n              lineHeight=\"20px\"\n              fontSize=\"14px\"\n              target=\"_blank\"\n              mt={3}\n              alignItems=\"center\"\n              gap={1}\n            >\n              {txnHash ? (\n                <>\n                  <Text>View Transaction</Text>\n                  <ArrowUpIcon transform=\"rotate(45deg)\" />\n                </>\n              ) : (\n                <>\n                  <Text>Signing Transaction</Text>\n                </>\n              )}\n            </Flex>\n          </Flex>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import { Alert, AlertIcon, Button, Collapse, Flex, Text, useToast } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { ContractError } from '@snx-v3/ContractError';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { TokenIcon } from '@snx-v3/TokenIcon';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport { useAccountCollateralUnlockDate } from '@snx-v3/useAccountCollateralUnlockDate';\nimport { useAccountProxy } from '@snx-v3/useAccountProxy';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { useCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { usePositionManagerForCollateral } from '@snx-v3/usePositionManagerForCollateral';\nimport { useWithdrawTimer } from '@snx-v3/useWithdrawTimer';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport { wei } from '@synthetixio/wei';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\nimport React, { useReducer } from 'react';\nimport { WithdrawModalAndromeda } from './WithdrawModalAndromeda';\n\nconst log = debug('snx:WithdrawAndromeda');\n\nexport function WithdrawAndromeda() {\n  const [params] = useParams<PositionPageSchemaType>();\n  const { setWithdrawAmount } = React.useContext(ManagePositionContext);\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n\n  const { data: liquidityPosition, isPending: isPendingLiquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  const { data: accountCollateralUnlockDate, isLoading: isLoadingDate } =\n    useAccountCollateralUnlockDate({ accountId: params.accountId });\n\n  const symbol = 'USDC';\n  const { minutes, hours, isRunning } = useWithdrawTimer(params.accountId);\n  const unlockDate = !isLoadingDate ? accountCollateralUnlockDate : null;\n\n  const maxWithdrawable = React.useMemo(() => {\n    if (liquidityPosition) {\n      return liquidityPosition.availableCollateral\n        .mul(liquidityPosition.collateralPrice)\n        .add(liquidityPosition.availableSystemToken);\n    }\n  }, [liquidityPosition]);\n\n  React.useEffect(() => {\n    if (maxWithdrawable && maxWithdrawable.gt(0)) {\n      setWithdrawAmount(maxWithdrawable.abs());\n    }\n  }, [maxWithdrawable, setWithdrawAmount]);\n\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n  const { data: priceUpdateTx } = useCollateralPriceUpdates();\n  const { network } = useNetwork();\n  const signer = useSigner();\n  const provider = useProvider();\n\n  const { data: AccountProxy } = useAccountProxy();\n  const { data: PositionManager } = usePositionManagerForCollateral({ collateralType });\n\n  const isReady =\n    signer &&\n    network &&\n    provider &&\n    AccountProxy &&\n    PositionManager &&\n    // Make it Boolean\n    true;\n\n  const queryClient = useQueryClient();\n  const withdraw = useMutation({\n    mutationFn: async function () {\n      log('params', params);\n      log('collateralType', collateralType);\n\n      if (!isReady) {\n        throw new Error('Not ready');\n      }\n\n      dispatch({ type: 'prompting' });\n\n      const walletAddress = await signer.getAddress();\n\n      const callsPromises = [];\n\n      if (params.accountId) {\n        const AccountProxyContract = new ethers.Contract(\n          AccountProxy.address,\n          AccountProxy.abi,\n          signer\n        );\n        const approveAccountTx = AccountProxyContract.populateTransaction.approve(\n          PositionManager.address,\n          params.accountId\n        );\n        callsPromises.push(approveAccountTx);\n      }\n\n      const PositionManagerContract = new ethers.Contract(\n        PositionManager.address,\n        PositionManager.abi,\n        signer\n      );\n\n      const withdrawTx = PositionManagerContract.populateTransaction.withdraw(params.accountId);\n      callsPromises.push(withdrawTx);\n\n      const calls = await Promise.all(callsPromises);\n      if (priceUpdateTx) {\n        calls.unshift(priceUpdateTx as any);\n      }\n\n      const { multicallTxn: erc7412Tx, gasLimit } = await withERC7412(\n        provider,\n        network,\n        calls,\n        'WithdrawAndromeda',\n        walletAddress\n      );\n\n      const txn = await signer.sendTransaction({\n        ...erc7412Tx,\n        gasLimit: gasLimit.mul(15).div(10),\n      });\n      log('txn', txn);\n      dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n      return receipt;\n    },\n\n    onSuccess: async () => {\n      const deployment = `${network?.id}-${network?.preset}`;\n      await Promise.all(\n        [\n          //\n          'Accounts',\n          'PriceUpdates',\n          'LiquidityPosition',\n          'LiquidityPositions',\n          'TokenBalance',\n          'SynthBalances',\n          'EthBalance',\n          'Allowance',\n        ].map((key) => queryClient.invalidateQueries({ queryKey: [deployment, key] }))\n      );\n\n      toast.closeAll();\n      toast({\n        title: 'Success',\n        description: 'Your locked collateral amount has been updated.',\n        status: 'success',\n        duration: 5000,\n        variant: 'left-accent',\n      });\n\n      dispatch({ type: 'success' });\n    },\n\n    onError: (error) => {\n      dispatch({ type: 'error', payload: { error } });\n\n      const contractError = errorParser(error);\n      if (contractError) {\n        console.error(new Error(contractError.name), contractError);\n      }\n      toast.closeAll();\n      toast({\n        title: 'Transaction failed',\n        variant: 'left-accent',\n        description: contractError ? (\n          <ContractError contractError={contractError} />\n        ) : (\n          'Please try again.'\n        ),\n        status: 'error',\n        duration: 3_600_000,\n      });\n      throw Error('Transaction failed', { cause: error });\n    },\n  });\n\n  const toast = useToast({ isClosable: true, duration: 9000 });\n  const errorParser = useContractErrorParser();\n  const onSubmit = React.useCallback(\n    async (e: React.FormEvent) => {\n      e.preventDefault();\n\n      try {\n        toast.closeAll();\n        toast({ title: 'Withdrawing...', variant: 'left-accent' });\n\n        await withdraw.mutateAsync();\n        setWithdrawAmount(ZEROWEI);\n\n        toast.closeAll();\n        toast({\n          title: 'Success',\n          description: 'Withdrawal was successful',\n          status: 'success',\n          duration: 5000,\n          variant: 'left-accent',\n        });\n      } catch (error: any) {\n        const contractError = errorParser(error);\n        if (contractError) {\n          console.error(new Error(contractError.name), contractError);\n        }\n        toast.closeAll();\n        toast({\n          title: 'Could not complete withdrawing',\n          description: contractError ? (\n            <ContractError contractError={contractError} />\n          ) : (\n            'Please try again.'\n          ),\n          status: 'error',\n          variant: 'left-accent',\n          duration: 3_600_000,\n        });\n      }\n    },\n    [errorParser, setWithdrawAmount, toast, withdraw]\n  );\n\n  return (\n    <Flex flexDirection=\"column\" data-cy=\"withdraw form\" as=\"form\" onSubmit={onSubmit}>\n      <WithdrawModalAndromeda txnStatus={txnState.txnStatus} txnHash={txnState.txnHash} />\n      <Text color=\"gray./50\" fontSize=\"sm\" fontWeight=\"700\" mb=\"3\">\n        Withdraw Collateral\n      </Text>\n      <BorderBox display=\"flex\" p={3} mb=\"6\">\n        <Flex alignItems=\"flex-start\" flexDir=\"column\" gap=\"1\">\n          <BorderBox display=\"flex\" py={1.5} px={2.5}>\n            <Text\n              display=\"flex\"\n              gap={2}\n              fontSize=\"16px\"\n              alignItems=\"center\"\n              fontWeight=\"600\"\n              whiteSpace=\"nowrap\"\n            >\n              <TokenIcon symbol={symbol} width={16} height={16} />\n              {symbol}\n            </Text>\n          </BorderBox>\n          <Text fontSize=\"12px\" whiteSpace=\"nowrap\" data-cy=\"withdraw amount\">\n            {isPendingLiquidityPosition ? 'Unlocked: ~' : null}\n            {maxWithdrawable ? (\n              <Amount prefix=\"Unlocked: \" value={maxWithdrawable} suffix={` ${symbol}`} />\n            ) : null}\n          </Text>\n        </Flex>\n        <Flex flexDir=\"column\" flexGrow={1}>\n          <NumberInput\n            InputProps={{\n              isRequired: true,\n              'data-cy': 'withdraw amount input',\n              type: 'number',\n              min: 0,\n            }}\n            value={\n              maxWithdrawable ? wei(parseFloat(maxWithdrawable.toString()).toFixed(2)) : ZEROWEI\n            }\n            disabled\n          />\n          <Flex fontSize=\"xs\" color=\"whiteAlpha.700\" alignSelf=\"flex-end\" gap=\"1\">\n            {isPendingLiquidityPosition ? '~' : null}\n            {!isPendingLiquidityPosition && maxWithdrawable ? (\n              <Amount prefix=\"$\" value={maxWithdrawable ? maxWithdrawable : ZEROWEI} />\n            ) : null}\n          </Flex>\n        </Flex>\n      </BorderBox>\n\n      <Collapse\n        in={maxWithdrawable && maxWithdrawable.gt(0) && isRunning}\n        animateOpacity\n        unmountOnExit\n      >\n        <Alert status=\"warning\" mb=\"6\" borderRadius=\"6px\">\n          <AlertIcon />\n          <Text>\n            You will be able to withdraw assets in {hours}H{minutes}M. Any account activity will\n            reset this timer to 24H.\n          </Text>\n        </Alert>\n      </Collapse>\n\n      <Collapse\n        in={maxWithdrawable && maxWithdrawable.gt(0) && !isRunning}\n        animateOpacity\n        unmountOnExit\n      >\n        <Alert status=\"success\" mb=\"6\" borderRadius=\"6px\">\n          <AlertIcon />\n          <Amount prefix=\"You can now withdraw \" value={maxWithdrawable} suffix={` ${symbol}`} />\n        </Alert>\n      </Collapse>\n\n      <Button\n        isDisabled={\n          !isReady || isRunning || !unlockDate || !(maxWithdrawable && maxWithdrawable.gt(0))\n        }\n        data-cy=\"withdraw submit\"\n        type=\"submit\"\n        onClick={() => {\n          window?._paq?.push([\n            'trackEvent',\n            'liquidity',\n            'v3_staking',\n            `submit_withdraw_${collateralType?.symbol?.toLowerCase()}_v3`,\n          ]);\n        }}\n      >\n        Withdraw\n      </Button>\n    </Flex>\n  );\n}\n","import { Box, Flex, Link, Tab, TabList, TabPanel, TabPanels, Tabs, Text } from '@chakra-ui/react';\nimport { Borrow } from '@snx-v3/Borrow';\nimport { Claim } from '@snx-v3/Claim';\nimport { ClaimModal } from '@snx-v3/ClaimModal';\nimport { Deposit } from '@snx-v3/Deposit';\nimport { DepositModalAndromeda } from '@snx-v3/DepositModalAndromeda';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { Repay, RepayAndromedaDebt } from '@snx-v3/Repay';\nimport { RepayModal } from '@snx-v3/RepayModal';\nimport { Undelegate } from '@snx-v3/Undelegate';\nimport { UndelegateModal } from '@snx-v3/UndelegateModal';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport {\n  makeSearch,\n  ManageActionSchema,\n  ManageActionType,\n  type PositionPageSchemaType,\n  useParams,\n} from '@snx-v3/useParams';\nimport { validatePosition } from '@snx-v3/validatePosition';\nimport { Withdraw, WithdrawAndromeda } from '@snx-v3/Withdraw';\nimport { wei } from '@synthetixio/wei';\nimport React, { FormEvent, useCallback } from 'react';\nimport { COLLATERALACTIONS, DEBTACTIONS } from './actions';\n\nexport const ManageAction = ({\n  setTxnModalOpen,\n  txnModalOpen,\n}: {\n  setTxnModalOpen: (action?: ManageActionType) => void;\n  txnModalOpen?: ManageActionType;\n}) => {\n  const [params, setParams] = useParams<PositionPageSchemaType>();\n  const { network } = useNetwork();\n\n  const { debtChange, collateralChange, setCollateralChange, setDebtChange } =\n    React.useContext(ManagePositionContext);\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: liquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  const { isValid } = validatePosition({\n    issuanceRatioD18: collateralType?.issuanceRatioD18,\n    collateralAmount: liquidityPosition?.collateralAmount,\n    collateralPrice: liquidityPosition?.collateralPrice,\n    debt: liquidityPosition?.debt,\n    collateralChange,\n    debtChange,\n  });\n\n  const manageActionParam = ManageActionSchema.safeParse(params.manageAction);\n  const manageAction = manageActionParam.success ? manageActionParam.data : undefined;\n  const debtActions = DEBTACTIONS(network?.preset === 'andromeda');\n  const tab = debtActions.some((action) => action.link === manageAction) ? 'debt' : 'collateral';\n\n  const onSubmit = useCallback(\n    (e: FormEvent) => {\n      e.preventDefault();\n      const form = e.target as HTMLFormElement;\n      if ((network?.preset === 'andromeda' || isValid) && form.reportValidity()) {\n        setTxnModalOpen(manageAction);\n      }\n    },\n    [isValid, manageAction, network?.preset, setTxnModalOpen]\n  );\n\n  return (\n    <>\n      {!txnModalOpen ? (\n        <Box>\n          <Tabs isFitted index={tab === 'collateral' ? 0 : 1}>\n            <TabList>\n              <Tab\n                as={Link}\n                href={`?${makeSearch({\n                  page: 'position',\n                  collateralSymbol: params.collateralSymbol,\n                  manageAction: COLLATERALACTIONS[0].link,\n                  accountId: params.accountId,\n                })}`}\n                onClick={(e) => {\n                  e.preventDefault();\n                  if (tab !== 'collateral') {\n                    setCollateralChange(wei(0));\n                    setDebtChange(wei(0));\n                  }\n                  setParams({\n                    page: 'position',\n                    collateralSymbol: params.collateralSymbol,\n                    manageAction: COLLATERALACTIONS[0].link,\n                    accountId: params.accountId,\n                  });\n                }}\n                color={tab === 'collateral' ? 'white' : 'gray.500'}\n                fontWeight={700}\n                fontSize={['12px', '16px']}\n                whiteSpace=\"nowrap\"\n                textDecoration=\"none\"\n                _hover={{ textDecoration: 'none' }}\n              >\n                Manage Collateral\n              </Tab>\n              <Tab\n                as={Link}\n                href={`?${makeSearch({\n                  page: 'position',\n                  collateralSymbol: params.collateralSymbol,\n                  manageAction: debtActions[0].link,\n                  accountId: params.accountId,\n                })}`}\n                onClick={(e) => {\n                  e.preventDefault();\n                  if (tab !== 'debt') {\n                    setCollateralChange(wei(0));\n                    setDebtChange(wei(0));\n                  }\n                  setParams({\n                    page: 'position',\n                    collateralSymbol: params.collateralSymbol,\n                    manageAction: debtActions[0].link,\n                    accountId: params.accountId,\n                  });\n                }}\n                color={tab === 'debt' ? 'white' : 'gray.500'}\n                fontWeight={700}\n                fontSize={['12px', '16px']}\n                whiteSpace=\"nowrap\"\n                textDecoration=\"none\"\n                _hover={{ textDecoration: 'none' }}\n              >\n                {network?.preset === 'andromeda' ? 'Manage PnL' : 'Manage Debt'}\n              </Tab>\n            </TabList>\n\n            <TabPanels>\n              <TabPanel px=\"0\">\n                <Flex flexDir={['column', 'row']} gap={4}>\n                  {COLLATERALACTIONS.map((action) => (\n                    <Flex\n                      as={Link}\n                      href={`?${makeSearch({\n                        page: 'position',\n                        collateralSymbol: params.collateralSymbol,\n                        manageAction: action.link,\n                        accountId: params.accountId,\n                      })}`}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        setCollateralChange(wei(0));\n                        setDebtChange(wei(0));\n                        setParams({\n                          page: 'position',\n                          collateralSymbol: params.collateralSymbol,\n                          manageAction: action.link,\n                          accountId: params.accountId,\n                        });\n                      }}\n                      h=\"84px\"\n                      minH={['90px', '84px']}\n                      justifyContent=\"center\"\n                      key={action.title.concat('-tab-actions')}\n                      border=\"1px solid\"\n                      flexDir=\"column\"\n                      alignItems=\"center\"\n                      borderColor={manageAction === action.link ? 'cyan.500' : 'gray.900'}\n                      rounded=\"base\"\n                      flex=\"1\"\n                      minWidth={['100%', 'auto']}\n                      textDecoration=\"none\"\n                      _hover={{ textDecoration: 'none' }}\n                    >\n                      {action.icon(manageAction === action.link ? 'cyan' : 'white')}\n                      <Text\n                        fontSize=\"14px\"\n                        fontWeight={700}\n                        mt=\"2\"\n                        color={manageAction === action.link ? 'cyan.500' : 'white'}\n                        textAlign=\"center\"\n                        lineHeight=\"1.1\"\n                      >\n                        {action.title}\n                      </Text>\n                    </Flex>\n                  ))}\n                </Flex>\n              </TabPanel>\n              <TabPanel px=\"0\">\n                <Flex flexDir={['column', 'row']} gap={4}>\n                  {debtActions.map((action) => (\n                    <Flex\n                      as={Link}\n                      href={`?${makeSearch({\n                        page: 'position',\n                        collateralSymbol: params.collateralSymbol,\n                        manageAction: action.link,\n                        accountId: params.accountId,\n                      })}`}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        setCollateralChange(wei(0));\n                        setDebtChange(wei(0));\n                        setParams({\n                          page: 'position',\n                          collateralSymbol: params.collateralSymbol,\n                          manageAction: action.link,\n                          accountId: params.accountId,\n                        });\n                      }}\n                      flex=\"1\"\n                      h=\"84px\"\n                      minH={['90px', '84px']}\n                      justifyContent=\"center\"\n                      key={action.title.concat('-tab-actions')}\n                      border=\"1px solid\"\n                      flexDir=\"column\"\n                      alignItems=\"center\"\n                      borderColor={manageAction === action.link ? 'cyan.500' : 'gray.900'}\n                      rounded=\"base\"\n                      cursor=\"pointer\"\n                      minWidth={['100%', 'auto']}\n                      textDecoration=\"none\"\n                      _hover={{ textDecoration: 'none' }}\n                    >\n                      {action.icon(manageAction === action.link ? 'cyan' : 'white')}\n                      <Text\n                        fontSize=\"14px\"\n                        fontWeight={700}\n                        mt=\"2\"\n                        color={manageAction === action.link ? 'cyan.500' : 'white'}\n                        textAlign=\"center\"\n                        lineHeight=\"1.1\"\n                      >\n                        {action.title}\n                      </Text>\n                    </Flex>\n                  ))}\n                </Flex>\n              </TabPanel>\n            </TabPanels>\n          </Tabs>\n\n          {manageAction === 'repay' && network?.preset !== 'andromeda' ? (\n            // These components do not set txnModalOpen\n            <Flex direction=\"column\">\n              <Repay />\n            </Flex>\n          ) : manageAction === 'claim' && network?.preset !== 'andromeda' ? (\n            <Flex direction=\"column\">\n              <Borrow />\n            </Flex>\n          ) : manageAction === 'withdraw' && network?.preset === 'andromeda' ? (\n            <Flex direction=\"column\">\n              <WithdrawAndromeda />\n            </Flex>\n          ) : manageAction === 'withdraw' && network?.preset !== 'andromeda' ? (\n            <Flex direction=\"column\">\n              <Withdraw />\n            </Flex>\n          ) : manageAction === 'withdraw-debt' && network?.preset !== 'andromeda' ? (\n            <Flex direction=\"column\">\n              <Withdraw isDebtWithdrawal />\n            </Flex>\n          ) : (\n            <Flex direction=\"column\" as=\"form\" onSubmit={onSubmit}>\n              {manageAction === 'claim' ? <Claim /> : null}\n              {manageAction === 'deposit' ? <Deposit /> : null}\n              {manageAction === 'repay' && network?.preset === 'andromeda' ? (\n                <RepayAndromedaDebt />\n              ) : null}\n              {manageAction === 'repay' && network?.preset !== 'andromeda' ? <Repay /> : null}\n              {manageAction === 'undelegate' ? <Undelegate /> : null}\n            </Flex>\n          )}\n        </Box>\n      ) : null}\n\n      {txnModalOpen === 'repay' && network?.preset === 'andromeda' ? (\n        <RepayModal\n          onClose={() => {\n            setCollateralChange(wei(0));\n            setDebtChange(wei(0));\n            setTxnModalOpen(undefined);\n          }}\n        />\n      ) : null}\n      {txnModalOpen === 'claim' ? (\n        <ClaimModal\n          onClose={() => {\n            setCollateralChange(wei(0));\n            setDebtChange(wei(0));\n            setTxnModalOpen(undefined);\n          }}\n        />\n      ) : null}\n      {txnModalOpen === 'deposit' && network?.preset === 'andromeda' ? (\n        <DepositModalAndromeda\n          onClose={() => {\n            setCollateralChange(wei(0));\n            setDebtChange(wei(0));\n            setTxnModalOpen(undefined);\n          }}\n        />\n      ) : null}\n      {txnModalOpen === 'undelegate' ? (\n        <UndelegateModal\n          onClose={() => {\n            setCollateralChange(wei(0));\n            setDebtChange(wei(0));\n            setTxnModalOpen(undefined);\n          }}\n        />\n      ) : null}\n    </>\n  );\n};\n","import { ArrowBackIcon } from '@chakra-ui/icons';\nimport { Button, Divider, Skeleton, Table, Tbody, Td, Text, Th, Thead, Tr } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useLocks } from '@snx-v3/useLocks';\nimport { PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { wei } from '@synthetixio/wei';\nimport { intlFormat } from 'date-fns';\nimport React from 'react';\n\nexport const LockedCollateral: React.FC<{\n  onClose: () => void;\n}> = ({ onClose }) => {\n  const [params] = useParams<PositionPageSchemaType>();\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: locks, isPending: isPendingLocks } = useLocks(\n    params?.accountId,\n    collateralType?.address\n  );\n\n  return (\n    <div>\n      <Text color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n        <ArrowBackIcon cursor=\"pointer\" onClick={onClose} mr={2} />\n        Escrowed SNX\n      </Text>\n      <Divider my={4} />\n\n      {collateralType?.symbol === 'SNX' && (\n        <Text fontSize=\"14px\" color=\"white\">\n          All SNX rewards on V2 are subject to a 12-month escrow time-lock. Escrowed SNX is\n          <b> automatically locked </b> and will continue to earn rewards. After a 12-month lock,\n          this SNX can be <b>unlocked and withdrawn</b>.\n        </Text>\n      )}\n\n      <Table data-cy=\"locked collateral table\" mt={2.5} variant=\"simple\">\n        <Thead>\n          <Tr borderBottom=\"1px solid #2D2D38\">\n            <Th\n              textTransform=\"unset\"\n              color=\"gray.600\"\n              border=\"none\"\n              fontFamily=\"heading\"\n              fontSize=\"12px\"\n              lineHeight=\"16px\"\n              letterSpacing={0.6}\n              fontWeight={700}\n              px={4}\n              py={3}\n            >\n              Unlocking Date\n            </Th>\n            <Th\n              textTransform=\"unset\"\n              color=\"gray.600\"\n              border=\"none\"\n              fontFamily=\"heading\"\n              fontSize=\"12px\"\n              lineHeight=\"16px\"\n              letterSpacing={0.6}\n              fontWeight={700}\n              px={4}\n              py={3}\n              textAlign=\"right\"\n            >\n              {collateralType?.displaySymbol ?? params.collateralSymbol} Amount\n            </Th>\n          </Tr>\n        </Thead>\n        {collateralType && !isPendingLocks && locks ? (\n          <Tbody>\n            {locks.map((lock) => (\n              <Tr key={lock.timestamp.toString()} borderBottom=\"1px solid #2D2D38\">\n                <Td px={4} py={5} border=\"none\">\n                  <Text fontWeight={500} color=\"white\" fontSize=\"14px\">\n                    {intlFormat(lock.expirationDate, {\n                      year: 'numeric',\n                      month: 'short',\n                      day: 'numeric',\n                    })}\n                  </Text>\n                </Td>\n                <Td px={4} py={5} textAlign=\"right\" border=\"none\">\n                  <Text fontWeight={500} color=\"white\" fontSize=\"14px\">\n                    <Amount value={wei(lock.amount, Number(collateralType.decimals), true)} />\n                  </Text>\n                </Td>\n              </Tr>\n            ))}\n          </Tbody>\n        ) : null}\n      </Table>\n\n      {isPendingLocks ? <Skeleton mt={4} width=\"100%\" height=\"30px\" rounded=\"sm\" /> : null}\n      {!isPendingLocks && !locks?.length ? (\n        <Text\n          width=\"100%\"\n          textAlign=\"center\"\n          color=\"gray.500\"\n          fontWeight={500}\n          fontSize=\"14px\"\n          my=\"4\"\n          pl=\"3\"\n        >\n          No Escrowed {collateralType?.displaySymbol ?? params.collateralSymbol}\n        </Text>\n      ) : null}\n\n      <Button onClick={onClose} mt={6} width=\"100%\" variant=\"outline\" colorScheme=\"gray\">\n        Close\n      </Button>\n    </div>\n  );\n};\n","import { contractsHash } from '@snx-v3/tsHelpers';\nimport { Network, useNetwork, useProviderForChain } from '@snx-v3/useBlockchain';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useQuery } from '@tanstack/react-query';\nimport { BigNumber, ethers } from 'ethers';\n\nexport function useLocks(accountId?: string, collateralType?: string, customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n  const { data: CoreProxy } = useCoreProxy(targetNetwork);\n  const provider = useProviderForChain(targetNetwork);\n\n  return useQuery({\n    enabled: Boolean(provider && CoreProxy && accountId && collateralType),\n    queryKey: [\n      `${targetNetwork?.id}-${targetNetwork?.preset}`,\n      'Locks',\n      { contractsHash: contractsHash([CoreProxy]), accountId, collateralType },\n    ],\n    queryFn: async () => {\n      if (!(provider && CoreProxy && accountId && collateralType)) throw 'OMFG';\n\n      const CoreProxyContract = new ethers.Contract(CoreProxy.address, CoreProxy.abi, provider);\n\n      const locks: {\n        amountD18: BigNumber;\n        lockExpirationTime: BigNumber;\n      }[] = await CoreProxyContract.getLocks(accountId, collateralType, 0, 100);\n\n      return locks.map((lock) => ({\n        timestamp: lock.lockExpirationTime,\n        expirationDate: new Date(lock.lockExpirationTime.toNumber() * 1000),\n        amount: lock.amountD18,\n      }));\n    },\n  });\n}\n","import { getAprUrl } from '@snx-v3/constants';\nimport { ARBITRUM, BASE_ANDROMEDA, MAINNET, Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport type PositionAPR = {\n  poolId: number;\n  collateralType: string;\n  apr28d: number;\n  apr28dPnl: number;\n  apr28dRewards: number;\n  apr28dPerformance: number;\n  apr24hIncentiveRewards: number;\n};\n\nconst supportedAprNetworks = [BASE_ANDROMEDA.id, ARBITRUM.id, MAINNET.id];\n\nexport async function fetchApr(networkId?: number) {\n  try {\n    const isSupported = networkId && supportedAprNetworks.includes(networkId);\n    if (!isSupported) {\n      throw new Error(`APR endpoint not supported for network ${networkId}`);\n    }\n    const response = await fetch(getAprUrl(networkId));\n    const data: PositionAPR[] = await response.json();\n\n    // Math.max(...data.map(({ apr28d }: { apr28d: number }) => apr28d)) * 100\n    return data;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport function useApr(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const chain = customNetwork || network;\n\n  return useQuery({\n    queryKey: ['apr', chain?.id],\n    queryFn: async () => {\n      try {\n        return await fetchApr(chain?.id);\n      } catch (error) {\n        return;\n      }\n    },\n    staleTime: 60000,\n    enabled: Boolean(chain?.id),\n  });\n}\n","import { calculateCRatio } from '@snx-v3/calculations';\nimport { POOL_ID } from '@snx-v3/constants';\nimport { contractsHash } from '@snx-v3/tsHelpers';\nimport { Network, useNetwork, useProviderForChain } from '@snx-v3/useBlockchain';\nimport { useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { type LiquidityPositionType } from '@snx-v3/useLiquidityPosition';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { erc7412Call } from '@snx-v3/withERC7412';\nimport { wei } from '@synthetixio/wei';\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\n\nconst log = debug('snx:useLiquidityPositions');\n\nexport const useLiquidityPositions = ({\n  accountId,\n  network: customNetwork,\n}: {\n  accountId?: string;\n  network?: Network;\n}) => {\n  const { network: currentNetwork } = useNetwork();\n  const network = customNetwork || currentNetwork;\n  const provider = useProviderForChain(network);\n\n  const { data: CoreProxy } = useCoreProxy(network);\n  const { data: collateralTypes } = useCollateralTypes(false, network);\n  const { data: systemToken } = useSystemToken(network);\n\n  const queryClient = useQueryClient();\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'LiquidityPositions',\n      { accountId },\n      {\n        contractsHash: contractsHash([CoreProxy]),\n        collateralTypes: contractsHash([systemToken, ...(collateralTypes || [])]),\n      },\n    ],\n    enabled: Boolean(\n      network && provider && CoreProxy && systemToken && accountId && collateralTypes\n    ),\n    queryFn: async (): Promise<LiquidityPositionType[]> => {\n      if (!(network && provider && CoreProxy && systemToken && accountId && collateralTypes)) {\n        throw 'OMFG';\n      }\n      const CoreProxyContract = new ethers.Contract(CoreProxy.address, CoreProxy.abi, provider);\n\n      const getAccountAvailableSystemTokenCallPromised =\n        CoreProxyContract.populateTransaction.getAccountAvailableCollateral(\n          accountId,\n          systemToken.address\n        );\n      const getPositionCollateralCallsPromised = collateralTypes.map((collateralType) =>\n        CoreProxyContract.populateTransaction.getPositionCollateral(\n          accountId,\n          POOL_ID,\n          collateralType.tokenAddress\n        )\n      );\n      const getPositionDebtCallsPromised = collateralTypes.map((collateralType) =>\n        CoreProxyContract.populateTransaction.getPositionDebt(\n          accountId,\n          POOL_ID,\n          collateralType.tokenAddress\n        )\n      );\n      const getCollateralPriceCallsPromised = collateralTypes.map((collateralType) =>\n        CoreProxyContract.populateTransaction.getCollateralPrice(collateralType.tokenAddress)\n      );\n      const getAccountCollateralCallPromised = collateralTypes.map((collateralType) =>\n        CoreProxyContract.populateTransaction.getAccountCollateral(\n          accountId,\n          collateralType.tokenAddress\n        )\n      );\n      const calls = await Promise.all([\n        getAccountAvailableSystemTokenCallPromised,\n        ...getPositionCollateralCallsPromised,\n        ...getPositionDebtCallsPromised,\n        ...getCollateralPriceCallsPromised,\n        ...getAccountCollateralCallPromised,\n      ]);\n\n      return await erc7412Call(\n        network,\n        provider,\n        calls,\n        (decodedMulticall) => {\n          const [accountAvailableSystemToken] = CoreProxyContract.interface.decodeFunctionResult(\n            'getAccountAvailableCollateral',\n            decodedMulticall[0].returnData\n          );\n\n          const liquidityPositions = collateralTypes.map((collateralType, i) => {\n            const [positionCollateral] = CoreProxyContract.interface.decodeFunctionResult(\n              'getPositionCollateral',\n              decodedMulticall[1 + 0 * collateralTypes.length + i].returnData\n            );\n\n            const [positionDebt] = CoreProxyContract.interface.decodeFunctionResult(\n              'getPositionDebt',\n              decodedMulticall[1 + 1 * collateralTypes.length + i].returnData\n            );\n\n            const [collateralPriceRaw] = CoreProxyContract.interface.decodeFunctionResult(\n              'getCollateralPrice',\n              decodedMulticall[1 + 2 * collateralTypes.length + i].returnData\n            );\n\n            const [totalDepositedBigNumber, totalAssignedBigNumber, totalLockedBigNumber] =\n              CoreProxyContract.interface.decodeFunctionResult(\n                'getAccountCollateral',\n                decodedMulticall[1 + 3 * collateralTypes.length + i].returnData\n              );\n\n            const totalDeposited = wei(totalDepositedBigNumber);\n            const totalAssigned = wei(totalAssignedBigNumber);\n            const totalLocked = wei(totalLockedBigNumber);\n\n            log({\n              collateralType,\n              positionCollateral,\n              positionDebt,\n              collateralPriceRaw,\n              totalDeposited,\n              totalAssigned,\n              totalLocked,\n            });\n\n            const availableCollateral = wei(totalDeposited.sub(totalAssigned).sub(totalLocked));\n            const availableSystemToken = wei(accountAvailableSystemToken);\n\n            const collateralPrice = wei(collateralPriceRaw);\n            const collateralAmount = wei(positionCollateral);\n            const collateralValue = collateralAmount.mul(collateralPrice);\n            const debt = wei(positionDebt);\n            const cRatio = calculateCRatio(debt, collateralValue);\n\n            return {\n              collateralType,\n              collateralPrice,\n              availableCollateral,\n              availableSystemToken,\n              collateralAmount,\n              collateralValue,\n              debt,\n              cRatio,\n              totalDeposited,\n              totalAssigned,\n              totalLocked,\n            };\n          });\n          log(liquidityPositions);\n\n          liquidityPositions.forEach((liquidityPosition) => {\n            queryClient.setQueryData(\n              [\n                `${network?.id}-${network?.preset}`,\n                'LiquidityPosition',\n                { accountId },\n                { tokenAddress: liquidityPosition.collateralType.tokenAddress },\n                {\n                  contractsHash: contractsHash([CoreProxy]),\n                  collateralTypes: contractsHash([systemToken, liquidityPosition.collateralType]),\n                },\n              ],\n              liquidityPosition\n            );\n          });\n          return liquidityPositions;\n        },\n        'useLiquidityPositions'\n      );\n    },\n  });\n};\n","import { calculateCompoundedRate } from '@aave/math-utils';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useStataUSDCApr(networkId?: number, preset?: string) {\n  return useQuery({\n    enabled: isBaseAndromeda(networkId, preset),\n    queryKey: ['useStataUSDCAPR', networkId],\n    queryFn: async () => {\n      const subgraphResponse = await fetch(\n        'https://gateway.thegraph.com/api/f55095f3203bcba72cbee045322be46c/subgraphs/id/GQFbb95cE6d8mV989mL5figjaGaKCQB3xqYrr1bRyXqF',\n        {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ query }),\n        }\n      );\n\n      const data = await subgraphResponse.json();\n      const stataStats = data.data.reserves.filter(\n        (reserve: Record<string, string>) =>\n          reserve.underlyingAsset === '0x833589fcd6edb6e08f4c7c32d4f71b54bda02913'\n      )[0];\n      try {\n        return Number(\n          calculateCompoundedRate({\n            rate: stataStats.liquidityRate,\n            duration: 31536000, // seconds per year\n          })\n            .toNumber()\n            .toPrecision(2)\n            .split('e')[0]\n        );\n      } catch (_) {\n        return 0;\n      }\n    },\n  });\n}\n\nconst query = `\n  query {\n  reserves {\n    underlyingAsset\n    liquidityRate\n    }\n  }\n`;\n","import { InfoIcon } from '@chakra-ui/icons';\nimport { Box, Flex, Text } from '@chakra-ui/react';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { ClosePosition } from '@snx-v3/ClosePosition';\nimport { UnsupportedCollateralAlert } from '@snx-v3/CollateralAlert';\nimport { ManageStats, PositionTitle, StataDepositBanner } from '@snx-v3/Manage';\nimport { ManageAction } from '@snx-v3/ManageAction';\nimport { ManagePositionProvider } from '@snx-v3/ManagePositionContext';\nimport { LockedCollateral } from '@snx-v3/Positions';\nimport { Tooltip } from '@snx-v3/Tooltip';\nimport { useApr } from '@snx-v3/useApr';\nimport { useStataUSDCApr } from '@snx-v3/useApr/useStataUSDCApr';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useIsAndromedaStataUSDC } from '@snx-v3/useIsAndromedaStataUSDC';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type ManageActionType, type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\n\nexport const ManagePage = () => {\n  const [params, setParams] = useParams<PositionPageSchemaType>();\n  const { network } = useNetwork();\n\n  const { data: collateralType, isPending: isPendingCollateralType } = useCollateralType(\n    params.collateralSymbol\n  );\n  const { data: liquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  const { data: stataUSDCApr } = useStataUSDCApr(network?.id, network?.preset);\n\n  const isAndromedaStataUSDC = useIsAndromedaStataUSDC({\n    tokenAddress: collateralType?.tokenAddress,\n    customNetwork: network,\n  });\n\n  const [txnModalOpen, setTxnModalOpen] = React.useState<ManageActionType | undefined>(undefined);\n\n  const { data: apr, isPending: isPendingApr } = useApr(network);\n  const positionApr = React.useMemo(\n    () =>\n      apr?.find(\n        (item) => item.collateralType.toLowerCase() === collateralType?.tokenAddress.toLowerCase()\n      ),\n    [apr, collateralType?.tokenAddress]\n  );\n\n  return (\n    <ManagePositionProvider>\n      <Helmet>\n        <title>\n          {`Synthetix ${collateralType?.displaySymbol ?? params.collateralSymbol} Position`}\n        </title>\n        <meta\n          name=\"description\"\n          content={`Synthetix Liquidity V3 - ${\n            collateralType?.displaySymbol ?? params.collateralSymbol\n          } Position`}\n        />\n      </Helmet>\n      <UnsupportedCollateralAlert isOpen={!isPendingCollateralType && !collateralType} />\n      <Box mb={12} mt={8}>\n        <Flex\n          flexDir={['column', 'row']}\n          flexWrap=\"wrap\"\n          px={[0, 6]}\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          mb=\"8px\"\n          gap={4}\n        >\n          <PositionTitle />\n          <Flex alignItems={['center', 'flex-end']} direction=\"column\">\n            <Tooltip\n              label={\n                <Text textAlign=\"left\">\n                  Performance APR is calculated based on the last 28 days rolling average. <br />\n                  Rewards APR is calculated based on the last 1 hour of any active incentive\n                  program.\n                  {isAndromedaStataUSDC && (\n                    <>\n                      <br />\n                      Aave APR is the latest Aave lending rate.\n                    </>\n                  )}\n                </Text>\n              }\n            >\n              <Text\n                fontFamily=\"heading\"\n                fontSize=\"sm\"\n                lineHeight={5}\n                fontWeight=\"medium\"\n                color=\"gray.500\"\n              >\n                Estimated APR\n                <InfoIcon ml={1} mb=\"2px\" w=\"10px\" h=\"10px\" />\n              </Text>\n            </Tooltip>\n            <Text fontWeight=\"bold\" fontSize=\"20px\" color=\"white\" lineHeight=\"36px\">\n              {isPendingApr\n                ? '~'\n                : positionApr\n                  ? (\n                      positionApr.apr28dPerformance * 100 +\n                      (isAndromedaStataUSDC && stataUSDCApr ? stataUSDCApr : 0) +\n                      positionApr.apr24hIncentiveRewards * 100\n                    )\n                      .toFixed(2)\n                      .concat('%')\n                  : '-'}\n            </Text>\n          </Flex>\n        </Flex>\n        <Flex mt={6} flexDirection={['column', 'column', 'row']} gap={4}>\n          <Flex flex={1} direction=\"column\" gap={6}>\n            <BorderBox gap={4} p={6} flexDirection=\"column\" bg=\"navy.700\">\n              <ManageStats />\n            </BorderBox>\n            {isAndromedaStataUSDC &&\n              liquidityPosition &&\n              liquidityPosition.collateralAmount.eq(0) && <StataDepositBanner />}\n          </Flex>\n          <Flex\n            maxWidth={['100%', '100%', '501px']}\n            width=\"100%\"\n            flex={1}\n            alignSelf=\"flex-start\"\n            flexDirection=\"column\"\n          >\n            {params.manageAction === 'close' ? (\n              <BorderBox\n                flex={1}\n                maxW={['100%', '100%', '501px']}\n                p={6}\n                flexDirection=\"column\"\n                bg=\"navy.700\"\n                height=\"fit-content\"\n              >\n                <ClosePosition\n                  onClose={() =>\n                    setParams({\n                      page: 'position',\n                      collateralSymbol: params.collateralSymbol,\n                      manageAction: 'deposit',\n                      accountId: params.accountId,\n                    })\n                  }\n                />\n              </BorderBox>\n            ) : null}\n\n            {params.manageAction === 'locked' ? (\n              <BorderBox\n                flex={1}\n                maxW={['100%', '100%', '501px']}\n                p={6}\n                flexDirection=\"column\"\n                bg=\"navy.700\"\n                height=\"fit-content\"\n              >\n                <LockedCollateral\n                  onClose={() =>\n                    setParams({\n                      page: 'position',\n                      collateralSymbol: params.collateralSymbol,\n                      manageAction: 'deposit',\n                      accountId: params.accountId,\n                    })\n                  }\n                />\n              </BorderBox>\n            ) : null}\n\n            {!['close', 'locked'].includes(params.manageAction) ? (\n              <>\n                <BorderBox flex={1} p={6} flexDirection=\"column\" bg=\"navy.700\" height=\"fit-content\">\n                  <ManageAction setTxnModalOpen={setTxnModalOpen} txnModalOpen={txnModalOpen} />\n                </BorderBox>\n\n                {!txnModalOpen && liquidityPosition?.collateralAmount.gt(0) ? (\n                  <Text\n                    textAlign=\"center\"\n                    cursor=\"pointer\"\n                    onClick={() =>\n                      setParams({\n                        page: 'position',\n                        collateralSymbol: params.collateralSymbol,\n                        manageAction: 'close',\n                        accountId: params.accountId,\n                      })\n                    }\n                    color=\"cyan.500\"\n                    fontWeight={700}\n                    mt=\"5\"\n                    data-cy=\"close position\"\n                  >\n                    Close Position\n                  </Text>\n                ) : null}\n              </>\n            ) : null}\n          </Flex>\n        </Flex>\n      </Box>\n    </ManagePositionProvider>\n  );\n};\n","import { Box, Container, Flex, Spinner } from '@chakra-ui/react';\nimport { useParams } from '@snx-v3/useParams';\nimport { Suspense } from 'react';\nimport { AccountSettingsPage } from './AccountSettingsPage';\nimport { DashboardPage } from './DashboardPage';\nimport { Footer } from './Footer';\nimport Header from './Header';\nimport { ManagePage } from './ManagePage';\n\nfunction Content() {\n  const [params] = useParams();\n  if (params.page === 'settings') {\n    return <AccountSettingsPage />;\n  }\n  if (params.page === 'position') {\n    return <ManagePage />;\n  }\n  return <DashboardPage />;\n}\n\nexport function Router() {\n  return (\n    <Suspense fallback={<Spinner />}>\n      <Box\n        as=\"main\"\n        minHeight=\"100vh\"\n        color=\"rgba(255,255,255,0.85)\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        bg=\"navy.900\"\n      >\n        <Flex flex=\"1\" flexDirection=\"column\">\n          <Header />\n          <Container display=\"flex\" flexDir=\"column\" maxW=\"1236px\" flex=\"1\">\n            <Content />\n          </Container>\n          <Footer />\n        </Flex>\n      </Box>\n    </Suspense>\n  );\n}\n","import { ComponentMultiStyleConfig } from '@chakra-ui/react';\n\nexport const Progress: ComponentMultiStyleConfig = {\n  parts: ['filledTrack', 'track'],\n  baseStyle: {\n    track: {\n      overflow: 'unset',\n      bg: 'whiteAlpha.100',\n    },\n  },\n  variants: {\n    error: (props) => ({\n      filledTrack: {\n        bg: 'error',\n        boxShadow: `0px 0px 15px ${props.theme.colors.error}`,\n      },\n    }),\n    warning: (props) => ({\n      filledTrack: {\n        bg: 'warning',\n        boxShadow: `0px 0px 15px ${props.theme.colors.warning}`,\n      },\n    }),\n    success: (props) => ({\n      filledTrack: {\n        bg: 'success',\n        boxShadow: `0px 0px 15px ${props.theme.colors.success}`,\n      },\n    }),\n    'update-error': () => ({\n      filledTrack: {\n        bg: 'red.700',\n      },\n    }),\n    'update-warning': () => ({\n      filledTrack: {\n        bg: 'orange.700',\n      },\n    }),\n    'update-success': () => ({\n      filledTrack: {\n        bg: 'green.700',\n      },\n    }),\n    white: {\n      filledTrack: {\n        bg: 'white',\n        borderRadius: 'full',\n      },\n    },\n  },\n};\n","import { ChakraProvider, extendTheme, useColorMode } from '@chakra-ui/react';\nimport { DEFAULT_QUERY_STALE_TIME, SESSION_STORAGE_KEYS } from '@snx-v3/constants';\nimport { TermsModal } from '@snx-v3/TermsModal';\nimport { Fonts, theme } from '@snx-v3/theme';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools';\nimport { Web3OnboardProvider } from '@web3-onboard/react';\nimport { useEffect } from 'react';\nimport Head from 'react-helmet';\nimport { BrowserRouter } from 'react-router-dom';\nimport { onboard } from './onboard';\nimport { Router } from './Router';\nimport { Progress } from './theme';\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      retry: false,\n      refetchInterval: false, //  if queries needs refetching we should be explicit about it, given erc7412\n      staleTime: DEFAULT_QUERY_STALE_TIME,\n      refetchOnWindowFocus: false,\n      throwOnError: (e) => {\n        console.error(e);\n        return false;\n      },\n    },\n    mutations: {\n      retry: false,\n      throwOnError: (e) => {\n        console.error(e);\n        return false;\n      },\n    },\n  },\n});\n\nconst extendedTheme = extendTheme({\n  ...theme,\n  components: {\n    ...theme.components,\n    Progress,\n  },\n});\n\nfunction ColorMode() {\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  useEffect(() => {\n    if (colorMode === 'light') {\n      toggleColorMode();\n    }\n  }, [colorMode, toggleColorMode]);\n  return null;\n}\n\nexport const App = () => {\n  const TERMS_CONDITIONS_ACCEPTED =\n    localStorage.getItem(SESSION_STORAGE_KEYS.TERMS_CONDITIONS_ACCEPTED) === 'true';\n\n  return (\n    <>\n      <Head>\n        {/* open graph */}\n        <meta property=\"og:url\" content=\"https://liquidity.synthetix.io/\" />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:title\" content=\"Synthetix | Liquidity\" />\n        <meta\n          property=\"og:description\"\n          content=\"The Liquidity Layer of DeFi. Provide liquidity for the next generation of permissionless protocols\"\n        />\n        <meta property=\"og:image\" content=\"https://liquidity.synthetix.io/Liquidity.jpg\" />\n        <meta property=\"og:image:alt\" content=\"Synthetix | Liquidity\" />\n        <meta property=\"og:site_name\" content=\"\" />\n        {/* twitter */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:site\" content=\"@synthetix_io\" />\n        <meta name=\"twitter:creator\" content=\"@synthetix_io\" />\n        <meta name=\"twitter:image\" content=\"https://liquidity.synthetix.io/Liquidity.jpg\" />\n        <meta name=\"twitter:url\" content=\"https://liquidity.synthetix.io/\" />\n      </Head>\n      <QueryClientProvider client={queryClient}>\n        <Web3OnboardProvider web3Onboard={onboard}>\n          <ChakraProvider theme={extendedTheme}>\n            <ColorMode />\n            <Fonts />\n            <BrowserRouter>\n              <TermsModal\n                defaultOpen={process.env.NODE_ENV !== 'development' && !TERMS_CONDITIONS_ACCEPTED}\n              />\n              <Router />\n            </BrowserRouter>\n            <ReactQueryDevtools />\n          </ChakraProvider>\n        </Web3OnboardProvider>\n      </QueryClientProvider>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom/client';\nimport { devtoolsFormatters } from '@synthetixio/devtools-formatters';\nimport { magicWallet } from '@synthetixio/magic-wallet';\nimport { App } from './App';\n\nconst container = document.querySelector('#app');\n\ndeclare global {\n  var $magicWallet: `0x${string}`; // eslint-disable-line no-var\n  var $chainId: number; // eslint-disable-line no-var\n  var ethereum: any; // eslint-disable-line no-var\n  var _paq: any; // eslint-disable-line no-var\n}\n\nexport async function bootstrap() {\n  if (!container) {\n    throw new Error('Container #app does not exist');\n  }\n  if (window.localStorage.DEBUG === 'true') {\n    await devtoolsFormatters();\n  }\n  if (window.localStorage.MAGIC_WALLET && `${window.localStorage.MAGIC_WALLET}`.length === 42) {\n    await magicWallet(window.localStorage.MAGIC_WALLET);\n  }\n  const root = ReactDOM.createRoot(container);\n  root.render(<App />);\n}\n","/* global window */\n\nasync function devtoolsFormatters() {\n  const { Wei } = await import('@synthetixio/wei');\n  const { ethers } = await import('ethers');\n\n  function number(obj) {\n    if (obj.eq(ethers.constants.MaxUint256)) {\n      return 'MaxUint256';\n    }\n    if (obj.eq(ethers.constants.MaxInt256)) {\n      return 'MaxInt256';\n    }\n    if (obj.abs().gt(1e10)) {\n      // Assuming everything bigger than 1e10 is a wei\n      return `wei ${parseFloat(ethers.utils.formatEther(`${obj}`))}`;\n    }\n    return parseFloat(obj.toString());\n  }\n  // @ts-ignore\n  window.devtoolsFormatters = window.devtoolsFormatters ?? [];\n  // @ts-ignore\n  window.devtoolsFormatters.push({\n    header: function (obj) {\n      if (obj instanceof ethers.BigNumber) {\n        return [\n          'div',\n          { style: 'color: #6ff' },\n          ['span', {}, 'BigNumber('],\n          ['span', { style: 'color: #ff3' }, number(obj)],\n          ['span', {}, ' '],\n          ['span', { style: 'color: #3f3' }, obj.toHexString()],\n          ['span', {}, ')'],\n        ];\n      }\n      if (obj instanceof Wei) {\n        return [\n          'div',\n          { style: 'color: #6ff' },\n          ['span', {}, 'Wei('],\n          ['span', { style: 'color: #ff3' }, number(ethers.BigNumber.from(obj.toBN()))],\n          ['span', {}, ' '],\n          ['span', { style: 'color: #3f3' }, obj.toBN().toHexString()],\n          ['span', {}, ')'],\n        ];\n      }\n      return null;\n    },\n    hasBody: function () {\n      return false;\n    },\n  });\n}\n\nmodule.exports = {\n  devtoolsFormatters,\n};\n","/* global window */\n\nasync function magicWallet(magicWallet) {\n  const { ethers } = await import('ethers');\n  window.$magicWallet = magicWallet;\n  if (ethers.utils.isAddress(window.$magicWallet)) {\n    const rpcProvider = new ethers.providers.JsonRpcProvider('http://127.0.0.1:8545');\n    const network = await rpcProvider.getNetwork();\n    window.$chainId = network.chainId;\n\n    const { getMagicProvider } = await import('@snx-v3/useBlockchain');\n    const magicProvider = getMagicProvider();\n    window.ethereum = magicProvider\n      ? new Proxy(magicProvider, {\n          get(target, prop) {\n            // console.log('MAGIC_WALLET', prop, { target: target[prop] });\n            switch (prop) {\n              case 'chainId':\n                return `0x${Number(window.$chainId).toString(16)}`;\n              case 'isMetaMask':\n                return true;\n              case 'getSigner':\n                return () => {\n                  return magicProvider.getSigner(window.$magicWallet);\n                };\n              case 'request':\n                return async ({ method, params }) => {\n                  switch (method) {\n                    case 'eth_accounts':\n                    case 'eth_requestAccounts':\n                      return [window.$magicWallet];\n                    case 'eth_chainId':\n                      return `0x${Number(window.$chainId).toString(16)}`;\n                    case 'eth_sendTransaction':\n                    default: {\n                      try {\n                        const result = await magicProvider.send(method, params);\n                        console.log('MAGIC_WALLET', { method, params, result }); // eslint-disable-line no-console\n                        return result;\n                      } catch (error) {\n                        console.log('MAGIC_WALLET', { method, params, error }); // eslint-disable-line no-console\n                        throw error;\n                      }\n                    }\n                  }\n                };\n              default:\n                return target[prop];\n            }\n          },\n        })\n      : undefined;\n  }\n}\n\nmodule.exports = {\n  magicWallet,\n};\n"],"names":["ZEROWEI","Wei","D6","ethers","D18","D27","DEFAULT_QUERY_STALE_TIME","INFURA_KEY","getAprUrl","networkId","SESSION_STORAGE_KEYS","TERMS_CONDITIONS_ACCEPTED","offchainMainnetEndpoint","offchainTestnetEndpoint","tokenOverrides","symbol","displaySymbol","name","POOL_ID","async","importPythERC7412Wrapper","chainId","preset","Error","deployment","Number","toFixed","default","meta","abi","Promise","all","address","contracts","PythERC7412Wrapper","Logo","color","width","height","withText","_jsxs","Icon","viewBox","fill","children","_jsx","d","EthereumIcon","props","fillOpacity","FailedIcon","w","h","filter","fillRule","clipRule","id","x","y","filterUnits","colorInterpolationFilters","floodOpacity","result","in","type","values","stdDeviation","mode","in2","OptimismIcon","WalletIcon","LogoIcon","BaseIcon","Image","src","icon","alt","ArbitrumIcon","cx","cy","r","DiscordIcon","XIcon","clipPath","transform","GithubIcon","SNXChainIcon","MagicProvider","constructor","window","$chainId","$magicWallet","super","Object","defineProperty","this","enumerable","value","writable","magicWallet","method","params","toString","send","console","log","error","getMagicProvider","NetworkIcon","size","BASE_ANDROMEDA","hexId","token","rpcUrl","label","isSupported","publicRpcUrl","isTestnet","MAINNET","OPTIMISM","SEPOLIA","BASE_SEPOLIA","CANNON","OPTIMISM_SEPOLIA","ARBITRUM_SEPOLIA","ARBITRUM","SNAX","SNAXTESTNET","NETWORKS","deploymentHasERC7412","then","find","network","localStorage","getItem","appMetadata","SynthetixIcon","logo","description","recommendedInjectedWallets","url","gettingStartedGuide","explore","useProviderForChain","customNetwork","currentNetwork","useNetwork","isDefaultChain","data","provider","useQuery","queryKey","enabled","Boolean","queryFn","useWallet","wallet","connect","disconnect","useConnectWallet","activeWallet","undefined","walletsInfo","accounts","connectedChain","setChain","useSetChain","setNetwork","useCallback","newNetwork","n","useSigner","signer","getSigner","useProvider","gradients","grey","dark","orange","Button","defaultProps","colorScheme","variants","solid","defineStyle","c","bg","borderRadius","_hover","_disabled","_active","bgGradient","background","hoverBg","activeBg","outline","borderColor","border","ghost","theme","extendTheme","useSystemColorMode","initialColorMode","colors","gray","red","yellow","green","blue","cyan","purple","pink","navy","success","warning","shadows","fonts","heading","body","display","mono","components","Popover","responsive","popper","maxWidth","Input","focusBorderColor","errorBorderColor","Select","iconColor","NumberInput","Alert","variant","container","borderInlineStartColor","Textarea","Skeleton","startColor","endColor","Checkbox","baseStyle","control","_checked","_invalid","Radio","Badge","subtle","alignItems","boxShadow","Tag","Accordion","borderWidth","Progress","filledTrack","track","Tabs","tab","_selected","Tooltip","textAlign","Switch","Spinner","Menu","parts","button","span","px","list","mt","bgColor","padding","py","item","p","_first","borderTopLeftRadius","borderTopRightRadius","_last","borderBottomLeftRadius","borderBottomRightRadius","_focus","textStyles","fontSize","base","lg","fontFamily","lineHeight","fontWeight","md","sizes","max","min","full","xs","sm","xl","styles","global","Fonts","Global","TermsModal","defaultOpen","isOpen","setOpen","useState","setEnabled","Modal","onClose","ModalOverlay","ModalContent","pt","pb","ModalHeader","ModalBody","Text","Box","onScroll","e","div","currentTarget","scrollTop","scrollHeight","offsetHeight","as","my","overflow","overflowX","sx","backgroundColor","UnorderedList","ListItem","Link","href","target","_focusVisible","ReactRouterLink","to","mx","onClick","onSubmit","setItem","JSON","stringify","isDisabled","chains","reduce","assign","onboard","init","autoConnectLastWallet","autoConnectAllPreviousWallet","wallets","injectedModule","coinbaseModule","displayUnavailable","ProviderLabel","MetaMask","Trust","trezorModule","appUrl","email","ledgerModule","projectId","walletConnectVersion","walletConnectModule","version","dappUrl","gnosisModule","accountCenter","desktop","mobile","notify","HomePageSchema","z","object","page","literal","optional","accountId","string","showAll","SettingsPageSchema","ManageActionSchema","union","PositionPageSchema","collateralSymbol","manageAction","makeParams","newParams","createSearchParams","cleaned","entries","fromEntries","cleanObject","sort","a","b","localeCompare","makeSearch","useParams","searchParams","setSearchParams","useSearchParams","React","Array","from","schema","parsed","safeParse","searchParamsToObject","parseUnits","decimals","wei","toBN","prettyString","text","startLength","endLength","length","substring","renderAccountId","hex","toHexString","slice","currency","eq","abs","lt","number","toNumber","m2","numbro","format","thousandSeparated","mantissa","m0","parseFloat","importAccountProxy","AccountProxy","useAccountProxy","targetNetwork","staleTime","Infinity","throwOnError","debug","TransferOwnershipModal","refetch","owner","setTo","isPending","mutateAsync","submit","walletAddress","useMutation","mutationFn","AccountProxyContract","txn","transferFrom","receipt","waitForTransaction","hash","useTransferAccountId","isTargetValid","useMemo","toLowerCase","rounded","ModalCloseButton","Divider","disabled","onChange","trim","ModalFooter","flexDirection","gap","justifyContent","status","AlertIcon","Flex","direction","AlertDescription","etherscanLink","chain","isTx","transactionLink","txnHash","Address","link","CopyIcon","navigator","clipboard","writeText","cursor","rel","ExternalLinkIcon","importCoreProxy","CoreProxy","useCoreProxy","importTrustedMulticallForwarder","TrustedMulticallForwarder","useTrustedMulticallForwarder","useManagePermissions","existing","selected","Multicall3","grants","revokes","getPermissionDiff","concat","forEach","permission","includes","CoreProxyInterface","grantCalls","map","callData","encodeFunctionData","allowFailure","requireSuccess","revokeCalls","Multicall3Contract","aggregate3","permissionsList","contractsHash","Contracts","some","Contract","join","split","charCodeAt","useAccountPermissions","CoreProxyContract","getAccountPermissions","acc","user","permissions","useAccountOwner","ownerOf","PermissionsInfo","_Fragment","InfoIcon","ml","PermissionModal","existingPermissions","setAddress","selectedPermissions","setSelectedPermissions","permissionData","accountOwner","useEffect","isAddressValid","utils","isFormValid","flexDir","isInvalid","isActive","state","s","textTransform","PermissionRow","currentPermissions","isOwner","isPermissionOpen","onPermissionClose","onOpen","onPermissionOpen","useDisclosure","mutate","removePermissions","isSuccess","Tr","Td","borderBottomColor","flexWrap","IconButton","EditIcon","mr","isLoading","DeleteIcon","PermissionTableLoading","rows","_","i","row","borderBottomWidth","PermissionTable","refetchAccounts","isTransferOpen","onTransferClose","onTransferOpen","loadingOwner","refetchAccountOwner","TableContainer","flexGrow","borderCollapse","borderSpacing","mb","Heading","Table","Thead","Th","Tbody","isLoaded","keys","DelegationIcon","xmlns","useAccounts","numberOfAccountTokens","balanceOf","accountIndexes","calls","index","interface","multicallResponse","callStatic","returnData","tokenOfOwnerByIndex","decodeFunctionResult","Permissions","AccountSettingsPage","Helmet","content","ChakraTooltip","hasArrow","CONTRACT_ERROR_OPEN","ContractError","contractError","setIsOpen","fontStyle","Collapse","animateOpacity","unmountOnExit","whiteSpace","pl","args","key","val","Date","initialState","modalOpen","txnStatus","reducer","action","payload","filterDeprecated","feedId","importPythFeeds","pythFeeds","importPythVerifier","supportedNetworks","networksOffline","priceService","EvmPriceServiceConnection","getAllPriceIdsEntries","extras","Set","String","startsWith","endsWith","getPythFeedIdsFromCollateralList","collateralList","priceIds","importExtras","flat","deduped","priceId","replace","toUpperCase","collateral","useCollateralPriceUpdates","multicallAddress","multiCallAbi","multicallInterface","pythInterface","pythFeedIds","getPythFeedIds","txs","getPricesTx","call","decodedMultiCall","outdatedPriceIds","push","priceUpdateTx","unique","signedOffchainData","getPriceFeedsUpdateData","PythVerfier","getPriceUpdates","catch","refetchInterval","ERC721_ERRORS","PYTH_ERRORS","PANIC_REASONS","extractErrorData","cause","combineErrors","abiErrors","contract","line","parseErrorData","errorData","reason","decode","signature","code","errorParsed","uniqueAbiErrors","errorLine","fragment","sighash","has","add","dedupeErrors","parseError","errorArgs","parseInt","unwei","getTime","useAllErrors","importAllErrors","importPositionManager","importClosePosition","useClosePosition","usePositionManager","importPositionManagerAndromedaStataUSDC","importPositionManagerAndromedaUSDC","useStaticAaveUSDC","CollateralToken_stataBasUSDC","CollateralToken_stataUSDC","importStaticAaveUSDC","useContractErrorParser","AllErrors","ClosePosition","StaticAaveUSDC","PositionManager","PositionManagerAndromedaStataUSDC","usePositionManagerAndromedaStataUSDC","PositionManagerAndromedaUSDC","usePositionManagerAndromedaUSDC","parseContractError","useSNX","CollateralToken_SNX","importSNX","useSystemToken","systemToken","importSystemToken","loadCollateralTypes","collateralTokens","importCollateralTokens","config","depositingEnabled","issuanceRatioD18","liquidationRatioD18","liquidationRewardD18","minDelegationD18","oracleNodeId","tokenAddress","oracle","constPrice","externalContract","stalenessTolerance","pythFeedId","useCollateralTypes","includeDelegationOff","MainnetSNX","OptimismSNX","collateralType","useCollateralType","networkOverride","collateralTypes","useRewardsDistributors","rewardsDistributors","importRewardsDistributors","useSynthTokens","synthTokens","importSynthTokens","groupRewardsBySymbol","rewards","Map","claimableAmount","gt","distributor","synthToken","synth","payoutToken","set","get","useRewards","vaultDistributors","claimMethod","poolDistributors","flatMap","poolDistributorsPerCollateral","liquidationRewardsDistributors","multicall","populateTransaction","availableRewards","amount","info","importSpotMarketProxy","SpotMarketProxy","useSpotMarketProxy","importUSDProxy","USDProxy","notNil","fetchOffchainData","getDefaultFromAddress","chainName","logMulticall","AllInterface","readableAbi","minimal","dedupedFunctions","rest","parseTransaction","$","unnamedArgs","getMulticallTransaction","Multicall3Interface","multicallTxn","totalValue","gasLimit","estimateGas","_calls","withERC7412","transaction","newError","missingPriceUpdates","missingPriceUpdatesUnique","extraPriceUpdateTxn","erc7412Call","newCalls","erc7412Tx","res","mul","decodedMulticall","PythVerifier","decodedMulticallWithoutPriceUpdates","decoded","Amount","prefix","suffix","testId","isMaxUint","constants","lte","formattedValue","useAccountCollateralUnlockDate","lastInteraction","accountTimeoutWithdraw","getAccountLastInteraction","getConfigUint","collateralUnlock","WithdrawIncrease","DepositsIncreaseTimeout","accountCollateralUnlockDate","now","AllRewardsModal","cachedRewards","setCachedRewards","groupedRewards","minWidth","position","transitionProperty","transitionDuration","CheckIcon","CircularProgress","isIndeterminate","borderTop","borderTopColor","RewardsLoading","SkeletonCircle","pr","TokenIcon","fallbackSrc","style","SynthIcon","RewardsRow","Fade","Rewards","isPendingRewards","exec","claimAll","txnState","toast","useToast","isClosable","duration","dispatch","queryClient","useQueryClient","errorParser","mutation","transactions","SpotMarketProxyContract","minAmountReceived","sub","unwrap","synthMarketId","unshift","getAddress","sendTransaction","onError","closeAll","title","onSuccess","invalidateQueries","settle","useClaimAllRewards","backgroundImage","opacity","_paq","borderBottom","letterSpacing","StataUSDC","stataBalance","StaticAaveUSDCContract","maxRedeem","previewRedeem","isReady","unwrapStaticAaveUSDC","shares","receiver","textDecoration","SynthRow","balance","useSynthBalances","TokenInterface","balances","SynthsLoading","SynthsUnwrapModal","synthBalances","cachedSynths","setCachedSynths","filteredSynths","Synths","isPendingSynthBalances","unwrapAll","useUnwrapAllSynths","hasSynths","useLegacyMarket","LegacyMarketProxy","importLegacyMarket","POSITIVE_INFINITY","tokenAbi","useTokenBalance","accountAddress","TokenContract","select","SUSD","LegacyMarket","useUSDProxy","systemTokenBalance","unwrapSUSD","USDProxyContract","balanceOfV3USD","alowanceOfV3USD","allowance","approveV3USDGasLimit","approve","LegacyMarketContract","returnUSD","useMigrationData","migrationData","fetch","headers","json","fetchMigrationData","DashboardPage","isExternal","flex","Footer","Container","maxW","mainnets","NetworkController","setParams","toolTipLabel","setTooltipLabel","isPendingAccounts","paramsAccountId","notConnected","notSupported","account","autoSelect","disableModals","MenuButton","MenuList","MenuItem","placement","userSelect","ens","closeOnClick","setTimeout","preventDefault","SettingsIcon","stopPropagation","Header","location","useLocation","RouterLink","BorderBox","ManagePositionContext","createContext","collateralChange","debtChange","withdrawAmount","setDebtChange","setCollateralChange","setWithdrawAmount","ManagePositionProvider","Provider","NUMBER_REGEX","cleanupNumber","float","InputProps","inputValue","setInputValue","onInputChange","_value","isNaN","test","nextValue","_err","ref","useRef","current","setCustomValidity","gte","step","autoFocus","placeholder","_placeholder","maxLength","calculateCRatio","debt","collateralValue","useLiquidityPosition","getAccountAvailableSystemTokenCallPromised","getAccountAvailableCollateral","getPositionCollateralCallPromised","getPositionCollateral","getPositionDebtCallPromised","getPositionDebt","getCollateralPriceCallPromised","getCollateralPrice","getAccountCollateralCallPromised","getAccountCollateral","accountAvailableSystemToken","positionCollateral","positionDebt","collateralPriceRaw","totalDepositedBigNumber","totalAssignedBigNumber","totalLockedBigNumber","totalDeposited","totalAssigned","totalLocked","availableCollateral","availableSystemToken","collateralPrice","collateralAmount","cRatio","liquidityPosition","useTokenPrice","pythCollateralPrices","collateralPrices","collaterals","oracleId","stables","filteredCollaterals","price","collateralsWithPriceId","prices","getLatestPriceFeeds","col","getPriceUnchecked","expo","statusColor","failed","loading","createIcon","path","points","CloseIcon","StepIcon","__css","Step","minHeight","StepCheckbox","Multistep","subtitle","checkboxLabel","checkboxProps","LiquidityPositionUpdated","subline","alertText","summary","ChangeStat","formatFn","newValue","hasChanges","dataCy","isTruncated","ArrowForwardIcon","getDebtColor","PnlAmount","DebtAmount","DebtStats","newDebt","isPendingLiquidityPosition","ZodBigNumber","custom","BigNumber","isBigNumber","SmallIntSchema","WeiSchema","VaultCollateralSchema","PositionTitle","vaultsData","isPendingVaultsData","getVaultCollateral","vaultCollateral","parse","useVaultsData","vaultData","options","maximumFractionDigits","Intl","NumberFormat","ArrowUpIcon","StataDepositBanner","CoinImage","getHealthVariant","targetCratio","liquidationCratio","ratioIsMaxUInt","ratio","MAX_SAFE_INTEGER","getProgressSize","CRatioAmount","Math","round","badgeColors","CRatioBadge","LineWithText","left","tooltipText","top","bottom","margin","CRatioBar","newCRatio","currentCRatio","newBarSize","currentBarSize","TriangleDownIcon","right","TriangleUpIcon","CRatioChangeStat","currentCollateral","currentDebt","useIsAndromedaStataUSDC","addr","validatePosition","targetCRatio","newCollateralAmount","maybeMaxDebt","maxDebt","isValid","CollateralStats","alignContent","PnlStats","ManageStats","isAndromedaStataUSDC","stataRate","rate","useStaticAaveUSDCRate","adjustedCollateralChange","ClosePositionOneStep","onBack","refetchLiquidityPosition","txState","setTxState","usePythVerifier","usePythFeeds","execClosePosition","ClosePositionContract","freshLiquidityPosition","adjustedAllowance","approveAccountTx","approveUsdTx","closePositionTx","closePosition","callsPromise","ArrowBackIcon","approveAbi","useApprove","contractAddress","spender","refetchAllowance","useAllowance","sufficientAllowance","amountToApprove","infiniteApproval","gasLimitPromised","populatedTxnPromised","populatedTxn","requireApproval","useBorrow","borrowAmount","useReducer","mintUsd","useDebtRepayer","importDebtRepayer","useRepay","repayAmount","canRepay","PositionManagerContract","repayTx","repay","useUndelegate","undelegateAmount","collateralTypeAddress","delegateCollateral","isBaseAndromeda","USDC_BASE_MARKET","STATA_BASE_MARKET","useUndelegateBaseAndromeda","DebtRepayer","DebtRepayerContract","depositDebtToRepay","delegateTx","useUSDC","importUSDC","ClosePositionTransactions","steps","setSteps","wrapperToken","collateralAddress","availableUSDCollateral","isReadyApprove","execRepay","undelegate","USDC","approveUSDC","requireApprovalUSDC","isReadyApproveUSDC","undelegateBaseAndromeda","execBorrow","getSteps","cb","handleSubmit","ClosePositionUi","debtSymbol","isPendingSystemTokenBalance","debtPrice","ClosePositionDeployment","alignSelf","transactionStep","setTransactions","UnsupportedCollateralAlert","COLLATERALACTIONS","BorrowModal","setBorrowAmount","Borrow","isBorrowReady","mutationBorrow","maxClaimble","maxBorrowingCapacity","isRequired","Claim","useContext","ClaimSuccessBanner","SynthetixLogo","ClaimModal","showClaimBanner","setShowClaimBanner","isBorrow","settleBorrow","execBorrowWithErrorParser","TransactionSummary","items","justify","BalanceSchema","Deposit","transferrableSnx","snxCollateral","snxAddress","transferableSynthetix","transferable","useTransferableSynthetix","collateralBalance","ethBalance","getBalance","useEthBalance","USDCToken","usdcBalance","isPendingUsdcBalance","maxAmount","overAvailableBalance","minimumFractionDigits","formatNumber","usePositionManagerForCollateral","DepositModalAndromeda","txnStateApproveUSDC","txnStateDeposit","cachedCollateralChange","setCachedCollateralChange","execDeposit","callsPromises","increasePositionTx","increasePosition","setupPositionTx","setupPosition","RepayModal","setRepayAmount","Repay","isReadyRepay","mutationRepay","neg","RepayAndromedaDebt","clearDebt","settleRepay","useClearDebt","approvalLoading","hasEnoughBalance","useRepayBaseAndromeda","usdTokens","getWrapper","wrapCollateralType","snxUSD","sUSD","useGetUSDTokens","debtChangeAbs","amountToDeposit","spotMarketId","getSpotMarketId","wrap","Synth_Contract","synth_approval","sell_synth","sell","SystemTokenContract","sUSD_Approval","deposit","burn","burnUsd","Events","State","FailedSteps","ServiceNames","initialContext","RepayMachine","createMachine","initial","predictableActionArguments","context","on","actions","_context","event","states","cond","invoke","onDone","execRepayBaseAndromeda","settleRepayBaseAndromeda","useMachine","services","needToDeposit","matches","isChecked","checked","MarketConfigurationSchema","weight","maxDebtShareValue","isLocked","boolean","PoolConfigurationSchema","markets","array","isAnyMarketLocked","useWithdrawTimer","isLoadingDate","minutes","hours","seconds","isRunning","restart","useTimer","expiryTimestamp","autoStart","UndelegateModal","approvalTxnStatus","setUndelegateAmount","Undelegate","poolConfiguration","usePoolConfiguration","getPoolConfiguration","marketId","maxDebtShareValueD18","weightD18","allCalls","m","isMarketCapacityLocked","market","approveAndromedaUSDCAmount","approvalTxnState","isReadyApproveAndromedaUSDC","isReadyUndelegate","undelegateTxnState","isReadyUndelegateAndromeda","undelegateAndromedaTxnState","undelegateAndromeda","maxWithdrawable","minCollateralRequired","isLoadingRequiredData","leftoverCollateral","isValidLeftover","isInputDisabled","isSubmitDisabled","AlertTitle","UndelegateMachine","txSummary","setTxSummary","execUndelegate","collateralChangeString","isProcessing","WithdrawModal","isDebtWithdrawal","cachedWithdrawAmount","setCachedWithdrawAmount","Withdraw","unlockDate","withdraw","isWithdrawReady","useWithdraw","WithdrawModalAndromeda","WithdrawAndromeda","withdrawTx","ManageAction","setTxnModalOpen","txnModalOpen","manageActionParam","debtActions","isBase","DEBTACTIONS","form","reportValidity","isFitted","TabList","Tab","TabPanels","TabPanel","minH","LockedCollateral","locks","isPendingLocks","getLocks","lock","timestamp","lockExpirationTime","expirationDate","amountD18","useLocks","intlFormat","year","month","day","supportedAprNetworks","useApr","response","fetchApr","query","ManagePage","isPendingCollateralType","stataUSDCApr","subgraphResponse","stataStats","reserves","reserve","underlyingAsset","calculateCompoundedRate","liquidityRate","toPrecision","apr","isPendingApr","positionApr","apr28dPerformance","apr24hIncentiveRewards","Content","Router","Suspense","fallback","QueryClient","defaultOptions","queries","retry","refetchOnWindowFocus","mutations","extendedTheme","update-error","update-warning","update-success","white","ColorMode","colorMode","toggleColorMode","useColorMode","App","Head","property","QueryClientProvider","client","Web3OnboardProvider","web3Onboard","ChakraProvider","BrowserRouter","ReactQueryDevtools","document","querySelector","bootstrap","DEBUG","devtoolsFormatters","MAGIC_WALLET","ReactDOM","render","module","exports","obj","MaxUint256","MaxInt256","formatEther","header","hasBody","isAddress","rpcProvider","providers","JsonRpcProvider","getNetwork","magicProvider","ethereum","Proxy","prop"],"sourceRoot":""}