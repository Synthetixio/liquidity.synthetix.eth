{"version":3,"file":"chunk/app.f77918c8.js","mappings":"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","sources":["webpack://@snx-v3/liquidity/../components/icons/Logo/Logo.tsx","webpack://@snx-v3/liquidity/../components/icons/EthereumIcon/EthereumIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/OptimismIcon/OptimismIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/ArbitrumIcon/ArbitrumIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/FailedIcon/FailedIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/WalletIcon/WalletIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/LogoIcon/LogoIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/BaseIcon/BaseIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/DiscordIcon/DiscordIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/XIcon/XIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/GithubIcon/GithubIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/WarpcastIcon/WarpcastIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/YoutubeIcon/YoutubeIcon.tsx","webpack://@snx-v3/liquidity/../components/icons/Sparkles/Sparkles.tsx","webpack://@snx-v3/liquidity/../components/icons/SNXChainIcon/SNXChainIcon.tsx","webpack://@snx-v3/liquidity/../lib/constants/constants.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importPythERC7412Wrapper.ts","webpack://@snx-v3/liquidity/../lib/useBlockchain/magic.ts","webpack://@snx-v3/liquidity/../lib/useBlockchain/useBlockchain.tsx","webpack://@snx-v3/liquidity/../lib/theme/theme.ts","webpack://@snx-v3/liquidity/../lib/theme/fonts.tsx","webpack://@snx-v3/liquidity/../components/TermsModal/TermsModal.tsx","webpack://@snx-v3/liquidity/../lib/useParams/useParams.ts","webpack://@snx-v3/liquidity/./src/Footer.tsx","webpack://@snx-v3/liquidity/../lib/TokenIcon/TokenIcon.tsx","webpack://@snx-v3/liquidity/./src/components/Migration/StepSuccessFinal.tsx","webpack://@snx-v3/liquidity/../lib/format/format.ts","webpack://@snx-v3/liquidity/../lib/format/currency.ts","webpack://@snx-v3/liquidity/../components/Tooltip/Tooltip.tsx","webpack://@snx-v3/liquidity/../components/Amount/Amount.tsx","webpack://@snx-v3/liquidity/../components/ContractError/ContractError.tsx","webpack://@snx-v3/liquidity/../components/Multistep/StepIcon.tsx","webpack://@snx-v3/liquidity/../components/Multistep/statusColor.ts","webpack://@snx-v3/liquidity/../components/Multistep/Step.tsx","webpack://@snx-v3/liquidity/../components/Multistep/Multistep.tsx","webpack://@snx-v3/liquidity/../lib/txnReducer/txnReducer.ts","webpack://@snx-v3/liquidity/../lib/useAllowance/useAllowance.ts","webpack://@snx-v3/liquidity/../lib/useApprove/useApprove.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importAllErrors.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importPositionManager.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importClosePosition.ts","webpack://@snx-v3/liquidity/../lib/contracts/useClosePosition/useClosePosition.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importStaticAaveUSDC.ts","webpack://@snx-v3/liquidity/../lib/contracts/useStaticAaveUSDC/useStaticAaveUSDC.ts","webpack://@snx-v3/liquidity/../lib/parseContractError/parseContractError.ts","webpack://@snx-v3/liquidity/../lib/useContractErrorParser/useContractErrorParser.ts","webpack://@snx-v3/liquidity/../lib/contracts/useAllErrors/useAllErrors.ts","webpack://@snx-v3/liquidity/../lib/contracts/useLegacyMarket/useLegacyMarket.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importLegacyMarket.ts","webpack://@snx-v3/liquidity/../lib/useMigrateUSD/useMigrateUSD.ts","webpack://@snx-v3/liquidity/../lib/useTokenBalance/useTokenBalance.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importUSDProxy.ts","webpack://@snx-v3/liquidity/../lib/contracts/useUSDProxy/useUSDProxy.ts","webpack://@snx-v3/liquidity/../lib/tsHelpers/contractsHash.ts","webpack://@snx-v3/liquidity/../lib/tsHelpers/stringToHash.ts","webpack://@snx-v3/liquidity/../lib/contracts/useV2xSynthetix/useV2xSynthetix.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importV2x.ts","webpack://@snx-v3/liquidity/../lib/useV2sUSD/useV2sUSD.ts","webpack://@snx-v3/liquidity/../lib/ChangeStat/ChangeStat.tsx","webpack://@snx-v3/liquidity/./src/components/TransactionSummary/TransactionSummary.tsx","webpack://@snx-v3/liquidity/./src/components/MigrateUSD/StepSuccess.tsx","webpack://@snx-v3/liquidity/./src/components/MigrateUSD/MigrateUSDTransaction.tsx","webpack://@snx-v3/liquidity/../components/BorderBox/BorderBox.tsx","webpack://@snx-v3/liquidity/../components/NumberInput/NumberInput.tsx","webpack://@snx-v3/liquidity/./src/components/MigrateUSD/StepIntro.tsx","webpack://@snx-v3/liquidity/./src/components/MigrateUSD/MigrateUSDModal.tsx","webpack://@snx-v3/liquidity/./src/components/MigrateUSD/MigrateUSDButton.tsx","webpack://@snx-v3/liquidity/../lib/contracts/importers/importAccountProxy.ts","webpack://@snx-v3/liquidity/../lib/contracts/useAccountProxy/useAccountProxy.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importTrustedMulticallForwarder.ts","webpack://@snx-v3/liquidity/../lib/contracts/useTrustedMulticallForwarder/useTrustedMulticallForwarder.ts","webpack://@snx-v3/liquidity/../lib/useAccounts/useAccounts.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importCoreProxy.ts","webpack://@snx-v3/liquidity/../lib/contracts/useCoreProxy/useCoreProxy.ts","webpack://@snx-v3/liquidity/../lib/useCreateAccount/useCreateAccount.ts","webpack://@snx-v3/liquidity/../lib/useLocalStorage/useLocalStorage.ts","webpack://@snx-v3/liquidity/./src/NetworkController.tsx","webpack://@snx-v3/liquidity/./src/Header.tsx","webpack://@snx-v3/liquidity/../lib/useAccountInfo/useAccountPermissions.ts","webpack://@snx-v3/liquidity/../lib/etherscanLink/etherscanLink.ts","webpack://@snx-v3/liquidity/./src/components/Address/Address.tsx","webpack://@snx-v3/liquidity/../lib/useManagePermissions/useManagePermissions.ts","webpack://@snx-v3/liquidity/./src/components/Permissions/AccountPermissions.ts","webpack://@snx-v3/liquidity/./src/components/Permissions/PermissionsInfo.tsx","webpack://@snx-v3/liquidity/./src/components/Permissions/PermissionModal.tsx","webpack://@snx-v3/liquidity/./src/components/Permissions/PermissionRow.tsx","webpack://@snx-v3/liquidity/./src/components/Permissions/PermissionTableLoading.tsx","webpack://@snx-v3/liquidity/../lib/useTransferAccountId/useTransferAccountId.ts","webpack://@snx-v3/liquidity/./src/components/Permissions/TransferOwnershipModal.tsx","webpack://@snx-v3/liquidity/./src/components/Permissions/PermissionTable.tsx","webpack://@snx-v3/liquidity/./src/components/Permissions/DelegationIcon.tsx","webpack://@snx-v3/liquidity/./src/components/Permissions/Permissions.tsx","webpack://@snx-v3/liquidity/./src/pages/Account/Settings.tsx","webpack://@snx-v3/liquidity/../lib/useV2Position/useV2Position.ts","webpack://@snx-v3/liquidity/./src/components/Migration/StepIntro.tsx","webpack://@snx-v3/liquidity/./src/components/Migration/StepExplain.tsx","webpack://@snx-v3/liquidity/../lib/useMigrate/useMigrate.ts","webpack://@snx-v3/liquidity/./src/components/Migration/StepSuccess.tsx","webpack://@snx-v3/liquidity/./src/components/CRatioBar/CRatioBar.utils.ts","webpack://@snx-v3/liquidity/./src/components/CRatioBar/CRatioBadge.tsx","webpack://@snx-v3/liquidity/../lib/contracts/useSystemToken/useSystemToken.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importSystemToken.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importSNX.ts","webpack://@snx-v3/liquidity/../lib/contracts/useSNX/useSNX.ts","webpack://@snx-v3/liquidity/../lib/useCollateralTypes/useCollateralTypes.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importCollateralTokens.ts","webpack://@snx-v3/liquidity/./src/components/Migration/StepSummary.tsx","webpack://@snx-v3/liquidity/../lib/useRates/useRates.ts","webpack://@snx-v3/liquidity/./src/components/Migration/MigrationDialog.tsx","webpack://@snx-v3/liquidity/./src/components/Migration/MigrationBanner.tsx","webpack://@snx-v3/liquidity/../lib/contracts/importers/importPythFeeds.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importPythVerifier.ts","webpack://@snx-v3/liquidity/../lib/useApr/useApr.ts","webpack://@snx-v3/liquidity/../lib/usePoolsList/usePoolsList.ts","webpack://@snx-v3/liquidity/../lib/useCollateralPriceUpdates/useCollateralPriceUpdates.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importExtras.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importSpotMarketProxy.ts","webpack://@snx-v3/liquidity/../lib/tsHelpers/notNill.ts","webpack://@snx-v3/liquidity/../lib/withERC7412/withERC7412.ts","webpack://@snx-v3/liquidity/../lib/useOraclePrice/useOraclePrice.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importOracleManagerProxy.ts","webpack://@snx-v3/liquidity/./src/components/Pools/PoolCardsLoading.tsx","webpack://@snx-v3/liquidity/../lib/formatters/number.ts","webpack://@snx-v3/liquidity/../lib/isBaseAndromeda/isBaseAndromeda.ts","webpack://@snx-v3/liquidity/../lib/useApr/useStataUSDCApr.ts","webpack://@snx-v3/liquidity/../lib/contracts/useSynthTokens/useSynthTokens.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importSynthTokens.ts","webpack://@snx-v3/liquidity/../lib/useIsSynthStataUSDC/useIsSynthStataUSDC.ts","webpack://@snx-v3/liquidity/../lib/useStaticAaveUSDCRate/useStaticAaveUSDCRate.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importUSDC.ts","webpack://@snx-v3/liquidity/../lib/contracts/useUSDC/useUSDC.ts","webpack://@snx-v3/liquidity/./src/components/Pools/PoolRow.tsx","webpack://@snx-v3/liquidity/./src/components/Pools/PoolsList.tsx","webpack://@snx-v3/liquidity/../lib/calculations/calculations.ts","webpack://@snx-v3/liquidity/../lib/useLiquidityPositions/useLiquidityPositions.ts","webpack://@snx-v3/liquidity/./src/components/Positions/PositionEmpty.tsx","webpack://@snx-v3/liquidity/./src/components/Positions/PositionNotConnected.tsx","webpack://@snx-v3/liquidity/../lib/DebtAmount/DebtAmount.tsx","webpack://@snx-v3/liquidity/../lib/useAccountCollateralUnlockDate/useAccountCollateralUnlockDate.ts","webpack://@snx-v3/liquidity/../lib/useWithdrawTimer/useWithdrawTimer.ts","webpack://@snx-v3/liquidity/./src/components/CRatioBar/CRatioAmount.tsx","webpack://@snx-v3/liquidity/./src/components/Positions/PositionsRow.tsx","webpack://@snx-v3/liquidity/./src/components/SynthSkeleton/SynthSkeleton.tsx","webpack://@snx-v3/liquidity/./src/components/Positions/PositionsRowLoading.tsx","webpack://@snx-v3/liquidity/./src/components/Positions/PositionTableHeader.tsx","webpack://@snx-v3/liquidity/./src/components/Positions/TableDivider.tsx","webpack://@snx-v3/liquidity/./src/components/Positions/PositionsList.tsx","webpack://@snx-v3/liquidity/../lib/contracts/useRewardsDistributors/useRewardsDistributors.ts","webpack://@snx-v3/liquidity/../lib/contracts/importers/importRewardsDistributors.ts","webpack://@snx-v3/liquidity/../lib/useRewards/useRewards.ts","webpack://@snx-v3/liquidity/../lib/contracts/useSpotMarketProxy/useSpotMarketProxy.ts","webpack://@snx-v3/liquidity/../lib/useClaimAllRewards/useClaimAllRewards.tsx","webpack://@snx-v3/liquidity/../components/WithdrawIncrease/WithdrawIncrease.tsx","webpack://@snx-v3/liquidity/./src/components/Rewards/AllRewardsModal.tsx","webpack://@snx-v3/liquidity/./src/components/Rewards/RewardsLoading.tsx","webpack://@snx-v3/liquidity/./src/components/Rewards/RewardsRow.tsx","webpack://@snx-v3/liquidity/./src/components/Rewards/Rewards.tsx","webpack://@snx-v3/liquidity/../lib/useCollateralPrices/useCollateralPrices.ts","webpack://@snx-v3/liquidity/../lib/usePythPrice/usePythPrice.ts","webpack://@snx-v3/liquidity/./src/components/Stats/StatBox.tsx","webpack://@snx-v3/liquidity/./src/components/Stats/StatsList.tsx","webpack://@snx-v3/liquidity/../lib/useSynthBalances/useSynthBalances.ts","webpack://@snx-v3/liquidity/../lib/useUnwrapAllSynths/useUnwrapAllSynths.tsx","webpack://@snx-v3/liquidity/./src/components/Synths/SynthRow.tsx","webpack://@snx-v3/liquidity/./src/components/Synths/SynthsLoading.tsx","webpack://@snx-v3/liquidity/./src/components/Synths/SynthsUnwrapModal.tsx","webpack://@snx-v3/liquidity/./src/components/Synths/Synths.tsx","webpack://@snx-v3/liquidity/./src/pages/Dashboard.tsx","webpack://@snx-v3/liquidity/../lib/ManagePositionContext/ManagePositionContext.tsx","webpack://@snx-v3/liquidity/../lib/useLiquidityPosition/useLiquidityPosition.ts","webpack://@snx-v3/liquidity/../lib/useTokenPrice/useTokenPrice.ts","webpack://@snx-v3/liquidity/./src/components/Manage/LiquidityPositionUpdated.tsx","webpack://@snx-v3/liquidity/./src/components/ClosePosition/ClosePositionOneStep.tsx","webpack://@snx-v3/liquidity/../lib/contracts/usePythVerifier/usePythVerifier.ts","webpack://@snx-v3/liquidity/../lib/contracts/usePythFeeds/usePythFeeds.ts","webpack://@snx-v3/liquidity/../lib/useBorrow/useBorrow.tsx","webpack://@snx-v3/liquidity/../lib/contracts/importers/importDebtRepayer.ts","webpack://@snx-v3/liquidity/../lib/contracts/useDebtRepayer/useDebtRepayer.ts","webpack://@snx-v3/liquidity/../lib/useRepay/useRepay.tsx","webpack://@snx-v3/liquidity/../lib/contracts/usePositionManager/usePositionManager.ts","webpack://@snx-v3/liquidity/../lib/useUndelegate/useUndelegate.tsx","webpack://@snx-v3/liquidity/../lib/useUndelegateBaseAndromeda/useUndelegateBaseAndromeda.tsx","webpack://@snx-v3/liquidity/./src/components/ClosePosition/ClosePositionTransactions.tsx","webpack://@snx-v3/liquidity/./src/components/ClosePosition/ClosePosition.tsx","webpack://@snx-v3/liquidity/./src/components/CollateralAlert/UnsupportedCollateralAlert.tsx","webpack://@snx-v3/liquidity/../components/ClaimModal/ClaimSuccessBanner.tsx","webpack://@snx-v3/liquidity/../components/ClaimModal/ClaimModal.tsx","webpack://@snx-v3/liquidity/../components/DepositModal/DepositMachine.ts","webpack://@snx-v3/liquidity/../lib/useDeposit/useDeposit.tsx","webpack://@snx-v3/liquidity/../lib/useSynthToken/useSynthToken.ts","webpack://@snx-v3/liquidity/../lib/useDepositBaseAndromeda/useDepositBaseAndromeda.tsx","webpack://@snx-v3/liquidity/../lib/zod/zod.ts","webpack://@snx-v3/liquidity/../lib/useEthBalance/useEthBalance.ts","webpack://@snx-v3/liquidity/../lib/useWrapEth/useWrapEth.ts","webpack://@snx-v3/liquidity/./src/components/CRatioBar/CRatioChangeStat.tsx","webpack://@snx-v3/liquidity/../components/DepositModal/DepositModal.tsx","webpack://@snx-v3/liquidity/../lib/useConvertStataUSDC/useConvertStataUSDC.ts","webpack://@snx-v3/liquidity/../components/DepositModal/StataDepositModal.tsx","webpack://@snx-v3/liquidity/../lib/useGetUSDTokens/useGetUSDTokens.ts","webpack://@snx-v3/liquidity/../lib/useRepayBaseAndromeda/useRepayBaseAndromeda.tsx","webpack://@snx-v3/liquidity/../components/RepayModal/RepayMachine.ts","webpack://@snx-v3/liquidity/../components/RepayModal/RepayModal.tsx","webpack://@snx-v3/liquidity/../components/RepayModal/index.ts","webpack://@snx-v3/liquidity/../components/UndelegateModal/UndelegateMachine.ts","webpack://@snx-v3/liquidity/../components/UndelegateModal/UndelegateModal.tsx","webpack://@snx-v3/liquidity/../components/UndelegateModal/index.ts","webpack://@snx-v3/liquidity/../lib/validatePosition/validatePosition.ts","webpack://@snx-v3/liquidity/../lib/useUnwrapStataUSDC/useUnwrapStataUSDC.ts","webpack://@snx-v3/liquidity/../lib/useWithdraw/useWithdraw.tsx","webpack://@snx-v3/liquidity/../lib/useWithdrawBaseAndromeda/useWithdrawBaseAndromeda.tsx","webpack://@snx-v3/liquidity/../components/WithdrawModal/WithdrawModal.tsx","webpack://@snx-v3/liquidity/./src/components/Claim/Claim.tsx","webpack://@snx-v3/liquidity/./src/components/CollateralAlert/CollateralAlert.tsx","webpack://@snx-v3/liquidity/./src/components/Deposit/Deposit.tsx","webpack://@snx-v3/liquidity/../lib/useTransferableSynthetix/useTransferableSynthetix.ts","webpack://@snx-v3/liquidity/./src/components/Repay/RepayModal.tsx","webpack://@snx-v3/liquidity/./src/components/Repay/Repay.tsx","webpack://@snx-v3/liquidity/./src/components/Borrow/BorrowModal.tsx","webpack://@snx-v3/liquidity/./src/components/Borrow/Borrow.tsx","webpack://@snx-v3/liquidity/../lib/useClearDebt/useClearDebt.tsx","webpack://@snx-v3/liquidity/./src/components/Repay/RepayAndromedaDebt.tsx","webpack://@snx-v3/liquidity/../lib/usePoolConfiguration/usePoolConfiguration.ts","webpack://@snx-v3/liquidity/./src/components/Undelegate/Undelegate.tsx","webpack://@snx-v3/liquidity/./src/components/Withdraw/Withdraw.tsx","webpack://@snx-v3/liquidity/./src/components/Manage/actions.tsx","webpack://@snx-v3/liquidity/./src/components/Manage/ManageActions.tsx","webpack://@snx-v3/liquidity/./src/components/CRatioBar/LineWithText.tsx","webpack://@snx-v3/liquidity/./src/components/CRatioBar/CRatioBar.tsx","webpack://@snx-v3/liquidity/./src/components/Manage/CollateralStats.tsx","webpack://@snx-v3/liquidity/./src/components/Manage/DebtStats.tsx","webpack://@snx-v3/liquidity/./src/components/Manage/PnlStats.tsx","webpack://@snx-v3/liquidity/./src/components/Manage/ManageStats.tsx","webpack://@snx-v3/liquidity/../lib/useVaultsData/useVaultsData.ts","webpack://@snx-v3/liquidity/./src/components/Manage/PositionTitle.tsx","webpack://@snx-v3/liquidity/./src/components/Manage/StataDepositBanner.tsx","webpack://@snx-v3/liquidity/./src/components/Positions/LockedCollateral.tsx","webpack://@snx-v3/liquidity/../lib/useLocks/useLocks.ts","webpack://@snx-v3/liquidity/./src/pages/Manage.tsx","webpack://@snx-v3/liquidity/./src/Router.tsx","webpack://@snx-v3/liquidity/./src/utils/onboard.ts","webpack://@snx-v3/liquidity/./src/App.tsx","webpack://@snx-v3/liquidity/./src/utils/theme.ts","webpack://@snx-v3/liquidity/./src/index.tsx"],"sourcesContent":["import { Icon, IconProps } from '@chakra-ui/react';\n\ninterface LogoProps extends IconProps {\n  withText?: boolean;\n}\n\nexport const Logo = ({\n  color = '#00D1FF',\n  width = '126px',\n  height = '22px',\n  withText = true,\n}: LogoProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 126 22\" fill=\"none\" color={color}>\n      <path\n        d=\"M7.00677 4.80523C6.804 4.57155 6.55437 4.45443 6.25731 4.45443H0.182051C0.128089 4.45443 0.0839395 4.43722 0.0506907 4.40281C0.0168969 4.36895 0 4.33065 0 4.28957V0.164856C0 0.12378 0.0168969 0.0860357 0.0506907 0.0516214C0.0839395 0.0172071 0.128089 0 0.182051 0H6.60179C8.22171 0 9.61925 0.667193 10.7939 2.00047L12.3533 3.91823L9.31565 7.65107L7.00677 4.80523ZM18.2263 1.97993C19.4009 0.659977 20.805 0 22.4386 0H28.8381C28.8921 0 28.9324 0.0138767 28.9597 0.0410751C28.9864 0.0688286 29 0.109904 29 0.164856V4.28957C29 4.33065 28.9864 4.36895 28.9597 4.40281C28.9324 4.43722 28.8921 4.45443 28.8381 4.45443H22.7629C22.4658 4.45443 22.2162 4.57155 22.0134 4.80523L17.5379 10.291L22.0336 15.8178C22.2363 16.0382 22.4789 16.1481 22.7629 16.1481H28.8381C28.8921 16.1481 28.9324 16.1653 28.9597 16.1997C28.9864 16.2341 29 16.2791 29 16.3335V20.4582C29 20.4993 28.9864 20.5376 28.9597 20.5714C28.9324 20.6058 28.8921 20.623 28.8381 20.623H22.4386C20.805 20.623 19.4075 19.9564 18.2465 18.6226L14.5204 14.0444L10.7939 18.6226C9.61925 19.9564 8.21517 20.623 6.58162 20.623H0.182051C0.128089 20.623 0.0872099 20.6058 0.0605018 20.5714C0.0332488 20.537 0.0201673 20.4926 0.0201673 20.4371V16.3124C0.0201673 16.2713 0.0332488 16.2336 0.0605018 16.1991C0.0872099 16.1647 0.128089 16.1475 0.182051 16.1475H6.25731C6.54074 16.1475 6.79038 16.031 7.00677 15.7967L11.4011 10.3937L18.2263 1.97993Z\"\n        fill=\"#00D1FF\"\n      />\n      {withText && (\n        <g>\n          <path d=\"M42.9 3.86001V15.72H51.7V17.86H40.4V3.86001H42.9Z\" fill=\"white\" />\n          <path\n            d=\"M53.4645 7.02001H55.7845V17.86H53.4645V7.02001ZM53.4645 3.30001H55.7845V5.62001H53.4645V3.30001Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M61.0055 7.02001H68.5055V21.78H66.1855V16.38L64.4455 17.86H61.0055C59.4255 17.86 58.1655 16.54 58.1655 15.02V9.86002C58.1655 8.28002 59.4855 7.02001 61.0055 7.02001ZM61.6255 15.86H65.4855C65.8655 15.86 66.1855 15.56 66.1855 15.16V9.04002H61.6255C60.9855 9.04002 60.4655 9.54002 60.4655 10.18V14.7C60.4655 15.36 60.9855 15.86 61.6255 15.86Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M74.5408 15.86H78.3008C78.6808 15.86 79.0008 15.56 79.0008 15.16V7.02001H81.3208V17.86H79.0008V16.4L77.3208 17.86H73.9008C72.3808 17.86 71.0808 16.6 71.0808 15.02V7.02001H73.3808V14.7C73.3808 15.36 73.8808 15.86 74.5408 15.86Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M83.9333 7.02001H86.2533V17.86H83.9333V7.02001ZM83.9333 3.30001H86.2533V5.62001H83.9333V3.30001Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M96.6542 7.02001V3.14001H98.9742V17.86H96.6542V16.38L94.9142 17.86H91.4742C89.8942 17.86 88.6342 16.54 88.6342 15.02V9.86002C88.6342 8.28002 89.9542 7.02001 91.4742 7.02001H96.6542ZM92.0942 15.86H95.9542C96.3342 15.86 96.6542 15.56 96.6542 15.16V9.04002H92.0942C91.4542 9.04002 90.9342 9.54002 90.9342 10.18V14.7C90.9342 15.36 91.4542 15.86 92.0942 15.86Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M101.59 7.02001H103.91V17.86H101.59V7.02001ZM101.59 3.30001H103.91V5.62001H101.59V3.30001Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M113.09 15.86V17.86H110.31C108.77 17.86 107.51 16.66 107.51 15.08V9.04002H105.63V7.02001H107.51V4.64002H109.83V7.02001H113.11V9.04002H109.83V14.74C109.83 15.4 110.27 15.86 110.93 15.86H113.09Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M116.587 21.78L118.747 17.22L113.947 7.02001H116.467L119.947 14.74L123.267 7.02001H125.747L119.067 21.78H116.587Z\"\n            fill=\"white\"\n          />\n        </g>\n      )}\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const EthereumIcon = ({\n  width = '24px',\n  height = '24px',\n  fill = `#627EEA`,\n  ...props\n}: IconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 30 30\" fill=\"none\" {...props}>\n      <path\n        d=\"M15 30c8.284 0 15-6.716 15-15 0-8.284-6.716-15-15-15C6.716 0 0 6.716 0 15c0 8.284 6.716 15 15 15Z\"\n        fill={fill as string}\n      />\n      <path d=\"M15.467 3.75v8.316l7.028 3.14L15.467 3.75Z\" fill=\"#fff\" fillOpacity=\".602\" />\n      <path d=\"m15.467 3.75-7.03 11.456 7.03-3.14V3.75Z\" fill=\"#fff\" />\n      <path d=\"M15.467 20.595v5.65l7.033-9.73-7.033 4.08Z\" fill=\"#fff\" fillOpacity=\".602\" />\n      <path d=\"M15.467 26.245v-5.651l-7.03-4.08 7.03 9.731Z\" fill=\"#fff\" />\n      <path d=\"m15.467 19.287 7.028-4.08-7.028-3.14v7.22Z\" fill=\"#fff\" fillOpacity=\".2\" />\n      <path d=\"m8.438 15.206 7.029 4.081v-7.22l-7.03 3.14Z\" fill=\"#fff\" fillOpacity=\".602\" />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const OptimismIcon = ({\n  width = '24px',\n  height = '24px',\n  color = 'white',\n  fill = '#FF0420',\n  ...props\n}: IconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 34 34\" {...props}>\n      <path\n        d=\"M17 34C26.3888 34 34 26.3888 34 17C34 7.61116 26.3888 0 17 0C7.61116 0 0 7.61116 0 17C0 26.3888 7.61116 34 17 34Z\"\n        fill={fill as string}\n      />\n      <path\n        d=\"M12.3295 21.76C11.3042 21.76 10.4641 21.5131 9.80918 21.0195C9.16298 20.5171 8.83984 19.8031 8.83984 18.8775C8.83984 18.6836 8.8614 18.4456 8.90444 18.1635C9.01651 17.5289 9.1759 16.7664 9.38269 15.8761C9.96858 13.452 11.4808 12.24 13.9193 12.24C14.5828 12.24 15.1773 12.3546 15.7029 12.5838C16.2285 12.8041 16.6421 13.1391 16.9437 13.5886C17.2453 14.0294 17.3961 14.5583 17.3961 15.1753C17.3961 15.3604 17.3745 15.594 17.3314 15.8761C17.2022 16.6606 17.0471 17.4231 16.8662 18.1635C16.5646 19.3711 16.0433 20.2747 15.3022 20.8741C14.5612 21.4647 13.5703 21.76 12.3295 21.76ZM12.5105 19.856C12.993 19.856 13.4023 19.7105 13.7384 19.4196C14.083 19.1288 14.3286 18.6836 14.4751 18.0842C14.6732 17.2556 14.824 16.5328 14.9274 15.9158C14.9619 15.7306 14.9791 15.5411 14.9791 15.3472C14.9791 14.5451 14.5699 14.144 13.7513 14.144C13.2688 14.144 12.8552 14.2894 12.5105 14.5803C12.1744 14.8712 11.9332 15.3164 11.7867 15.9158C11.6316 16.5064 11.4765 17.2291 11.3214 18.0842C11.287 18.2605 11.2697 18.4456 11.2697 18.6395C11.2697 19.4505 11.6833 19.856 12.5105 19.856Z\"\n        fill={color as string}\n      />\n      <path\n        d=\"M17.9895 21.6278C17.8947 21.6278 17.8215 21.597 17.7698 21.5352C17.7267 21.4647 17.7138 21.3854 17.731 21.2972L19.5146 12.7028C19.5318 12.6059 19.5792 12.5265 19.6568 12.4648C19.7344 12.4031 19.8162 12.3722 19.9024 12.3722H23.3404C24.2968 12.3722 25.0636 12.575 25.641 12.9805C26.2269 13.386 26.5199 13.9721 26.5199 14.739C26.5199 14.9594 26.494 15.1886 26.4423 15.4266C26.2269 16.4403 25.7918 17.1895 25.1369 17.6744C24.4907 18.1592 23.6031 18.4016 22.4744 18.4016H20.7295L20.135 21.2972C20.1178 21.3942 20.0704 21.4735 19.9928 21.5352C19.9153 21.597 19.8334 21.6278 19.7473 21.6278H17.9895ZM22.5648 16.5769C22.9267 16.5769 23.2412 16.4755 23.5084 16.2728C23.7841 16.0701 23.965 15.7792 24.0513 15.4001C24.0771 15.2503 24.09 15.1181 24.09 15.0035C24.09 14.7479 24.0168 14.5539 23.8703 14.4217C23.7238 14.2806 23.4739 14.2101 23.1206 14.2101H21.5697L21.0785 16.5769H22.5648Z\"\n        fill={color as string}\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const ArbitrumIcon = ({ width = '24px', height = '24px', ...props }: IconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 42 42\" {...props}>\n      <circle cx=\"21\" cy=\"21\" r=\"21\" fill=\"#2D374B\" />\n      <path\n        d=\"M25.089 19.4942L27.7327 15.0085L34.8586 26.1072L34.8619 28.2365L34.8386 13.5798C34.8303 13.403 34.7795 13.2308 34.6907 13.0777C34.6018 12.9246 34.4774 12.7952 34.328 12.7003L21.4989 5.32125C21.3456 5.24842 21.1779 5.21102 21.0082 5.21182C20.8386 5.21262 20.6712 5.2516 20.5186 5.32587C20.479 5.34572 20.4407 5.3679 20.4037 5.39231L20.3591 5.42053L7.90602 12.6367L7.85753 12.6585C7.79299 12.6884 7.7314 12.7243 7.67359 12.7657C7.44004 12.9325 7.28088 13.1839 7.23002 13.4664C7.22223 13.5092 7.21692 13.5525 7.21411 13.5959L7.23361 25.5397L13.871 15.2522C14.7066 13.8881 16.5273 13.4487 18.2174 13.4725L20.201 13.5238L8.51275 32.2682L9.89067 33.0614L21.719 13.5426L26.9472 13.5236L15.1494 33.5342L20.0663 36.3639L20.6538 36.7018C20.9073 36.8025 21.1886 36.8081 21.4458 36.7175L34.4553 29.1783L31.9668 30.6196L25.089 19.4942ZM26.0978 34.0217L21.132 26.228L24.1631 21.0845L30.6846 31.3633L26.0978 34.0217Z\"\n        fill=\"#2D374B\"\n      />\n      <path\n        d=\"M21.1323 26.228L26.0981 34.0214L30.6851 31.363L24.1639 21.0845L21.1323 26.228Z\"\n        fill=\"#28A0F0\"\n      />\n      <path\n        d=\"M34.8623 28.2368L34.859 26.1074L27.7331 15.0087L25.0879 19.4939L31.9669 30.6193L34.4554 29.1781C34.5759 29.0804 34.6745 28.9584 34.7446 28.8201C34.8148 28.6818 34.855 28.5302 34.8626 28.3753L34.8623 28.2368Z\"\n        fill=\"#28A0F0\"\n      />\n      <path\n        d=\"M5.00171 30.2455L8.5141 32.2694L20.2024 13.5251L18.2187 13.4738C16.5286 13.4499 14.7079 13.8891 13.8723 15.2534L7.23495 25.541L5.00299 28.9718V30.2466L5.00171 30.2455Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M26.9474 13.5248L21.7195 13.5438L9.89111 33.0626L14.0254 35.4431L15.1496 33.5362L26.9474 13.5248Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M37.065 13.4979C37.0411 12.9583 36.8863 12.4327 36.614 11.9664C36.3417 11.5 35.96 11.1068 35.5019 10.8208L22.5047 3.34657C22.0407 3.11856 21.5306 3 21.0137 3C20.4967 3 19.9866 3.11856 19.5226 3.34657C19.4141 3.40121 6.88305 10.6689 6.88305 10.6689C6.70895 10.7525 6.54242 10.8511 6.38535 10.9634C5.97846 11.2528 5.64243 11.6306 5.40249 12.0684C5.16255 12.5063 5.02494 12.9928 5 13.4915V28.971L7.23196 25.5402L7.21477 13.5969C7.22521 13.4332 7.27184 13.2738 7.35129 13.1302C7.43074 12.9867 7.54104 12.8625 7.67424 12.7667C7.73325 12.7244 20.4782 5.34712 20.5188 5.32685C20.6714 5.25259 20.8387 5.21361 21.0084 5.21281C21.1781 5.21201 21.3458 5.24941 21.4991 5.32224L34.3282 12.7018C34.4776 12.7967 34.602 12.9261 34.6908 13.0792C34.7797 13.2323 34.8304 13.4045 34.8387 13.5813V28.3768C34.8356 28.5302 34.7998 28.6812 34.7337 28.8196C34.6675 28.9581 34.5726 29.0808 34.4552 29.1796L31.9667 30.6208L30.684 31.3648L26.0969 34.0232L21.4449 36.7192C21.1877 36.81 20.9064 36.8044 20.653 36.7036L15.1493 33.538L14.0251 35.4447L18.9713 38.2924C19.135 38.3852 19.2807 38.4678 19.4002 38.5351C19.5855 38.6377 19.7117 38.7082 19.7561 38.7298C20.1699 38.9111 20.6173 39.0032 21.0691 38.9999C21.4834 39.0005 21.8942 38.9232 22.28 38.7721L35.7915 30.9474C36.1727 30.6509 36.4843 30.2744 36.7042 29.8445C36.9242 29.4145 37.0471 28.9415 37.0645 28.4589L37.065 13.4979Z\"\n        fill=\"#96BEDC\"\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const FailedIcon = ({ w = '94px', h = '94px' }: IconProps) => {\n  return (\n    <Icon w={w} h={h} viewBox=\"0 0 94 94\" fill=\"none\">\n      <g filter=\"url(#filter0_d_1044_28165)\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M47 76.3333C63.2004 76.3333 76.3333 63.2004 76.3333 47C76.3333 30.7996 63.2004 17.6667 47 17.6667C30.7996 17.6667 17.6667 30.7996 17.6667 47C17.6667 63.2004 30.7996 76.3333 47 76.3333ZM47 79C64.6731 79 79 64.6731 79 47C79 29.3269 64.6731 15 47 15C29.3269 15 15 29.3269 15 47C15 64.6731 29.3269 79 47 79Z\"\n          fill=\"#FF4A60\"\n        />\n      </g>\n      <g filter=\"url(#filter1_d_1044_28165)\">\n        <path\n          d=\"M56.3334 39.5466L54.4534 37.6666L47.0001 45.12L39.5467 37.6666L37.6667 39.5466L45.1201 47L37.6667 54.4533L39.5467 56.3333L47.0001 48.88L54.4534 56.3333L56.3334 54.4533L48.8801 47L56.3334 39.5466Z\"\n          fill=\"#FF4A60\"\n        />\n      </g>\n      <defs>\n        <filter\n          id=\"filter0_d_1044_28165\"\n          x=\"0\"\n          y=\"0\"\n          width=\"94\"\n          height=\"94\"\n          filterUnits=\"userSpaceOnUse\"\n          colorInterpolationFilters=\"sRGB\"\n        >\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\n          <feColorMatrix\n            in=\"SourceAlpha\"\n            type=\"matrix\"\n            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n            result=\"hardAlpha\"\n          />\n          <feOffset />\n          <feGaussianBlur stdDeviation=\"7.5\" />\n          <feColorMatrix\n            type=\"matrix\"\n            values=\"0 0 0 0 1 0 0 0 0 0.116667 0 0 0 0 0.222667 0 0 0 0.6 0\"\n          />\n          <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow_1044_28165\" />\n          <feBlend\n            mode=\"normal\"\n            in=\"SourceGraphic\"\n            in2=\"effect1_dropShadow_1044_28165\"\n            result=\"shape\"\n          />\n        </filter>\n        <filter\n          id=\"filter1_d_1044_28165\"\n          x=\"22.6667\"\n          y=\"22.6666\"\n          width=\"48.6667\"\n          height=\"48.6666\"\n          filterUnits=\"userSpaceOnUse\"\n          colorInterpolationFilters=\"sRGB\"\n        >\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\n          <feColorMatrix\n            in=\"SourceAlpha\"\n            type=\"matrix\"\n            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n            result=\"hardAlpha\"\n          />\n          <feOffset />\n          <feGaussianBlur stdDeviation=\"7.5\" />\n          <feColorMatrix\n            type=\"matrix\"\n            values=\"0 0 0 0 1 0 0 0 0 0.116667 0 0 0 0 0.222667 0 0 0 0.6 0\"\n          />\n          <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow_1044_28165\" />\n          <feBlend\n            mode=\"normal\"\n            in=\"SourceGraphic\"\n            in2=\"effect1_dropShadow_1044_28165\"\n            result=\"shape\"\n          />\n        </filter>\n      </defs>\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const WalletIcon = ({\n  width = '20px',\n  height = '20ox',\n  color = 'whiteAlpha.700',\n  ...props\n}: IconProps) => {\n  return (\n    <Icon width={width} color={color} height={height} viewBox=\"0 0 20 20\" fill=\"none\" {...props}>\n      <path\n        d=\"M6.58154 6.2701C6.23637 6.2701 5.95654 6.54993 5.95654 6.8951C5.95654 7.24028 6.23637 7.5201 6.58154 7.5201H10.3101C10.6553 7.5201 10.9351 7.24028 10.9351 6.8951C10.9351 6.54993 10.6553 6.2701 10.3101 6.2701H6.58154Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M13.972 9.10498C13.6268 9.10498 13.347 9.38481 13.347 9.72998C13.347 10.0752 13.6268 10.355 13.972 10.355H14.1873C14.5324 10.355 14.8123 10.0752 14.8123 9.72998C14.8123 9.38481 14.5324 9.10498 14.1873 9.10498H13.972Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M17.2918 11.6311L17.2916 11.6447V12.3416C17.2916 14.6883 15.3892 16.5907 13.0426 16.5907H7.07331C4.72664 16.5907 2.82422 14.6883 2.82422 12.3416V7.38508C2.82422 5.0384 4.72664 3.13599 7.07331 3.13599H13.0426C15.3892 3.13599 17.2916 5.0384 17.2916 7.38508V7.90016L17.2918 7.91382L17.2916 7.92747V11.6174L17.2918 11.6311ZM7.07331 4.38599C5.41699 4.38599 4.07422 5.72876 4.07422 7.38508V12.3416C4.07422 13.9979 5.41699 15.3407 7.07331 15.3407H13.0426C14.6989 15.3407 16.0416 13.9979 16.0416 12.3416V12.2561H13.871C12.4998 12.2552 11.3876 11.1445 11.3867 9.77282C11.3867 8.40047 12.4998 7.28966 13.8706 7.28882H16.0401C15.9893 5.67705 14.6667 4.38599 13.0426 4.38599H7.07331ZM13.8714 11.0061H16.0416V8.53882H13.8712C13.1891 8.53932 12.6369 9.09162 12.6367 9.77223C12.6372 10.4535 13.1895 11.0056 13.8714 11.0061Z\"\n        fill=\"currentColor\"\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const LogoIcon = ({ color = 'cyan.400', width = '29', height = '21' }: IconProps) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 29 21\" fill=\"none\" color={color}>\n      <path\n        d=\"M6.81239 5.45766C6.61525 5.22805 6.37254 5.11297 6.08372 5.11297H0.177C0.124536 5.11297 0.0816109 5.09606 0.0492845 5.06224C0.0164282 5.02898 0 4.99134 0 4.95098V0.89807C0 0.85771 0.0164282 0.820622 0.0492845 0.786807C0.0816109 0.752992 0.124536 0.736084 0.177 0.736084H6.41864C7.99362 0.736084 9.35239 1.39166 10.4944 2.70173L12.0106 4.58611L9.05721 8.25396L6.81239 5.45766ZM17.7207 2.68155C18.8627 1.38457 20.2278 0.736084 21.8161 0.736084H28.0381C28.0906 0.736084 28.1298 0.749719 28.1563 0.776444C28.1822 0.803714 28.1955 0.844074 28.1955 0.89807V4.95098C28.1955 4.99134 28.1822 5.02898 28.1563 5.06224C28.1298 5.09606 28.0906 5.11297 28.0381 5.11297H22.1314C21.8426 5.11297 21.5998 5.22805 21.4027 5.45766L17.0514 10.8479L21.4223 16.2785C21.6195 16.495 21.8553 16.603 22.1314 16.603H28.0381C28.0906 16.603 28.1298 16.6199 28.1563 16.6538C28.1822 16.6876 28.1955 16.7318 28.1955 16.7852V20.8381C28.1955 20.8785 28.1822 20.9161 28.1563 20.9494C28.1298 20.9832 28.0906 21.0001 28.0381 21.0001H21.8161C20.2278 21.0001 18.8691 20.3451 17.7403 19.0345L14.1176 14.5359L10.4944 19.0345C9.35239 20.3451 7.98727 21.0001 6.39903 21.0001H0.177C0.124536 21.0001 0.0847905 20.9832 0.0588234 20.9494C0.0323264 20.9156 0.0196078 20.8719 0.0196078 20.8174V16.7645C0.0196078 16.7241 0.0323264 16.687 0.0588234 16.6532C0.0847905 16.6194 0.124536 16.6025 0.177 16.6025H6.08372C6.35929 16.6025 6.602 16.488 6.81239 16.2578L11.0848 10.9488L17.7207 2.68155Z\"\n        fill=\"currentColor\"\n      />\n    </Icon>\n  );\n};\n","import { Image } from '@chakra-ui/react';\nimport icon from './icon.svg';\n\nexport function BaseIcon({ ...props }) {\n  return <Image src={icon} alt=\"Base\" {...props} />;\n}\n","import { Icon, IconProps } from '@chakra-ui/react';\n\ninterface DiscordIcon extends IconProps {\n  fill?: string;\n}\n\nexport const DiscordIcon = ({ width = '15px', height = '15px', ...props }: DiscordIcon) => {\n  return (\n    <Icon width={width} height={height} viewBox=\"0 0 24 24\" fill=\"none\" {...props}>\n      <path\n        d=\"M9.84893 10.3091C9.247 10.3091 8.77179 10.8341 8.77179 11.4746C8.77179 12.1151 9.25756 12.6401 9.84893 12.6401C10.4509 12.6401 10.9261 12.1151 10.9261 11.4746C10.9366 10.8341 10.4509 10.3091 9.84893 10.3091ZM13.7034 10.3091C13.1015 10.3091 12.6263 10.8341 12.6263 11.4746C12.6263 12.1151 13.112 12.6401 13.7034 12.6401C14.3053 12.6401 14.7806 12.1151 14.7806 11.4746C14.7806 10.8341 14.3053 10.3091 13.7034 10.3091Z\"\n        fill=\"#FEFEFF\"\n      />\n      <path\n        d=\"M18.8354 1.49976H4.68468C3.49138 1.49976 2.51984 2.46578 2.51984 3.6628V17.8591C2.51984 19.0561 3.49138 20.0222 4.68468 20.0222H16.66L16.1003 18.0796L17.452 19.3291L18.7298 20.5052L21.0002 22.5002V3.6628C21.0002 2.46578 20.0287 1.49976 18.8354 1.49976ZM14.7591 15.2131C14.7591 15.2131 14.379 14.7615 14.0622 14.3625C15.4456 13.974 15.9736 13.113 15.9736 13.113C15.5406 13.3965 15.1288 13.596 14.7591 13.7325C14.2311 13.953 13.7242 14.1 13.2279 14.184C12.2141 14.373 11.2848 14.3205 10.4928 14.1735C9.89088 14.058 9.37343 13.89 8.94046 13.722C8.69757 13.6275 8.43357 13.512 8.16956 13.365C8.13788 13.344 8.1062 13.3335 8.07452 13.3125C8.0534 13.302 8.04284 13.2915 8.03228 13.281C7.84219 13.176 7.73659 13.1025 7.73659 13.1025C7.73659 13.1025 8.24348 13.9425 9.58463 14.3415C9.26782 14.7405 8.8771 15.2131 8.8771 15.2131C6.54328 15.1396 5.65623 13.617 5.65623 13.617C5.65623 10.2359 7.1769 7.49539 7.1769 7.49539C8.69757 6.36136 10.1443 6.39286 10.1443 6.39286L10.2499 6.51887C8.34908 7.06488 7.47258 7.8944 7.47258 7.8944C7.47258 7.8944 7.70491 7.76839 8.09564 7.58989C9.22558 7.09638 10.1232 6.95988 10.4928 6.92838C10.5562 6.91788 10.609 6.90737 10.6723 6.90737C11.3165 6.82337 12.0452 6.80237 12.8055 6.88637C13.8087 7.00188 14.8859 7.29588 15.9841 7.8944C15.9841 7.8944 15.1499 7.10688 13.3546 6.56087L13.5025 6.39286C13.5025 6.39286 14.9492 6.36136 16.4699 7.49539C16.4699 7.49539 17.9906 10.2359 17.9906 13.617C17.9906 13.617 17.093 15.1396 14.7591 15.2131Z\"\n        fill=\"#FEFEFF\"\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const XIcon = ({ ...props }: IconProps) => {\n  return (\n    <Icon viewBox=\"0 0 24 24\" fill=\"none\" {...props}>\n      <g clipPath=\"url(#clip0_14230_11024)\">\n        <path\n          d=\"M10.573 13.5844L4.98887 20.25H6.31212L11.1608 14.4623L15.0334 20.25H19.5L13.6438 11.498L19.5 4.50809H18.1767L13.0564 10.6201L8.9666 4.50809H4.5L10.5733 13.5844H10.573ZM12.3854 11.4209L12.9788 12.2924L17.6999 19.227H15.6673L11.8573 13.6306L11.264 12.7591L6.3115 5.48454H8.34405L12.3854 11.4206V11.4209Z\"\n          fill=\"white\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_14230_11024\">\n          <rect width=\"15\" height=\"15.75\" fill=\"white\" transform=\"matrix(-1 0 0 -1 19.5 20.25)\" />\n        </clipPath>\n      </defs>\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const GithubIcon = ({ ...props }: IconProps) => {\n  return (\n    <Icon viewBox=\"0 0 24 24\" fill=\"none\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M12.0002 2.25049C6.61603 2.25049 2.25058 6.72675 2.25058 12.2476C2.25058 16.6642 5.04356 20.4121 8.91822 21.7331C9.40578 21.8258 9.58498 21.5163 9.58498 21.2514C9.58498 21.013 9.57529 20.2251 9.57207 19.3907C6.85819 19.995 6.28668 18.2121 6.28668 18.2121C5.84271 17.0566 5.20501 16.7487 5.20501 16.7487C4.32029 16.1279 5.2712 16.1411 5.2712 16.1411C6.24955 16.2123 6.76617 17.1708 6.76617 17.1708C7.63635 18.6988 9.04737 18.2568 9.60274 18.0018C9.68992 17.3562 9.94339 16.9142 10.2211 16.6642C8.05611 16.411 5.77975 15.5535 5.77975 11.7245C5.77975 10.6335 6.16075 9.74127 6.78393 9.04103C6.68222 8.7894 6.34964 7.77297 6.87757 6.39566C6.87757 6.39566 7.69609 6.12749 9.55915 7.42037C10.3373 7.19854 11.1704 7.08763 12.0002 7.08432C12.8284 7.08763 13.6631 7.19854 14.4428 7.42037C16.3043 6.12749 17.1212 6.39566 17.1212 6.39566C17.6523 7.77297 17.3181 8.7894 17.2164 9.04103C17.8412 9.74127 18.219 10.6335 18.219 11.7245C18.219 15.5634 15.9378 16.4093 13.768 16.6576C14.1183 16.9672 14.4299 17.5764 14.4299 18.5084C14.4299 19.846 14.4186 20.922 14.4186 21.2514C14.4186 21.5179 14.5946 21.8292 15.0886 21.7315C18.96 20.4088 21.7498 16.6626 21.7498 12.2476C21.7498 6.72675 17.3843 2.25049 12.0002 2.25049Z\"\n        fill=\"#FEFEFF\"\n      />\n      <path\n        d=\"M5.94295 16.6031C5.92196 16.6527 5.84447 16.6676 5.77505 16.6328C5.70401 16.5997 5.66526 16.5319 5.68787 16.4822C5.70885 16.4309 5.78473 16.4176 5.85577 16.4508C5.9268 16.4855 5.96716 16.5534 5.94295 16.6031Z\"\n        fill=\"#FEFEFF\"\n      />\n      <path\n        d=\"M6.33886 17.055C6.29204 17.0997 6.20163 17.0782 6.14028 17.0086C6.0757 16.9391 6.0644 16.8464 6.11122 16.8017C6.15965 16.757 6.24683 16.7785 6.31141 16.8481C6.37437 16.9176 6.38729 17.0103 6.33886 17.055Z\"\n        fill=\"#FEFEFF\"\n      />\n      <path\n        d=\"M6.72318 17.6313C6.66345 17.6743 6.56497 17.6346 6.50523 17.5452C6.4455 17.4558 6.4455 17.3498 6.50685 17.3068C6.56658 17.2638 6.66345 17.3018 6.7248 17.3912C6.78453 17.4806 6.78453 17.5882 6.72318 17.6313Z\"\n        fill=\"#FEFEFF\"\n      />\n      <path\n        d=\"M7.24861 18.1876C7.19533 18.2488 7.08071 18.2323 6.99837 18.1495C6.91281 18.0684 6.8902 17.9542 6.94348 17.8946C6.99837 17.8333 7.11138 17.8515 7.19533 17.9326C7.27928 18.0121 7.30512 18.128 7.24861 18.1876Z\"\n        fill=\"#FEFEFF\"\n      />\n      <path\n        d=\"M7.97585 18.5102C7.95164 18.588 7.84185 18.6244 7.73207 18.5913C7.62229 18.5565 7.54964 18.4655 7.57224 18.386C7.59484 18.3066 7.70463 18.2702 7.81602 18.3049C7.92742 18.3397 7.99846 18.4307 7.97585 18.5102Z\"\n        fill=\"#FEFEFF\"\n      />\n      <path\n        d=\"M8.77338 18.5695C8.77661 18.6523 8.68297 18.7202 8.56673 18.7218C8.45049 18.7251 8.35524 18.6573 8.35524 18.5762C8.35524 18.4934 8.44726 18.4255 8.5635 18.4239C8.67813 18.4222 8.77338 18.4884 8.77338 18.5695Z\"\n        fill=\"#FEFEFF\"\n      />\n      <path\n        d=\"M9.51542 18.4407C9.52995 18.5218 9.44923 18.6029 9.33299 18.6261C9.21998 18.6476 9.11504 18.598 9.10051 18.5185C9.08598 18.4357 9.16832 18.353 9.28133 18.3314C9.39757 18.3099 9.50089 18.3596 9.51542 18.4407Z\"\n        fill=\"#FEFEFF\"\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const WarpcastIcon = ({ ...props }: IconProps) => {\n  return (\n    <Icon viewBox=\"0 0 24 24\" fill=\"none\" {...props}>\n      <g clipPath=\"url(#clip0_14230_11037)\">\n        <path\n          d=\"M6.52381 7.30209C7.07677 9.37496 7.54202 11.0837 7.55756 11.0993C7.57316 11.1148 7.90732 9.92686 8.30024 8.45929L9.32137 4.64551L9.62823 3.5H12.0094C13.3191 3.5 14.3906 3.51182 14.3906 3.52623C14.3906 3.54974 16.36 10.9554 16.4034 11.0949C16.4133 11.1268 16.8207 9.64756 17.3088 7.80784C17.7969 5.96812 18.2549 4.24627 18.3265 3.98145L18.4566 3.5H21.1385C22.6135 3.5 23.8214 3.52245 23.8226 3.5498C23.8239 3.57716 22.7107 7.40183 21.349 12.0491L18.873 20.4985L16.5341 20.4993L14.1951 20.5L14.0945 20.1514C14.0392 19.9597 13.5453 18.2065 12.9969 16.2554C12.4485 14.3044 11.9924 12.7011 11.9833 12.6925C11.9742 12.6839 11.4737 14.4369 10.8711 16.5881L9.77539 20.4994L7.43902 20.4997C5.27152 20.5 5.10012 20.4916 5.06752 20.3838C5.04813 20.3199 3.93934 16.5472 2.60352 12C1.26769 7.45283 0.15877 3.67976 0.139312 3.61548C0.105777 3.50491 0.252535 3.49947 2.8111 3.51587L5.51842 3.5332L6.52381 7.30209Z\"\n          fill=\"white\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_14230_11037\">\n          <rect width=\"24\" height=\"24\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const YoutubeIcon = ({ ...props }: IconProps) => {\n  return (\n    <Icon viewBox=\"0 0 24 24\" fill=\"none\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M20.3943 4.94354C21.3075 5.18802 22.0253 5.90572 22.2697 6.81901C22.7115 8.47269 22.7133 11.925 22.7133 11.925C22.7133 11.925 22.7133 15.3773 22.2697 17.031C22.0253 17.9443 21.3075 18.662 20.3943 18.9064C18.7406 19.35 12.1066 19.35 12.1066 19.35C12.1066 19.35 5.47269 19.35 3.819 18.9064C2.90572 18.662 2.18802 17.9443 1.94354 17.031C1.5 15.3773 1.5 11.925 1.5 11.925C1.5 11.925 1.5 8.47269 1.94354 6.81901C2.18802 5.90572 2.90572 5.18802 3.819 4.94354C5.47269 4.5 12.1066 4.5 12.1066 4.5C12.1066 4.5 18.7406 4.5 20.3943 4.94354ZM15.4944 11.9254L9.98331 15.107V8.74375L15.4944 11.9254Z\"\n        fill=\"white\"\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const Sparkles = ({ ...props }: IconProps) => {\n  return (\n    <Icon width=\"15\" height=\"14\" viewBox=\"0 0 15 14\" fill=\"none\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M5.75 3.30322C5.93307 3.30322 6.09678 3.41547 6.16031 3.58454L7.03581 5.91453L9.40183 6.7767C9.57352 6.83926 9.6875 7.00048 9.6875 7.18076C9.6875 7.36104 9.57352 7.52226 9.40183 7.58482L7.03581 8.44699L6.16031 10.777C6.09678 10.9461 5.93307 11.0583 5.75 11.0583C5.56693 11.0583 5.40322 10.9461 5.33969 10.777L4.46419 8.44699L2.09817 7.58482C1.92648 7.52226 1.8125 7.36104 1.8125 7.18076C1.8125 7.00048 1.92648 6.83926 2.09817 6.7767L4.46419 5.91453L5.33969 3.58454C5.40322 3.41547 5.56693 3.30322 5.75 3.30322ZM5.75 4.97554L5.21499 6.39936C5.17068 6.51728 5.07626 6.61026 4.95651 6.6539L3.51067 7.18076L4.95651 7.70762C5.07626 7.75126 5.17068 7.84424 5.21499 7.96217L5.75 9.38598L6.28501 7.96217C6.32932 7.84424 6.42374 7.75126 6.54349 7.70762L7.98933 7.18076L6.54349 6.6539C6.42374 6.61026 6.32932 6.51728 6.28501 6.39936L5.75 4.97554Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M5.21499 6.39936L5.75 4.97554L6.28501 6.39936C6.32932 6.51728 6.42374 6.61026 6.54349 6.6539L7.98933 7.18076L6.54349 7.70762C6.42374 7.75126 6.32932 7.84424 6.28501 7.96217L5.75 9.38598L5.21499 7.96217C5.17068 7.84424 5.07626 7.75126 4.95651 7.70762L3.51067 7.18076L4.95651 6.6539C5.07626 6.61026 5.17068 6.51728 5.21499 6.39936Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M11.4103 2.14851C11.3468 1.97943 11.1831 1.86719 11 1.86719C10.8169 1.86719 10.6532 1.97943 10.5897 2.14851L10.1868 3.2206L9.09817 3.61731C8.92648 3.67988 8.8125 3.8411 8.8125 4.02138C8.8125 4.20166 8.92648 4.36287 9.09817 4.42544L10.1868 4.82215L10.5897 5.89424C10.6532 6.06332 10.8169 6.17556 11 6.17556C11.1831 6.17556 11.3468 6.06332 11.4103 5.89424L11.8132 4.82215L12.9018 4.42544C13.0735 4.36287 13.1875 4.20166 13.1875 4.02138C13.1875 3.8411 13.0735 3.67988 12.9018 3.61731L11.8132 3.2206L11.4103 2.14851Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M11.4103 8.46736C11.3468 8.29828 11.1831 8.18604 11 8.18604C10.8169 8.18604 10.6532 8.29828 10.5897 8.46736L10.1868 9.53945L9.09817 9.93616C8.92648 9.99872 8.8125 10.1599 8.8125 10.3402C8.8125 10.5205 8.92648 10.6817 9.09817 10.7443L10.1868 11.141L10.5897 12.2131C10.6532 12.3822 10.8169 12.4944 11 12.4944C11.1831 12.4944 11.3468 12.3822 11.4103 12.2131L11.8132 11.141L12.9018 10.7443C13.0735 10.6817 13.1875 10.5205 13.1875 10.3402C13.1875 10.1599 13.0735 9.99872 12.9018 9.93616L11.8132 9.53945L11.4103 8.46736Z\"\n        fill=\"white\"\n      />\n    </Icon>\n  );\n};\n","import { Icon, IconProps } from '@chakra-ui/react';\n\nexport const SNXChainIcon = ({ ...props }: IconProps) => {\n  return (\n    <Icon width=\"178px\" height=\"178px\" viewBox=\"0 0 178 178\" fill=\"none\" {...props}>\n      <circle cx=\"89.0198\" cy=\"88.4095\" r=\"88.305\" fill=\"#06061B\" />\n      <path\n        d=\"M68.0815 75.158C67.5149 74.5153 66.8174 74.1932 65.9874 74.1932H49.0126C48.8618 74.1932 48.7384 74.1459 48.6455 74.0512C48.5511 73.9581 48.5039 73.8528 48.5039 73.7398V62.3958C48.5039 62.2828 48.5511 62.179 48.6455 62.0844C48.7384 61.9897 48.8618 61.9424 49.0126 61.9424H66.9499C71.4761 61.9424 75.381 63.7773 78.6629 67.4442L83.0201 72.7185L74.5327 82.9848L68.0815 75.158ZM99.4299 67.3877C102.712 63.7575 106.635 61.9424 111.199 61.9424H129.08C129.231 61.9424 129.344 61.9805 129.42 62.0553C129.495 62.1317 129.533 62.2446 129.533 62.3958V73.7398C129.533 73.8528 129.495 73.9581 129.42 74.0512C129.344 74.1459 129.231 74.1932 129.08 74.1932H112.105C111.275 74.1932 110.578 74.5153 110.011 75.158L97.5064 90.2452L110.068 105.445C110.634 106.051 111.312 106.354 112.105 106.354H129.08C129.231 106.354 129.344 106.401 129.42 106.496C129.495 106.59 129.533 106.714 129.533 106.864V118.208C129.533 118.321 129.495 118.426 129.42 118.519C129.344 118.614 129.231 118.661 129.08 118.661H111.199C106.635 118.661 102.73 116.828 99.4863 113.159L89.0754 100.568L78.6629 113.159C75.381 116.828 71.4578 118.661 66.8936 118.661H49.0126C48.8618 118.661 48.7476 118.614 48.673 118.519C48.5968 118.424 48.5603 118.302 48.5603 118.15V106.806C48.5603 106.693 48.5968 106.589 48.673 106.494C48.7476 106.399 48.8618 106.352 49.0126 106.352H65.9874C66.7793 106.352 67.4768 106.032 68.0815 105.387L80.3595 90.5276L99.4299 67.3877Z\"\n        fill=\"#00D1FF\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M1.62306 101.122C1.02459 96.9706 0.714844 92.7262 0.714844 88.4095C0.714844 85.5803 0.84789 82.7823 1.10807 80.0212L11.5198 67.3877C14.8017 63.7575 18.7248 61.9424 23.2891 61.9424H41.1701C41.3209 61.9424 41.4336 61.9805 41.5097 62.0553C41.5844 62.1317 41.6224 62.2446 41.6224 62.3958V73.7398C41.6224 73.8528 41.5844 73.9581 41.5097 74.0512C41.4336 74.1459 41.3209 74.1932 41.1701 74.1932H24.1953C23.3653 74.1932 22.6678 74.5153 22.1012 75.158L9.59627 90.2452L22.1576 105.445C22.7241 106.051 23.4018 106.354 24.1953 106.354H41.1701C41.3209 106.354 41.4336 106.401 41.5097 106.496C41.5844 106.59 41.6224 106.714 41.6224 106.864V118.208C41.6224 118.321 41.5844 118.426 41.5097 118.519C41.4336 118.614 41.3209 118.661 41.1701 118.661H23.2891C18.7248 118.661 14.82 116.828 11.5761 113.159L1.62306 101.122Z\"\n        fill=\"#00D1FF\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M176.393 101.284C177.007 97.0816 177.325 92.7827 177.325 88.4095C177.325 85.5791 177.192 82.7799 176.931 80.0176L168.27 90.5276L155.992 105.387C155.387 106.032 154.689 106.352 153.898 106.352H136.923C136.772 106.352 136.658 106.399 136.583 106.494C136.507 106.589 136.47 106.693 136.47 106.806V118.15C136.47 118.302 136.507 118.424 136.583 118.519C136.658 118.614 136.772 118.661 136.923 118.661H154.804C159.368 118.661 163.291 116.828 166.573 113.159L176.393 101.284ZM153.898 74.1932C154.728 74.1932 155.425 74.5153 155.992 75.158L162.443 82.9848L170.93 72.7185L166.573 67.4442C163.291 63.7773 159.386 61.9424 154.86 61.9424H136.923C136.772 61.9424 136.649 61.9897 136.556 62.0844C136.461 62.179 136.414 62.2828 136.414 62.3958V73.7398C136.414 73.8528 136.461 73.9581 136.556 74.0512C136.649 74.1459 136.772 74.1932 136.923 74.1932H153.898Z\"\n        fill=\"#00D1FF\"\n      />\n    </Icon>\n  );\n};\n","import Wei from '@synthetixio/wei';\nimport { ethers } from 'ethers';\n\nexport const LOCAL_STORAGE_KEYS = {\n  SHOW_TESTNETS: 'SHOW_TESTNETS',\n};\nexport const ZEROWEI = new Wei(0);\n\nexport const D6 = ethers.utils.parseUnits('1', 6);\nexport const D18 = ethers.utils.parseUnits('1', 18);\nexport const D27 = ethers.utils.parseUnits('1', 27);\n\nexport const DEFAULT_QUERY_STALE_TIME = 300_000; // 5min\n\nexport const INFURA_KEY = process.env.INFURA_KEY || '8678fe160b1f4d45ad3f3f71502fc57b';\nexport const ONBOARD_KEY = 'sec_jykTuCK0ZuqXWf3wNYqizxs2';\n\nexport const getSubgraphUrl = (networkName = 'optimism-mainnet') => {\n  switch (networkName) {\n    case 'mainnet':\n      return 'https://subgraph.satsuma-prod.com/ce5e03f52f3b/synthetix/synthetix-mainnet/api';\n    case 'sepolia':\n      return 'https://subgraph.satsuma-prod.com/ce5e03f52f3b/synthetix/synthetix-sepolia/api';\n    case 'optimism-mainnet':\n      return 'https://subgraph.satsuma-prod.com/ce5e03f52f3b/synthetix/synthetix-optimism-mainnet/api';\n    case 'arbitrum':\n      return `https://subgraph.satsuma-prod.com/ce5e03f52f3b/synthetix/synthetix-arbitrum-mainnet/api`;\n    case 'base-sepolia':\n      return 'https://subgraph.satsuma-prod.com/ce5e03f52f3b/synthetix/synthetix-base-sepolia-andromeda/api';\n    case 'base':\n      return 'https://subgraph.satsuma-prod.com/ce5e03f52f3b/synthetix/synthetix-base-mainnet-andromeda/api';\n    default:\n      return `https://subgraph.satsuma-prod.com/ce5e03f52f3b/synthetix/synthetix-${networkName}/api`;\n  }\n};\n\nexport const getAprUrl = (networkId = 8453) => {\n  switch (networkId) {\n    case 1:\n      return 'https://api.synthetix.io/v3/mainnet/sc-pool-apy-all';\n    case 8453:\n      return 'https://api.synthetix.io/v3/base/sc-pool-apy-all';\n    case 42161:\n      return 'https://api.synthetix.io/v3/arbitrum/sc-pool-apy-all';\n    default:\n      return `https://api.synthetix.io/v3/base/sc-pool-apy-all`;\n  }\n};\n\nexport const SESSION_STORAGE_KEYS = {\n  TERMS_CONDITIONS_ACCEPTED: 'TERMS_CONDITIONS_ACCEPTED',\n};\n\nexport const offchainMainnetEndpoint =\n  process.env.PYTH_MAINNET_ENDPOINT ||\n  'https://hermes-mainnet.rpc.extrnode.com/9b85d7db-f562-48e2-ab56-79c01f212582';\n\nexport const offchainTestnetEndpoint =\n  process.env.PYTH_TESTNET_ENDPOINT ||\n  'https://hermes-mainnet.rpc.extrnode.com/9b85d7db-f562-48e2-ab56-79c01f212582';\n\nexport const tokenOverrides: {\n  [key: string]:\n    | {\n        symbol: string;\n        name: string;\n      }\n    | undefined;\n} = {\n  '0x4EA71A20e655794051D1eE8b6e4A3269B13ccaCc': {\n    symbol: 'stataUSDC',\n    name: 'Static aUSDC',\n  },\n};\n\n// We only have 1 pool and UI does not support more than one pool\n// Will need to refactor when we add new pools\nexport const POOL_ID = '1';\n","export async function importPythERC7412Wrapper(\n  chainId?: number,\n  preset?: string\n): Promise<{ address: string; abi: string[] }> {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '8453-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/8453-andromeda/PythERC7412Wrapper.readable.json'),\n      ]);\n      return { address: meta.contracts.PythERC7412Wrapper, abi };\n    }\n    case '84532-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/84532-andromeda/PythERC7412Wrapper.readable.json'),\n      ]);\n      return { address: meta.contracts.PythERC7412Wrapper, abi };\n    }\n    case '11155111-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/meta.json'),\n        import('@synthetixio/v3-contracts/11155111-main/PythERC7412Wrapper.readable.json'),\n      ]);\n      return { address: meta.contracts.PythERC7412Wrapper, abi };\n    }\n    case '42161-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/meta.json'),\n        import('@synthetixio/v3-contracts/42161-main/PythERC7412Wrapper.readable.json'),\n      ]);\n      return { address: meta.contracts.PythERC7412Wrapper, abi };\n    }\n    case '421614-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/meta.json'),\n        import('@synthetixio/v3-contracts/421614-main/PythERC7412Wrapper.readable.json'),\n      ]);\n      return { address: meta.contracts.PythERC7412Wrapper, abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for PythERC7412Wrapper`);\n    }\n  }\n}\n","import { ethers } from 'ethers';\n\nexport class MagicProvider extends ethers.providers.JsonRpcProvider {\n  // @ts-ignore\n  readonly magicWallet: string;\n  // @ts-ignore\n  readonly chainId: number;\n\n  constructor() {\n    if (!window.$chainId) {\n      throw new Error('Empty window.$chainId');\n    }\n    if (!window.$magicWallet) {\n      throw new Error('Empty window.$magicWallet');\n    }\n    super('http://127.0.0.1:8545', { chainId: window.$chainId, name: 'Anvil' });\n    Object.defineProperty(this, 'magicWallet', {\n      enumerable: true,\n      value: window.$magicWallet,\n      writable: false,\n    });\n    Object.defineProperty(this, 'chainId', {\n      enumerable: true,\n      value: window.$chainId,\n      writable: false,\n    });\n  }\n\n  async listAccounts(): Promise<Array<string>> {\n    return [this.magicWallet];\n  }\n\n  async send(method: string, params: Array<any>): Promise<any> {\n    if (method === 'eth_chainId') {\n      return `0x${Number(this.chainId).toString(16)}`;\n    }\n    if (method === 'eth_accounts') {\n      return [this.magicWallet];\n    }\n    try {\n      // if (method === 'eth_getTransactionReceipt') {\n      //   // mine extra block before getting receipt\n      //   await super.send('evm_mine', []);\n      // }\n      const result = await super.send(method, params);\n      // eslint-disable-next-line no-console\n      console.log('MAGIC.send', { method, params, result });\n      return result;\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log('MAGIC.send ERROR', { method, params, error });\n      throw error;\n    }\n  }\n}\n","import { IconProps } from '@chakra-ui/react';\nimport { INFURA_KEY } from '@snx-v3/constants';\nimport { importPythERC7412Wrapper } from '@snx-v3/contracts';\nimport {\n  ArbitrumIcon,\n  BaseIcon,\n  EthereumIcon,\n  FailedIcon,\n  LogoIcon,\n  OptimismIcon,\n  SNXChainIcon,\n} from '@snx-v3/icons';\nimport { useQuery } from '@tanstack/react-query';\nimport { useConnectWallet, useSetChain } from '@web3-onboard/react';\nimport { ethers } from 'ethers';\nimport React, { useCallback } from 'react';\nimport { MagicProvider } from './magic';\nimport SynthetixIcon from './SynthetixIcon.svg';\nimport SynthetixLogo from './SynthetixLogo.svg';\n\nexport function getMagicProvider(): ethers.providers.JsonRpcProvider | undefined {\n  if (window.$magicWallet && window.$chainId) {\n    return new MagicProvider();\n  }\n}\n\nexport type Network = {\n  id: number;\n  preset: string;\n  hexId: string;\n  token: string;\n  name: string;\n  rpcUrl: string;\n  label: string;\n  isSupported: boolean;\n  publicRpcUrl: string;\n  isTestnet: boolean;\n};\n\nexport const UNSUPPORTED_NETWORK: Network = {\n  id: 0,\n  preset: 'main',\n  hexId: `0x${Number(0).toString(16)}`,\n  token: 'ETH',\n  name: 'unsupported',\n  rpcUrl: '',\n  publicRpcUrl: '',\n  label: 'Unsupported',\n  isSupported: false,\n  isTestnet: false,\n};\n\ninterface NetworkIconProps extends IconProps {\n  networkId?: Network['id'];\n  size?: string;\n}\n\nexport const NetworkIcon = ({ networkId, size = '24px', ...props }: NetworkIconProps) => {\n  switch (networkId) {\n    case 1:\n      return <EthereumIcon w={size} h={size} {...props} />;\n    case 10:\n      return <OptimismIcon w={size} h={size} {...props} />;\n    case 11155111:\n      return <EthereumIcon w={size} h={size} {...props} />;\n    case 84531:\n      return <BaseIcon w={size} h={size} {...props} />;\n    case 84532:\n      return <BaseIcon w={size} h={size} {...props} />;\n    case 13370:\n      return <LogoIcon w=\"29px\" h=\"21px\" {...props} />;\n    case 8453:\n      return <BaseIcon w={size} h={size} {...props} />;\n    case 11155420:\n      return <OptimismIcon w={size} h={size} {...props} />;\n    case 421614:\n      return <ArbitrumIcon w={size} h={size} {...props} />;\n    case 42161:\n      return <ArbitrumIcon w={size} h={size} {...props} />;\n    case 2192:\n      return <SNXChainIcon w={size} h={size} {...props} />;\n    case 13001:\n      return <SNXChainIcon w={size} h={size} {...props} />;\n    default: {\n      return <FailedIcon w={size} h={size} {...props} />;\n    }\n  }\n};\n\nexport const BASE_ANDROMEDA: Network = {\n  id: 8453,\n  preset: 'andromeda',\n  hexId: `0x${Number(8453).toString(16)}`,\n  token: 'ETH',\n  name: 'base',\n  rpcUrl: `https://base-mainnet.infura.io/v3/${INFURA_KEY}`,\n  label: 'Base',\n  isSupported: true,\n  publicRpcUrl: 'https://base.publicnode.com',\n  isTestnet: false,\n};\n\nexport const MAINNET: Network = {\n  id: 1,\n  preset: 'main',\n  hexId: `0x${Number(1).toString(16)}`,\n  token: 'ETH',\n  name: 'mainnet',\n  rpcUrl: `https://mainnet.infura.io/v3/${INFURA_KEY}`,\n  label: 'Ethereum',\n  isSupported: true,\n  publicRpcUrl: 'https://ethereum.publicnode.com',\n  isTestnet: false,\n};\n\nexport const OPTIMISM: Network = {\n  id: 10,\n  preset: 'main',\n  hexId: `0x${Number(10).toString(16)}`,\n  token: 'ETH',\n  name: 'optimism-mainnet',\n  rpcUrl: `https://optimism-mainnet.infura.io/v3/${INFURA_KEY}`,\n  label: 'Optimism',\n  isSupported: true,\n  publicRpcUrl: 'https://mainnet.optimism.io',\n  isTestnet: false,\n};\n\nexport const SEPOLIA: Network = {\n  id: 11155111,\n  preset: 'main',\n  hexId: `0x${Number(11155111).toString(16)}`,\n  token: 'ETH',\n  name: 'sepolia',\n  rpcUrl: `https://sepolia.infura.io/v3/${INFURA_KEY}`,\n  label: 'Sepolia Testnet',\n  isSupported: true,\n  publicRpcUrl: 'https://ethereum-sepolia.publicnode.com',\n  isTestnet: true,\n};\n\nexport const BASE_SEPOLIA: Network = {\n  id: 84532,\n  preset: 'andromeda',\n  hexId: `0x${Number(84532).toString(16)}`,\n  token: 'ETH',\n  name: 'base-sepolia',\n  rpcUrl: `https://base-sepolia.infura.io/v3/${INFURA_KEY}`,\n  label: 'Base Sepolia',\n  isSupported: true,\n  publicRpcUrl: 'https://sepolia.base.org',\n  isTestnet: true,\n};\n\nexport const CANNON: Network = {\n  id: 13370,\n  preset: 'main',\n  hexId: `0x${Number(13370).toString(16)}`,\n  token: 'ETH',\n  name: 'cannon',\n  rpcUrl: `http://127.0.0.1:8545`,\n  label: 'Cannon',\n  isSupported: false, // hidden by default but if wallet switched to Cannon it will be visible\n  publicRpcUrl: 'http://127.0.0.1:8545',\n  isTestnet: true,\n};\n\nexport const OPTIMISM_SEPOLIA: Network = {\n  id: 11155420,\n  preset: 'main',\n  hexId: `0x${Number(11155420).toString(16)}`,\n  token: 'ETH',\n  name: 'optimism-sepolia',\n  rpcUrl: `https://optimism-sepolia.infura.io/v3/${INFURA_KEY}`,\n  label: 'Optimism Sepolia',\n  isSupported: false,\n  publicRpcUrl: 'https://sepolia.optimism.io/',\n  isTestnet: true,\n};\n\nexport const ARBITRUM_SEPOLIA: Network = {\n  id: 421614,\n  preset: 'main',\n  hexId: `0x${Number(421614).toString(16)}`,\n  token: 'ETH',\n  name: 'arbitrum-sepolia',\n  rpcUrl: `https://arbitrum-sepolia.infura.io/v3/${INFURA_KEY}`,\n  label: 'Arbitrum Sepolia',\n  isSupported: true,\n  publicRpcUrl: 'https://sepolia-rollup.arbitrum.io/rpc',\n  isTestnet: true,\n};\n\nexport const ARBITRUM: Network = {\n  id: 42161,\n  preset: 'main',\n  hexId: `0x${Number(42161).toString(16)}`,\n  token: 'ETH',\n  name: 'arbitrum',\n  rpcUrl: `https://arbitrum-mainnet.infura.io/v3/${INFURA_KEY}`,\n  label: 'Arbitrum',\n  isSupported: true,\n  publicRpcUrl: 'https://arb1.arbitrum.io/rpc',\n  isTestnet: false,\n};\n\nexport const SNAX: Network = {\n  id: 2192,\n  preset: 'main',\n  hexId: `0x${Number(2192).toString(16)}`,\n  token: 'ETH',\n  name: 'SNAX',\n  rpcUrl: 'https://mainnet.snaxchain.io/',\n  label: 'Snaxchain',\n  isSupported: true,\n  publicRpcUrl: 'https://mainnet.snaxchain.io/',\n  isTestnet: false,\n};\n\nexport const SNAXTESTNET: Network = {\n  id: 13001,\n  preset: 'main',\n  hexId: `0x${Number(13001).toString(16)}`,\n  token: 'ETH',\n  name: 'SNAX',\n  rpcUrl: 'https://testnet.snaxchain.io/',\n  label: 'Snaxchain',\n  isSupported: true,\n  publicRpcUrl: 'https://testnet.snaxchain.io/',\n  isTestnet: true,\n};\n\nexport const NETWORKS: Network[] = [\n  BASE_ANDROMEDA,\n  MAINNET,\n  OPTIMISM,\n  SEPOLIA,\n  BASE_SEPOLIA,\n  CANNON,\n  OPTIMISM_SEPOLIA,\n  ARBITRUM_SEPOLIA,\n  ARBITRUM,\n  SNAX,\n  SNAXTESTNET,\n];\n\nexport async function deploymentHasERC7412(chainId: number, preset: string) {\n  return importPythERC7412Wrapper(chainId, preset).then(\n    () => true,\n    () => false\n  );\n}\n\nexport const DEFAULT_NETWORK =\n  NETWORKS.find(\n    (network) =>\n      `${network.id}-${network.preset}` === window.localStorage.getItem('DEFAULT_NETWORK')\n  ) ?? NETWORKS[1];\n\nexport const appMetadata = {\n  name: 'Synthetix',\n  icon: SynthetixIcon,\n  logo: SynthetixLogo,\n  description: 'Synthetix | The derivatives liquidity protocol.',\n  recommendedInjectedWallets: [\n    { name: 'MetaMask', url: 'https://metamask.io' },\n    { name: 'Brave Wallet', url: 'https://brave.com/wallet' },\n  ],\n  gettingStartedGuide: 'https://synthetix.io',\n  explore: 'https://blog.synthetix.io',\n};\n\nexport function useProviderForChain(customNetwork?: Network) {\n  const { network: activeNetwork } = useNetwork();\n  const network = customNetwork ?? activeNetwork;\n  const isDefaultChain =\n    customNetwork?.id === activeNetwork?.id && customNetwork?.preset === activeNetwork?.preset;\n  const { data: provider } = useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'ProviderForChain', { isDefaultChain }],\n    enabled: Boolean(network),\n    queryFn: () => {\n      if (!network) throw 'OMFG';\n      if (isDefaultChain) {\n        const provider = getMagicProvider();\n        if (provider) {\n          return provider;\n        }\n      }\n      return new ethers.providers.JsonRpcProvider(network.rpcUrl);\n    },\n  });\n\n  return provider;\n}\n\nexport function useWallet() {\n  const [{ wallet }, connect, disconnect] = useConnectWallet();\n\n  if (!wallet) {\n    return {\n      activeWallet: undefined,\n      walletsInfo: undefined,\n      connect,\n      disconnect,\n    };\n  }\n\n  const activeWallet = wallet?.accounts[0];\n\n  return {\n    activeWallet: activeWallet,\n    walletsInfo: wallet,\n    connect,\n    disconnect,\n  };\n}\n\nexport function useNetwork() {\n  const [{ connectedChain }, setChain] = useSetChain();\n\n  const setNetwork = useCallback(\n    async (networkId: number) => {\n      const newNetwork = NETWORKS.find((n) => n.id === networkId);\n      if (!newNetwork) return;\n      return await setChain({ chainId: newNetwork?.hexId });\n    },\n    [setChain]\n  );\n\n  // Hydrate the network info\n  const network = NETWORKS.find((n) => n.hexId === connectedChain?.id);\n\n  if (!network) {\n    return {\n      network: undefined,\n      setNetwork,\n    };\n  }\n\n  return {\n    network,\n    setNetwork,\n  };\n}\n\nexport function useSigner() {\n  const { network } = useNetwork();\n  const [{ wallet }] = useConnectWallet();\n  const activeWallet = wallet?.accounts?.[0];\n  const { data: signer } = useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'Signer', activeWallet?.address],\n    enabled: Boolean(wallet && activeWallet),\n    queryFn: () => {\n      if (!(wallet && activeWallet)) throw 'OMFG';\n      const provider =\n        getMagicProvider() ?? new ethers.providers.Web3Provider(wallet.provider, 'any');\n      return provider.getSigner(activeWallet.address);\n    },\n  });\n  return signer;\n}\n\nexport function useProvider() {\n  const { network } = useNetwork();\n  return useProviderForChain(network);\n}\n","import {\n  ComponentMultiStyleConfig,\n  ComponentStyleConfig,\n  defineStyle,\n  extendTheme,\n} from '@chakra-ui/react';\nimport { mode } from '@chakra-ui/theme-tools';\n\nconst gradients = {\n  'green-cyan': {\n    500: 'linear(to-tr, green.500, cyan.500)',\n    600: 'linear(to-tr, green.600, cyan.600)',\n    700: 'linear(to-tr, green.700, cyan.800)',\n  },\n\n  grey: {\n    900: 'linear(to-tr, grey.900, blackAlpha.900)',\n  },\n  dark: {\n    500: 'linear(to-tr, #171923, #141414)',\n  },\n\n  'pink-purple': {\n    500: 'linear(to-tr, pink.500, purple.500)',\n    600: 'linear(to-tr, pink.600, purple.600)',\n    700: 'linear(to-tr, pink.700, purple.800)',\n  },\n\n  'pink-blue': {\n    500: 'linear(to-tr, pink.500, blue.500)',\n    600: 'linear(to-tr, pink.600, blue.600)',\n    700: 'linear(to-tr, pink.700, blue.800)',\n  },\n  'pink-cyan': {\n    500: 'linear(to-tr, pink.500, cyan.500)',\n    600: 'linear(to-tr, pink.600, cyan.600)',\n    700: 'linear(to-tr, pink.700, cyan.800)',\n  },\n\n  orange: {\n    500: 'linear(to-tr, orange.500, orange.300)',\n    600: 'linear(to-tr, orange.600, orange.400)',\n    700: 'linear(to-tr, orange.700, orange.500)',\n  },\n};\n\n// adapted from https://github.com/chakra-ui/chakra-ui/blob/main/packages/components/theme/src/components/button.ts#L90\nconst variantSolid = defineStyle((props) => {\n  const { colorScheme: c } = props;\n\n  if (c === 'gray') {\n    const bg = mode(`gray.100`, `whiteAlpha.200`)(props);\n\n    return {\n      borderRadius: 'base',\n      color: mode(`black`, `whiteAlpha.900`)(props),\n      bg,\n      _hover: {\n        bg: mode(`gray.200`, `whiteAlpha.300`)(props),\n        _disabled: {\n          bg,\n        },\n      },\n      _active: { bg: mode(`gray.300`, `whiteAlpha.400`)(props) },\n    };\n  }\n\n  if (c === 'cyan') {\n    return {\n      borderRadius: 'base',\n      bgGradient: gradients['green-cyan'][500],\n      color: 'black',\n      _hover: {\n        bgGradient: gradients['green-cyan'][600],\n        _disabled: {\n          background: gradients['green-cyan'][500],\n        },\n      },\n      _active: {\n        bgGradient: gradients['green-cyan'][700],\n      },\n    };\n  }\n\n  const bg = `${c}.500`;\n  const color = 'white';\n  const hoverBg = `${c}.600`;\n  const activeBg = `${c}.700`;\n  const background = mode(bg, `${c}.600`)(props);\n\n  return {\n    borderRadius: 'base',\n    bg: background,\n    color: mode(color, `white`)(props),\n    _hover: {\n      bg: mode(hoverBg, `${c}.500`)(props),\n      _disabled: {\n        bg: background,\n      },\n    },\n    _active: { bg: mode(activeBg, `${c}.400`)(props) },\n  };\n});\n\nconst Button: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n  },\n  variants: {\n    solid: variantSolid,\n    outline: (props) => {\n      if (props.colorScheme === 'gray' || props.colorScheme === 'grey') {\n        return {\n          color: 'white',\n          borderColor: 'gray.900',\n          _hover: { bg: 'whiteAlpha.200' },\n          _active: { bg: 'whiteAlpha.400' },\n          borderRadius: 'base',\n        };\n      }\n      return {\n        color: 'cyan.500', // needed for storybook for some reason\n        border: '1px solid', // needed for storybook for some reason\n        borderColor: 'cyan.500', // needed for storybook for some reason\n        _hover: { bg: 'rgb(0, 209, 255, 0.12)' }, // cyan.500 0.12 opacity\n        _active: { bg: 'rgb(0, 209, 255, 0.24)' }, // cyan.500 0.24 opacity\n        borderRadius: 'base',\n      };\n    },\n    ghost: {\n      color: 'cyan.500', // needed for storybook for some reason\n      _hover: { bg: 'rgb(0, 209, 255, 0.12)' }, // cyan.500 0.12 opacity\n      _active: { bg: 'rgb(0, 209, 255, 0.24)' }, // cyan.500 0.24 opacity\n      borderRadius: 'base',\n    },\n  },\n};\n\nconst Menu: ComponentMultiStyleConfig = {\n  parts: ['button', 'list', 'item'],\n  baseStyle: {\n    button: {\n      borderRadius: 'base',\n      color: 'white',\n      span: {\n        display: 'flex',\n        alignItems: 'center',\n        px: 2,\n      },\n      height: '100%',\n    },\n    list: {\n      mt: 2,\n      bgColor: 'navy.900',\n      padding: 0,\n      border: 'none',\n      borderRadius: 'md',\n      py: 0,\n    },\n    item: {\n      bgColor: 'blackAlpha.300',\n      color: 'whiteAlpha.900',\n      p: 3,\n      _hover: {\n        bgColor: 'whiteAlpha.400',\n      },\n      _active: {\n        bgColor: 'navy.900',\n      },\n      _first: {\n        borderTopLeftRadius: 'md',\n        borderTopRightRadius: 'md',\n      },\n      _last: {\n        borderBottomLeftRadius: 'md',\n        borderBottomRightRadius: 'md',\n      },\n      _focus: {\n        bgColor: 'blackAlpha.400',\n      },\n    },\n  },\n};\n\nconst Input: ComponentStyleConfig = {\n  defaultProps: {\n    focusBorderColor: 'cyan.500',\n    errorBorderColor: 'red.500',\n  },\n};\n\nconst Select: ComponentStyleConfig = {\n  defaultProps: {\n    focusBorderColor: 'cyan.500',\n    iconColor: 'cyan.500',\n    errorBorderColor: 'red.500',\n  },\n};\n\nconst NumberInput: ComponentStyleConfig = {\n  defaultProps: {\n    focusBorderColor: 'cyan.500',\n    errorBorderColor: 'red.500',\n  },\n};\n\nconst Textarea: ComponentStyleConfig = {\n  defaultProps: {\n    focusBorderColor: 'cyan.500',\n    colorScheme: 'cyan',\n    errorBorderColor: 'red.500',\n  },\n};\n\nconst Alert: ComponentStyleConfig = {\n  defaultProps: {\n    variant: 'left-accent',\n  },\n  variants: {\n    'left-accent': (props) => {\n      return {\n        container: {\n          bg: `${props.colorScheme}.900`,\n          borderInlineStartColor: `${props.colorScheme}.500`,\n        },\n      };\n    },\n    solid: (props) => {\n      return {\n        icon: { color: 'white' },\n        container: { bg: `${props.colorScheme}.500`, color: 'white' },\n      };\n    },\n  },\n};\n\nconst Skeleton: ComponentStyleConfig = {\n  defaultProps: {\n    startColor: 'gray.900',\n    endColor: 'gray.800',\n  },\n};\n\nconst Checkbox: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n  },\n  baseStyle: {\n    control: {\n      borderColor: 'cyan.500',\n      _checked: {\n        bg: 'cyan.500',\n        borderColor: 'cyan.500',\n        _hover: {\n          bg: 'cyan.600',\n          borderColor: 'cyan.600',\n        },\n      },\n      _invalid: {\n        borderColor: 'red.500',\n      },\n      _disabled: {\n        _hover: {\n          borderColor: 'transparent',\n        },\n      },\n      _hover: {\n        borderColor: 'cyan.600',\n      },\n    },\n  },\n};\n\nconst Radio: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n  },\n  baseStyle: {\n    control: {\n      borderColor: 'cyan.500',\n      _checked: {\n        bg: 'cyan.500',\n        borderColor: 'cyan.500',\n        _hover: {\n          bg: 'cyan.600',\n          borderColor: 'cyan.600',\n        },\n      },\n      _invalid: {\n        borderColor: 'red.500',\n      },\n      _disabled: {\n        _hover: {\n          borderColor: 'transparent',\n        },\n      },\n      _hover: {\n        borderColor: 'cyan.600',\n      },\n    },\n  },\n};\n\nconst Badge: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n  },\n  variants: {\n    subtle: (props) => ({\n      color: `${props.colorScheme}.500`,\n      border: '0px',\n      display: 'flex',\n      alignItems: 'center',\n    }),\n    solid: (props) => ({\n      background: `${props.colorScheme}.500`,\n      color: 'black',\n    }),\n    outline: (props) => ({\n      borderColor: `${props.colorScheme}.500`,\n      color: `${props.colorScheme}.500`,\n      boxShadow: 'unset',\n    }),\n  },\n};\n\nconst Tag: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n    variant: 'solid',\n  },\n  variants: {\n    solid: (props) => ({\n      container: {\n        background: `${props.colorScheme}.500`,\n        color: 'black',\n      },\n    }),\n  },\n};\n\nconst Accordion: ComponentStyleConfig = {\n  baseStyle: {\n    container: {\n      borderColor: 'gray.900',\n      borderWidth: '1px',\n      borderRadius: 'base',\n    },\n  },\n};\n\nconst Progress: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n    variant: 'solid',\n    borderRadius: 'full',\n  },\n  variants: {\n    solid: (props) => ({\n      filledTrack: {\n        background: `${props.colorScheme}.500`,\n        borderRadius: 'full',\n      },\n      track: {\n        borderRadius: 'full',\n      },\n    }),\n  },\n};\n\nconst Tabs: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n  },\n  variants: {\n    'solid-rounded': (props) => ({\n      tab: {\n        _selected: {\n          background: `${props.colorScheme}.500`,\n          color: 'black',\n        },\n        color: `${props.colorScheme}.500`,\n      },\n    }),\n    'soft-rounded': {\n      tab: {\n        _selected: {\n          background: 'whiteAlpha.300',\n          color: 'cyan.500',\n        },\n        color: 'cyan.500',\n      },\n    },\n  },\n};\n\nconst Tooltip: ComponentStyleConfig = {\n  baseStyle: {\n    textAlign: 'center',\n    bg: 'gray.900',\n    color: 'white.500',\n    '--popper-arrow-bg': 'var(--chakra-colors-gray-900)',\n  },\n};\n\nconst Switch: ComponentStyleConfig = {\n  defaultProps: {\n    colorScheme: 'cyan',\n  },\n  baseStyle: {\n    track: {\n      _checked: {\n        background: 'cyan.500',\n      },\n    },\n  },\n};\n\nconst Spinner: ComponentStyleConfig = {\n  baseStyle: {\n    color: 'cyan.500',\n  },\n};\n\nexport const theme = extendTheme({\n  useSystemColorMode: false,\n  initialColorMode: 'dark',\n  colors: {\n    gray: {\n      50: '#F6F6F6',\n      100: '#F1F1F1',\n      200: '#DDDDDF',\n      300: '#C3C3C9',\n      400: '#AAAAB2',\n      500: '#91919B',\n      600: '#7A7A85',\n      700: '#63636E',\n      800: '#4D4D57',\n      900: '#303037',\n    },\n    red: {\n      50: '#FFEDEF',\n      100: '#FFC4CB',\n      200: '#FF9BA7',\n      300: '#FF7384',\n      400: '#FF4A60',\n      500: '#E4364B',\n      600: '#C53030',\n      700: '#9B2C2C',\n      800: '#822727',\n      900: '#63171B',\n    },\n    orange: {\n      50: '#FFF3EB',\n      100: '#FFD8BE',\n      200: '#FFBE92',\n      300: '#FFA365',\n      400: '#FF9A54',\n      500: '#FC8738',\n      600: '#DC732D',\n      700: '#96420A',\n      800: '#743002',\n      900: '#522100',\n    },\n    yellow: {\n      50: '#FFFBEF',\n      100: '#FFF2CA',\n      200: '#FFF5A8',\n      300: '#FFF889',\n      400: '#FFF458',\n      500: '#FAE527',\n      600: '#EAD516',\n      700: '#B5932B',\n      800: '#776017',\n      900: '#55430D',\n    },\n    green: {\n      50: '#EDFFF9',\n      100: '#C3FFEC',\n      200: '#9AE6B4',\n      300: '#72FFD3',\n      400: '#47FAC2',\n      500: '#34EDB3',\n      600: '#2BD39F',\n      700: '#11946B',\n      800: '#077250',\n      900: '#015037',\n    },\n    blue: {\n      50: '#EDF6FF',\n      100: '#C4E2FF',\n      200: '#9CCFFF',\n      300: '#73BBFF',\n      400: '#479EF0',\n      500: '#3182CE',\n      600: '#1F68AC',\n      700: '#11508A',\n      800: '#073968',\n      900: '#012546',\n    },\n    cyan: {\n      50: '#E5FAFF',\n      100: '#B7F2FF',\n      200: '#8AEAFF',\n      300: '#5CE1FF',\n      400: '#2ED9FF',\n      500: '#00D1FF',\n      600: '#00B0D6',\n      700: '#008EAD',\n      800: '#006D85',\n      900: '#004B5C',\n    },\n    purple: {\n      50: '#F0EEFF',\n      100: '#CFC9FF',\n      200: '#AEA4FF',\n      300: '#8D7EFF',\n      400: '#6B59FF',\n      500: '#5744EA',\n      600: '#402FC8',\n      700: '#2D1EA6',\n      800: '#1D1084',\n      900: '#10104E',\n    },\n    pink: {\n      50: '#FDE8FF',\n      100: '#F9B6FF',\n      200: '#F583FF',\n      300: '#F471FF',\n      400: '#EB46FF',\n      500: '#EE2EFF',\n      600: '#BE02CE',\n      700: '#8D0099',\n      800: '#6E0077',\n      900: '#4E0055',\n    },\n    navy: {\n      50: '#522ED1',\n      100: '#401FB7',\n      200: '#3719A6',\n      300: '#2F1298',\n      400: '#1F0777',\n      500: '#150942',\n      600: '#0E052F',\n      700: '#0B0B22',\n      800: '#0A0A25',\n      900: '#06061B',\n    },\n    error: '#FF4A60', // red.400,\n    success: '#34EDB3', //green.500\n    warning: '#FC8738', // orange.500\n  },\n  shadows: {\n    outline: '0 0 0 3px rgba(0, 209, 255, 1)',\n  },\n  fonts: {\n    heading:\n      'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n    body: 'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n    display:\n      '\"GT America Condensed\", Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n    mono: '\"GT America Mono\", SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace',\n  },\n  components: {\n    Popover: {\n      variants: {\n        responsive: {\n          popper: {\n            maxWidth: 'unset',\n            width: 'unset',\n          },\n        },\n      },\n    },\n    Button,\n    Input,\n    Select,\n    NumberInput,\n    Alert,\n    Textarea,\n    Skeleton,\n    Checkbox,\n    Radio,\n    Badge,\n    Tag,\n    Accordion,\n    Progress,\n    Tabs,\n    Tooltip,\n    Switch,\n    Spinner,\n    Menu,\n  },\n  // To be imported and used with the bgGradient prop\n  // See: https://chakra-ui.com/docs/styled-system/gradient#background-gradient-api\n  gradients,\n  textStyles: {\n    'heading-4xl': {\n      fontSize: { base: '60px', lg: '72px' },\n      fontFamily: 'heading',\n      lineHeight: { base: '57.6px', lg: '72px' },\n      fontWeight: 700,\n    },\n    'heading-3xl': {\n      fontSize: { base: '48px', md: '60px' },\n      fontFamily: 'heading',\n      lineHeight: { base: '57.6px', md: '72px', lg: '60px' },\n      fontWeight: 700,\n    },\n    'heading-2xl': {\n      fontSize: { base: '36px', md: '48px' },\n      fontFamily: 'heading',\n      lineHeight: { base: '120%' },\n      fontWeight: 700,\n    },\n    'heading-xl': {\n      fontSize: { base: '30px', lg: '36px' },\n      fontFamily: 'heading',\n      lineHeight: { base: '36px', lg: '120%' },\n      fontWeight: 700,\n    },\n    'heading-lg': {\n      fontSize: { base: '24px', lg: '30px' },\n      fontFamily: 'heading',\n      lineHeight: { base: '28.8px', lg: '36px' },\n      fontWeight: 700,\n    },\n    'heading-md': {\n      fontSize: { base: '20px', lg: '24px' },\n      fontFamily: 'heading',\n      lineHeight: '24px',\n      fontWeight: 700,\n    },\n    'heading-sm': {\n      fontSize: '16px',\n      fontFamily: 'heading',\n      lineHeight: '19.2px',\n      fontWeight: 700,\n    },\n    'heading-xs': {\n      fontSize: '14px',\n      fontFamily: 'heading',\n      lineHeight: '16.8px',\n      fontWeight: 700,\n    },\n  },\n  sizes: {\n    px: '1px',\n    0.5: '0.125rem',\n    1: '0.25rem',\n    1.5: '0.375rem',\n    2: '0.5rem',\n    2.5: '0.625rem',\n    3: '0.75rem',\n    3.5: '0.875rem',\n    4: '1rem',\n    5: '1.25rem',\n    6: '1.5rem',\n    7: '1.75rem',\n    8: '2rem',\n    9: '2.25rem',\n    10: '2.5rem',\n    12: '3rem',\n    14: '3.5rem',\n    16: '4rem',\n    20: '5rem',\n    24: '6rem',\n    28: '7rem',\n    32: '8rem',\n    36: '9rem',\n    40: '10rem',\n    44: '11rem',\n    48: '12rem',\n    52: '13rem',\n    56: '14rem',\n    60: '15rem',\n    64: '16rem',\n    72: '18rem',\n    80: '20rem',\n    96: '24rem',\n    max: 'max-content',\n    min: 'min-content',\n    full: '100%',\n    '3xs': '14rem',\n    '2xs': '16rem',\n    xs: '20rem',\n    sm: '24rem',\n    md: '28rem',\n    lg: '32rem',\n    xl: '36rem',\n    '2xl': '42rem',\n    '3xl': '48rem',\n    '4xl': '56rem',\n    '5xl': '64rem',\n    '6xl': '72rem',\n    '7xl': '80rem',\n    '8xl': '90rem',\n    container: {\n      sm: '640px',\n      md: '768px',\n      lg: '1024px',\n      xl: '1280px',\n    },\n  },\n  styles: {\n    global: {\n      body: {\n        bg: 'navy.900',\n      },\n    },\n  },\n});\n","import { Global } from '@emotion/react';\n\nexport const Fonts = () => (\n  <Global\n    styles={`\n      @import url('https://fonts.googleapis.com/css2?family=Inter:wght@200..700&display=swap');\n      @font-face {\n        font-family: 'GT America Condensed';\n        font-style: normal;\n        font-display: swap;\n        font-weight: 700;\n        src: local('GT America Condensed'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Bold.woff2') format('woff2'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Bold.woff') format('woff'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Bold.otf') format('opentype');\n      }\n      @font-face {\n        font-family: 'GT America Condensed';\n        font-style: italic;\n        font-display: swap;\n        font-weight: 700;\n        src: local('GT America Condensed'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Bold%20Italic.woff2')\n            format('woff2'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Bold%20Italic.woff')\n            format('woff'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Bold%20Italic.otf')\n            format('opentype');\n      }\n      @font-face {\n        font-family: 'GT America Condensed';\n        font-style: normal;\n        font-display: swap;\n        font-weight: 100;\n        src: local('GT America Condensed'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Thin.woff2') format('woff2'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Thin.woff') format('woff'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Thin.otf') format('opentype');\n      }\n      @font-face {\n        font-family: 'GT America Condensed';\n        font-style: italic;\n        font-display: swap;\n        font-weight: 100;\n        src: local('GT America Condensed'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Thin%20Italic.woff2')\n            format('woff2'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Thin%20Italic.woff')\n            format('woff'),\n          url('https://fonts.synthetix.io/GT%20America%20Condensed%20Thin%20Italic.otf')\n            format('opentype');\n      }\n      @font-face {\n        font-family: 'GT America Mono';\n        font-style: normal;\n        font-display: swap;\n        font-weight: 700;\n        src: local('GT America Mono'),\n          url('https://fonts.synthetix.io/GT%20America%20Mono%20Bold.woff2') format('woff2'),\n          url('https://fonts.synthetix.io/GT%20America%20Mono%20Bold.woff') format('woff'),\n          url('https://fonts.synthetix.io/GT%20America%20Mono%20Bold.otf') format('opentype');\n      }\n      @font-face {\n        font-family: 'Lustra Text';\n        font-style: normal;\n        font-display: swap;\n        font-weight: 400;\n        src: local('Lustra Text'),\n          url('https://fonts.synthetix.io/Lustra%20Text%20Thin.otf') format('opentype');\n      }\n    `}\n  />\n);\n","import { useState } from 'react';\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  Text,\n  Button,\n  Box,\n  Link,\n  ListItem,\n  UnorderedList,\n} from '@chakra-ui/react';\nimport { Link as ReactRouterLink } from 'react-router-dom';\nimport { theme } from '@snx-v3/theme';\nimport { SESSION_STORAGE_KEYS } from '@snx-v3/constants';\n\ninterface TermsModalProps {\n  defaultOpen: boolean;\n}\n\nexport const TermsModal = ({ defaultOpen = true }: TermsModalProps) => {\n  const [isOpen, setOpen] = useState(defaultOpen);\n  const [enabled, setEnabled] = useState(false);\n\n  const onSubmit = () => {\n    if (enabled) {\n      localStorage.setItem(SESSION_STORAGE_KEYS.TERMS_CONDITIONS_ACCEPTED, JSON.stringify(true));\n      setOpen(false);\n    }\n  };\n\n  return (\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    <Modal isOpen={isOpen} onClose={() => {}}>\n      <ModalOverlay />\n      <ModalContent\n        bgGradient={theme.gradients['dark'][500]}\n        pt=\"10\"\n        pb=\"3\"\n        borderWidth=\"1px\"\n        borderColor=\"gray.900\"\n        data-cy=\"transaction modal\"\n      >\n        <ModalHeader py={0} textAlign=\"center\">\n          Synthetix Terms of Service\n        </ModalHeader>\n        <ModalBody fontSize=\"xs\" color=\"gray.600\">\n          <Text fontSize=\"sm\">\n            By clicking “I Agree” below, you agree to be bound by the terms of this Agreement. As\n            such, you fully understand that:\n          </Text>\n          <Box\n            onScroll={(e) => {\n              const div = e.currentTarget;\n              const scrollTopWithTolerance = div.scrollTop + 10;\n              if (scrollTopWithTolerance >= div.scrollHeight - div.offsetHeight) {\n                setEnabled(true);\n              } else {\n                setEnabled(false);\n              }\n            }}\n            as=\"div\"\n            my={2}\n            py={3}\n            height=\"350px\"\n            overflow=\"auto\"\n            overflowX=\"scroll\"\n            sx={{\n              '::-webkit-scrollbar': {\n                display: 'block',\n              },\n              '::-webkit-scrollbar-track': {\n                backgroundColor: 'transparent',\n              },\n              '::-webkit-scrollbar-track-piece': {\n                backgroundColor: 'transparent',\n              },\n              '::-webkit-scrollbar-corner': {\n                backgroundColor: 'transparent',\n              },\n            }}\n          >\n            <UnorderedList>\n              <Text fontSize=\"14px\">\n                <ListItem>\n                  <Link\n                    href=\"https://synthetix.io/\"\n                    target=\"_blank\"\n                    color=\"cyan.500\"\n                    _focusVisible={{ outline: 'none' }}\n                  >\n                    Synthetix{' '}\n                  </Link>\n                  is a blockchain-based decentralized finance project. You are participating at your\n                  own risk.\n                </ListItem>\n                <ListItem mt={2}>\n                  Synthetix is offered for use “as is” and without any guarantees regarding\n                  security. The protocol is made up of immutable code and can be accessed through a\n                  variety of user interfaces.\n                </ListItem>\n                <ListItem mt={2}>\n                  No central entity operates the Synthetix protocol. Decisions related to the\n                  protocol are governed by a dispersed group of participants who collectively govern\n                  and maintain the protocol.\n                </ListItem>\n                <ListItem mt={2}>\n                  Synthetix DAO does not unilaterally offer, maintain, operate, administer, or\n                  control any trading interfaces. The only user interfaces maintained by Synthetix\n                  DAO are the governance and liquidity interfaces herein.\n                </ListItem>\n                <ListItem mt={2}>\n                  You can participate in the governance process by staking SNX tokens in accordance\n                  with the rules and parameters summarized{' '}\n                  <Link\n                    href=\"https://governance.synthetix.io/\"\n                    target=\"_blank\"\n                    color=\"cyan.500\"\n                    _focusVisible={{ outline: 'none' }}\n                  >\n                    here\n                  </Link>\n                  , and/or joining the{' '}\n                  <Link\n                    color=\"cyan.500\"\n                    target=\"_blank\"\n                    href=\"https://discord.com/invite/synthetix\"\n                    _focusVisible={{ outline: 'none' }}\n                  >\n                    Synthetix Discord\n                  </Link>{' '}\n                  and contributing to the conversation.\n                </ListItem>\n                <ListItem mt={2}>\n                  The rules and parameters associated with the Synthetix protocol and Synthetix DAO\n                  governance are subject to change at any time.\n                </ListItem>\n                <ListItem mt={2}>\n                  Your use of Synthetix is conditioned upon your acceptance to be bound by the\n                  Synthetix Term of Use, which can be found{' '}\n                  <Link\n                    as={ReactRouterLink}\n                    to=\"/terms\"\n                    target=\"_blank\"\n                    color=\"cyan.500\"\n                    _focusVisible={{ outline: 'none' }}\n                  >\n                    here\n                  </Link>\n                  .\n                </ListItem>\n                <ListItem mt={2}>\n                  The laws that apply to your use of Synthetix may vary based upon the jurisdiction\n                  in which you are located. We strongly encourage you to speak with legal counsel in\n                  your jurisdiction if you have any questions regarding your use of Synthetix.\n                </ListItem>\n                <ListItem mt={2}>\n                  By entering into this agreement, you are not agreeing to enter into a partnership.\n                  You understand that Synthetix is a decentralized protocol provided on an “as is”\n                  basis.\n                </ListItem>\n                <ListItem mt={2}>\n                  You hereby release all present and future claims against Synthetix DAO related to\n                  your use of the protocol, the SNX token, SNX DAO governance, and any other facet\n                  of the protocol.\n                </ListItem>\n                <ListItem mt={2}>\n                  You agree to indemnify and hold harmless SNX DAO and its affiliates for any costs\n                  arising out of or relating to your use of the Synthetix protocol.\n                </ListItem>\n                <ListItem mt={2}>\n                  You are not accessing the protocol from Burma (Myanmar), Cuba, Iran, Sudan, Syria,\n                  the Western Balkans, Belarus, Côte d’Ivoire, Democratic Republic of the Congo,\n                  Iraq, Lebanon, Liberia, Libya, North Korea, Russia, certain sanctioned areas of\n                  Ukraine, Somalia, Venezuela, Yemen, or Zimbabwe (collectively, “Prohibited\n                  Jurisdictions”), or any other jurisdiction listed as a Specially Designated\n                  National by the United States Office of Foreign Asset Control (“OFAC”).\n                </ListItem>\n              </Text>\n            </UnorderedList>\n          </Box>\n        </ModalBody>\n        <Button\n          variant=\"outline\"\n          _focusVisible={{ outline: 'none' }}\n          my={4}\n          mx={6}\n          onClick={onSubmit}\n          isDisabled={!enabled}\n        >\n          I agree\n        </Button>\n      </ModalContent>\n    </Modal>\n  );\n};\n","import React from 'react';\nimport { createSearchParams, useSearchParams } from 'react-router-dom';\nimport { z } from 'zod';\n\nexport const HomePageSchema = z\n  .object({\n    page: z.literal('home').optional(),\n    accountId: z.string().optional(),\n    convert: z.literal('snxusd').optional(),\n    migrate: z.literal('snx').optional(),\n    sort: z.string().optional(),\n    dir: z.string().optional(),\n  })\n  .refine((data) => !data.convert || !data.migrate, {\n    message: \"Cannot have both 'convert' and 'migrate' properties\",\n  });\nexport type HomePageSchemaType = z.infer<typeof HomePageSchema>;\n\nexport const SettingsPageSchema = z.object({\n  page: z.literal('settings'),\n  accountId: z.string().optional(),\n});\nexport type SettingsPageSchemaType = z.infer<typeof SettingsPageSchema>;\n\nexport const ManageActionSchema = z.union([\n  z.literal('deposit'),\n  z.literal('repay'),\n  z.literal('claim'),\n  z.literal('undelegate'),\n  z.literal('withdraw'),\n  z.literal('withdraw-debt'),\n  z.literal('close'),\n  z.literal('locked'),\n]);\nexport type ManageActionType = z.infer<typeof ManageActionSchema>;\n\nexport const PositionPageSchema = z.object({\n  page: z.literal('position'),\n  collateralSymbol: z.string(),\n  manageAction: ManageActionSchema,\n  accountId: z.string().optional(),\n});\nexport type PositionPageSchemaType = z.infer<typeof PositionPageSchema>;\n\nconst AllowedQueriesSchema = z.union([HomePageSchema, SettingsPageSchema, PositionPageSchema]);\ntype AllowedQueriesType = z.infer<typeof AllowedQueriesSchema>;\n\nexport function searchParamsToObject(searchParams: URLSearchParams) {\n  const params = Object.fromEntries(Array.from(searchParams));\n\n  for (const schema of [HomePageSchema, SettingsPageSchema, PositionPageSchema]) {\n    const parsed = schema.safeParse(params);\n    if (parsed.success) {\n      return parsed.data;\n    }\n  }\n  console.error('Route cannot be matched', params);\n  return {}; // Go to homepage\n}\n\nexport function sortObject(params: AllowedQueriesType): AllowedQueriesType {\n  return Object.fromEntries(Object.entries(params).sort(([a], [b]) => a.localeCompare(b)));\n}\n\nexport function cleanObject(params: AllowedQueriesType): AllowedQueriesType {\n  const cleaned = Object.entries(params).filter(([, value]) => value !== undefined);\n  return Object.fromEntries(cleaned);\n}\n\nexport function makeParams(newParams: AllowedQueriesType) {\n  return createSearchParams(sortObject(cleanObject(newParams)));\n}\n\nexport function makeSearch(newParams: AllowedQueriesType) {\n  return makeParams(newParams).toString();\n}\n\nexport function useParams<T = AllowedQueriesType>(): [T, (newParams: AllowedQueriesType) => void] {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const params = React.useMemo(() => searchParamsToObject(searchParams) as T, [searchParams]);\n\n  const setParams = React.useCallback(\n    (newParams: AllowedQueriesType): void => {\n      setSearchParams(makeParams(newParams));\n    },\n    [setSearchParams]\n  );\n\n  return [params, setParams];\n}\n","import { Container, Flex, Link } from '@chakra-ui/react';\nimport { DiscordIcon, GithubIcon, Logo, WarpcastIcon, XIcon, YoutubeIcon } from '@snx-v3/icons';\n\nexport const Footer = () => {\n  return (\n    <Flex borderTop=\"1px solid\" borderTopColor=\"gray.900\" bg=\"navy.700\">\n      <Container\n        maxW=\"1236px\"\n        as={Flex}\n        height=\"72px\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n      >\n        <Logo withText={false} />\n        <Flex alignItems=\"center\">\n          <Link href=\"https://discord.com/invite/synthetix\" target=\"_blank\">\n            <DiscordIcon w=\"24px\" h=\"24px\" mr={2} />\n          </Link>\n          <Link href=\"https://x.com/synthetix_io\" target=\"_blank\">\n            <XIcon w=\"24px\" h=\"24px\" mr={2} />\n          </Link>\n          <Link href=\"https://github.com/Synthetixio/\" target=\"_blank\">\n            <GithubIcon w=\"24px\" h=\"24px\" mr={2} />\n          </Link>\n          <Link href=\"https://warpcast.com/~/channel/synthetix\" target=\"_blank\">\n            <WarpcastIcon w=\"24px\" h=\"24px\" mr={2} />\n          </Link>\n          <Link href=\"https://www.youtube.com/@synthetix.v3\" target=\"_blank\">\n            <YoutubeIcon w=\"24px\" h=\"24px\" />\n          </Link>\n        </Flex>\n      </Container>\n    </Flex>\n  );\n};\n","import { Image, type ImageProps } from '@chakra-ui/react';\n\nexport function TokenIcon({\n  symbol,\n  width = 30,\n  height = 30,\n  ...props\n}: ImageProps & {\n  symbol?: string;\n  width?: number;\n  height?: number;\n}) {\n  const src = `https://assets.synthetix.io/collateral/${\n    symbol ? symbol.toUpperCase() : 'UNKNOWN'\n  }.svg`;\n\n  return (\n    <Image\n      src={src}\n      fallbackSrc=\"https://assets.synthetix.io/collateral/UNKNOWN.svg\"\n      alt={symbol}\n      style={{ width, height }}\n      {...props}\n    />\n  );\n}\n\nexport const SynthIcon = ({\n  symbol,\n  width = 30,\n  height = 30,\n  ...props\n}: ImageProps & {\n  symbol?: string;\n  width?: number;\n  height?: number;\n}) => {\n  const src = `https://assets.synthetix.io/synths/${symbol ?? 'UNKNOWN'}.svg`;\n  return (\n    <Image\n      src={src}\n      fallbackSrc=\"https://assets.synthetix.io/collateral/UNKNOWN.svg\"\n      alt={symbol}\n      style={{ width, height }}\n      {...props}\n    />\n  );\n};\n","import React from 'react';\nimport { VStack, Text, Button, Alert, Flex, Image } from '@chakra-ui/react';\nimport { CheckIcon } from '@chakra-ui/icons';\nimport { Network } from '@snx-v3/useBlockchain';\n\nexport const StepSuccessFinal = ({\n  onConfirm,\n  network,\n}: {\n  onConfirm: () => void;\n  network: Network;\n}) => {\n  return (\n    <VStack spacing={6}>\n      <Text width=\"100%\" textAlign=\"left\" fontSize=\"14px\">\n        Your migration to Synthetix V3 on {network.name} has been successfully Completed.\n      </Text>\n\n      <Flex width=\"100%\" alignItems=\"center\" justifyContent=\"center\" flex={1}>\n        <Image maxWidth=\"455px\" width=\"100%\" src=\"/Migrate Launch.png\" alt=\"Synthetix V3 Launch\" />\n      </Flex>\n\n      <Alert borderRadius=\"6px\" colorScheme=\"green\">\n        <Flex bg=\"green.500\" p=\"1\" rounded=\"full\" mr=\"3.5\">\n          <CheckIcon w=\"12px\" h=\"12px\" color=\"green.900\" />\n        </Flex>\n        <Text fontSize=\"16px\">Migration successfully Completed</Text>\n      </Alert>\n\n      <VStack width=\"100%\" spacing={4}>\n        <Button width=\"100%\" onClick={onConfirm}>\n          See Position on V3\n        </Button>\n      </VStack>\n    </VStack>\n  );\n};\n","import { ethers } from 'ethers';\nimport { wei, WeiSource } from '@synthetixio/wei';\n\nexport const formatValue = (value: ethers.BigNumberish, decimals = 18) =>\n  parseFloat(ethers.utils.formatUnits(value, decimals));\n\nexport const parseUnits = (value: WeiSource, decimals = 18) => wei(value, decimals).toBN();\n\nexport const compareAddress = (add1: string | null = '', add2: string | null = '') =>\n  !!add1 && !!add2 && add1.toLowerCase() === add2.toLowerCase();\n\nexport const prettyString = (text: string, startLength = 6, endLength = 4) => {\n  if (text.length <= startLength + endLength) {\n    return text;\n  }\n  return `${text.substring(0, startLength)}...${text.substring(text.length - endLength)}`;\n};\n\nexport function renderAccountId(accountId?: ethers.BigNumber) {\n  if (!accountId) {\n    return '---';\n  }\n  const hex = accountId.toHexString();\n  // auto-generated 0x80000000000000000000000000000008 value\n  if (hex.length === 34) {\n    return `${hex.slice(0, 5)}...${hex.slice(-6)}`;\n  }\n  return `#${accountId}`;\n}\n","import { Wei } from '@synthetixio/wei';\n\nexport function currency(\n  value: Wei,\n  options?: Intl.NumberFormatOptions,\n  minimumDigitsToShowAfterZeros = 2\n) {\n  try {\n    const stringValue = value.toString();\n    const numberValue = value.toNumber();\n\n    const decimals =\n      numberValue < 0\n        ? -numberValue - Math.floor(-numberValue)\n        : numberValue - Math.floor(numberValue);\n    const zeroDecimals = decimals !== 0 ? -Math.floor(Math.log10(decimals) + 1) : 0;\n\n    const maximumFractionDigits = zeroDecimals + minimumDigitsToShowAfterZeros;\n\n    return isNaN(numberValue)\n      ? stringValue\n      : numberValue.toLocaleString('en-US', {\n          minimumFractionDigits: 0,\n          maximumFractionDigits,\n          ...options,\n        });\n  } catch (error) {\n    return value + '';\n  }\n}\n","import { Tooltip as ChakraTooltip, type TooltipProps } from '@chakra-ui/react';\n\nexport const Tooltip = ({ ...props }: TooltipProps) => {\n  return <ChakraTooltip hasArrow bg=\"gray.900\" p={3} borderRadius=\"4px\" {...props} />;\n};\n","import { useMemo } from 'react';\nimport { currency } from '@snx-v3/format';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { constants } from 'ethers';\nimport { Tooltip } from '@snx-v3/Tooltip';\n\nexport function Amount({\n  value,\n  prefix = '',\n  suffix = '',\n  'data-cy': testid,\n  showTooltip,\n}: {\n  prefix?: string;\n  value?: Wei;\n  suffix?: string;\n  'data-cy'?: string;\n  showTooltip?: boolean;\n}) {\n  const { formattedValue, preciseValue, isMaxUint } = useMemo(() => {\n    if (!value) {\n      return { formattedValue: '-', preciseValue: '-' };\n    }\n\n    const formattedValue = value.eq(0) ? '0.00' : currency(value);\n    const cleanNumber = wei(formattedValue.replaceAll(',', ''));\n\n    return {\n      isMaxUint: wei(constants.MaxInt256).lte(value),\n      formattedValue,\n      preciseValue: value.eq(cleanNumber) ? formattedValue : value.toString(),\n    };\n  }, [value]);\n\n  return (\n    <Tooltip\n      label={\n        <>\n          {isMaxUint ? (\n            'You cannot borrow sUSD against this collateral'\n          ) : (\n            <>\n              {prefix}\n              {preciseValue}\n              {suffix}\n            </>\n          )}\n        </>\n      }\n      isDisabled={formattedValue === preciseValue || !showTooltip}\n    >\n      <span data-cy={testid}>\n        {prefix}\n        {isMaxUint ? 'Infinite' : formattedValue}\n        {!isMaxUint && suffix}\n      </span>\n    </Tooltip>\n  );\n}\n","import React from 'react';\nimport { Button, Collapse, Text } from '@chakra-ui/react';\nimport format from 'date-fns/format';\nimport { ContractErrorType } from '@snx-v3/parseContractError';\n\nconst defaultOpen = window?.localStorage?.CONTRACT_ERROR_OPEN === 'true';\n\nexport function ContractError({ contractError }: { contractError: ContractErrorType }) {\n  const [isOpen, setIsOpen] = React.useState(defaultOpen);\n\n  return (\n    <>\n      {!isOpen ? (\n        <Button\n          variant=\"link\"\n          onClick={() => setIsOpen(true)}\n          color=\"inherit\"\n          fontWeight=\"normal\"\n          fontStyle=\"italic\"\n        >\n          details...\n        </Button>\n      ) : null}\n      <Collapse in={isOpen} animateOpacity unmountOnExit>\n        <Text fontStyle=\"italic\" fontSize=\"0.8em\">\n          {contractError.name}\n        </Text>\n        <Text whiteSpace=\"pre\" fontSize=\"0.8em\" fontStyle=\"italic\" pl=\"0.5em\">\n          {Object.entries(contractError.args)\n            .map(\n              ([key, val]) =>\n                `${key}: ${val instanceof Date ? format(val, 'yyyy-MM-dd HH:mm:ss') : val}`\n            )\n            .join('\\n')}\n        </Text>\n      </Collapse>\n    </>\n  );\n}\n","import { Box, Spinner } from '@chakra-ui/react';\nimport { PropsWithChildren } from 'react';\nimport { MultistepStatus } from './MultistepStatus';\n\nimport { createIcon } from '@chakra-ui/icon';\n\nexport const CheckIcon = createIcon({\n  viewBox: '0 0 14 14',\n  path: (\n    <g fill=\"currentColor\">\n      <polygon points=\"5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039\" />\n    </g>\n  ),\n});\n\nexport const CloseIcon = createIcon({\n  d: 'M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z',\n});\n\nexport function StepIcon({ status, children }: PropsWithChildren<{ status: MultistepStatus }>) {\n  switch (true) {\n    case status.failed:\n      return <CloseIcon color=\"white\" />;\n    case status.success:\n      return <CheckIcon color=\"white\" />;\n    case status.loading:\n      return <Spinner color=\"white\" width={6} height={6} />;\n    case status.disabled:\n    default:\n      return (\n        <Box\n          __css={{\n            display: 'inline',\n            fontWeight: 'medium',\n            textAlign: 'center',\n            fontSize: 'md',\n          }}\n        >\n          {children}\n        </Box>\n      );\n  }\n}\n","import { MultistepStatus } from './MultistepStatus';\n\nexport function statusColor(status: MultistepStatus): string {\n  switch (true) {\n    // order matters\n    case status.failed:\n      return 'red.700';\n    case status.disabled:\n      return 'gray.900';\n    case status.loading:\n      return 'gray.900';\n    case status.success:\n      return 'green.700';\n    default:\n      return 'gray.900';\n  }\n}\n","import { Flex } from '@chakra-ui/react';\nimport { PropsWithChildren } from 'react';\nimport { MultistepStatus } from './MultistepStatus';\nimport { StepIcon } from './StepIcon';\nimport { statusColor } from './statusColor';\n\nexport function Step({ status, children }: PropsWithChildren<{ status: MultistepStatus }>) {\n  return (\n    <Flex\n      width={10}\n      height={10}\n      minWidth={10}\n      minHeight={10}\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      bg={statusColor(status)}\n      rounded=\"full\"\n      transitionProperty=\"background\"\n      transitionDuration=\"normal\"\n    >\n      <StepIcon status={status}>{children}</StepIcon>\n    </Flex>\n  );\n}\n","import { PropsWithChildren, ReactNode } from 'react';\nimport { Box, Checkbox, CheckboxProps, Flex, FlexProps, Text } from '@chakra-ui/react';\nimport { Step } from './Step';\nimport { statusColor } from './statusColor';\nimport { MultistepStatus } from './MultistepStatus';\n\nfunction StepCheckbox({ children, ...props }: PropsWithChildren<CheckboxProps>) {\n  return (\n    <Flex mt=\"0.5\">\n      <Checkbox size=\"sm\" {...props}>\n        <Box fontSize=\"xs\" opacity=\"0.66\">\n          {children}\n        </Box>\n      </Checkbox>\n    </Flex>\n  );\n}\ninterface Props extends Omit<FlexProps, 'title'> {\n  step: number;\n  title: string | ReactNode;\n  subtitle?: string | ReactNode;\n  checkboxLabel?: string;\n  checkboxProps?: CheckboxProps;\n  status: MultistepStatus;\n  children?: ReactNode | undefined;\n}\n\nexport function Multistep({\n  step,\n  title,\n  subtitle,\n  checkboxLabel,\n  checkboxProps,\n  status,\n  children,\n  ...props\n}: Props) {\n  return (\n    <Flex\n      position=\"relative\"\n      alignItems=\"center\"\n      gap={4}\n      rounded=\"lg\"\n      mt=\"6\"\n      p=\"4\"\n      border=\"1px solid\"\n      transitionProperty=\"border-color\"\n      transitionDuration=\"normal\"\n      borderColor={statusColor(status)}\n      {...props}\n    >\n      <Step status={status}>{step}</Step>\n      <Flex direction=\"column\">\n        <Text color=\"white\" fontWeight={700}>\n          {title}\n        </Text>\n        {subtitle ? (\n          <Text as=\"div\" fontSize=\"xs\" opacity=\"0.66\">\n            {subtitle}\n          </Text>\n        ) : null}\n        {checkboxLabel ? <StepCheckbox {...checkboxProps}>{checkboxLabel}</StepCheckbox> : null}\n        {children}\n      </Flex>\n    </Flex>\n  );\n}\n","export type TransactionStatus = 'unsent' | 'prompting' | 'pending' | 'success' | 'error';\n\ntype TxnState = {\n  error: Error | null;\n  modalOpen: boolean;\n  txnStatus: TransactionStatus;\n  txnHash: string | null;\n};\n\nexport const initialState: TxnState = {\n  error: null,\n  modalOpen: false,\n  txnStatus: 'unsent',\n  txnHash: null,\n};\n\nexport type Actions =\n  | { type: 'prompting' }\n  | { type: 'pending'; payload: { txnHash: string } }\n  | { type: 'success' }\n  | { type: 'error'; payload: { error: Error } }\n  | { type: 'settled' };\n\nexport function reducer(state: TxnState, action: Actions): TxnState {\n  switch (action.type) {\n    case 'prompting':\n      return {\n        ...state,\n        txnStatus: 'prompting',\n        modalOpen: true,\n        error: null,\n      };\n\n    case 'pending':\n      return {\n        ...state,\n        txnStatus: 'pending',\n        txnHash: action.payload.txnHash,\n      };\n\n    case 'success':\n      return {\n        ...state,\n        txnStatus: 'success',\n      };\n\n    case 'error':\n      return {\n        ...state,\n        txnStatus: 'error',\n        error: action.payload.error,\n      };\n\n    case 'settled':\n      return {\n        ...state,\n        modalOpen: false,\n        txnStatus: 'unsent',\n        error: null,\n        txnHash: null,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { useQuery } from '@tanstack/react-query';\nimport { useWallet, useNetwork, useProvider } from '@snx-v3/useBlockchain';\nimport { BigNumber, Contract } from 'ethers';\n\nconst abi = ['function allowance(address, address) view returns (uint256)'];\n\nexport const useAllowance = ({\n  contractAddress,\n  spender,\n}: {\n  contractAddress?: string;\n  spender?: string;\n}) => {\n  const { activeWallet } = useWallet();\n  const { network } = useNetwork();\n  const provider = useProvider();\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'Allowance',\n      { accountAddress: activeWallet?.address },\n      { contractAddress, spender },\n    ],\n    queryFn: async () => {\n      if (!(contractAddress && spender && activeWallet?.address && provider))\n        throw new Error('OMG');\n      const contract = new Contract(contractAddress, abi, provider);\n      const allowance = await contract.allowance(activeWallet.address, spender);\n\n      return BigNumber.from(allowance);\n    },\n    enabled: Boolean(activeWallet?.address && contractAddress && spender && provider),\n  });\n};\n","import { initialState, reducer } from '@snx-v3/txnReducer';\nimport { useAllowance } from '@snx-v3/useAllowance';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\nimport { useReducer } from 'react';\n\nconst log = debug('snx:useApprove');\n\nexport const approveAbi = ['function approve(address spender, uint256 amount) returns (bool)'];\n\nexport const useApprove = ({\n  contractAddress,\n  amount,\n  spender,\n}: {\n  contractAddress?: string;\n  amount?: ethers.BigNumber;\n  spender?: string;\n}) => {\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n  const { data: allowance, refetch: refetchAllowance } = useAllowance({ contractAddress, spender });\n  const sufficientAllowance = allowance && amount && allowance.gte(amount);\n\n  const { network } = useNetwork();\n  const signer = useSigner();\n  const provider = useProvider();\n\n  const queryClient = useQueryClient();\n  const mutation = useMutation({\n    mutationFn: async (infiniteApproval: boolean) => {\n      if (!signer || !contractAddress || !spender || !provider)\n        throw new Error('Signer, contract address or spender is not defined');\n      if (sufficientAllowance || !amount) {\n        dispatch({ type: 'success' });\n        return;\n      }\n\n      log(`contractAddress`, contractAddress);\n      log(`spender`, spender);\n      log(`amount`, amount);\n\n      dispatch({ type: 'prompting' });\n\n      const contract = new ethers.Contract(contractAddress, approveAbi, signer);\n      const amountToApprove = infiniteApproval ? ethers.constants.MaxUint256 : amount;\n      log(`amountToApprove`, amountToApprove);\n\n      const gasLimitPromised = contract.estimateGas.approve(spender, amountToApprove);\n      const populatedTxnPromised = contract.populateTransaction.approve(spender, amountToApprove);\n      const [gasLimit, populatedTxn] = await Promise.all([gasLimitPromised, populatedTxnPromised]);\n\n      const txn = await signer.sendTransaction({\n        ...populatedTxn,\n        gasLimit: gasLimit.mul(15).div(10),\n      });\n      log('txn', txn);\n      dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n      dispatch({ type: 'success' });\n      return receipt;\n    },\n\n    onSuccess: async () => {\n      const deployment = `${network?.id}-${network?.preset}`;\n      await Promise.all(\n        [\n          //\n          'Allowance',\n        ].map((key) => queryClient.invalidateQueries({ queryKey: [deployment, key] }))\n      );\n      dispatch({ type: 'success' });\n    },\n\n    onError: (error) => {\n      dispatch({ type: 'error', payload: { error } });\n      throw error;\n    },\n  });\n  return {\n    mutation,\n    txnState,\n    isLoading: mutation.isPending,\n    approve: mutation.mutateAsync,\n    refetchAllowance,\n    requireApproval: !sufficientAllowance,\n    allowance,\n  };\n};\n","export async function importAllErrors(\n  chainId?: number,\n  preset?: string\n): Promise<{ address: undefined; abi: string[] }> {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/AllErrors.readable.json'),\n      ]);\n      return { address: undefined, abi };\n    }\n    case '11155111-main': {\n      const [{ default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/AllErrors.readable.json'),\n      ]);\n      return { address: undefined, abi };\n    }\n    case '10-main': {\n      const [{ default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/AllErrors.readable.json'),\n      ]);\n      return { address: undefined, abi };\n    }\n    case '8453-andromeda': {\n      const [{ default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/AllErrors.readable.json'),\n      ]);\n      return { address: undefined, abi };\n    }\n    case '84532-andromeda': {\n      const [{ default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/AllErrors.readable.json'),\n      ]);\n      return { address: undefined, abi };\n    }\n    case '42161-main': {\n      const [{ default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/AllErrors.readable.json'),\n      ]);\n      return { address: undefined, abi };\n    }\n    case '421614-main': {\n      const [{ default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/AllErrors.readable.json'),\n      ]);\n      return { address: undefined, abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for AllErrors`);\n    }\n  }\n}\n","const abi = [\n  'function clearDebt(address coreProxyAddress, address accountProxyAddress, uint128 accountId, uint128 poolId, address collateralType)',\n  'function closePosition(address coreProxyAddress, address accountProxyAddress, uint128 accountId, uint128 poolId, address collateralType)',\n  'function decreasePosition(address coreProxyAddress, address accountProxyAddress, uint128 accountId, uint128 poolId, address collateralType, uint256 amount)',\n  'function increasePosition(address coreProxyAddress, address accountProxyAddress, uint128 accountId, uint128 poolId, address collateralType, uint256 amount)',\n  'function onERC721Received(address, address, uint256, bytes) pure returns (bytes4)',\n  'function repay(address coreProxyAddress, address accountProxyAddress, uint128 accountId, uint128 poolId, address collateralType, uint256 debtAmount)',\n  'function setupPosition(address coreProxyAddress, address accountProxyAddress, uint128 accountId, uint128 poolId, address collateralType, uint256 amount)',\n  'error NotEnoughAllowance(address walletAddress, address tokenAddress, uint256 requiredAllowance, uint256 availableAllowance)',\n  'error NotEnoughBalance(address walletAddress, address tokenAddress, uint256 requiredAmount, uint256 availableAmount)',\n];\n\nexport async function importPositionManager(\n  chainId?: number,\n  preset?: string\n): Promise<{ address: string; abi: string[] }> {\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      // https://etherscan.io/address/0x21e9D735Db12221a787317954bDdD7144353b5D7#code\n      return { address: '0x21e9D735Db12221a787317954bDdD7144353b5D7', abi };\n    }\n    case '11155111-main': {\n      // https://sepolia.etherscan.io/address/0xfaa4d64521db83195b5b3ff502812b267dde4a53#code\n      return { address: '0xfaa4d64521db83195b5b3ff502812b267dde4a53', abi };\n    }\n    case '42161-main': {\n      // https://arbiscan.io/address/0x42c7720912fdc1cdff1f73ff0eee5f0af8522491#code\n      return { address: '0x42c7720912fdc1cdff1f73ff0eee5f0af8522491', abi };\n    }\n    case '421614-main': {\n      // https://sepolia.arbiscan.io/address/0xa86339a1ce701b0c708a56cae3d5142f675e1540#code\n      return { address: '0xa86339a1ce701b0c708a56cae3d5142f675e1540', abi };\n    }\n    case '10-main': {\n      // https://optimistic.etherscan.io/address/0x8D99de5C3528883fcb9cCFa8E13ffF6330e45CDB#code\n      return { address: '0x8D99de5C3528883fcb9cCFa8E13ffF6330e45CDB', abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for ClosePosition`);\n    }\n  }\n}\n","import { importPositionManager } from './importPositionManager';\n\nexport async function importClosePosition(\n  chainId?: number,\n  preset?: string\n): Promise<{ address: string; abi: string[] }> {\n  return importPositionManager(chainId, preset);\n}\n","import { importClosePosition } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useClosePosition(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'ClosePosition'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw 'OMFG';\n      return importClosePosition(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","const abi = [\n  'constructor(address pool, address rewardsController)',\n  'error ECDSAInvalidSignature()',\n  'error ECDSAInvalidSignatureLength(uint256 length)',\n  'error ECDSAInvalidSignatureS(bytes32 s)',\n  'error SafeERC20FailedOperation(address token)',\n  'event Approval(address indexed owner, address indexed spender, uint256 amount)',\n  'event Deposit(address indexed sender, address indexed owner, uint256 assets, uint256 shares)',\n  'event Initialized(uint8 version)',\n  'event Initialized(address indexed aToken, string staticATokenName, string staticATokenSymbol)',\n  'event RewardTokenRegistered(address indexed reward, uint256 startIndex)',\n  'event Transfer(address indexed from, address indexed to, uint256 amount)',\n  'event Withdraw(address indexed sender, address indexed receiver, address indexed owner, uint256 assets, uint256 shares)',\n  'function DOMAIN_SEPARATOR() view returns (bytes32)',\n  'function INCENTIVES_CONTROLLER() view returns (address)',\n  'function METADEPOSIT_TYPEHASH() view returns (bytes32)',\n  'function METAWITHDRAWAL_TYPEHASH() view returns (bytes32)',\n  'function PERMIT_TYPEHASH() view returns (bytes32)',\n  'function POOL() view returns (address)',\n  'function STATIC__ATOKEN_LM_REVISION() view returns (uint256)',\n  'function aToken() view returns (address)',\n  'function allowance(address, address) view returns (uint256)',\n  'function approve(address spender, uint256 amount) returns (bool)',\n  'function asset() view returns (address)',\n  'function balanceOf(address) view returns (uint256)',\n  'function claimRewards(address receiver, address[] rewards)',\n  'function claimRewardsOnBehalf(address onBehalfOf, address receiver, address[] rewards)',\n  'function claimRewardsToSelf(address[] rewards)',\n  'function collectAndUpdateRewards(address reward) returns (uint256)',\n  'function convertToAssets(uint256 shares) view returns (uint256)',\n  'function convertToShares(uint256 assets) view returns (uint256)',\n  'function decimals() view returns (uint8)',\n  'function deposit(uint256 assets, address receiver, uint16 referralCode, bool depositToAave) returns (uint256)',\n  'function deposit(uint256 assets, address receiver) returns (uint256)',\n  'function getClaimableRewards(address user, address reward) view returns (uint256)',\n  'function getCurrentRewardsIndex(address reward) view returns (uint256)',\n  'function getTotalClaimableRewards(address reward) view returns (uint256)',\n  'function getUnclaimedRewards(address user, address reward) view returns (uint256)',\n  'function initialize(address newAToken, string staticATokenName, string staticATokenSymbol)',\n  'function isRegisteredRewardToken(address reward) view returns (bool)',\n  'function maxDeposit(address) view returns (uint256)',\n  'function maxMint(address) view returns (uint256)',\n  'function maxRedeem(address owner) view returns (uint256)',\n  'function maxWithdraw(address owner) view returns (uint256)',\n  'function metaDeposit(address depositor, address receiver, uint256 assets, uint16 referralCode, bool depositToAave, uint256 deadline, tuple(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) permit, tuple(uint8 v, bytes32 r, bytes32 s) sigParams) returns (uint256)',\n  'function metaWithdraw(address owner, address receiver, uint256 shares, uint256 assets, bool withdrawFromAave, uint256 deadline, tuple(uint8 v, bytes32 r, bytes32 s) sigParams) returns (uint256, uint256)',\n  'function mint(uint256 shares, address receiver) returns (uint256)',\n  'function name() view returns (string)',\n  'function nonces(address) view returns (uint256)',\n  'function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)',\n  'function previewDeposit(uint256 assets) view returns (uint256)',\n  'function previewMint(uint256 shares) view returns (uint256)',\n  'function previewRedeem(uint256 shares) view returns (uint256)',\n  'function previewWithdraw(uint256 assets) view returns (uint256)',\n  'function rate() view returns (uint256)',\n  'function redeem(uint256 shares, address receiver, address owner) returns (uint256)',\n  'function redeem(uint256 shares, address receiver, address owner, bool withdrawFromAave) returns (uint256, uint256)',\n  'function refreshRewardTokens()',\n  'function rewardTokens() view returns (address[])',\n  'function symbol() view returns (string)',\n  'function totalAssets() view returns (uint256)',\n  'function totalSupply() view returns (uint256)',\n  'function transfer(address to, uint256 amount) returns (bool)',\n  'function transferFrom(address from, address to, uint256 amount) returns (bool)',\n  'function withdraw(uint256 assets, address receiver, address owner) returns (uint256)',\n];\n\nexport async function importStaticAaveUSDC(\n  chainId?: number,\n  preset?: string\n): Promise<{ address: string; abi: string[] }> {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '8453-andromeda': {\n      const [{ default: meta }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/meta.json'),\n      ]);\n\n      return {\n        address: meta.contracts.CollateralToken_stataBasUSDC,\n        abi,\n      };\n    }\n    //    CollateralToken_stataBasUSDC.readable.json\n    case '84532-andromeda': {\n      const [{ default: meta }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/meta.json'),\n      ]);\n\n      return {\n        address: meta.contracts.CollateralToken_stataUSDC,\n        abi,\n      };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for Extras`);\n    }\n  }\n}\n","import { importStaticAaveUSDC } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useStaticAaveUSDC(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'StaticAaveUSDC'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw new Error('OMFG');\n      return importStaticAaveUSDC(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","import { ethers } from 'ethers';\n\nconst ERC721_ERRORS = [\n  'error CannotSelfApprove(address addr)',\n  'error InvalidTransferRecipient(address addr)',\n  'error InvalidOwner(address addr)',\n  'error TokenDoesNotExist(uint256 id)',\n  'error TokenAlreadyMinted(uint256 id)',\n];\n\nexport type ContractErrorType = {\n  data: string;\n  name: string;\n  signature: string;\n  args: Record<string, any>;\n};\n\nexport const PYTH_ERRORS = [\n  // Function arguments are invalid (e.g., the arguments lengths mismatch)\n  // Signature: 0xa9cb9e0d\n  'error InvalidArgument()',\n  // Update data is coming from an invalid data source.\n  // Signature: 0xe60dce71\n  'error InvalidUpdateDataSource()',\n  // Update data is invalid (e.g., deserialization error)\n  // Signature: 0xe69ffece\n  'error InvalidUpdateData()',\n  // Insufficient fee is paid to the method.\n  // Signature: 0x025dbdd4\n  'error InsufficientFee()',\n  // There is no fresh update, whereas expected fresh updates.\n  // Signature: 0xde2c57fa\n  'error NoFreshUpdate()',\n  // There is no price feed found within the given range or it does not exists.\n  // Signature: 0x45805f5d\n  'error PriceFeedNotFoundWithinRange()',\n  // Price feed not found or it is not pushed on-chain yet.\n  // Signature: 0x14aebe68\n  'error PriceFeedNotFound()',\n  // Requested price is stale.\n  // Signature: 0x19abf40e\n  'error StalePrice()',\n  // Given message is not a valid Wormhole VAA.\n  // Signature: 0x2acbe915\n  'error InvalidWormholeVaa()',\n  // Governance message is invalid (e.g., deserialization error).\n  // Signature: 0x97363b35\n  'error InvalidGovernanceMessage()',\n  // Governance message is not for this contract.\n  // Signature: 0x63daeb77\n  'error InvalidGovernanceTarget()',\n  // Governance message is coming from an invalid data source.\n  // Signature: 0x360f2d87\n  'error InvalidGovernanceDataSource()',\n  // Governance message is old.\n  // Signature: 0x88d1b847\n  'error OldGovernanceMessage()',\n  // The wormhole address to set in SetWormholeAddress governance is invalid.\n  // Signature: 0x13d3ed82\n  'error InvalidWormholeAddressToSet()',\n];\n\nexport function extractErrorData(error: Error | any) {\n  return (\n    error.cause?.cause?.cause?.error?.data ||\n    error.cause?.cause?.cause?.data ||\n    error.cause?.cause?.error?.data ||\n    error.cause?.cause?.data ||\n    error.cause?.data ||\n    error?.error?.error?.error?.data ||\n    error?.error?.error?.data ||\n    error?.error?.data?.data ||\n    error?.error?.data ||\n    error?.data?.data ||\n    error?.data\n  );\n}\n\nexport function parseContractError({\n  error,\n  AllErrors,\n  extraAbi,\n}: {\n  error?: any;\n  AllErrors?: { abi: string[] };\n  extraAbi?: string[];\n}): ContractErrorType | void {\n  const errorData = extractErrorData(error);\n  if (!errorData) {\n    console.error({ error }); // intentional logging as object so we can inspect all properties\n    return;\n  }\n\n  if (`${errorData}`.startsWith('0x08c379a0')) {\n    const content = `0x${errorData.substring(10)}`;\n    // reason: string; for standard revert error string\n    const reason = ethers.utils.defaultAbiCoder.decode(['string'], content);\n    console.error(reason);\n    return {\n      data: errorData,\n      signature: content,\n      name: `Revert ${reason[0]}`,\n      args: {},\n    };\n  }\n\n  try {\n    const AllErrorsInterface = new ethers.utils.Interface([\n      ...(AllErrors ? AllErrors.abi : []),\n      ...PYTH_ERRORS,\n      ...ERC721_ERRORS,\n      ...(extraAbi ? extraAbi : []),\n    ]);\n\n    const errorParsed = AllErrorsInterface.parseError(errorData);\n    const errorArgs = Object.fromEntries(\n      Object.entries(errorParsed.args)\n        .filter(([key]) => `${parseInt(key)}` !== key)\n        .map(([key, value]) => {\n          if (value instanceof ethers.BigNumber) {\n            // Guess wei\n            const unwei = parseFloat(ethers.utils.formatEther(value.toString()));\n            if (unwei > 0.001) {\n              // must be wei\n              return [key, unwei];\n            }\n\n            // Guess date\n            if (\n              value.toNumber() > new Date(2000, 1, 1).getTime() / 1000 &&\n              value.toNumber() < new Date(2100, 1, 1).getTime() / 1000\n            ) {\n              return [key, new Date(value.toNumber() * 1000)];\n            }\n\n            // Just a number\n            return [key, parseFloat(value.toString())];\n          }\n\n          // Not a number\n          return [key, value];\n        })\n    );\n\n    return {\n      data: errorData,\n      name: errorParsed.name,\n      signature: errorParsed.signature,\n      args: errorArgs,\n    };\n  } catch (error) {\n    console.error(`Error parsing failure: ${error}`);\n  }\n}\n","import { useAllErrors } from '@snx-v3/useAllErrors';\nimport { useClosePosition } from '@snx-v3/useClosePosition';\nimport { useStaticAaveUSDC } from '@snx-v3/useStaticAaveUSDC';\nimport { parseContractError } from '@snx-v3/parseContractError';\nimport { useCallback } from 'react';\n\nexport function useContractErrorParser() {\n  const { data: AllErrors } = useAllErrors();\n  const { data: ClosePosition } = useClosePosition();\n  const { data: StaticAaveUSDC } = useStaticAaveUSDC();\n\n  return useCallback(\n    (error: any) => {\n      return parseContractError({\n        error,\n        AllErrors,\n        extraAbi: [\n          ...(StaticAaveUSDC ? StaticAaveUSDC.abi : []),\n          ...(ClosePosition ? ClosePosition.abi : []),\n        ],\n      });\n    },\n    [AllErrors, ClosePosition, StaticAaveUSDC]\n  );\n}\n","import { importAllErrors } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useAllErrors(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'AllErrors'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw new Error('OMFG');\n      return importAllErrors(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","import { importLegacyMarket } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useLegacyMarket(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'LegacyMarket'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw new Error('OMFG');\n      return importLegacyMarket(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","export async function importLegacyMarket(\n  chainId?: number,\n  preset?: string\n): Promise<{ address: string; abi: string[] }> {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/meta.json'),\n        import('@synthetixio/v3-contracts/1-main/LegacyMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.LegacyMarketProxy, abi };\n    }\n    case '11155111-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/meta.json'),\n        import('@synthetixio/v3-contracts/11155111-main/LegacyMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.LegacyMarketProxy, abi };\n    }\n    /*case '10-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/meta.json'),\n        import('@synthetixio/v3-contracts/10-main/LegacyMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.LegacyMarketProxy, abi };\n\t\t}*/\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for Extras`);\n    }\n  }\n}\n","import { extractErrorData } from '@snx-v3/parseContractError';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { useLegacyMarket } from '@snx-v3/useLegacyMarket';\nimport Wei from '@synthetixio/wei';\nimport { useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\nimport { useCallback, useState } from 'react';\n\nconst log = debug('snx:useMigrateUSD');\n\nexport function useMigrateUSD({ amount }: { amount: Wei }) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const signer = useSigner();\n  const { data: LegacyMarket } = useLegacyMarket();\n  const provider = useProvider();\n  const queryClient = useQueryClient();\n  const { network } = useNetwork();\n\n  const migrate = useCallback(async () => {\n    try {\n      if (!(LegacyMarket && signer && provider)) {\n        throw 'OMFG';\n      }\n      setIsLoading(true);\n      setIsSuccess(false);\n\n      const LegacyMarketContract = new ethers.Contract(\n        LegacyMarket.address,\n        LegacyMarket.abi,\n        signer\n      );\n\n      const transaction = await LegacyMarketContract.populateTransaction.convertUSD(amount.toBN());\n      const gasLimit = await provider.estimateGas(transaction);\n\n      const txn = await signer.sendTransaction({\n        ...transaction,\n        gasLimit: gasLimit.mul(15).div(10),\n      });\n      log('txn', txn);\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n\n      setIsLoading(false);\n      setIsSuccess(true);\n\n      queryClient.invalidateQueries({\n        queryKey: [`${network?.id}-${network?.preset}`, 'TokenBalance'],\n      });\n    } catch (error) {\n      if (LegacyMarket) {\n        try {\n          const LegacyMarketInterface = new ethers.utils.Interface(LegacyMarket.abi);\n          const parsedError = extractErrorData(error);\n          const errorResult = LegacyMarketInterface.parseError(parsedError as string);\n          console.error('error:', errorResult);\n        } catch {\n          // whatever\n        }\n      }\n      setIsLoading(false);\n      throw error;\n    }\n  }, [amount, LegacyMarket, network?.id, network?.preset, provider, queryClient, signer]);\n\n  return {\n    migrate,\n    isLoading,\n    isSuccess,\n  };\n}\n","import { Network, useNetwork, useProviderForChain, useWallet } from '@snx-v3/useBlockchain';\nimport { wei } from '@synthetixio/wei';\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\n\nexport const tokenAbi = [\n  'function balanceOf(address) view returns (uint256)',\n  'function decimals() view returns (uint8)',\n];\n\nexport const useTokenBalance = (tokenAddress?: string, customNetwork?: Network) => {\n  const { activeWallet } = useWallet();\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n  const provider = useProviderForChain(targetNetwork);\n  const walletAddress = activeWallet?.address;\n  return useQuery({\n    enabled: Boolean(walletAddress && tokenAddress && provider && targetNetwork),\n    queryKey: [\n      `${targetNetwork?.id}-${targetNetwork?.preset}`,\n      'TokenBalance',\n      { accountAddress: walletAddress, tokenAddress },\n    ],\n    queryFn: async () => {\n      if (!(walletAddress && tokenAddress && provider && targetNetwork)) {\n        throw 'OMFG';\n      }\n\n      const TokenContract = new ethers.Contract(tokenAddress, tokenAbi, provider);\n      const [balance, decimals] = await Promise.all([\n        TokenContract.balanceOf(walletAddress),\n        TokenContract.decimals(),\n      ]);\n      return { balance, decimals };\n    },\n    select: ({ balance, decimals }) => wei(balance, decimals),\n    refetchInterval: 120_000,\n  });\n};\n\nexport const useTokenBalances = (tokenAddresses: string[], customNetwork?: Network) => {\n  const { activeWallet } = useWallet();\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n  const provider = useProviderForChain(targetNetwork);\n  const walletAddress = activeWallet?.address;\n\n  const queryClient = useQueryClient();\n  return useQuery({\n    queryKey: [\n      `${targetNetwork?.id}-${targetNetwork?.preset}`,\n      'TokenBalance',\n      {\n        accountAddress: walletAddress,\n        tokenAddresses: tokenAddresses.map((a) => a.slice(2, 6).toLowerCase()).sort(),\n      },\n    ],\n    enabled: Boolean(walletAddress && tokenAddresses.length && provider && targetNetwork),\n\n    queryFn: async () => {\n      if (!(walletAddress && tokenAddresses.length && provider && targetNetwork)) {\n        throw 'OMFG';\n      }\n\n      return await Promise.all(\n        tokenAddresses.map(async (tokenAddress) => {\n          const TokenContract = new ethers.Contract(tokenAddress, tokenAbi, provider);\n          const [balance, decimals] = await Promise.all([\n            TokenContract.balanceOf(walletAddress),\n            TokenContract.decimals(),\n          ]);\n          queryClient.setQueryData(\n            [\n              `${targetNetwork?.id}-${targetNetwork?.preset}`,\n              'TokenBalance',\n              {\n                accountAddress: walletAddress,\n                tokenAddresses: tokenAddresses.map((a) => a.slice(2, 6).toLowerCase()).sort(),\n              },\n            ],\n            { balance, decimals }\n          );\n          return { balance, decimals };\n        })\n      );\n    },\n    select: (balances) => balances.map(({ balance, decimals }) => wei(balance, decimals)),\n    refetchInterval: 120_000,\n  });\n};\n","export async function importUSDProxy(\n  chainId?: number,\n  preset?: string\n): Promise<{ address: string; abi: string[] }> {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/meta.json'),\n        import('@synthetixio/v3-contracts/1-main/USDProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.USDProxy, abi };\n    }\n    case '11155111-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/meta.json'),\n        import('@synthetixio/v3-contracts/11155111-main/USDProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.USDProxy, abi };\n    }\n    case '10-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/meta.json'),\n        import('@synthetixio/v3-contracts/10-main/USDProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.USDProxy, abi };\n    }\n    case '8453-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/8453-andromeda/USDProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.USDProxy, abi };\n    }\n    case '84532-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/84532-andromeda/USDProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.USDProxy, abi };\n    }\n    case '42161-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/meta.json'),\n        import('@synthetixio/v3-contracts/42161-main/USDProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.USDProxy, abi };\n    }\n    case '421614-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/meta.json'),\n        import('@synthetixio/v3-contracts/421614-main/USDProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.USDProxy, abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for USDProxy`);\n    }\n  }\n}\n","import { importUSDProxy } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useUSDProxy(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'USDProxy'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw new Error('OMFG');\n      return importUSDProxy(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","import { stringToHash } from './stringToHash';\n\nexport function contractsHash(Contracts: ({ address: string } | undefined)[]) {\n  // If any of the contracts are undefined - treat all as undefined.\n  // We only care when we have all contracts ready\n  if (Contracts.some((Contract) => Contract === undefined)) {\n    return '~';\n  }\n  return stringToHash(\n    Contracts.map((Contract) => Contract?.address.toLowerCase() || '')\n      .sort()\n      .join()\n  );\n}\n","export function stringToHash(s: string | undefined) {\n  return (s || '').split('').reduce(function (a, b) {\n    a = (a << 5) - a + b.charCodeAt(0);\n    return a & a;\n  }, 0);\n}\n","import { importV2x } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useV2xSynthetix(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'V2xSynthetix'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw new Error('OMFG');\n      return importV2x(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","export async function importV2x(\n  chainId?: number,\n  preset?: string\n): Promise<{ address: string; abi: string[] }> {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/meta.json'),\n        import('@synthetixio/v3-contracts/1-main/V2x.readable.json'),\n      ]);\n      return { address: meta.contracts.V2x, abi };\n    }\n    case '11155111-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/meta.json'),\n        import('@synthetixio/v3-contracts/11155111-main/V2x.readable.json'),\n      ]);\n      return { address: meta.contracts.V2x, abi };\n    }\n    /*case '10-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/meta.json'),\n        import('@synthetixio/v3-contracts/10-main/V2x.readable.json'),\n      ]);\n      return { address: meta.contracts.V2x, abi };\n\t\t}*/\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for V2x`);\n    }\n  }\n}\n","import { contractsHash } from '@snx-v3/tsHelpers';\nimport { Network, useProviderForChain } from '@snx-v3/useBlockchain';\nimport { useV2xSynthetix } from '@snx-v3/useV2xSynthetix';\nimport { useQuery } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\n\nexport function useV2sUSD(network: Network) {\n  const { data: V2xSynthetix } = useV2xSynthetix(network);\n  const provider = useProviderForChain(network);\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'V2 sUSD',\n\n      { contractsHash: contractsHash([V2xSynthetix]) },\n    ],\n    enabled: Boolean(provider && V2xSynthetix),\n    queryFn: async function () {\n      if (!(provider && V2xSynthetix)) throw 'OMFG';\n      const V2xSynthetixContract = new ethers.Contract(\n        V2xSynthetix.address,\n        V2xSynthetix.abi,\n        provider\n      );\n\n      return (await V2xSynthetixContract.synths(\n        ethers.utils.formatBytes32String('sUSD')\n      )) as string;\n    },\n  });\n}\n","import { ArrowForwardIcon } from '@chakra-ui/icons';\nimport { Flex, Text } from '@chakra-ui/react';\nimport Wei from '@synthetixio/wei';\nimport React from 'react';\n\nconst styles = {\n  sm: {\n    fontSize: '12px',\n    fontWeight: '700',\n    lineHeight: '14px',\n  },\n  md: {\n    fontSize: '16px',\n    fontWeight: '400',\n    lineHeight: '16px',\n  },\n  lg: {\n    fontSize: '18px',\n    fontWeight: '800',\n    lineHeight: '24px',\n  },\n};\n\nexport function ChangeStat({\n  formatFn,\n  value,\n  newValue,\n  hasChanges,\n  'data-cy': dataCy,\n  size = 'lg',\n  isPending,\n}: {\n  value?: Wei;\n  newValue: Wei;\n  hasChanges: boolean;\n  'data-cy'?: string;\n  formatFn: (val?: Wei) => React.ReactNode;\n  size?: 'sm' | 'md' | 'lg';\n  isPending?: boolean;\n}) {\n  return (\n    <Flex\n      gap=\"1\"\n      alignItems=\"center\"\n      color=\"white\"\n      fontSize={styles[size].fontSize}\n      fontWeight={styles[size].fontWeight}\n      lineHeight={styles[size].lineHeight}\n      flexWrap=\"wrap\"\n      data-cy={dataCy}\n    >\n      <Text\n        as=\"div\"\n        data-cy=\"change stats current\"\n        textAlign=\"center\"\n        opacity={value && value.eq(0) ? '70%' : undefined}\n        whiteSpace=\"nowrap\"\n      >\n        {isPending ? '~' : formatFn(value)}\n      </Text>\n      {hasChanges && !isPending && (!value || !value.eq(newValue)) ? (\n        <Flex gap=\"1\" alignItems=\"center\" isTruncated>\n          <ArrowForwardIcon />\n          <Text\n            as=\"div\"\n            data-cy=\"change stats new\"\n            textAlign=\"center\"\n            opacity={newValue.eq(0) ? '70%' : undefined}\n            whiteSpace=\"nowrap\"\n          >\n            {formatFn(newValue)}\n          </Text>\n        </Flex>\n      ) : null}\n    </Flex>\n  );\n}\n","import { Flex, FlexProps } from '@chakra-ui/react';\nimport { ReactNode } from 'react';\n\ninterface Props extends FlexProps {\n  items: {\n    label: ReactNode;\n    value: ReactNode;\n  }[];\n}\n\nexport const TransactionSummary = ({ items, ...props }: Props) => (\n  <Flex p={3.5} borderRadius=\"4px\" background=\"#1F1F34\" flexDir=\"column\" gap={3} {...props}>\n    {items.map(({ value, label }, i) => (\n      <Flex fontWeight={700} fontSize=\"12px\" key={i} flex={1} width=\"100%\">\n        <Flex alignItems=\"center\" justify=\"flex-start\" textAlign=\"left\" flexGrow={1}>\n          {label}\n        </Flex>\n        <Flex alignItems=\"center\" justify=\"flex-end\" textAlign=\"right\" flexGrow={1}>\n          {value}\n        </Flex>\n      </Flex>\n    ))}\n  </Flex>\n);\n","import { ArrowUpIcon, CheckIcon } from '@chakra-ui/icons';\nimport { Alert, Button, Flex, Text, VStack } from '@chakra-ui/react';\nimport { ChangeStat } from '@snx-v3/ChangeStat';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { currency } from '@snx-v3/format';\nimport Wei from '@synthetixio/wei';\nimport React from 'react';\nimport { TransactionSummary } from '../TransactionSummary/TransactionSummary';\n\nexport const StepSuccess = ({\n  onConfirm,\n  v2Balance,\n  v3Balance,\n  amount,\n}: {\n  onConfirm: () => void;\n  v2Balance: Wei;\n  v3Balance: Wei;\n  amount: Wei;\n}) => {\n  return (\n    <VStack spacing={6}>\n      <Text width=\"100%\" textAlign=\"left\" fontSize=\"14px\">\n        Your <b>V2 sUSD</b> has been converted to <b>V3 sUSD</b>\n      </Text>\n\n      <Alert rounded=\"base\" colorScheme=\"green\" borderRadius=\"6px\">\n        <Flex bg=\"green.500\" p=\"1\" rounded=\"full\" mr=\"3.5\">\n          <CheckIcon w=\"12px\" h=\"12px\" color=\"green.900\" />\n        </Flex>\n        <Text fontSize=\"16px\">\n          <b>sUSD</b> successfully converted\n        </Text>\n      </Alert>\n\n      <TransactionSummary\n        width=\"100%\"\n        items={[\n          {\n            label: 'Total V2 sUSD',\n            value: (\n              <ChangeStat\n                value={v2Balance}\n                newValue={v2Balance.sub(amount)}\n                formatFn={(val?: Wei) => currency(val ?? ZEROWEI)}\n                hasChanges\n                size=\"sm\"\n              />\n            ),\n          },\n          {\n            label: 'Total V3 sUSD',\n            value: (\n              <ChangeStat\n                value={v3Balance}\n                newValue={v3Balance.add(amount)}\n                formatFn={(val?: Wei) => currency(val ?? ZEROWEI)}\n                hasChanges\n                size=\"sm\"\n              />\n            ),\n          },\n        ]}\n      />\n\n      <Button mb={-2} width=\"100%\" onClick={onConfirm}>\n        Continue\n      </Button>\n\n      <Button\n        display=\"flex\"\n        alignItems=\"center\"\n        gap={1}\n        variant=\"outline\"\n        colorScheme=\"gray\"\n        width=\"100%\"\n      >\n        Deposit sUSD to Curve\n        <ArrowUpIcon transform=\"rotate(45deg)\" />\n      </Button>\n    </VStack>\n  );\n};\n","import { Button, Text, useToast, VStack } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { ContractError } from '@snx-v3/ContractError';\nimport { Multistep } from '@snx-v3/Multistep';\nimport { useApprove } from '@snx-v3/useApprove';\nimport { Network } from '@snx-v3/useBlockchain';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { useLegacyMarket } from '@snx-v3/useLegacyMarket';\nimport { useMigrateUSD } from '@snx-v3/useMigrateUSD';\nimport { useTokenBalance } from '@snx-v3/useTokenBalance';\nimport { useUSDProxy } from '@snx-v3/useUSDProxy';\nimport { useV2sUSD } from '@snx-v3/useV2sUSD';\nimport { Wei } from '@synthetixio/wei';\nimport { useCallback, useState } from 'react';\nimport { StepSuccess } from './StepSuccess';\n\nexport function MigrateUSDTransaction({\n  onSuccess,\n  amount,\n  network,\n  onBack,\n}: {\n  amount: Wei;\n  network: Network;\n  onSuccess: () => void;\n  onBack: () => void;\n}) {\n  const { data: legacyMarket } = useLegacyMarket();\n\n  const { data: v2_sUSD } = useV2sUSD(network);\n  const { data: v2_balance } = useTokenBalance(v2_sUSD, network);\n  const { data: v3_sUSD } = useUSDProxy(network);\n  const { data: v3_balance } = useTokenBalance(v3_sUSD?.address, network);\n\n  const [infiniteApproval, setInfiniteApproval] = useState(false);\n  const [txState, setTxState] = useState({\n    step: 1,\n    status: 'idle',\n  });\n  const [txSummary, setTxSummary] = useState({\n    amount: ZEROWEI,\n    v2Balance: ZEROWEI,\n    v3Balance: ZEROWEI,\n  });\n\n  const { approve, refetchAllowance, requireApproval } = useApprove({\n    contractAddress: v2_sUSD,\n    amount: amount.toBN(),\n    spender: legacyMarket?.address,\n  });\n\n  const toast = useToast({ isClosable: true, duration: 9000 });\n\n  const { migrate, isSuccess } = useMigrateUSD({\n    amount,\n  });\n\n  const errorParser = useContractErrorParser();\n  const onSubmit = useCallback(async () => {\n    try {\n      if (txState.step > 2) {\n        onSuccess();\n        return;\n      }\n\n      if (txState.step === 1 && requireApproval) {\n        setTxState({\n          step: 1,\n          status: 'pending',\n        });\n\n        await approve(infiniteApproval);\n        refetchAllowance();\n      }\n\n      setTxState({\n        step: 2,\n        status: 'pending',\n      });\n\n      setTxSummary({\n        amount,\n        v2Balance: v2_balance || ZEROWEI,\n        v3Balance: v3_balance || ZEROWEI,\n      });\n      await migrate();\n\n      setTxState({\n        step: 2,\n        status: 'success',\n      });\n\n      toast.closeAll();\n      toast({\n        title: 'Success',\n        description: 'Migration executed.',\n        status: 'success',\n        duration: 5000,\n        variant: 'left-accent',\n      });\n    } catch (error) {\n      const contractError = errorParser(error);\n      if (contractError) {\n        console.error(new Error(contractError.name), contractError);\n      }\n      setTxState((state) => ({\n        step: state.step,\n        status: 'error',\n      }));\n      toast.closeAll();\n      toast({\n        title: 'Migration failed',\n        description: contractError ? (\n          <ContractError contractError={contractError} />\n        ) : (\n          'Please try again.'\n        ),\n        status: 'error',\n        variant: 'left-accent',\n        duration: 3_600_000,\n      });\n    }\n  }, [\n    amount,\n    approve,\n    errorParser,\n    infiniteApproval,\n    migrate,\n    onSuccess,\n    refetchAllowance,\n    requireApproval,\n    toast,\n    txState.step,\n    v2_balance,\n    v3_balance,\n  ]);\n\n  if (isSuccess) {\n    return <StepSuccess {...txSummary} onConfirm={onSuccess} />;\n  }\n\n  return (\n    <VStack spacing={0}>\n      <Multistep\n        width=\"100%\"\n        step={1}\n        title=\"Approve sUSD transfer\"\n        status={{\n          failed: txState.step === 1 && txState.status === 'error',\n          success: txState.step > 1,\n          loading: txState.step === 1 && txState.status === 'pending',\n        }}\n        checkboxLabel=\"Approve unlimited sUSD transfers to Synthetix\"\n        checkboxProps={{\n          isChecked: infiniteApproval,\n          onChange: (e) => setInfiniteApproval(e.target.checked),\n        }}\n        mt={0}\n      />\n\n      <Multistep\n        width=\"100%\"\n        step={2}\n        title=\"Convert sUSD\"\n        mb={4}\n        mt={4}\n        subtitle={\n          <Text>\n            This will convert <Amount value={amount} suffix={` v2 sUSD`} /> to v3 sUSD\n          </Text>\n        }\n        status={{\n          failed: txState.step === 2 && txState.status === 'error',\n          success: txState.step === 2 && txState.status === 'success',\n          loading: txState.step === 2 && txState.status === 'pending',\n        }}\n      />\n\n      <Button isDisabled={txState.status === 'pending'} onClick={onSubmit} width=\"100%\" mb={2}>\n        {(() => {\n          switch (true) {\n            case txState.status === 'error':\n              return 'Retry';\n            case txState.status === 'pending':\n              return 'Processing...';\n            case txState.step === 2 && txState.status === 'success':\n              return 'Done';\n            default:\n              return 'Execute Transaction';\n          }\n        })()}\n      </Button>\n\n      {txState.status !== 'pending' && (\n        <Button variant=\"outline\" colorScheme=\"gray\" width=\"100%\" onClick={onBack}>\n          Back\n        </Button>\n      )}\n    </VStack>\n  );\n}\n","import { Flex, FlexProps } from '@chakra-ui/react';\n\nexport const BorderBox = (props: FlexProps) => (\n  <Flex bg=\"navy.700\" borderWidth=\"1px\" borderColor=\"gray.900\" borderRadius=\"base\" {...props} />\n);\n","import { Input, InputProps } from '@chakra-ui/react';\nimport { ChangeEvent, useCallback, useEffect, useRef, useState } from 'react';\nimport { Wei, wei } from '@synthetixio/wei';\n\nexport interface NumberInputProps extends InputProps {\n  'data-cy'?: string;\n  'data-max'?: string;\n}\n\nexport const NUMBER_REGEX = /^([0-9]*[.])?[0-9]{0,18}$/;\n\nfunction cleanupNumber(value: Wei) {\n  // Cleanup trailing precision zeroes\n  const float = parseFloat(value.toString());\n  if (float === value.toNumber()) {\n    return `${float}`;\n  }\n  return value.toString();\n}\n\nexport function NumberInput({\n  value,\n  onChange,\n  min,\n  max,\n  InputProps,\n  disabled,\n}: {\n  onChange?: (value: Wei) => void;\n  value: Wei;\n  min?: Wei;\n  max?: Wei;\n  InputProps?: NumberInputProps;\n  disabled?: boolean;\n}) {\n  const [inputValue, setInputValue] = useState(value.gt(0) ? value.toString() : '');\n\n  const onInputChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      // Define max length here\n      if (e.target.value.length > 24) return;\n\n      let _value = e.target.value;\n\n      if (!isNaN(Number(e.target.value))) {\n        if (!!min && min.gt(Number(e.target.value))) {\n          _value = min.toNumber().toString();\n        }\n      }\n\n      setInputValue(_value);\n      if (!onChange) {\n        // Could be a read-only input\n        return;\n      }\n      if (!NUMBER_REGEX.test(`${_value}`)) {\n        return;\n      }\n      let nextValue = value;\n      try {\n        nextValue = wei(_value || 0);\n      } catch (_err) {\n        // whatever\n      }\n      if (!value.eq(nextValue)) {\n        onChange(nextValue);\n      }\n    },\n    [min, onChange, value]\n  );\n\n  const ref = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n    if (!NUMBER_REGEX.test(`${inputValue}`)) {\n      ref.current.setCustomValidity('Invalid number');\n      return;\n    }\n    if (value && value.eq(0)) {\n      ref.current.setCustomValidity('Value required');\n      return;\n    }\n    if (min && min.gte(0) && value && value.lt(min)) {\n      ref.current.setCustomValidity(`Value smaller than minimum of ${cleanupNumber(min)}`);\n      return;\n    }\n    if (max && max.gte(0) && value && value.gt(max)) {\n      ref.current.setCustomValidity(`Value greater than maximum of ${cleanupNumber(max)}`);\n      return;\n    }\n    ref.current.setCustomValidity('');\n  }, [inputValue, min, max, value]);\n\n  useEffect(() => {\n    if (value.eq(0)) {\n      return setInputValue('');\n    }\n    return setInputValue(cleanupNumber(value));\n  }, [value]);\n\n  return (\n    <Input\n      ref={ref}\n      flex=\"1\"\n      type=\"number\"\n      step=\"any\"\n      border=\"none\"\n      borderWidth=\"0px\"\n      textAlign=\"end\"\n      p={0}\n      outline=\"none\"\n      fontFamily=\"heading\"\n      fontSize=\"xl\"\n      fontWeight=\"700\"\n      lineHeight=\"2xl\"\n      color=\"white\"\n      height=\"unset\"\n      autoFocus={true}\n      placeholder=\"00.00\"\n      _focus={{ boxShadow: 'none !important' }}\n      _placeholder={{ color: 'whiteAlpha.700' }}\n      _disabled={{ color: 'white' }}\n      value={inputValue}\n      onChange={onInputChange}\n      disabled={disabled}\n      {...InputProps}\n      maxLength={10}\n    />\n  );\n}\n","import {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  Button,\n  Collapse,\n  Flex,\n  Text,\n  VStack,\n} from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { TokenIcon } from '@snx-v3/TokenIcon';\nimport { Network } from '@snx-v3/useBlockchain';\nimport { useTokenBalance } from '@snx-v3/useTokenBalance';\nimport { useUSDProxy } from '@snx-v3/useUSDProxy';\nimport { useV2sUSD } from '@snx-v3/useV2sUSD';\nimport Wei from '@synthetixio/wei';\nimport React, { useEffect, useState } from 'react';\n\nexport const StepIntro = ({\n  onClose,\n  onConfirm,\n  setAmount,\n  amount,\n  network,\n}: {\n  onClose: () => void;\n  onConfirm: () => void;\n  setAmount: (val: Wei) => void;\n  amount: Wei;\n  network: Network;\n}) => {\n  const [loaded, setLoaded] = useState(false);\n  const { data: v2_sUSD } = useV2sUSD(network);\n  const { data: v2_balance } = useTokenBalance(v2_sUSD, network);\n  const { data: v3_sUSD } = useUSDProxy(network);\n  const { data: v3_balance } = useTokenBalance(v3_sUSD?.address, network);\n\n  useEffect(() => {\n    if (v2_balance && amount.eq(0) && !loaded) {\n      setAmount(v2_balance);\n      setLoaded(true);\n    }\n  }, [amount, loaded, setAmount, v2_balance]);\n\n  return (\n    <VStack gap={2.5}>\n      <Text width=\"100%\" textAlign=\"left\" fontSize=\"14px\">\n        Convert your sUSD on Ethereum Mainnet to V3 compatible sUSD. You will need V3 compatible\n        sUSD to interact with the new Synthetix products.\n      </Text>\n\n      <BorderBox width=\"100%\" display=\"flex\" flexDirection=\"column\" p={3}>\n        <Flex alignItems=\"center\">\n          <Flex flexDir=\"column\" gap=\"1\">\n            <Flex flexDir=\"column\" gap=\"1\">\n              <BorderBox\n                display=\"flex\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                py={1.5}\n                px={2.5}\n                width=\"fit-content\"\n              >\n                <Text display=\"flex\" gap={2} alignItems=\"center\" fontWeight=\"600\">\n                  <TokenIcon symbol=\"susd\" width={16} height={16} />\n                  V2 sUSD\n                </Text>\n              </BorderBox>\n              <Flex fontSize=\"xs\" color=\"whiteAlpha.700\" gap=\"1\">\n                <Amount prefix=\"Balance: \" value={v2_balance} />\n                <Text\n                  as=\"span\"\n                  cursor=\"pointer\"\n                  onClick={() => {\n                    if (!v2_balance) {\n                      return;\n                    }\n                    setAmount(v2_balance);\n                  }}\n                  color={v2_balance?.eq(amount) ? 'gray.600' : 'cyan.500'}\n                  fontWeight={700}\n                >\n                  &nbsp;Max\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n          <Flex flexDir=\"column\" flexGrow={1}>\n            <NumberInput\n              InputProps={{\n                isRequired: true,\n                'data-max': v2_balance?.toString(),\n                type: 'number',\n                min: 0,\n              }}\n              value={amount}\n              onChange={(val) => setAmount(val)}\n              min={ZEROWEI}\n            />\n          </Flex>\n        </Flex>\n      </BorderBox>\n\n      <BorderBox width=\"100%\" display=\"flex\" flexDirection=\"column\" p={3}>\n        <Flex alignItems=\"center\">\n          <Flex flexDir=\"column\" gap=\"1\">\n            <BorderBox\n              display=\"flex\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              py={1.5}\n              px={2.5}\n              width=\"fit-content\"\n            >\n              <Text display=\"flex\" gap={2} alignItems=\"center\" fontWeight=\"600\">\n                <TokenIcon symbol=\"susd\" width={16} height={16} />\n                V3 sUSD\n              </Text>\n            </BorderBox>\n            <Flex fontSize=\"xs\" color=\"whiteAlpha.700\" gap=\"1\">\n              Balance: <Amount value={v3_balance} />\n            </Flex>\n          </Flex>\n          <Flex flexDir=\"column\" flexGrow={1}>\n            <NumberInput disabled value={amount} />\n          </Flex>\n        </Flex>\n      </BorderBox>\n\n      <Collapse in={v2_balance?.lt(amount)} animateOpacity unmountOnExit>\n        <Alert borderRadius=\"6px\" status=\"error\">\n          <AlertIcon />\n          <AlertDescription>You cannot convert more than your v2 sUSD balance</AlertDescription>\n        </Alert>\n      </Collapse>\n\n      <Button\n        isDisabled={v2_balance?.lt(amount) || amount.lte(0)}\n        mt={3}\n        width=\"100%\"\n        onClick={onConfirm}\n      >\n        Convert\n      </Button>\n      <Button variant=\"outline\" colorScheme=\"gray\" onClick={onClose} width=\"100%\">\n        Later\n      </Button>\n    </VStack>\n  );\n};\n","import {\n  CloseButton,\n  Divider,\n  Flex,\n  Heading,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalOverlay,\n} from '@chakra-ui/react';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { Network } from '@snx-v3/useBlockchain';\nimport { useParams } from '@snx-v3/useParams';\nimport React from 'react';\nimport { StepSuccessFinal } from '../Migration/StepSuccessFinal';\nimport { MigrateUSDTransaction } from './MigrateUSDTransaction';\nimport { StepIntro } from './StepIntro';\nimport { type HomePageSchemaType } from '@snx-v3/useParams';\n\nexport function MigrateUSDModal({\n  onClose,\n  isOpen,\n  network,\n  type,\n  accountId,\n}: {\n  onClose: () => void;\n  isOpen: boolean;\n  network: Network;\n  type: 'migration' | 'convert';\n  accountId?: string;\n}) {\n  const [_params, setParams] = useParams<HomePageSchemaType>();\n\n  const [step, setStep] = React.useState(0);\n  const [amount, setAmount] = React.useState(ZEROWEI);\n\n  React.useEffect(() => {\n    if (!isOpen) {\n      setStep(0);\n      setAmount(ZEROWEI);\n    }\n  }, [isOpen]);\n\n  return (\n    <Modal size=\"lg\" isOpen={isOpen} onClose={onClose} closeOnOverlayClick={false}>\n      <ModalOverlay />\n      <ModalContent mt=\"100px\" borderWidth=\"1px\" borderColor=\"gray.900\" bg=\"navy.900\" color=\"white\">\n        <Flex justifyContent=\"space-between\" p={6} alignItems=\"center\">\n          <Heading fontSize=\"20px\">\n            {step === 2 ? 'Migration successful' : 'Convert your sUSD to V3 on Mainnet'}\n          </Heading>\n          <CloseButton onClick={onClose} color=\"gray\" />\n        </Flex>\n        <Flex width=\"100%\" px={6}>\n          <Divider colorScheme=\"gray\" />\n        </Flex>\n        <ModalBody p={6} pt={2}>\n          {isOpen && (\n            <>\n              {step === 0 && (\n                <StepIntro\n                  amount={amount}\n                  setAmount={setAmount}\n                  onClose={onClose}\n                  onConfirm={() => setStep(1)}\n                  network={network}\n                />\n              )}\n              {step === 1 && (\n                <MigrateUSDTransaction\n                  network={network}\n                  onSuccess={() => {\n                    if (type === 'migration') {\n                      setStep(2);\n                    } else {\n                      onClose();\n                    }\n                  }}\n                  onBack={() => setStep(0)}\n                  amount={amount}\n                />\n              )}\n              {step === 2 && (\n                <StepSuccessFinal\n                  network={network}\n                  onConfirm={() => {\n                    setParams({ accountId });\n                    onClose();\n                  }}\n                />\n              )}\n            </>\n          )}\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import { Button } from '@chakra-ui/react';\nimport { TokenIcon } from '@snx-v3/TokenIcon';\nimport { Network, useNetwork, useWallet } from '@snx-v3/useBlockchain';\nimport { type HomePageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useEffect, useState } from 'react';\nimport { MigrateUSDModal } from './MigrateUSDModal';\n\nexport function MigrateUSDButton({ network }: { network: Network }) {\n  const [params] = useParams<HomePageSchemaType>();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const { network: currentNetwork } = useNetwork();\n  const { activeWallet } = useWallet();\n\n  useEffect(() => {\n    if (params.convert?.toLowerCase() === 'snxusd') {\n      setIsOpen(true);\n    }\n  }, [params.convert]);\n\n  if (!activeWallet || currentNetwork?.id !== network.id) {\n    return null;\n  }\n\n  return (\n    <>\n      <MigrateUSDModal\n        type=\"convert\"\n        network={network}\n        onClose={() => setIsOpen(false)}\n        isOpen={isOpen}\n      />\n      <Button\n        variant=\"outline\"\n        colorScheme=\"gray\"\n        px={3}\n        gap={2}\n        display=\"flex\"\n        alignItems=\"center\"\n        fontSize=\"14px\"\n        onClick={() => setIsOpen(true)}\n      >\n        <TokenIcon width={24} height={24} symbol=\"susd\" />\n        Convert sUSD\n      </Button>\n    </>\n  );\n}\n","export async function importAccountProxy(\n  chainId?: number,\n  preset?: string\n): Promise<{ address: string; abi: string[] }> {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/meta.json'),\n        import('@synthetixio/v3-contracts/1-main/AccountProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.AccountProxy, abi };\n    }\n    case '11155111-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/meta.json'),\n        import('@synthetixio/v3-contracts/11155111-main/AccountProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.AccountProxy, abi };\n    }\n    case '10-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/meta.json'),\n        import('@synthetixio/v3-contracts/10-main/AccountProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.AccountProxy, abi };\n    }\n    case '8453-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/8453-andromeda/AccountProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.AccountProxy, abi };\n    }\n    case '84532-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/84532-andromeda/AccountProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.AccountProxy, abi };\n    }\n    case '42161-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/meta.json'),\n        import('@synthetixio/v3-contracts/42161-main/AccountProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.AccountProxy, abi };\n    }\n    case '421614-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/meta.json'),\n        import('@synthetixio/v3-contracts/421614-main/AccountProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.AccountProxy, abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for AccountProxy`);\n    }\n  }\n}\n","import { importAccountProxy } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useAccountProxy(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'AccountProxy'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw new Error('OMFG');\n      return importAccountProxy(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","export async function importTrustedMulticallForwarder(\n  chainId?: number,\n  preset?: string\n): Promise<{ address: string; abi: string[] }> {\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/meta.json'),\n        import('@synthetixio/v3-contracts/1-main/TrustedMulticallForwarder.readable.json'),\n      ]);\n      return { address: meta.contracts.TrustedMulticallForwarder, abi };\n    }\n    case '11155111-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/meta.json'),\n        import('@synthetixio/v3-contracts/11155111-main/TrustedMulticallForwarder.readable.json'),\n      ]);\n      return { address: meta.contracts.TrustedMulticallForwarder, abi };\n    }\n    case '10-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/meta.json'),\n        import('@synthetixio/v3-contracts/10-main/TrustedMulticallForwarder.readable.json'),\n      ]);\n      return { address: meta.contracts.TrustedMulticallForwarder, abi };\n    }\n    case '8453-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/8453-andromeda/TrustedMulticallForwarder.readable.json'),\n      ]);\n      return { address: meta.contracts.TrustedMulticallForwarder, abi };\n    }\n    case '84532-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/84532-andromeda/TrustedMulticallForwarder.readable.json'),\n      ]);\n      return { address: meta.contracts.TrustedMulticallForwarder, abi };\n    }\n    case '42161-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/meta.json'),\n        import('@synthetixio/v3-contracts/42161-main/TrustedMulticallForwarder.readable.json'),\n      ]);\n      return { address: meta.contracts.TrustedMulticallForwarder, abi };\n    }\n    case '421614-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/meta.json'),\n        import('@synthetixio/v3-contracts/421614-main/TrustedMulticallForwarder.readable.json'),\n      ]);\n      return { address: meta.contracts.TrustedMulticallForwarder, abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for Multicall3`);\n    }\n  }\n}\n","import { importTrustedMulticallForwarder } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useTrustedMulticallForwarder(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'Multicall3'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw new Error('OMFG');\n      return importTrustedMulticallForwarder(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","import { contractsHash } from '@snx-v3/tsHelpers';\nimport { useAccountProxy } from '@snx-v3/useAccountProxy';\nimport { useNetwork, useProvider, useWallet } from '@snx-v3/useBlockchain';\nimport { useTrustedMulticallForwarder } from '@snx-v3/useTrustedMulticallForwarder';\nimport { useQuery } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\n\nconst log = debug('snx:useAccounts');\n\nexport function useAccounts() {\n  const { activeWallet } = useWallet();\n  const { network } = useNetwork();\n  const provider = useProvider();\n  const { data: AccountProxy } = useAccountProxy();\n  const { data: Multicall3 } = useTrustedMulticallForwarder();\n  const walletAddress = activeWallet?.address;\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'Accounts',\n      { walletAddress },\n      { contractsHash: contractsHash([AccountProxy, Multicall3]) },\n    ],\n    enabled: Boolean(provider && walletAddress && AccountProxy && Multicall3),\n    queryFn: async function (): Promise<ethers.BigNumber[]> {\n      if (!(provider && walletAddress && AccountProxy && Multicall3)) throw 'OMFG';\n\n      const AccountProxyContract = new ethers.Contract(\n        AccountProxy.address,\n        AccountProxy.abi,\n        provider\n      );\n      const Multicall3Contract = new ethers.Contract(Multicall3.address, Multicall3.abi, provider);\n\n      log('walletAddress', walletAddress);\n      const numberOfAccountTokens = await AccountProxyContract.balanceOf(walletAddress);\n      log('numberOfAccountTokens', numberOfAccountTokens);\n\n      if (numberOfAccountTokens.eq(0)) {\n        // No accounts created yet\n        return [];\n      }\n      const accountIndexes: number[] = Array.from(Array(numberOfAccountTokens.toNumber()).keys());\n      log('accountIndexes', accountIndexes);\n\n      const calls = accountIndexes.map((index) => ({\n        target: AccountProxy.address,\n        callData: AccountProxyContract.interface.encodeFunctionData('tokenOfOwnerByIndex', [\n          walletAddress,\n          index,\n        ]),\n      }));\n\n      const multicallResponse = await Multicall3Contract.callStatic.aggregate3(calls);\n      log('multicallResponse', multicallResponse);\n\n      const accounts = accountIndexes.map((index) => {\n        const { returnData } = multicallResponse[index];\n        const [tokenOfOwnerByIndex] = AccountProxyContract.interface.decodeFunctionResult(\n          'tokenOfOwnerByIndex',\n          returnData\n        );\n        return tokenOfOwnerByIndex;\n      });\n      log('accounts', accounts);\n\n      return accounts;\n    },\n  });\n}\n","export async function importCoreProxy(\n  chainId?: number,\n  preset?: string\n): Promise<{ address: string; abi: string[] }> {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/meta.json'),\n        import('@synthetixio/v3-contracts/1-main/CoreProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.CoreProxy, abi };\n    }\n    case '11155111-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/meta.json'),\n        import('@synthetixio/v3-contracts/11155111-main/CoreProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.CoreProxy, abi };\n    }\n    case '10-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/meta.json'),\n        import('@synthetixio/v3-contracts/10-main/CoreProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.CoreProxy, abi };\n    }\n    case '8453-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/8453-andromeda/CoreProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.CoreProxy, abi };\n    }\n    case '84532-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/84532-andromeda/CoreProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.CoreProxy, abi };\n    }\n    case '42161-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/meta.json'),\n        import('@synthetixio/v3-contracts/42161-main/CoreProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.CoreProxy, abi };\n    }\n    case '421614-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/meta.json'),\n        import('@synthetixio/v3-contracts/421614-main/CoreProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.CoreProxy, abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for CoreProxy`);\n    }\n  }\n}\n","import { importCoreProxy } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useCoreProxy(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'CoreProxy'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw 'OMFG';\n      return importCoreProxy(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","import { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\n\nconst log = debug('snx:useCreateAccount');\n\nexport function useCreateAccount() {\n  const { data: CoreProxy } = useCoreProxy();\n  const signer = useSigner();\n  const { network } = useNetwork();\n  const provider = useProvider();\n\n  const queryClient = useQueryClient();\n  return {\n    enabled: Boolean(network && CoreProxy),\n    mutation: useMutation({\n      mutationFn: async function () {\n        if (!(CoreProxy && signer && provider)) throw 'OMFG';\n\n        const CoreProxyContract = new ethers.Contract(CoreProxy.address, CoreProxy.abi, signer);\n        const txn = await CoreProxyContract['createAccount()']();\n        log('txn', txn);\n        const receipt = await provider.waitForTransaction(txn.hash);\n        log('receipt', receipt);\n\n        let newAccountId;\n\n        receipt.logs.forEach((txLog) => {\n          if (txLog.topics[0] === CoreProxyContract.interface.getEventTopic('AccountCreated')) {\n            const [accountId] = CoreProxyContract.interface.decodeEventLog(\n              'AccountCreated',\n              txLog.data,\n              txLog.topics\n            );\n            newAccountId = accountId;\n          }\n        });\n        log('newAccountId', newAccountId);\n\n        if (newAccountId) {\n          return newAccountId;\n        } else {\n          throw new Error('Could not find new account id');\n        }\n      },\n\n      onSuccess: async () => {\n        const deployment = `${network?.id}-${network?.preset}`;\n        await Promise.all(\n          [\n            //\n            'Accounts',\n          ].map((key) => queryClient.invalidateQueries({ queryKey: [deployment, key] }))\n        );\n      },\n    }),\n  };\n}\n","import { useState } from 'react';\n\nexport const set = (key: string, value: any) => {\n  if (typeof window !== 'undefined') {\n    window.localStorage.setItem(key, JSON.stringify(value));\n  }\n};\n\nexport function get<T>(key: string): T | null {\n  if (typeof window !== 'undefined') {\n    const item = window.localStorage.getItem(key);\n    try {\n      if (item != null) {\n        return JSON.parse(item);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  return null;\n}\n\nexport function useLocalStorage<T>(key: string, initialValue: T) {\n  const [storedValue, setStoredValue] = useState<T>(() => {\n    const item = get<T>(key);\n    return item != null ? item : initialValue;\n  });\n\n  const setValue = (value: T) => {\n    const valueToStore = value instanceof Function ? value(storedValue) : value;\n    setStoredValue(valueToStore);\n    set(key, valueToStore);\n  };\n\n  return [storedValue, setValue] as const;\n}\n","import { CopyIcon, SettingsIcon } from '@chakra-ui/icons';\nimport {\n  Badge,\n  Button,\n  Divider,\n  Flex,\n  IconButton,\n  Link,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  MenuOptionGroup,\n  Switch,\n  Text,\n} from '@chakra-ui/react';\nimport { LOCAL_STORAGE_KEYS } from '@snx-v3/constants';\nimport { prettyString, renderAccountId } from '@snx-v3/format';\nimport { WalletIcon } from '@snx-v3/icons';\nimport { Tooltip } from '@snx-v3/Tooltip';\nimport { useAccounts } from '@snx-v3/useAccounts';\nimport { NetworkIcon, NETWORKS, useNetwork, useWallet } from '@snx-v3/useBlockchain';\nimport { useCreateAccount } from '@snx-v3/useCreateAccount';\nimport { useLocalStorage } from '@snx-v3/useLocalStorage';\nimport { makeSearch, useParams } from '@snx-v3/useParams';\nimport { ethers } from 'ethers';\nimport React from 'react';\n\nconst mainnets = NETWORKS.filter(({ isSupported, isTestnet }) => isSupported && !isTestnet);\nconst testnets = NETWORKS.filter(({ isSupported, isTestnet }) => isSupported && isTestnet);\n\nexport function NetworkController() {\n  const [params, setParams] = useParams();\n\n  const [toolTipLabel, setTooltipLabel] = React.useState('Copy');\n  const { activeWallet, walletsInfo, connect, disconnect } = useWallet();\n  const { network: activeNetwork, setNetwork } = useNetwork();\n  const { data: accounts, isPending: isPendingAccounts } = useAccounts();\n  const createAccount = useCreateAccount();\n  const [showTestnets, setShowTestnets] = useLocalStorage(LOCAL_STORAGE_KEYS.SHOW_TESTNETS, false);\n\n  const paramsAccountId = React.useMemo(() => {\n    try {\n      if (params.accountId && params.accountId.length > 0) {\n        return ethers.BigNumber.from(params.accountId);\n      }\n    } catch {\n      // malformed account id in url\n    }\n  }, [params.accountId]);\n\n  React.useEffect(() => {\n    if (!isPendingAccounts && accounts) {\n      if (accounts.length > 0 && !params.accountId) {\n        setParams({ ...params, accountId: accounts[0].toString() });\n        return;\n      }\n      if (\n        accounts.length > 0 &&\n        paramsAccountId &&\n        !accounts.some((account) => account.eq(paramsAccountId))\n      ) {\n        setParams({ ...params, accountId: accounts[0].toString() });\n        return;\n      }\n      if (!accounts.length) {\n        const { accountId: _, ...newParams } = params;\n        setParams(newParams);\n        return;\n      }\n    }\n  }, [accounts, isPendingAccounts, params, paramsAccountId, setParams]);\n\n  React.useEffect(() => {\n    if (window.$magicWallet) {\n      connect({ autoSelect: { disableModals: true, label: 'MetaMask' } });\n    }\n  }, [connect]);\n\n  const notConnected = !activeWallet;\n  const notSupported = activeWallet && !activeNetwork;\n\n  if (!activeWallet) {\n    return (\n      <Button\n        data-cy=\"connect wallet button\"\n        onClick={() => connect()}\n        type=\"button\"\n        size=\"sm\"\n        ml={2}\n        py={5}\n      >\n        Connect Wallet\n      </Button>\n    );\n  }\n  return (\n    <Flex>\n      {activeNetwork ? (\n        <Menu>\n          <MenuButton\n            as={Button}\n            variant=\"outline\"\n            colorScheme=\"gray\"\n            sx={{ '> span': { display: 'flex', alignItems: 'center' } }}\n            mr={1}\n            px={3}\n          >\n            <NetworkIcon\n              filter={activeNetwork.isTestnet ? 'grayscale(1)' : ''}\n              networkId={notConnected ? 8453 : notSupported ? 0 : activeNetwork.id}\n            />\n            <Text variant=\"nav\" ml={2} display={{ base: 'none', md: 'inline-block' }}>\n              {activeNetwork.label}\n            </Text>\n          </MenuButton>\n          <MenuList border=\"1px\" borderColor=\"gray.900\">\n            {mainnets.map(({ id, preset, label }) => (\n              <MenuItem\n                key={`${id}-${preset}`}\n                onClick={() => setNetwork(id)}\n                isDisabled={window.$chainId ? window.$chainId !== id : false}\n              >\n                <NetworkIcon networkId={id} size=\"20px\" />\n                <Text variant=\"nav\" ml={2}>\n                  {label}\n                </Text>\n              </MenuItem>\n            ))}\n\n            {showTestnets && <Divider color=\"gray.900\" />}\n\n            <MenuOptionGroup>\n              <Flex py={4} px={3} alignItems=\"center\" justifyContent=\"space-between\">\n                <Text fontSize=\"14px\" fontFamily=\"heading\" lineHeight=\"20px\">\n                  Show Testnets\n                </Text>\n                <Switch\n                  mr={2}\n                  size=\"sm\"\n                  color=\"gray.900\"\n                  colorScheme=\"gray\"\n                  isChecked={showTestnets}\n                  onChange={() => setShowTestnets(!showTestnets)}\n                />\n              </Flex>\n            </MenuOptionGroup>\n\n            {(showTestnets ? testnets : []).map(({ id, preset, label }) => (\n              <MenuItem\n                key={`${id}-${preset}`}\n                onClick={() => setNetwork(id)}\n                isDisabled={window.$chainId ? window.$chainId !== id : false}\n              >\n                <NetworkIcon filter=\"grayscale(1)\" networkId={id} size=\"20px\" />\n                <Text variant=\"nav\" ml={2}>\n                  {label}\n                </Text>\n              </MenuItem>\n            ))}\n          </MenuList>\n        </Menu>\n      ) : null}\n      <Menu placement=\"bottom-end\">\n        <MenuButton\n          as={Button}\n          variant=\"outline\"\n          colorScheme=\"gray\"\n          ml={2}\n          height={10}\n          py=\"6px\"\n          px=\"9.5px\"\n          whiteSpace=\"nowrap\"\n          data-cy=\"wallet button\"\n        >\n          <WalletIcon color=\"white\" />\n          <Text\n            as=\"span\"\n            ml={1}\n            color=\"white\"\n            fontWeight={700}\n            fontSize=\"xs\"\n            userSelect=\"none\"\n            data-cy=\"short wallet address\"\n          >\n            {activeWallet.ens?.name || prettyString(activeWallet.address)}\n          </Text>\n        </MenuButton>\n        <MenuList>\n          <Flex\n            border=\"1px solid\"\n            rounded=\"base\"\n            borderColor=\"gray.900\"\n            w=\"370px\"\n            _hover={{ bg: 'navy.700' }}\n            backgroundColor=\"navy.700\"\n            opacity={1}\n            p=\"4\"\n          >\n            <Flex flexDir=\"column\" w=\"100%\" gap=\"2\">\n              <Flex justifyContent=\"space-between\">\n                <Text fontSize=\"14px\" color=\"gray.500\">\n                  Connected with {walletsInfo?.label}\n                </Text>\n                <Button\n                  onClick={() => {\n                    if (walletsInfo) {\n                      disconnect(walletsInfo);\n                    }\n                  }}\n                  size=\"xs\"\n                  variant=\"outline\"\n                  colorScheme=\"gray\"\n                  color=\"white\"\n                >\n                  Disconnect\n                </Button>\n              </Flex>\n              <Flex fontWeight={700} color=\"white\" fontSize=\"16px\" alignItems=\"center\">\n                <Tooltip label={activeWallet.address} fontFamily=\"monospace\" fontSize=\"0.9em\">\n                  <Text>{prettyString(activeWallet.address)}</Text>\n                </Tooltip>\n                <Tooltip label={toolTipLabel} closeOnClick={false}>\n                  <CopyIcon\n                    ml=\"2\"\n                    onClick={() => {\n                      navigator.clipboard.writeText(activeWallet.address);\n                      setTooltipLabel('Copied');\n                      setTimeout(() => {\n                        setTooltipLabel('Copy');\n                      }, 10000);\n                    }}\n                  />\n                </Tooltip>\n              </Flex>\n              <Flex\n                flexDir=\"column\"\n                p=\"2\"\n                border=\"1px solid\"\n                borderColor=\"gray.900\"\n                rounded=\"base\"\n                gap=\"2\"\n              >\n                <Flex w=\"100%\" justifyContent=\"space-between\">\n                  <Text fontWeight={400} fontSize=\"14px\">\n                    Account(s)\n                  </Text>\n                  <Link\n                    href={`?${makeSearch({ page: 'settings', accountId: params.accountId })}`}\n                    onClick={(e) => {\n                      e.preventDefault();\n                      setParams({ page: 'settings', accountId: params.accountId });\n                    }}\n                  >\n                    <IconButton\n                      variant=\"outline\"\n                      colorScheme=\"gray\"\n                      size=\"xs\"\n                      icon={<SettingsIcon />}\n                      aria-label=\"account settings\"\n                    />\n                  </Link>\n                </Flex>\n                <Flex data-cy=\"accounts list\" flexDir=\"column\">\n                  {accounts?.map((accountId) => (\n                    <Text\n                      key={accountId.toString()}\n                      display=\"flex\"\n                      alignItems=\"center\"\n                      color=\"white\"\n                      fontWeight={700}\n                      fontSize=\"16px\"\n                      cursor=\"pointer\"\n                      p=\"3\"\n                      data-cy=\"account id\"\n                      data-account-id={accountId}\n                      _hover={{ bg: 'whiteAlpha.300' }}\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        setParams({ ...params, accountId: accountId.toString() });\n                      }}\n                    >\n                      {renderAccountId(accountId)}\n                      {paramsAccountId && accountId.eq(paramsAccountId) ? (\n                        <Badge ml={2} colorScheme=\"cyan\" variant=\"outline\">\n                          Connected\n                        </Badge>\n                      ) : null}\n                    </Text>\n                  ))}\n                </Flex>\n\n                <Button\n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    createAccount.mutation.mutate();\n                  }}\n                  isDisabled={!createAccount.enabled || createAccount.mutation.isPending}\n                  size=\"xs\"\n                  variant=\"outline\"\n                  colorScheme=\"gray\"\n                  color=\"white\"\n                  leftIcon={\n                    <svg\n                      width=\"8\"\n                      height=\"8\"\n                      viewBox=\"0 0 8 8\"\n                      fill=\"none\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      <path\n                        d=\"M3.5 3.5V0.5H4.5V3.5H7.5V4.5H4.5V7.5H3.5V4.5H0.5V3.5H3.5Z\"\n                        fill=\"white\"\n                      />\n                    </svg>\n                  }\n                  w=\"130px\"\n                  data-cy=\"create new account button\"\n                >\n                  Create Account\n                </Button>\n              </Flex>\n            </Flex>\n          </Flex>\n        </MenuList>\n      </Menu>\n    </Flex>\n  );\n}\n","import { Container, Flex, Link, useDisclosure } from '@chakra-ui/react';\nimport { Logo, LogoIcon } from '@snx-v3/icons';\nimport { MAINNET, SEPOLIA, useNetwork } from '@snx-v3/useBlockchain';\nimport { useEffect } from 'react';\nimport { NavLink as RouterLink, useLocation } from 'react-router-dom';\nimport { MigrateUSDButton } from './components/MigrateUSD/MigrateUSDButton';\nimport { NetworkController } from './NetworkController';\n\nexport default function Header() {\n  const { network } = useNetwork();\n  const { onClose } = useDisclosure();\n  const location = useLocation();\n\n  useEffect(() => {\n    onClose();\n  }, [location, onClose]);\n\n  return (\n    <Flex\n      bg=\"navy.700\"\n      mb=\"4\"\n      py=\"3\"\n      borderBottomWidth=\"1px\"\n      borderBottomColor=\"gray.900\"\n      px={{ base: 1, md: 10 }}\n    >\n      <Container maxW=\"1236px\" as={Flex} justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"row\" justifyContent=\"start\" alignItems=\"center\">\n          <Link mt={-1.5} to=\"/\" as={RouterLink} display={{ base: 'none', md: 'inline-block' }}>\n            <Logo />\n          </Link>\n          <Link mt={-1.5} to=\"/\" as={RouterLink} display={{ md: 'none' }}>\n            <LogoIcon />\n          </Link>\n        </Flex>\n        <Flex gap={3} flexWrap=\"wrap-reverse\" justifyContent=\"center\" alignItems=\"center\">\n          {network && [MAINNET.id, SEPOLIA.id].includes(network.id) ? (\n            <MigrateUSDButton network={network} />\n          ) : null}\n          <NetworkController />\n        </Flex>\n      </Container>\n    </Flex>\n  );\n}\n","import { contractsHash } from '@snx-v3/tsHelpers';\nimport { useAccountProxy } from '@snx-v3/useAccountProxy';\nimport { useNetwork, useProvider } from '@snx-v3/useBlockchain';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useQuery } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\n\nexport function useAccountPermissions(accountId?: ethers.BigNumber) {\n  const { data: CoreProxy } = useCoreProxy();\n  const { network } = useNetwork();\n  const provider = useProvider();\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'AccountPermissions',\n      { accountId },\n      { contractsHash: contractsHash([CoreProxy]) },\n    ],\n    enabled: Boolean(provider && CoreProxy && accountId),\n    queryFn: async function () {\n      if (!(provider && CoreProxy && accountId)) throw 'OMFG';\n      const CoreProxyContract = new ethers.Contract(CoreProxy.address, CoreProxy.abi, provider);\n      const permissions = await CoreProxyContract.getAccountPermissions(accountId);\n      return permissions.reduce(\n        (\n          acc: { [key: string]: string[] },\n          { user, permissions }: { user: string; permissions: string[] }\n        ) => ({\n          ...acc,\n          [user.toLowerCase()]: permissions.map((r: string) => ethers.utils.parseBytes32String(r)),\n        }),\n        {}\n      );\n    },\n  });\n}\n\nexport function useAccountOwner(accountId?: ethers.BigNumber) {\n  const { data: AccountProxy } = useAccountProxy();\n  const { network } = useNetwork();\n  const provider = useProvider();\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'AccountOwner',\n      { accountId },\n      { contractsHash: contractsHash([AccountProxy]) },\n    ],\n    enabled: Boolean(provider && AccountProxy && accountId),\n    queryFn: async function () {\n      if (!(provider && AccountProxy && accountId)) throw 'OMFG';\n      const AccountProxyContract = new ethers.Contract(\n        AccountProxy.address,\n        AccountProxy.abi,\n        provider\n      );\n      return (await AccountProxyContract.ownerOf(accountId)) as string;\n    },\n  });\n}\n","export function etherscanLink({\n  chain,\n  address,\n  isTx = false,\n}: {\n  chain: string;\n  address: string;\n  isTx?: boolean;\n}): string {\n  switch (chain) {\n    case 'sepolia':\n      return `https://sepolia.etherscan.io/${isTx ? 'tx' : 'address'}/${address}`;\n    case 'arbitrum':\n      return `https://arbiscan.io/${isTx ? 'tx' : 'address'}/${address}`;\n    case 'optimism':\n      return `https://optimistic.etherscan.io/${isTx ? 'tx' : 'address'}/${address}`;\n    case 'base':\n      return `https://basescan.org/${isTx ? 'tx' : 'address'}/${address}`;\n    case 'base-sepolia':\n      return `https://sepolia.basescan.org/${isTx ? 'tx' : 'address'}/${address}`;\n    case 'mainnet':\n    default:\n      return `https://etherscan.io/${isTx ? 'tx' : 'address'}/${address}`;\n  }\n}\n\nexport function transactionLink({\n  chainId,\n  txnHash,\n}: {\n  chainId?: number;\n  txnHash?: string | null;\n}) {\n  switch (chainId) {\n    case 1:\n      return `https://etherscan.io/tx/${txnHash}`;\n    case 11155420:\n      return `https://sepolia.etherscan.io/tx/${txnHash}`;\n    case 42161:\n      return `https://arbiscan.io/tx/${txnHash}`;\n    case 421614:\n      return `https://sepolia.arbiscan.io/tx/${txnHash}`;\n    case 10:\n      return `https://optimistic.etherscan.io/tx/${txnHash}`;\n    case 8453:\n      return `https://basescan.org/tx/${txnHash}`;\n    case 84532:\n      return `https://sepolia.basescan.org/tx/${txnHash}`;\n  }\n}\n","import { CopyIcon, ExternalLinkIcon } from '@chakra-ui/icons';\nimport { Flex, Tooltip } from '@chakra-ui/react';\nimport { etherscanLink } from '@snx-v3/etherscanLink';\nimport { prettyString } from '@snx-v3/format';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { FC, useMemo } from 'react';\n\ninterface AddressProps {\n  address: string;\n}\n\nexport const Address: FC<AddressProps> = ({ address }) => {\n  const { network } = useNetwork();\n  const link = useMemo(\n    () =>\n      etherscanLink({\n        chain: network?.name || '',\n        address,\n      }),\n    [address, network?.name]\n  );\n  return (\n    <Flex alignItems=\"center\" gap={2}>\n      <Tooltip label={address}>{prettyString(address)}</Tooltip>\n      <CopyIcon\n        onClick={() => {\n          navigator.clipboard.writeText(address);\n        }}\n        cursor=\"pointer\"\n        _hover={{\n          color: 'cyan',\n        }}\n      />\n      <a target=\"_blank\" href={link} rel=\"noreferrer\">\n        <ExternalLinkIcon\n          _hover={{\n            color: 'cyan',\n          }}\n        />\n      </a>\n    </Flex>\n  );\n};\n","import { useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useTrustedMulticallForwarder } from '@snx-v3/useTrustedMulticallForwarder';\nimport { useMutation } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\n\nconst log = debug('snx:useManagePermissions');\n\ntype Permissions = Array<string>;\nconst getPermissionDiff = (\n  existing: Permissions,\n  selected: Permissions\n): {\n  grants: Permissions;\n  revokes: Permissions;\n} => {\n  let grants: Permissions = [],\n    revokes: Permissions = [];\n  existing.concat(selected).forEach((permission) => {\n    if (!existing.includes(permission)) {\n      grants = [...grants, permission];\n    }\n    if (!selected.includes(permission)) {\n      revokes = [...revokes, permission];\n    }\n  });\n  return { grants, revokes };\n};\n\nexport const useManagePermissions = ({\n  accountId,\n  target,\n  existing = [],\n  selected = [],\n}: {\n  accountId: ethers.BigNumber;\n  target: string;\n  existing: Permissions;\n  selected: Permissions;\n}) => {\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: Multicall3 } = useTrustedMulticallForwarder();\n  const signer = useSigner();\n  const provider = useProvider();\n\n  return useMutation({\n    mutationFn: async () => {\n      if (!(CoreProxy && Multicall3 && signer && provider)) {\n        throw 'OMFG';\n      }\n\n      const { grants, revokes } = getPermissionDiff(existing, selected);\n\n      try {\n        const CoreProxyInterface = new ethers.utils.Interface(CoreProxy.abi);\n\n        const grantCalls = grants.map((permission) => ({\n          target: CoreProxy.address,\n          callData: CoreProxyInterface.encodeFunctionData('grantPermission', [\n            accountId,\n            ethers.utils.formatBytes32String(permission),\n            target,\n          ]),\n          allowFailure: false,\n          requireSuccess: true,\n        }));\n\n        const revokeCalls = revokes.map((permission) => ({\n          target: CoreProxy.address,\n          callData: CoreProxyInterface.encodeFunctionData('revokePermission', [\n            accountId,\n            ethers.utils.formatBytes32String(permission),\n            target,\n          ]),\n          allowFailure: false,\n          requireSuccess: true,\n        }));\n\n        const Multicall3Contract = new ethers.Contract(Multicall3.address, Multicall3.abi, signer);\n        const txn = await Multicall3Contract.aggregate3([...grantCalls, ...revokeCalls]);\n        log('txn', txn);\n        const receipt = await provider.waitForTransaction(txn.hash);\n        log('receipt', receipt);\n      } catch (error: any) {\n        throw error;\n      }\n    },\n  });\n};\n","export const permissionsList = ['ADMIN', 'BURN', 'DELEGATE', 'MINT', 'REWARDS', 'WITHDRAW'];\n","/* eslint-disable react/no-unescaped-entities */\nimport { Text, Tooltip } from '@chakra-ui/react';\nimport { InfoIcon } from '@chakra-ui/icons';\n\nexport function PermissionsInfo() {\n  return (\n    <Tooltip\n      label={\n        <>\n          <Text fontWeight={600} textAlign=\"left\">\n            ADMIN: Full control over the account, except for transferring ownership <br />\n            WITHDRAW: Ability to withdraw collateral from the account\n            <br />\n            REWARDS: Ability to claim rewards on behalf of the account\n            <br />\n            MINT: Ability to mint snxUSD using the account's collateral\n            <br />\n            DELEGATE: Ability to delegate the account's collateral to pools\n          </Text>\n        </>\n      }\n    >\n      <InfoIcon ml={1.5} w=\"10px\" h=\"10px\" />\n    </Tooltip>\n  );\n}\n","import {\n  Badge,\n  Button,\n  Divider,\n  Flex,\n  Input,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Spinner,\n  Text,\n} from '@chakra-ui/react';\nimport { useAccountOwner, useAccountPermissions } from '@snx-v3/useAccountPermissions';\nimport { useManagePermissions } from '@snx-v3/useManagePermissions';\nimport { ethers, utils } from 'ethers';\nimport { useEffect, useMemo, useState } from 'react';\nimport { permissionsList } from './AccountPermissions';\nimport { PermissionsInfo } from './PermissionsInfo';\n\nexport function PermissionModal({\n  accountId,\n  isOpen,\n  onClose,\n  refetch,\n  existingPermissions,\n  target,\n}: {\n  accountId: ethers.BigNumber;\n  target?: string;\n  existingPermissions?: string[];\n  isOpen: boolean;\n  onClose: () => void;\n  refetch: () => void;\n}) {\n  const [address, setAddress] = useState(target || '');\n  const [selectedPermissions, setSelectedPermissions] = useState<string[]>([\n    ...(existingPermissions || []),\n  ]);\n  const { mutateAsync: submit, isPending } = useManagePermissions({\n    target: address,\n    accountId,\n    existing: existingPermissions || [],\n    selected: selectedPermissions,\n  });\n\n  const { data: permissionData } = useAccountPermissions(accountId);\n  const { data: accountOwner } = useAccountOwner(accountId);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setSelectedPermissions([...(existingPermissions || [])]);\n    }\n  }, [existingPermissions, isOpen]);\n\n  const isAddressValid = useMemo(() => {\n    return (\n      utils.isAddress(address) &&\n      accountOwner?.toLowerCase() !== address.toLowerCase() &&\n      (!!target || (permissionData && !permissionData[address.toLowerCase()]))\n    );\n  }, [accountOwner, address, permissionData, target]);\n\n  const isFormValid = useMemo(() => {\n    return selectedPermissions.length > 0 && isAddressValid;\n  }, [isAddressValid, selectedPermissions.length]);\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent py={2} border=\"1px solid\" rounded=\"base\" borderColor=\"gray.900\" bg=\"navy.700\">\n        <ModalHeader>{target ? 'Edit' : 'New'} Permission</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <Divider />\n          <Flex pt={6} flexDir=\"column\" gap=\"5\">\n            {!target && (\n              <>\n                <Text fontWeight={600} fontSize=\"14px\" color=\"white\">\n                  Address\n                </Text>\n                <Input\n                  bg=\"navy.900\"\n                  onChange={(e) => {\n                    setAddress(e.target.value.trim());\n                  }}\n                  value={address}\n                  isInvalid={!isAddressValid && !!address}\n                />\n              </>\n            )}\n            <Text fontWeight={600} color=\"white\" fontSize=\"14px\">\n              Select Permissions <PermissionsInfo />\n            </Text>\n            <Flex justifyContent=\"space-evenly\">\n              {permissionsList.map((permission) => {\n                const isActive = selectedPermissions.includes(permission);\n                return (\n                  <Badge\n                    onClick={() =>\n                      setSelectedPermissions((state) => {\n                        if (state.includes(permission)) {\n                          return state.filter((s) => s !== permission);\n                        }\n                        return [...state, permission];\n                      })\n                    }\n                    variant=\"outline\"\n                    key={permission}\n                    color={isActive ? 'cyan' : 'gray'}\n                    textTransform=\"capitalize\"\n                    cursor=\"pointer\"\n                    bg=\"gray.900\"\n                    colorScheme={isActive ? 'cyan' : 'gray'}\n                  >\n                    {permission}\n                  </Badge>\n                );\n              })}\n            </Flex>\n          </Flex>\n        </ModalBody>\n        <ModalFooter justifyContent=\"center\">\n          {isPending ? (\n            <Spinner color=\"cyan\" />\n          ) : (\n            <Button\n              w=\"100%\"\n              onClick={() => {\n                submit().then(() => {\n                  setAddress('');\n                  setSelectedPermissions([]);\n                  refetch();\n                  onClose();\n                });\n              }}\n              isDisabled={!isFormValid}\n            >\n              {target ? 'Update ' : 'Add new '} permissions\n            </Button>\n          )}\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import { DeleteIcon, EditIcon } from '@chakra-ui/icons';\nimport { Badge, Flex, IconButton, Td, Text, Tr, useDisclosure } from '@chakra-ui/react';\nimport { useManagePermissions } from '@snx-v3/useManagePermissions';\nimport { ethers } from 'ethers';\nimport { useEffect } from 'react';\nimport { Address } from '../Address/Address';\nimport { permissionsList } from './AccountPermissions';\nimport { PermissionModal } from './PermissionModal';\n\nexport function PermissionRow({\n  address,\n  currentPermissions,\n  accountId,\n  refetch,\n  isOwner,\n}: {\n  address: string;\n  currentPermissions: string[];\n  accountId: ethers.BigNumber;\n  refetch: () => void;\n  isOwner: boolean;\n}) {\n  const {\n    isOpen: isPermissionOpen,\n    onClose: onPermissionClose,\n    onOpen: onPermissionOpen,\n  } = useDisclosure();\n\n  const {\n    mutate: removePermissions,\n    isPending,\n    isSuccess,\n  } = useManagePermissions({\n    accountId,\n    target: address,\n    selected: [],\n    existing: currentPermissions,\n  });\n\n  useEffect(() => {\n    if (isSuccess) {\n      refetch();\n      onPermissionClose();\n    }\n  }, [isSuccess, onPermissionClose, refetch]);\n\n  return (\n    <Tr>\n      <Td width={240} borderBottomColor=\"gray.900\" py=\"4\">\n        <Text fontWeight={400} color=\"white\" fontSize=\"16px\">\n          <Address address={address} />\n        </Text>\n      </Td>\n      <Td borderBottomColor=\"gray.900\">\n        <Flex py={2} flexWrap=\"wrap\" gap={3}>\n          {permissionsList.map((permission) => {\n            const isActive = currentPermissions.includes(permission);\n            return (\n              <Badge\n                color={isActive ? 'cyan' : 'gray'}\n                colorScheme={isActive ? 'cyan' : 'gray'}\n                variant=\"outline\"\n                bg={isActive ? 'cyan.900' : 'gray.900'}\n                size=\"sm\"\n                textTransform=\"capitalize\"\n                key={permission.concat('permission-row')}\n              >\n                {permission}\n              </Badge>\n            );\n          })}\n        </Flex>\n      </Td>\n\n      <Td borderBottomColor=\"gray.900\" textAlign=\"end\">\n        {isOwner && (\n          <>\n            <PermissionModal\n              isOpen={isPermissionOpen}\n              onClose={onPermissionClose}\n              accountId={accountId}\n              refetch={refetch}\n              existingPermissions={currentPermissions}\n              target={address}\n            />\n            <IconButton\n              onClick={onPermissionOpen}\n              size=\"sm\"\n              aria-label=\"edit\"\n              variant=\"outline\"\n              colorScheme=\"gray\"\n              icon={<EditIcon />}\n              mr=\"2\"\n            />\n            <IconButton\n              variant=\"outline\"\n              isLoading={isPending}\n              colorScheme=\"gray\"\n              onClick={() => {\n                removePermissions();\n              }}\n              size=\"sm\"\n              aria-label=\"delete\"\n              icon={<DeleteIcon />}\n            />\n          </>\n        )}\n      </Td>\n    </Tr>\n  );\n}\n","import { Skeleton, Td, Text, Tr } from '@chakra-ui/react';\nimport { prettyString } from '@snx-v3/format';\nimport { ethers } from 'ethers';\n\nexport function PermissionTableLoading() {\n  const rows = Array.from({ length: 2 }, (_, i) => i);\n  return (\n    <>\n      {rows.map((row) => {\n        return (\n          <Tr borderBottomWidth={row === 1 ? 'none' : '1px'} key={row}>\n            <Td borderBottomColor=\"gray.900\" py=\"4\" width=\"200px\">\n              <Skeleton>\n                <Text fontWeight={400} color=\"white\" fontSize=\"16px\">\n                  {prettyString(ethers.constants.AddressZero)}{' '}\n                </Text>\n              </Skeleton>\n            </Td>\n            <Td borderBottomColor=\"gray.900\" py=\"4\">\n              <Skeleton>-</Skeleton>\n            </Td>\n            <Td borderBottomColor=\"gray.900\" py=\"4\">\n              <Skeleton>-</Skeleton>\n            </Td>\n          </Tr>\n        );\n      })}\n    </>\n  );\n}\n","import { useAccountProxy } from '@snx-v3/useAccountProxy';\nimport { useProvider, useSigner, useWallet } from '@snx-v3/useBlockchain';\nimport { useMutation } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\n\nconst log = debug('snx:useTransferAccountId');\n\nexport function useTransferAccountId(to: string, accountId: ethers.BigNumber) {\n  const { data: AccountProxy } = useAccountProxy();\n  const { activeWallet } = useWallet();\n  const signer = useSigner();\n  const provider = useProvider();\n  const walletAddress = activeWallet?.address;\n\n  return useMutation({\n    mutationFn: async () => {\n      if (!AccountProxy) throw new Error('AccountProxy not defined');\n      if (!(walletAddress && signer && provider)) throw new Error('Wallet is not connected');\n      const AccountProxyContract = new ethers.Contract(\n        AccountProxy.address,\n        AccountProxy.abi,\n        signer\n      );\n      const txn = await AccountProxyContract.transferFrom(walletAddress, to, accountId);\n      log('txn', txn);\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n      return receipt;\n    },\n  });\n}\n","import {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  Button,\n  Divider,\n  Flex,\n  Input,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Spinner,\n  Text,\n} from '@chakra-ui/react';\nimport { renderAccountId } from '@snx-v3/format';\nimport { useTransferAccountId } from '@snx-v3/useTransferAccountId';\nimport { ethers } from 'ethers';\nimport { useMemo, useState } from 'react';\n\nexport function TransferOwnershipModal({\n  isOpen,\n  onClose,\n  accountId,\n  refetch,\n  owner,\n}: {\n  isOpen: boolean;\n  onClose: () => void;\n  accountId: ethers.BigNumber;\n  owner: string;\n  refetch: () => void;\n}) {\n  const [to, setTo] = useState('');\n  const { isPending, mutateAsync: submit } = useTransferAccountId(to, accountId);\n\n  const isTargetValid = useMemo(\n    () => ethers.utils.isAddress(to) && to.toLowerCase() !== owner.toLowerCase(),\n    [owner, to]\n  );\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent pb={1} border=\"1px solid\" rounded=\"base\" borderColor=\"gray.900\" bg=\"navy.700\">\n        <ModalHeader>Transfer Ownership</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <Divider />\n          <Text fontSize=\"18px\" fontWeight={700} mt=\"4\">\n            Account {renderAccountId(accountId)}\n          </Text>\n          <Text fontSize=\"14px\" color=\"white\" mt=\"2\">\n            Will be transferred from:\n          </Text>\n          <Input mt=\"2\" bg=\"navy.900\" disabled value={owner} />\n          <Text fontSize=\"14px\" color=\"white\" mt=\"2\">\n            Will be transferred to:\n          </Text>\n          <Input\n            mt=\"2\"\n            bg=\"navy.900\"\n            onChange={(e) => {\n              setTo(e.target.value.trim());\n            }}\n            value={to}\n          />\n        </ModalBody>\n        <ModalFooter display=\"flex\" flexDirection=\"column\" gap={4} justifyContent=\"center\">\n          <Alert status=\"warning\" borderRadius=\"6px\">\n            <AlertIcon />\n            <Flex direction=\"column\">\n              <AlertDescription>This action cannot be undone</AlertDescription>\n            </Flex>\n          </Alert>\n\n          {isPending ? (\n            <Spinner color=\"cyan\" />\n          ) : (\n            <Button\n              w=\"100%\"\n              onClick={() =>\n                submit().then(() => {\n                  setTo('');\n                  refetch();\n                  onClose();\n                })\n              }\n              isDisabled={!isTargetValid}\n            >\n              Confirm\n            </Button>\n          )}\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n","/* eslint-disable react/no-unescaped-entities */\nimport {\n  Badge,\n  Button,\n  Flex,\n  Heading,\n  Skeleton,\n  Table,\n  TableContainer,\n  Tbody,\n  Td,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useDisclosure,\n} from '@chakra-ui/react';\nimport { renderAccountId } from '@snx-v3/format';\nimport { useAccountOwner, useAccountPermissions } from '@snx-v3/useAccountPermissions';\nimport { useWallet } from '@snx-v3/useBlockchain';\nimport { useMemo } from 'react';\nimport { Address } from '../Address/Address';\nimport { PermissionModal } from './PermissionModal';\nimport { PermissionRow } from './PermissionRow';\nimport { PermissionsInfo } from './PermissionsInfo';\nimport { PermissionTableLoading } from './PermissionTableLoading';\nimport { TransferOwnershipModal } from './TransferOwnershipModal';\nimport { ethers } from 'ethers';\n\nexport function PermissionTable({\n  accountId,\n  refetchAccounts,\n}: {\n  accountId: ethers.BigNumber;\n  refetchAccounts: () => void;\n}) {\n  const {\n    isOpen: isPermissionOpen,\n    onClose: onPermissionClose,\n    onOpen: onPermissionOpen,\n  } = useDisclosure();\n  const {\n    isOpen: isTransferOpen,\n    onClose: onTransferClose,\n    onOpen: onTransferOpen,\n  } = useDisclosure();\n\n  const { activeWallet } = useWallet();\n  const { data: permissions, isLoading, refetch } = useAccountPermissions(accountId);\n  const {\n    data: accountOwner,\n    isLoading: loadingOwner,\n    refetch: refetchAccountOwner,\n  } = useAccountOwner(accountId);\n\n  const isOwner = useMemo(\n    () => !!(accountOwner && accountOwner?.toLowerCase() === activeWallet?.address.toLowerCase()),\n    [accountOwner, activeWallet?.address]\n  );\n  return (\n    <>\n      <TableContainer\n        flexGrow=\"2\"\n        borderColor=\"gray.900\"\n        borderWidth=\"1px\"\n        borderRadius=\"5px\"\n        p={6}\n        sx={{\n          borderCollapse: 'separate',\n          borderSpacing: 0,\n        }}\n        bg=\"navy.700\"\n      >\n        <Flex mb=\"2\" w=\"100%\" justifyContent=\"space-between\">\n          <Heading size=\"md\" mb=\"1\">\n            Account {renderAccountId(accountId)}\n          </Heading>\n          {isOwner && (\n            <Button\n              size=\"xs\"\n              onClick={() => {\n                onPermissionOpen();\n              }}\n            >\n              + New Permission\n            </Button>\n          )}\n        </Flex>\n        <Table variant=\"simple\">\n          <Thead>\n            <Tr>\n              <Th\n                py={5}\n                textTransform=\"unset\"\n                color=\"gray.600\"\n                fontFamily=\"heading\"\n                fontSize=\"12px\"\n                lineHeight=\"16px\"\n                borderBottomColor=\"gray.900\"\n              >\n                Address\n              </Th>\n              <Th\n                py={5}\n                textTransform=\"unset\"\n                color=\"gray.600\"\n                fontFamily=\"heading\"\n                fontSize=\"12px\"\n                lineHeight=\"16px\"\n                borderBottomColor=\"gray.900\"\n              >\n                Permissions\n                <PermissionsInfo />\n              </Th>\n              <Th\n                py={5}\n                textTransform=\"unset\"\n                color=\"gray.600\"\n                fontFamily=\"heading\"\n                fontSize=\"12px\"\n                lineHeight=\"16px\"\n                borderBottomColor=\"gray.900\"\n              ></Th>\n            </Tr>\n          </Thead>\n\n          <Tbody>\n            <Tr>\n              <Td width={240} py={5} borderBottomColor=\"gray.900\">\n                <Skeleton isLoaded={!loadingOwner}>\n                  {accountOwner && (\n                    <Text fontWeight={400} color=\"white\" fontSize=\"16px\">\n                      <Address address={accountOwner} />\n                    </Text>\n                  )}\n                </Skeleton>\n              </Td>\n              <Td py={5} borderBottomColor=\"gray.900\">\n                <Badge\n                  color=\"cyan\"\n                  variant=\"outline\"\n                  bg=\"cyan.900\"\n                  size=\"sm\"\n                  textTransform=\"capitalize\"\n                >\n                  OWNER\n                </Badge>\n              </Td>\n              <Td py={5} borderBottomColor=\"gray.900\" textAlign=\"end\">\n                {isOwner && (\n                  <Button\n                    size=\"xs\"\n                    variant=\"outline\"\n                    colorScheme=\"gray\"\n                    color=\"white\"\n                    onClick={() => {\n                      onTransferOpen();\n                    }}\n                  >\n                    Transfer Ownership\n                  </Button>\n                )}\n              </Td>\n            </Tr>\n\n            {isLoading && <PermissionTableLoading />}\n\n            {!isLoading &&\n              permissions &&\n              Object.keys(permissions)\n                .filter((target) => permissions[target]?.length > 0)\n                .map((target) => (\n                  <PermissionRow\n                    key={target}\n                    address={target}\n                    currentPermissions={permissions[target]}\n                    accountId={accountId}\n                    refetch={refetch}\n                    isOwner={isOwner}\n                  />\n                ))}\n          </Tbody>\n        </Table>\n      </TableContainer>\n\n      <PermissionModal\n        isOpen={isPermissionOpen}\n        onClose={onPermissionClose}\n        accountId={accountId}\n        refetch={refetch}\n      />\n      {accountOwner ? (\n        <TransferOwnershipModal\n          isOpen={isTransferOpen}\n          onClose={onTransferClose}\n          accountId={accountId}\n          owner={accountOwner}\n          refetch={() => {\n            refetch();\n            refetchAccountOwner();\n            refetchAccounts();\n          }}\n        />\n      ) : null}\n    </>\n  );\n}\n","export const DelegationIcon = () => {\n  return (\n    <svg width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M29.3662 7.14593C29.8933 6.89158 30.5156 6.97433 30.9627 7.35822L42.9627 17.6613C43.3047 17.9549 43.5024 18.3898 43.5024 18.8485C43.5024 19.3072 43.3047 19.7421 42.9627 20.0358L30.9627 30.3388C30.5156 30.7227 29.8933 30.8054 29.3662 30.5511C28.8391 30.2967 28.5024 29.7512 28.5024 29.1515V25.5455H18.0024C17.174 25.5455 16.5024 24.8536 16.5024 24C16.5024 23.1465 17.174 22.4546 18.0024 22.4546H30.0024C30.8309 22.4546 31.5024 23.1465 31.5024 24V25.8519L39.6594 18.8485L31.5024 11.8451V13.697C31.5024 14.5505 30.8309 15.2424 30.0024 15.2424H18.0024C17.174 15.2424 16.5024 14.5505 16.5024 13.697C16.5024 12.8435 17.174 12.1515 18.0024 12.1515H28.5024V8.54547C28.5024 7.94581 28.8391 7.40028 29.3662 7.14593Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M18.6362 40.8541C18.1092 41.1084 17.4868 41.0257 17.0397 40.6418L5.03972 30.3387C4.69774 30.0451 4.5 29.6102 4.5 29.1515C4.5 28.6928 4.69774 28.2579 5.03972 27.9642L17.0397 17.6612C17.4869 17.2773 18.1092 17.1946 18.6362 17.4489C19.1633 17.7033 19.5 18.2488 19.5 18.8485L19.5 22.4545L30 22.4545C30.8284 22.4545 31.5 23.1464 31.5 24C31.5 24.8535 30.8284 25.5454 30 25.5454L18 25.5454C17.1716 25.5454 16.5 24.8535 16.5 24L16.5 22.1481L8.34308 29.1515L16.5 36.1549L16.5 34.303C16.5 33.4495 17.1716 32.7576 18 32.7576L30 32.7576C30.8284 32.7576 31.5 33.4495 31.5 34.303C31.5 35.1565 30.8284 35.8485 30 35.8485L19.5 35.8485L19.5 39.4545C19.5 40.0542 19.1633 40.5997 18.6362 40.8541Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M9.3584 13.6973C9.3584 12.8438 10.03 12.1519 10.8584 12.1519H12.5727C13.4011 12.1519 14.0727 12.8438 14.0727 13.6973C14.0727 14.5508 13.4011 15.2428 12.5727 15.2428H10.8584C10.03 15.2428 9.3584 14.5508 9.3584 13.6973Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M38.644 34.3027C38.644 35.1562 37.9725 35.8481 37.144 35.8481L35.4298 35.8481C34.6013 35.8481 33.9298 35.1562 33.9298 34.3027C33.9298 33.4492 34.6013 32.7572 35.4298 32.7572L37.144 32.7572C37.9725 32.7572 38.644 33.4492 38.644 34.3027Z\"\n        fill=\"white\"\n      />\n    </svg>\n  );\n};\n","import { Button, Flex, Heading, Link, Text } from '@chakra-ui/react';\nimport { useAccounts } from '@snx-v3/useAccounts';\nimport { PermissionTable } from './PermissionTable';\nimport { DelegationIcon } from './DelegationIcon';\n\nexport function Permissions() {\n  const { data: accounts, refetch: refetchAccounts } = useAccounts();\n\n  return (\n    <Flex flexDir=\"column\" gap=\"7\">\n      <Flex flexDir=\"column\" gap={7}>\n        {accounts?.map((accountId) => (\n          <PermissionTable\n            key={accountId.toString()}\n            accountId={accountId}\n            refetchAccounts={refetchAccounts}\n          />\n        ))}\n      </Flex>\n      <Flex\n        flexGrow=\"1\"\n        h=\"fit-content\"\n        border=\"1px solid\"\n        borderColor=\"gray.900\"\n        rounded=\"base\"\n        flexDir=\"column\"\n        width=\"100%\"\n        p=\"6\"\n        bg=\"navy.700\"\n      >\n        <DelegationIcon />\n        <Heading fontSize=\"14px\" mt=\"6\">\n          Delegate Permissions\n        </Heading>\n        <Text color=\"gray.500\" fontSize=\"12px\" mb=\"6\">\n          Delegation enables a wallet to execute functions on behalf of another wallet/account:\n          lock, borrow, withdraw, claim, but not transfer. Manage addresses and their powers below.\n        </Text>\n        <Link\n          href=\"https://docs.synthetix.io/v/synthetix-v3-user-documentation/protocol-design/vaults#account-permissions\"\n          rel=\"noopener\"\n          target=\"_blank\"\n        >\n          <Button variant=\"outline\" color=\"white\" colorScheme=\"gray\" size=\"xs\">\n            Learn More\n          </Button>\n        </Link>\n      </Flex>\n    </Flex>\n  );\n}\n","import { Helmet } from 'react-helmet';\nimport { Flex, Heading } from '@chakra-ui/react';\nimport { Permissions } from '../../components/Permissions/Permissions';\nexport function Settings() {\n  return (\n    <>\n      <Helmet>\n        <title>Synthetix Account Settings</title>\n        <meta name=\"description\" content=\"Synthetix Liquidity V3 - Account Settings\" />\n      </Helmet>\n      <Flex flexDir=\"column\" mb={16}>\n        <Heading\n          mt={{\n            base: 2,\n            sm: 8,\n          }}\n          mb={6}\n          color=\"gray.50\"\n          fontSize=\"1.5rem\"\n          data-cy=\"account settings\"\n        >\n          Account Settings\n        </Heading>\n        <Permissions />\n      </Flex>\n    </>\n  );\n}\n","import { useQuery } from '@tanstack/react-query';\nimport { Network, useWallet, useProviderForChain } from '@snx-v3/useBlockchain';\nimport { useV2xSynthetix } from '@snx-v3/useV2xSynthetix';\nimport { wei } from '@synthetixio/wei';\nimport { useTrustedMulticallForwarder } from '@snx-v3/useTrustedMulticallForwarder';\nimport { contractsHash } from '@snx-v3/tsHelpers';\nimport { ethers } from 'ethers';\n\nexport function useV2Position(network: Network) {\n  const { activeWallet } = useWallet();\n  const provider = useProviderForChain(network);\n  const { data: Multicall3 } = useTrustedMulticallForwarder(network);\n  const { data: V2xSynthetix } = useV2xSynthetix(network);\n  const walletAddress = activeWallet?.address;\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'V2Position',\n      { walletAddress },\n      { contractsHash: contractsHash([V2xSynthetix, Multicall3]) },\n    ],\n    enabled: Boolean(provider && walletAddress && V2xSynthetix && Multicall3),\n    queryFn: async function () {\n      if (!(provider && walletAddress && V2xSynthetix && Multicall3)) throw 'OMFG';\n      const V2xSynthetixInterface = new ethers.utils.Interface(V2xSynthetix.abi);\n\n      const calls = [\n        {\n          target: V2xSynthetix.address,\n          callData: V2xSynthetixInterface.encodeFunctionData('collateral', [walletAddress]),\n        },\n        {\n          target: V2xSynthetix.address,\n          callData: V2xSynthetixInterface.encodeFunctionData('balanceOf', [walletAddress]),\n        },\n\n        {\n          target: V2xSynthetix.address,\n          callData: V2xSynthetixInterface.encodeFunctionData('debtBalanceOf', [\n            walletAddress,\n            ethers.utils.formatBytes32String('sUSD'),\n          ]),\n        },\n        {\n          target: V2xSynthetix.address,\n          callData: V2xSynthetixInterface.encodeFunctionData('collateralisationRatio', [\n            walletAddress,\n          ]),\n        },\n        {\n          target: V2xSynthetix.address,\n          callData: V2xSynthetixInterface.encodeFunctionData('transferableSynthetix', [\n            walletAddress,\n          ]),\n        },\n      ];\n\n      const Multicall3Contract = new ethers.Contract(Multicall3.address, Multicall3.abi, provider);\n      const { returnData } = await Multicall3Contract.callStatic.aggregate(calls);\n\n      const [collateral, balance, debt, cratio, transferableSynthetix] = [\n        wei(V2xSynthetixInterface.decodeFunctionResult('collateral', returnData[0])[0]),\n        wei(V2xSynthetixInterface.decodeFunctionResult('collateral', returnData[1])[0]),\n        wei(V2xSynthetixInterface.decodeFunctionResult('collateral', returnData[2])[0]),\n        wei(V2xSynthetixInterface.decodeFunctionResult('collateral', returnData[3])[0]),\n        wei(V2xSynthetixInterface.decodeFunctionResult('collateral', returnData[4])[0]),\n      ];\n\n      return {\n        collateral,\n        balance,\n        debt,\n        cratio,\n        transferableSynthetix,\n      };\n    },\n  });\n}\n","import React from 'react';\nimport {\n  Flex,\n  Spacer,\n  VStack,\n  Heading,\n  Text,\n  ListItem,\n  Button,\n  Image,\n  ListIcon,\n  List,\n  Link,\n} from '@chakra-ui/react';\nimport { CheckIcon } from '@chakra-ui/icons';\n\nexport const StepIntro = ({\n  onClose,\n  onConfirm,\n}: {\n  onClose: () => void;\n  onConfirm: () => void;\n}) => {\n  return (\n    <VStack spacing={2} align=\"start\">\n      <Flex>\n        <VStack gap={6} flex={1} align=\"start\" fontWeight=\"400\" fontSize=\"14px\">\n          <Heading size=\"sm\">Synthetix V3 is now live!</Heading>\n\n          <Text>\n            Migrate to Synthetix V3 to <b>earn fees from both V2 and V3 </b>markets and much more:\n          </Text>\n\n          <List spacing={2}>\n            <ListItem>\n              <ListIcon as={CheckIcon} color=\"cyan.500\" />\n              V2 Legacy Market Fees\n            </ListItem>\n            <ListItem>\n              <ListIcon as={CheckIcon} color=\"cyan.500\" />\n              V3 SC Pool Fees\n            </ListItem>\n            <ListItem>\n              <ListIcon as={CheckIcon} color=\"cyan.500\" />\n              LP Incentives\n            </ListItem>\n            <ListItem>\n              <ListIcon as={CheckIcon} color=\"cyan.500\" />\n              Improved LP experience\n            </ListItem>\n          </List>\n          <Text fontSize=\"sm\">\n            Learn more about{' '}\n            <Link\n              target=\"_blank\"\n              color=\"cyan.500\"\n              href=\"https://docs.synthetix.io/v/synthetix-v3-user-documentation/liquidity-providers-aka-staking/providing-liquidity-and-earning-rewards/staking-snx-on-eth-mainnet-v3-via-migration-to-legacy-market\"\n            >\n              Synthetix V3 migration process\n            </Link>\n          </Text>\n        </VStack>\n        <Flex alignItems=\"center\" justifyContent=\"center\" flex={1}>\n          <Image width=\"165px\" src=\"/synthetix-rocket.png\" alt=\"Synthetix V3 Launch\" />\n        </Flex>\n      </Flex>\n\n      <Spacer />\n      <Spacer />\n      <Spacer />\n      <Spacer />\n\n      <Button width=\"100%\" onClick={onConfirm}>\n        Start Migration\n      </Button>\n      <Button variant=\"outline\" colorScheme=\"gray\" width=\"100%\" onClick={onClose}>\n        Later\n      </Button>\n    </VStack>\n  );\n};\n","import { Alert, AlertIcon, Button, Flex, Link, Text, VStack } from '@chakra-ui/react';\nimport { type HomePageSchemaType, makeSearch, useParams } from '@snx-v3/useParams';\nimport React from 'react';\n\nexport const StepExplain = ({\n  onClose,\n  onConfirm,\n}: {\n  onClose: () => void;\n  onConfirm: () => void;\n}) => {\n  const [params, setParams] = useParams<HomePageSchemaType>();\n  return (\n    <VStack spacing={2} align=\"start\">\n      <Text fontWeight=\"700\">Migrating to Synthetix V3 consists of:</Text>\n      <Flex mt={2.5} flexDir=\"column\" gap={2.5} fontSize=\"14px\" fontWeight=\"400\">\n        <Flex alignItems=\"center\" gap={2.5}>\n          <Flex width={4}>\n            <svg\n              width=\"12\"\n              height=\"12\"\n              viewBox=\"0 0 12 12\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M8.66602 3.33464C8.66602 4.80739 7.47211 6.0013 5.99935 6.0013C4.52659 6.0013 3.33268 4.80739 3.33268 3.33464C3.33268 1.86188 4.52659 0.667969 5.99935 0.667969C7.47211 0.667969 8.66602 1.86188 8.66602 3.33464ZM7.66602 3.33464C7.66602 4.27782 6.90541 5.01653 5.99935 5.01653C5.09329 5.01653 4.33268 4.27782 4.33268 3.33464C4.33268 2.39145 5.09329 1.65274 5.99935 1.65274C6.90541 1.65274 7.66602 2.39145 7.66602 3.33464Z\"\n                fill=\"white\"\n              />\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M5.99935 6.66797C3.05383 6.66797 0.666016 8.06086 0.666016 9.77908V10.3499C0.666016 10.8937 1.11373 11.3346 1.66602 11.3346H10.3327C10.885 11.3346 11.3327 10.8937 11.3327 10.3499V9.77908C11.3327 8.06086 8.94487 6.66797 5.99935 6.66797ZM1.66602 9.77908C1.66602 9.40806 1.92996 8.89769 2.73776 8.42647C3.52361 7.96806 4.67444 7.65274 5.99935 7.65274C7.32426 7.65274 8.47509 7.96806 9.26093 8.42647C10.0687 8.89769 10.3327 9.40806 10.3327 9.77908V10.3499H1.66602V9.77908Z\"\n                fill=\"white\"\n              />\n            </svg>\n          </Flex>\n          <Text flex={1}>Creation of an Account on Synthetix V3</Text>\n        </Flex>\n        <Flex alignItems=\"center\" gap={2.5}>\n          <Flex width={4}>\n            <svg\n              width=\"16\"\n              height=\"16\"\n              viewBox=\"0 0 16 16\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M12.5701 3.50845C11.9243 2.86259 10.8771 2.86259 10.2313 3.50845C9.58542 4.1543 9.58542 5.20144 10.2313 5.8473C10.8771 6.49315 11.9243 6.49315 12.5701 5.8473C13.216 5.20144 13.216 4.1543 12.5701 3.50845ZM10.9384 4.21555C11.1937 3.96022 11.6077 3.96022 11.863 4.21555C12.1184 4.47089 12.1184 4.88486 11.863 5.14019C11.6077 5.39552 11.1937 5.39552 10.9384 5.14019C10.6831 4.88486 10.6831 4.47089 10.9384 4.21555Z\"\n                fill=\"white\"\n              />\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M14.4058 1.67272C14.2735 1.54042 14.1066 1.46073 13.9626 1.40881C13.8117 1.35441 13.6425 1.31534 13.4696 1.28623C13.1236 1.22799 12.7119 1.20147 12.2952 1.19264C10.2345 1.14896 8.39798 2.27302 7.20433 3.86456L6.48635 4.82186L6.43706 4.92045L3.84686 3.81037C3.65893 3.72983 3.44091 3.77182 3.29634 3.91639L1.0527 6.16003C0.857434 6.3553 0.857434 6.67188 1.0527 6.86714L1.52372 7.33816C2.18804 8.00248 3.23127 8.05696 3.95773 7.50159L4.71241 7.80346L4.31617 8.1997C4.12091 8.39496 4.12091 8.71155 4.31617 8.90681L4.37057 8.9612L3.50031 9.83146C3.30505 10.0267 3.30505 10.3433 3.50031 10.5386C3.69558 10.7338 4.01216 10.7338 4.20742 10.5386L5.07767 9.66831L6.41025 11.0009L5.54001 11.8711C5.34474 12.0664 5.34474 12.383 5.54001 12.5782C5.73527 12.7735 6.05185 12.7735 6.24711 12.5782L7.11736 11.708L7.17172 11.7624C7.36698 11.9576 7.68356 11.9576 7.87883 11.7624L8.27507 11.3661L8.57696 12.1208C8.02159 12.8473 8.07606 13.8905 8.74038 14.5548L9.21141 15.0259C9.40667 15.2211 9.72325 15.2211 9.91851 15.0259L12.1622 12.7822C12.3067 12.6377 12.3487 12.4196 12.2682 12.2317L11.1581 9.6415L11.2567 9.5922L12.214 8.87423C13.8055 7.68057 14.9296 5.84407 14.8859 3.78334C14.8771 3.36665 14.8506 2.95499 14.7923 2.60896C14.7632 2.43601 14.7241 2.26687 14.6697 2.11599C14.6178 1.97199 14.5381 1.80503 14.4058 1.67272ZM12.274 2.19241C12.6699 2.2008 13.0267 2.22574 13.3036 2.27236C13.4422 2.29568 13.5481 2.3224 13.6234 2.34953C13.6631 2.36383 13.6859 2.37534 13.6971 2.38149C13.7032 2.39263 13.7147 2.4155 13.729 2.45518C13.7562 2.53041 13.7829 2.6364 13.8062 2.77495C13.8528 3.05189 13.8778 3.40864 13.8861 3.80452C13.9215 5.4747 13.0078 7.02884 11.614 8.07423L10.7288 8.7381L8.64387 9.78058L6.29798 7.43468L7.34045 5.34972L8.00433 4.46456C9.04972 3.07071 10.6038 2.15702 12.274 2.19241ZM3.76408 4.86286L5.98907 5.81643L5.39713 7.00031L4.1224 6.49042C3.88643 6.39603 3.61693 6.45135 3.43722 6.63106C3.10409 6.96419 2.56396 6.96419 2.23083 6.63106L2.11336 6.51359L3.76408 4.86286ZM10.2621 10.0895L9.07823 10.6814L9.58813 11.9562C9.68251 12.1921 9.62719 12.4616 9.44749 12.6413C9.11435 12.9745 9.11435 13.5146 9.44749 13.8477L9.56496 13.9652L11.2157 12.3145L10.2621 10.0895ZM5.68956 8.24052L5.37683 8.55325L7.52527 10.7017L7.83801 10.389L5.68956 8.24052Z\"\n                fill=\"white\"\n              />\n              <path\n                d=\"M5.22726 11.5584C5.42252 11.3631 5.42252 11.0466 5.22726 10.8513C5.032 10.656 4.71542 10.656 4.52015 10.8513L3.50031 11.8711C3.30505 12.0664 3.30505 12.383 3.50031 12.5782C3.69558 12.7735 4.01216 12.7735 4.20742 12.5782L5.22726 11.5584Z\"\n                fill=\"white\"\n              />\n            </svg>\n          </Flex>\n          <Text flex={1}>\n            Migration of your SNX Collateral (including escrowed SNX) and your debt to a New\n            Liquidity Position on the Liquidity App\n          </Text>\n        </Flex>\n        <Flex alignItems=\"center\" gap={2.5}>\n          <Flex width={4}>\n            <svg\n              width=\"12\"\n              height=\"12\"\n              viewBox=\"0 0 12 12\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M0.833984 6.0013C0.833984 4.98878 1.6548 4.16797 2.66732 4.16797H9.33398C10.3465 4.16797 11.1673 4.98878 11.1673 6.0013V10.0013C11.1673 11.0138 10.3465 11.8346 9.33398 11.8346H2.66732C1.6548 11.8346 0.833984 11.0138 0.833984 10.0013V6.0013ZM2.66732 5.16797C2.20708 5.16797 1.83398 5.54106 1.83398 6.0013V10.0013C1.83398 10.4615 2.20708 10.8346 2.66732 10.8346H9.33398C9.79422 10.8346 10.1673 10.4615 10.1673 10.0013V6.0013C10.1673 5.54106 9.79422 5.16797 9.33398 5.16797H2.66732Z\"\n                fill=\"white\"\n              />\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M2.83398 3.33464C2.83398 1.58573 4.25175 0.167969 6.00065 0.167969C7.74955 0.167969 9.16732 1.58573 9.16732 3.33464V5.16797H2.83398V3.33464ZM6.00065 1.16797C4.80403 1.16797 3.83398 2.13802 3.83398 3.33464V4.16797H8.16732V3.33464C8.16732 2.13802 7.19727 1.16797 6.00065 1.16797Z\"\n                fill=\"white\"\n              />\n            </svg>\n          </Flex>\n          <Text flex={1}>Lock of funds for 7 days</Text>\n        </Flex>\n        <Flex alignItems=\"center\" gap={2.5}>\n          <Flex width={4}>\n            <svg\n              width=\"10\"\n              height=\"11\"\n              viewBox=\"0 0 10 11\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M3.43675 4.45617L2.13565 3.15508L9.26758 3.15508L9.26758 2.42138L2.13565 2.42138L3.43675 1.12028L2.91803 0.601562L0.731365 2.78823L2.91803 4.9749L3.43675 4.45617ZM6.56219 6.08028L7.86329 7.38138L0.731363 7.38138L0.731363 8.11508L7.86329 8.11508L6.56219 9.41617L7.08091 9.9349L9.26758 7.74823L7.08091 5.56156L6.56219 6.08028Z\"\n                fill=\"white\"\n              />\n              <path\n                d=\"M2.13565 3.15508L2.13565 2.95508L1.65281 2.95508L1.99423 3.2965L2.13565 3.15508ZM3.43675 4.45617L3.57817 4.5976L3.7196 4.45617L3.57817 4.31475L3.43675 4.45617ZM9.26758 3.15508L9.26758 3.35508L9.46758 3.35508L9.46758 3.15508L9.26758 3.15508ZM9.26758 2.42138L9.46758 2.42138L9.46758 2.22138L9.26758 2.22138L9.26758 2.42138ZM2.13565 2.42138L1.99423 2.27996L1.65281 2.62138L2.13565 2.62138L2.13565 2.42138ZM3.43675 1.12028L3.57817 1.2617L3.7196 1.12028L3.57817 0.978862L3.43675 1.12028ZM2.91803 0.601562L3.05945 0.460141L2.91803 0.31872L2.77661 0.460141L2.91803 0.601562ZM0.731365 2.78823L0.589943 2.64681L0.448522 2.78823L0.589943 2.92965L0.731365 2.78823ZM2.91803 4.9749L2.77661 5.11632L2.91803 5.25774L3.05945 5.11632L2.91803 4.9749ZM7.86329 7.38138L7.86329 7.58138L8.34613 7.58138L8.00471 7.23996L7.86329 7.38138ZM6.56219 6.08028L6.42077 5.93886L6.27935 6.08028L6.42077 6.22171L6.56219 6.08028ZM0.731363 7.38138L0.731364 7.18138L0.531363 7.18138L0.531363 7.38138L0.731363 7.38138ZM0.731363 8.11508L0.531363 8.11508L0.531363 8.31508L0.731363 8.31508L0.731363 8.11508ZM7.86329 8.11508L8.00471 8.2565L8.34613 7.91508L7.86329 7.91508L7.86329 8.11508ZM6.56219 9.41617L6.42077 9.27475L6.27935 9.41617L6.42077 9.5576L6.56219 9.41617ZM7.08091 9.9349L6.93949 10.0763L7.08091 10.2177L7.22233 10.0763L7.08091 9.9349ZM9.26758 7.74823L9.409 7.88965L9.55042 7.74823L9.409 7.60681L9.26758 7.74823ZM7.08091 5.56156L7.22233 5.42014L7.08091 5.27872L6.93949 5.42014L7.08091 5.56156ZM1.99423 3.2965L3.29533 4.5976L3.57817 4.31475L2.27707 3.01365L1.99423 3.2965ZM9.26758 2.95508L2.13565 2.95508L2.13565 3.35508L9.26758 3.35508L9.26758 2.95508ZM9.06758 2.42138L9.06758 3.15508L9.46758 3.15508L9.46758 2.42138L9.06758 2.42138ZM2.13565 2.62138L9.26758 2.62138L9.26758 2.22138L2.13565 2.22138L2.13565 2.62138ZM3.29533 0.978862L1.99423 2.27996L2.27707 2.5628L3.57817 1.2617L3.29533 0.978862ZM2.77661 0.742984L3.29533 1.2617L3.57817 0.978862L3.05945 0.460141L2.77661 0.742984ZM0.872786 2.92965L3.05945 0.742984L2.77661 0.460141L0.589943 2.64681L0.872786 2.92965ZM3.05945 4.83347L0.872786 2.64681L0.589943 2.92965L2.77661 5.11632L3.05945 4.83347ZM3.29533 4.31475L2.77661 4.83347L3.05945 5.11632L3.57817 4.5976L3.29533 4.31475ZM8.00471 7.23996L6.70361 5.93886L6.42077 6.22171L7.72187 7.5228L8.00471 7.23996ZM0.731363 7.58138L7.86329 7.58138L7.86329 7.18138L0.731364 7.18138L0.731363 7.58138ZM0.931364 8.11508L0.931364 7.38138L0.531363 7.38138L0.531363 8.11508L0.931364 8.11508ZM7.86329 7.91508L0.731364 7.91507L0.731363 8.31508L7.86329 8.31508L7.86329 7.91508ZM6.70361 9.5576L8.00471 8.2565L7.72187 7.97366L6.42077 9.27475L6.70361 9.5576ZM7.22233 9.79347L6.70361 9.27475L6.42077 9.5576L6.93949 10.0763L7.22233 9.79347ZM9.12616 7.60681L6.93949 9.79347L7.22233 10.0763L9.409 7.88965L9.12616 7.60681ZM6.93949 5.70298L9.12616 7.88965L9.409 7.60681L7.22233 5.42014L6.93949 5.70298ZM6.70361 6.22171L7.22233 5.70298L6.93949 5.42014L6.42077 5.93886L6.70361 6.22171Z\"\n                fill=\"white\"\n              />\n            </svg>\n          </Flex>\n          <Text flex={1}>\n            (optional) Conversion of your sUSD into V3 compatible sUSD. You can\n            <Link\n              color=\"cyan.500\"\n              href={`?${makeSearch({ convert: 'snxusd', accountId: params.accountId })}`}\n              onClick={(e) => {\n                e.preventDefault();\n                setParams({ convert: 'snxusd', accountId: params.accountId });\n              }}\n            >\n              &nbsp;convert your sUSD&nbsp;\n            </Link>\n            at anytime\n          </Text>\n        </Flex>\n      </Flex>\n\n      <Alert my={6} status=\"info\" borderRadius=\"6px\">\n        <AlertIcon />\n        <Text fontSize=\"14px\">\n          Migration to V3 is currently only available on <b>Ethereum Mainnet</b>. Learn more about\n          <Link\n            color=\"cyan.500\"\n            href=\"https://blog.synthetix.io/synthetix-v3-migration-treasury-council-initiates-transition/\"\n            isExternal\n          >\n            &nbsp;migrating to V3.\n          </Link>\n        </Text>\n      </Alert>\n\n      <Button width=\"100%\" onClick={onConfirm}>\n        Continue\n      </Button>\n      <Button width=\"100%\" variant=\"outline\" colorScheme=\"gray\" onClick={onClose}>\n        Back\n      </Button>\n    </VStack>\n  );\n};\n","import { extractErrorData } from '@snx-v3/parseContractError';\nimport { contractsHash } from '@snx-v3/tsHelpers';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { useLegacyMarket } from '@snx-v3/useLegacyMarket';\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\nimport { useCallback, useMemo, useState } from 'react';\n\nconst log = debug('snx:useMigrate');\n\nexport function useMigrate() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const { network } = useNetwork();\n  const provider = useProvider();\n  const signer = useSigner();\n  const { data: LegacyMarket } = useLegacyMarket();\n  const queryClient = useQueryClient();\n\n  const accountId = useMemo(() => Math.floor(Math.random() * 1000000000000).toString(), []);\n\n  const { data: transaction } = useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'MigrateTxn',\n      { contractsHash: contractsHash([LegacyMarket]) },\n    ],\n    enabled: Boolean(signer && LegacyMarket),\n    queryFn: async function () {\n      if (!(LegacyMarket && signer && provider)) throw 'OMFG';\n\n      const LegacyMarketContract = new ethers.Contract(\n        LegacyMarket.address,\n        LegacyMarket.abi,\n        signer\n      );\n\n      const signerAddress = await signer.getAddress();\n      const populateTransaction = await LegacyMarketContract.populateTransaction.migrate(\n        accountId,\n        { from: signerAddress }\n      );\n      try {\n        const gasLimit = await provider.estimateGas(populateTransaction);\n        return {\n          ...populateTransaction,\n          gasLimit: gasLimit.mul(15).div(10),\n        };\n      } catch (error) {\n        if (LegacyMarket) {\n          try {\n            const LegacyMarketInterface = new ethers.utils.Interface(LegacyMarket.abi);\n            const parsedError = extractErrorData(error);\n            const errorResult = LegacyMarketInterface.parseError(parsedError as string);\n            console.error('error:', errorResult);\n          } catch {\n            // whatever\n          }\n        }\n        return null;\n      }\n    },\n  });\n\n  const migrate = useCallback(async () => {\n    try {\n      if (!(LegacyMarket && signer && provider && transaction)) throw 'OMFG';\n      setIsLoading(true);\n      setIsSuccess(false);\n      const signerAddress = await signer.getAddress();\n\n      const LegacyMarketContract = new ethers.Contract(\n        LegacyMarket.address,\n        LegacyMarket.abi,\n        signer\n      );\n\n      const populateTransaction = await LegacyMarketContract.populateTransaction.migrate(\n        accountId,\n        { from: signerAddress }\n      );\n      const gasLimit = await provider.estimateGas(populateTransaction);\n      const txn = await LegacyMarketContract.migrate(accountId, {\n        gasLimit: gasLimit.mul(15).div(10),\n      });\n      log('txn', txn);\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n\n      setIsLoading(false);\n      setIsSuccess(true);\n\n      queryClient.invalidateQueries({\n        queryKey: [`${network?.id}-${network?.preset}`, 'Accounts'],\n      });\n    } catch (error) {\n      setIsLoading(false);\n      throw error;\n    }\n  }, [\n    accountId,\n    LegacyMarket,\n    network?.id,\n    network?.preset,\n    provider,\n    queryClient,\n    signer,\n    transaction,\n  ]);\n\n  return {\n    migrate,\n    transaction,\n    isLoading,\n    isSuccess,\n    accountId,\n  };\n}\n","import React, { useState } from 'react';\nimport { VStack, Text, Button, Alert, Flex, Tooltip } from '@chakra-ui/react';\nimport { CheckIcon, CopyIcon } from '@chakra-ui/icons';\nimport { TransactionSummary } from '../TransactionSummary/TransactionSummary';\n\nexport const StepSuccess = ({\n  onConfirm,\n  collateral,\n  cRatio,\n  accountId,\n}: {\n  onConfirm: () => void;\n  cRatio: string;\n  collateral: string;\n  accountId: string;\n}) => {\n  const [toolTipLabel, setTooltipLabel] = useState('Copy');\n  return (\n    <VStack spacing={6}>\n      <Text width=\"100%\" textAlign=\"left\" fontSize=\"14px\">\n        Your <b>Collateral</b> has been migrated to Synthetix V3 System\n      </Text>\n\n      <Alert rounded=\"base\" colorScheme=\"green\" borderRadius=\"6px\">\n        <Flex bg=\"green.500\" p=\"1\" rounded=\"full\" mr=\"3.5\">\n          <CheckIcon w=\"12px\" h=\"12px\" color=\"green.900\" />\n        </Flex>\n        <Text fontSize=\"16px\">\n          <b>Collateral</b> successfully migrated\n        </Text>\n      </Alert>\n\n      <TransactionSummary\n        width=\"100%\"\n        items={[\n          {\n            label: 'Total Collateral',\n            value: collateral,\n          },\n          {\n            label: 'C-ratio',\n            value: `${cRatio}%`,\n          },\n          {\n            label: 'Account Id',\n            value: (\n              <>\n                {`#${accountId}`}\n                <Tooltip label={toolTipLabel} closeOnClick={false}>\n                  <CopyIcon\n                    ml=\"2\"\n                    onClick={() => {\n                      navigator.clipboard.writeText(accountId);\n                      setTooltipLabel('Copied');\n                      setTimeout(() => {\n                        setTooltipLabel('Copy');\n                      }, 10000);\n                    }}\n                    cursor=\"pointer\"\n                  />\n                </Tooltip>\n              </>\n            ),\n          },\n        ]}\n      />\n\n      <Button width=\"100%\" onClick={onConfirm}>\n        Continue\n      </Button>\n    </VStack>\n  );\n};\n","export const getHealthVariant = ({\n  targetCratio,\n  liquidationCratio,\n  cRatio,\n}: {\n  liquidationCratio: number | undefined;\n  targetCratio: number | undefined;\n  cRatio: number | undefined;\n}) => {\n  if (!liquidationCratio || !targetCratio || !cRatio) {\n    return 'success';\n  }\n  if (cRatio <= 0) {\n    return 'success';\n  }\n  if (cRatio < liquidationCratio) {\n    return 'error';\n  }\n  if (cRatio < targetCratio) {\n    return 'warning';\n  }\n  return 'success';\n};\n\nexport const ratioIsMaxUInt = (ratio: number) => ratio >= Number.MAX_SAFE_INTEGER;\n\nexport const getProgressSize = ({\n  targetCratio,\n  liquidationCratio,\n  cRatio,\n}: {\n  liquidationCratio: number | undefined;\n  targetCratio: number | undefined;\n  cRatio: number | undefined;\n}) => {\n  if (!liquidationCratio || !targetCratio || !cRatio) {\n    return 0;\n  }\n\n  if (cRatio < 0) {\n    return 0;\n  }\n\n  if (cRatio >= targetCratio) {\n    return 75 + (25 * (cRatio - targetCratio)) / liquidationCratio;\n  }\n\n  if (cRatio >= liquidationCratio) {\n    return 25 + (50 * (cRatio - liquidationCratio)) / (targetCratio - liquidationCratio);\n  }\n\n  return (25 * cRatio) / liquidationCratio;\n};\n","import { Badge } from '@chakra-ui/react';\nimport { FC } from 'react';\nimport { getHealthVariant } from './CRatioBar.utils';\n\nconst badgeColors = {\n  success: {\n    colorScheme: 'green',\n    bg: 'green.900',\n    label: 'HEALTHY',\n  },\n  error: {\n    colorScheme: 'red',\n    bg: 'red.900',\n    label: 'Unhealthy',\n  },\n  warning: {\n    colorScheme: 'orange',\n    bg: 'orange.900',\n    label: 'MANAGE',\n  },\n};\n\nexport const CRatioBadge: FC<{\n  liquidationCratio: number;\n  targetCratio: number;\n  cRatio: number;\n}> = ({ liquidationCratio, targetCratio, cRatio }) => {\n  const variant = getHealthVariant({\n    targetCratio,\n    liquidationCratio,\n    cRatio,\n  });\n  return (\n    <Badge\n      colorScheme={badgeColors[variant].colorScheme}\n      border=\"1px solid\"\n      bg={badgeColors[variant].bg}\n    >\n      {badgeColors[variant].label}\n    </Badge>\n  );\n};\n","import { importSystemToken } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useSystemToken(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'SystemToken'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw new Error('OMFG');\n      return importSystemToken(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","export async function importSystemToken(\n  chainId?: number,\n  preset?: string\n): Promise<{\n  address: string;\n  symbol: string;\n  name: string;\n  decimals: number;\n}> {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: systemToken }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/systemToken.json'),\n      ]);\n      return systemToken;\n    }\n    case '11155111-main': {\n      const [{ default: systemToken }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/systemToken.json'),\n      ]);\n      return systemToken;\n    }\n    case '10-main': {\n      const [{ default: systemToken }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/systemToken.json'),\n      ]);\n      return systemToken;\n    }\n    case '8453-andromeda': {\n      const [{ default: systemToken }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/systemToken.json'),\n      ]);\n      return systemToken;\n    }\n    case '84532-andromeda': {\n      const [{ default: systemToken }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/systemToken.json'),\n      ]);\n      return systemToken;\n    }\n    case '42161-main': {\n      const [{ default: systemToken }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/systemToken.json'),\n      ]);\n      return systemToken;\n    }\n    case '421614-main': {\n      const [{ default: systemToken }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/systemToken.json'),\n      ]);\n      return systemToken;\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for SystemToken`);\n    }\n  }\n}\n","const extraAbi = [\n  'function transferableSynthetix(address account) view returns (uint256 transferable)',\n  'function collateral(address account) view returns (uint256 collateral)',\n];\n\nexport async function importSNX(\n  chainId?: number,\n  preset?: string\n): Promise<{ address: string; abi: string[] }> {\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/meta.json'),\n        import('@synthetixio/v3-contracts/1-main/CollateralToken_SNX.readable.json'),\n      ]);\n      return { address: meta.contracts.CollateralToken_SNX, abi: [...abi, ...extraAbi] };\n    }\n    case '11155111-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/meta.json'),\n        import('@synthetixio/v3-contracts/11155111-main/CollateralToken_SNX.readable.json'),\n      ]);\n      return { address: meta.contracts.CollateralToken_SNX, abi: [...abi, ...extraAbi] };\n    }\n    case '10-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/meta.json'),\n        import('@synthetixio/v3-contracts/10-main/CollateralToken_SNX.readable.json'),\n      ]);\n      return { address: meta.contracts.CollateralToken_SNX, abi: [...abi, ...extraAbi] };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for SNX`);\n    }\n  }\n}\n","import { importSNX } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useSNX(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'SNX'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw new Error('OMFG');\n      return importSNX(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","import { importCollateralTokens } from '@snx-v3/contracts';\nimport { contractsHash } from '@snx-v3/tsHelpers';\nimport { Network, useNetwork, MAINNET, OPTIMISM } from '@snx-v3/useBlockchain';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { useSNX } from '@snx-v3/useSNX';\nimport { wei, Wei } from '@synthetixio/wei';\nimport { useQuery } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\n\nexport type CollateralType = {\n  address: string;\n  symbol: string;\n  displaySymbol: string;\n  name: string;\n  decimals: number;\n  depositingEnabled: boolean;\n  issuanceRatioD18: Wei;\n  liquidationRatioD18: Wei;\n  liquidationRewardD18: Wei;\n  minDelegationD18: Wei;\n  oracleNodeId: string;\n  tokenAddress: string;\n  oracle: {\n    constPrice?: Wei;\n    externalContract?: string;\n    stalenessTolerance?: string;\n    pythFeedId?: string;\n  };\n};\n\nasync function loadCollateralTypes(chainId: number, preset: string) {\n  return (await importCollateralTokens(chainId, preset)).map((config) => ({\n    address: config.address,\n    symbol: config.symbol,\n    displaySymbol: config.symbol,\n    name: config.name,\n    decimals: config.decimals,\n    depositingEnabled: config.depositingEnabled,\n    issuanceRatioD18: wei(config.issuanceRatioD18, 18, true),\n    liquidationRatioD18: wei(config.liquidationRatioD18, 18, true),\n    liquidationRewardD18: wei(config.liquidationRewardD18, 18, true),\n    minDelegationD18: wei(config.minDelegationD18, 18, true),\n    oracleNodeId: config.oracleNodeId,\n    tokenAddress: config.tokenAddress,\n    oracle: {\n      constPrice: config.oracle.constPrice ? wei(config.oracle.constPrice, 18, true) : undefined,\n      externalContract: config.oracle.externalContract,\n      stalenessTolerance: config.oracle.stalenessTolerance,\n      pythFeedId: config.oracle.pythFeedId,\n    },\n  }));\n}\n\nexport function useCollateralTypes(includeDelegationOff = false, customNetwork?: Network) {\n  const { network: currentNetwork } = useNetwork();\n  const network = customNetwork ?? currentNetwork;\n  const { data: systemToken } = useSystemToken(customNetwork);\n  const { data: MainnetSNX } = useSNX(MAINNET);\n  const { data: OptimismSNX } = useSNX(OPTIMISM);\n\n  return useQuery({\n    enabled: Boolean(network?.id && network?.preset && systemToken && MainnetSNX && OptimismSNX),\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'CollateralTypes',\n      { includeDelegationOff },\n      { contractsHash: contractsHash([systemToken, MainnetSNX, OptimismSNX]) },\n    ],\n    queryFn: async () => {\n      if (!(network?.id && network?.preset && systemToken && MainnetSNX && OptimismSNX))\n        throw Error('useCollateralTypes should not be enabled when contracts missing');\n\n      const collateralTypes = (await loadCollateralTypes(network.id, network.preset))\n        .map((collateralType) => {\n          if (network?.preset === 'andromeda' && collateralType.symbol === 'sUSDC') {\n            return {\n              ...collateralType,\n              symbol: 'USDC',\n              displaySymbol: 'USDC',\n              name: 'USD Coin',\n            };\n          }\n          if (network?.preset === 'andromeda' && collateralType.symbol === 'sStataUSDC') {\n            return {\n              ...collateralType,\n              symbol: 'stataUSDC',\n              displaySymbol: 'Static aUSDC',\n              name: 'Static aUSDC',\n            };\n          }\n          return {\n            ...collateralType,\n            displaySymbol: collateralType.displaySymbol ?? collateralType.symbol,\n          };\n        })\n        .filter((collateralType) => collateralType.tokenAddress !== systemToken.address);\n\n      return collateralTypes\n        .filter(\n          (collateralType) =>\n            collateralType.depositingEnabled ||\n            (network.id === MAINNET.id && collateralType.address === MainnetSNX.address) ||\n            (network.id === OPTIMISM.id && collateralType.address === OptimismSNX.address)\n        )\n        .filter(\n          (collateralType) =>\n            // Return collateral types that have minDelegationD18 < MaxUint256\n            // When minDelegationD18 === MaxUint256, delegation is effectively disabled\n            includeDelegationOff || collateralType.minDelegationD18.lt(ethers.constants.MaxUint256)\n        );\n    },\n    // one hour in ms\n    staleTime: 3_600_000,\n  });\n}\n\nexport function useCollateralType(collateralSymbol?: string, networkOverride?: Network) {\n  const { network: currentNetwork } = useNetwork();\n  const network = networkOverride || currentNetwork;\n  const { data: collateralTypes } = useCollateralTypes(true, networkOverride);\n\n  return useQuery({\n    enabled: Boolean(network && collateralTypes && collateralSymbol),\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'CollateralType',\n      { collateralSymbol },\n      { contractsHash: contractsHash(collateralTypes ?? []) },\n    ],\n    queryFn: async () => {\n      if (!(network && collateralTypes && collateralSymbol)) {\n        throw new Error('OMFG');\n      }\n\n      const collateralType = collateralTypes.find(\n        (collateral) => `${collateral.symbol}`.toLowerCase() === `${collateralSymbol}`.toLowerCase()\n      );\n      if (!collateralType) {\n        throw new Error('Unsupported collateral');\n      }\n      return collateralType;\n    },\n    // one hour in ms\n    staleTime: 3_600_000,\n    throwOnError: false,\n  });\n}\n","export async function importCollateralTokens(\n  chainId?: number,\n  preset?: string\n): Promise<\n  {\n    address: string;\n    symbol: string;\n    name: string;\n    decimals: number;\n    depositingEnabled: boolean;\n    issuanceRatioD18: string;\n    liquidationRatioD18: string;\n    liquidationRewardD18: string;\n    oracleNodeId: string;\n    tokenAddress: string;\n    minDelegationD18: string;\n    oracle: {\n      constPrice?: string;\n      externalContract?: string;\n      stalenessTolerance?: string;\n      pythFeedId?: string;\n    };\n  }[]\n> {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: collateralTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/collateralTokens.json'),\n      ]);\n      return collateralTokens;\n    }\n    case '11155111-main': {\n      const [{ default: collateralTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/collateralTokens.json'),\n      ]);\n      return collateralTokens;\n    }\n    case '10-main': {\n      const [{ default: collateralTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/collateralTokens.json'),\n      ]);\n      return collateralTokens;\n    }\n    case '8453-andromeda': {\n      const [{ default: collateralTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/collateralTokens.json'),\n      ]);\n      return collateralTokens;\n    }\n    case '84532-andromeda': {\n      const [{ default: collateralTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/collateralTokens.json'),\n      ]);\n      return collateralTokens;\n    }\n    case '42161-main': {\n      const [{ default: collateralTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/collateralTokens.json'),\n      ]);\n      return collateralTokens;\n    }\n    case '421614-main': {\n      const [{ default: collateralTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/collateralTokens.json'),\n      ]);\n      return collateralTokens;\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for CollateralTokens`);\n    }\n  }\n}\n","import React, { useCallback, useState } from 'react';\nimport {\n  VStack,\n  Text,\n  Heading,\n  Box,\n  HStack,\n  Tooltip,\n  Checkbox,\n  Button,\n  Spinner,\n  Link,\n  Flex,\n  Collapse,\n  AlertIcon,\n  Alert,\n  AlertDescription,\n} from '@chakra-ui/react';\nimport { wei } from '@synthetixio/wei';\nimport { useV2Position } from '@snx-v3/useV2Position';\nimport { MAINNET, Network } from '@snx-v3/useBlockchain';\nimport { InfoIcon } from '@chakra-ui/icons';\nimport { useMigrate } from '@snx-v3/useMigrate';\nimport { StepSuccess } from './StepSuccess';\nimport { formatEther } from 'ethers/lib/utils';\nimport { Amount } from '@snx-v3/Amount';\nimport { CRatioBadge } from '../CRatioBar/CRatioBadge';\nimport { useRates } from '@snx-v3/useRates';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\n\nexport const StepSummary = ({\n  onClose,\n  network,\n  onConfirm,\n}: {\n  onClose: () => void;\n  onConfirm: (accountId: string) => void;\n  network: Network;\n}) => {\n  const { data: snxCollateral } = useCollateralType('SNX', MAINNET);\n  const [isUnderstanding, setIsUnderstanding] = useState(false);\n  const { data } = useV2Position(network);\n  const { migrate, transaction, isLoading, isSuccess, accountId } = useMigrate();\n\n  const { data: rates } = useRates();\n  const snxPrice = rates?.snx || ZEROWEI;\n  const ethPrice = rates?.eth || ZEROWEI;\n\n  const [txSummary, setTxSummary] = useState({\n    collateral: '0',\n    cRatio: '0',\n    accountId: '',\n  });\n\n  const cRatio = data?.cratio.eq(0)\n    ? '0'\n    : wei(1)\n        .div(data?.cratio || wei(1))\n        .mul(100)\n        .toString(2);\n\n  const handleSubmit = useCallback(() => {\n    setTxSummary({\n      cRatio,\n      collateral: data?.collateral?.toString(2) || '0',\n      accountId,\n    });\n\n    migrate();\n  }, [accountId, cRatio, data?.collateral, migrate]);\n\n  if (isSuccess) {\n    return (\n      <StepSuccess\n        onConfirm={() => onConfirm(txSummary.accountId)}\n        cRatio={txSummary.cRatio}\n        collateral={txSummary.collateral}\n        accountId={txSummary.accountId}\n      />\n    );\n  }\n\n  return (\n    <VStack spacing={2.5} align=\"start\" fontSize=\"12px\">\n      <Heading size=\"sm\">Summary of your migration</Heading>\n\n      <Box p={3.5} borderRadius=\"4px\" background=\"#1F1F34\" width=\"100%\">\n        <HStack fontWeight=\"700\" justifyContent=\"space-between\">\n          <Text>C-Ratio</Text>\n          <HStack>\n            <Text>{cRatio}%</Text>\n            <CRatioBadge cRatio={Number(cRatio)} liquidationCratio={105} targetCratio={500} />\n            {/* <Tag colorScheme=\"green\">HEALTHY</Tag> */}\n          </HStack>\n        </HStack>\n      </Box>\n\n      <Text fontSize=\"12px\" fontWeight=\"400\" color=\"gray\" as=\"i\">\n        Warning: if your c-ratio is below V3 liquidation ratio (105%), your account will be{' '}\n        <Link\n          target=\"_blank\"\n          color=\"cyan.500\"\n          href=\"https://docs.synthetix.io/v/v3/for-liquidity-integrators/liquidity-positions/position-liquidations\"\n        >\n          liquidated\n        </Link>{' '}\n        during the migration. We recommend to commence this migration only if you have a healthy\n        c-ratio.\n      </Text>\n\n      <Box p={3.5} borderRadius=\"4px\" background=\"#1F1F34\" width=\"100%\">\n        <VStack align=\"stretch\" spacing={3}>\n          <HStack fontWeight=\"700\" justifyContent=\"space-between\">\n            <Text>\n              SNX Collateral{' '}\n              <Tooltip\n                hasArrow\n                textAlign=\"left\"\n                label=\"Your SNX Collateral will not appear on your wallet anymore as it will be deposited in your Account. You can see the details on your Dashboard.\"\n              >\n                <InfoIcon />\n              </Tooltip>\n            </Text>\n            <Text>\n              {data?.collateral?.toString(2)} SNX\n              {data && snxPrice && snxPrice.gt(0) ? (\n                <>&nbsp;(${snxPrice.mul(data.collateral).toString(2)})</>\n              ) : null}\n            </Text>\n          </HStack>\n          <HStack color=\"gray\" justifyContent=\"space-between\">\n            <Text>Balance</Text>\n            <Text>\n              {data?.balance?.toString(2)} SNX\n              {data && snxPrice && snxPrice.gt(0) ? (\n                <>&nbsp;(${snxPrice.mul(data.balance).toString(2)})</>\n              ) : null}\n            </Text>\n          </HStack>\n          <HStack color=\"gray\" justifyContent=\"space-between\">\n            <Text>\n              Escrowed{' '}\n              <Tooltip\n                hasArrow\n                textAlign=\"left\"\n                label=\"Escrowed SNX will be locked in the V3 system until the escrowed date. It can still be delegated but not withdrawn.\"\n              >\n                <InfoIcon />\n              </Tooltip>\n            </Text>\n            <Text>\n              {data?.collateral?.sub(data?.balance)?.toString(2)} SNX\n              {data && snxPrice && snxPrice.gt(0) ? (\n                <>&nbsp;(${snxPrice.mul(data.collateral.sub(data.balance)).toString(2)})</>\n              ) : null}\n            </Text>\n          </HStack>\n          <HStack fontWeight=\"700\" justifyContent=\"space-between\">\n            <Text>\n              Debt{' '}\n              <Tooltip\n                hasArrow\n                label={\n                  <Text textAlign=\"left\">\n                    Your debt amount will be the same on V3. Debt is however now determined by the\n                    collateral deposited.\n                  </Text>\n                }\n              >\n                <InfoIcon />\n              </Tooltip>\n            </Text>\n            <Text>${data?.debt?.toString(2)}</Text>\n          </HStack>\n        </VStack>\n      </Box>\n\n      <Checkbox size=\"sm\" onChange={(e) => setIsUnderstanding(e.currentTarget.checked)}>\n        I understand that this action cannot be undone\n      </Checkbox>\n\n      <Box mb={3.5} p={3.5} borderRadius=\"4px\" background=\"#1F1F34\" width=\"100%\">\n        <HStack justifyContent=\"space-between\">\n          <Text>Estimated Gas</Text>\n\n          {transaction !== undefined && (\n            <>\n              {transaction?.gasLimit.gt(0) ? (\n                <Text>\n                  <Amount\n                    value={wei(\n                      formatEther(\n                        transaction?.gasLimit.mul(transaction.gasPrice || 1).toString() || 0\n                      )\n                    )}\n                    suffix=\" ETH\"\n                  />\n\n                  {ethPrice?.gt(0) && (\n                    <>\n                      &nbsp;($\n                      {ethPrice\n                        .mul(\n                          formatEther(\n                            transaction?.gasLimit.mul(transaction.gasPrice || 1).toString() || 0\n                          )\n                        )\n                        .toString(2)}\n                      )\n                    </>\n                  )}\n                </Text>\n              ) : (\n                <Text color=\"red\">Transaction error occured, please seek support</Text>\n              )}\n            </>\n          )}\n        </HStack>\n      </Box>\n\n      {data && snxCollateral ? (\n        <Collapse in={data.balance.lt(snxCollateral.minDelegationD18)} animateOpacity unmountOnExit>\n          <Alert mb={3.5} status=\"error\" borderRadius=\"6px\">\n            <AlertIcon />\n            <AlertDescription fontSize=\"16px\">\n              The minimal locked amount on V3 is <Amount value={snxCollateral?.minDelegationD18} />{' '}\n              SNX. You can manually unstake your V2 SNX on the{' '}\n              <Link\n                textDecoration=\"underline\"\n                href=\"https://staking.synthetix.io/staking/burn\"\n                target=\"_blank\"\n              >\n                Staking App\n              </Link>\n            </AlertDescription>\n          </Alert>\n        </Collapse>\n      ) : null}\n\n      {!isLoading ? (\n        <>\n          <Button\n            width=\"100%\"\n            isDisabled={!(transaction?.gasLimit && transaction?.gasLimit.gt(0) && isUnderstanding)}\n            onClick={handleSubmit}\n          >\n            Migrate\n          </Button>\n          <Button variant=\"outline\" colorScheme=\"gray\" onClick={onClose} width=\"100%\">\n            Cancel\n          </Button>\n        </>\n      ) : (\n        <Flex\n          fontSize=\"14px\"\n          fontWeight={700}\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          width=\"100%\"\n          gap={2}\n          p={3}\n          color=\"cyan.500\"\n        >\n          <Spinner />\n          Loading\n        </Flex>\n      )}\n    </VStack>\n  );\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { MAINNET, useProviderForChain } from '@snx-v3/useBlockchain';\nimport { Contract } from 'ethers';\nimport { formatBytes32String } from 'ethers/lib/utils';\nimport { wei } from '@synthetixio/wei';\n\nexport function useRates() {\n  const mainnetProvider = useProviderForChain(MAINNET);\n\n  return useQuery({\n    queryKey: ['rates-mainnet'],\n    enabled: Boolean(mainnetProvider),\n    queryFn: async function () {\n      if (!mainnetProvider) {\n        throw 'Mainnet provider missing';\n      }\n      const { address, abi } = await import(\n        '@synthetixio/contracts/build/mainnet/deployment/ExchangeRates'\n      );\n      const ExchangeRates = new Contract(address, abi, mainnetProvider);\n\n      const result = await ExchangeRates.ratesForCurrencies([\n        formatBytes32String('SNX'),\n        formatBytes32String('ETH'),\n      ]);\n      return {\n        snx: wei(result[0] || 0),\n        eth: wei(result[1] || 0),\n      };\n    },\n    staleTime: 60_000,\n    refetchInterval: 60_000,\n  });\n}\n","import {\n  CloseButton,\n  Divider,\n  Flex,\n  Heading,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalOverlay,\n  Text,\n} from '@chakra-ui/react';\nimport { FC, useEffect, useState } from 'react';\nimport { Network } from '@snx-v3/useBlockchain';\nimport { StepIntro } from './StepIntro';\nimport { StepExplain } from './StepExplain';\nimport { StepSummary } from './StepSummary';\nimport { useQueryClient } from '@tanstack/react-query';\ninterface Props {\n  network: Network;\n  onClose: () => void;\n  onSuccess: (accountId: string) => void;\n  isOpen: boolean;\n}\n\nexport const MigrationDialog: FC<Props> = ({ network, onClose, isOpen, onSuccess }) => {\n  const queryClient = useQueryClient();\n  const [step, setStep] = useState(0);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setStep(0);\n    }\n  }, [isOpen]);\n\n  return (\n    <Modal size=\"lg\" isOpen={isOpen} onClose={onClose} closeOnOverlayClick={false}>\n      <ModalOverlay />\n      <ModalContent mt=\"100px\" borderWidth=\"1px\" borderColor=\"gray.900\" bg=\"navy.900\" color=\"white\">\n        <Flex justifyContent=\"space-between\" p={6} alignItems=\"center\">\n          <Heading fontSize=\"20px\">\n            Migrate to Synthetix V3 on{' '}\n            <Text as=\"span\" textTransform=\"capitalize\">\n              {network.name}\n            </Text>\n          </Heading>\n          <CloseButton onClick={onClose} color=\"gray\" />\n        </Flex>\n        <Flex width=\"100%\" px={6}>\n          <Divider borderColor=\"gray.900\" mb={6} colorScheme=\"gray\" />\n        </Flex>\n        <ModalBody pt={0} pb={6}>\n          {step === 0 && <StepIntro onConfirm={() => setStep(1)} onClose={onClose} />}\n          {step === 1 && <StepExplain onConfirm={() => setStep(2)} onClose={() => setStep(0)} />}\n          {step === 2 && (\n            <StepSummary\n              onConfirm={(accountId) => {\n                queryClient.invalidateQueries({\n                  queryKey: [`${network?.id}-${network?.preset}`, 'V2Position'],\n                });\n\n                onSuccess(accountId);\n                onClose();\n              }}\n              onClose={onClose}\n              network={network}\n            />\n          )}\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n","import {\n  Alert,\n  AlertIcon,\n  Button,\n  Divider,\n  Fade,\n  Flex,\n  Heading,\n  Image,\n  Link,\n  Text,\n} from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { Network, useNetwork, useWallet } from '@snx-v3/useBlockchain';\nimport { type HomePageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useV2Position } from '@snx-v3/useV2Position';\nimport React from 'react';\nimport { MigrateUSDModal } from '../MigrateUSD/MigrateUSDModal';\nimport { MigrationDialog } from './MigrationDialog';\n\nexport function MigrationBanner({\n  network,\n  type = 'banner',\n}: {\n  network: Network;\n  type?: 'banner' | 'alert';\n}) {\n  const [params, setParams] = useParams<HomePageSchemaType>();\n\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [accountId, setAccountId] = React.useState('');\n  const [isUSDModalOpen, setIsUSDModalOpen] = React.useState(false);\n  const { data } = useV2Position(network);\n  const { network: currentNetwork, setNetwork } = useNetwork();\n  const { connect, activeWallet } = useWallet();\n\n  const onClick = React.useCallback(async () => {\n    try {\n      if (!activeWallet) {\n        connect();\n        return;\n      }\n\n      if (!currentNetwork || currentNetwork.id !== network.id) {\n        if (!(await setNetwork(network.id))) {\n          return;\n        }\n      }\n\n      setIsOpen(true);\n    } catch (error) {}\n  }, [activeWallet, connect, currentNetwork, network.id, setNetwork]);\n\n  React.useEffect(() => {\n    if (params.migrate?.toLowerCase() === 'snx') {\n      setIsOpen(true);\n      const { migrate: _migrate, ...newParams } = params;\n      setParams(newParams);\n    }\n  }, [params, setParams]);\n\n  return (\n    <>\n      <MigrationDialog\n        onSuccess={(accountId) => {\n          setAccountId(accountId);\n          setIsUSDModalOpen(true);\n        }}\n        network={network}\n        onClose={() => setIsOpen(false)}\n        isOpen={isOpen}\n      />\n      <MigrateUSDModal\n        network={network}\n        onClose={() => setIsUSDModalOpen(false)}\n        isOpen={isUSDModalOpen}\n        type=\"migration\"\n        accountId={accountId}\n      />\n\n      {!!data && data?.collateral.gt(0) && data.debt.gt(0) && (\n        <Fade in>\n          {type === 'banner' && (\n            <>\n              <Divider my={4} />\n\n              <Flex justifyContent={['center', 'space-between']} w=\"100%\" flexWrap=\"wrap\" gap={4}>\n                <Image src=\"/Rocket.png\" />\n\n                <Flex mt={1} flex={1} alignItems=\"flex-start\" flexDir=\"column\" gap={6}>\n                  <Heading fontSize=\"20px\" fontWeight={700} color=\"white\">\n                    You have a <Amount value={data?.collateral} /> SNX position on Synthetix V2 on{' '}\n                    <Text as=\"span\" textTransform=\"capitalize\">\n                      {network.name}\n                    </Text>\n                  </Heading>\n                  <Text maxW=\"484px\" fontSize=\"14px\" color=\"gray.500\">\n                    Migrate your SNX to Synthetix V3 to earn fees from both V2 and V3 markets and\n                    much more.\n                  </Text>\n                </Flex>\n\n                <Flex mt=\"auto\" alignItems=\"flex-center\" gap={2}>\n                  <Button\n                    fontSize=\"sm\"\n                    fontWeight={700}\n                    colorScheme=\"gray\"\n                    variant=\"outline\"\n                    onClick={onClick}\n                  >\n                    {!activeWallet\n                      ? 'Connect'\n                      : currentNetwork?.id !== network.id\n                        ? 'Switch Network'\n                        : 'Migrate to V3'}\n                  </Button>\n                  <Link\n                    href=\"https://blog.synthetix.io/synthetix-v3-migration-treasury-council-initiates-transition/\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                  >\n                    <Button fontSize=\"sm\" fontWeight={700} variant=\"outline\" colorScheme=\"gray\">\n                      Learn More\n                    </Button>\n                  </Link>\n                </Flex>\n              </Flex>\n            </>\n          )}\n\n          {type === 'alert' ? (\n            <Alert mb={6} borderLeftColor=\"cyan.500\" borderRadius=\"6px\">\n              <AlertIcon color=\"cyan.500\" />\n              <Text color=\"white\" fontFamily=\"heading\" fontSize=\"16px\" lineHeight=\"24px\">\n                You have a <Amount value={data?.collateral} /> SNX active staking position on V2 on{' '}\n                <Text as=\"span\" textTransform=\"capitalize\">\n                  {network.name}\n                </Text>\n                .{' '}\n                <Text onClick={onClick} as=\"span\" color=\"cyan.500\" cursor=\"pointer\">\n                  Migrate to V3\n                </Text>\n              </Text>\n            </Alert>\n          ) : null}\n        </Fade>\n      )}\n    </>\n  );\n}\n","export async function importPythFeeds(chainId?: number, preset?: string): Promise<string[]> {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: pythFeeds }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/pythFeeds.json'),\n      ]);\n      return pythFeeds;\n    }\n    case '11155111-main': {\n      const [{ default: pythFeeds }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/pythFeeds.json'),\n      ]);\n      return pythFeeds;\n    }\n    case '10-main': {\n      const [{ default: pythFeeds }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/pythFeeds.json'),\n      ]);\n      return pythFeeds;\n    }\n    case '8453-andromeda': {\n      const [{ default: pythFeeds }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/pythFeeds.json'),\n      ]);\n      return pythFeeds;\n    }\n    case '84532-andromeda': {\n      const [{ default: pythFeeds }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/pythFeeds.json'),\n      ]);\n      return pythFeeds;\n    }\n    case '42161-main': {\n      const [{ default: pythFeeds }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/pythFeeds.json'),\n      ]);\n      return pythFeeds;\n    }\n    case '421614-main': {\n      const [{ default: pythFeeds }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/pythFeeds.json'),\n      ]);\n      return pythFeeds;\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for pythFeeds`);\n    }\n  }\n}\n","// [\n//   \"constructor()\",\n//   \"error InsufficientFee()\",\n//   \"error InvalidArgument()\",\n//   \"error InvalidGovernanceDataSource()\",\n//   \"error InvalidGovernanceMessage()\",\n//   \"error InvalidGovernanceTarget()\",\n//   \"error InvalidUpdateData()\",\n//   \"error InvalidUpdateDataSource()\",\n//   \"error InvalidWormholeAddressToSet()\",\n//   \"error InvalidWormholeVaa()\",\n//   \"error NoFreshUpdate()\",\n//   \"error OldGovernanceMessage()\",\n//   \"error PriceFeedNotFound()\",\n//   \"error PriceFeedNotFoundWithinRange()\",\n//   \"error StalePrice()\",\n//   \"event AdminChanged(address previousAdmin, address newAdmin)\",\n//   \"event BatchPriceFeedUpdate(uint16 chainId, uint64 sequenceNumber)\",\n//   \"event BeaconUpgraded(address indexed beacon)\",\n//   \"event ContractUpgraded(address oldImplementation, address newImplementation)\",\n//   \"event DataSourcesSet(tuple(uint16 chainId, bytes32 emitterAddress)[] oldDataSources, tuple(uint16 chainId, bytes32 emitterAddress)[] newDataSources)\",\n//   \"event FeeSet(uint256 oldFee, uint256 newFee)\",\n//   \"event GovernanceDataSourceSet(tuple(uint16 chainId, bytes32 emitterAddress) oldDataSource, tuple(uint16 chainId, bytes32 emitterAddress) newDataSource, uint64 initialSequence)\",\n//   \"event Initialized(uint8 version)\",\n//   \"event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)\",\n//   \"event PriceFeedUpdate(bytes32 indexed id, uint64 publishTime, int64 price, uint64 conf)\",\n//   \"event Upgraded(address indexed implementation)\",\n//   \"event ValidPeriodSet(uint256 oldValidPeriod, uint256 newValidPeriod)\",\n//   \"event WormholeAddressSet(address oldWormholeAddress, address newWormholeAddress)\",\n//   \"function chainId() view returns (uint16)\",\n//   \"function executeGovernanceInstruction(bytes encodedVM)\",\n//   \"function getEmaPrice(bytes32 id) view returns (tuple(int64 price, uint64 conf, int32 expo, uint256 publishTime) price)\",\n//   \"function getEmaPriceNoOlderThan(bytes32 id, uint256 age) view returns (tuple(int64 price, uint64 conf, int32 expo, uint256 publishTime) price)\",\n//   \"function getEmaPriceUnsafe(bytes32 id) view returns (tuple(int64 price, uint64 conf, int32 expo, uint256 publishTime) price)\",\n//   \"function getPrice(bytes32 id) view returns (tuple(int64 price, uint64 conf, int32 expo, uint256 publishTime) price)\",\n//   \"function getPriceNoOlderThan(bytes32 id, uint256 age) view returns (tuple(int64 price, uint64 conf, int32 expo, uint256 publishTime) price)\",\n//   \"function getPriceUnsafe(bytes32 id) view returns (tuple(int64 price, uint64 conf, int32 expo, uint256 publishTime) price)\",\n//   \"function getUpdateFee(bytes[] updateData) view returns (uint256 feeAmount)\",\n//   \"function getUpdateFee(uint256 updateDataSize) view returns (uint256 feeAmount)\",\n//   \"function getValidTimePeriod() view returns (uint256)\",\n//   \"function governanceDataSource() view returns (tuple(uint16 chainId, bytes32 emitterAddress))\",\n//   \"function governanceDataSourceIndex() view returns (uint32)\",\n//   \"function hashDataSource(tuple(uint16 chainId, bytes32 emitterAddress) ds) pure returns (bytes32)\",\n//   \"function initialize(address wormhole, uint16[] dataSourceEmitterChainIds, bytes32[] dataSourceEmitterAddresses, uint16 governanceEmitterChainId, bytes32 governanceEmitterAddress, uint64 governanceInitialSequence, uint256 validTimePeriodSeconds, uint256 singleUpdateFeeInWei)\",\n//   \"function isValidDataSource(uint16 dataSourceChainId, bytes32 dataSourceEmitterAddress) view returns (bool)\",\n//   \"function isValidGovernanceDataSource(uint16 governanceChainId, bytes32 governanceEmitterAddress) view returns (bool)\",\n//   \"function lastExecutedGovernanceSequence() view returns (uint64)\",\n//   \"function latestPriceInfoPublishTime(bytes32 priceId) view returns (uint64)\",\n//   \"function owner() view returns (address)\",\n//   \"function parseAuthorizeGovernanceDataSourceTransferPayload(bytes encodedPayload) pure returns (tuple(bytes claimVaa) sgds)\",\n//   \"function parseGovernanceInstruction(bytes encodedInstruction) pure returns (tuple(uint8 module, uint8 action, uint16 targetChainId, bytes payload) gi)\",\n//   \"function parsePriceFeedUpdates(bytes[] updateData, bytes32[] priceIds, uint64 minPublishTime, uint64 maxPublishTime) payable returns (tuple(bytes32 id, tuple(int64 price, uint64 conf, int32 expo, uint256 publishTime) price, tuple(int64 price, uint64 conf, int32 expo, uint256 publishTime) emaPrice)[] priceFeeds)\",\n//   \"function parsePriceFeedUpdatesUnique(bytes[] updateData, bytes32[] priceIds, uint64 minPublishTime, uint64 maxPublishTime) payable returns (tuple(bytes32 id, tuple(int64 price, uint64 conf, int32 expo, uint256 publishTime) price, tuple(int64 price, uint64 conf, int32 expo, uint256 publishTime) emaPrice)[] priceFeeds)\",\n//   \"function parseRequestGovernanceDataSourceTransferPayload(bytes encodedPayload) pure returns (tuple(uint32 governanceDataSourceIndex) sgdsClaim)\",\n//   \"function parseSetDataSourcesPayload(bytes encodedPayload) pure returns (tuple(tuple(uint16 chainId, bytes32 emitterAddress)[] dataSources) sds)\",\n//   \"function parseSetFeePayload(bytes encodedPayload) pure returns (tuple(uint256 newFee) sf)\",\n//   \"function parseSetValidPeriodPayload(bytes encodedPayload) pure returns (tuple(uint256 newValidPeriod) svp)\",\n//   \"function parseSetWormholeAddressPayload(bytes encodedPayload) pure returns (tuple(address newWormholeAddress) sw)\",\n//   \"function parseUpgradeContractPayload(bytes encodedPayload) pure returns (tuple(address newImplementation) uc)\",\n//   \"function priceFeedExists(bytes32 id) view returns (bool)\",\n//   \"function proxiableUUID() view returns (bytes32)\",\n//   \"function pythUpgradableMagic() pure returns (uint32)\",\n//   \"function queryPriceFeed(bytes32 id) view returns (tuple(bytes32 id, tuple(int64 price, uint64 conf, int32 expo, uint256 publishTime) price, tuple(int64 price, uint64 conf, int32 expo, uint256 publishTime) emaPrice) priceFeed)\",\n//   \"function renounceOwnership()\",\n//   \"function singleUpdateFeeInWei() view returns (uint256)\",\n//   \"function transferOwnership(address newOwner)\",\n//   \"function updatePriceFeeds(bytes[] updateData) payable\",\n//   \"function updatePriceFeedsIfNecessary(bytes[] updateData, bytes32[] priceIds, uint64[] publishTimes) payable\",\n//   \"function upgradeTo(address newImplementation)\",\n//   \"function upgradeToAndCall(address newImplementation, bytes data) payable\",\n//   \"function validDataSources() view returns (tuple(uint16 chainId, bytes32 emitterAddress)[])\",\n//   \"function validTimePeriodSeconds() view returns (uint256)\",\n//   \"function version() pure returns (string)\",\n//   \"function wormhole() view returns (address)\"\n// ]\nconst abi = ['function updatePriceFeeds(bytes[] updateData) payable'];\n\nexport async function importPythVerifier(\n  chainId?: number,\n  preset?: string\n): Promise<{ address: string; abi: string[] }> {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n\n  switch (deployment) {\n    case '1-main': {\n      return {\n        address: '0x4305FB66699C3B2702D4d05CF36551390A4c69C6',\n        abi,\n      };\n    }\n    case '11155111-main': {\n      return {\n        address: '0xDd24F84d36BF92C65F92307595335bdFab5Bbd21',\n        abi,\n      };\n    }\n    case '10-main': {\n      return {\n        address: '0xff1a0f4744e8582DF1aE09D5611b887B6a12925C',\n        abi,\n      };\n    }\n    case '8453-andromeda': {\n      return {\n        address: '0x8250f4aF4B972684F7b336503E2D6dFeDeB1487a',\n        abi,\n      };\n    }\n    case '84532-andromeda': {\n      return {\n        address: '0xA2aa501b19aff244D90cc15a4Cf739D2725B5729',\n        abi,\n      };\n    }\n    case '42161-main': {\n      return {\n        address: '0xff1a0f4744e8582DF1aE09D5611b887B6a12925C',\n        abi,\n      };\n    }\n    case '421614-main': {\n      return {\n        address: '0x4374e5a8b9C22271E9EB878A2AA31DE97DF15DAF',\n        abi,\n      };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for Extras`);\n    }\n  }\n}\n","import { getAprUrl } from '@snx-v3/constants';\nimport { ARBITRUM, BASE_ANDROMEDA, MAINNET, Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useApr(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const chain = customNetwork || network;\n\n  return useQuery({\n    queryKey: ['apr', chain?.id],\n    queryFn: async () => {\n      try {\n        return await fetchApr(chain?.id);\n      } catch (error) {\n        return;\n      }\n    },\n    staleTime: 60000,\n    enabled: Boolean(chain?.id),\n  });\n}\n\nconst supportedAprNetworks = [BASE_ANDROMEDA.id, ARBITRUM.id, MAINNET.id];\n\nexport async function fetchApr(networkId?: number) {\n  try {\n    const isSupported = networkId && supportedAprNetworks.includes(networkId);\n    if (!isSupported) {\n      throw new Error('Apr endpoint not supported for this network');\n    }\n\n    const response = await fetch(getAprUrl(networkId));\n\n    const data = await response.json();\n\n    const highestAprCollateral = data?.sort(\n      (a: { apr7d: number }, b: { apr7d: number }) => b.apr7d - a.apr7d\n    )[0];\n\n    return {\n      combinedApr: highestAprCollateral.apr7d * 100,\n      cumulativePnl: isSupported ? highestAprCollateral.cumulativePnl : 0,\n      collateralAprs: data,\n    };\n  } catch (error) {\n    console.error(error);\n    return {\n      combinedApr: 0,\n      cumulativePnl: 0,\n      collateralAprs: [],\n    };\n  }\n}\n","import { getSubgraphUrl, POOL_ID } from '@snx-v3/constants';\nimport { fetchApr } from '@snx-v3/useApr';\nimport { ARBITRUM, BASE_ANDROMEDA, MAINNET, NETWORKS } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function usePoolsList() {\n  return useQuery({\n    queryKey: ['poolsList'],\n    queryFn: async () => {\n      try {\n        const [pools, aprs] = await Promise.all([fetchPoolsList(), fetchAprs()]);\n\n        const synthetixPools = pools.map((p, i) => ({\n          ...p,\n          apr: aprs[i],\n        }));\n\n        return { synthetixPools };\n      } catch (error) {\n        throw error;\n      }\n    },\n    staleTime: 60000 * 10,\n  });\n}\n\nexport function usePool(networkId?: number) {\n  const { data, isPending } = usePoolsList();\n\n  return {\n    data: data?.synthetixPools.find(\n      (p) => p?.network?.id === networkId && p?.poolInfo?.[0]?.pool?.id === POOL_ID\n    ),\n    isPending,\n  };\n}\n\nconst supportedNetworks = [MAINNET.id, BASE_ANDROMEDA.id, ARBITRUM.id];\n\nexport const networksOffline = NETWORKS.filter(\n  (n) => supportedNetworks.includes(n.id) && n.isSupported\n).map((n) => n);\n\nasync function fetchAprs() {\n  return Promise.all(networksOffline.map((network) => fetchApr(network.id)));\n}\n\nasync function fetchPoolsList() {\n  const urls = networksOffline.map((network) => getSubgraphUrl(network.name));\n\n  // Fetch all the pools from the subgraphs\n  const responses = await Promise.all(\n    urls.map((url) =>\n      fetch(url, { method: 'POST', body: JSON.stringify({ query: PoolsListData }) }).then((res) =>\n        res.json()\n      )\n    )\n  );\n\n  return responses.map((response, i) => ({\n    network: networksOffline[i],\n    poolInfo: (response?.data?.vaults ?? []) as PoolInfo[],\n  }));\n}\n\nconst gql = (data: TemplateStringsArray) => data[0];\n\nconst PoolsListData = gql`\n  query PoolsListData {\n    vaults(where: { pool: \"1\" }) {\n      collateral_type {\n        id\n        oracle_node_id\n        total_amount_deposited\n      }\n      pool {\n        name\n        id\n      }\n    }\n  }\n`;\n\ninterface PoolInfo {\n  collateral_type: {\n    id: string;\n    oracle_node_id: string;\n    total_amount_deposited: string;\n  };\n  pool: {\n    name: string;\n    id: string;\n  };\n}\n","import { EvmPriceServiceConnection } from '@pythnetwork/pyth-evm-js';\nimport { offchainMainnetEndpoint } from '@snx-v3/constants';\nimport {\n  importExtras,\n  importPythERC7412Wrapper,\n  importPythFeeds,\n  importPythVerifier,\n  importTrustedMulticallForwarder,\n} from '@snx-v3/contracts';\nimport { parseUnits } from '@snx-v3/format';\nimport { Network, useNetwork, useProvider, useWallet } from '@snx-v3/useBlockchain';\nimport { networksOffline } from '@snx-v3/usePoolsList';\nimport { wei } from '@synthetixio/wei';\nimport { useQuery } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\n\nconst priceService = new EvmPriceServiceConnection(offchainMainnetEndpoint);\n\nfunction getAllPriceIdsEntries(extras: any) {\n  return Array.from(\n    new Set(\n      Object.entries(extras).filter(\n        ([key, value]) =>\n          String(value).length === 66 &&\n          (key.startsWith('pyth_feed_id_') || (key.startsWith('pyth') && key.endsWith('FeedId')))\n      )\n    )\n  );\n}\n\nexport async function getPythFeedIds(network: Network) {\n  return await importPythFeeds(network.id, network.preset);\n}\n\nasync function getPythFeedIdsFromCollateralList(\n  collateralList: {\n    symbol: string;\n  }[]\n) {\n  const extras = await Promise.all(\n    networksOffline.map((network) => importExtras(network.id, network.preset))\n  );\n\n  // Go over extras and find everything that starts with pyth and ends with FeedId, store in array\n  const priceIds = extras.map(getAllPriceIdsEntries).flat();\n\n  const deduped = Array.from(\n    new Set(\n      priceIds\n        .map(([key, priceId]) => {\n          if (key.startsWith('pyth_feed_id_')) {\n            return {\n              symbol: key.replace('pyth_feed_id_', '').toUpperCase(),\n              priceId,\n            };\n          }\n          if (key.startsWith('pyth') && key.endsWith('FeedId')) {\n            return {\n              symbol: key.replace('pyth', '').replace('FeedId', '').toUpperCase(),\n              priceId,\n            };\n          }\n          return { symbol: null, priceId: null };\n        })\n        .filter(({ symbol, priceId }) => symbol && priceId)\n    )\n  );\n\n  // Find the corresponding price feed id for each symbol\n  return collateralList.map((collateral) => {\n    const symbol = collateral.symbol === 'WETH' ? 'ETH' : collateral.symbol;\n    const id = deduped.find((x) => x.symbol?.toUpperCase() === symbol.toUpperCase());\n    return {\n      ...collateral,\n      priceId: id?.priceId,\n    };\n  });\n}\n\nexport const getPriceUpdates = async (priceIds: string[], network: Network) => {\n  if (!priceIds.length) {\n    return null;\n  }\n  const unique = Array.from(new Set(priceIds));\n  const signedOffchainData = await priceService.getPriceFeedsUpdateData(unique);\n  const PythVerfier = await importPythVerifier(network.id, network.preset);\n\n  return {\n    to: PythVerfier.address,\n    data: new ethers.utils.Interface(PythVerfier.abi).encodeFunctionData('updatePriceFeeds', [\n      signedOffchainData,\n    ]),\n    value: unique.length,\n  };\n};\n\ninterface Collaterals {\n  symbol: string;\n  oracleId: string;\n  id: string;\n}\n\nexport const useOfflinePrices = (collaterals?: Collaterals[]) => {\n  return useQuery({\n    queryKey: ['offline-prices', collaterals?.map((collateral) => collateral.id).join('-')],\n    enabled: Boolean(collaterals && collaterals.length > 0),\n    queryFn: async (): Promise<{ symbol: string; price: ethers.BigNumber }[]> => {\n      if (!collaterals) {\n        throw 'useOfflinePrices is missing required data';\n      }\n\n      const stables = ['sUSDC', 'USDC'];\n      const filteredCollaterals = collaterals.filter((item) => !stables.includes(item.symbol));\n\n      const returnData = [\n        {\n          symbol: 'sUSDC',\n          price: wei(1).toBN(),\n        },\n        {\n          symbol: 'USDC',\n          price: wei(1).toBN(),\n        },\n        {\n          symbol: 'USDx',\n          price: wei(1).toBN(),\n        },\n      ];\n\n      if (!filteredCollaterals.length) {\n        return returnData;\n      }\n\n      const collateralsWithPriceId = await getPythFeedIdsFromCollateralList(filteredCollaterals);\n      const prices = await priceService.getLatestPriceFeeds(\n        collateralsWithPriceId.map((x) => x.priceId) as string[]\n      );\n      prices?.forEach((item) => {\n        const col = collateralsWithPriceId.find(({ priceId }) => priceId === `0x${item.id}`);\n        const price = item.getPriceUnchecked();\n        if (col) {\n          returnData.push({\n            symbol: col.symbol,\n            price: parseUnits(price.price, 18 + price.expo),\n          });\n        }\n      });\n      return returnData;\n    },\n    refetchInterval: 60_000,\n  });\n};\n\nexport const useCollateralPriceUpdates = (customNetwork?: Network) => {\n  const { network: currentNetwork } = useNetwork();\n  const network = customNetwork || currentNetwork;\n  const provider = useProvider();\n  const { activeWallet } = useWallet();\n  const walletAddress = activeWallet?.address;\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'PriceUpdates', { walletAddress }],\n    enabled: Boolean(network && provider && activeWallet),\n    queryFn: async () => {\n      const stalenessTolerance = 1600;\n      if (!(network && provider && activeWallet)) {\n        throw 'OMG';\n      }\n\n      try {\n        const { address: multicallAddress, abi: multiCallAbi } =\n          await importTrustedMulticallForwarder(network.id, network.preset);\n\n        const multicallInterface = new ethers.utils.Interface(multiCallAbi);\n        const pythInterface = new ethers.utils.Interface([\n          'function getLatestPrice(bytes32 priceId, uint256 stalenessTolerance) external view returns (int256)',\n        ]);\n\n        const pythFeedIds = (await getPythFeedIds(network)) as string[];\n        if (window.localStorage.getItem('DEBUG') === 'true') {\n          // eslint-disable-next-line no-console\n          console.log('[useCollateralPriceUpdates]', { pythFeedIds });\n        }\n\n        if (pythFeedIds.length === 0) {\n          return null;\n        }\n\n        const { address } = await importPythERC7412Wrapper(network.id, network.preset);\n\n        const txs = [\n          ...pythFeedIds.map((priceId) => ({\n            target: address,\n            callData: pythInterface.encodeFunctionData('getLatestPrice', [\n              priceId,\n              stalenessTolerance,\n            ]),\n            value: 0,\n            requireSuccess: false,\n          })),\n        ];\n\n        const getPricesTx = multicallInterface.encodeFunctionData('aggregate3Value', [txs]);\n\n        const result = await provider.call({\n          data: getPricesTx,\n          to: multicallAddress,\n        });\n\n        const decodedMultiCall: { success: boolean }[] = multicallInterface.decodeFunctionResult(\n          'aggregate3Value',\n          result || ''\n        )[0];\n\n        const outdatedPriceIds: string[] = [];\n\n        decodedMultiCall.forEach(({ success }, i) => {\n          if (!success) {\n            outdatedPriceIds.push(pythFeedIds[i]);\n          }\n        });\n        if (window.localStorage.getItem('DEBUG') === 'true') {\n          // eslint-disable-next-line no-console\n          console.log('[useCollateralPriceUpdates]', { outdatedPriceIds });\n        }\n\n        if (outdatedPriceIds.length) {\n          const priceUpdateTx = (await getPriceUpdates(outdatedPriceIds, network).catch(\n            () => undefined\n          )) as any;\n          if (priceUpdateTx) {\n            return {\n              ...priceUpdateTx,\n              from: walletAddress,\n            };\n          }\n        }\n\n        return null;\n      } catch (error) {\n        return null;\n      }\n    },\n    refetchInterval: 120_000,\n  });\n};\n","export async function importExtras(\n  chainId?: number,\n  preset?: string\n): Promise<{\n  [key: string]: string;\n}> {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: extras }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/extras.json'),\n      ]);\n      return extras;\n    }\n    case '11155111-main': {\n      const [{ default: extras }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/extras.json'),\n      ]);\n      return extras;\n    }\n    case '10-main': {\n      const [{ default: extras }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/extras.json'),\n      ]);\n      return extras;\n    }\n    case '8453-andromeda': {\n      const [{ default: extras }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/extras.json'),\n      ]);\n      return extras;\n    }\n    case '84532-andromeda': {\n      const [{ default: extras }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/extras.json'),\n      ]);\n      return extras;\n    }\n    case '42161-main': {\n      const [{ default: extras }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/extras.json'),\n      ]);\n      return extras;\n    }\n    case '421614-main': {\n      const [{ default: extras }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/extras.json'),\n      ]);\n      return extras;\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for Extras`);\n    }\n  }\n}\n","export async function importSpotMarketProxy(\n  chainId?: number,\n  preset?: string\n): Promise<{ address: string; abi: string[] }> {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/meta.json'),\n        import('@synthetixio/v3-contracts/1-main/SpotMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.SpotMarketProxy, abi };\n    }\n    case '11155111-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/meta.json'),\n        import('@synthetixio/v3-contracts/11155111-main/SpotMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.SpotMarketProxy, abi };\n    }\n    case '10-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/meta.json'),\n        import('@synthetixio/v3-contracts/10-main/SpotMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.SpotMarketProxy, abi };\n    }\n    case '8453-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/8453-andromeda/SpotMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.SpotMarketProxy, abi };\n    }\n    case '84532-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/84532-andromeda/SpotMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.SpotMarketProxy, abi };\n    }\n    case '42161-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/meta.json'),\n        import('@synthetixio/v3-contracts/42161-main/SpotMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.SpotMarketProxy, abi };\n    }\n    case '421614-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/meta.json'),\n        import('@synthetixio/v3-contracts/421614-main/SpotMarketProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.SpotMarketProxy, abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for SpotMarketProxy`);\n    }\n  }\n}\n","// This is a type guard function that checks if a value is not null and not undefined.\n// This is useful when filtering an array that might have null or undefined values.\nexport const notNil = <T>(x: T | null | undefined): x is T => x !== null && x !== undefined;\n","/* eslint-disable no-console */\nimport { EvmPriceServiceConnection } from '@pythnetwork/pyth-evm-js';\nimport { offchainMainnetEndpoint, offchainTestnetEndpoint } from '@snx-v3/constants';\nimport {\n  importAccountProxy,\n  importAllErrors,\n  importClosePosition,\n  importCoreProxy,\n  importPythERC7412Wrapper,\n  importPythVerifier,\n  importSpotMarketProxy,\n  importTrustedMulticallForwarder,\n  importUSDProxy,\n} from '@snx-v3/contracts';\nimport { extractErrorData, PYTH_ERRORS } from '@snx-v3/parseContractError';\nimport { notNil } from '@snx-v3/tsHelpers';\nimport { deploymentHasERC7412, Network } from '@snx-v3/useBlockchain';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\n\nasync function fetchOffchainData({\n  priceIds,\n  isTestnet,\n}: {\n  priceIds: string[];\n  isTestnet: boolean;\n}) {\n  const priceService = new EvmPriceServiceConnection(\n    isTestnet ? offchainTestnetEndpoint : offchainMainnetEndpoint\n  );\n  const signedOffchainData = await priceService.getPriceFeedsUpdateData(priceIds);\n  return signedOffchainData;\n}\n\nfunction parseError(\n  errorData: any,\n  AllErrors: { abi: string[] }\n): { name: string; args: any } | undefined {\n  if (`${errorData}`.startsWith('0x08c379a0')) {\n    const content = `0x${errorData.substring(10)}`;\n    // reason: string; for standard revert error string\n    const reason = ethers.utils.defaultAbiCoder.decode(['string'], content);\n    console.error(reason);\n    return {\n      name: `Revert ${reason[0]}`,\n      args: [],\n    };\n  }\n\n  let flatErrorsData = errorData;\n  // let's cleanup nested Errors[]\n  if (`${errorData}`.startsWith('0x0b42fd17')) {\n    const [lastChunk] = errorData.split('0b42fd17').slice(-1);\n    flatErrorsData = `0x0b42fd17${lastChunk}`;\n  }\n  try {\n    const AllErrorsInterface = new ethers.utils.Interface(\n      Array.from(new Set([...AllErrors.abi, ...PYTH_ERRORS]))\n    );\n    return AllErrorsInterface.parseError(flatErrorsData);\n  } catch (error) {\n    console.error(`Error parsing failure: ${error}`);\n    return {\n      name: 'Unknown',\n      args: [],\n    };\n  }\n}\n\n// simulate w/ wETH contract because it will have eth balance\n// This is useful when we do read/static calls but still need an balance for the price update\n// TODO: this probably need to be network aware, maybe look into a different solution even.\nexport const getDefaultFromAddress = (chainName: string) => {\n  switch (chainName) {\n    case 'cannon':\n      return '0x4200000000000000000000000000000000000006'; // TODO, unclear what to put here\n    case 'mainnet':\n      return '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2';\n    case 'sepolia':\n      return '0x7b79995e5f793a07bc00c21412e50ecae098e7f9';\n    case 'arbitrum':\n      return '0x82aF49447D8a07e3bd95BD0d56f35241523fBab1';\n    case 'arbitrum-sepolia':\n      return '0x980B62Da83eFf3D4576C647993b0c1D7faf17c73';\n    case 'optimism-mainnet':\n    case 'base':\n    case 'base-sepolia':\n      return '0x4200000000000000000000000000000000000006';\n\n    default:\n      throw new Error(`Unsupported chain ${chainName}`);\n  }\n};\n\nfunction dedupedAbi(abi: string[]) {\n  const deduped = new Set();\n  const readableAbi: string[] = [];\n  abi.forEach((line: string) => {\n    const fragment = ethers.utils.Fragment.from(line);\n    if (fragment && (fragment.type === 'error' || fragment.type === 'function')) {\n      const minimal = fragment.format(ethers.utils.FormatTypes.sighash);\n      if (!deduped.has(minimal)) {\n        readableAbi.push(fragment.format(ethers.utils.FormatTypes.full));\n        deduped.add(minimal);\n      }\n    }\n  });\n  return readableAbi;\n}\n\nexport async function logMulticall({\n  network,\n  calls,\n  label,\n}: {\n  network: Network;\n  calls: (ethers.PopulatedTransaction & { requireSuccess?: boolean })[];\n  label: string;\n}) {\n  const log = debug(`snx:withERC7412:${label}`);\n  if (!log.enabled) {\n    return;\n  }\n  const CoryProxyContract = await importCoreProxy(network.id, network.preset);\n  const SpotMarketProxy = await importSpotMarketProxy(network.id, network.preset);\n  const AccountProxyContract = await importAccountProxy(network.id, network.preset);\n  const USDProxyContract = await importUSDProxy(network.id, network.preset);\n  const ClosePositionContract = await importClosePosition(network.id, network.preset).catch(\n    () => undefined\n  );\n  const PythERC7412Wrapper = await importPythERC7412Wrapper(network.id, network.preset).catch(\n    () => undefined\n  );\n  const PythVerfier = await importPythVerifier(network.id, network.preset);\n  const AllInterface = new ethers.utils.Interface(\n    dedupedAbi([\n      ...CoryProxyContract.abi,\n      ...SpotMarketProxy.abi,\n      ...AccountProxyContract.abi,\n      ...USDProxyContract.abi,\n      ...(ClosePositionContract ? ClosePositionContract.abi : []),\n      ...(PythERC7412Wrapper ? PythERC7412Wrapper.abi : []),\n      ...PythVerfier.abi,\n    ])\n  );\n  log(\n    'multicall calls',\n    calls.map(({ data, value, ...rest }) => {\n      try {\n        // @ts-ignore\n        const { name, args } = AllInterface.parseTransaction({ data, value });\n        if (Object.keys(args).filter(([key]) => `${key}` !== `${parseInt(key)}`).length > 0) {\n          const namedArgs = Object.fromEntries(\n            Object.entries(args).filter(([key]) => `${key}` !== `${parseInt(key)}`)\n          );\n          return { $: name, ...namedArgs };\n        }\n\n        const unnamedArgs = Object.entries(args)\n          .filter(([key]) => `${key}` === `${parseInt(key)}`)\n          .map(([, value]) => value);\n        return { $: name, ...unnamedArgs };\n      } catch {\n        return { $: 'unknown', data, value, ...rest };\n      }\n    })\n  );\n}\n\nfunction extractPriceId(parsedError: { name: string; args: string[] }) {\n  try {\n    const [_oracleAddress, oracleQuery] = parsedError.args;\n    const [_updateType, _stalenessTolerance, [priceId]] = ethers.utils.defaultAbiCoder.decode(\n      ['uint8', 'uint64', 'bytes32[]'],\n      oracleQuery\n    );\n    return priceId;\n  } catch {\n    // whatever\n  }\n}\n\nasync function getMulticallTransaction(\n  network: Network,\n  calls: (ethers.PopulatedTransaction & { requireSuccess?: boolean })[],\n  from: string,\n  provider: ethers.providers.BaseProvider\n) {\n  const Multicall3Contract = await importTrustedMulticallForwarder(network.id, network.preset);\n  const Multicall3Interface = new ethers.utils.Interface(Multicall3Contract.abi);\n\n  const multicallTxn = {\n    from: from ? from : getDefaultFromAddress(network.name),\n    to: Multicall3Contract.address,\n    data: Multicall3Interface.encodeFunctionData('aggregate3Value', [\n      calls.map((call) => ({\n        target: call.to,\n        callData: call.data,\n        value: call.value ? ethers.BigNumber.from(call.value) : ethers.BigNumber.from(0),\n        requireSuccess: call.requireSuccess ?? true,\n      })),\n    ]),\n    value: calls.reduce(\n      (totalValue, call) => (call.value ? totalValue.add(call.value) : totalValue),\n      ethers.BigNumber.from(0)\n    ),\n  };\n  const gasLimit = await provider.estimateGas(multicallTxn);\n  return { multicallTxn, gasLimit, _calls: calls };\n}\n\n/**\n * If a tx requires ERC7412 pattern, wrap your tx with this function.\n */\nexport const withERC7412 = async (\n  provider: ethers.providers.BaseProvider,\n  network: Network,\n  calls: (ethers.PopulatedTransaction & { requireSuccess?: boolean })[],\n  label: string,\n  from: string\n) => {\n  const log = debug(`snx:withERC7412:${label}`);\n\n  if (!(await deploymentHasERC7412(network.id, network.preset))) {\n    await logMulticall({ network, calls, label });\n    return await getMulticallTransaction(network, calls, from, provider);\n  }\n\n  const AllErrorsContract = await importAllErrors(network.id, network.preset);\n  const ClosePositionContract = await importClosePosition(network.id, network.preset).catch(\n    () => undefined\n  );\n  if (ClosePositionContract) {\n    ClosePositionContract.abi.forEach((line) => AllErrorsContract.abi.push(line));\n  }\n  const PythVerfier = await importPythVerifier(network.id, network.preset);\n\n  while (true) {\n    try {\n      await logMulticall({ network, calls, label });\n      return await getMulticallTransaction(network, calls, from, provider);\n    } catch (error: Error | any) {\n      console.error(error);\n      let errorData = extractErrorData(error);\n      if (!errorData && error.transaction) {\n        try {\n          log('Error is missing revert data, trying provider.call, instead of estimate gas...');\n          // Some wallets swallows the revert reason when calling estimate gas,try to get the error by using provider.call\n          // provider.call wont actually revert, instead the error data is just returned\n          const lookedUpError = await provider.call(error.transaction);\n          errorData = lookedUpError;\n        } catch (newError: any) {\n          // console.error(newError);\n          log('provider.call(error.transaction) failed, trying to extract error', newError);\n          errorData = extractErrorData(error);\n        }\n      }\n      if (!errorData) {\n        throw error;\n      }\n      log('errorData', errorData);\n\n      const parsedError = parseError(errorData, AllErrorsContract);\n      if (!parsedError) {\n        throw error;\n      }\n      log('parsedError', parsedError);\n\n      // Collect all the price IDs that require updates\n      const missingPriceUpdates = [];\n      if (parsedError.name === 'OracleDataRequired') {\n        missingPriceUpdates.push(extractPriceId(parsedError));\n      }\n      if (parsedError.name === 'Errors') {\n        for (const err of parsedError?.args?.[0] ?? []) {\n          try {\n            const parsedErr = parseError(err, AllErrorsContract);\n            if (parsedErr?.name === 'OracleDataRequired') {\n              missingPriceUpdates.push(extractPriceId(parsedErr));\n            }\n          } catch {\n            // whatever\n          }\n        }\n      }\n      const missingPriceUpdatesUnique = Array.from(new Set(missingPriceUpdates));\n      log('missingPriceUpdates', missingPriceUpdatesUnique);\n      if (missingPriceUpdatesUnique.length < 1) {\n        // some other kind of error that's not related to price\n        throw error;\n      }\n\n      const signedOffchainData = await fetchOffchainData({\n        priceIds: missingPriceUpdatesUnique,\n        isTestnet: network.isTestnet,\n      });\n\n      const extraPriceUpdateTxn = {\n        from,\n        to: PythVerfier.address,\n        data: new ethers.utils.Interface(PythVerfier.abi).encodeFunctionData('updatePriceFeeds', [\n          signedOffchainData,\n        ]),\n        value: ethers.BigNumber.from(missingPriceUpdatesUnique.length),\n        requireSuccess: false,\n      };\n      log('extraPriceUpdateTxn', extraPriceUpdateTxn);\n\n      // Update calls to include price update txn\n      // And carry on with our while(true)\n      calls = [extraPriceUpdateTxn, ...calls];\n    }\n  }\n};\n\n/**\n * This can be used to do reads plus decoding. The return type will be whatever the type of the decode function is. And the arguments passed will have the multicall decoded and price updates removed\n */\nexport async function erc7412Call<T>(\n  network: Network,\n  provider: ethers.providers.BaseProvider,\n  calls: (ethers.PopulatedTransaction & { requireSuccess?: boolean })[],\n  decode: (x: { success: boolean; returnData: string }[]) => T,\n  label: string\n) {\n  const log = debug(`snx:withERC7412:${label}`);\n\n  const TrustedMulticallForwarder = await importTrustedMulticallForwarder(\n    network.id,\n    network.preset\n  );\n\n  const from = getDefaultFromAddress(network.name);\n\n  const {\n    _calls: newCalls,\n    multicallTxn: erc7412Tx,\n    gasLimit,\n  } = await withERC7412(\n    provider,\n    network,\n    calls.filter(notNil).map((call) => (call.from ? call : { ...call, from })), // fill missing \"from\"\n    label,\n    from\n  );\n\n  const res = await provider.call({\n    ...erc7412Tx,\n    gasLimit: gasLimit.mul(15).div(10),\n  });\n  if (res === '0x') {\n    throw new Error(`[${label}] Call returned 0x`);\n  }\n\n  const decodedMulticall: { success: boolean; returnData: string }[] = new ethers.utils.Interface(\n    TrustedMulticallForwarder.abi\n  ).decodeFunctionResult('aggregate3Value', res)[0];\n  log('multicall response', decodedMulticall);\n\n  const PythVerifier = await importPythVerifier(network.id, network.preset);\n  const decodedMulticallWithoutPriceUpdates = decodedMulticall\n    // Remove the price updates\n    .filter((_, i) => newCalls?.[i]?.to?.toLowerCase() !== PythVerifier.address?.toLowerCase());\n\n  if (calls.length !== decodedMulticallWithoutPriceUpdates.length) {\n    throw new Error(`[${label}] Unexpected multicall response`);\n  }\n  const decoded = decode(decodedMulticallWithoutPriceUpdates);\n  log(`multicall decoded`, decoded);\n  return decoded;\n}\n","import { importOracleManagerProxy } from '@snx-v3/contracts';\nimport { Network, useNetwork, useProviderForChain } from '@snx-v3/useBlockchain';\nimport { erc7412Call, getDefaultFromAddress } from '@snx-v3/withERC7412';\nimport { Wei, wei } from '@synthetixio/wei';\nimport { useQuery } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\n\nexport async function fetchOraclePrice({\n  targetNetwork,\n  provider,\n  nodeId,\n}: {\n  targetNetwork: Network;\n  provider: ethers.providers.BaseProvider;\n  nodeId: string;\n}): Promise<{ price: Wei; timestamp: Date }> {\n  const OracleManagerProxyContract = await importOracleManagerProxy(\n    targetNetwork.id,\n    targetNetwork.preset\n  );\n  const OracleManagerProxy = new ethers.Contract(\n    OracleManagerProxyContract.address,\n    OracleManagerProxyContract.abi,\n    provider\n  );\n\n  const processCall = await OracleManagerProxy.populateTransaction.process(nodeId);\n  processCall.from = getDefaultFromAddress(targetNetwork?.name || '');\n  const calls = [processCall];\n\n  return await erc7412Call(\n    targetNetwork,\n    provider,\n    calls,\n    (decodedMulticall) => {\n      const result = OracleManagerProxy.interface.decodeFunctionResult(\n        'process',\n        decodedMulticall[0].returnData\n      );\n      if (result?.node) {\n        return {\n          price: wei(result.node.price),\n          timestamp: new Date(Number(result.node.timestamp.mul(1000).toString())),\n        };\n      } else {\n        return {\n          price: wei(result.price),\n          timestamp: new Date(Number(result.timestamp.mul(1000).toString())),\n        };\n      }\n    },\n    'useOraclePrice'\n  );\n}\n\nexport function useOraclePrice(nodeId?: string, customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n  const provider = useProviderForChain(targetNetwork);\n\n  return useQuery({\n    refetchInterval: 120_000,\n    enabled: Boolean(targetNetwork && provider && nodeId),\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'oracle-price', { nodeId }],\n    queryFn: async () => {\n      if (!(targetNetwork && provider && nodeId)) {\n        throw new Error('OMG');\n      }\n      return fetchOraclePrice({\n        targetNetwork,\n        provider,\n        nodeId,\n      });\n    },\n  });\n}\n","export async function importOracleManagerProxy(\n  chainId?: number,\n  preset?: string\n): Promise<{ address: string; abi: string[] }> {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/meta.json'),\n        import('@synthetixio/v3-contracts/1-main/OracleManagerProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.OracleManagerProxy, abi };\n    }\n    case '11155111-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/meta.json'),\n        import('@synthetixio/v3-contracts/11155111-main/OracleManagerProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.OracleManagerProxy, abi };\n    }\n    case '10-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/meta.json'),\n        import('@synthetixio/v3-contracts/10-main/OracleManagerProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.OracleManagerProxy, abi };\n    }\n    case '8453-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/8453-andromeda/OracleManagerProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.OracleManagerProxy, abi };\n    }\n    case '84532-andromeda': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/meta.json'),\n        import('@synthetixio/v3-contracts/84532-andromeda/OracleManagerProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.OracleManagerProxy, abi };\n    }\n    case '42161-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/meta.json'),\n        import('@synthetixio/v3-contracts/42161-main/OracleManagerProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.OracleManagerProxy, abi };\n    }\n    case '421614-main': {\n      const [{ default: meta }, { default: abi }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/meta.json'),\n        import('@synthetixio/v3-contracts/421614-main/OracleManagerProxy.readable.json'),\n      ]);\n      return { address: meta.contracts.OracleManagerProxy, abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for OracleManagerProxy`);\n    }\n  }\n}\n","import { Flex, Skeleton } from '@chakra-ui/react';\n\nexport const PoolCardsLoading = () => (\n  <>\n    {Array.from(Array(3).keys()).map((i) => (\n      <Flex\n        key={i}\n        flexDir=\"row\"\n        w=\"100%\"\n        border=\"1px solid\"\n        borderColor=\"gray.900\"\n        rounded=\"base\"\n        bg=\"navy.700\"\n        py={4}\n        px={4}\n        gap={4}\n        alignItems=\"center\"\n      >\n        <Flex alignItems=\"center\" justifyContent=\"flex-start\" width=\"260px\" gap={3}>\n          <Skeleton width=\"40px\" height=\"40px\" rounded=\"full\" />\n          <Flex flex={1} flexDirection=\"column\" gap={1}>\n            <Skeleton height=\"26px\" width=\"50px\" />\n            <Skeleton height=\"18px\" width=\"100px\" />\n          </Flex>\n        </Flex>\n        <Flex\n          justifyContent=\"flex-end\"\n          alignItems=\"flex-end\"\n          width=\"240px\"\n          flexDirection=\"column\"\n          gap={1}\n        >\n          <Skeleton height=\"26px\" width=\"50px\" />\n          <Skeleton height=\"18px\" width=\"70px\" />\n        </Flex>\n        <Flex justifyContent=\"flex-end\" alignItems=\"center\" width=\"240px\">\n          <Skeleton height={6} width=\"92px\" />\n        </Flex>\n        <Flex justifyContent=\"flex-end\" alignItems=\"center\" width=\"164px\">\n          <Skeleton height={6} width=\"92px\" />\n        </Flex>\n      </Flex>\n    ))}\n  </>\n);\n","export function numberWithCommas(value: string, decimals?: number) {\n  const parts = value.split('.');\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  const joinedParts = parts.join('.');\n  return decimals ? joinedParts.substring(0, joinedParts.indexOf('.') + decimals + 1) : joinedParts;\n}\n\nexport const formatNumberToUsd = (value: number, options?: Intl.NumberFormatOptions) => {\n  return new Intl.NumberFormat('en-EN', {\n    style: 'currency',\n    currency: 'USD',\n    ...options,\n  }).format(Number(value));\n};\n\nexport const formatNumber = (value: number, options?: Intl.NumberFormatOptions) => {\n  return new Intl.NumberFormat('en-EN', {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n    ...options,\n  }).format(Number(value));\n};\n\nexport const formatPercent = (value: number, options?: Intl.NumberFormatOptions) => {\n  return new Intl.NumberFormat('en-EN', {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2,\n    style: 'percent',\n    ...options,\n  }).format(Number(value));\n};\n\nexport function formatApr(apr?: number) {\n  if (!apr) return '-';\n\n  return `${apr.toFixed(2)}%`;\n}\n","export const isBaseAndromeda = (id?: number | string, preset?: string) =>\n  (id?.toString() === '8453' || '84532') && preset === 'andromeda';\n\nexport function getSpotMarketId(collateralSymbol?: string) {\n  switch (collateralSymbol?.toLowerCase()) {\n    case 'usdc':\n    case 'susdc':\n      return USDC_BASE_MARKET;\n\n    case 'statausdc':\n    case 'sstatausdc':\n    case 'stataUSDC':\n      return STATA_BASE_MARKET;\n\n    default:\n      return USDC_BASE_MARKET;\n  }\n}\n\nexport const USDC_BASE_MARKET = '1';\nexport const STATA_BASE_MARKET = '3';\n","import { calculateCompoundedRate } from '@aave/math-utils';\nimport { isBaseAndromeda } from '@snx-v3/isBaseAndromeda';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useStataUSDCApr(networkId?: number, preset?: string) {\n  return useQuery({\n    enabled: isBaseAndromeda(networkId, preset),\n    queryKey: ['useStataUSDCAPR', networkId],\n    queryFn: async () => {\n      const subgraphResponse = await fetch(\n        'https://gateway.thegraph.com/api/f55095f3203bcba72cbee045322be46c/subgraphs/id/GQFbb95cE6d8mV989mL5figjaGaKCQB3xqYrr1bRyXqF',\n        {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ query }),\n        }\n      );\n\n      const data = await subgraphResponse.json();\n      const stataStats = data.data.reserves.filter(\n        (reserve: Record<string, string>) =>\n          reserve.underlyingAsset === '0x833589fcd6edb6e08f4c7c32d4f71b54bda02913'\n      )[0];\n      try {\n        return Number(\n          calculateCompoundedRate({\n            rate: stataStats.liquidityRate,\n            duration: 31536000, // seconds per year\n          })\n            .toNumber()\n            .toPrecision(2)\n            .split('e')[0]\n        );\n      } catch (_) {\n        return 0;\n      }\n    },\n  });\n}\n\nconst query = `\n  query {\n  reserves {\n    underlyingAsset\n    liquidityRate\n    }\n  }\n`;\n","import { importSynthTokens } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useSynthTokens(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'SynthTokens'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw new Error('OMFG');\n      return importSynthTokens(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","export async function importSynthTokens(\n  chainId?: number,\n  preset?: string\n): Promise<\n  {\n    synthMarketId: string;\n    address: string;\n    symbol: string;\n    name: string;\n    decimals: number;\n\n    // undefined for some synths (like Synthetic USDe on Mainnet)\n    token?: {\n      address: string;\n      symbol: string;\n      name: string;\n      decimals: number;\n    };\n  }[]\n> {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: synthTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/synthTokens.json'),\n      ]);\n      return synthTokens;\n    }\n    case '11155111-main': {\n      const [{ default: synthTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/synthTokens.json'),\n      ]);\n      return synthTokens;\n    }\n    case '10-main': {\n      const [{ default: synthTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/synthTokens.json'),\n      ]);\n      return synthTokens;\n    }\n    case '8453-andromeda': {\n      const [{ default: synthTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/synthTokens.json'),\n      ]);\n      return synthTokens;\n    }\n    case '84532-andromeda': {\n      const [{ default: synthTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/synthTokens.json'),\n      ]);\n      return synthTokens;\n    }\n    case '42161-main': {\n      const [{ default: synthTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/synthTokens.json'),\n      ]);\n      return synthTokens;\n    }\n    case '421614-main': {\n      const [{ default: synthTokens }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/synthTokens.json'),\n      ]);\n      return synthTokens;\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for SynthTokens`);\n    }\n  }\n}\n","import { Network } from '@snx-v3/useBlockchain';\nimport { useSynthTokens } from '@snx-v3/useSynthTokens';\nimport React from 'react';\n\nexport function useIsSynthStataUSDC({\n  tokenAddress,\n  customNetwork,\n}: {\n  tokenAddress?: string;\n  customNetwork?: Network;\n}) {\n  const { data: synthTokens } = useSynthTokens(customNetwork);\n  return React.useMemo(() => {\n    if (!synthTokens) {\n      return false;\n    }\n    if (!tokenAddress) {\n      return false;\n    }\n    const addr = tokenAddress?.toLowerCase();\n    const isSynthStata = synthTokens.some(\n      (token) => token.symbol === 'sStataUSDC' && addr === token.address.toLowerCase()\n    );\n    return isSynthStata;\n  }, [tokenAddress, synthTokens]);\n}\n","import { contractsHash } from '@snx-v3/tsHelpers';\nimport { Network, useNetwork, useProviderForChain } from '@snx-v3/useBlockchain';\nimport { useStaticAaveUSDC } from '@snx-v3/useStaticAaveUSDC';\nimport { useQuery } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\n\nexport function useStaticAaveUSDCRate(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n  const { data: StaticAaveUSDC } = useStaticAaveUSDC(targetNetwork);\n  const provider = useProviderForChain(targetNetwork);\n  return useQuery({\n    queryKey: [\n      `${targetNetwork?.id}-${targetNetwork?.preset}`,\n      'StaticAaveUSDC Rate',\n      { contractsHash: contractsHash([StaticAaveUSDC]) },\n    ],\n    enabled: Boolean(provider && StaticAaveUSDC),\n    queryFn: async function () {\n      if (!(provider && StaticAaveUSDC)) throw new Error('OMFG');\n      const StaticAaveUSDCContract = new ethers.Contract(\n        StaticAaveUSDC.address,\n        StaticAaveUSDC.abi,\n        provider\n      );\n      const rate = await StaticAaveUSDCContract.rate();\n\n      // IMPORTANT: 27 decimals!\n      return rate;\n    },\n  });\n}\n","const abi = [\n  'error InsufficientAllowance(uint256 required, uint256 existing)',\n  'error InsufficientBalance(uint256 required, uint256 existing)',\n  'event Approval(address indexed owner, address indexed spender, uint256 amount)',\n  'event Transfer(address indexed from, address indexed to, uint256 amount)',\n  'function allowance(address owner, address spender) view returns (uint256)',\n  'function approve(address spender, uint256 amount) returns (bool)',\n  'function balanceOf(address owner) view returns (uint256)',\n  'function decimals() view returns (uint8)',\n  'function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)',\n  'function increaseAllowance(address spender, uint256 addedValue) returns (bool)',\n  'function name() view returns (string)',\n  'function symbol() view returns (string)',\n  'function totalSupply() view returns (uint256)',\n  'function transfer(address to, uint256 amount) returns (bool)',\n  'function transferFrom(address from, address to, uint256 amount) returns (bool)',\n];\n\nexport async function importUSDC(\n  chainId?: number,\n  preset?: string\n): Promise<{ address: string; abi: string[] }> {\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      return { address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48', abi };\n    }\n    case '11155111-main': {\n      return { address: '0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238', abi };\n    }\n    case '10-main': {\n      return { address: '0x0b2c639c533813f4aa9d7837caf62653d097ff85', abi };\n    }\n    case '8453-andromeda': {\n      return { address: '0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913', abi };\n    }\n    case '84532-andromeda': {\n      return { address: '0x036CbD53842c5426634e7929541eC2318f3dCF7e', abi };\n    }\n    case '42161-main': {\n      return { address: '0xaf88d065e77c8cC2239327C5EDb3A432268e5831', abi };\n    }\n    case '421614-main': {\n      return { address: '0x75faf114eafb1BDbe2F0316DF893fd58CE46AA4d', abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for USDC`);\n    }\n  }\n}\n","import { importUSDC } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useUSDC(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'USDC'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw new Error('OMFG');\n      return importUSDC(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","import { Button, Fade, Flex, Link, Text } from '@chakra-ui/react';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { formatApr, formatNumber, formatNumberToUsd } from '@snx-v3/formatters';\nimport { Sparkles } from '@snx-v3/icons';\nimport { TokenIcon } from '@snx-v3/TokenIcon';\nimport { Tooltip } from '@snx-v3/Tooltip';\nimport { useStataUSDCApr } from '@snx-v3/useApr/useStataUSDCApr';\nimport { Network, NetworkIcon, useNetwork, useWallet } from '@snx-v3/useBlockchain';\nimport { CollateralType } from '@snx-v3/useCollateralTypes';\nimport { useIsSynthStataUSDC } from '@snx-v3/useIsSynthStataUSDC';\nimport { makeSearch, useParams } from '@snx-v3/useParams';\nimport { useStaticAaveUSDCRate } from '@snx-v3/useStaticAaveUSDCRate';\nimport { useSynthTokens } from '@snx-v3/useSynthTokens';\nimport { useTokenBalance } from '@snx-v3/useTokenBalance';\nimport { useUSDC } from '@snx-v3/useUSDC';\nimport { wei } from '@synthetixio/wei';\nimport { ethers } from 'ethers';\nimport React from 'react';\n\ninterface CollateralTypeWithDeposited extends CollateralType {\n  collateralDeposited: string;\n}\n\nexport function PoolRow({\n  pool: _pool,\n  network,\n  apr,\n  collateralType,\n  collateralPrices,\n}: {\n  collateralType: CollateralTypeWithDeposited;\n  pool: {\n    name: string;\n    id: string;\n  };\n  network: Network;\n  collateralPrices?: {\n    symbol: string;\n    price: ethers.BigNumber;\n  }[];\n  apr: {\n    combinedApr: number;\n    cumulativePnl: number;\n    collateralAprs: any[];\n  };\n}) {\n  const [params, setParams] = useParams();\n\n  const { data: synthTokens } = useSynthTokens();\n  const wrapperToken = React.useMemo(() => {\n    if (synthTokens && collateralType) {\n      return synthTokens.find((synth) => synth.address === collateralType.tokenAddress)?.token\n        ?.address;\n    }\n  }, [collateralType, synthTokens]);\n\n  const { data: stataUSDCApr } = useStataUSDCApr(network.id, network.preset);\n\n  // TODO: This will need refactoring\n  const balanceAddress =\n    network?.preset === 'andromeda' ? wrapperToken : collateralType?.tokenAddress;\n\n  const { data: stataUSDCRate } = useStaticAaveUSDCRate();\n  const { data: tokenBalance } = useTokenBalance(balanceAddress, network);\n\n  const { data: USDCToken } = useUSDC(network);\n  const { data: usdcBalance } = useTokenBalance(USDCToken?.address, network);\n\n  const { network: currentNetwork, setNetwork } = useNetwork();\n  const { connect } = useWallet();\n\n  const isStataUSDC = useIsSynthStataUSDC({\n    tokenAddress: collateralType?.tokenAddress,\n    customNetwork: network,\n  });\n\n  const balance = React.useMemo(() => {\n    if (!isStataUSDC || !stataUSDCRate) {\n      return tokenBalance || ZEROWEI;\n    }\n\n    return ((usdcBalance || ZEROWEI).div(wei(stataUSDCRate, 27)) || ZEROWEI).add(\n      tokenBalance || ZEROWEI\n    );\n  }, [isStataUSDC, stataUSDCRate, tokenBalance, usdcBalance]);\n\n  const price = wei(\n    collateralPrices?.find(\n      (price) => price.symbol.toUpperCase() === collateralType.symbol.toUpperCase()\n    )?.price ?? 0\n  );\n\n  const collateralApr = apr.collateralAprs.find(\n    (apr) => apr.collateralType === collateralType.tokenAddress.toLowerCase()\n  ) || { apr7d: 0, apr7dRewards: 0, apr7dPnl: 0 };\n\n  const { apr7d, apr7dRewards, apr7dPnl } = collateralApr;\n\n  const onClick = async (e: React.MouseEvent) => {\n    e.preventDefault();\n    try {\n      if (!currentNetwork) {\n        await connect();\n        return;\n      }\n      if (currentNetwork.id !== network.id) {\n        if (!(await setNetwork(network.id))) {\n          return;\n        }\n      }\n      setParams({\n        page: 'position',\n        collateralSymbol: collateralType.symbol,\n        manageAction: 'deposit',\n        accountId: params.accountId,\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const buttonText = !currentNetwork ? 'Connect Wallet' : 'Deposit';\n\n  const order = React.useMemo(\n    () =>\n      wei(collateralType.collateralDeposited, Number(collateralType.decimals), true)\n        .mul(price)\n        .toNumber()\n        .toFixed(0),\n    [collateralType.collateralDeposited, collateralType.decimals, price]\n  );\n\n  return (\n    <Fade in style={{ order }}>\n      <Flex\n        flexDir=\"row\"\n        w=\"100%\"\n        border=\"1px solid\"\n        borderColor=\"gray.900\"\n        rounded=\"base\"\n        bg=\"navy.700\"\n        py={4}\n        px={4}\n        gap={4}\n        alignItems=\"center\"\n      >\n        <Flex\n          as={Link}\n          href={`?${makeSearch({\n            page: 'position',\n            collateralSymbol: collateralType.symbol,\n            manageAction: 'deposit',\n            accountId: params.accountId,\n          })}`}\n          onClick={onClick}\n          width=\"260px\"\n          alignItems=\"center\"\n          textDecoration=\"none\"\n          _hover={{ textDecoration: 'none' }}\n        >\n          <Flex position=\"relative\">\n            <TokenIcon w={40} h={40} symbol={collateralType.symbol} />\n            <NetworkIcon\n              position=\"absolute\"\n              right={0}\n              bottom={0}\n              networkId={network.id}\n              size=\"14px\"\n            />\n          </Flex>\n          <Flex flexDirection=\"column\" ml={3} mr=\"auto\">\n            <Text\n              fontSize=\"14px\"\n              color=\"white\"\n              fontWeight={700}\n              lineHeight=\"28px\"\n              fontFamily=\"heading\"\n            >\n              {collateralType.displaySymbol}\n            </Text>\n            <Text\n              textTransform=\"capitalize\"\n              fontSize=\"xs\"\n              color=\"gray.500\"\n              fontFamily=\"heading\"\n              lineHeight=\"20px\"\n            >\n              {network.name} Network\n            </Text>\n          </Flex>\n        </Flex>\n\n        <Flex width=\"240px\" direction=\"column\" alignItems=\"flex-end\">\n          <Text\n            fontFamily=\"heading\"\n            fontSize=\"14px\"\n            fontWeight={500}\n            lineHeight=\"28px\"\n            color=\"white\"\n          >\n            {balance ? formatNumberToUsd(balance.mul(price).toNumber()) : '-'}\n          </Text>\n          <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"12px\" lineHeight=\"16px\">\n            {balance ? formatNumber(balance.toNumber()) : ''} {collateralType.displaySymbol}\n          </Text>\n        </Flex>\n\n        <Flex width=\"240px\" alignItems=\"center\" justifyContent=\"flex-end\">\n          <Text\n            fontFamily=\"heading\"\n            fontSize=\"14px\"\n            lineHeight=\"20px\"\n            fontWeight={500}\n            color=\"white\"\n            textAlign=\"right\"\n          >\n            {price\n              ? formatNumberToUsd(\n                  wei(collateralType.collateralDeposited, Number(collateralType.decimals), true)\n                    .mul(price)\n                    .toNumber(),\n                  {\n                    minimumFractionDigits: 0,\n                    maximumFractionDigits: 0,\n                  }\n                )\n              : 0}\n          </Text>\n        </Flex>\n\n        <Flex width=\"164px\" alignItems=\"center\" justifyContent=\"flex-end\">\n          <Text\n            fontFamily=\"heading\"\n            fontSize=\"14px\"\n            lineHeight=\"20px\"\n            fontWeight={500}\n            color=\"white\"\n          >\n            {isStataUSDC && stataUSDCApr\n              ? formatApr(apr7d * 100 + stataUSDCApr)\n              : formatApr(apr7d * 100)}\n            <Tooltip\n              label={\n                <Flex direction=\"column\">\n                  <Flex justifyContent=\"space-between\">\n                    <Text fontWeight={700} mr={2}>\n                      Total APR:\n                    </Text>\n                    <Text fontWeight={700}>{formatApr(apr7d * 100)}</Text>\n                  </Flex>\n                  <Flex justifyContent=\"space-between\">\n                    <Text mr={2}>Performance:</Text>\n                    <Text>{formatApr(apr7dPnl * 100)}</Text>\n                  </Flex>\n                  <Flex justifyContent=\"space-between\">\n                    <Text mr={2}>Rewards: </Text>\n                    <Text>{formatApr(apr7dRewards * 100)}</Text>\n                  </Flex>\n                </Flex>\n              }\n            >\n              <Flex as=\"span\" display=\"inline\">\n                <Sparkles w=\"14px\" h=\"14px\" mb={1} ml=\"0.5px\" mt=\"1px\" />\n              </Flex>\n            </Tooltip>\n          </Text>\n        </Flex>\n        <Flex minW=\"210px\" flex=\"1\" justifyContent=\"flex-end\">\n          <Button\n            as={Link}\n            href={`?${makeSearch({\n              page: 'position',\n              collateralSymbol: collateralType.symbol,\n              manageAction: 'deposit',\n              accountId: params.accountId,\n            })}`}\n            onClick={onClick}\n            size=\"sm\"\n            height=\"32px\"\n            py=\"10px\"\n            px={2}\n            whiteSpace=\"nowrap\"\n            borderRadius=\"4px\"\n            fontFamily=\"heading\"\n            fontWeight={700}\n            fontSize=\"14px\"\n            lineHeight=\"20px\"\n            color=\"black\"\n            textDecoration=\"none\"\n            _hover={{ textDecoration: 'none', color: 'black' }}\n          >\n            {buttonText}\n          </Button>\n        </Flex>\n      </Flex>\n    </Fade>\n  );\n}\n","import { Flex } from '@chakra-ui/react';\nimport { BASE_ANDROMEDA, MAINNET } from '@snx-v3/useBlockchain';\nimport { useOfflinePrices } from '@snx-v3/useCollateralPriceUpdates';\nimport { CollateralType, useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { useOraclePrice } from '@snx-v3/useOraclePrice';\nimport { usePoolsList } from '@snx-v3/usePoolsList';\nimport React from 'react';\nimport { PoolCardsLoading } from './PoolCardsLoading';\nimport { PoolRow } from './PoolRow';\n\nfunction HeaderText({ ...props }) {\n  return (\n    <Flex\n      color=\"gray.600\"\n      fontFamily=\"heading\"\n      fontSize=\"12px\"\n      lineHeight=\"16px\"\n      letterSpacing={0.6}\n      fontWeight={700}\n      alignItems=\"center\"\n      justifyContent=\"right\"\n      {...props}\n    />\n  );\n}\n\nexport function PoolsList() {\n  const { data: poolsList, isPending: isPendingPoolsList } = usePoolsList();\n  const { data: baseCollateralTypes, isPending: isPendingBaseCollateralTypes } = useCollateralTypes(\n    false,\n    BASE_ANDROMEDA\n  );\n  const { data: mainnetCollateralTypes, isPending: isPendingMainnetCollateralTypes } =\n    useCollateralTypes(false, MAINNET);\n\n  const allCollaterals: CollateralType[] = React.useMemo(() => {\n    // We want to filter out assets that don't have a pyth price feed\n    return [...(baseCollateralTypes ?? []), ...(mainnetCollateralTypes ?? [])].filter(\n      (item) => item.symbol !== 'stataUSDC'\n    );\n  }, [baseCollateralTypes, mainnetCollateralTypes]);\n\n  const { data: collateralPrices, isPending: isPendingCollateralPrices } = useOfflinePrices(\n    allCollaterals.map((item) => ({\n      id: item.tokenAddress,\n      oracleId: item.oracleNodeId,\n      symbol: item.symbol,\n    }))\n  );\n\n  // Fetch stata price from oracle manager\n  const stata = baseCollateralTypes?.find((item) => item.symbol === 'stataUSDC');\n\n  const { data: stataPrice, isPending: isStataPriceLoading } = useOraclePrice(\n    stata?.oracleNodeId,\n    BASE_ANDROMEDA\n  );\n\n  const isPending =\n    isPendingPoolsList ||\n    isPendingCollateralPrices ||\n    isPendingBaseCollateralTypes ||\n    isPendingMainnetCollateralTypes ||\n    isStataPriceLoading;\n\n  const filteredPools = React.useMemo(() => {\n    if (!poolsList?.synthetixPools) {\n      return [];\n    }\n\n    return poolsList.synthetixPools.map(({ network, poolInfo, apr }) => {\n      const collateralDeposited = poolInfo.map(({ collateral_type }) => ({\n        collateralDeposited: collateral_type.total_amount_deposited,\n        tokenAddress: collateral_type.id,\n      }));\n\n      let collaterals: typeof baseCollateralTypes = [];\n\n      if (network.id === BASE_ANDROMEDA.id) {\n        collaterals = baseCollateralTypes;\n      } else if (network.id === MAINNET.id) {\n        collaterals = mainnetCollateralTypes;\n      }\n\n      const collateralTypes = collaterals?.map((item) => ({\n        ...item,\n        collateralDeposited:\n          collateralDeposited.find(\n            ({ tokenAddress }) => tokenAddress.toLowerCase() === item.tokenAddress.toLowerCase()\n          )?.collateralDeposited || '0',\n      }));\n\n      return {\n        network,\n        poolInfo,\n        apr,\n        collateralDeposited,\n        collateralTypes,\n      };\n    });\n  }, [poolsList?.synthetixPools, baseCollateralTypes, mainnetCollateralTypes]);\n\n  const allCollateralPrices = React.useMemo(() => {\n    if (stata && stataPrice) {\n      return collateralPrices?.concat({ symbol: 'stataUSDC', price: stataPrice?.price.toBN() });\n    }\n  }, [stata, collateralPrices, stataPrice]);\n\n  return (\n    <Flex mt={6} minW=\"1200px\" overflowX=\"auto\" direction=\"column\" gap={4}>\n      <Flex flexDir=\"row\" w=\"100%\" gap={4} py={3} px={4} whiteSpace=\"nowrap\">\n        <HeaderText width=\"260px\" justifyContent=\"left\">\n          Collateral / Network\n        </HeaderText>\n        <HeaderText width=\"240px\">Wallet Balance</HeaderText>\n        <HeaderText width=\"240px\">TVL</HeaderText>\n        <HeaderText width=\"164px\">APY / APR</HeaderText>\n        <Flex minW=\"210px\" flex=\"1\" />\n      </Flex>\n\n      {isPending ? <PoolCardsLoading /> : null}\n      {!isPending && filteredPools && allCollateralPrices ? (\n        <Flex direction=\"column-reverse\" gap={4}>\n          {filteredPools.flatMap(\n            ({ network, poolInfo, apr, collateralTypes }) =>\n              collateralTypes?.map((collateralType) => (\n                <PoolRow\n                  key={`${network.id}-${collateralType.address}`}\n                  pool={poolInfo?.[0]?.pool}\n                  network={network}\n                  apr={apr}\n                  collateralType={collateralType}\n                  collateralPrices={allCollateralPrices}\n                />\n              ))\n          )}\n        </Flex>\n      ) : null}\n    </Flex>\n  );\n}\n","import type { MarketSnapshotByWeekSchema, PoolType } from '@snx-v3/usePoolData';\nimport { z } from 'zod';\nimport { wei, Wei } from '@synthetixio/wei';\nimport { ZEROWEI } from '@snx-v3/constants';\n\ntype MarketSnapshotByWeek = z.infer<typeof MarketSnapshotByWeekSchema>;\n\nexport const calculateSevenDaysPnlGrowth = (marketSnapshots?: MarketSnapshotByWeek[]) => {\n  if (!marketSnapshots || marketSnapshots.length === 0) return undefined;\n  const end = marketSnapshots[0].pnl;\n  const start = marketSnapshots[1]?.pnl || wei(0);\n\n  return {\n    value: end.sub(start),\n    percentage: start.eq(0) ? undefined : end.sub(start).div(start.abs()),\n  };\n};\n\nexport const calculatePoolPerformanceLifetime = (poolData?: PoolType) => {\n  return poolData?.configurations.reduce((acc, { market }) => {\n    return acc.add(market.pnl);\n  }, wei(0));\n};\n\nexport const calculatePoolPerformanceSevenDays = (poolData?: PoolType) => {\n  const total = calculatePoolPerformanceLifetime(poolData);\n\n  const totalSevenDaysAgo = poolData?.configurations.reduce((acc, { market }) => {\n    return acc.add(market.market_snapshots_by_week[1]?.pnl || wei(0));\n  }, wei(0));\n\n  if (!total || !totalSevenDaysAgo) {\n    return undefined;\n  }\n\n  return {\n    value: total.sub(totalSevenDaysAgo), // Not that this value does not take into account that other pools might have exposure to markets\n    growthPercentage: totalSevenDaysAgo.eq(0)\n      ? undefined\n      : total.sub(totalSevenDaysAgo).div(totalSevenDaysAgo.abs()),\n  };\n};\n\nexport function calculateCRatio(debt?: Wei, collateralValue?: Wei) {\n  if (debt && collateralValue && !debt.eq(0) && !collateralValue.eq(0)) {\n    return collateralValue.div(debt);\n  }\n  return ZEROWEI;\n}\n","import { calculateCRatio } from '@snx-v3/calculations';\nimport { POOL_ID } from '@snx-v3/constants';\nimport { contractsHash } from '@snx-v3/tsHelpers';\nimport { useNetwork, useProviderForChain } from '@snx-v3/useBlockchain';\nimport { useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { type LiquidityPositionType } from '@snx-v3/useLiquidityPosition';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { erc7412Call } from '@snx-v3/withERC7412';\nimport { wei } from '@synthetixio/wei';\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\n\nconst log = debug('snx:useLiquidityPositions');\n\nexport const useLiquidityPositions = ({ accountId }: { accountId?: string }) => {\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: collateralTypes } = useCollateralTypes();\n  const { network } = useNetwork();\n  const provider = useProviderForChain(network);\n  const { data: systemToken } = useSystemToken();\n\n  const queryClient = useQueryClient();\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'LiquidityPositions',\n      { accountId },\n      {\n        contractsHash: contractsHash([CoreProxy]),\n        collateralTypes: contractsHash([systemToken, ...(collateralTypes || [])]),\n      },\n    ],\n    enabled: Boolean(\n      network && provider && CoreProxy && systemToken && accountId && collateralTypes\n    ),\n    queryFn: async (): Promise<LiquidityPositionType[]> => {\n      if (!(network && provider && CoreProxy && systemToken && accountId && collateralTypes)) {\n        throw 'OMFG';\n      }\n      const CoreProxyContract = new ethers.Contract(CoreProxy.address, CoreProxy.abi, provider);\n\n      const getAccountAvailableSystemTokenCallPromised =\n        CoreProxyContract.populateTransaction.getAccountAvailableCollateral(\n          accountId,\n          systemToken.address\n        );\n      const getPositionCollateralCallsPromised = collateralTypes.map((collateralType) =>\n        CoreProxyContract.populateTransaction.getPositionCollateral(\n          accountId,\n          POOL_ID,\n          collateralType.tokenAddress\n        )\n      );\n      const getPositionDebtCallsPromised = collateralTypes.map((collateralType) =>\n        CoreProxyContract.populateTransaction.getPositionDebt(\n          accountId,\n          POOL_ID,\n          collateralType.tokenAddress\n        )\n      );\n      const getCollateralPriceCallsPromised = collateralTypes.map((collateralType) =>\n        CoreProxyContract.populateTransaction.getCollateralPrice(collateralType.tokenAddress)\n      );\n      const getAccountCollateralCallPromised = collateralTypes.map((collateralType) =>\n        CoreProxyContract.populateTransaction.getAccountCollateral(\n          accountId,\n          collateralType.tokenAddress\n        )\n      );\n      const calls = await Promise.all([\n        getAccountAvailableSystemTokenCallPromised,\n        ...getPositionCollateralCallsPromised,\n        ...getPositionDebtCallsPromised,\n        ...getCollateralPriceCallsPromised,\n        ...getAccountCollateralCallPromised,\n      ]);\n\n      return await erc7412Call(\n        network,\n        provider,\n        calls,\n        (decodedMulticall) => {\n          const [accountAvailableSystemToken] = CoreProxyContract.interface.decodeFunctionResult(\n            'getAccountAvailableCollateral',\n            decodedMulticall[0].returnData\n          );\n\n          const liquidityPositions = collateralTypes.map((collateralType, i) => {\n            const [positionCollateral] = CoreProxyContract.interface.decodeFunctionResult(\n              'getPositionCollateral',\n              decodedMulticall[1 + 0 * collateralTypes.length + i].returnData\n            );\n\n            const [positionDebt] = CoreProxyContract.interface.decodeFunctionResult(\n              'getPositionDebt',\n              decodedMulticall[1 + 1 * collateralTypes.length + i].returnData\n            );\n\n            const [collateralPriceRaw] = CoreProxyContract.interface.decodeFunctionResult(\n              'getCollateralPrice',\n              decodedMulticall[1 + 2 * collateralTypes.length + i].returnData\n            );\n\n            const [totalDepositedBigNumber, totalAssignedBigNumber, totalLockedBigNumber] =\n              CoreProxyContract.interface.decodeFunctionResult(\n                'getAccountCollateral',\n                decodedMulticall[1 + 3 * collateralTypes.length + i].returnData\n              );\n\n            const totalDeposited = wei(totalDepositedBigNumber);\n            const totalAssigned = wei(totalAssignedBigNumber);\n            const totalLocked = wei(totalLockedBigNumber);\n\n            log({\n              collateralType,\n              positionCollateral,\n              positionDebt,\n              collateralPriceRaw,\n              totalDeposited,\n              totalAssigned,\n              totalLocked,\n            });\n\n            const availableCollateral = wei(totalDeposited.sub(totalAssigned).sub(totalLocked));\n            const availableSystemToken = wei(accountAvailableSystemToken);\n\n            const collateralPrice = wei(collateralPriceRaw);\n            const collateralAmount = wei(positionCollateral);\n            const collateralValue = collateralAmount.mul(collateralPrice);\n            const debt = wei(positionDebt);\n            const cRatio = calculateCRatio(debt, collateralValue);\n\n            return {\n              collateralType,\n              collateralPrice,\n              availableCollateral,\n              availableSystemToken,\n              collateralAmount,\n              collateralValue,\n              debt,\n              cRatio,\n              totalDeposited,\n              totalAssigned,\n              totalLocked,\n            };\n          });\n          log(liquidityPositions);\n\n          liquidityPositions.forEach((liquidityPosition) => {\n            queryClient.setQueryData(\n              [\n                `${network?.id}-${network?.preset}`,\n                'LiquidityPosition',\n                { accountId },\n                { tokenAddress: liquidityPosition.collateralType.tokenAddress },\n                {\n                  contractsHash: contractsHash([CoreProxy]),\n                  collateralTypes: contractsHash([systemToken, liquidityPosition.collateralType]),\n                },\n              ],\n              liquidityPosition\n            );\n          });\n          return liquidityPositions;\n        },\n        'useLiquidityPositions'\n      );\n    },\n  });\n};\n","import { Button, Flex, Link, Text } from '@chakra-ui/react';\nimport { makeSearch, useParams } from '@snx-v3/useParams';\n\nexport const PositionsEmpty = () => {\n  const [params, setParams] = useParams();\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"baseline\" w=\"100%\">\n      <Text color=\"gray.500\" fontWeight={500} fontSize=\"14px\" my=\"4\" pl=\"3\">\n        You can open a new position by choosing a vault for collateral type\n      </Text>\n      <Button\n        as={Link}\n        href={`?${makeSearch({ accountId: params.accountId })}`}\n        onClick={(e) => {\n          e.preventDefault();\n          setParams({ accountId: params.accountId });\n        }}\n        size=\"sm\"\n        data-cy=\"all pools button\"\n      >\n        Explore all Vaults\n      </Button>\n    </Flex>\n  );\n};\n","import { Flex, Button, Text } from '@chakra-ui/react';\nimport { useWallet } from '@snx-v3/useBlockchain';\n\nexport const PositionsNotConnected = () => {\n  const { connect } = useWallet();\n  return (\n    <Flex w=\"100%\" justifyContent=\"space-between\" alignItems=\"center\">\n      <Text color=\"gray.500\" fontWeight={500} fontSize=\"14px\" lineHeight=\"14px\" my=\"4\" pl=\"3\">\n        Please connect wallet to view active positions\n      </Text>\n      <Button\n        size=\"sm\"\n        data-cy=\"connect wallet button\"\n        onClick={() => {\n          connect();\n        }}\n      >\n        Connect Wallet\n      </Button>\n    </Flex>\n  );\n};\n","import { Text, TextProps } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { Wei } from '@synthetixio/wei';\n\nexport function getDebtColor(debt?: Wei) {\n  if (!debt) {\n    return 'gray.50';\n  }\n  if (debt.gt(0)) {\n    return 'red.500';\n  }\n  if (debt.lt(0)) {\n    return 'green.500';\n  }\n  return 'white.500';\n}\n\nexport function PnlAmount({ debt, ...props }: TextProps & { debt?: Wei }) {\n  return (\n    <Text as=\"span\" {...props} color={getDebtColor(debt)}>\n      <Amount prefix={`${debt && debt.gt(0) ? '-' : ''}$`} value={debt ? debt.abs() : ZEROWEI} />\n    </Text>\n  );\n}\n\nexport function DebtAmount({ debt, ...props }: TextProps & { debt?: Wei }) {\n  return (\n    <Text as=\"span\" {...props} color={getDebtColor(debt)}>\n      <Amount prefix={`${debt && debt.lt(0) ? '-' : ''}$`} value={debt ? debt.abs() : ZEROWEI} />\n    </Text>\n  );\n}\n","import { contractsHash } from '@snx-v3/tsHelpers';\nimport { useNetwork, useProvider } from '@snx-v3/useBlockchain';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useQuery } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\n\nexport function useAccountCollateralUnlockDate({ accountId }: { accountId?: string }) {\n  const { data: CoreProxy } = useCoreProxy();\n  const { network } = useNetwork();\n  const provider = useProvider();\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'AccountCollateralUnlockDate',\n      { accountId },\n      { contractsHash: contractsHash([CoreProxy]) },\n    ],\n    enabled: Boolean(provider && CoreProxy && accountId),\n    queryFn: async function () {\n      if (!(provider && CoreProxy && accountId)) throw 'OMFG';\n      const CoreProxyContract = new ethers.Contract(CoreProxy.address, CoreProxy.abi, provider);\n      const [lastInteraction, accountTimeoutWithdraw] = await Promise.all([\n        CoreProxyContract.getAccountLastInteraction(accountId),\n        CoreProxyContract.getConfigUint(ethers.utils.formatBytes32String('accountTimeoutWithdraw')),\n      ]);\n      const collateralUnlock = lastInteraction.add(accountTimeoutWithdraw);\n      return new Date(collateralUnlock.toNumber() * 1000);\n    },\n  });\n}\n","import { useEffect } from 'react';\nimport { useAccountCollateralUnlockDate } from '@snx-v3/useAccountCollateralUnlockDate';\nimport { useTimer } from 'react-timer-hook';\n\nexport function useWithdrawTimer(accountId: string | undefined) {\n  const { data: accountCollateralUnlockDate, isLoading: isLoadingDate } =\n    useAccountCollateralUnlockDate({\n      accountId,\n    });\n  const { minutes, hours, seconds, isRunning, restart } = useTimer({\n    expiryTimestamp: new Date(),\n    autoStart: false,\n  });\n\n  useEffect(() => {\n    if (accountCollateralUnlockDate && !isLoadingDate) {\n      restart(accountCollateralUnlockDate, true);\n    }\n  }, [accountCollateralUnlockDate, isLoadingDate, restart]);\n\n  return {\n    minutes,\n    hours,\n    seconds,\n    isRunning: isRunning && !![minutes, hours, seconds].find((a) => a > 0),\n    accountCollateralUnlockDate,\n  };\n}\n","import { FC } from 'react';\nimport { ratioIsMaxUInt } from './CRatioBar.utils';\nimport { Amount } from '@snx-v3/Amount';\nimport { wei } from '@synthetixio/wei';\n\nexport const CRatioAmount: FC<{\n  value: number;\n}> = ({ value }) => {\n  if (!value || value < 0) {\n    return <>N/A</>;\n  }\n\n  if (ratioIsMaxUInt(value)) {\n    return <>Infinite</>;\n  }\n\n  return <Amount value={wei(value)} suffix=\"%\" />;\n};\n","import { TimeIcon } from '@chakra-ui/icons';\nimport {\n  Box,\n  Button,\n  Collapse,\n  Fade,\n  Flex,\n  Image,\n  Link,\n  Td,\n  Text,\n  Tooltip,\n} from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { DebtAmount, PnlAmount } from '@snx-v3/DebtAmount';\nimport { TokenIcon } from '@snx-v3/TokenIcon';\nimport { useStataUSDCApr } from '@snx-v3/useApr/useStataUSDCApr';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useIsSynthStataUSDC } from '@snx-v3/useIsSynthStataUSDC';\nimport { type LiquidityPositionType } from '@snx-v3/useLiquidityPosition';\nimport { makeSearch, useParams } from '@snx-v3/useParams';\nimport { useWithdrawTimer } from '@snx-v3/useWithdrawTimer';\nimport { CRatioAmount } from '../CRatioBar/CRatioAmount';\nimport { CRatioBadge } from '../CRatioBar/CRatioBadge';\nimport lockIcon from './lock.svg';\n\nexport function PositionRow({\n  liquidityPosition,\n  apr,\n}: {\n  liquidityPosition: LiquidityPositionType;\n  apr?: number;\n}) {\n  const [params, setParams] = useParams();\n  const { network } = useNetwork();\n\n  const isStataUSDC = useIsSynthStataUSDC({\n    tokenAddress: liquidityPosition.collateralType.tokenAddress,\n    customNetwork: network,\n  });\n\n  const { minutes, hours, isRunning } = useWithdrawTimer(params.accountId);\n  const { data: stataUSDCAPR } = useStataUSDCApr(network?.id, network?.preset);\n  const stataUSDCAPRParsed = stataUSDCAPR || 0;\n\n  const collateralAmount = liquidityPosition\n    ? liquidityPosition.collateralAmount.add(liquidityPosition.totalLocked)\n    : undefined;\n\n  const collateralValue = liquidityPosition\n    ? liquidityPosition.collateralValue.add(\n        liquidityPosition.totalLocked.mul(liquidityPosition.collateralPrice)\n      )\n    : undefined;\n\n  return (\n    <>\n      <Td border=\"none\">\n        <Fade in>\n          <Flex\n            as={Link}\n            href={`?${makeSearch({\n              page: 'position',\n              collateralSymbol: liquidityPosition.collateralType.symbol,\n              manageAction: liquidityPosition.debt.gt(0) ? 'repay' : 'claim',\n              accountId: params.accountId,\n            })}`}\n            onClick={(e) => {\n              e.preventDefault();\n              setParams({\n                page: 'position',\n                collateralSymbol: liquidityPosition.collateralType.symbol,\n                manageAction: liquidityPosition.debt.gt(0) ? 'repay' : 'claim',\n                accountId: params.accountId,\n              });\n            }}\n            alignItems=\"center\"\n            textDecoration=\"none\"\n            _hover={{ textDecoration: 'none' }}\n          >\n            <TokenIcon symbol={liquidityPosition.collateralType.symbol} />\n            <Flex flexDirection=\"column\" ml={3}>\n              <Text\n                color=\"white\"\n                fontWeight={700}\n                lineHeight=\"1.25rem\"\n                fontFamily=\"heading\"\n                fontSize=\"sm\"\n              >\n                {liquidityPosition.collateralType.symbol}\n              </Text>\n              <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n                {liquidityPosition.collateralType.displaySymbol}\n              </Text>\n            </Flex>\n          </Flex>\n        </Fade>\n      </Td>\n      <Td border=\"none\">\n        <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n          <Text\n            display=\"flex\"\n            alignItems=\"center\"\n            gap={2}\n            color=\"white\"\n            lineHeight=\"1.25rem\"\n            fontFamily=\"heading\"\n            fontSize=\"sm\"\n          >\n            <Amount prefix=\"$\" value={collateralValue} />\n            {liquidityPosition.totalLocked.gt(0) ? (\n              <Tooltip\n                label={\n                  <Amount\n                    prefix=\"Including \"\n                    value={liquidityPosition.totalLocked}\n                    suffix={` ${liquidityPosition.collateralType.displaySymbol} Escrow that cannot be unlocked until the unlocking date has been reached`}\n                    showTooltip\n                  />\n                }\n              >\n                <Image src={lockIcon} />\n              </Tooltip>\n            ) : null}\n          </Text>\n          <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n            <Amount\n              value={collateralAmount}\n              suffix={` ${liquidityPosition.collateralType.displaySymbol}`}\n            />\n          </Text>\n        </Flex>\n      </Td>\n      <Td border=\"none\">\n        <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n          <Text\n            display=\"flex\"\n            alignItems=\"center\"\n            color=\"white\"\n            lineHeight=\"1.25rem\"\n            fontFamily=\"heading\"\n            fontSize=\"sm\"\n            gap={1.5}\n          >\n            <Amount\n              prefix=\"$\"\n              value={liquidityPosition.availableCollateral.mul(liquidityPosition.collateralPrice)}\n            />\n\n            {liquidityPosition.availableCollateral.gt(0) && isRunning && (\n              <Tooltip label={`Withdrawal available in ${hours}H${minutes}M`}>\n                <TimeIcon />\n              </Tooltip>\n            )}\n          </Text>\n          <Box color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n            <Amount\n              value={liquidityPosition.availableCollateral}\n              suffix={` ${liquidityPosition.collateralType.displaySymbol}`}\n            />{' '}\n            {liquidityPosition.availableCollateral.gt(0) && !isRunning ? (\n              <Link\n                href={`?${makeSearch({\n                  page: 'position',\n                  collateralSymbol: liquidityPosition.collateralType.symbol,\n                  manageAction: 'withdraw',\n                  accountId: params.accountId,\n                })}`}\n                onClick={(e) => {\n                  e.preventDefault();\n                  setParams({\n                    page: 'position',\n                    collateralSymbol: liquidityPosition.collateralType.symbol,\n                    manageAction: 'withdraw',\n                    accountId: params.accountId,\n                  });\n                }}\n                color=\"cyan.500\"\n                fontFamily=\"heading\"\n                fontSize=\"0.75rem\"\n                lineHeight=\"1rem\"\n              >\n                Withdraw\n              </Link>\n            ) : null}\n          </Box>\n        </Flex>\n      </Td>\n      <Td border=\"none\">\n        <Fade in>\n          <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n            <Text color=\"white\" lineHeight=\"1.25rem\" fontFamily=\"heading\" fontSize=\"sm\">\n              {apr && apr > 0\n                ? (isStataUSDC ? apr + stataUSDCAPRParsed : apr).toFixed(2).concat('%')\n                : '-'}\n            </Text>\n          </Flex>\n        </Fade>\n      </Td>\n\n      <Td border=\"none\">\n        <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n          {network?.preset === 'andromeda' ? (\n            <PnlAmount\n              debt={liquidityPosition.debt}\n              lineHeight=\"1.25rem\"\n              fontFamily=\"heading\"\n              fontSize=\"sm\"\n            />\n          ) : (\n            <DebtAmount\n              debt={liquidityPosition.debt}\n              lineHeight=\"1.25rem\"\n              fontFamily=\"heading\"\n              fontSize=\"sm\"\n            />\n          )}\n          <Collapse in={liquidityPosition.debt.gt(0) || liquidityPosition.debt.lt(0)}>\n            {liquidityPosition.debt.gt(0) ? (\n              <Link\n                color=\"cyan.500\"\n                fontFamily=\"heading\"\n                fontSize=\"0.75rem\"\n                lineHeight=\"1rem\"\n                href={`?${makeSearch({\n                  page: 'position',\n                  collateralSymbol: liquidityPosition.collateralType.symbol,\n                  manageAction: 'repay',\n                  accountId: params.accountId,\n                })}`}\n                onClick={(e) => {\n                  e.preventDefault();\n                  setParams({\n                    page: 'position',\n                    collateralSymbol: liquidityPosition.collateralType.symbol,\n                    manageAction: 'repay',\n                    accountId: params.accountId,\n                  });\n                }}\n              >\n                Repay Debt\n              </Link>\n            ) : null}\n            {liquidityPosition.debt.lt(0) ? (\n              <Link\n                color=\"cyan.500\"\n                fontFamily=\"heading\"\n                fontSize=\"0.75rem\"\n                lineHeight=\"1rem\"\n                href={`?${makeSearch({\n                  page: 'position',\n                  collateralSymbol: liquidityPosition.collateralType.symbol,\n                  manageAction: 'claim',\n                  accountId: params.accountId,\n                })}`}\n                onClick={(e) => {\n                  e.preventDefault();\n                  setParams({\n                    page: 'position',\n                    collateralSymbol: liquidityPosition.collateralType.symbol,\n                    manageAction: 'claim',\n                    accountId: params.accountId,\n                  });\n                }}\n              >\n                Claim Credit\n              </Link>\n            ) : null}\n          </Collapse>\n        </Flex>\n      </Td>\n      {network?.preset === 'andromeda' ? null : (\n        <Td border=\"none\">\n          <Fade in>\n            <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n              <Text color=\"white\" fontSize=\"sm\" lineHeight=\"1.25rem\" fontFamily=\"heading\">\n                <CRatioAmount value={liquidityPosition.cRatio.toNumber() * 100} />\n              </Text>\n              <CRatioBadge\n                cRatio={liquidityPosition.cRatio.toNumber() * 100}\n                liquidationCratio={\n                  liquidityPosition.collateralType.liquidationRatioD18\n                    ? liquidityPosition.collateralType.liquidationRatioD18.toNumber() * 100\n                    : 0\n                }\n                targetCratio={\n                  liquidityPosition.collateralType.issuanceRatioD18\n                    ? liquidityPosition.collateralType.issuanceRatioD18.toNumber() * 100\n                    : 0\n                }\n              />\n            </Flex>\n          </Fade>\n        </Td>\n      )}\n      <Td border=\"none\" pr={0}>\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            as={Link}\n            href={`?${makeSearch({\n              page: 'position',\n              collateralSymbol: liquidityPosition.collateralType.symbol,\n              manageAction: 'deposit',\n              accountId: params.accountId,\n            })}`}\n            onClick={(e) => {\n              e.preventDefault();\n              setParams({\n                page: 'position',\n                collateralSymbol: liquidityPosition.collateralType.symbol,\n                manageAction: 'deposit',\n                accountId: params.accountId,\n              });\n            }}\n            fontSize=\"sm\"\n            lineHeight=\"1.25rem\"\n            height=\"2rem\"\n            fontWeight={700}\n            pt=\"5px\"\n            pb=\"5px\"\n            pl=\"12px\"\n            pr=\"12px\"\n            borderWidth=\"1px\"\n            borderColor=\"gray.900\"\n            borderRadius=\"4px\"\n            textDecoration=\"none\"\n            _hover={{ textDecoration: 'none' }}\n          >\n            Manage\n          </Button>\n        </Flex>\n      </Td>\n    </>\n  );\n}\n","import { Skeleton, SkeletonCircle, SkeletonProps } from '@chakra-ui/react';\nimport React from 'react';\n\ninterface SynthSkeletonProps extends SkeletonProps {\n  children: React.ReactNode;\n}\n\nexport const SynthSkeleton = ({ children, ...props }: SynthSkeletonProps) => {\n  return (\n    <Skeleton startColor=\"gray.700\" endColor=\"navy.800\" {...props}>\n      {children}\n    </Skeleton>\n  );\n};\n\nexport const SynthCircle = ({ children, ...props }: SkeletonProps) => {\n  return (\n    <SkeletonCircle startColor=\"gray.700\" endColor=\"navy.800\" {...props}>\n      {children}\n    </SkeletonCircle>\n  );\n};\n","import { Badge, Button, Flex, Td, Text, Tr } from '@chakra-ui/react';\nimport { TokenIcon } from '@snx-v3/TokenIcon';\nimport { SynthCircle, SynthSkeleton } from '../SynthSkeleton/SynthSkeleton';\n\nexport function PositionsRowLoading() {\n  return (\n    <Tr>\n      <Td border=\"none\">\n        <Flex alignItems=\"center\">\n          <SynthCircle>\n            <TokenIcon symbol=\"SNX\" />\n          </SynthCircle>\n          <Flex flexDirection=\"column\" ml={3}>\n            <SynthSkeleton height=\"1rem\" mb={1} width=\"70%\">\n              <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n                sUSDC\n              </Text>\n            </SynthSkeleton>\n            <SynthSkeleton height=\"0.75rem\">\n              <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n                Synthetic USDC\n              </Text>\n            </SynthSkeleton>\n          </Flex>\n        </Flex>\n      </Td>\n\n      <Td border=\"none\">\n        <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n          <SynthSkeleton height=\"1rem\" mb={1}>\n            <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n              $100,000\n            </Text>\n          </SynthSkeleton>\n          <SynthSkeleton height=\"0.75rem\">\n            <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n              200 SNX\n            </Text>\n          </SynthSkeleton>\n        </Flex>\n      </Td>\n\n      <Td border=\"none\">\n        <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n          <SynthSkeleton height=\"1rem\" mb={1}>\n            <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n              $100,000\n            </Text>\n          </SynthSkeleton>\n          <SynthSkeleton height=\"0.75rem\">\n            <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n              200 SNX\n            </Text>\n          </SynthSkeleton>\n        </Flex>\n      </Td>\n      <Td border=\"none\">\n        <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n          <SynthSkeleton height=\"1rem\" mb={1} width=\"70%\">\n            <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n              $20,000\n            </Text>\n          </SynthSkeleton>\n          <SynthSkeleton height=\"0.75rem\">\n            <Text color=\"cyan.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n              Claim Credit\n            </Text>\n          </SynthSkeleton>\n        </Flex>\n      </Td>\n      <Td border=\"none\">\n        <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n          <SynthSkeleton height=\"1rem\" mb={1}>\n            <Text color=\"white\" fontWeight={700} lineHeight=\"1.25rem\" fontFamily=\"heading\">\n              5000%\n            </Text>\n          </SynthSkeleton>\n          <SynthSkeleton height=\"0.75rem\">\n            <Badge colorScheme=\"green\" border=\"1px solid\" bg=\"green.900\">\n              HEALTHY\n            </Badge>\n          </SynthSkeleton>\n        </Flex>\n      </Td>\n      <Td border=\"none\">\n        <Flex flexDirection=\"column\">\n          <SynthSkeleton height=\"1.75rem\">\n            <Button\n              fontSize=\"0.75rem\"\n              lineHeight=\"1rem\"\n              height=\"1.75rem\"\n              fontWeight={700}\n              borderWidth=\"1px\"\n              borderColor=\"gray.900\"\n              borderRadius=\"4px\"\n              disabled\n            >\n              Manage\n            </Button>\n          </SynthSkeleton>\n        </Flex>\n      </Td>\n    </Tr>\n  );\n}\n","import { InfoIcon } from '@chakra-ui/icons';\nimport { Flex, Text, Th, Thead, Tr } from '@chakra-ui/react';\nimport { Tooltip } from '@snx-v3/Tooltip';\nimport { useNetwork } from '@snx-v3/useBlockchain';\n\nexport function PositionTableHeader() {\n  const { network } = useNetwork();\n  return (\n    <Thead>\n      <Tr>\n        <Th\n          py={5}\n          textTransform=\"unset\"\n          color=\"gray.600\"\n          border=\"none\"\n          fontFamily=\"heading\"\n          fontSize=\"12px\"\n          lineHeight=\"16px\"\n        >\n          Collateral\n        </Th>\n        <Th textAlign=\"right\" border=\"none\" textTransform=\"unset\" py={5}>\n          <Flex justifyContent=\"flex-end\" alignItems=\"center\">\n            <Text color=\"gray.600\" fontFamily=\"heading\" fontSize=\"12px\" lineHeight=\"16px\" mr={1}>\n              Locked\n            </Text>\n            <Tooltip\n              label={\n                <Text textAlign=\"left\">\n                  Unlocked assets can be locked into a position at any time or withdrawn after 24h\n                  since last activity\n                </Text>\n              }\n            >\n              <InfoIcon w=\"10px\" h=\"10px\" />\n            </Tooltip>\n          </Flex>\n        </Th>\n        <Th textAlign=\"right\" border=\"none\" textTransform=\"unset\" py={5}>\n          <Text color=\"gray.600\" fontFamily=\"heading\" fontSize=\"12px\" lineHeight=\"16px\" mr={1}>\n            Unlocked\n          </Text>\n        </Th>\n        <Th border=\"none\" textTransform=\"unset\" py={5}>\n          <Flex justifyContent=\"flex-end\" alignItems=\"center\">\n            <Text color=\"gray.600\" fontFamily=\"heading\" fontSize=\"12px\" lineHeight=\"16px\" mr={1}>\n              APR\n            </Text>\n            <Tooltip\n              label={\n                <Flex flexDirection=\"column\" alignItems=\"start\">\n                  <Text textAlign=\"left\" fontSize=\"14px\">\n                    APR is averaged over the trailing 7 days and is comprised of both performance\n                    and rewards\n                  </Text>\n                </Flex>\n              }\n            >\n              <InfoIcon w=\"10px\" h=\"10px\" />\n            </Tooltip>\n          </Flex>\n        </Th>\n        <Th border=\"none\" textTransform=\"unset\" py={5}>\n          <Flex justifyContent=\"flex-end\" alignItems=\"center\">\n            <Text color=\"gray.600\" fontFamily=\"heading\" fontSize=\"12px\" lineHeight=\"16px\" mr={1}>\n              {network?.preset === 'andromeda' ? 'PNL' : 'Debt'}\n            </Text>\n            <Tooltip\n              label={\n                network?.preset === 'andromeda' ? (\n                  \"Your portion of the pool's total debt, which fluctuates based on trader performance and market conditions\"\n                ) : (\n                  <Text textAlign=\"left\">\n                    Debt consists of:\n                    <br />\n                    - Your portion of the pool&apos;s total debt, which fluctuates based on trader\n                    performance and market conditions\n                    <br />- The amount you&apos;ve borrowed against your collateral without\n                    incurring interest\n                  </Text>\n                )\n              }\n            >\n              <InfoIcon w=\"10px\" h=\"10px\" />\n            </Tooltip>\n          </Flex>\n        </Th>\n        {network?.preset === 'andromeda' ? null : (\n          <Th border=\"none\" textTransform=\"unset\" py={5}>\n            <Flex justifyContent=\"flex-end\" alignItems=\"center\">\n              <Text color=\"gray.600\" fontFamily=\"heading\" fontSize=\"12px\" lineHeight=\"16px\" mr={1}>\n                C-Ratio\n              </Text>\n              <Tooltip\n                label={\n                  <Flex flexDirection=\"column\" alignItems=\"start\">\n                    <Text textAlign=\"left\" fontSize=\"14px\">\n                      C-ratio is a dynamic number that represents a ratio between your locked\n                      collateral and your debt\n                    </Text>\n                  </Flex>\n                }\n              >\n                <InfoIcon w=\"10px\" h=\"10px\" />\n              </Tooltip>\n            </Flex>\n          </Th>\n        )}\n        <Th\n          py={5}\n          textTransform=\"unset\"\n          color=\"gray.600\"\n          border=\"none\"\n          fontFamily=\"heading\"\n          fontSize=\"12px\"\n          lineHeight=\"16px\"\n        >\n          {' '}\n        </Th>\n      </Tr>\n    </Thead>\n  );\n}\n","import { Tr, Td } from '@chakra-ui/react';\n\nexport const TableDivider = () => {\n  return (\n    <Tr border=\"none\" borderTop=\"1px\" borderTopColor=\"gray.900\" width=\"100%\" height=\"0px\">\n      <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={4} />\n      <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={4} />\n      <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={4} />\n      <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={4} />\n      <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={4} />\n      <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={4} />\n      <Td height=\"0px\" border=\"none\" px={0} pt={0} pb={4} />\n    </Tr>\n  );\n};\n","import { Flex, Heading, Table, TableContainer, Tbody, Text, Tr } from '@chakra-ui/react';\nimport { POOL_ID } from '@snx-v3/constants';\nimport { useApr } from '@snx-v3/useApr';\nimport { NetworkIcon, useNetwork, useWallet } from '@snx-v3/useBlockchain';\nimport { useLiquidityPositions } from '@snx-v3/useLiquidityPositions';\nimport { useParams } from '@snx-v3/useParams';\nimport React from 'react';\nimport { PositionsEmpty } from './PositionEmpty';\nimport { PositionsNotConnected } from './PositionNotConnected';\nimport { PositionRow } from './PositionsRow';\nimport { PositionsRowLoading } from './PositionsRowLoading';\nimport { PositionTableHeader } from './PositionTableHeader';\nimport { TableDivider } from './TableDivider';\n\nexport const PositionsList = () => {\n  const [params] = useParams();\n  const { network } = useNetwork();\n  const { activeWallet } = useWallet();\n  const walletAddress = activeWallet?.address;\n\n  const { data: liquidityPositions, isPending: isPendingLiquidityPositions } =\n    useLiquidityPositions({ accountId: params.accountId });\n  const { data: apr } = useApr();\n\n  const filteredLiquidityPositions = React.useMemo(\n    () =>\n      liquidityPositions\n        ? liquidityPositions.filter((liquidityPosition) => {\n            if (liquidityPosition.collateralAmount.gt(0)) {\n              // there is some amount delegated\n              return true;\n            }\n\n            if (liquidityPosition.availableCollateral.gt(0)) {\n              // there is some amount deposited and available to withdraw\n              return true;\n            }\n\n            if (\n              network?.preset === 'andromeda' &&\n              liquidityPosition.collateralType.displaySymbol === 'USDC' &&\n              liquidityPosition.availableSystemToken.gt(0)\n            ) {\n              // special case for USDC on Andromeda to allow withdrawals of snxUSD\n              return true;\n            }\n\n            return false;\n          })\n        : [],\n    [liquidityPositions, network?.preset]\n  );\n\n  return (\n    <TableContainer\n      maxW=\"100%\"\n      borderColor=\"gray.900\"\n      borderWidth=\"1px\"\n      borderRadius=\"5px\"\n      p={6}\n      sx={{\n        borderCollapse: 'separate !important',\n        borderSpacing: 0,\n      }}\n      bg=\"navy.700\"\n    >\n      {!walletAddress ? <PositionsNotConnected /> : null}\n      {(walletAddress && !params.accountId) ||\n      (!isPendingLiquidityPositions && !filteredLiquidityPositions.length) ? (\n        <PositionsEmpty />\n      ) : null}\n      {params.accountId &&\n      (isPendingLiquidityPositions || filteredLiquidityPositions.length > 0) ? (\n        <>\n          <Heading\n            as={Flex}\n            alignItems=\"center\"\n            gap={2}\n            fontSize=\"18px\"\n            fontWeight={700}\n            lineHeight=\"28px\"\n            color=\"gray.50\"\n            mb={3}\n          >\n            {network ? (\n              <>\n                <NetworkIcon size=\"24px\" networkId={network.id} mr={1} />\n                <Text>{network.label} Network</Text>\n              </>\n            ) : null}\n          </Heading>\n\n          <Table variant=\"simple\">\n            <PositionTableHeader />\n            <Tbody>\n              <TableDivider />\n              {isPendingLiquidityPositions ? (\n                <PositionsRowLoading />\n              ) : (\n                <>\n                  {filteredLiquidityPositions?.map((liquidityPosition, i) => {\n                    const positionApr = apr?.collateralAprs?.find(\n                      (apr: { collateralType: string }) =>\n                        apr.collateralType.toLowerCase() ===\n                        liquidityPosition.collateralType.tokenAddress.toLowerCase()\n                    );\n\n                    return (\n                      <Tr\n                        key={`${POOL_ID}-${liquidityPosition.collateralType.tokenAddress}`}\n                        borderBottomWidth={\n                          i === filteredLiquidityPositions.length - 1 ? 'none' : '1px'\n                        }\n                      >\n                        <PositionRow\n                          liquidityPosition={liquidityPosition}\n                          apr={positionApr?.apr7d * 100}\n                        />\n                      </Tr>\n                    );\n                  })}\n                </>\n              )}\n            </Tbody>\n          </Table>\n        </>\n      ) : null}\n    </TableContainer>\n  );\n};\n","import { importRewardsDistributors } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useRewardsDistributors(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'RewardsDistributors'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw new Error('OMFG');\n      return importRewardsDistributors(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","export async function importRewardsDistributors(\n  chainId?: number,\n  preset?: string\n): Promise<\n  {\n    address: string;\n    name: string;\n    poolId: string;\n\n    // undefined for Pool-level distributors\n    collateralType?: {\n      address: string;\n      symbol: string;\n      name: string;\n      decimals: number;\n    };\n\n    payoutToken: {\n      address: string;\n      symbol: string;\n      name: string;\n      decimals: number;\n    };\n    rewardManager: string;\n    isRegistered: boolean;\n  }[]\n> {\n  if (!preset) {\n    throw new Error(`Missing preset`);\n  }\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '1-main': {\n      const [{ default: rewardsDistributors }] = await Promise.all([\n        import('@synthetixio/v3-contracts/1-main/rewardsDistributors.json'),\n      ]);\n      return rewardsDistributors;\n    }\n    case '11155111-main': {\n      const [{ default: rewardsDistributors }] = await Promise.all([\n        import('@synthetixio/v3-contracts/11155111-main/rewardsDistributors.json'),\n      ]);\n      return rewardsDistributors;\n    }\n    case '10-main': {\n      const [{ default: rewardsDistributors }] = await Promise.all([\n        import('@synthetixio/v3-contracts/10-main/rewardsDistributors.json'),\n      ]);\n      return rewardsDistributors;\n    }\n    case '8453-andromeda': {\n      const [{ default: rewardsDistributors }] = await Promise.all([\n        import('@synthetixio/v3-contracts/8453-andromeda/rewardsDistributors.json'),\n      ]);\n      return rewardsDistributors;\n    }\n    case '84532-andromeda': {\n      const [{ default: rewardsDistributors }] = await Promise.all([\n        import('@synthetixio/v3-contracts/84532-andromeda/rewardsDistributors.json'),\n      ]);\n      return rewardsDistributors;\n    }\n    case '42161-main': {\n      const [{ default: rewardsDistributors }] = await Promise.all([\n        import('@synthetixio/v3-contracts/42161-main/rewardsDistributors.json'),\n      ]);\n      return rewardsDistributors;\n    }\n    case '421614-main': {\n      const [{ default: rewardsDistributors }] = await Promise.all([\n        import('@synthetixio/v3-contracts/421614-main/rewardsDistributors.json'),\n      ]);\n      return rewardsDistributors;\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for RewardsDistributors`);\n    }\n  }\n}\n","import { POOL_ID } from '@snx-v3/constants';\nimport { contractsHash } from '@snx-v3/tsHelpers';\n// import { useAllErrors } from '@snx-v3/useAllErrors';\nimport { useNetwork, useProvider } from '@snx-v3/useBlockchain';\nimport { useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useTrustedMulticallForwarder } from '@snx-v3/useTrustedMulticallForwarder';\nimport { useRewardsDistributors } from '@snx-v3/useRewardsDistributors';\nimport { useSynthTokens } from '@snx-v3/useSynthTokens';\nimport { Wei, wei } from '@synthetixio/wei';\nimport { useQuery } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\nimport { tokenOverrides } from '@snx-v3/constants';\n\nconst log = debug('snx:useRewards');\n\nexport function groupRewardsBySymbol({\n  rewards,\n  synthTokens,\n}: {\n  rewards?: {\n    distributor: {\n      payoutToken: {\n        address: string;\n        symbol: string;\n      };\n    };\n    claimableAmount: Wei;\n  }[];\n  synthTokens?: {\n    address: string;\n    token?: {\n      address: string;\n      symbol: string;\n    };\n  }[];\n}):\n  | undefined\n  | {\n      displaySymbol: string;\n      claimableAmount: Wei;\n    }[] {\n  if (rewards && rewards.length > 0) {\n    const map = new Map();\n    rewards\n      .filter(({ claimableAmount }) => claimableAmount.gt(0))\n      .forEach(({ distributor, claimableAmount }) => {\n        const synthToken = synthTokens?.find(\n          (synth) => synth.address.toLowerCase() === distributor.payoutToken.address.toLowerCase()\n        );\n        const token = synthToken && synthToken.token ? synthToken.token : distributor.payoutToken;\n        const displaySymbol = tokenOverrides[token.address] ?? token.symbol;\n        if (map.has(displaySymbol)) {\n          map.set(displaySymbol, map.get(displaySymbol).add(claimableAmount));\n        } else {\n          map.set(displaySymbol, claimableAmount);\n        }\n      });\n    return Array.from(map.entries())\n      .map(([displaySymbol, claimableAmount]) => ({\n        displaySymbol,\n        claimableAmount,\n      }))\n      .sort((a, b) => a.displaySymbol.localeCompare(b.displaySymbol))\n      .sort((a, b) => b.claimableAmount.toNumber() - a.claimableAmount.toNumber());\n  }\n}\n\nexport function useRewards({ accountId }: { accountId?: string }) {\n  const { network } = useNetwork();\n  const provider = useProvider();\n  const { data: synthTokens } = useSynthTokens();\n  const { data: collateralTypes } = useCollateralTypes();\n  const { data: Multicall3 } = useTrustedMulticallForwarder(network);\n  const { data: CoreProxy } = useCoreProxy(network);\n  // const { data: AllErrors } = useAllErrors(network);\n  const { data: rewardsDistributors } = useRewardsDistributors(network);\n\n  return useQuery({\n    enabled: Boolean(\n      network &&\n        CoreProxy &&\n        Multicall3 &&\n        // AllErrors &&\n        rewardsDistributors &&\n        accountId &&\n        collateralTypes &&\n        synthTokens\n    ),\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'Rewards',\n      { accountId },\n      {\n        contractsHash: contractsHash([\n          CoreProxy,\n          Multicall3,\n          ...(rewardsDistributors ?? []),\n          ...(synthTokens ?? []),\n          ...(collateralTypes ?? []),\n        ]),\n      },\n    ],\n    queryFn: async () => {\n      if (\n        !(\n          CoreProxy &&\n          Multicall3 &&\n          // AllErrors &&\n          rewardsDistributors &&\n          accountId &&\n          collateralTypes &&\n          synthTokens\n        )\n      ) {\n        throw new Error('OMG');\n      }\n\n      const vaultDistributors = rewardsDistributors\n        .map((distributor) => {\n          if (distributor.collateralType) {\n            return {\n              method: 'getAvailableRewards',\n              claimMethod: 'claimRewards',\n              args: [\n                ethers.BigNumber.from(accountId),\n                ethers.BigNumber.from(POOL_ID),\n                distributor.collateralType.address,\n                distributor.address,\n              ],\n              distributor,\n              collateralType: distributor.collateralType,\n            };\n          }\n        })\n        .filter((item) => item !== undefined);\n      log('vaultDistributors', vaultDistributors);\n\n      const poolDistributors = rewardsDistributors\n        .filter((distributor) => !distributor.collateralType)\n        .filter((distributor) => !distributor.name.includes('Liquidation Rewards'))\n        .flatMap((distributor) => ({\n          method: 'getAvailablePoolRewards',\n          claimMethod: 'claimPoolRewards',\n          args: [\n            ethers.BigNumber.from(accountId),\n            ethers.BigNumber.from(POOL_ID),\n            ethers.constants.AddressZero,\n            distributor.address,\n          ],\n          distributor,\n          collateralType: undefined,\n        }));\n      log('poolDistributors', poolDistributors);\n\n      const poolDistributorsPerCollateral = rewardsDistributors\n        .filter((distributor) => !distributor.collateralType)\n        .filter((distributor) => !distributor.name.includes('Liquidation Rewards'))\n        .flatMap((distributor) =>\n          collateralTypes.map((collateralType) => ({\n            method: 'getAvailablePoolRewards',\n            claimMethod: 'claimPoolRewards',\n            args: [\n              ethers.BigNumber.from(accountId),\n              ethers.BigNumber.from(POOL_ID),\n              collateralType.address,\n              distributor.address,\n            ],\n            distributor,\n            collateralType,\n          }))\n        );\n      log('poolDistributorsPerCollateral', poolDistributorsPerCollateral);\n\n      const liquidationRewardsDistributors = rewardsDistributors\n        .filter((distributor) => !distributor.collateralType)\n        .filter((distributor) => distributor.name.includes('Liquidation Rewards'))\n        .flatMap((distributor) =>\n          collateralTypes.map((collateralType) => ({\n            method: 'getAvailableRewards',\n            claimMethod: 'claimRewards',\n            args: [\n              ethers.BigNumber.from(accountId),\n              ethers.BigNumber.from(POOL_ID),\n              collateralType.address,\n              distributor.address,\n            ],\n            distributor,\n            collateralType,\n          }))\n        );\n      log('liquidationRewardsDistributors', liquidationRewardsDistributors);\n\n      const multicall = [\n        ...vaultDistributors,\n        ...poolDistributors,\n        ...poolDistributorsPerCollateral,\n        ...liquidationRewardsDistributors,\n      ];\n      log('multicall', multicall);\n\n      const CoreProxyContract = new ethers.Contract(CoreProxy.address, CoreProxy.abi, provider);\n      const calls = await Promise.all(\n        multicall.map(async ({ method, args }) => {\n          const { to, data } = await CoreProxyContract.populateTransaction[method](...args);\n          return {\n            target: to,\n            callData: data,\n            allowFailure: true,\n          };\n        })\n      );\n      log('calls', calls);\n\n      const Multicall3Contract = new ethers.Contract(Multicall3.address, Multicall3.abi, provider);\n      const multicallResponse = await Multicall3Contract.callStatic.aggregate3(calls);\n      log('multicallResponse', multicallResponse);\n\n      // const AllErrorsInterface = new ethers.utils.Interface(AllErrors.abi);\n      const availableRewards = multicall\n        .map(({ method, claimMethod, args, distributor, collateralType }, i) => {\n          const { success, returnData } = multicallResponse[i];\n          if (!success) {\n            // log(\n            //   `${method} call error for ${distributor.name}`,\n            //   AllErrorsInterface.parseError(returnData)\n            // );\n            return;\n          }\n          const [amount] = CoreProxyContract.interface.decodeFunctionResult(method, returnData);\n          return {\n            method,\n            claimMethod,\n            args,\n            distributor,\n            collateralType,\n            claimableAmount: wei(amount),\n          };\n        })\n        .filter((info) => info !== undefined);\n      log('availableRewards', availableRewards);\n      return availableRewards;\n    },\n  });\n}\n","import { importSpotMarketProxy } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useSpotMarketProxy(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'SpotMarketProxy'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw new Error('OMFG');\n      return importSpotMarketProxy(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","import { useToast } from '@chakra-ui/react';\nimport { D18 } from '@snx-v3/constants';\nimport { ContractError } from '@snx-v3/ContractError';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { useCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useRewards } from '@snx-v3/useRewards';\nimport { useSpotMarketProxy } from '@snx-v3/useSpotMarketProxy';\nimport { useSynthTokens } from '@snx-v3/useSynthTokens';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\nimport React from 'react';\n\nconst log = debug('snx:useClaimAllRewards');\n\nexport function useClaimAllRewards({ accountId }: { accountId?: string }) {\n  const { data: rewards } = useRewards({ accountId });\n\n  const toast = useToast({ isClosable: true, duration: 9000 });\n\n  const { network } = useNetwork();\n  const { data: SpotMarketProxy } = useSpotMarketProxy();\n  const signer = useSigner();\n  const { data: CoreProxy } = useCoreProxy();\n  const [txnState, dispatch] = React.useReducer(reducer, initialState);\n  const queryClient = useQueryClient();\n  const provider = useProvider();\n  const { data: synthTokens } = useSynthTokens();\n\n  const { data: priceUpdateTx } = useCollateralPriceUpdates();\n\n  const errorParser = useContractErrorParser();\n\n  const mutation = useMutation({\n    mutationFn: async function () {\n      if (\n        !(network && provider && signer && SpotMarketProxy && CoreProxy && rewards && synthTokens)\n      ) {\n        throw new Error('Not ready');\n      }\n\n      dispatch({ type: 'prompting' });\n\n      const transactions: Promise<ethers.PopulatedTransaction>[] = [];\n\n      const CoreProxyContract = new ethers.Contract(CoreProxy.address, CoreProxy.abi, signer);\n      const SpotMarketProxyContract = new ethers.Contract(\n        SpotMarketProxy.address,\n        SpotMarketProxy.abi,\n        signer\n      );\n\n      rewards.forEach(({ distributor, claimableAmount, claimMethod, args }) => {\n        if (claimableAmount.gt(0)) {\n          transactions.push(CoreProxyContract.populateTransaction[claimMethod](...args));\n\n          const synthToken = synthTokens.find(\n            (synth) => synth.address.toLowerCase() === distributor.payoutToken.address.toLowerCase()\n          );\n          if (synthToken && synthToken.token) {\n            const minAmountReceived = claimableAmount\n              .toBN()\n              .sub(claimableAmount.toBN().div(100))\n              // Adjust precision for underlying token\n              .mul(ethers.utils.parseUnits('1', synthToken.token.decimals))\n              .div(D18);\n\n            transactions.push(\n              SpotMarketProxyContract.populateTransaction.unwrap(\n                synthToken.synthMarketId,\n                claimableAmount.toBN(),\n                minAmountReceived\n              )\n            );\n          }\n        }\n      });\n\n      const calls = await Promise.all(transactions);\n      log('calls', calls);\n\n      if (priceUpdateTx) {\n        calls.unshift(priceUpdateTx as any);\n      }\n\n      const walletAddress = await signer.getAddress();\n      const { multicallTxn: erc7412Tx, gasLimit } = await withERC7412(\n        provider,\n        network,\n        calls,\n        'useClaimAllRewards',\n        walletAddress\n      );\n      const txn = await signer.sendTransaction({\n        ...erc7412Tx,\n        gasLimit: gasLimit.mul(15).div(10),\n      });\n      log('txn', txn);\n      dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n      return receipt;\n    },\n\n    onError(error) {\n      const contractError = errorParser(error);\n      if (contractError) {\n        console.error(new Error(contractError.name), contractError);\n      }\n\n      dispatch({ type: 'error', payload: { error } });\n\n      toast.closeAll();\n      toast({\n        title: 'Claiming failed',\n        description: contractError ? (\n          <ContractError contractError={contractError} />\n        ) : (\n          'Please try again.'\n        ),\n        status: 'error',\n        variant: 'left-accent',\n        duration: 3_600_000,\n      });\n    },\n\n    onSuccess: async () => {\n      const deployment = `${network?.id}-${network?.preset}`;\n      await Promise.all(\n        [\n          //\n          'PriceUpdates',\n          'Rewards',\n          'TokenBalance',\n          'SynthBalances',\n          'EthBalance',\n        ].map((key) => queryClient.invalidateQueries({ queryKey: [deployment, key] }))\n      );\n      dispatch({ type: 'success' });\n\n      toast.closeAll();\n      toast({\n        title: 'Success',\n        description: 'Your rewards have been claimed',\n        status: 'success',\n        duration: 5000,\n        variant: 'left-accent',\n      });\n    },\n  });\n\n  return {\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n}\n","import { Alert, AlertIcon, Text } from '@chakra-ui/react';\n\nexport function WithdrawIncrease() {\n  return (\n    <Alert borderRadius=\"6px\" status=\"warning\" mb=\"6\">\n      <AlertIcon />\n      <Text>This action will reset the withdrawal waiting period to 24 hours</Text>\n    </Alert>\n  );\n}\n","import { CheckIcon } from '@chakra-ui/icons';\nimport {\n  Button,\n  CircularProgress,\n  Divider,\n  Flex,\n  Link,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalOverlay,\n  Text,\n} from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { etherscanLink } from '@snx-v3/etherscanLink';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { groupRewardsBySymbol, useRewards } from '@snx-v3/useRewards';\nimport { useSynthTokens } from '@snx-v3/useSynthTokens';\nimport { WithdrawIncrease } from '@snx-v3/WithdrawIncrease';\nimport { Wei } from '@synthetixio/wei';\nimport React from 'react';\n\nexport function AllRewardsModal({\n  txnStatus,\n  txnHash,\n}: {\n  txnStatus?: string;\n  txnHash: string | null;\n}) {\n  const [params] = useParams<PositionPageSchemaType>();\n  const { network } = useNetwork();\n  const { data: rewards } = useRewards({ accountId: params.accountId });\n  const { data: synthTokens } = useSynthTokens();\n\n  const [isOpen, setIsOpen] = React.useState(false);\n  // This caching is necessary to keep initial values after success and not reset them to zeroes\n  const [cachedRewards, setCachedRewards] = React.useState<\n    { displaySymbol: string; claimableAmount: Wei }[] | undefined\n  >();\n\n  const onClose = React.useCallback(() => {\n    setIsOpen(false);\n    setCachedRewards(undefined);\n  }, []);\n\n  React.useEffect(() => {\n    if (txnStatus === 'prompting') {\n      setIsOpen(true);\n    }\n    if (txnStatus === 'error') {\n      onClose();\n    }\n  }, [onClose, txnStatus]);\n\n  React.useEffect(() => {\n    if (isOpen && rewards && synthTokens) {\n      const groupedRewards = groupRewardsBySymbol({ rewards, synthTokens });\n      if (!cachedRewards) {\n        setCachedRewards(groupedRewards);\n      }\n    }\n  }, [isOpen, rewards, synthTokens, cachedRewards]);\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay bg=\"#06061B80\" />\n      <ModalContent\n        bg=\"navy.700\"\n        mt=\"10%\"\n        borderWidth=\"1px\"\n        borderColor=\"gray.900\"\n        minWidth=\"384px\"\n      >\n        <ModalBody data-cy=\"claim rewards dialog\" p={6}>\n          <Text color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n            Claiming Rewards\n          </Text>\n\n          <Divider my={4} />\n\n          <Flex\n            position=\"relative\"\n            alignItems=\"center\"\n            gap={4}\n            mb={6}\n            rounded=\"lg\"\n            mt=\"6\"\n            p=\"4\"\n            border=\"2px solid\"\n            transitionProperty=\"border-color\"\n            transitionDuration=\"normal\"\n            borderColor={txnStatus === 'success' ? 'green.500' : 'gray.900'}\n          >\n            <Flex\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              borderRadius=\"100px\"\n              bg={txnStatus === 'success' ? 'green.600' : 'gray.900'}\n              width=\"40px\"\n              height=\"40px\"\n              p={3}\n            >\n              {txnStatus === 'success' ? (\n                <CheckIcon color=\"white\" />\n              ) : (\n                <CircularProgress size=\"25px\" isIndeterminate color=\"gray.700\" />\n              )}\n            </Flex>\n            <Flex\n              flexDirection=\"column\"\n              alignItems=\"space-between\"\n              justifyContent=\"space-between\"\n              ml={2}\n              data-cy=\"claim rewards info\"\n            >\n              {cachedRewards ? (\n                cachedRewards.map(({ displaySymbol, claimableAmount }) => (\n                  <Text\n                    key={displaySymbol}\n                    fontSize=\"14px\"\n                    fontWeight={700}\n                    lineHeight=\"20px\"\n                    color=\"white\"\n                  >\n                    <Amount\n                      prefix={txnStatus === 'success' ? 'Claimed ' : 'Claiming '}\n                      value={claimableAmount}\n                      suffix={` ${displaySymbol}`}\n                    />\n                  </Text>\n                ))\n              ) : (\n                <Text fontSize=\"12px\" lineHeight=\"16px\" color=\"gray.500\">\n                  Claim your rewards\n                </Text>\n              )}\n            </Flex>\n          </Flex>\n          <WithdrawIncrease />\n          {txnStatus === 'success' ? (\n            <Button\n              mt={5}\n              variant=\"solid\"\n              justifyContent=\"center\"\n              px={3}\n              py={3}\n              width=\"100%\"\n              textAlign=\"center\"\n              onClick={onClose}\n            >\n              Done\n            </Button>\n          ) : null}\n          {txnHash && (\n            <Flex\n              justifyContent=\"center\"\n              px={3}\n              py={3}\n              mt={6}\n              mb={1}\n              borderTop=\"1px solid\"\n              borderTopColor=\"gray.900\"\n              data-cy=\"transaction hash\"\n            >\n              <Link\n                variant=\"outline\"\n                href={etherscanLink({ chain: network?.name || '', address: txnHash, isTx: true })}\n                fontFamily=\"heading\"\n                color=\"cyan.500\"\n                fontWeight={700}\n                lineHeight=\"20px\"\n                fontSize=\"14px\"\n                target=\"_blank\"\n                mt={3}\n              >\n                View Transaction\n              </Link>\n            </Flex>\n          )}\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import { Skeleton, SkeletonCircle, Td, Text, Tr } from '@chakra-ui/react';\n\nexport const RewardsLoading = () => (\n  <Tr>\n    <Td pl=\"16px\" border=\"none\">\n      <SkeletonCircle startColor=\"whiteAlpha.500\" endColor=\"whiteAlpha.200\" h=\"30px\" w=\"30px\" />\n    </Td>\n    <Td pl=\"16px\" border=\"none\">\n      <Skeleton startColor=\"whiteAlpha.500\" endColor=\"whiteAlpha.200\" height=\"30px\">\n        <Text mr={4}>Loading</Text>\n      </Skeleton>\n    </Td>\n    <Td textAlign=\"end\" pr=\"0px\" border=\"none\">\n      <Skeleton startColor=\"whiteAlpha.500\" endColor=\"whiteAlpha.200\" height=\"30px\">\n        <Text>Loading</Text>\n      </Skeleton>\n    </Td>\n  </Tr>\n);\n","import { Fade, Flex, Td, Text, Tr } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { TokenIcon } from '@snx-v3/TokenIcon';\nimport Wei from '@synthetixio/wei';\nimport React from 'react';\n\nexport function RewardsRow({\n  displaySymbol,\n  claimableAmount,\n}: {\n  displaySymbol: string;\n  claimableAmount: Wei;\n}) {\n  return (\n    <>\n      <Tr>\n        <Td display=\"flex\" alignItems=\"center\" px={4} py={3} border=\"none\" w=\"100%\">\n          <Fade in>\n            <TokenIcon height={30} width={30} symbol={displaySymbol} />\n          </Fade>\n          <Fade in>\n            <Flex flexDirection=\"column\" ml=\"12px\">\n              <Text\n                color=\"gray.50\"\n                fontSize=\"14px\"\n                fontFamily=\"heading\"\n                fontWeight={500}\n                lineHeight=\"20px\"\n              >\n                {displaySymbol}\n              </Text>\n            </Flex>\n          </Fade>\n        </Td>\n        <Td alignItems=\"center\" px={4} py={3} border=\"none\">\n          <Fade in>\n            <Text\n              color=\"gray.50\"\n              fontSize=\"14px\"\n              fontFamily=\"heading\"\n              fontWeight={500}\n              lineHeight=\"20px\"\n            >\n              <Amount value={claimableAmount} showTooltip />\n            </Text>\n          </Fade>\n        </Td>\n      </Tr>\n    </>\n  );\n}\n","import { InfoIcon } from '@chakra-ui/icons';\nimport {\n  Button,\n  Flex,\n  Heading,\n  Table,\n  TableContainer,\n  Tbody,\n  Td,\n  Text,\n  Th,\n  Thead,\n  Tr,\n} from '@chakra-ui/react';\nimport { Tooltip } from '@snx-v3/Tooltip';\nimport { useClaimAllRewards } from '@snx-v3/useClaimAllRewards';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { groupRewardsBySymbol, useRewards } from '@snx-v3/useRewards';\nimport { useSynthTokens } from '@snx-v3/useSynthTokens';\nimport React from 'react';\nimport { AllRewardsModal } from './AllRewardsModal';\nimport { RewardsLoading } from './RewardsLoading';\nimport { RewardsRow } from './RewardsRow';\n\nexport function Rewards() {\n  const [params] = useParams<PositionPageSchemaType>();\n  const { data: rewards, isPending: isPendingRewards } = useRewards({\n    accountId: params.accountId,\n  });\n  const { exec: claimAll, txnState } = useClaimAllRewards({ accountId: params.accountId });\n\n  const { data: synthTokens } = useSynthTokens();\n  const groupedRewards = React.useMemo(\n    () => groupRewardsBySymbol({ rewards, synthTokens }),\n    [rewards, synthTokens]\n  );\n\n  return (\n    <TableContainer>\n      <AllRewardsModal txnStatus={txnState.txnStatus} txnHash={txnState.txnHash} />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Heading fontSize=\"18px\" fontWeight={700} lineHeight=\"28px\" color=\"gray.50\" mb={3}>\n          Rewards\n        </Heading>\n        <Button\n          size=\"sm\"\n          variant=\"solid\"\n          isDisabled={!(groupedRewards && groupedRewards.length > 0)}\n          _disabled={{\n            bg: 'gray.900',\n            backgroundImage: 'none',\n            color: 'gray.500',\n            opacity: 0.5,\n            cursor: 'not-allowed',\n          }}\n          data-cy=\"claim rewards submit\"\n          onClick={() => claimAll()}\n        >\n          Claim\n        </Button>\n      </Flex>\n\n      <Table data-cy=\"rewards table\">\n        <Thead>\n          <Tr borderBottom=\"1px solid #2D2D38\">\n            <Th\n              textTransform=\"unset\"\n              color=\"gray.600\"\n              border=\"none\"\n              fontFamily=\"heading\"\n              fontSize=\"12px\"\n              lineHeight=\"16px\"\n              letterSpacing={0.6}\n              fontWeight={700}\n              px={4}\n              py={3}\n            >\n              Token\n              <Tooltip label=\"Total rewards active for the Pool\">\n                <InfoIcon ml={1} mb=\"1px\" />\n              </Tooltip>\n            </Th>\n            <Th\n              textTransform=\"unset\"\n              color=\"gray.600\"\n              border=\"none\"\n              fontFamily=\"heading\"\n              fontSize=\"12px\"\n              lineHeight=\"16px\"\n              letterSpacing={0.6}\n              fontWeight={700}\n              px={4}\n              py={3}\n            >\n              Earnings\n            </Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {!params.accountId ? (\n            <Tr>\n              <Td display=\"flex\" alignItems=\"left\" px={4} border=\"none\" w=\"100%\">\n                <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"xs\">\n                  Create a Position to see your earnings\n                </Text>\n              </Td>\n            </Tr>\n          ) : null}\n\n          {params.accountId && isPendingRewards ? <RewardsLoading /> : null}\n\n          {groupedRewards && groupedRewards.length === 0 ? (\n            <Tr>\n              <Td display=\"flex\" alignItems=\"left\" px={4} border=\"none\" w=\"100%\">\n                <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"xs\">\n                  No Rewards Available\n                </Text>\n              </Td>\n            </Tr>\n          ) : null}\n\n          {groupedRewards && groupedRewards.length\n            ? groupedRewards.map(({ displaySymbol, claimableAmount }) => (\n                <RewardsRow\n                  key={displaySymbol}\n                  displaySymbol={displaySymbol}\n                  claimableAmount={claimableAmount}\n                />\n              ))\n            : null}\n        </Tbody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import { contractsHash } from '@snx-v3/tsHelpers';\nimport { Network, useNetwork, useProviderForChain } from '@snx-v3/useBlockchain';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { erc7412Call } from '@snx-v3/withERC7412';\nimport { useQuery } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\n\nconst log = debug('snx:useCollateralPrices');\n\nexport function useCollateralPrices(collateralAddresses: Set<string>, customNetwork?: Network) {\n  const { network: currentNetwork } = useNetwork();\n  const network = customNetwork ?? currentNetwork;\n  const provider = useProviderForChain(network);\n\n  const { data: CoreProxy } = useCoreProxy(customNetwork);\n\n  return useQuery({\n    enabled: Boolean(network && provider && CoreProxy && collateralAddresses),\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'CollateralPrices',\n      {\n        contractsHash: contractsHash([\n          CoreProxy,\n          ...Array.from(collateralAddresses).map((address) => ({ address })),\n        ]),\n      },\n    ],\n    queryFn: async () => {\n      if (!(network && provider && CoreProxy && collateralAddresses)) {\n        throw new Error('OMFG');\n      }\n      const CoreProxyContract = new ethers.Contract(CoreProxy.address, CoreProxy.abi, provider);\n\n      const multicall = Array.from(collateralAddresses).map((address) => ({\n        method: 'getCollateralPrice',\n        args: [address],\n        address,\n      }));\n      log('multicall', multicall);\n\n      const calls = await Promise.all(\n        multicall.map(({ method, args }) => CoreProxyContract.populateTransaction[method](...args))\n      );\n      log('calls', calls);\n\n      const prices = await erc7412Call(\n        network,\n        provider,\n        calls.map((txn: ethers.PopulatedTransaction & { requireSuccess?: boolean }) => {\n          txn.requireSuccess = false;\n          return txn;\n        }),\n        (decodedMulticall) => {\n          return multicall.reduce((result, call, i) => {\n            if (decodedMulticall[i].success) {\n              const [price] = CoreProxyContract.interface.decodeFunctionResult(\n                'getCollateralPrice',\n                decodedMulticall[i].returnData\n              );\n              result.set(call.address, price);\n            }\n            return result;\n          }, new Map());\n        },\n        'useCollateralPrices'\n      );\n      log('prices', prices);\n      return prices;\n    },\n  });\n}\n","import { EvmPriceServiceConnection } from '@pythnetwork/pyth-evm-js';\nimport { offchainMainnetEndpoint } from '@snx-v3/constants';\nimport { useQuery } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\n\nconst priceService = new EvmPriceServiceConnection(offchainMainnetEndpoint);\n\nexport const usePythPrice = (symbol?: string) => {\n  return useQuery({\n    queryKey: ['PythPrice', symbol],\n    enabled: Boolean(symbol),\n    queryFn: async () => {\n      if (symbol === 'SNX') {\n        const response = await priceService.getLatestPriceFeeds([\n          '0x39d020f60982ed892abbcd4a06a276a9f9b7bfbce003204c110b6e488f502da3',\n        ]);\n        if (response) {\n          const [priceFeed] = response;\n          const { price, expo } = priceFeed.getPriceUnchecked();\n          return ethers.utils.parseUnits(price, 18 + expo);\n        }\n      }\n      return ethers.BigNumber.from(0);\n    },\n  });\n};\n","import { InfoIcon } from '@chakra-ui/icons';\nimport { Fade, Flex, Text } from '@chakra-ui/react';\nimport { Tooltip } from '@snx-v3/Tooltip';\nimport { ReactNode } from 'react';\nimport { SynthSkeleton } from '../SynthSkeleton/SynthSkeleton';\n\ninterface StatBoxProps {\n  isLoading: boolean;\n  title: string;\n  label?: string | ReactNode;\n  value?: ReactNode;\n}\n\nexport const StatBox = ({ isLoading, title, label, value }: StatBoxProps) => {\n  return (\n    <Flex\n      bg=\"navy.700\"\n      border=\"1px solid\"\n      borderColor=\"gray.900\"\n      rounded=\"base\"\n      flexDir=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      minWidth=\"200px\"\n      flex={1}\n      height=\"160px\"\n      px={6}\n      py={4}\n    >\n      <Flex alignItems=\"center\" mb={1}>\n        <Text fontSize=\"14px\" color=\"gray.500\" mr={1}>\n          {title}\n        </Text>\n        {label && (\n          <Tooltip label={label} p={3} mt={1}>\n            <InfoIcon w=\"10px\" h=\"10px\" />\n          </Tooltip>\n        )}\n      </Flex>\n      <Flex w=\"100%\" justifyContent=\"center\" alignItems=\"center\">\n        <SynthSkeleton\n          isLoaded={!isLoading}\n          height=\"24px\"\n          minWidth={isLoading ? '40%' : 'initial'}\n          startColor=\"gray.700\"\n          endColor=\"navy.800\"\n        >\n          <Fade in>\n            <Text\n              fontSize=\"24px\"\n              lineHeight=\"24px\"\n              fontWeight={800}\n              data-cy=\"stats box\"\n              data-title={title}\n            >\n              {value || '$0.00'}\n            </Text>\n          </Fade>\n        </SynthSkeleton>\n      </Flex>\n    </Flex>\n  );\n};\n","import { Flex, Text } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { PnlAmount } from '@snx-v3/DebtAmount';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useCollateralPrices } from '@snx-v3/useCollateralPrices';\nimport { useLiquidityPositions } from '@snx-v3/useLiquidityPositions';\nimport { useParams } from '@snx-v3/useParams';\nimport { usePythPrice } from '@snx-v3/usePythPrice';\nimport { useRewards } from '@snx-v3/useRewards';\nimport { wei } from '@synthetixio/wei';\nimport React from 'react';\nimport { StatBox } from './StatBox';\n\nexport const StatsList = () => {\n  const [params] = useParams();\n  const { network } = useNetwork();\n\n  const { data: rewards, isPending: isPendingRewards } = useRewards({\n    accountId: params.accountId,\n  });\n\n  const { data: snxPrice, isPending: isPendingSnxPrice } = usePythPrice('SNX');\n\n  const rewardsTokens = React.useMemo(() => {\n    const result: Set<string> = new Set();\n    if (rewards) {\n      for (const reward of rewards) {\n        if (reward.claimableAmount.gt(0)) {\n          result.add(reward.distributor.payoutToken.address);\n        }\n      }\n    }\n    return result;\n  }, [rewards]);\n\n  const { data: rewardsTokenPrices, isPending: isPendingRewardsPrices } = useCollateralPrices(\n    rewardsTokens,\n    network\n  );\n\n  const totalRewardsValue = React.useMemo(() => {\n    if (rewards && rewardsTokenPrices && snxPrice) {\n      return rewards.reduce((result, reward) => {\n        // all rewards should have price except SNX as it is not a collateral on Base\n        if (reward.distributor.payoutToken.symbol === 'SNX') {\n          return result.add(reward.claimableAmount.mul(snxPrice));\n        }\n        if (rewardsTokenPrices.has(reward.distributor.payoutToken.address)) {\n          return result.add(\n            reward.claimableAmount.mul(\n              rewardsTokenPrices.get(reward.distributor.payoutToken.address)\n            )\n          );\n        }\n        return result;\n      }, wei(0));\n    }\n  }, [rewards, rewardsTokenPrices, snxPrice]);\n\n  const { data: liquidityPositions, isPending: isPendingLiquidityPositions } =\n    useLiquidityPositions({\n      accountId: params.accountId,\n    });\n\n  const totalDebt = React.useMemo(() => {\n    if (liquidityPositions) {\n      return liquidityPositions.reduce(\n        (result, liquidityPosition) => result.add(liquidityPosition.debt),\n        wei(0)\n      );\n    }\n  }, [liquidityPositions]);\n\n  const totalAssets = React.useMemo(\n    () =>\n      liquidityPositions\n        ? liquidityPositions.reduce(\n            (result, liquidityPosition) =>\n              result.add(\n                liquidityPosition.availableCollateral.mul(liquidityPosition.collateralPrice)\n              ),\n            wei(0)\n          )\n        : wei(0),\n    [liquidityPositions]\n  );\n\n  const totalLocked = React.useMemo(\n    () =>\n      liquidityPositions\n        ? liquidityPositions.reduce(\n            (result, liquidityPosition) =>\n              result.add(liquidityPosition.collateralAmount.mul(liquidityPosition.collateralPrice)),\n            wei(0)\n          )\n        : wei(0),\n    [liquidityPositions]\n  );\n\n  return (\n    <Flex flexWrap=\"wrap\" w=\"100%\" gap=\"4\">\n      <StatBox\n        title=\"Available to Lock\"\n        isLoading={!(params.accountId && !isPendingLiquidityPositions)}\n        value={<Amount prefix=\"$\" value={wei(totalAssets || '0')} />}\n        label={\n          <>\n            <Text textAlign=\"left\">\n              Total assets that can be Locked, including:\n              <br /> - Unlocked assets not yet withdrawn\n              <br /> - Available assets in your wallet\n            </Text>\n          </>\n        }\n      />\n\n      <StatBox\n        title=\"Total Locked\"\n        isLoading={!(params.accountId && !isPendingLiquidityPositions)}\n        value={<Amount prefix=\"$\" value={wei(totalLocked || '0')} />}\n        label={\n          <>\n            <Text textAlign=\"left\">All assets locked in Positions </Text>\n          </>\n        }\n      />\n\n      <StatBox\n        title=\"Total PNL\"\n        isLoading={\n          !(\n            params.accountId &&\n            !isPendingLiquidityPositions &&\n            !isPendingRewards &&\n            !isPendingSnxPrice &&\n            !isPendingRewardsPrices\n          )\n        }\n        value={\n          totalDebt && totalRewardsValue ? (\n            <PnlAmount debt={totalDebt.sub(totalRewardsValue)} />\n          ) : null\n        }\n        label={\n          <Text textAlign=\"left\">\n            Aggregated PNL of all your open Positions and combined value of all your Rewards\n          </Text>\n        }\n      />\n    </Flex>\n  );\n};\n","import { contractsHash } from '@snx-v3/tsHelpers';\nimport { useNetwork, useProvider, useWallet } from '@snx-v3/useBlockchain';\nimport { useTrustedMulticallForwarder } from '@snx-v3/useTrustedMulticallForwarder';\nimport { useSynthTokens } from '@snx-v3/useSynthTokens';\nimport { wei } from '@synthetixio/wei';\nimport { useQuery } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\n\nconst log = debug('snx:useSynthBalances');\n\nexport function useSynthBalances() {\n  const { network } = useNetwork();\n  const provider = useProvider();\n  const { activeWallet } = useWallet();\n  const walletAddress = activeWallet?.address;\n\n  const { data: synthTokens } = useSynthTokens();\n  const { data: Multicall3 } = useTrustedMulticallForwarder();\n\n  return useQuery({\n    enabled: Boolean(network && Multicall3 && synthTokens && walletAddress),\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'SynthBalances',\n      { walletAddress },\n      {\n        contractsHash: contractsHash([Multicall3, ...(synthTokens ?? [])]),\n      },\n    ],\n    queryFn: async () => {\n      if (!(network && Multicall3 && synthTokens && walletAddress)) {\n        throw new Error('OMG');\n      }\n      log('synthTokens', synthTokens);\n\n      const TokenInterface = new ethers.utils.Interface([\n        'function balanceOf(address) view returns (uint256)',\n      ]);\n      const multicall = synthTokens.map((synth) => ({\n        synth,\n        method: 'balanceOf',\n        args: [walletAddress],\n        target: synth.address,\n        callData: TokenInterface.encodeFunctionData('balanceOf', [walletAddress]),\n        allowFailure: true,\n      }));\n      log('multicall', multicall);\n\n      const Multicall3Contract = new ethers.Contract(Multicall3.address, Multicall3.abi, provider);\n      const multicallResponse = await Multicall3Contract.callStatic.aggregate3(\n        multicall.map(({ target, callData, allowFailure }) => ({\n          target,\n          callData,\n          allowFailure,\n        }))\n      );\n      log('multicallResponse', multicallResponse);\n\n      const balances = multicall\n        .map(({ method, synth }, i) => {\n          const { success, returnData } = multicallResponse[i];\n          if (!success) {\n            log(`${method} call error for ${synth.symbol}`);\n            return;\n          }\n          const [balance] = TokenInterface.decodeFunctionResult(method, returnData);\n          return {\n            synth,\n            balance: wei(balance, synth.decimals),\n          };\n        })\n        .filter((info) => info !== undefined);\n      log('balances', balances);\n\n      return balances;\n    },\n  });\n}\n","import { useToast } from '@chakra-ui/react';\nimport { D18 } from '@snx-v3/constants';\nimport { ContractError } from '@snx-v3/ContractError';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { useCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { useSpotMarketProxy } from '@snx-v3/useSpotMarketProxy';\nimport { useSynthBalances } from '@snx-v3/useSynthBalances';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\nimport React from 'react';\n\nconst log = debug('snx:useUnwrapAllSynths');\n\nexport function useUnwrapAllSynths() {\n  const { data: synthBalances } = useSynthBalances();\n\n  const toast = useToast({ isClosable: true, duration: 9000 });\n\n  const { network } = useNetwork();\n  const provider = useProvider();\n  const signer = useSigner();\n\n  const { data: SpotMarketProxy } = useSpotMarketProxy();\n  const [txnState, dispatch] = React.useReducer(reducer, initialState);\n\n  const { data: priceUpdateTx } = useCollateralPriceUpdates();\n\n  const errorParser = useContractErrorParser();\n\n  const queryClient = useQueryClient();\n\n  const mutation = useMutation({\n    mutationFn: async function () {\n      if (!(network && provider && signer && SpotMarketProxy && synthBalances)) {\n        throw new Error('Not ready');\n      }\n\n      dispatch({ type: 'prompting' });\n\n      const transactions: Promise<ethers.PopulatedTransaction>[] = [];\n\n      const SpotMarketProxyContract = new ethers.Contract(\n        SpotMarketProxy.address,\n        SpotMarketProxy.abi,\n        signer\n      );\n      synthBalances.forEach(({ synth, balance }) => {\n        if (synth.token && balance.gt(0)) {\n          const minAmountReceived = balance\n            .toBN()\n            .sub(balance.toBN().div(100))\n            // Adjust precision for underlying token\n            .mul(ethers.utils.parseUnits('1', synth.token.decimals))\n            .div(D18);\n\n          transactions.push(\n            SpotMarketProxyContract.populateTransaction.unwrap(\n              synth.synthMarketId,\n              balance.toBN(),\n              minAmountReceived\n            )\n          );\n        }\n      });\n\n      const [calls] = await Promise.all([Promise.all(transactions)]);\n      log('calls', calls);\n\n      if (priceUpdateTx) {\n        calls.unshift(priceUpdateTx as any);\n      }\n\n      const walletAddress = await signer.getAddress();\n      const { multicallTxn: erc7412Tx, gasLimit } = await withERC7412(\n        provider,\n        network,\n        calls,\n        'useUnwrapAllSynths',\n        walletAddress\n      );\n\n      const txn = await signer.sendTransaction({\n        ...erc7412Tx,\n        gasLimit: gasLimit.mul(15).div(10),\n      });\n      log('txn', txn);\n      dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n      return receipt;\n    },\n\n    onError(error) {\n      const contractError = errorParser(error);\n      if (contractError) {\n        console.error(new Error(contractError.name), contractError);\n      }\n\n      dispatch({ type: 'error', payload: { error } });\n\n      toast.closeAll();\n      toast({\n        title: 'Withdrawal failed',\n        description: contractError ? (\n          <ContractError contractError={contractError} />\n        ) : (\n          'Please try again.'\n        ),\n        status: 'error',\n        variant: 'left-accent',\n        duration: 3_600_000,\n      });\n    },\n\n    onSuccess: async () => {\n      const deployment = `${network?.id}-${network?.preset}`;\n      await Promise.all(\n        [\n          //\n          'PriceUpdates',\n          'TokenBalance',\n          'SynthBalances',\n          'EthBalance',\n        ].map((key) => queryClient.invalidateQueries({ queryKey: [deployment, key] }))\n      );\n\n      dispatch({ type: 'success' });\n\n      toast.closeAll();\n      toast({\n        title: 'Success',\n        description: 'Your synths have been unwrapped',\n        status: 'success',\n        duration: 5000,\n        variant: 'left-accent',\n      });\n    },\n  });\n\n  return {\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n}\n","import { Fade, Flex, Td, Text } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { SynthIcon } from '@snx-v3/TokenIcon';\nimport Wei from '@synthetixio/wei';\nimport React from 'react';\n\nexport function SynthRow({\n  synth,\n  balance,\n}: {\n  synth: {\n    address: string;\n    symbol: string;\n    name: string;\n  };\n  balance: Wei;\n}) {\n  return (\n    <>\n      <Td border=\"none\">\n        <Fade in>\n          <Flex alignItems=\"center\" textDecoration=\"none\" _hover={{ textDecoration: 'none' }}>\n            <SynthIcon height={30} width={30} symbol={synth.symbol} />\n            <Flex flexDirection=\"column\" ml={3}>\n              <Text\n                color=\"white\"\n                fontWeight={700}\n                lineHeight=\"1.25rem\"\n                fontFamily=\"heading\"\n                fontSize=\"sm\"\n              >\n                {synth.symbol}\n              </Text>\n              <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"0.75rem\" lineHeight=\"1rem\">\n                {synth.name}\n              </Text>\n            </Flex>\n          </Flex>\n        </Fade>\n      </Td>\n      <Td border=\"none\">\n        <Fade in>\n          <Text\n            color={balance.gt(0) ? 'green.500' : 'gray.50'}\n            fontSize=\"14px\"\n            fontFamily=\"heading\"\n            fontWeight={500}\n            lineHeight=\"20px\"\n          >\n            <Amount value={balance} showTooltip />\n          </Text>\n        </Fade>\n      </Td>\n    </>\n  );\n}\n","import { Skeleton, SkeletonCircle, Td, Text, Tr } from '@chakra-ui/react';\n\nexport const SynthsLoading = () => (\n  <Tr>\n    <Td pl=\"16px\" border=\"none\">\n      <SkeletonCircle\n        startColor=\"whiteAlpha.500\"\n        endColor=\"whiteAlpha.200\"\n        height={30}\n        width={30}\n      />\n    </Td>\n    <Td pl=\"16px\" border=\"none\">\n      <Skeleton startColor=\"whiteAlpha.500\" endColor=\"whiteAlpha.200\" height=\"30px\">\n        <Text fontSize=\"14px\" fontFamily=\"heading\" fontWeight={500} lineHeight=\"20px\">\n          &nbsp;\n        </Text>\n      </Skeleton>\n    </Td>\n  </Tr>\n);\n","import { CheckIcon } from '@chakra-ui/icons';\nimport {\n  Button,\n  CircularProgress,\n  Divider,\n  Flex,\n  Link,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalOverlay,\n  Text,\n} from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { tokenOverrides } from '@snx-v3/constants';\nimport { etherscanLink } from '@snx-v3/etherscanLink';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useSynthBalances } from '@snx-v3/useSynthBalances';\nimport { Wei } from '@synthetixio/wei';\nimport React from 'react';\n\nexport function SynthsUnwrapModal({\n  txnStatus,\n  txnHash,\n}: {\n  txnStatus?: string;\n  txnHash: string | null;\n}) {\n  const { network } = useNetwork();\n  const { data: synthBalances } = useSynthBalances();\n\n  const [isOpen, setIsOpen] = React.useState(false);\n  // This caching is necessary to keep initial values after success and not reset them to zeroes\n  const [cachedSynths, setCachedSynths] = React.useState<\n    { symbol: string; name: string; balance: Wei }[] | undefined\n  >();\n\n  const onClose = React.useCallback(() => {\n    setIsOpen(false);\n    setCachedSynths(undefined);\n  }, []);\n\n  React.useEffect(() => {\n    if (txnStatus === 'prompting') {\n      setIsOpen(true);\n    }\n    if (txnStatus === 'error') {\n      setCachedSynths(undefined);\n      setIsOpen(false);\n    }\n  }, [txnStatus]);\n\n  React.useEffect(() => {\n    if (isOpen && synthBalances) {\n      const filteredSynths = synthBalances\n        .map(({ synth, balance }) => ({\n          balance,\n          symbol: synth.token ? synth.token.symbol : synth.symbol,\n          name: synth.token ? synth.token.name : synth.name,\n          ...tokenOverrides[synth.token ? synth.token.address : synth.address],\n        }))\n        .filter(({ balance }) => balance.gt(0))\n        .sort((a, b) => a.symbol.localeCompare(b.symbol))\n        .sort((a, b) => b.balance.toNumber() - a.balance.toNumber());\n\n      if (!cachedSynths) {\n        setCachedSynths(filteredSynths);\n      }\n    }\n  }, [cachedSynths, isOpen, synthBalances]);\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay bg=\"#06061B80\" />\n      <ModalContent\n        bg=\"navy.700\"\n        mt=\"10%\"\n        borderWidth=\"1px\"\n        borderColor=\"gray.900\"\n        minWidth=\"384px\"\n      >\n        <ModalBody data-cy=\"unwrap synths dialog\" p={6}>\n          <Text color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n            Unwrapping Synths\n          </Text>\n\n          <Divider my={4} />\n\n          <Flex\n            position=\"relative\"\n            alignItems=\"center\"\n            gap={4}\n            mb={6}\n            rounded=\"lg\"\n            mt=\"6\"\n            p=\"4\"\n            border=\"2px solid\"\n            transitionProperty=\"border-color\"\n            transitionDuration=\"normal\"\n            borderColor={txnStatus === 'success' ? 'green.500' : 'gray.900'}\n          >\n            <Flex\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              borderRadius=\"100px\"\n              bg={txnStatus === 'success' ? 'green.600' : 'gray.900'}\n              width=\"40px\"\n              height=\"40px\"\n              p={3}\n            >\n              {txnStatus === 'success' ? (\n                <CheckIcon color=\"white\" />\n              ) : (\n                <CircularProgress size=\"25px\" isIndeterminate color=\"gray.700\" />\n              )}\n            </Flex>\n            <Flex\n              flexDirection=\"column\"\n              alignItems=\"space-between\"\n              justifyContent=\"space-between\"\n              ml={2}\n              data-cy=\"unwrap synths info\"\n            >\n              {cachedSynths ? (\n                cachedSynths.map(({ symbol, balance }) => {\n                  return (\n                    <Text\n                      key={symbol}\n                      fontSize=\"14px\"\n                      fontWeight={700}\n                      lineHeight=\"20px\"\n                      color=\"white\"\n                    >\n                      <Amount\n                        prefix={txnStatus === 'success' ? 'Unwrapped ' : 'Unwrapping '}\n                        value={balance}\n                        suffix={` ${symbol}`}\n                      />\n                    </Text>\n                  );\n                })\n              ) : (\n                <Text fontSize=\"12px\" lineHeight=\"16px\" color=\"gray.500\">\n                  Unwrapping your synths\n                </Text>\n              )}\n            </Flex>\n          </Flex>\n          {txnStatus === 'success' ? (\n            <Button\n              mt={5}\n              variant=\"solid\"\n              justifyContent=\"center\"\n              px={3}\n              py={3}\n              width=\"100%\"\n              textAlign=\"center\"\n              onClick={onClose}\n            >\n              Done\n            </Button>\n          ) : null}\n          {txnHash && (\n            <Flex\n              justifyContent=\"center\"\n              px={3}\n              py={3}\n              mt={6}\n              mb={1}\n              borderTop=\"1px solid\"\n              borderTopColor=\"gray.900\"\n              data-cy=\"transaction hash\"\n            >\n              <Link\n                variant=\"outline\"\n                href={etherscanLink({ chain: network?.name || '', address: txnHash, isTx: true })}\n                fontFamily=\"heading\"\n                color=\"cyan.500\"\n                fontWeight={700}\n                lineHeight=\"20px\"\n                fontSize=\"14px\"\n                target=\"_blank\"\n                mt={3}\n              >\n                View Transaction\n              </Link>\n            </Flex>\n          )}\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import { InfoIcon } from '@chakra-ui/icons';\nimport {\n  Button,\n  Flex,\n  Heading,\n  Table,\n  TableContainer,\n  Tbody,\n  Td,\n  Text,\n  Th,\n  Thead,\n  Tr,\n} from '@chakra-ui/react';\nimport { Tooltip } from '@snx-v3/Tooltip';\nimport { useWallet } from '@snx-v3/useBlockchain';\nimport { useSynthBalances } from '@snx-v3/useSynthBalances';\nimport { useUnwrapAllSynths } from '@snx-v3/useUnwrapAllSynths';\nimport React from 'react';\nimport { SynthRow } from './SynthRow';\nimport { SynthsLoading } from './SynthsLoading';\nimport { SynthsUnwrapModal } from './SynthsUnwrapModal';\n\nexport function Synths() {\n  const { activeWallet } = useWallet();\n  const walletAddress = activeWallet?.address;\n\n  const { data: synthBalances, isPending: isPendingSynthBalances } = useSynthBalances();\n  const { exec: unwrapAll, txnState } = useUnwrapAllSynths();\n\n  const filteredSynths = React.useMemo(() => {\n    if (!synthBalances || !synthBalances.length) {\n      return;\n    }\n    return synthBalances\n      .filter(({ balance }) => balance.gt(0))\n      .sort((a, b) => a.synth.symbol.localeCompare(b.synth.symbol))\n      .sort((a, b) => b.balance.toNumber() - a.balance.toNumber());\n  }, [synthBalances]);\n\n  return (\n    <TableContainer>\n      <SynthsUnwrapModal txnStatus={txnState.txnStatus} txnHash={txnState.txnHash} />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Heading fontSize=\"18px\" fontWeight={700} lineHeight=\"28px\" color=\"gray.50\" mb={3}>\n          Synths\n        </Heading>\n        <Button\n          size=\"sm\"\n          variant=\"solid\"\n          isDisabled={!(synthBalances && synthBalances.some(({ balance }) => balance.gt(0)))}\n          _disabled={{\n            bg: 'gray.900',\n            backgroundImage: 'none',\n            color: 'gray.500',\n            opacity: 0.5,\n            cursor: 'not-allowed',\n          }}\n          data-cy=\"unwrap synths submit\"\n          onClick={() => unwrapAll()}\n        >\n          Unwrap\n        </Button>\n      </Flex>\n      <Table variant=\"simple\" data-cy=\"synths table\">\n        <Thead>\n          <Tr borderBottom=\"1px solid #2D2D38\">\n            <Th\n              textTransform=\"unset\"\n              color=\"gray.600\"\n              border=\"none\"\n              fontFamily=\"heading\"\n              fontSize=\"12px\"\n              lineHeight=\"16px\"\n              letterSpacing={0.6}\n              fontWeight={700}\n              px={4}\n              py={3}\n            >\n              Token\n            </Th>\n            <Th\n              textTransform=\"unset\"\n              color=\"gray.600\"\n              border=\"none\"\n              fontFamily=\"heading\"\n              fontSize=\"12px\"\n              lineHeight=\"16px\"\n              letterSpacing={0.6}\n              fontWeight={700}\n              px={4}\n              py={3}\n            >\n              Synth balance\n              <Tooltip label=\"Total synth balance in your wallet\">\n                <InfoIcon ml={1} mb=\"1px\" />\n              </Tooltip>\n            </Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {!walletAddress ? (\n            <Tr>\n              <Td display=\"flex\" alignItems=\"left\" px={4} border=\"none\" w=\"100%\">\n                <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"xs\">\n                  Please connect wallet to view synths\n                </Text>\n              </Td>\n            </Tr>\n          ) : null}\n          {walletAddress && isPendingSynthBalances ? <SynthsLoading /> : null}\n          {!isPendingSynthBalances && filteredSynths && filteredSynths.length === 0 ? (\n            <Tr>\n              <Td display=\"flex\" alignItems=\"left\" px={4} border=\"none\" w=\"100%\">\n                <Text color=\"gray.500\" fontFamily=\"heading\" fontSize=\"xs\">\n                  You do not have any synths\n                </Text>\n              </Td>\n            </Tr>\n          ) : null}\n\n          {filteredSynths\n            ? filteredSynths.map(({ synth, balance }, i) => (\n                <Tr\n                  key={synth.symbol}\n                  borderBottomWidth={i === filteredSynths.length - 1 ? 'none' : '1px'}\n                >\n                  <SynthRow synth={synth} balance={balance} />\n                </Tr>\n              ))\n            : null}\n        </Tbody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import { Flex, Heading, Text } from '@chakra-ui/react';\nimport { MAINNET, SEPOLIA, useNetwork } from '@snx-v3/useBlockchain';\nimport { Helmet } from 'react-helmet';\nimport { MigrationBanner } from '../components/Migration/MigrationBanner';\nimport { PoolsList } from '../components/Pools/PoolsList';\nimport { PositionsList } from '../components/Positions/PositionsList';\nimport { Rewards } from '../components/Rewards/Rewards';\nimport { StatsList } from '../components/Stats/StatsList';\nimport { Synths } from '../components/Synths/Synths';\n\nexport function Dashboard() {\n  const { network } = useNetwork();\n  return (\n    <>\n      <Helmet>\n        <title>Synthetix Liquidity V3</title>\n        <meta name=\"description\" content=\"Synthetix Liquidity V3\" />\n      </Helmet>\n      <Flex pt={{ base: 2, sm: 10 }} flexDir=\"column\" mb={16}>\n        {network && [MAINNET.id, SEPOLIA.id].includes(network.id) && (\n          <MigrationBanner network={network} type=\"alert\" />\n        )}\n\n        <Heading\n          mt={[6, 10]}\n          color=\"gray.50\"\n          maxWidth=\"20rem\"\n          fontSize={['2rem', '3rem']}\n          lineHeight=\"120%\"\n        >\n          The Liquidity Layer of DeFi\n        </Heading>\n\n        <Text color=\"gray.500\" fontSize=\"1rem\" lineHeight={6} fontFamily=\"heading\" mt=\"1rem\">\n          Provide liquidity for the next generation of permissionless protocols\n        </Text>\n\n        <Flex mt={12} flexDirection=\"column\">\n          <StatsList />\n        </Flex>\n\n        <Flex mt={12} flexDirection=\"column\" gap={4}>\n          <Heading fontSize=\"1.25rem\" fontFamily=\"heading\" lineHeight=\"1.75rem\">\n            Positions\n          </Heading>\n          <PositionsList />\n        </Flex>\n\n        <Flex mt={6} flexDirection={['column', 'column', 'row']} gap={4}>\n          <Flex\n            flex={1}\n            flexDirection=\"column\"\n            borderColor=\"gray.900\"\n            borderWidth=\"1px\"\n            borderRadius=\"5px\"\n            p={6}\n            sx={{\n              borderCollapse: 'separate !important',\n              borderSpacing: 0,\n            }}\n            bg=\"navy.700\"\n          >\n            <Rewards />\n          </Flex>\n\n          <Flex\n            flex={1}\n            flexDirection=\"column\"\n            borderColor=\"gray.900\"\n            borderWidth=\"1px\"\n            borderRadius=\"5px\"\n            p={6}\n            sx={{\n              borderCollapse: 'separate !important',\n              borderSpacing: 0,\n            }}\n            bg=\"navy.700\"\n          >\n            <Synths />\n          </Flex>\n        </Flex>\n\n        <Flex mt={12} flexDirection=\"column\">\n          <Heading fontSize=\"1.25rem\" fontFamily=\"heading\" lineHeight=\"1.75rem\">\n            Vaults\n          </Heading>\n          <PoolsList />\n        </Flex>\n\n        {network && [MAINNET.id, SEPOLIA.id].includes(network.id) ? (\n          <MigrationBanner network={network} type=\"banner\" />\n        ) : null}\n      </Flex>\n    </>\n  );\n}\n","import Wei, { wei } from '@synthetixio/wei';\nimport React, { createContext, useState, PropsWithChildren, Dispatch, SetStateAction } from 'react';\n\nexport const ManagePositionContext = createContext<{\n  collateralChange: Wei;\n  debtChange: Wei;\n  withdrawAmount: Wei;\n  setDebtChange: Dispatch<SetStateAction<Wei>>;\n  setCollateralChange: Dispatch<SetStateAction<Wei>>;\n  setWithdrawAmount: Dispatch<SetStateAction<Wei>>;\n}>({\n  collateralChange: wei(0),\n  debtChange: wei(0),\n  withdrawAmount: wei(0),\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  setDebtChange: () => {},\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  setCollateralChange: () => {},\n  setWithdrawAmount: () => {},\n});\n\nexport const ManagePositionProvider: React.FC<PropsWithChildren> = ({ children }) => {\n  const [debtChange, setDebtChange] = useState(wei(0));\n  const [collateralChange, setCollateralChange] = useState(wei(0));\n  const [withdrawAmount, setWithdrawAmount] = useState(wei(0));\n\n  return (\n    <ManagePositionContext.Provider\n      value={{\n        debtChange,\n        setDebtChange,\n        collateralChange,\n        setCollateralChange,\n        withdrawAmount,\n        setWithdrawAmount,\n      }}\n    >\n      {children}\n    </ManagePositionContext.Provider>\n  );\n};\n","import { calculateCRatio } from '@snx-v3/calculations';\nimport { POOL_ID } from '@snx-v3/constants';\nimport { contractsHash } from '@snx-v3/tsHelpers';\nimport { useNetwork, useProviderForChain } from '@snx-v3/useBlockchain';\nimport { CollateralType } from '@snx-v3/useCollateralTypes';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { erc7412Call } from '@snx-v3/withERC7412';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { useQuery } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\n\nconst log = debug('snx:useLiquidityPosition');\n\nexport type LiquidityPositionType = {\n  collateralType: CollateralType;\n  collateralPrice: Wei;\n  availableCollateral: Wei;\n  availableSystemToken: Wei;\n  collateralAmount: Wei;\n  collateralValue: Wei;\n  debt: Wei;\n  cRatio: Wei;\n  totalDeposited: Wei;\n  totalAssigned: Wei;\n  totalLocked: Wei;\n};\n\nexport const useLiquidityPosition = ({\n  accountId,\n  collateralType,\n}: {\n  accountId?: string;\n  collateralType?: CollateralType;\n}) => {\n  const { data: CoreProxy } = useCoreProxy();\n  const { network } = useNetwork();\n  const provider = useProviderForChain(network!);\n  const { data: systemToken } = useSystemToken();\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'LiquidityPosition',\n      { accountId },\n      { tokenAddress: collateralType?.tokenAddress },\n      { contractsHash: contractsHash([CoreProxy, systemToken]) },\n    ],\n    enabled: Boolean(\n      network && provider && CoreProxy && systemToken && accountId && collateralType\n    ),\n    queryFn: async (): Promise<LiquidityPositionType> => {\n      if (!(network && provider && CoreProxy && systemToken && accountId && collateralType)) {\n        throw 'OMFG';\n      }\n      const CoreProxyContract = new ethers.Contract(CoreProxy.address, CoreProxy.abi, provider);\n\n      const getAccountAvailableSystemTokenCallPromised =\n        CoreProxyContract.populateTransaction.getAccountAvailableCollateral(\n          accountId,\n          systemToken.address\n        );\n      const getPositionCollateralCallPromised =\n        CoreProxyContract.populateTransaction.getPositionCollateral(\n          accountId,\n          POOL_ID,\n          collateralType.tokenAddress\n        );\n      const getPositionDebtCallPromised = CoreProxyContract.populateTransaction.getPositionDebt(\n        accountId,\n        POOL_ID,\n        collateralType.tokenAddress\n      );\n      const getCollateralPriceCallPromised =\n        CoreProxyContract.populateTransaction.getCollateralPrice(collateralType.tokenAddress);\n\n      const getAccountCollateralCallPromised =\n        CoreProxyContract.populateTransaction.getAccountCollateral(\n          accountId,\n          collateralType.tokenAddress\n        );\n\n      const calls = await Promise.all([\n        getAccountAvailableSystemTokenCallPromised,\n        getPositionCollateralCallPromised,\n        getPositionDebtCallPromised,\n        getCollateralPriceCallPromised,\n        getAccountCollateralCallPromised,\n      ]);\n\n      return await erc7412Call(\n        network,\n        provider,\n        calls,\n        (decodedMulticall) => {\n          log('collateralType', collateralType);\n\n          const [accountAvailableSystemToken] = CoreProxyContract.interface.decodeFunctionResult(\n            'getAccountAvailableCollateral',\n            decodedMulticall[0].returnData\n          );\n          log('accountAvailableSystemToken', accountAvailableSystemToken);\n\n          const [positionCollateral] = CoreProxyContract.interface.decodeFunctionResult(\n            'getPositionCollateral',\n            decodedMulticall[1].returnData\n          );\n          log('positionCollateral', positionCollateral);\n\n          const [positionDebt] = CoreProxyContract.interface.decodeFunctionResult(\n            'getPositionDebt',\n            decodedMulticall[1 + 1].returnData\n          );\n          log('positionDebt', positionDebt);\n\n          const [collateralPriceRaw] = CoreProxyContract.interface.decodeFunctionResult(\n            'getCollateralPrice',\n            decodedMulticall[1 + 2].returnData\n          );\n          log('collateralPriceRaw', collateralPriceRaw);\n\n          const [totalDepositedBigNumber, totalAssignedBigNumber, totalLockedBigNumber] =\n            CoreProxyContract.interface.decodeFunctionResult(\n              'getAccountCollateral',\n              decodedMulticall[1 + 3].returnData\n            );\n\n          const totalDeposited = wei(totalDepositedBigNumber);\n          const totalAssigned = wei(totalAssignedBigNumber);\n          const totalLocked = wei(totalLockedBigNumber);\n          log('totalDeposited', totalDeposited);\n          log('totalAssigned', totalAssigned);\n          log('totalLocked', totalLocked);\n\n          const availableCollateral = wei(totalDeposited.sub(totalAssigned).sub(totalLocked));\n          const availableSystemToken = wei(accountAvailableSystemToken);\n\n          const collateralPrice = wei(collateralPriceRaw);\n          const collateralAmount = wei(positionCollateral);\n          const collateralValue = collateralAmount.mul(collateralPrice);\n          const debt = wei(positionDebt);\n          const cRatio = calculateCRatio(debt, collateralValue);\n\n          const liquidityPosition = {\n            collateralType,\n            collateralPrice,\n            availableCollateral,\n            availableSystemToken,\n            collateralAmount,\n            collateralValue,\n            debt,\n            cRatio,\n            totalDeposited,\n            totalAssigned,\n            totalLocked,\n          };\n\n          log('liquidityPosition', liquidityPosition);\n          return liquidityPosition;\n        },\n        'useLiquidityPosition'\n      );\n    },\n  });\n};\n","import { useOfflinePrices } from '@snx-v3/useCollateralPriceUpdates';\nimport { useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { useMemo } from 'react';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { wei } from '@synthetixio/wei';\nimport { useOraclePrice } from '@snx-v3/useOraclePrice';\n\nexport const useTokenPrice = (symbol?: string) => {\n  const { data: collateralTypes } = useCollateralTypes(true);\n\n  const pythCollateralPrices = collateralTypes?.filter((item) => item.symbol !== 'stataUSDC');\n  const omCollateralPrices = collateralTypes?.filter((item) => item.symbol === 'stataUSDC');\n\n  const { data: collateralPrices } = useOfflinePrices(\n    (pythCollateralPrices || []).map((item) => ({\n      id: item.tokenAddress,\n      oracleId: item.oracleNodeId,\n      symbol: item.symbol,\n    }))\n  );\n\n  const { data: omPrices } = useOraclePrice(omCollateralPrices?.[0]?.oracleNodeId);\n\n  return useMemo(() => {\n    if (!collateralTypes || !collateralPrices) {\n      return ZEROWEI;\n    }\n\n    const collateralPrice = [\n      ...collateralPrices,\n      ...(omPrices ? [{ symbol: 'stataUSDC', price: omPrices.price }] : []),\n    ].find((price) => `${price?.symbol}`.toUpperCase() === `${symbol}`.toUpperCase());\n\n    return collateralPrice && collateralPrice.price ? wei(collateralPrice.price) : ZEROWEI;\n  }, [collateralPrices, collateralTypes, symbol, omPrices]);\n};\n","import { Alert, Button, Divider, Flex, Heading, Text } from '@chakra-ui/react';\nimport { CheckIcon } from '@snx-v3/Multistep';\nimport { ReactNode } from 'react';\n\nexport function LiquidityPositionUpdated({\n  title,\n  subline,\n  alertText,\n  summary,\n  onClose,\n}: {\n  title?: ReactNode;\n  subline?: ReactNode;\n  alertText?: ReactNode;\n  summary?: ReactNode;\n  onClose: () => void;\n}) {\n  return (\n    <Flex flexDir=\"column\" gap=\"6\" borderColor=\"gray.900\" rounded=\"base\" height=\"fit-content\">\n      {title && (\n        <>\n          <Heading color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n            {title}\n          </Heading>\n          <Divider />\n        </>\n      )}\n      {subline && (\n        <Text color=\"white\" fontSize=\"14px\" fontWeight={400}>\n          {subline}\n        </Text>\n      )}\n      <Alert status=\"success\" rounded=\"base\" borderRadius=\"6px\">\n        <Flex bg=\"green.500\" p=\"1\" rounded=\"full\" mr=\"2\">\n          <CheckIcon w=\"12px\" h=\"12px\" color=\"green.900\" />\n        </Flex>\n        <Text color=\"white\" fontSize=\"16px\" fontWeight={400}>\n          {alertText}\n        </Text>\n      </Alert>\n\n      {summary}\n\n      <Button w=\"100%\" onClick={onClose}>\n        Continue\n      </Button>\n    </Flex>\n  );\n}\n","import { ArrowBackIcon } from '@chakra-ui/icons';\nimport { Button, Divider, Flex, Link, Text, useToast } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { POOL_ID, ZEROWEI } from '@snx-v3/constants';\nimport { ContractError } from '@snx-v3/ContractError';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { Multistep } from '@snx-v3/Multistep';\nimport { useAccountProxy } from '@snx-v3/useAccountProxy';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { useClosePosition } from '@snx-v3/useClosePosition';\nimport { useCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { usePythFeeds } from '@snx-v3/usePythFeeds';\nimport { usePythVerifier } from '@snx-v3/usePythVerifier';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { useTrustedMulticallForwarder } from '@snx-v3/useTrustedMulticallForwarder';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\nimport React from 'react';\nimport { LiquidityPositionUpdated } from '../Manage/LiquidityPositionUpdated';\n\nconst log = debug('snx:ClosePositionOneStep');\n\nexport function ClosePositionOneStep({\n  onClose,\n  onBack,\n}: {\n  onClose: () => void;\n  onBack: () => void;\n}) {\n  const [params] = useParams<PositionPageSchemaType>();\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: liquidityPosition, refetch: refetchLiquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  const { setCollateralChange, setDebtChange } = React.useContext(ManagePositionContext);\n  const toast = useToast({ isClosable: true, duration: 9000 });\n\n  const [txState, setTxState] = React.useState({ step: 0, status: 'idle' });\n\n  const queryClient = useQueryClient();\n  const errorParser = useContractErrorParser();\n\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: Multicall3 } = useTrustedMulticallForwarder();\n  const { data: AccountProxy } = useAccountProxy();\n  const { data: ClosePosition } = useClosePosition();\n  const { data: PythVerfier } = usePythVerifier();\n  const { data: pythFeeds } = usePythFeeds();\n  const { data: systemToken } = useSystemToken();\n\n  const { data: priceUpdateTx } = useCollateralPriceUpdates();\n\n  const { network } = useNetwork();\n  const signer = useSigner();\n  const provider = useProvider();\n\n  // const queryClient = useQueryClient();\n  // queryClient.invalidateQueries();\n\n  const { mutate: execClosePosition } = useMutation({\n    mutationFn: async function () {\n      log('params', params);\n      log('collateralType', collateralType);\n\n      setTxState({ step: 1, status: 'pending' });\n      if (\n        !(\n          network &&\n          provider &&\n          signer &&\n          CoreProxy &&\n          Multicall3 &&\n          AccountProxy &&\n          ClosePosition &&\n          PythVerfier &&\n          pythFeeds &&\n          params.accountId &&\n          systemToken?.address &&\n          collateralType?.tokenAddress\n        )\n      ) {\n        throw new Error('Not ready');\n      }\n\n      const ClosePositionContract = new ethers.Contract(\n        ClosePosition.address,\n        ClosePosition.abi,\n        signer\n      );\n      const AccountProxyContract = new ethers.Contract(\n        AccountProxy.address,\n        AccountProxy.abi,\n        signer\n      );\n      const TokenContract = new ethers.Contract(\n        systemToken?.address,\n        ['function approve(address spender, uint256 amount) returns (bool)'],\n        signer\n      );\n\n      const { data: freshLiquidityPosition } = await refetchLiquidityPosition({\n        throwOnError: true,\n      });\n      if (!freshLiquidityPosition) {\n        throw new Error('Could not fetch fresh liquidity position');\n      }\n      const adjustedAllowance = freshLiquidityPosition.debt.lt(1)\n        ? // For the case when debt fluctuates from negative/zero to slightly positive\n          ethers.utils.parseEther('1')\n        : // Add extra buffer for debt fluctuations\n          freshLiquidityPosition.debt.mul(120).div(100).toBN();\n      log('adjustedAllowance', adjustedAllowance);\n\n      const approveAccountTx = AccountProxyContract.populateTransaction.approve(\n        ClosePosition.address,\n        params.accountId\n      );\n      const approveUsdTx = TokenContract.populateTransaction.approve(\n        ClosePosition.address,\n        adjustedAllowance\n      );\n      const closePositionTx = ClosePositionContract.populateTransaction.closePosition(\n        CoreProxy.address,\n        AccountProxy.address,\n        params.accountId,\n        POOL_ID,\n        collateralType.tokenAddress\n      );\n      const callsPromise = Promise.all([approveAccountTx, approveUsdTx, closePositionTx]);\n      const [calls] = await Promise.all([callsPromise]);\n      if (priceUpdateTx) {\n        calls.unshift(priceUpdateTx as any);\n      }\n\n      const walletAddress = await signer.getAddress();\n      const { multicallTxn: erc7412Tx, gasLimit } = await withERC7412(\n        provider,\n        network,\n        calls,\n        'useClosePosition',\n        walletAddress\n      );\n\n      const txn = await signer.sendTransaction({\n        ...erc7412Tx,\n        gasLimit: gasLimit.mul(15).div(10),\n      });\n      log('txn', txn);\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n      return receipt;\n    },\n\n    onSuccess: async () => {\n      const deployment = `${network?.id}-${network?.preset}`;\n      await Promise.all(\n        [\n          //\n          'PriceUpdates',\n          'LiquidityPosition',\n          'LiquidityPositions',\n          'TokenBalance',\n          'SynthBalances',\n          'EthBalance',\n          'Allowance',\n          'TransferableSynthetix',\n          'AccountCollateralUnlockDate',\n        ].map((key) => queryClient.invalidateQueries({ queryKey: [deployment, key] }))\n      );\n\n      setCollateralChange(ZEROWEI);\n      setDebtChange(ZEROWEI);\n      setTxState({ step: 1, status: 'success' });\n    },\n\n    onError: (error) => {\n      setTxState({ step: 1, status: 'error' });\n      const contractError = errorParser(error);\n      if (contractError) {\n        console.error(new Error(contractError.name), contractError);\n      }\n      toast.closeAll();\n      toast({\n        title: 'Transaction failed',\n        variant: 'left-accent',\n        description: contractError ? (\n          <ContractError contractError={contractError} />\n        ) : (\n          'Please try again.'\n        ),\n        status: 'error',\n        duration: 3_600_000,\n      });\n      throw Error('Transaction failed', { cause: error });\n    },\n  });\n\n  if (txState.status === 'success') {\n    return (\n      <LiquidityPositionUpdated\n        onClose={onClose}\n        title=\"Position successfully Closed\"\n        subline={\n          <>\n            Your position has been successfully closed, read more about it in the{' '}\n            <Link\n              href=\"https://docs.synthetix.io/v/synthetix-v3-user-documentation\"\n              target=\"_blank\"\n              color=\"cyan.500\"\n            >\n              Synthetix V3 Documentation\n            </Link>\n          </>\n        }\n        alertText={<>Position successfully Closed</>}\n      />\n    );\n  }\n\n  return (\n    <Flex flexDirection=\"column\" data-cy=\"close position multistep\">\n      <Text color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n        <ArrowBackIcon cursor=\"pointer\" onClick={onBack} mr={2} />\n        Close Position\n      </Text>\n      <Divider mt={6} bg=\"gray.900\" />\n      <Multistep\n        step={1}\n        title=\"Close position\"\n        subtitle={\n          <>\n            <Text>Approve close position on behalf</Text>\n            {liquidityPosition && liquidityPosition.debt && liquidityPosition.debt.gt(0) ? (\n              <Text>\n                <Amount\n                  prefix=\"Repay \"\n                  value={liquidityPosition.debt}\n                  suffix={` ${systemToken ? systemToken.symbol : ''} of debt`}\n                />\n              </Text>\n            ) : null}\n            {liquidityPosition && liquidityPosition.debt && liquidityPosition.debt.lt(0) ? (\n              <Text>\n                <Amount\n                  prefix=\"Claim \"\n                  value={liquidityPosition.debt.abs()}\n                  suffix={` ${systemToken ? systemToken.symbol : ''}`}\n                />\n              </Text>\n            ) : null}\n            {liquidityPosition ? (\n              <Amount\n                prefix=\"Unlock \"\n                value={liquidityPosition.collateralAmount}\n                suffix={` ${collateralType ? collateralType.symbol : ''} from the pool`}\n              />\n            ) : null}\n          </>\n        }\n        status={{\n          failed: txState.status === 'error',\n          success: txState.status === 'success',\n          loading: txState.status === 'pending',\n        }}\n      />\n      <Button\n        data-cy=\"close position confirm button\"\n        isLoading={txState.status === 'pending'}\n        isDisabled={!(liquidityPosition && liquidityPosition.collateralAmount.gt(0))}\n        onClick={() => execClosePosition()}\n        mt=\"6\"\n      >\n        {txState.status === 'error' ? 'Retry' : null}\n        {txState.status === 'pending' ? 'Processing...' : null}\n        {txState.status === 'idle' ? 'Execute Transaction' : null}\n      </Button>\n    </Flex>\n  );\n}\n","import { importPythVerifier } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function usePythVerifier(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'PythVerifier'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw new Error('OMFG');\n      return importPythVerifier(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","import { importPythFeeds } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function usePythFeeds(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'PythFeeds'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw new Error('OMFG');\n      return importPythFeeds(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","import { POOL_ID } from '@snx-v3/constants';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { useCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport Wei from '@synthetixio/wei';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\nimport { useReducer } from 'react';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\n\nconst log = debug('snx:useBorrow');\n\nexport const useBorrow = ({ borrowAmount }: { borrowAmount?: Wei }) => {\n  const [params] = useParams<PositionPageSchemaType>();\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: priceUpdateTx } = useCollateralPriceUpdates();\n\n  const signer = useSigner();\n  const provider = useProvider();\n  const { network } = useNetwork();\n\n  const queryClient = useQueryClient();\n\n  const isReady =\n    signer &&\n    CoreProxy &&\n    params.accountId &&\n    collateralType?.address &&\n    network &&\n    provider &&\n    !!borrowAmount;\n\n  const mutation = useMutation({\n    mutationFn: async () => {\n      if (!isReady) throw new Error('Not ready');\n      dispatch({ type: 'prompting' });\n\n      const CoreProxyContract = new ethers.Contract(CoreProxy.address, CoreProxy.abi, signer);\n\n      const populatedTxnPromised = CoreProxyContract.populateTransaction.mintUsd(\n        ethers.BigNumber.from(params.accountId),\n        ethers.BigNumber.from(POOL_ID),\n        collateralType?.address,\n        borrowAmount.toBN()\n      );\n\n      const callsPromise = Promise.all([populatedTxnPromised]);\n      const [calls] = await Promise.all([callsPromise]);\n\n      if (priceUpdateTx) {\n        calls.unshift(priceUpdateTx as any);\n      }\n\n      const walletAddress = await signer.getAddress();\n      const { multicallTxn: erc7412Tx, gasLimit } = await withERC7412(\n        provider,\n        network,\n        calls,\n        'useBorrow',\n        walletAddress\n      );\n      const txn = await signer.sendTransaction({\n        ...erc7412Tx,\n        gasLimit: gasLimit.mul(15).div(10),\n      });\n      log('txn', txn);\n      dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n      return receipt;\n    },\n\n    onSuccess: async () => {\n      const deployment = `${network?.id}-${network?.preset}`;\n      await Promise.all(\n        [\n          //\n          'PriceUpdates',\n          'LiquidityPosition',\n          'LiquidityPositions',\n          'TokenBalance',\n          'SynthBalances',\n          'EthBalance',\n          'TransferableSynthetix',\n          'AccountCollateralUnlockDate',\n        ].map((key) => queryClient.invalidateQueries({ queryKey: [deployment, key] }))\n      );\n      dispatch({ type: 'success' });\n    },\n\n    onError: (error) => {\n      dispatch({ type: 'error', payload: { error } });\n      throw error;\n    },\n  });\n  return {\n    isReady,\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n};\n","const abi = [\n  'function depositDebtToRepay(address synthetixCore, address spotMarket, address accountProxy, uint128 accountId, uint128 poolId, address collateralType, uint128 spotMarketId)',\n];\n\nexport async function importDebtRepayer(\n  chainId?: number,\n  preset?: string\n): Promise<{ address: string; abi: string[] }> {\n  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;\n  switch (deployment) {\n    case '8453-andromeda': {\n      // https://basescan.org/address/0x624f2aB0f1DFF2297b9eca320898381Fbba4E3E3#code\n      return { address: '0x624f2aB0f1DFF2297b9eca320898381Fbba4E3E3', abi };\n    }\n    case '84532-andromeda': {\n      // https://sepolia.basescan.org/address/0xe4b0233F06a308B4732282e24ce7aE0c87bdEcbc#code\n      return { address: '0xe4b0233F06a308B4732282e24ce7aE0c87bdEcbc', abi };\n    }\n    default: {\n      throw new Error(`Unsupported deployment ${deployment} for DebtRepayer`);\n    }\n  }\n}\n","import { importDebtRepayer } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useDebtRepayer(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'DebtRepayer'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw new Error('OMFG');\n      return importDebtRepayer(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","import { POOL_ID } from '@snx-v3/constants';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport { useAccountProxy } from '@snx-v3/useAccountProxy';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { useCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { usePositionManager } from '@snx-v3/usePositionManager';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { useTokenBalance } from '@snx-v3/useTokenBalance';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport Wei from '@synthetixio/wei';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\nimport { useReducer } from 'react';\n\nconst log = debug('snx:useRepay');\n\nexport function useRepay({ repayAmount }: { repayAmount?: Wei }) {\n  const [params] = useParams<PositionPageSchemaType>();\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: AccountProxy } = useAccountProxy();\n  const { data: PositionManager } = usePositionManager();\n\n  const { data: liquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  const { data: systemToken } = useSystemToken();\n  const { data: systemTokenBalance } = useTokenBalance(systemToken?.address);\n\n  const { data: priceUpdateTx } = useCollateralPriceUpdates();\n\n  const signer = useSigner();\n  const { network } = useNetwork();\n  const provider = useProvider();\n\n  const availableCollateral =\n    systemTokenBalance && liquidityPosition\n      ? systemTokenBalance.add(liquidityPosition.availableSystemToken)\n      : undefined;\n\n  const canRepay =\n    liquidityPosition &&\n    liquidityPosition.debt.gt(0) &&\n    availableCollateral &&\n    repayAmount &&\n    availableCollateral.gte(repayAmount);\n\n  const isReady =\n    repayAmount &&\n    repayAmount.gt(0) &&\n    canRepay &&\n    network &&\n    provider &&\n    signer &&\n    CoreProxy &&\n    AccountProxy &&\n    PositionManager &&\n    params.accountId &&\n    systemToken?.address &&\n    collateralType?.tokenAddress;\n\n  const queryClient = useQueryClient();\n  const mutation = useMutation({\n    mutationFn: async () => {\n      if (!isReady) throw new Error('Not ready');\n\n      dispatch({ type: 'prompting' });\n\n      const AccountProxyContract = new ethers.Contract(\n        AccountProxy.address,\n        AccountProxy.abi,\n        signer\n      );\n      const TokenContract = new ethers.Contract(\n        systemToken?.address,\n        ['function approve(address spender, uint256 amount) returns (bool)'],\n        signer\n      );\n      const PositionManagerContract = new ethers.Contract(\n        PositionManager.address,\n        PositionManager.abi,\n        signer\n      );\n\n      const approveAccountTx = AccountProxyContract.populateTransaction.approve(\n        PositionManager.address,\n        params.accountId\n      );\n      const approveUsdTx = TokenContract.populateTransaction.approve(\n        PositionManager.address,\n        repayAmount.toBN()\n      );\n      const repayTx = PositionManagerContract.populateTransaction.repay(\n        CoreProxy.address,\n        AccountProxy.address,\n        params.accountId,\n        POOL_ID,\n        collateralType.tokenAddress,\n        repayAmount.toBN()\n      );\n\n      const callsPromise = Promise.all([approveAccountTx, approveUsdTx, repayTx]);\n      const [calls] = await Promise.all([callsPromise]);\n      if (priceUpdateTx) {\n        calls.unshift(priceUpdateTx as any);\n      }\n\n      const walletAddress = await signer.getAddress();\n      const { multicallTxn: erc7412Tx, gasLimit } = await withERC7412(\n        provider,\n        network,\n        calls,\n        'useRepay',\n        walletAddress\n      );\n\n      const txn = await signer.sendTransaction({\n        ...erc7412Tx,\n        gasLimit: gasLimit.mul(15).div(10),\n      });\n      log('txn', txn);\n      dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n      return receipt;\n    },\n\n    onSuccess: async () => {\n      const deployment = `${network?.id}-${network?.preset}`;\n      await Promise.all(\n        [\n          //\n          'PriceUpdates',\n          'LiquidityPosition',\n          'LiquidityPositions',\n          'TokenBalance',\n          'SynthBalances',\n          'EthBalance',\n          'Allowance',\n          'TransferableSynthetix',\n        ].map((key) => queryClient.invalidateQueries({ queryKey: [deployment, key] }))\n      );\n      dispatch({ type: 'success' });\n    },\n\n    onError: (error) => {\n      dispatch({ type: 'error', payload: { error } });\n      throw error;\n    },\n  });\n  return {\n    isReady,\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n}\n","import { importPositionManager } from '@snx-v3/contracts';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { useQuery } from '@tanstack/react-query';\n\nexport function usePositionManager(customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  return useQuery({\n    queryKey: [`${targetNetwork?.id}-${targetNetwork?.preset}`, 'PositionManager'],\n    enabled: Boolean(targetNetwork),\n    queryFn: async function () {\n      if (!targetNetwork) throw 'OMFG';\n      return importPositionManager(targetNetwork.id, targetNetwork.preset);\n    },\n    staleTime: Infinity,\n    // On some chains this is not available, and that is expected\n    throwOnError: false,\n  });\n}\n","import { POOL_ID } from '@snx-v3/constants';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { useCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\nimport { useReducer } from 'react';\n\nconst log = debug('snx:useUndelegate');\n\nexport const useUndelegate = ({\n  accountId,\n  collateralTypeAddress,\n  collateralChange,\n  currentCollateral,\n}: {\n  accountId?: string;\n  collateralTypeAddress?: string;\n  currentCollateral: Wei;\n  collateralChange: Wei;\n}) => {\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: priceUpdateTx } = useCollateralPriceUpdates();\n  const signer = useSigner();\n  const provider = useProvider();\n  const { network } = useNetwork();\n\n  const queryClient = useQueryClient();\n  const mutation = useMutation({\n    mutationFn: async () => {\n      if (!signer || !network || !provider) throw new Error('No signer or network');\n      if (!(CoreProxy && collateralTypeAddress)) return;\n      if (collateralChange.eq(0)) return;\n      if (currentCollateral.eq(0)) return;\n\n      dispatch({ type: 'prompting' });\n\n      const CoreProxyContract = new ethers.Contract(CoreProxy.address, CoreProxy.abi, signer);\n      const populatedTxnPromised = CoreProxyContract.populateTransaction.delegateCollateral(\n        ethers.BigNumber.from(accountId),\n        ethers.BigNumber.from(POOL_ID),\n        collateralTypeAddress,\n        currentCollateral.add(collateralChange).toBN(),\n        wei(1).toBN()\n      );\n\n      const walletAddress = await signer.getAddress();\n\n      const callsPromise = Promise.all([populatedTxnPromised]);\n      const [calls] = await Promise.all([callsPromise]);\n      if (priceUpdateTx) {\n        calls.unshift(priceUpdateTx as any);\n      }\n\n      const { multicallTxn: erc7412Tx, gasLimit } = await withERC7412(\n        provider,\n        network,\n        calls,\n        'useUndelegate',\n        walletAddress\n      );\n\n      const txn = await signer.sendTransaction({\n        ...erc7412Tx,\n        gasLimit: gasLimit.mul(15).div(10),\n      });\n      log('txn', txn);\n      dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n      return receipt;\n    },\n\n    onSuccess: async () => {\n      const deployment = `${network?.id}-${network?.preset}`;\n      await Promise.all(\n        [\n          //\n          'PriceUpdates',\n          'LiquidityPosition',\n          'LiquidityPositions',\n          'TokenBalance',\n          'SynthBalances',\n          'EthBalance',\n          'Allowance',\n          'TransferableSynthetix',\n          'AccountCollateralUnlockDate',\n        ].map((key) => queryClient.invalidateQueries({ queryKey: [deployment, key] }))\n      );\n      dispatch({ type: 'success' });\n    },\n\n    onError: (error) => {\n      dispatch({ type: 'error', payload: { error } });\n      throw error;\n    },\n  });\n  return {\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n};\n","import { POOL_ID } from '@snx-v3/constants';\nimport { USDC_BASE_MARKET } from '@snx-v3/isBaseAndromeda';\nimport { notNil } from '@snx-v3/tsHelpers';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport { useAccountProxy } from '@snx-v3/useAccountProxy';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { useCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useDebtRepayer } from '@snx-v3/useDebtRepayer';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useSpotMarketProxy } from '@snx-v3/useSpotMarketProxy';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport { Wei, wei } from '@synthetixio/wei';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\nimport React from 'react';\n\nconst log = debug('snx:useUndelegateBaseAndromeda');\n\nexport function useUndelegateBaseAndromeda({ collateralChange }: { collateralChange: Wei }) {\n  const [params] = useParams<PositionPageSchemaType>();\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: liquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  const collateralTypeAddress = collateralType?.tokenAddress;\n  const currentCollateral = liquidityPosition?.collateralAmount || wei(0);\n\n  const [txnState, dispatch] = React.useReducer(reducer, initialState);\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: SpotMarketProxy } = useSpotMarketProxy();\n  const { data: priceUpdateTx } = useCollateralPriceUpdates();\n\n  const signer = useSigner();\n  const provider = useProvider();\n  const { network } = useNetwork();\n\n  const { data: AccountProxy } = useAccountProxy();\n  const { data: DebtRepayer } = useDebtRepayer();\n\n  const queryClient = useQueryClient();\n  const mutation = useMutation({\n    mutationFn: async () => {\n      if (!signer || !network || !provider) throw new Error('No signer or network');\n      if (\n        !(\n          CoreProxy &&\n          AccountProxy &&\n          DebtRepayer &&\n          params.accountId &&\n          collateralTypeAddress &&\n          SpotMarketProxy\n        )\n      )\n        return;\n      if (collateralChange.eq(0)) return;\n      if (currentCollateral.eq(0)) return;\n\n      dispatch({ type: 'prompting' });\n\n      const AccountProxyContract = new ethers.Contract(\n        AccountProxy.address,\n        AccountProxy.abi,\n        signer\n      );\n\n      const DebtRepayerContract = new ethers.Contract(DebtRepayer.address, DebtRepayer.abi, signer);\n\n      const approveAccountTx = AccountProxyContract.populateTransaction.approve(\n        DebtRepayer.address,\n        params.accountId\n      );\n\n      const depositDebtToRepay = DebtRepayerContract.populateTransaction.depositDebtToRepay(\n        CoreProxy.address,\n        SpotMarketProxy.address,\n        AccountProxy.address,\n        params.accountId,\n        POOL_ID,\n        collateralTypeAddress,\n        USDC_BASE_MARKET\n      );\n\n      const CoreProxyContract = new ethers.Contract(CoreProxy.address, CoreProxy.abi, signer);\n\n      const delegateTx = CoreProxyContract.populateTransaction.delegateCollateral(\n        ethers.BigNumber.from(params.accountId),\n        ethers.BigNumber.from(POOL_ID),\n        collateralTypeAddress,\n        currentCollateral.add(collateralChange).toBN(),\n        wei(1).toBN()\n      );\n\n      const callsPromise: Promise<(ethers.PopulatedTransaction & { requireSuccess?: boolean })[]> =\n        Promise.all([approveAccountTx, depositDebtToRepay, delegateTx].filter(notNil));\n\n      const [calls] = await Promise.all([callsPromise]);\n\n      if (priceUpdateTx) {\n        calls.unshift(priceUpdateTx as any);\n      }\n\n      const walletAddress = await signer.getAddress();\n\n      const { multicallTxn: erc7412Tx, gasLimit } = await withERC7412(\n        provider,\n        network,\n        calls,\n        'useUndelegateBase',\n        walletAddress\n      );\n\n      const txn = await signer.sendTransaction({\n        ...erc7412Tx,\n        gasLimit: gasLimit.mul(15).div(10),\n      });\n      log('txn', txn);\n      dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n      return receipt;\n    },\n\n    onSuccess: async () => {\n      const deployment = `${network?.id}-${network?.preset}`;\n      await Promise.all(\n        [\n          //\n          'PriceUpdates',\n          'LiquidityPosition',\n          'LiquidityPositions',\n          'TokenBalance',\n          'SynthBalances',\n          'EthBalance',\n          'Allowance',\n          'AccountCollateralUnlockDate',\n        ].map((key) => queryClient.invalidateQueries({ queryKey: [deployment, key] }))\n      );\n      dispatch({ type: 'success' });\n    },\n\n    onError: (error) => {\n      dispatch({ type: 'error', payload: { error } });\n      throw error;\n    },\n  });\n  return {\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n}\n","import { ArrowBackIcon } from '@chakra-ui/icons';\nimport { Button, Divider, Flex, Link, Skeleton, Text, useToast } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { ContractError } from '@snx-v3/ContractError';\nimport { parseUnits } from '@snx-v3/format';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { Multistep } from '@snx-v3/Multistep';\nimport { useApprove } from '@snx-v3/useApprove';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useBorrow } from '@snx-v3/useBorrow';\nimport { useClosePosition } from '@snx-v3/useClosePosition';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useDebtRepayer } from '@snx-v3/useDebtRepayer';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useRepay } from '@snx-v3/useRepay';\nimport { useSynthTokens } from '@snx-v3/useSynthTokens';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { useUndelegate } from '@snx-v3/useUndelegate';\nimport { useUndelegateBaseAndromeda } from '@snx-v3/useUndelegateBaseAndromeda';\nimport { useUSDC } from '@snx-v3/useUSDC';\nimport { wei } from '@synthetixio/wei';\nimport { ethers } from 'ethers';\nimport React from 'react';\nimport { LiquidityPositionUpdated } from '../Manage/LiquidityPositionUpdated';\n\nexport function ClosePositionTransactions({\n  onClose,\n  onBack,\n}: {\n  onClose: () => void;\n  onBack: () => void;\n}) {\n  const [params] = useParams<PositionPageSchemaType>();\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: liquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  const [steps, setSteps] = React.useState<\n    {\n      title: React.ReactNode;\n      subtitle?: React.ReactNode;\n      cb: () => Promise<any>;\n    }[]\n  >([]);\n  const { setCollateralChange, setDebtChange } = React.useContext(ManagePositionContext);\n  const { data: systemToken } = useSystemToken();\n  const { data: CoreProxy } = useCoreProxy();\n  const { network } = useNetwork();\n  const toast = useToast({ isClosable: true, duration: 9000 });\n\n  const debtSymbol = network?.preset === 'andromeda' ? collateralType?.symbol : systemToken?.symbol;\n  const collateralSymbol = collateralType?.displaySymbol;\n\n  const [txState, setTxState] = React.useState({\n    step: 0,\n    status: 'idle',\n  });\n\n  const { data: synthTokens } = useSynthTokens();\n  const wrapperToken = React.useMemo(() => {\n    if (synthTokens && collateralType) {\n      return synthTokens.find((synth) => synth.address === collateralType.tokenAddress)?.token\n        ?.address;\n    }\n  }, [collateralType, synthTokens]);\n\n  const collateralAddress = network?.preset === 'andromeda' ? wrapperToken : systemToken?.address;\n  const availableUSDCollateral = liquidityPosition?.availableCollateral || ZEROWEI;\n  const errorParser = useContractErrorParser();\n\n  //repay approval\n  const { approve, requireApproval } = useApprove({\n    contractAddress: collateralAddress,\n    amount:\n      liquidityPosition && liquidityPosition.debt.abs().sub(availableUSDCollateral).gt(0)\n        ? liquidityPosition.debt.abs().sub(availableUSDCollateral).toBN()\n        : undefined,\n    spender: CoreProxy?.address,\n  });\n  const { exec: execRepay } = useRepay({ repayAmount: liquidityPosition?.debt });\n  const { exec: undelegate } = useUndelegate({\n    accountId: params.accountId,\n    collateralTypeAddress: collateralType?.tokenAddress,\n    collateralChange: liquidityPosition?.collateralAmount.mul(-1) || ZEROWEI,\n    currentCollateral: liquidityPosition?.collateralAmount || ZEROWEI,\n  });\n\n  const { data: DebtRepayer } = useDebtRepayer();\n  const { data: ClosePositionContract } = useClosePosition();\n  const { data: USDC } = useUSDC();\n\n  // repay approval for base\n  const {\n    approve: approveUSDC,\n    requireApproval: requireApprovalUSDC,\n    isLoading,\n  } = useApprove({\n    contractAddress: USDC?.address,\n    // slippage for approval\n    amount: liquidityPosition\n      ? parseUnits(liquidityPosition.debt.abs().toString(), 6).mul(120).div(100)\n      : ethers.BigNumber.from(0),\n    spender: DebtRepayer?.address,\n  });\n\n  const { exec: undelegateBaseAndromeda } = useUndelegateBaseAndromeda({\n    collateralChange: liquidityPosition?.collateralAmount.mul(-1) || wei(0),\n  });\n\n  //claim\n  const { exec: execBorrow } = useBorrow({\n    borrowAmount: liquidityPosition?.debt.lt(0) ? liquidityPosition?.debt.abs() : undefined,\n  });\n\n  const getSteps = React.useCallback(() => {\n    const transactions: {\n      title: React.ReactNode;\n      subtitle?: React.ReactNode;\n      cb: () => Promise<any>;\n    }[] = [];\n\n    if (ClosePositionContract) {\n      // TODO: one step close\n      // console.log(`ClosePositionContract`, ClosePositionContract);\n    }\n\n    if (network?.preset !== 'andromeda') {\n      if (liquidityPosition?.debt.gt(0)) {\n        if (requireApproval) {\n          transactions.push({\n            title: `Approve ${systemToken?.symbol} transfer`,\n            cb: () => approve(false),\n          });\n        }\n        transactions.push({\n          title: 'Repay',\n          subtitle: (\n            <Amount\n              prefix=\"Repay \"\n              value={liquidityPosition?.debt.abs()}\n              suffix={` ${systemToken?.symbol}`}\n            />\n          ),\n          cb: () => execRepay(),\n        });\n      } else if (liquidityPosition?.debt.lt(0)) {\n        transactions.push({\n          title: 'Claim',\n          subtitle: (\n            <Amount\n              prefix=\"Claim \"\n              value={liquidityPosition?.debt.abs()}\n              suffix={` ${systemToken?.symbol}`}\n            />\n          ),\n          cb: () => execBorrow(),\n        });\n      }\n\n      transactions.push({\n        title: 'Unlock collateral',\n        subtitle: (\n          <Amount\n            value={liquidityPosition?.collateralAmount || ZEROWEI}\n            suffix={` ${collateralSymbol} will be unlocked from the pool.`}\n          />\n        ),\n        cb: () => undelegate(),\n      });\n    } else {\n      if (liquidityPosition?.debt.gt(-0.00001) && requireApprovalUSDC) {\n        transactions.push({\n          title: `Approve ${debtSymbol} transfer`,\n          cb: () => approveUSDC(false),\n        });\n      }\n\n      transactions.push({\n        title: 'Unlock collateral',\n        subtitle: (\n          <Amount\n            value={liquidityPosition?.collateralAmount || ZEROWEI}\n            suffix={` ${collateralSymbol} will be unlocked from the pool.`}\n          />\n        ),\n        cb: () => undelegateBaseAndromeda(),\n      });\n    }\n\n    return transactions;\n  }, [\n    ClosePositionContract,\n    approve,\n    approveUSDC,\n    collateralSymbol,\n    debtSymbol,\n    execBorrow,\n    execRepay,\n    network?.preset,\n    liquidityPosition?.collateralAmount,\n    liquidityPosition?.debt,\n    requireApproval,\n    requireApprovalUSDC,\n    systemToken?.symbol,\n    undelegate,\n    undelegateBaseAndromeda,\n  ]);\n\n  React.useEffect(() => {\n    if (!steps.length && !isLoading) {\n      setTxState({\n        step: 0,\n        status: 'idle',\n      });\n      setSteps(getSteps());\n    }\n  }, [getSteps, isLoading, steps.length]);\n\n  const isSuccess = txState.step >= steps.length;\n\n  const handleSubmit = React.useCallback(async () => {\n    try {\n      let i = txState.step > -1 ? txState.step : 0;\n\n      for (; i < steps.length; i++) {\n        setTxState({\n          step: i,\n          status: 'pending',\n        });\n\n        await steps[i].cb();\n      }\n\n      setTxState({\n        step: steps.length,\n        status: 'success',\n      });\n\n      setCollateralChange(ZEROWEI);\n      setDebtChange(ZEROWEI);\n    } catch (error) {\n      setTxState((state) => ({\n        step: state.step,\n        status: 'error',\n      }));\n\n      const contractError = errorParser(error);\n\n      if (contractError) {\n        console.error(new Error(contractError.name), contractError);\n      }\n      toast.closeAll();\n      toast({\n        title: 'Transaction failed',\n        variant: 'left-accent',\n        description: contractError ? (\n          <ContractError contractError={contractError} />\n        ) : (\n          'Please try again.'\n        ),\n        status: 'error',\n        duration: 3_600_000,\n      });\n      throw Error('Transaction failed', { cause: error });\n    }\n  }, [txState.step, steps, setCollateralChange, setDebtChange, errorParser, toast]);\n\n  if (isSuccess) {\n    return (\n      <LiquidityPositionUpdated\n        onClose={onClose}\n        title=\"Position successfully Closed\"\n        subline={\n          <>\n            Your position has been successfully closed, read more about it in the{' '}\n            <Link\n              href=\"https://docs.synthetix.io/v/synthetix-v3-user-documentation\"\n              target=\"_blank\"\n              color=\"cyan.500\"\n            >\n              Synthetix V3 Documentation\n            </Link>\n          </>\n        }\n        alertText={<>Position successfully Closed</>}\n      />\n    );\n  }\n\n  return (\n    <Flex flexDirection=\"column\" data-cy=\"close position multistep\">\n      <Text color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n        <ArrowBackIcon cursor=\"pointer\" onClick={onBack} mr={2} />\n        Close Position\n      </Text>\n\n      <Divider mt={6} bg=\"gray.900\" />\n\n      {isLoading && !steps.length && <Skeleton width=\"100%\" height=\"78px\" mt=\"6\" />}\n      {steps.map((step, i) => (\n        <Multistep\n          key={i}\n          step={i + 1}\n          title={step.title}\n          subtitle={step.subtitle}\n          status={{\n            failed: txState.step === i && txState.status === 'error',\n            success: txState.step > i,\n            loading: txState.step === i && txState.status === 'pending',\n          }}\n        />\n      ))}\n\n      <Button\n        data-cy=\"close position confirm button\"\n        isLoading={txState.status === 'pending'}\n        onClick={handleSubmit}\n        mt=\"6\"\n      >\n        {(() => {\n          switch (true) {\n            case txState.status === 'error':\n              return 'Retry';\n            case txState.status === 'pending':\n              return 'Processing...';\n            default:\n              return 'Execute Transaction';\n          }\n        })()}\n      </Button>\n    </Flex>\n  );\n}\n","import { ArrowBackIcon } from '@chakra-ui/icons';\nimport {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  Button,\n  Collapse,\n  Divider,\n  Flex,\n  Text,\n} from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { TokenIcon } from '@snx-v3/TokenIcon';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useClosePosition } from '@snx-v3/useClosePosition';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { useTokenBalance } from '@snx-v3/useTokenBalance';\nimport { useTokenPrice } from '@snx-v3/useTokenPrice';\nimport React from 'react';\nimport { ClosePositionOneStep } from './ClosePositionOneStep';\nimport { ClosePositionTransactions } from './ClosePositionTransactions';\n\nfunction ClosePositionUi({ onSubmit, onClose }: { onClose: () => void; onSubmit: () => void }) {\n  const [params] = useParams<PositionPageSchemaType>();\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: systemToken } = useSystemToken();\n\n  const { data: liquidityPosition, isPending: isPendingLiquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n  liquidityPosition?.debt;\n  liquidityPosition?.collateralAmount;\n  const collateralSymbol = collateralType?.displaySymbol;\n\n  const { network } = useNetwork();\n  const debtSymbol = network?.preset === 'andromeda' ? 'USDC' : systemToken?.symbol;\n\n  const { data: systemTokenBalance, isPending: isPendingSystemTokenBalance } = useTokenBalance(\n    systemToken?.address\n  );\n\n  const debtPrice = useTokenPrice(debtSymbol);\n  const collateralPrice = useTokenPrice(collateralSymbol);\n\n  const { data: ClosePositionDeployment } = useClosePosition();\n\n  return (\n    <Flex data-cy=\"close position multistep\" flexDirection=\"column\">\n      <Text color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n        <ArrowBackIcon cursor=\"pointer\" onClick={onClose} mr={2} />\n        Close Position\n      </Text>\n\n      <Divider my={5} bg=\"gray.900\" />\n\n      <Text color=\"gray.50\" fontSize=\"sm\" fontWeight=\"700\" mb={2}>\n        {!isPendingLiquidityPosition && liquidityPosition ? (\n          <>{liquidityPosition.debt.gt(0) ? 'Repay Debt' : 'Claim Profit'}</>\n        ) : (\n          <>&nbsp;</>\n        )}\n      </Text>\n      <BorderBox display=\"flex\" flexDirection=\"column\" p={3} mb=\"6\">\n        <Flex alignItems=\"center\">\n          <Flex alignItems=\"flex-start\" flexDir=\"column\" gap={1}>\n            <BorderBox display=\"flex\" justifyContent=\"center\" alignItems=\"center\" py={1.5} px={2.5}>\n              <Text display=\"flex\" gap={2} alignItems=\"center\" fontWeight=\"600\">\n                <TokenIcon symbol={debtSymbol} width={16} height={16} />\n                {debtSymbol}\n              </Text>\n            </BorderBox>\n            <Text fontSize=\"12px\" whiteSpace=\"nowrap\" data-cy=\"debt amount\">\n              {isPendingLiquidityPosition ? '~' : null}\n              {!isPendingLiquidityPosition && liquidityPosition ? (\n                <>\n                  <Amount\n                    prefix={liquidityPosition.debt.gt(0) ? 'Debt: ' : 'Max Claim: '}\n                    value={liquidityPosition.debt.abs()}\n                  />{' '}\n                  <Text as=\"span\" color=\"gray.600\" fontWeight={700}>\n                    Max\n                  </Text>\n                </>\n              ) : null}\n            </Text>\n          </Flex>\n          <Flex flexGrow={1} flexDir=\"column\">\n            <NumberInput\n              value={\n                !isPendingLiquidityPosition && liquidityPosition\n                  ? liquidityPosition.debt.abs()\n                  : ZEROWEI\n              }\n              disabled\n            />\n            <Flex fontSize=\"xs\" color=\"whiteAlpha.700\" alignSelf=\"flex-end\" gap=\"1\">\n              {debtPrice.gt(0) && (\n                <Amount\n                  prefix=\"$\"\n                  value={\n                    !isPendingLiquidityPosition && liquidityPosition\n                      ? liquidityPosition.debt.abs().mul(debtPrice)\n                      : ZEROWEI\n                  }\n                />\n              )}\n            </Flex>\n          </Flex>\n        </Flex>\n      </BorderBox>\n\n      <Text color=\"gray.50\" fontSize=\"sm\" fontWeight=\"700\" mb={2}>\n        Unlock Collateral\n      </Text>\n      <BorderBox display=\"flex\" flexDirection=\"column\" p={3} mb=\"6\">\n        <Flex alignItems=\"center\">\n          <Flex alignItems=\"flex-start\" flexDir=\"column\" gap={1}>\n            <BorderBox display=\"flex\" justifyContent=\"center\" alignItems=\"center\" py={1.5} px={2.5}>\n              <Text display=\"flex\" gap={2} alignItems=\"center\" fontWeight=\"600\">\n                <TokenIcon symbol={collateralSymbol} width={16} height={16} />\n                {collateralSymbol}\n              </Text>\n            </BorderBox>\n            <Text fontSize=\"12px\" whiteSpace=\"nowrap\" data-cy=\"locked collateral amount\">\n              {isPendingLiquidityPosition ? 'Locked: ~' : null}\n              {!isPendingLiquidityPosition && liquidityPosition ? (\n                <>\n                  <Amount prefix=\"Locked: \" value={liquidityPosition.collateralAmount} />{' '}\n                  <Text as=\"span\" color=\"gray.600\" fontWeight={700}>\n                    Max\n                  </Text>\n                </>\n              ) : null}\n            </Text>\n          </Flex>\n          <Flex flexGrow={1} flexDir=\"column\">\n            <NumberInput\n              value={\n                !isPendingLiquidityPosition && liquidityPosition\n                  ? liquidityPosition.collateralAmount\n                  : ZEROWEI\n              }\n              disabled\n            />\n            <Flex fontSize=\"xs\" color=\"whiteAlpha.700\" alignSelf=\"flex-end\" gap=\"1\">\n              {collateralPrice.gt(0) && (\n                <Amount\n                  prefix=\"$\"\n                  value={\n                    !isPendingLiquidityPosition && liquidityPosition\n                      ? liquidityPosition.collateralAmount.abs().mul(collateralPrice)\n                      : ZEROWEI\n                  }\n                />\n              )}\n            </Flex>\n          </Flex>\n        </Flex>\n      </BorderBox>\n\n      <Collapse\n        in={\n          // Deployments that do not have ClosePosition contract available should skip this check\n          ClosePositionDeployment &&\n          systemTokenBalance &&\n          liquidityPosition &&\n          !systemTokenBalance\n            .add(liquidityPosition.availableSystemToken)\n            .gte(liquidityPosition.debt)\n        }\n        animateOpacity\n        unmountOnExit\n      >\n        <Alert mb={6} status=\"error\" borderRadius=\"6px\">\n          <AlertIcon />\n          <AlertDescription>\n            <Text>You do not have enough {systemToken?.symbol} to repay debt</Text>\n            <Text>\n              <Amount\n                prefix=\"Available: \"\n                value={\n                  systemTokenBalance &&\n                  liquidityPosition &&\n                  systemTokenBalance.add(liquidityPosition.availableSystemToken)\n                }\n                suffix={` ${systemToken?.symbol}`}\n              />\n            </Text>\n          </AlertDescription>\n        </Alert>\n      </Collapse>\n\n      <Button\n        data-cy=\"close position submit\"\n        onClick={onSubmit}\n        type=\"submit\"\n        isDisabled={\n          // Deployments that do not have ClosePosition contract available should skip this check\n          ClosePositionDeployment &&\n          !(\n            !isPendingSystemTokenBalance &&\n            systemTokenBalance &&\n            !isPendingLiquidityPosition &&\n            liquidityPosition &&\n            systemTokenBalance\n              .add(liquidityPosition.availableSystemToken)\n              .gte(liquidityPosition.debt)\n          )\n        }\n      >\n        Close Position\n      </Button>\n    </Flex>\n  );\n}\n\nexport const ClosePosition = ({ onClose }: { onClose: () => void }) => {\n  const [params] = useParams<PositionPageSchemaType>();\n\n  const [transactionStep, setTransactions] = React.useState(false);\n  const { setCollateralChange, setDebtChange } = React.useContext(ManagePositionContext);\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n\n  const { data: liquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  React.useEffect(() => {\n    if (liquidityPosition) {\n      setDebtChange(liquidityPosition.debt.mul(-1));\n      setCollateralChange(liquidityPosition.collateralAmount.mul(-1));\n    }\n\n    return () => {\n      setDebtChange(ZEROWEI);\n      setCollateralChange(ZEROWEI);\n    };\n  }, [liquidityPosition, setCollateralChange, setDebtChange]);\n\n  const { data: ClosePositionDeployment } = useClosePosition();\n\n  if (!collateralType) {\n    return null;\n  }\n\n  return (\n    <>\n      {!transactionStep ? (\n        <ClosePositionUi onClose={onClose} onSubmit={() => setTransactions(true)} />\n      ) : null}\n      {transactionStep && !ClosePositionDeployment ? (\n        <ClosePositionTransactions onBack={() => setTransactions(false)} onClose={onClose} />\n      ) : null}\n      {transactionStep && ClosePositionDeployment ? (\n        <ClosePositionOneStep onBack={() => setTransactions(false)} onClose={onClose} />\n      ) : null}\n    </>\n  );\n};\n","import {\n  Button,\n  Divider,\n  Link,\n  Modal,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n} from '@chakra-ui/react';\nimport { makeSearch, type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\n\nexport const UnsupportedCollateralAlert = ({ isOpen }: { isOpen: boolean }) => {\n  const [params, setParams] = useParams<PositionPageSchemaType>();\n  return (\n    <Modal isOpen={isOpen} onClose={() => {}}>\n      <ModalOverlay />\n      <ModalContent p={6} borderWidth=\"1px\" borderColor=\"gray.900\" mt=\"17.5%\" bg=\"navy.700\">\n        <ModalHeader p={0}>Collateral Not Supported</ModalHeader>\n        <Divider my={6} />\n        <Text color=\"white\" fontFamily=\"heading\" fontSize=\"14px\" lineHeight=\"20px\">\n          This collateral is not supported on this network. Go back to home page to see your active\n          positions on this network.\n        </Text>\n        <Button\n          as={Link}\n          href={`?${makeSearch({ accountId: params.accountId })}`}\n          onClick={(e) => {\n            e.preventDefault();\n            setParams({ accountId: params.accountId });\n          }}\n          mt={6}\n          textDecoration=\"none\"\n          _hover={{ textDecoration: 'none' }}\n        >\n          Back\n        </Button>\n      </ModalContent>\n    </Modal>\n  );\n};\n","import { ArrowUpIcon } from '@chakra-ui/icons';\nimport { Button, Divider, Flex, Heading, Image, Link, Text } from '@chakra-ui/react';\nimport SynthetixLogo from '@snx-v3/useBlockchain/SynthetixIcon.svg';\n\nexport function ClaimSuccessBanner({ onClose }: { onClose: () => void }) {\n  return (\n    <Flex\n      data-cy=\"claim success\"\n      flexDir=\"column\"\n      gap=\"6\"\n      borderColor=\"gray.900\"\n      rounded=\"base\"\n      height=\"fit-content\"\n    >\n      <Heading color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n        What can you do with your sUSD?\n      </Heading>\n      <Divider />\n\n      <Flex flexWrap=\"wrap\" px={1} alignItems=\"center\" gap={4}>\n        <Image src={SynthetixLogo} width={42} />\n\n        <Flex flexDir=\"column\">\n          <Text color=\"white\" fontSize=\"16px\" fontWeight={800}>\n            Trade L1 Perp\n          </Text>\n          <Text color=\"white\" fontSize=\"14px\" fontWeight={300}>\n            Trade with synthetix integrators\n          </Text>\n        </Flex>\n\n        <Text ml=\"auto\" color=\"white\" fontSize=\"12px\" fontWeight={800}>\n          Coming soon\n        </Text>\n      </Flex>\n\n      <Flex flexWrap=\"wrap\" px={1} alignItems=\"center\" gap={4} mt={4} mb={2}>\n        <Image width=\"42px\" src=\"/curve.png\" alt=\"Curve\" />\n\n        <Flex flexDir=\"column\">\n          <Text color=\"white\" fontSize=\"16px\" fontWeight={800}>\n            sUSD/USDC Pool\n          </Text>\n          <Text color=\"white\" fontSize=\"14px\" fontWeight={300}>\n            Curve\n          </Text>\n        </Flex>\n\n        <Button\n          as={Link}\n          ml=\"auto\"\n          size=\"sm\"\n          href=\"https://curve.fi/#/ethereum/pools/factory-stable-ng-258/deposit\"\n          target=\"_blank\"\n          textDecoration=\"none\"\n          _hover={{ textDecoration: 'none' }}\n          display=\"flex\"\n          alignItems=\"center\"\n          fontWeight={700}\n          gap=\"2\"\n        >\n          Deposit on Curve{' '}\n          <ArrowUpIcon\n            style={{\n              transform: 'rotate(45deg)',\n            }}\n          />\n        </Button>\n      </Flex>\n\n      <Button onClick={onClose} variant=\"outline\" colorScheme=\"gray\" w=\"100%\">\n        Later\n      </Button>\n    </Flex>\n  );\n}\n","import { ArrowBackIcon } from '@chakra-ui/icons';\nimport { Button, Divider, Link, Text, useToast } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { ContractError } from '@snx-v3/ContractError';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { Multistep } from '@snx-v3/Multistep';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useBorrow } from '@snx-v3/useBorrow';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { wei } from '@synthetixio/wei';\nimport { useCallback, useContext, useMemo, useState } from 'react';\nimport { LiquidityPositionUpdated } from '../../ui/src/components/Manage/LiquidityPositionUpdated';\nimport { ClaimSuccessBanner } from './ClaimSuccessBanner';\n\nexport function ClaimModal({ onClose }: { onClose: () => void }) {\n  const [params] = useParams<PositionPageSchemaType>();\n  const { debtChange, setDebtChange } = useContext(ManagePositionContext);\n  const { network } = useNetwork();\n  const [showClaimBanner, setShowClaimBanner] = useState(false);\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: liquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  const { data: systemToken } = useSystemToken();\n\n  const maxClaimble = useMemo(() => {\n    if (!liquidityPosition || liquidityPosition?.debt.gte(0)) {\n      return ZEROWEI;\n    } else {\n      return wei(liquidityPosition.debt.abs().toBN().sub(1));\n    }\n  }, [liquidityPosition]);\n  const isBorrow = useMemo(\n    () => debtChange.gt(maxClaimble) && network?.preset !== 'andromeda',\n    [debtChange, network?.preset, maxClaimble]\n  );\n\n  const {\n    exec: execBorrow,\n    txnState,\n    settle: settleBorrow,\n  } = useBorrow({\n    borrowAmount: debtChange.gt(0) ? debtChange.abs() : undefined,\n  });\n\n  const toast = useToast({ isClosable: true, duration: 9000 });\n  const errorParser = useContractErrorParser();\n  const execBorrowWithErrorParser = useCallback(async () => {\n    try {\n      await execBorrow();\n      setDebtChange(ZEROWEI);\n    } catch (error: any) {\n      const contractError = errorParser(error);\n      if (contractError) {\n        console.error(new Error(contractError.name), contractError);\n      }\n      toast.closeAll();\n      toast({\n        title: isBorrow ? 'Borrow' : 'Claim' + ' failed',\n        description: contractError ? (\n          <ContractError contractError={contractError} />\n        ) : (\n          'Please try again.'\n        ),\n        status: 'error',\n        variant: 'left-accent',\n        duration: 3_600_000,\n      });\n      throw Error(isBorrow ? 'Borrow' : 'Claim' + ' failed', { cause: error });\n    }\n  }, [execBorrow, setDebtChange, errorParser, toast, isBorrow]);\n\n  const symbol =\n    network?.preset === 'andromeda' ? collateralType?.displaySymbol : systemToken?.symbol;\n\n  if (txnState.txnStatus === 'success') {\n    if (showClaimBanner) {\n      return (\n        <ClaimSuccessBanner\n          onClose={() => {\n            settleBorrow();\n            onClose();\n          }}\n        />\n      );\n    } else {\n      return (\n        <LiquidityPositionUpdated\n          onClose={() => {\n            if (network?.id === 1 && network?.preset === 'main') {\n              setShowClaimBanner(true);\n            } else {\n              settleBorrow();\n              onClose();\n            }\n          }}\n          title=\"Debt successfully Updated\"\n          subline={\n            <>\n              Your <b>Debt</b> has been updated, read more about it in the{' '}\n              <Link\n                href=\"https://docs.synthetix.io/v/synthetix-v3-user-documentation\"\n                target=\"_blank\"\n                color=\"cyan.500\"\n              >\n                Synthetix V3 Documentation\n              </Link>\n            </>\n          }\n          alertText={\n            <>\n              <b>Debt</b> successfully Updated\n            </>\n          }\n        />\n      );\n    }\n  }\n\n  return (\n    <div data-cy=\"claim multistep\">\n      <Text color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n        <ArrowBackIcon\n          cursor=\"pointer\"\n          onClick={() => {\n            settleBorrow();\n            onClose();\n          }}\n          mr={2}\n        />\n        Manage Debt\n      </Text>\n\n      <Divider my={4} />\n\n      <Multistep\n        step={1}\n        title={network?.preset === 'andromeda' ? 'Claim' : 'Borrow'}\n        subtitle={\n          <Text as=\"div\">\n            {network?.preset === 'andromeda' ? 'Claim' : 'Borrow'}\n            <Amount prefix=\" \" value={debtChange} suffix={` ${symbol}`} />\n          </Text>\n        }\n        status={{\n          failed: txnState.txnStatus === 'error',\n          loading: ['prompting', 'pending'].includes(txnState.txnStatus),\n        }}\n      />\n\n      <Button\n        isDisabled={['pending', 'prompting'].includes(txnState.txnStatus)}\n        onClick={() => {\n          if (['unsent', 'error'].includes(txnState.txnStatus)) {\n            execBorrowWithErrorParser();\n          }\n        }}\n        width=\"100%\"\n        mt=\"6\"\n        data-cy=\"claim confirm button\"\n      >\n        {(() => {\n          switch (txnState.txnStatus) {\n            case 'error':\n              return 'Retry';\n            case 'pending':\n            case 'prompting':\n              return 'Processing...';\n            default:\n              return 'Execute Transaction';\n          }\n        })()}\n      </Button>\n    </div>\n  );\n}\n","import { Wei, wei } from '@synthetixio/wei';\nimport { createMachine, assign } from 'xstate';\n\nexport const Events = {\n  SET_REQUIRE_APPROVAL: 'SET_REQUIRE_APPROVAL',\n  SET_REQUIRE_APPROVAL_FOR_STATAUSDC: 'SET_REQUIRE_APPROVAL_FOR_STATAUSDC',\n  SET_WRAP_AMOUNT: 'SET_WRAP_AMOUNT',\n  SET_INFINITE_APPROVAL: 'SET_INFINITE_APPROVAL',\n  SET_IS_STATA_USDC: 'SET_IS_STATA_USDC',\n  SET_HAS_ENOUGH_STATAUSDC: 'SET_HAS_ENOUGH_STATAUSDC',\n  RETRY: 'RETRY',\n  RUN: 'RUN',\n  WRAP_USDC: 'WRAP_USDC',\n  SUCCESS: 'SUCCESS',\n  FAILURE: 'FAILURE',\n  RESET: 'RESET',\n} as const;\n\nexport const State = {\n  idle: 'idle',\n  wrap: 'wrap',\n  approveCollateral: 'approveCollateral',\n  wrapUSDC: 'wrapUSDC',\n  approveUSDCForStata: 'approveUSDCForStata',\n  deposit: 'deposit',\n  failed: 'failed',\n  success: 'success',\n} as const;\n\nconst FailedSteps = {\n  [State.approveCollateral]: State.approveCollateral,\n  [State.wrap]: State.wrap,\n  [State.deposit]: State.deposit,\n  [State.wrapUSDC]: State.wrapUSDC,\n  [State.approveUSDCForStata]: State.approveUSDCForStata,\n} as const;\n\nexport const ServiceNames = {\n  wrapEth: 'wrapEth',\n\n  approveUSDCForStata: 'approveUSDCForStata',\n  wrapUSDCToStataUSDC: 'wrapUSDCToStataUSDC',\n\n  approveCollateral: 'approveCollateral',\n  executeDeposit: 'executeDeposit',\n} as const;\n\ntype Context = {\n  error: {\n    error: Error;\n    step: keyof typeof FailedSteps;\n  } | null;\n  requireApproval: boolean;\n  wrapAmount: Wei;\n  infiniteApproval: boolean;\n  isStataUSDC: boolean;\n  requireStataUSDCApproval: boolean;\n  hasEnoughStataUSDC: boolean;\n};\n\ntype EventNamesType = typeof Events;\n\ntype DepositEvents =\n  | { type: EventNamesType['SET_IS_STATA_USDC']; isStataUSDC: boolean }\n  | { type: EventNamesType['SET_HAS_ENOUGH_STATAUSDC']; hasEnoughStataUSDC: boolean }\n  | { type: EventNamesType['SET_REQUIRE_APPROVAL']; requireApproval: boolean }\n  | {\n      type: EventNamesType['SET_REQUIRE_APPROVAL_FOR_STATAUSDC'];\n      requireStataUSDCApproval: boolean;\n    }\n  | { type: EventNamesType['SET_WRAP_AMOUNT']; wrapAmount: Wei }\n  | { type: EventNamesType['SET_INFINITE_APPROVAL']; infiniteApproval: boolean }\n  | { type: EventNamesType['RETRY'] }\n  | { type: EventNamesType['RUN'] }\n  | { type: EventNamesType['WRAP_USDC'] }\n  | { type: EventNamesType['SUCCESS'] }\n  | { type: EventNamesType['FAILURE'] }\n  | { type: EventNamesType['RESET'] };\n\ntype StateType = typeof State;\ntype MachineState =\n  | {\n      value: StateType['idle'];\n      context: Context & { error: null };\n    }\n  | {\n      value: StateType['wrap'];\n      context: Context & { error: null };\n    }\n  | {\n      value: StateType['approveCollateral'];\n      context: Context & { error: null };\n    }\n  | {\n      value: StateType['deposit'];\n      context: Context & { error: null };\n    }\n  | {\n      value: StateType['wrapUSDC'];\n      context: Context & { error: null };\n    }\n  | {\n      value: StateType['approveUSDCForStata'];\n      context: Context & { error: null };\n    }\n  | {\n      value: StateType['failed'];\n      context: Context & { error: { error: Error; step: keyof typeof FailedSteps } };\n    }\n  | {\n      value: StateType['success'];\n      context: Context & {\n        error: null;\n      };\n    };\n\nconst initialContext = {\n  wrapAmount: wei(0),\n  error: null,\n  requireApproval: false,\n  infiniteApproval: false,\n  isStataUSDC: false,\n  requireStataUSDCApproval: false,\n  hasEnoughStataUSDC: false,\n};\n\nexport const DepositMachine = createMachine<Context, DepositEvents, MachineState>({\n  id: 'DepositMachine',\n  initial: State.idle,\n  predictableActionArguments: true,\n  context: initialContext,\n  on: {\n    [Events.RUN]: {\n      target: State.deposit,\n      actions: assign({\n        wrapAmount: (_) => initialContext.wrapAmount,\n        error: (_) => initialContext.error,\n        requireApproval: (_) => initialContext.requireApproval,\n        infiniteApproval: (_) => initialContext.infiniteApproval,\n      }),\n    },\n    [Events.SET_REQUIRE_APPROVAL]: {\n      actions: assign({ requireApproval: (_context, event) => event.requireApproval }),\n    },\n    [Events.SET_REQUIRE_APPROVAL_FOR_STATAUSDC]: {\n      actions: assign({\n        requireStataUSDCApproval: (_context, event) => event.requireStataUSDCApproval,\n      }),\n    },\n    [Events.SET_WRAP_AMOUNT]: {\n      actions: assign({ wrapAmount: (_context, event) => event.wrapAmount }),\n    },\n    [Events.SET_INFINITE_APPROVAL]: {\n      actions: assign({ infiniteApproval: (_context, event) => event.infiniteApproval }),\n    },\n    [Events.SET_IS_STATA_USDC]: {\n      actions: assign({ isStataUSDC: (_context, event) => event.isStataUSDC }),\n    },\n  },\n  states: {\n    [State.idle]: {\n      on: {\n        [Events.RUN]: [\n          {\n            target: State.wrap,\n            cond: (context) => context.wrapAmount.gt(0),\n          },\n          {\n            target: State.approveUSDCForStata,\n            cond: (context) => context.isStataUSDC && context.requireStataUSDCApproval,\n          },\n          {\n            target: State.wrapUSDC,\n            cond: (context) => context.isStataUSDC,\n          },\n          { target: State.approveCollateral, cond: (context) => context.requireApproval },\n          { target: State.deposit },\n        ],\n      },\n    },\n    [State.wrap]: {\n      invoke: {\n        src: ServiceNames.wrapEth,\n        onError: {\n          target: State.failed,\n          actions: assign({\n            error: (_context, event) => ({ error: event.data, step: FailedSteps.wrap }),\n          }),\n        },\n        onDone: [\n          {\n            target: State.approveUSDCForStata,\n            cond: (context) => context.requireStataUSDCApproval && context.isStataUSDC,\n          },\n          { target: State.approveCollateral, cond: (context) => context.requireApproval },\n          { target: State.deposit },\n        ],\n      },\n    },\n    [State.approveUSDCForStata]: {\n      invoke: {\n        src: ServiceNames.approveUSDCForStata,\n        onError: {\n          target: State.failed,\n          actions: assign({\n            error: (_context, event) => ({\n              error: event.data,\n              step: FailedSteps.approveUSDCForStata,\n            }),\n          }),\n        },\n        onDone: {\n          target: State.wrapUSDC,\n        },\n      },\n    },\n    [State.wrapUSDC]: {\n      invoke: {\n        src: ServiceNames.wrapUSDCToStataUSDC,\n        onError: {\n          target: State.failed,\n          actions: assign({\n            error: (_context, event) => ({ error: event.data, step: FailedSteps.wrapUSDC }),\n          }),\n        },\n        onDone: [\n          {\n            target: State.approveCollateral,\n            cond: (context) => context.requireApproval,\n          },\n          {\n            target: State.deposit,\n          },\n        ],\n      },\n    },\n\n    [State.approveCollateral]: {\n      invoke: {\n        src: ServiceNames.approveCollateral,\n        onDone: [\n          {\n            target: State.deposit,\n          },\n        ],\n        onError: {\n          target: State.failed,\n          actions: assign({\n            error: (_context, event) => ({\n              error: event.data,\n              step: FailedSteps.approveCollateral,\n            }),\n          }),\n        },\n      },\n    },\n\n    [State.deposit]: {\n      invoke: {\n        src: ServiceNames.executeDeposit,\n        onDone: {\n          target: State.success,\n        },\n        onError: {\n          target: State.failed,\n          actions: assign({\n            error: (_context, event) => ({ error: event.data, step: FailedSteps.deposit }),\n          }),\n        },\n      },\n    },\n    [State.failed]: {\n      on: {\n        [Events.RETRY]: [\n          {\n            target: State.approveCollateral,\n            cond: (c) => c.error?.step === FailedSteps.approveCollateral,\n            actions: assign({ error: (_) => null }),\n          },\n          {\n            target: State.wrap,\n            cond: (c) => c.error?.step === FailedSteps.wrap,\n            actions: assign({ error: (_) => null }),\n          },\n          {\n            target: State.deposit,\n            cond: (c) => c.error?.step === FailedSteps.deposit,\n            actions: assign({ error: (_) => null }),\n          },\n          {\n            target: State.approveUSDCForStata,\n            cond: (c) => c.error?.step === FailedSteps.approveUSDCForStata,\n            actions: assign({ error: (_) => null }),\n          },\n          {\n            target: State.wrapUSDC,\n            cond: (c) => c.error?.step === FailedSteps.wrapUSDC,\n            actions: assign({ error: (_) => null }),\n          },\n        ],\n      },\n    },\n    [State.success]: {},\n  },\n});\n","import { POOL_ID } from '@snx-v3/constants';\nimport { notNil } from '@snx-v3/tsHelpers';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { useCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport Wei, { wei } from '@synthetixio/wei';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\nimport { useReducer } from 'react';\n\nconst log = debug('snx:useDeposit');\n\nexport const useDeposit = ({\n  accountId,\n  newAccountId,\n  collateralTypeAddress,\n  collateralChange,\n  currentCollateral,\n  availableCollateral,\n}: {\n  accountId?: string;\n  newAccountId: string;\n  collateralTypeAddress?: string;\n  currentCollateral: Wei;\n  availableCollateral?: Wei;\n  collateralChange: Wei;\n}) => {\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: priceUpdateTx } = useCollateralPriceUpdates();\n\n  const { network } = useNetwork();\n  const signer = useSigner();\n  const provider = useProvider();\n\n  const queryClient = useQueryClient();\n  const mutation = useMutation({\n    mutationFn: async () => {\n      if (\n        !(\n          network &&\n          provider &&\n          signer &&\n          CoreProxy &&\n          collateralTypeAddress &&\n          availableCollateral\n        )\n      ) {\n        return;\n      }\n      if (collateralChange.eq(0)) {\n        return;\n      }\n\n      dispatch({ type: 'prompting' });\n      const walletAddress = await signer.getAddress();\n      const id = accountId ?? newAccountId;\n\n      const CoreProxyContract = new ethers.Contract(CoreProxy.address, CoreProxy.abi, signer);\n\n      // create account only when no account exists\n      const createAccount = accountId\n        ? undefined\n        : CoreProxyContract.populateTransaction['createAccount(uint128)'](\n            ethers.BigNumber.from(id)\n          );\n\n      log('collateralChange', collateralChange);\n      log('availableCollateral', availableCollateral);\n\n      const amountNeeded = collateralChange.sub(availableCollateral);\n      log('amountNeeded', amountNeeded);\n\n      // optionally deposit if available collateral not enough\n      const deposit = amountNeeded.gt(0)\n        ? CoreProxyContract.populateTransaction.deposit(\n            ethers.BigNumber.from(id),\n            collateralTypeAddress,\n            amountNeeded.toBN() // only deposit what's needed\n          )\n        : undefined;\n\n      log('currentCollateral', currentCollateral);\n      log('collateralChange', collateralChange);\n      log('newDelegation', currentCollateral.add(collateralChange));\n      const delegate = CoreProxyContract.populateTransaction.delegateCollateral(\n        ethers.BigNumber.from(id),\n        ethers.BigNumber.from(POOL_ID),\n        collateralTypeAddress,\n        currentCollateral.add(collateralChange).toBN(),\n        wei(1).toBN()\n      );\n      const callsPromise = Promise.all([createAccount, deposit, delegate].filter(notNil));\n\n      const [calls] = await Promise.all([callsPromise]);\n      if (priceUpdateTx) {\n        calls.unshift(priceUpdateTx as any);\n      }\n\n      const { multicallTxn: erc7412Tx, gasLimit } = await withERC7412(\n        provider,\n        network,\n        calls,\n        'useDeposit',\n        walletAddress\n      );\n\n      const txn = await signer.sendTransaction({\n        ...erc7412Tx,\n        gasLimit: gasLimit.mul(15).div(10),\n      });\n      log('txn', txn);\n      dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n      return receipt;\n    },\n\n    onSuccess: async () => {\n      const deployment = `${network?.id}-${network?.preset}`;\n      await Promise.all(\n        [\n          //\n          'Accounts',\n          'PriceUpdates',\n          'LiquidityPosition',\n          'LiquidityPositions',\n          'TokenBalance',\n          'SynthBalances',\n          'EthBalance',\n          'Allowance',\n          'TransferableSynthetix',\n        ].map((key) => queryClient.invalidateQueries({ queryKey: [deployment, key] }))\n      );\n      dispatch({ type: 'success' });\n    },\n\n    onError: (error) => {\n      dispatch({ type: 'error', payload: { error } });\n      throw error;\n    },\n  });\n  return {\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n};\n","import { contractsHash } from '@snx-v3/tsHelpers';\nimport { Network, useNetwork } from '@snx-v3/useBlockchain';\nimport { type CollateralType } from '@snx-v3/useCollateralTypes';\nimport { useSynthTokens } from '@snx-v3/useSynthTokens';\nimport { useQuery } from '@tanstack/react-query';\nimport debug from 'debug';\n\nconst log = debug('snx:useSynthToken');\n\nexport function useSynthToken(collateralType?: CollateralType, networkOverride?: Network) {\n  const { data: synthTokens } = useSynthTokens();\n  const { network: currentNetwork } = useNetwork();\n  const network = networkOverride || currentNetwork;\n\n  return useQuery({\n    enabled: Boolean(network && collateralType && synthTokens),\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'SynthToken',\n      { collateralType: collateralType?.address },\n      { contractsHash: contractsHash([...(synthTokens ?? [])]) },\n    ],\n    queryFn: async () => {\n      if (!(network && collateralType && synthTokens)) {\n        throw new Error('OMG');\n      }\n      log('collateralType', collateralType);\n\n      const tokenAddress = collateralType.address.toLowerCase();\n      const synthToken = synthTokens.find(\n        ({ address, token }) =>\n          address.toLowerCase() === tokenAddress ||\n          (token && token.address.toLowerCase() === tokenAddress)\n      );\n\n      log('synthToken', synthToken);\n\n      return synthToken;\n    },\n  });\n}\n","import { D18, POOL_ID } from '@snx-v3/constants';\nimport { notNil } from '@snx-v3/tsHelpers';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport { approveAbi } from '@snx-v3/useApprove';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { useCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useSpotMarketProxy } from '@snx-v3/useSpotMarketProxy';\nimport { useSynthToken } from '@snx-v3/useSynthToken';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport Wei from '@synthetixio/wei';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\nimport React from 'react';\n\nconst log = debug('snx:useDepositBaseAndromeda');\n\nexport const useDepositBaseAndromeda = ({\n  accountId,\n  newAccountId,\n  collateralTypeAddress,\n  collateralChange,\n  currentCollateral,\n  availableCollateral,\n  collateralSymbol,\n}: {\n  accountId?: string;\n  newAccountId: string;\n  collateralTypeAddress?: string;\n  currentCollateral?: Wei;\n  availableCollateral?: Wei;\n  collateralChange: Wei;\n  collateralSymbol?: string;\n}) => {\n  const [txnState, dispatch] = React.useReducer(reducer, initialState);\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: SpotMarketProxy } = useSpotMarketProxy();\n  const { data: priceUpdateTx } = useCollateralPriceUpdates();\n  const { data: collateralType } = useCollateralType(collateralSymbol);\n  const { data: synthToken } = useSynthToken(collateralType);\n\n  const { network } = useNetwork();\n  const signer = useSigner();\n  const provider = useProvider();\n\n  const queryClient = useQueryClient();\n  const mutation = useMutation({\n    mutationFn: async () => {\n      if (\n        !(\n          network &&\n          provider &&\n          signer &&\n          CoreProxy &&\n          SpotMarketProxy &&\n          collateralTypeAddress &&\n          availableCollateral &&\n          currentCollateral &&\n          synthToken &&\n          synthToken.token\n        )\n      ) {\n        return;\n      }\n\n      if (collateralChange.eq(0)) return;\n\n      // Steps:\n      // 1. Create an account if not exists\n      // 2. Wrap USDC or stataUSDC to sUSDC or sStataUSDC\n      // 3. Approve sUSDC or sStataUSDC\n      // 4. Deposit sUSDC or sStataUSDC\n      // 5. Delegate collateral\n\n      dispatch({ type: 'prompting' });\n      const walletAddress = await signer.getAddress();\n      const id = accountId ?? newAccountId;\n\n      const CoreProxyContract = new ethers.Contract(CoreProxy.address, CoreProxy.abi, signer);\n      const SpotMarketProxyContract = new ethers.Contract(\n        SpotMarketProxy.address,\n        SpotMarketProxy.abi,\n        signer\n      );\n\n      // create account only when no account exists\n      const createAccount = accountId\n        ? undefined\n        : CoreProxyContract.populateTransaction['createAccount(uint128)'](\n            ethers.BigNumber.from(id)\n          );\n\n      log('collateralChange', collateralChange);\n      log('availableCollateral', availableCollateral);\n\n      const synthAmountNeeded = collateralChange\n        .sub(availableCollateral)\n        // Reduce precision to avoid rounding issues\n        .mul(ethers.utils.parseUnits('1', synthToken.token.decimals))\n        .div(D18)\n        // revert back to 18\n        .mul(D18)\n        .div(ethers.utils.parseUnits('1', synthToken.token.decimals));\n      log('synthAmountNeeded', synthAmountNeeded);\n\n      const tokenAmountToWrap = synthAmountNeeded\n        .mul(ethers.utils.parseUnits('1', synthToken.token.decimals))\n        .div(D18);\n      log('tokenAmountToWrap', tokenAmountToWrap);\n\n      // Wrap\n      const wrap = synthAmountNeeded.gt(0)\n        ? SpotMarketProxyContract.populateTransaction.wrap(\n            synthToken.synthMarketId,\n            tokenAmountToWrap.toBN(),\n            synthAmountNeeded.toBN()\n          )\n        : undefined;\n\n      // Synth\n      const SynthTokenContract = new ethers.Contract(synthToken.address, approveAbi, signer);\n\n      const synthApproval = synthAmountNeeded.gt(0)\n        ? SynthTokenContract.populateTransaction.approve(\n            CoreProxy.address,\n            synthAmountNeeded.toBN()\n          )\n        : undefined;\n\n      // optionally deposit if available collateral not enough\n      const deposit = synthAmountNeeded.gt(0)\n        ? CoreProxyContract.populateTransaction.deposit(\n            ethers.BigNumber.from(id),\n            synthToken.address,\n            synthAmountNeeded.toBN() // only deposit what's needed\n          )\n        : undefined;\n\n      log('currentCollateral', currentCollateral);\n      log('collateralChange', collateralChange);\n      log('newDelegation', currentCollateral.add(collateralChange));\n      const delegate = CoreProxyContract.populateTransaction.delegateCollateral(\n        ethers.BigNumber.from(id),\n        ethers.BigNumber.from(POOL_ID),\n        synthToken.address,\n        currentCollateral.add(collateralChange).toBN(),\n        ethers.utils.parseEther('1')\n      );\n\n      const calls = await Promise.all(\n        [wrap, synthApproval, createAccount, deposit, delegate].filter(notNil)\n      );\n\n      if (priceUpdateTx) {\n        calls.unshift(priceUpdateTx as any);\n      }\n\n      const { multicallTxn: erc7412Tx, gasLimit } = await withERC7412(\n        provider,\n        network,\n        calls,\n        'useDepositBaseAndromeda',\n        walletAddress\n      );\n\n      const txn = await signer.sendTransaction({\n        ...erc7412Tx,\n        gasLimit: gasLimit.mul(15).div(10),\n      });\n      log('txn', txn);\n      dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n      return receipt;\n    },\n\n    onSuccess: async () => {\n      const deployment = `${network?.id}-${network?.preset}`;\n      await Promise.all(\n        [\n          //\n          'Accounts',\n          'PriceUpdates',\n          'LiquidityPosition',\n          'LiquidityPositions',\n          'TokenBalance',\n          'SynthBalances',\n          'EthBalance',\n          'Allowance',\n          'TransferableSynthetix',\n        ].map((key) => queryClient.invalidateQueries({ queryKey: [deployment, key] }))\n      );\n      dispatch({ type: 'success' });\n    },\n\n    onError: (error) => {\n      dispatch({ type: 'error', payload: { error } });\n      throw error;\n    },\n  });\n  return {\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n};\n","import { BigNumber } from 'ethers';\nimport { z } from 'zod';\nimport { wei } from '@synthetixio/wei';\n\nexport const ZodBigNumber = z.custom<BigNumber>((val) => BigNumber.isBigNumber(val));\n\nexport const SmallIntSchema = ZodBigNumber.transform((x) => wei(x, 0).toNumber());\nexport const WeiSchema = ZodBigNumber.transform((x) => wei(x));\n","import { useQuery } from '@tanstack/react-query';\nimport { useWallet, useNetwork, useProvider } from '@snx-v3/useBlockchain';\nimport { ZodBigNumber } from '@snx-v3/zod';\nimport { wei } from '@synthetixio/wei';\n\nconst BalanceSchema = ZodBigNumber.transform((x) => wei(x));\n\nexport function useEthBalance() {\n  const { activeWallet } = useWallet();\n  const provider = useProvider();\n  const { network } = useNetwork();\n\n  return useQuery({\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'EthBalance',\n      { accountAddress: activeWallet?.address },\n    ],\n    enabled: Boolean(provider && activeWallet),\n    queryFn: async () => {\n      if (!(provider && activeWallet)) throw 'OMFG';\n      return BalanceSchema.parse(await provider.getBalance(activeWallet.address));\n    },\n  });\n}\n","import { useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useEthBalance } from '@snx-v3/useEthBalance';\nimport { useTokenBalance } from '@snx-v3/useTokenBalance';\nimport Wei from '@synthetixio/wei';\nimport { useMutation } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { Contract } from 'ethers';\nimport { useCallback } from 'react';\n\nconst log = debug('snx:useWrapEth');\n\nexport const useWrapEth = () => {\n  const signer = useSigner();\n  const provider = useProvider();\n\n  const { data: ethCollateral } = useCollateralType('WETH');\n  const { data: ethBalance, refetch: refetchETHBalance } = useEthBalance();\n  const { data: wethBalance, refetch: refetchWETHBalance } = useTokenBalance(\n    ethCollateral?.tokenAddress\n  );\n\n  const { mutateAsync, isPending } = useMutation({\n    mutationFn: async (amount: Wei) => {\n      if (!ethCollateral || !signer || !provider) return;\n      const contract = new Contract(\n        ethCollateral?.tokenAddress,\n        ['function deposit() payable'],\n        signer\n      );\n      const txn = await contract.deposit({ value: amount.toBN() });\n      log('txn', txn);\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n      return receipt;\n    },\n  });\n\n  const exec = useCallback(\n    async (amount: Wei) => {\n      if (!ethBalance) return;\n      if (ethBalance.lt(amount)) {\n        throw new Error('Amount exceeds balance');\n      }\n      await mutateAsync(amount);\n      refetchETHBalance();\n      refetchWETHBalance();\n    },\n    [ethBalance, mutateAsync, refetchETHBalance, refetchWETHBalance]\n  );\n\n  return {\n    exec,\n    isLoading: isPending,\n    wethBalance,\n    ethBalance,\n  };\n};\n\nexport const useUnWrapEth = () => {\n  const signer = useSigner();\n  const provider = useProvider();\n\n  const { data: ethCollateral } = useCollateralType('WETH');\n  const { data: ethBalance, refetch: refetchETHBalance } = useEthBalance();\n  const { data: wethBalance, refetch: refetchWETHBalance } = useTokenBalance(\n    ethCollateral?.tokenAddress\n  );\n\n  const { mutateAsync, isPending } = useMutation({\n    mutationFn: async (amount: Wei) => {\n      if (!ethCollateral || !signer || !provider) return;\n      const contract = new Contract(\n        ethCollateral?.tokenAddress,\n        ['function withdraw(uint256 wad)'],\n        signer\n      );\n      const txn = await contract.withdraw(amount.toBN());\n      log('txn', txn);\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n      return receipt;\n    },\n  });\n\n  const exec = useCallback(\n    async (amount: Wei) => {\n      if (!wethBalance) return;\n      if (wethBalance.lt(amount)) return;\n      await mutateAsync(amount);\n      await Promise.all([refetchETHBalance(), refetchWETHBalance()]);\n    },\n    [mutateAsync, refetchETHBalance, refetchWETHBalance, wethBalance]\n  );\n\n  return {\n    exec,\n    isLoading: isPending,\n    wethBalance,\n    ethBalance,\n  };\n};\n","import { Text, Flex } from '@chakra-ui/react';\nimport { FC } from 'react';\nimport Wei from '@synthetixio/wei';\nimport { calculateCRatio } from '@snx-v3/calculations';\nimport { Amount } from '@snx-v3/Amount';\nimport { ZEROWEI } from '@snx-v3/constants';\n\nexport const CRatioChangeStat: FC<{\n  collateralChange: Wei;\n  currentCollateral?: Wei;\n  debtChange: Wei;\n  currentDebt?: Wei;\n  size?: 'sm' | 'lg';\n  collateralPrice?: Wei;\n}> = ({ size, currentCollateral, currentDebt, collateralChange, debtChange, collateralPrice }) => (\n  <Flex alignItems=\"center\" gap={1.5}>\n    <Text\n      color=\"white\"\n      fontSize={size === 'lg' ? '20px' : '12px'}\n      fontWeight={size === 'lg' ? '800' : '700'}\n    >\n      {!currentCollateral || !currentDebt || !collateralPrice ? (\n        ' N/A'\n      ) : currentCollateral.gt(0) && currentDebt.eq(0) ? (\n        'Infinite'\n      ) : (\n        <Amount\n          value={calculateCRatio(currentDebt, currentCollateral.mul(collateralPrice)).mul(100)}\n          suffix=\"%\"\n        />\n      )}\n    </Text>\n\n    {collateralPrice && (!collateralChange?.eq(0) || !debtChange.eq(0)) ? (\n      <>\n        <span>&rarr;</span>\n\n        <Text\n          color=\"white\"\n          fontSize={size === 'lg' ? '20px' : '12px'}\n          fontWeight={size === 'lg' ? '800' : '700'}\n        >\n          {(currentCollateral || ZEROWEI).add(collateralChange).gt(0) &&\n          (currentDebt || ZEROWEI).add(debtChange).eq(0) ? (\n            'Infinite'\n          ) : (\n            <Amount\n              value={calculateCRatio(\n                (currentDebt || ZEROWEI).add(debtChange),\n                (currentCollateral || ZEROWEI).add(collateralChange).mul(collateralPrice)\n              ).mul(100)}\n              suffix=\"%\"\n            />\n          )}\n        </Text>\n      </>\n    ) : null}\n  </Flex>\n);\n","import { ArrowBackIcon } from '@chakra-ui/icons';\nimport { Button, Divider, Link, Text, useToast } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { ChangeStat } from '@snx-v3/ChangeStat';\nimport { D18, ZEROWEI } from '@snx-v3/constants';\nimport { ContractError } from '@snx-v3/ContractError';\nimport { currency } from '@snx-v3/format';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { Multistep } from '@snx-v3/Multistep';\nimport { useApprove } from '@snx-v3/useApprove';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useDeposit } from '@snx-v3/useDeposit';\nimport { useDepositBaseAndromeda } from '@snx-v3/useDepositBaseAndromeda';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useSpotMarketProxy } from '@snx-v3/useSpotMarketProxy';\nimport { useSynthToken } from '@snx-v3/useSynthToken';\nimport { useWrapEth } from '@snx-v3/useWrapEth';\nimport { Wei, wei } from '@synthetixio/wei';\nimport { useMachine } from '@xstate/react';\nimport { ethers } from 'ethers';\nimport React from 'react';\nimport { CRatioChangeStat } from '../../ui/src/components/CRatioBar/CRatioChangeStat';\nimport { LiquidityPositionUpdated } from '../../ui/src/components/Manage/LiquidityPositionUpdated';\nimport { TransactionSummary } from '../../ui/src/components/TransactionSummary/TransactionSummary';\nimport { DepositMachine, Events, ServiceNames, State } from './DepositMachine';\n\nexport function DepositModal({\n  onClose,\n  title = 'Manage Collateral',\n}: {\n  onClose: () => void;\n  title?: string;\n}) {\n  const [params, setParams] = useParams<PositionPageSchemaType>();\n  const { network } = useNetwork();\n  const { collateralChange, setCollateralChange } = React.useContext(ManagePositionContext);\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: SpotMarketProxy } = useSpotMarketProxy();\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: liquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  const { data: synthToken } = useSynthToken(collateralType);\n\n  const currentCollateral = liquidityPosition?.collateralAmount ?? ZEROWEI;\n  const availableCollateral = liquidityPosition?.availableCollateral ?? ZEROWEI;\n\n  const [txSummary, setTxSummary] = React.useState({\n    currentCollateral: ZEROWEI,\n    collateralChange: ZEROWEI,\n    currentDebt: ZEROWEI,\n  });\n\n  const synthNeeded = React.useMemo(() => {\n    const amount = collateralChange.sub(availableCollateral);\n    return amount.lt(0) ? ZEROWEI : amount;\n  }, [availableCollateral, collateralChange]);\n\n  const collateralNeeded = React.useMemo(() => {\n    const amount = synthNeeded;\n    return amount.gt(0) ? amount : ZEROWEI;\n  }, [synthNeeded]);\n\n  //Preparing wETH\n  const { exec: wrapEth, wethBalance } = useWrapEth();\n  const wrapETHAmount =\n    (collateralType?.displaySymbol ?? params.collateralSymbol) === 'WETH' &&\n    collateralNeeded.gt(wethBalance || 0)\n      ? collateralNeeded.sub(wethBalance || 0)\n      : ZEROWEI;\n  //Preparing wETH done\n\n  //Collateral Approval\n  const { approve, requireApproval } = useApprove({\n    contractAddress:\n      network?.preset === 'andromeda' ? synthToken?.token?.address : collateralType?.tokenAddress,\n\n    amount: collateralChange.lte(availableCollateral)\n      ? wei(0).toBN()\n      : network?.preset === 'andromeda' && synthToken && synthToken.token\n        ? collateralChange\n            .sub(availableCollateral)\n            .toBN()\n            // Reduce precision for approval of USDC on Andromeda\n            .mul(ethers.utils.parseUnits('1', synthToken.token.decimals))\n            .div(D18)\n        : collateralChange.sub(availableCollateral).toBN(),\n    spender: network?.preset === 'andromeda' ? SpotMarketProxy?.address : CoreProxy?.address,\n  });\n  //Collateral Approval Done\n\n  //Deposit\n  const newAccountId = React.useMemo(() => `${Math.floor(Math.random() * 1000000000000)}`, []);\n  const { exec: execDeposit } = useDeposit({\n    accountId: params.accountId,\n    newAccountId,\n    collateralTypeAddress: collateralType?.tokenAddress,\n    collateralChange,\n    currentCollateral,\n    availableCollateral,\n  });\n  const { exec: depositBaseAndromeda } = useDepositBaseAndromeda({\n    accountId: params.accountId,\n    newAccountId,\n    collateralTypeAddress: synthToken?.token?.address,\n    collateralChange,\n    currentCollateral,\n    availableCollateral,\n    collateralSymbol: params.collateralSymbol,\n  });\n  //Deposit done\n\n  const toast = useToast({ isClosable: true, duration: 9000 });\n\n  // TODO: Update logic on new account id\n\n  const errorParser = useContractErrorParser();\n\n  const [state, send] = useMachine(DepositMachine, {\n    services: {\n      [ServiceNames.wrapEth]: async () => {\n        try {\n          await wrapEth(state.context.wrapAmount);\n        } catch (error: any) {\n          const contractError = errorParser(error);\n          if (contractError) {\n            console.error(new Error(contractError.name), contractError);\n          }\n\n          toast.closeAll();\n          toast({\n            title: 'Wrapping ETH failed',\n            description: contractError ? (\n              <ContractError contractError={contractError} />\n            ) : (\n              error.message || 'Please try again.'\n            ),\n            status: 'error',\n            variant: 'left-accent',\n            duration: 3_600_000,\n          });\n          throw Error('Wrapping failed', { cause: error });\n        }\n      },\n\n      [ServiceNames.approveCollateral]: async () => {\n        try {\n          if (!requireApproval) {\n            return;\n          }\n          toast({\n            title: `Approve collateral for transfer`,\n            description: `Approve ${\n              network?.preset === 'andromeda'\n                ? synthToken?.token?.address\n                : collateralType?.tokenAddress\n            } transfer`,\n            status: 'info',\n            variant: 'left-accent',\n          });\n\n          await approve(Boolean(state.context.infiniteApproval));\n        } catch (error: any) {\n          const contractError = errorParser(error);\n          if (contractError) {\n            console.error(new Error(contractError.name), contractError);\n          }\n          toast.closeAll();\n          toast({\n            title: 'Approval failed',\n            description: contractError ? (\n              <ContractError contractError={contractError} />\n            ) : (\n              'Please try again.'\n            ),\n            status: 'error',\n            variant: 'left-accent',\n            duration: 3_600_000,\n          });\n          throw Error('Approve failed', { cause: error });\n        }\n      },\n\n      [ServiceNames.executeDeposit]: async () => {\n        try {\n          toast.closeAll();\n          toast({\n            title: Boolean(params.accountId)\n              ? 'Locking your collateral'\n              : 'Creating your account and locking your collateral',\n            description: '',\n            variant: 'left-accent',\n          });\n\n          setTxSummary({\n            currentCollateral,\n            currentDebt: liquidityPosition?.debt || ZEROWEI,\n            collateralChange,\n          });\n\n          if (network?.preset === 'andromeda') {\n            await depositBaseAndromeda();\n          } else {\n            await execDeposit();\n          }\n\n          setCollateralChange(ZEROWEI);\n\n          toast.closeAll();\n          toast({\n            title: 'Success',\n            description: 'Your locked collateral amount has been updated.',\n            status: 'success',\n            duration: 5000,\n            variant: 'left-accent',\n          });\n        } catch (error: any) {\n          const contractError = errorParser(error);\n          if (contractError) {\n            console.error(new Error(contractError.name), contractError);\n          }\n          toast.closeAll();\n          toast({\n            title: 'Could not complete locking collateral',\n            description: contractError ? (\n              <ContractError contractError={contractError} />\n            ) : (\n              'Please try again.'\n            ),\n            status: 'error',\n            variant: 'left-accent',\n            duration: 3_600_000,\n          });\n          throw Error('Lock collateral failed', { cause: error });\n        }\n      },\n    },\n  });\n\n  const wrapAmountString = wrapETHAmount.toString();\n  const isSuccessOrDeposit = state.matches(State.success) || state.matches(State.deposit);\n  React.useEffect(() => {\n    if (isSuccessOrDeposit) {\n      // We do this to ensure the success state displays the wrap amount used before deposit\n      return;\n    }\n    send(Events.SET_WRAP_AMOUNT, { wrapAmount: wei(wrapAmountString || '0') });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isSuccessOrDeposit, wrapAmountString]);\n\n  React.useEffect(() => {\n    send(Events.SET_REQUIRE_APPROVAL, { requireApproval });\n  }, [requireApproval, send]);\n\n  const handleClose = React.useCallback(() => {\n    const isSuccess = state.matches(State.success);\n\n    if (isSuccess && params.accountId && collateralType?.symbol) {\n      send(Events.RESET);\n      onClose();\n      setParams({\n        page: 'position',\n        collateralSymbol: collateralType.symbol,\n        manageAction: 'deposit',\n        accountId: params.accountId,\n      });\n      return;\n    }\n    send(Events.RESET);\n    onClose();\n  }, [state, params.accountId, collateralType?.symbol, send, onClose, setParams]);\n\n  const onSubmit = React.useCallback(async () => {\n    if (state.matches(State.success)) {\n      handleClose();\n      return;\n    }\n    if (state.context.error) {\n      send(Events.RETRY);\n      return;\n    }\n\n    send(Events.RUN);\n  }, [handleClose, send, state]);\n\n  const txSummaryItems = React.useMemo(() => {\n    const items = [\n      {\n        label: `Locked ${collateralType?.displaySymbol ?? params.collateralSymbol}`,\n        value: (\n          <ChangeStat\n            value={txSummary.currentCollateral}\n            newValue={txSummary.currentCollateral.add(txSummary.collateralChange)}\n            formatFn={(val?: Wei) => currency(val ?? ZEROWEI)}\n            hasChanges={txSummary.collateralChange.abs().gt(0)}\n            size=\"sm\"\n          />\n        ),\n      },\n    ];\n\n    if (network?.preset === 'andromeda') {\n      return items;\n    }\n\n    return [\n      ...items,\n      {\n        label: 'C-ratio',\n        value: (\n          <CRatioChangeStat\n            currentCollateral={txSummary.currentCollateral}\n            currentDebt={txSummary.currentDebt}\n            collateralChange={txSummary.collateralChange}\n            collateralPrice={liquidityPosition?.collateralPrice ?? ZEROWEI}\n            debtChange={ZEROWEI}\n            size=\"sm\"\n          />\n        ),\n      },\n    ];\n  }, [\n    collateralType?.displaySymbol,\n    params.collateralSymbol,\n    txSummary.currentCollateral,\n    txSummary.collateralChange,\n    txSummary.currentDebt,\n    network?.preset,\n    liquidityPosition?.collateralPrice,\n  ]);\n\n  const symbol = collateralType?.displaySymbol;\n\n  const isProcessing =\n    state.matches(State.approveCollateral) ||\n    state.matches(State.deposit) ||\n    state.matches(State.wrap);\n\n  const isWETH = (collateralType?.displaySymbol ?? params.collateralSymbol) === 'WETH';\n\n  const stepNumbers = {\n    wrap: isWETH ? 1 : 0,\n    approve: isWETH ? 2 : 1,\n    deposit: isWETH ? 3 : 2,\n  };\n\n  if (state.matches(State.success)) {\n    return (\n      <LiquidityPositionUpdated\n        onClose={onSubmit}\n        title=\"Collateral successfully Updated\"\n        subline={\n          <>\n            Your <b>Collateral</b> has been updated, read more about it in the{' '}\n            <Link\n              href=\"https://docs.synthetix.io/v/synthetix-v3-user-documentation\"\n              target=\"_blank\"\n              color=\"cyan.500\"\n            >\n              Synthetix V3 Documentation\n            </Link>\n          </>\n        }\n        alertText={\n          <>\n            <b>Collateral</b> successfully Updated\n          </>\n        }\n        summary={<TransactionSummary items={txSummaryItems} />}\n      />\n    );\n  }\n\n  return (\n    <div data-cy=\"deposit multistep\">\n      <Text color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n        <ArrowBackIcon cursor=\"pointer\" onClick={onClose} mr={2} />\n        {title}\n      </Text>\n      <Divider my={4} />\n      {isWETH ? (\n        <Multistep\n          step={stepNumbers.wrap}\n          title=\"Wrap\"\n          subtitle={\n            state.context.wrapAmount.eq(0) ? (\n              <Text as=\"div\">\n                <Amount\n                  value={collateralChange}\n                  suffix={` ${collateralType?.displaySymbol ?? params.collateralSymbol}`}\n                />{' '}\n                from balance will be used.\n              </Text>\n            ) : (\n              <Text as=\"div\">\n                You must wrap additional <Amount value={state.context.wrapAmount} suffix=\" ETH\" />{' '}\n                before depositing.\n              </Text>\n            )\n          }\n          status={{\n            failed: state.context.error?.step === State.wrap,\n            disabled: (collateralType?.displaySymbol ?? params.collateralSymbol) !== 'WETH',\n            success: state.context.wrapAmount.eq(0) || state.matches(State.success),\n            loading: state.matches(State.wrap) && !state.context.error,\n          }}\n        />\n      ) : null}\n\n      <Multistep\n        step={stepNumbers.approve}\n        title={`Approve ${symbol} transfer`}\n        status={{\n          failed: state.context.error?.step === State.approveCollateral,\n          success: !state.context.requireApproval || state.matches(State.success),\n          loading: state.matches(State.approveCollateral) && !state.context.error,\n        }}\n        checkboxLabel={\n          state.context.requireApproval\n            ? `Approve unlimited ${symbol} transfers to Synthetix`\n            : undefined\n        }\n        checkboxProps={{\n          isChecked: state.context.infiniteApproval,\n          onChange: (e) =>\n            send(Events.SET_INFINITE_APPROVAL, { infiniteApproval: e.target.checked }),\n        }}\n      />\n      <Multistep\n        step={stepNumbers.deposit}\n        title={`Deposit and Lock ${symbol}`}\n        subtitle={\n          <>\n            {state.matches(State.success) ? (\n              <Amount\n                value={collateralChange}\n                suffix={` ${\n                  collateralType?.displaySymbol ?? params.collateralSymbol\n                } deposited and locked.`}\n              />\n            ) : (\n              <>\n                {availableCollateral && availableCollateral.gt(ZEROWEI) ? (\n                  <>\n                    {availableCollateral.gte(collateralChange) ? (\n                      <Amount\n                        prefix={`This will deposit and lock `}\n                        value={collateralChange}\n                        suffix={` ${collateralType?.displaySymbol ?? params.collateralSymbol}.`}\n                      />\n                    ) : (\n                      <>\n                        <Text>\n                          <Amount\n                            prefix={`This will deposit and lock `}\n                            value={availableCollateral}\n                            suffix={` ${collateralType?.displaySymbol ?? params.collateralSymbol}.`}\n                          />\n                        </Text>\n                        <Text>\n                          <Amount\n                            prefix={`An additional `}\n                            value={collateralChange.sub(availableCollateral)}\n                            suffix={` ${\n                              collateralType?.displaySymbol ?? params.collateralSymbol\n                            } will be deposited and locked from your wallet.`}\n                          />\n                        </Text>\n                      </>\n                    )}\n                  </>\n                ) : (\n                  <Amount\n                    prefix={`This will deposit and lock `}\n                    value={collateralChange}\n                    suffix={` ${collateralType?.displaySymbol ?? params.collateralSymbol}.`}\n                  />\n                )}\n              </>\n            )}\n          </>\n        }\n        status={{\n          failed: state.context.error?.step === State.deposit,\n          disabled: state.matches(State.success) && state.context.requireApproval,\n          success: state.matches(State.success),\n          loading: state.matches(State.deposit) && !state.context.error,\n        }}\n      />\n      <Button\n        isDisabled={isProcessing}\n        onClick={onSubmit}\n        width=\"100%\"\n        mt=\"6\"\n        data-cy=\"deposit confirm button\"\n      >\n        {(() => {\n          switch (true) {\n            case Boolean(state.context.error):\n              return 'Retry';\n            case isProcessing:\n              return 'Processing...';\n            case state.matches(State.success):\n              return 'Continue';\n            default:\n              return 'Execute Transaction';\n          }\n        })()}\n      </Button>\n    </div>\n  );\n}\n","import { D18, D27, D6 } from '@snx-v3/constants';\nimport { useNetwork, useProvider, useSigner, useWallet } from '@snx-v3/useBlockchain';\nimport { useStaticAaveUSDC } from '@snx-v3/useStaticAaveUSDC';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { debug } from 'debug';\nimport { ethers } from 'ethers';\n\nconst log = debug('snx:useConvertStataUSDC');\n\nexport function useConvertStataUSDC({\n  stataAmountNeeded, // 18 decimals!\n  depositToAave,\n}: {\n  stataAmountNeeded: ethers.BigNumber;\n  depositToAave: boolean;\n}) {\n  const { network } = useNetwork();\n  const signer = useSigner();\n  const provider = useProvider();\n  const { data: StaticAaveUSDC } = useStaticAaveUSDC();\n  const queryClient = useQueryClient();\n  const { activeWallet } = useWallet();\n\n  return useMutation({\n    mutationFn: async () => {\n      if (!(StaticAaveUSDC && signer && provider && activeWallet)) {\n        throw new Error('Not ready');\n      }\n      if (!stataAmountNeeded.gt(0)) {\n        return;\n      }\n\n      const StaticAaveUSDCContract = new ethers.Contract(\n        StaticAaveUSDC.address,\n        StaticAaveUSDC.abi,\n        signer\n      );\n\n      // 27 decimals!\n      const stataRate = await StaticAaveUSDCContract.rate();\n      log('stataRate (27 decimals)', stataRate, `${stataRate}`);\n\n      log('stataAmountNeeded (18 decimals)', stataAmountNeeded, `${stataAmountNeeded}`);\n      const stataAmount = stataAmountNeeded\n        // Adjust precision down from 18 to 6\n        .mul(D6)\n        .div(D18);\n      log('stataAmount (6 decimals)', stataAmount, `${stataAmount}`);\n      const usdcAmountWithBuffer = stataAmount\n        .mul(stataRate)\n        .div(D27)\n\n        // give it one extra percent buffer\n        .mul(101)\n        .div(100);\n      log('usdcAmountWithBuffer (6 decimals)', usdcAmountWithBuffer, `${usdcAmountWithBuffer}`);\n\n      // 'function deposit(uint256 assets, address receiver, uint16 referralCode, bool depositToAave) returns (uint256)',\n      const args = [\n        usdcAmountWithBuffer,\n        activeWallet.address,\n        0, // TODO: get referral code from AAVE\n        depositToAave,\n      ];\n      const gasLimit = await StaticAaveUSDCContract.estimateGas[\n        'deposit(uint256,address,uint16,bool)'\n      ](...args);\n      const txn = await StaticAaveUSDCContract['deposit(uint256,address,uint16,bool)'](...args, {\n        gasLimit: gasLimit.mul(2),\n      });\n      log('txn', txn);\n\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n\n      return receipt;\n    },\n\n    onSuccess: async () => {\n      const deployment = `${network?.id}-${network?.preset}`;\n      await Promise.all(\n        [\n          //\n          'TokenBalance',\n          'EthBalance',\n          'Allowance',\n        ].map((key) => queryClient.invalidateQueries({ queryKey: [deployment, key] }))\n      );\n    },\n  });\n}\n","import { ArrowBackIcon } from '@chakra-ui/icons';\nimport { Button, Divider, Link, Text, useToast } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { ChangeStat } from '@snx-v3/ChangeStat';\nimport { D18, D27, D6, ZEROWEI } from '@snx-v3/constants';\nimport { ContractError } from '@snx-v3/ContractError';\nimport { currency } from '@snx-v3/format';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { Multistep } from '@snx-v3/Multistep';\nimport { useApprove } from '@snx-v3/useApprove';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { useConvertStataUSDC } from '@snx-v3/useConvertStataUSDC';\nimport { useDepositBaseAndromeda } from '@snx-v3/useDepositBaseAndromeda';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useSpotMarketProxy } from '@snx-v3/useSpotMarketProxy';\nimport { useStaticAaveUSDC } from '@snx-v3/useStaticAaveUSDC';\nimport { useStaticAaveUSDCRate } from '@snx-v3/useStaticAaveUSDCRate';\nimport { useSynthToken } from '@snx-v3/useSynthToken';\nimport { useTokenBalance } from '@snx-v3/useTokenBalance';\nimport { useUSDC } from '@snx-v3/useUSDC';\nimport { Wei, wei } from '@synthetixio/wei';\nimport { useMachine } from '@xstate/react';\nimport { ethers } from 'ethers';\nimport React from 'react';\nimport { LiquidityPositionUpdated } from '../../ui/src/components/Manage/LiquidityPositionUpdated';\nimport { TransactionSummary } from '../../ui/src/components/TransactionSummary/TransactionSummary';\nimport { DepositMachine, Events, ServiceNames, State } from './DepositMachine';\n\n// const log = debug('snx:StataDepositModal');\n\nexport function StataDepositModal({\n  onClose,\n  title = 'Manage Collateral',\n}: {\n  onClose: () => void;\n  title?: string;\n}) {\n  const [params, setParams] = useParams<PositionPageSchemaType>();\n  const { collateralChange, setCollateralChange } = React.useContext(ManagePositionContext);\n  const { data: SpotMarketProxy } = useSpotMarketProxy();\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: liquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  const { data: USDC } = useUSDC();\n  const { data: StaticAaveUSDC } = useStaticAaveUSDC();\n  const { data: staticAaveUSDCRate } = useStaticAaveUSDCRate();\n  // log('staticAaveUSDCRate', staticAaveUSDCRate, `${staticAaveUSDCRate}`);\n\n  const { data: synthToken } = useSynthToken(collateralType);\n\n  const { data: stataUSDCTokenBalanceRaw } = useTokenBalance(StaticAaveUSDC?.address);\n  // log(\n  //   'stataUSDCTokenBalanceRaw (6 decimals)',\n  //   stataUSDCTokenBalanceRaw,\n  //   `${stataUSDCTokenBalanceRaw}`\n  // );\n  const stataUSDCTokenBalance = stataUSDCTokenBalanceRaw\n    ? stataUSDCTokenBalanceRaw.toBN()\n    : ethers.BigNumber.from(0);\n  // log('stataUSDCTokenBalance (6 decimals)', stataUSDCTokenBalance, `${stataUSDCTokenBalance}`);\n\n  const [txSummary, setTxSummary] = React.useState({\n    currentCollateral: ZEROWEI,\n    collateralChange: ZEROWEI,\n    currentDebt: ZEROWEI,\n  });\n\n  const synthNeeded: ethers.BigNumber = liquidityPosition\n    ? collateralChange.sub(liquidityPosition.availableCollateral).toBN()\n    : ethers.BigNumber.from(0);\n  // log('synthNeeded (18 decimals)', synthNeeded, `${synthNeeded}`);\n\n  const stataUSDCTokenBalanceD18: ethers.BigNumber = stataUSDCTokenBalance.div(D6).mul(D18);\n  // log(\n  //   'stataUSDCTokenBalanceD18 (18 decimals)',\n  //   stataUSDCTokenBalanceD18,\n  //   `${stataUSDCTokenBalanceD18}`\n  // );\n\n  const stataAmountNeeded: ethers.BigNumber =\n    stataUSDCTokenBalance && synthNeeded.gt(stataUSDCTokenBalanceD18)\n      ? synthNeeded.sub(stataUSDCTokenBalanceD18)\n      : ethers.BigNumber.from(0);\n  // log('stataAmountNeeded (18 decimals)', stataAmountNeeded, `${stataAmountNeeded}`);\n\n  //Preparing stataUSDC\n  const usdcBalanceNeeded: ethers.BigNumber = staticAaveUSDCRate\n    ? stataAmountNeeded.mul(staticAaveUSDCRate).div(D27)\n    : ethers.BigNumber.from(0);\n  // log('usdcBalanceNeeded (18 decimals)', usdcBalanceNeeded, `${usdcBalanceNeeded}`);\n\n  const { approve: approveUSDC, requireApproval: requireApprovalUSDC } = useApprove({\n    contractAddress: USDC?.address,\n    amount: usdcBalanceNeeded\n      .mul(D6)\n      .div(D18)\n\n      // get extra 10%\n      .mul(110)\n      .div(100),\n    spender: StaticAaveUSDC?.address,\n  });\n  // log('requireApprovalUSDC', requireApprovalUSDC);\n\n  const { mutateAsync: wrapUSDCToStataUSDC } = useConvertStataUSDC({\n    stataAmountNeeded,\n    depositToAave: true,\n  });\n  //Preparing stataUSDC Done\n\n  //Stata Approval\n  const stataApprovalNeeded = liquidityPosition\n    ? liquidityPosition.availableCollateral.lt(collateralChange)\n      ? collateralChange.sub(liquidityPosition.availableCollateral)\n      : wei(0)\n    : collateralChange;\n  const { approve: approveStata, requireApproval: requireApprovalStata } = useApprove({\n    contractAddress: synthToken?.token?.address,\n    amount:\n      synthToken && synthToken.token\n        ? stataApprovalNeeded\n            .toBN()\n            .mul(ethers.utils.parseUnits('1', synthToken.token.decimals))\n            .div(D18)\n\n            // extra 1% approval\n            .mul(101)\n            .div(100)\n        : undefined,\n    spender: SpotMarketProxy?.address,\n  });\n  // log('requireApprovalStata', requireApprovalStata);\n  //Stata Approval Done\n\n  //Deposit\n  const newAccountId = React.useMemo(() => `${Math.floor(Math.random() * 1000000000000)}`, []);\n  const { exec: depositBaseAndromeda } = useDepositBaseAndromeda({\n    accountId: params.accountId,\n    newAccountId,\n    collateralTypeAddress: synthToken?.token?.address,\n    collateralChange,\n    currentCollateral: liquidityPosition ? liquidityPosition.collateralAmount : wei(0),\n    availableCollateral: liquidityPosition ? liquidityPosition.availableCollateral : wei(0),\n    collateralSymbol: params.collateralSymbol,\n  });\n  //Deposit done\n\n  const toast = useToast({ isClosable: true, duration: 9000 });\n\n  const errorParser = useContractErrorParser();\n\n  const [state, send] = useMachine(DepositMachine, {\n    services: {\n      [ServiceNames.approveUSDCForStata]: async () => {\n        try {\n          // If less than 0.0001 no need for wrapping\n          if (!requireApprovalUSDC) {\n            return;\n          }\n\n          toast({\n            title: 'Approve USDC for transfer',\n            description: 'Approve USDC so it can be wrapped',\n            status: 'info',\n            variant: 'left-accent',\n          });\n\n          await approveUSDC(false);\n        } catch (error: any) {\n          const contractError = errorParser(error);\n          if (contractError) {\n            console.error(new Error(contractError.name), contractError);\n          }\n          toast.closeAll();\n          toast({\n            title: 'Approval failed',\n            description: contractError ? (\n              <ContractError contractError={contractError} />\n            ) : (\n              'Please try again.'\n            ),\n            status: 'error',\n            variant: 'left-accent',\n            duration: 3_600_000,\n          });\n          throw Error('Approve failed', { cause: error });\n        }\n      },\n\n      [ServiceNames.wrapUSDCToStataUSDC]: async () => {\n        try {\n          toast({\n            title: 'Wrapping USDC to StataUSDC',\n            status: 'info',\n            variant: 'left-accent',\n          });\n          await wrapUSDCToStataUSDC();\n        } catch (error) {\n          const contractError = errorParser(error);\n          if (contractError) {\n            console.error(new Error(contractError.name), contractError);\n          }\n          toast.closeAll();\n          toast({\n            title: 'Wrap USDC to Static aUSDC failed',\n            description: contractError ? (\n              <ContractError contractError={contractError} />\n            ) : (\n              'Please try again.'\n            ),\n            status: 'error',\n            variant: 'left-accent',\n            duration: 3_600_000,\n          });\n          throw Error('Wrap USDC failed', { cause: error });\n        }\n      },\n\n      [ServiceNames.approveCollateral]: async () => {\n        try {\n          if (!requireApprovalStata) {\n            return;\n          }\n          toast({\n            title: `Approve collateral for transfer`,\n            description: `Approve ${synthToken?.token?.address} transfer`,\n            status: 'info',\n            variant: 'left-accent',\n          });\n\n          await approveStata(Boolean(state.context.infiniteApproval));\n        } catch (error: any) {\n          const contractError = errorParser(error);\n          if (contractError) {\n            console.error(new Error(contractError.name), contractError);\n          }\n          toast.closeAll();\n          toast({\n            title: 'Approval failed',\n            description: contractError ? (\n              <ContractError contractError={contractError} />\n            ) : (\n              'Please try again.'\n            ),\n            status: 'error',\n            variant: 'left-accent',\n            duration: 3_600_000,\n          });\n          throw Error('Approve failed', { cause: error });\n        }\n      },\n\n      [ServiceNames.executeDeposit]: async () => {\n        try {\n          toast.closeAll();\n          toast({\n            title: Boolean(params.accountId)\n              ? 'Locking your collateral'\n              : 'Creating your account and locking your collateral',\n            description: '',\n            variant: 'left-accent',\n          });\n\n          setTxSummary({\n            currentCollateral: liquidityPosition ? liquidityPosition.collateralAmount : wei(0),\n            currentDebt: liquidityPosition ? liquidityPosition.debt : wei(0),\n            collateralChange,\n          });\n\n          await depositBaseAndromeda();\n\n          setCollateralChange(ZEROWEI);\n\n          toast.closeAll();\n          toast({\n            title: 'Success',\n            description: 'Your locked collateral amount has been updated.',\n            status: 'success',\n            duration: 5000,\n            variant: 'left-accent',\n          });\n        } catch (error: any) {\n          const contractError = errorParser(error);\n          if (contractError) {\n            console.error(new Error(contractError.name), contractError);\n          }\n\n          toast.closeAll();\n          toast({\n            title: 'Could not complete locking collateral',\n            description: contractError ? (\n              <ContractError contractError={contractError} />\n            ) : (\n              'Please try again.'\n            ),\n            status: 'error',\n            variant: 'left-accent',\n            duration: 3_600_000,\n          });\n          throw Error('Lock collateral failed', { cause: error });\n        }\n      },\n    },\n  });\n\n  React.useEffect(() => {\n    send(Events.SET_REQUIRE_APPROVAL, { requireApproval: requireApprovalStata });\n  }, [requireApprovalStata, send]);\n\n  const hasEnoughStataUSDCBalance = stataUSDCTokenBalance?.gte(synthNeeded);\n  React.useEffect(() => {\n    send(Events.SET_HAS_ENOUGH_STATAUSDC, { hasEnoughStataUSDC: hasEnoughStataUSDCBalance });\n  }, [hasEnoughStataUSDCBalance, send]);\n\n  React.useEffect(() => {\n    send(Events.SET_REQUIRE_APPROVAL_FOR_STATAUSDC, {\n      requireStataUSDCApproval: requireApprovalUSDC,\n    });\n  }, [requireApprovalUSDC, send]);\n\n  React.useEffect(() => {\n    send(Events.SET_IS_STATA_USDC, {\n      isStataUSDC: true,\n    });\n  }, [send]);\n\n  const handleClose = React.useCallback(() => {\n    const isSuccess = state.matches(State.success);\n\n    if (isSuccess && params.accountId && collateralType?.symbol) {\n      send(Events.RESET);\n      onClose();\n      setParams({\n        page: 'position',\n        collateralSymbol: collateralType.symbol,\n        manageAction: 'deposit',\n        accountId: params.accountId,\n      });\n      return;\n    }\n    send(Events.RESET);\n    onClose();\n  }, [state, params.accountId, collateralType?.symbol, send, onClose, setParams]);\n\n  const onSubmit = React.useCallback(async () => {\n    if (state.matches(State.success)) {\n      handleClose();\n      return;\n    }\n    if (state.context.error) {\n      send(Events.RETRY);\n      return;\n    }\n\n    send(Events.RUN);\n  }, [handleClose, send, state]);\n\n  const isProcessing =\n    state.matches(State.approveCollateral) ||\n    state.matches(State.deposit) ||\n    state.matches(State.wrap);\n\n  if (state.matches(State.success)) {\n    return (\n      <LiquidityPositionUpdated\n        onClose={onSubmit}\n        title=\"Collateral successfully Updated\"\n        subline={\n          <>\n            Your <b>Collateral</b> has been updated, read more about it in the{' '}\n            <Link\n              href=\"https://docs.synthetix.io/v/synthetix-v3-user-documentation\"\n              target=\"_blank\"\n              color=\"cyan.500\"\n            >\n              Synthetix V3 Documentation\n            </Link>\n          </>\n        }\n        alertText={\n          <>\n            <b>Collateral</b> successfully Updated\n          </>\n        }\n        summary={\n          <TransactionSummary\n            items={[\n              {\n                label: `Locked ${collateralType?.displaySymbol ?? params.collateralSymbol}`,\n                value: (\n                  <ChangeStat\n                    value={txSummary.currentCollateral}\n                    newValue={txSummary.currentCollateral.add(txSummary.collateralChange)}\n                    formatFn={(val?: Wei) => currency(val ?? ZEROWEI)}\n                    hasChanges={txSummary.collateralChange.abs().gt(0)}\n                    size=\"sm\"\n                  />\n                ),\n              },\n            ]}\n          />\n        }\n      />\n    );\n  }\n\n  return (\n    <div data-cy=\"deposit multistep\">\n      <Text color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n        <ArrowBackIcon cursor=\"pointer\" onClick={onClose} mr={2} />\n        {title}\n      </Text>\n      <Divider my={4} />\n      <>\n        <Multistep\n          step={1}\n          title=\"Approve USDC transfer\"\n          status={{\n            failed: state.context.error?.step === State.approveUSDCForStata,\n            success: !requireApprovalUSDC || state.matches(State.success),\n            loading: state.matches(State.approveUSDCForStata) && !state.context.error,\n          }}\n          checkboxLabel={requireApprovalUSDC ? `Approve unlimited USDC` : undefined}\n          checkboxProps={{\n            isChecked: state.context.infiniteApproval,\n            onChange: (e) =>\n              send(Events.SET_INFINITE_APPROVAL, { infiniteApproval: e.target.checked }),\n          }}\n        />\n        <Multistep\n          step={2}\n          title=\"Wrap USDC into Static aUSDC\"\n          subtitle={<Text>This will wrap your USDC into Static aUSDC to be deposited</Text>}\n          status={{\n            failed: state.context.error?.step === State.wrapUSDC,\n            disabled: state.matches(State.success) && state.context.requireApproval,\n            success:\n              hasEnoughStataUSDCBalance ||\n              state.matches(State.approveCollateral) ||\n              state.matches(State.deposit) ||\n              state.matches(State.success),\n            loading: state.matches(State.wrapUSDC) && !state.context.error,\n          }}\n        />\n        <Multistep\n          step={3}\n          title=\"Approve Static aUSDC transfer\"\n          subtitle={<Text>You must approve your Static aUSDC transfer before depositing.</Text>}\n          status={{\n            failed: state.context.error?.step === State.approveCollateral,\n            disabled: state.matches(State.success) && state.context.requireApproval,\n            success: !state.context.requireApproval || state.matches(State.success),\n            loading: state.matches(State.approveCollateral) && !state.context.error,\n          }}\n        />\n        <Multistep\n          step={4}\n          title=\"Deposit and Lock Static aUSDC\"\n          subtitle={\n            <Amount\n              prefix=\"This will deposit and lock \"\n              value={collateralChange}\n              suffix={` Static aUSDC.`}\n            />\n          }\n          status={{\n            failed: state.context.error?.step === State.deposit,\n            disabled: state.matches(State.success) && state.context.requireApproval,\n            success: state.matches(State.success),\n            loading: state.matches(State.deposit) && !state.context.error,\n          }}\n        />\n      </>\n\n      <Button\n        isDisabled={isProcessing}\n        onClick={onSubmit}\n        width=\"100%\"\n        mt=\"6\"\n        data-cy=\"deposit confirm button\"\n      >\n        {(() => {\n          switch (true) {\n            case Boolean(state.context.error):\n              return 'Retry';\n            case isProcessing:\n              return 'Processing...';\n            case state.matches(State.success):\n              return 'Continue';\n            default:\n              return 'Execute Transaction';\n          }\n        })()}\n      </Button>\n    </div>\n  );\n}\n","import { USDC_BASE_MARKET } from '@snx-v3/isBaseAndromeda';\nimport { Network, useNetwork, useProviderForChain } from '@snx-v3/useBlockchain';\nimport { useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { useSpotMarketProxy } from '@snx-v3/useSpotMarketProxy';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { useQuery } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\n\nexport function useGetUSDTokens(customNetwork?: Network) {\n  const { network: currentNetwork } = useNetwork();\n  const network = customNetwork ?? currentNetwork;\n  const provider = useProviderForChain(network);\n\n  const { data: collateralTypes } = useCollateralTypes(false, customNetwork);\n  const { data: SpotMarketProxy } = useSpotMarketProxy(customNetwork);\n  const { data: systemToken } = useSystemToken(customNetwork);\n\n  return useQuery({\n    queryKey: [`${network?.id}-${network?.preset}`, 'GetUSDTokens'],\n    enabled: Boolean(\n      SpotMarketProxy && provider && network && collateralTypes?.length && systemToken\n    ),\n    queryFn: async () => {\n      if (!(SpotMarketProxy && provider && network && collateralTypes?.length && systemToken)) {\n        throw 'OMFG';\n      }\n      const SpotMarketProxyContract = new ethers.Contract(\n        SpotMarketProxy.address,\n        SpotMarketProxy.abi,\n        provider\n      );\n\n      const USDC: string =\n        network?.preset === 'andromeda'\n          ? (await SpotMarketProxyContract.getWrapper(USDC_BASE_MARKET))?.wrapCollateralType\n          : undefined;\n\n      return {\n        snxUSD: systemToken.address,\n        sUSD: collateralTypes?.find((type) =>\n          network?.preset === 'andromeda'\n            ? type.symbol.toLowerCase() === 'usdc'\n            : type.symbol.toLowerCase() === 'susdc'\n        )?.tokenAddress,\n        USDC,\n      };\n    },\n  });\n}\n","import { POOL_ID } from '@snx-v3/constants';\nimport { parseUnits } from '@snx-v3/format';\nimport { getSpotMarketId } from '@snx-v3/isBaseAndromeda';\nimport { notNil } from '@snx-v3/tsHelpers';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport { approveAbi } from '@snx-v3/useApprove';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { useCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useGetUSDTokens } from '@snx-v3/useGetUSDTokens';\nimport { useSpotMarketProxy } from '@snx-v3/useSpotMarketProxy';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport Wei from '@synthetixio/wei';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { BigNumber, ethers } from 'ethers';\nimport { useReducer } from 'react';\n\nconst log = debug('snx:useRepayBaseAndromeda');\n\nexport const useRepayBaseAndromeda = ({\n  accountId,\n  collateralTypeAddress,\n  debtChange,\n  availableUSDCollateral,\n  collateralSymbol,\n}: {\n  accountId?: string;\n  collateralTypeAddress?: string;\n  availableUSDCollateral?: Wei;\n  debtChange: Wei;\n  collateralSymbol?: string;\n}) => {\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: systemToken } = useSystemToken();\n  const { data: SpotMarketProxy } = useSpotMarketProxy();\n  const { data: priceUpdateTx } = useCollateralPriceUpdates();\n  const { data: usdTokens } = useGetUSDTokens();\n\n  const signer = useSigner();\n  const { network } = useNetwork();\n  const provider = useProvider();\n\n  const queryClient = useQueryClient();\n  const mutation = useMutation({\n    mutationFn: async () => {\n      if (!signer || !network || !provider) throw new Error('No signer or network');\n\n      if (\n        !(\n          CoreProxy &&\n          accountId &&\n          collateralTypeAddress &&\n          systemToken &&\n          SpotMarketProxy &&\n          usdTokens?.sUSD\n        )\n      ) {\n        return;\n      }\n\n      if (!availableUSDCollateral) return;\n      if (debtChange.eq(0)) return;\n      const debtChangeAbs = debtChange.abs();\n      const amountToDeposit = debtChangeAbs.sub(availableUSDCollateral);\n      const collateralAmount = amountToDeposit.gt(0)\n        ? parseUnits(amountToDeposit.toString(), 6)\n        : BigNumber.from(0);\n\n      dispatch({ type: 'prompting' });\n\n      const spotMarketId = getSpotMarketId(collateralSymbol);\n\n      const SpotMarketProxyContract = new ethers.Contract(\n        SpotMarketProxy.address,\n        SpotMarketProxy.abi,\n        signer\n      );\n\n      // USDC or stataUSDC to sUSDC or sStataUSDC\n      const wrap = collateralAmount.gt(0)\n        ? SpotMarketProxyContract.populateTransaction.wrap(spotMarketId, collateralAmount, 0)\n        : undefined;\n\n      const Synth_Contract = new ethers.Contract(collateralTypeAddress, approveAbi, signer);\n      const synth_approval = amountToDeposit.gt(0)\n        ? Synth_Contract.populateTransaction.approve(\n            SpotMarketProxy.address,\n            amountToDeposit.toBN()\n          )\n        : undefined;\n\n      // sUSDC or sStataUSDC => snxUSD\n      const sell_synth = amountToDeposit.gt(0)\n        ? SpotMarketProxyContract.populateTransaction.sell(\n            spotMarketId,\n            amountToDeposit.toBN(),\n            0,\n            ethers.constants.AddressZero\n          )\n        : undefined;\n\n      // approve sUSD to Core\n      const SystemTokenContract = new ethers.Contract(systemToken.address, approveAbi, signer);\n      const sUSD_Approval = amountToDeposit.gt(0)\n        ? SystemTokenContract.populateTransaction.approve(CoreProxy.address, amountToDeposit.toBN())\n        : undefined;\n\n      const CoreProxyContract = new ethers.Contract(CoreProxy.address, CoreProxy.abi, signer);\n\n      // Only deposit if user doesn't have enough sUSD collateral\n      const deposit = amountToDeposit.lte(0)\n        ? undefined\n        : CoreProxyContract.populateTransaction.deposit(\n            BigNumber.from(accountId),\n            systemToken.address,\n            amountToDeposit.toBN() // only deposit what's needed\n          );\n\n      const burn = CoreProxyContract.populateTransaction.burnUsd(\n        BigNumber.from(accountId),\n        BigNumber.from(POOL_ID),\n        collateralTypeAddress,\n        debtChangeAbs.toBN()\n      );\n\n      const callsPromise = Promise.all(\n        [wrap, synth_approval, sell_synth, sUSD_Approval, deposit, burn].filter(notNil)\n      );\n\n      const [calls] = await Promise.all([callsPromise]);\n      if (priceUpdateTx) {\n        calls.unshift(priceUpdateTx as any);\n      }\n\n      const walletAddress = await signer.getAddress();\n      const { multicallTxn: erc7412Tx, gasLimit } = await withERC7412(\n        provider,\n        network,\n        calls,\n        'useRepay',\n        walletAddress\n      );\n\n      const txn = await signer.sendTransaction({\n        ...erc7412Tx,\n        gasLimit: gasLimit.mul(15).div(10),\n      });\n      log('txn', txn);\n      dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n      return receipt;\n    },\n\n    onSuccess: async () => {\n      const deployment = `${network?.id}-${network?.preset}`;\n      await Promise.all(\n        [\n          //\n          'PriceUpdates',\n          'LiquidityPosition',\n          'LiquidityPositions',\n          'TokenBalance',\n          'SynthBalances',\n          'EthBalance',\n          'Allowance',\n        ].map((key) => queryClient.invalidateQueries({ queryKey: [deployment, key] }))\n      );\n      dispatch({ type: 'success' });\n    },\n\n    onError: (error) => {\n      dispatch({ type: 'error', payload: { error } });\n      throw error;\n    },\n  });\n  return {\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n};\n","import { createMachine, assign } from 'xstate';\n\nexport const Events = {\n  SET_REQUIRE_APPROVAL: 'SET_REQUIRE_APPROVAL',\n  SET_INFINITE_APPROVAL: 'SET_INFINITE_APPROVAL',\n  RETRY: 'RETRY',\n  RUN: 'RUN',\n  SUCCESS: 'SUCCESS',\n  FAILURE: 'FAILURE',\n  RESET: 'RESET',\n} as const;\n\nexport const State = {\n  idle: 'idle',\n  approve: 'approve',\n  repay: 'repay',\n  failed: 'failed',\n  success: 'success',\n} as const;\n\nconst FailedSteps = {\n  [State.approve]: State.approve,\n  [State.repay]: State.repay,\n} as const;\n\nexport const ServiceNames = {\n  approveSUSD: 'approveSUSD',\n  executeRepay: 'executeRepay',\n} as const;\n\ntype Context = {\n  error: {\n    error: Error;\n    step: keyof typeof FailedSteps;\n  } | null;\n  requireApproval: boolean;\n  infiniteApproval: boolean;\n};\n\ntype EventNamesType = typeof Events;\ntype RepayEvents =\n  | { type: EventNamesType['SET_REQUIRE_APPROVAL']; requireApproval: boolean }\n  | { type: EventNamesType['SET_INFINITE_APPROVAL']; infiniteApproval: boolean }\n  | { type: EventNamesType['RETRY'] }\n  | { type: EventNamesType['RUN'] }\n  | { type: EventNamesType['SUCCESS'] }\n  | { type: EventNamesType['FAILURE'] }\n  | { type: EventNamesType['RESET'] };\n\ntype StateType = typeof State;\ntype MachineState =\n  | {\n      value: StateType['idle'];\n      context: Context & { error: null };\n    }\n  | {\n      value: StateType['approve'];\n      context: Context & { error: null };\n    }\n  | {\n      value: StateType['repay'];\n      context: Context & { error: null };\n    }\n  | {\n      value: StateType['failed'];\n      context: Context & { error: { error: Error; step: keyof typeof FailedSteps } };\n    }\n  | {\n      value: StateType['success'];\n      context: Context & {\n        error: null;\n      };\n    };\n\nconst initialContext = {\n  error: null,\n  requireApproval: false,\n  infiniteApproval: false,\n};\n\nexport const RepayMachine = createMachine<Context, RepayEvents, MachineState>({\n  id: 'RepayMachine',\n  initial: State.idle,\n  predictableActionArguments: true,\n  context: initialContext,\n  on: {\n    [Events.RUN]: {\n      target: State.repay,\n      actions: assign({\n        error: (_) => initialContext.error,\n        requireApproval: (_) => initialContext.requireApproval,\n        infiniteApproval: (_) => initialContext.infiniteApproval,\n      }),\n    },\n    [Events.SET_REQUIRE_APPROVAL]: {\n      actions: assign({ requireApproval: (_context, event) => event.requireApproval }),\n    },\n\n    [Events.SET_INFINITE_APPROVAL]: {\n      actions: assign({ infiniteApproval: (_context, event) => event.infiniteApproval }),\n    },\n  },\n  states: {\n    [State.idle]: {\n      on: {\n        [Events.RUN]: [\n          { target: State.approve, cond: (context) => context.requireApproval },\n          { target: State.repay },\n        ],\n      },\n    },\n\n    [State.approve]: {\n      invoke: {\n        src: ServiceNames.approveSUSD,\n        onDone: {\n          target: State.repay,\n        },\n        onError: {\n          target: State.failed,\n          actions: assign({\n            error: (_context, event) => ({ error: event.data, step: FailedSteps.approve }),\n          }),\n        },\n      },\n    },\n    [State.repay]: {\n      invoke: {\n        src: ServiceNames.executeRepay,\n        onDone: {\n          target: State.success,\n        },\n        onError: {\n          target: State.failed,\n          actions: assign({\n            error: (_context, event) => ({ error: event.data, step: FailedSteps.repay }),\n          }),\n        },\n      },\n    },\n    [State.failed]: {\n      on: {\n        [Events.RETRY]: [\n          {\n            target: State.approve,\n            cond: (c) => c.error?.step === FailedSteps.approve,\n            actions: assign({ error: (_) => null }),\n          },\n\n          {\n            target: State.repay,\n            cond: (c) => c.error?.step === FailedSteps.repay,\n            actions: assign({ error: (_) => null }),\n          },\n        ],\n      },\n    },\n    [State.success]: {},\n  },\n});\n","import { ArrowBackIcon } from '@chakra-ui/icons';\nimport { Button, Divider, Link, Text, useToast } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { ContractError } from '@snx-v3/ContractError';\nimport { parseUnits } from '@snx-v3/format';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { Multistep } from '@snx-v3/Multistep';\nimport { useApprove } from '@snx-v3/useApprove';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useRepay } from '@snx-v3/useRepay';\nimport { useRepayBaseAndromeda } from '@snx-v3/useRepayBaseAndromeda';\nimport { useSpotMarketProxy } from '@snx-v3/useSpotMarketProxy';\nimport { useSynthTokens } from '@snx-v3/useSynthTokens';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { useMachine } from '@xstate/react';\nimport React from 'react';\nimport { LiquidityPositionUpdated } from '../../ui/src/components/Manage/LiquidityPositionUpdated';\nimport { Events, RepayMachine, ServiceNames, State } from './RepayMachine';\n\nexport function RepayModal({ onClose }: { onClose: () => void }) {\n  const { debtChange, setDebtChange } = React.useContext(ManagePositionContext);\n  const [params] = useParams<PositionPageSchemaType>();\n\n  const { network } = useNetwork();\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n\n  const { data: liquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  const { data: systemToken } = useSystemToken();\n\n  const { exec: execRepay, settle: settleRepay } = useRepay({\n    repayAmount: debtChange && debtChange.lt(0) ? debtChange.abs() : undefined,\n  });\n\n  const { exec: execRepayBaseAndromeda, settle: settleRepayBaseAndromeda } = useRepayBaseAndromeda({\n    accountId: params.accountId,\n    collateralTypeAddress: collateralType?.tokenAddress,\n    debtChange,\n    availableUSDCollateral: liquidityPosition ? liquidityPosition.availableSystemToken : undefined,\n  });\n\n  const toast = useToast({ isClosable: true, duration: 9000 });\n\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: SpotMarketProxy } = useSpotMarketProxy();\n\n  const errorParser = useContractErrorParser();\n  const amountToDeposit = debtChange\n    .abs()\n    .sub(liquidityPosition ? liquidityPosition.availableSystemToken : 0);\n\n  const { data: synthTokens } = useSynthTokens();\n  const wrapperToken = React.useMemo(() => {\n    if (synthTokens && collateralType) {\n      return synthTokens.find((synth) => synth.address === collateralType.tokenAddress)?.token\n        ?.address;\n    }\n  }, [collateralType, synthTokens]);\n\n  const collateralAddress = network?.preset === 'andromeda' ? wrapperToken : systemToken?.address;\n\n  const { approve, requireApproval } = useApprove({\n    contractAddress: collateralAddress,\n    amount:\n      network?.preset === 'andromeda'\n        ? parseUnits(amountToDeposit.toString(), 6) // On Base we use USDC and it has 6 decimals\n        : amountToDeposit.toBN(),\n    spender: network?.preset === 'andromeda' ? SpotMarketProxy?.address : CoreProxy?.address,\n  });\n\n  const [state, send] = useMachine(RepayMachine, {\n    services: {\n      [ServiceNames.approveSUSD]: async () => {\n        try {\n          toast({\n            title: `Approve ${systemToken?.symbol} for transfer`,\n            description: 'The next transaction will repay your debt.',\n            status: 'info',\n            variant: 'left-accent',\n          });\n\n          await approve(Boolean(state.context.infiniteApproval));\n        } catch (error: any) {\n          const contractError = errorParser(error);\n          if (contractError) {\n            console.error(new Error(contractError.name), contractError);\n          }\n          toast.closeAll();\n          toast({\n            title: 'Approval failed',\n            description: contractError ? (\n              <ContractError contractError={contractError} />\n            ) : (\n              'Please try again.'\n            ),\n            status: 'error',\n            variant: 'left-accent',\n            duration: 3_600_000,\n          });\n          throw Error('Approve failed', { cause: error });\n        }\n      },\n\n      [ServiceNames.executeRepay]: async () => {\n        try {\n          toast.closeAll();\n          toast({ title: 'Repaying...', variant: 'left-accent' });\n\n          if (network?.preset === 'andromeda') {\n            await execRepayBaseAndromeda();\n          } else {\n            await execRepay();\n          }\n\n          setDebtChange(ZEROWEI);\n\n          toast.closeAll();\n          toast({\n            title: 'Success',\n            description: 'Your debt has been repaid.',\n            status: 'success',\n            duration: 5000,\n            variant: 'left-accent',\n          });\n        } catch (error: any) {\n          const contractError = errorParser(error);\n          if (contractError) {\n            console.error(new Error(contractError.name), contractError);\n          }\n          toast({\n            title: 'Could not complete repaying',\n            description: contractError ? (\n              <ContractError contractError={contractError} />\n            ) : (\n              'Please try again.'\n            ),\n            status: 'error',\n            variant: 'left-accent',\n            duration: 3_600_000,\n          });\n          throw Error('Repay failed', { cause: error });\n        }\n      },\n    },\n  });\n  const needToDeposit = amountToDeposit.gt(0);\n\n  React.useEffect(() => {\n    send(Events.SET_REQUIRE_APPROVAL, { requireApproval: requireApproval && needToDeposit });\n  }, [needToDeposit, requireApproval, send]);\n\n  const onSubmit = React.useCallback(async () => {\n    if (state.matches(State.success)) {\n      send(Events.RESET);\n      onClose();\n      return;\n    }\n    if (state.context.error) {\n      send(Events.RETRY);\n      return;\n    }\n    send(Events.RUN);\n  }, [onClose, send, state]);\n\n  const symbol = network?.preset === 'andromeda' ? 'USDC' : systemToken?.symbol;\n\n  if (state.matches(State.success)) {\n    return (\n      <LiquidityPositionUpdated\n        onClose={onSubmit}\n        title=\"Debt successfully Updated\"\n        subline={\n          <>\n            Your <b>Debt</b> has been updated, read more about it in the{' '}\n            <Link\n              href=\"https://docs.synthetix.io/v/synthetix-v3-user-documentation\"\n              target=\"_blank\"\n              color=\"cyan.500\"\n            >\n              Synthetix V3 Documentation\n            </Link>\n          </>\n        }\n        alertText={\n          <>\n            <b>Debt</b> successfully Updated\n          </>\n        }\n      />\n    );\n  }\n\n  return (\n    <div data-cy=\"repay multistep\">\n      <Text color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n        <ArrowBackIcon\n          cursor=\"pointer\"\n          onClick={() => {\n            settleRepay();\n            settleRepayBaseAndromeda();\n            onClose();\n          }}\n          mr={2}\n        />\n        Manage Debt\n      </Text>\n      <Divider my={4} />\n      <Multistep\n        step={1}\n        title={`Approve ${symbol} transfer`}\n        status={{\n          failed: state.context.error?.step === State.approve,\n          success: !state.context.requireApproval || state.matches(State.success),\n          loading: state.matches(State.approve) && !state.context.error,\n        }}\n        checkboxLabel={\n          state.context.requireApproval\n            ? `Approve unlimited ${symbol} transfers to Synthetix.`\n            : undefined\n        }\n        checkboxProps={{\n          isChecked: state.context.infiniteApproval,\n          onChange: (e) =>\n            send(Events.SET_INFINITE_APPROVAL, { infiniteApproval: e.target.checked }),\n        }}\n      />\n      <Multistep\n        step={2}\n        title=\"Repay\"\n        subtitle={\n          <Text>\n            Repay <Amount value={debtChange.abs()} suffix={` ${symbol}`} />\n          </Text>\n        }\n        status={{\n          failed: state.context.error?.step === State.repay,\n          success: state.matches(State.success),\n          loading: state.matches(State.repay) && !state.context.error,\n        }}\n      />\n\n      <Button\n        isDisabled={state.matches(State.approve) || state.matches(State.repay)}\n        onClick={onSubmit}\n        width=\"100%\"\n        mt=\"6\"\n        data-cy=\"repay confirm button\"\n      >\n        {(() => {\n          switch (true) {\n            case Boolean(state.context.error):\n              return 'Retry';\n            case state.matches(State.approve) || state.matches(State.repay):\n              return 'Processing...';\n            case state.matches(State.success):\n              return 'Continue';\n            default:\n              return 'Execute Transaction';\n          }\n        })()}\n      </Button>\n    </div>\n  );\n}\n","import { RepayModal } from './RepayModal';\nexport * from './RepayModal';\nexport default RepayModal;\n","import Wei, { wei } from '@synthetixio/wei';\nimport { createMachine, assign } from 'xstate';\n\nexport const Events = {\n  SET_AMOUNT: 'SET_AMOUNT',\n  SET_COLLATERAL_SYMBOL: 'SET_COLLATERAL_SYMBOL',\n  RETRY: 'RETRY',\n  RUN: 'RUN',\n  SUCCESS: 'SUCCESS',\n  FAILURE: 'FAILURE',\n  RESET: 'RESET',\n} as const;\n\nexport const State = {\n  idle: 'idle',\n  undelegate: 'undelegate',\n  failed: 'failed',\n  success: 'success',\n} as const;\n\nexport const FailedSteps = {\n  [State.undelegate]: State.undelegate,\n} as const;\n\nexport const ServiceNames = {\n  undelegate: 'undelegate',\n} as const;\n\ntype Context = {\n  error: { error: Error; step: keyof typeof FailedSteps } | null;\n  amount: Wei;\n  collateralSymbol?: string;\n};\n\ntype EventType = typeof Events;\ntype UndelegateEvents =\n  | { type: EventType['SET_AMOUNT']; amount: Wei }\n  | { type: EventType['SET_COLLATERAL_SYMBOL']; symbol: string }\n  | { type: EventType['RETRY'] }\n  | { type: EventType['RUN'] }\n  | { type: EventType['SUCCESS'] }\n  | { type: EventType['FAILURE'] }\n  | { type: EventType['RESET'] };\n\ntype StateType = typeof State;\nexport type MachineState =\n  | {\n      value: StateType['idle'];\n      context: Context & { error: null };\n    }\n  | {\n      value: StateType['undelegate'];\n      context: Context & { error: null };\n    }\n  | {\n      value: StateType['failed'];\n      context: Context & { error: { error: Error; step: keyof typeof FailedSteps } };\n    }\n  | {\n      value: StateType['success'];\n      context: Context & {\n        error: null;\n      };\n    };\n\nconst initialContext = {\n  amount: wei(0),\n  error: null,\n  collateralSymbol: undefined,\n};\nexport const UndelegateMachine = createMachine<Context, UndelegateEvents, MachineState>({\n  id: 'UndelegateMachine',\n  initial: State.idle,\n  predictableActionArguments: true,\n  context: initialContext,\n  on: {\n    [Events.RESET]: {\n      target: State.idle,\n      actions: assign({\n        amount: (_) => initialContext.amount,\n        error: (_) => initialContext.error,\n        collateralSymbol: (_) => initialContext.collateralSymbol,\n      }),\n    },\n    [Events.SET_AMOUNT]: {\n      actions: assign({ amount: (_context, event) => event.amount }),\n    },\n    [Events.SET_COLLATERAL_SYMBOL]: {\n      actions: assign({ collateralSymbol: (_context, event) => event.symbol }),\n    },\n  },\n  states: {\n    [State.idle]: {\n      on: {\n        [Events.RUN]: [{ target: State.undelegate, cond: (context) => context.amount.gt(0) }],\n      },\n    },\n\n    [State.undelegate]: {\n      invoke: {\n        src: ServiceNames.undelegate,\n        onError: {\n          target: State.failed,\n          actions: assign({\n            error: (_context, event) => ({ error: event.data, step: FailedSteps.undelegate }),\n          }),\n        },\n        onDone: [{ target: State.success }],\n      },\n    },\n\n    [State.failed]: {\n      on: {\n        [Events.RETRY]: [\n          {\n            target: State.undelegate,\n            cond: (c) => c.error?.step === FailedSteps.undelegate,\n            actions: assign({ error: (_) => null }),\n          },\n        ],\n      },\n    },\n    [State.success]: {},\n  },\n});\n","import { ArrowBackIcon } from '@chakra-ui/icons';\nimport { Button, Divider, Link, Text, useToast } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { ChangeStat } from '@snx-v3/ChangeStat';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { ContractError } from '@snx-v3/ContractError';\nimport { currency, parseUnits } from '@snx-v3/format';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { Multistep } from '@snx-v3/Multistep';\nimport { useApprove } from '@snx-v3/useApprove';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { useDebtRepayer } from '@snx-v3/useDebtRepayer';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useUndelegate } from '@snx-v3/useUndelegate';\nimport { useUndelegateBaseAndromeda } from '@snx-v3/useUndelegateBaseAndromeda';\nimport { useUSDC } from '@snx-v3/useUSDC';\nimport { Wei, wei } from '@synthetixio/wei';\nimport { useMachine } from '@xstate/react';\nimport React from 'react';\nimport { CRatioChangeStat } from '../../ui/src/components/CRatioBar/CRatioChangeStat';\nimport { LiquidityPositionUpdated } from '../../ui/src/components/Manage/LiquidityPositionUpdated';\nimport { TransactionSummary } from '../../ui/src/components/TransactionSummary/TransactionSummary';\nimport { Events, ServiceNames, State, UndelegateMachine } from './UndelegateMachine';\n\nexport function UndelegateModal({ onClose }: { onClose: () => void }) {\n  const [params] = useParams<PositionPageSchemaType>();\n  const { collateralChange, setCollateralChange } = React.useContext(ManagePositionContext);\n  const { network } = useNetwork();\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: liquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  const toast = useToast({ isClosable: true, duration: 9000 });\n\n  const [txSummary, setTxSummary] = React.useState({\n    currentCollateral: ZEROWEI,\n    collateralChange: ZEROWEI,\n    currentDebt: ZEROWEI,\n  });\n\n  const currentCollateral = liquidityPosition?.collateralAmount || wei(0);\n\n  const { exec: execUndelegate } = useUndelegate({\n    accountId: params.accountId,\n    collateralTypeAddress: collateralType?.tokenAddress,\n    collateralChange,\n    currentCollateral: currentCollateral,\n  });\n\n  const currentDebt =\n    liquidityPosition && liquidityPosition.debt.gt(0) ? liquidityPosition.debt : wei(0);\n  const { data: USDC } = useUSDC();\n  const { data: DebtRepayer } = useDebtRepayer();\n\n  const { approve, requireApproval } = useApprove({\n    contractAddress: USDC?.address,\n    //slippage for approval\n    amount:\n      liquidityPosition && liquidityPosition.debt.gt(0)\n        ? parseUnits(currentDebt.toString(), 6).mul(120).div(100)\n        : undefined,\n    spender: DebtRepayer?.address,\n  });\n\n  const { exec: undelegateBaseAndromeda } = useUndelegateBaseAndromeda({ collateralChange });\n\n  const errorParser = useContractErrorParser();\n\n  const [state, send] = useMachine(UndelegateMachine, {\n    context: {\n      amount: collateralChange.abs(),\n    },\n    services: {\n      [ServiceNames.undelegate]: async () => {\n        try {\n          setTxSummary({\n            currentCollateral,\n            currentDebt: liquidityPosition?.debt || ZEROWEI,\n            collateralChange,\n          });\n\n          if (network?.preset === 'andromeda') {\n            if (requireApproval) {\n              await approve(false);\n            }\n            await undelegateBaseAndromeda();\n          } else {\n            await execUndelegate();\n          }\n\n          setCollateralChange(ZEROWEI);\n\n          toast.closeAll();\n          toast({\n            title: 'Success',\n            description: 'Your locked collateral amount has been updated.',\n            status: 'success',\n            duration: 5000,\n            variant: 'left-accent',\n          });\n        } catch (error: any) {\n          const contractError = errorParser(error);\n          if (contractError) {\n            console.error(new Error(contractError.name), contractError);\n          }\n          toast.closeAll();\n          toast({\n            title: 'Unlock collateral failed',\n            description: contractError ? (\n              <ContractError contractError={contractError} />\n            ) : (\n              'Please try again.'\n            ),\n            status: 'error',\n            variant: 'left-accent',\n            duration: 3_600_000,\n          });\n          throw Error('Unlock collateral failed', { cause: error });\n        }\n      },\n    },\n  });\n\n  const collateralChangeString = collateralChange.toString();\n\n  React.useEffect(() => {\n    send(Events.SET_AMOUNT, { amount: wei(collateralChangeString).abs() });\n  }, [collateralChangeString, send]);\n\n  React.useEffect(() => {\n    send(Events.SET_COLLATERAL_SYMBOL, { symbol: wei(collateralChangeString).abs() });\n  }, [collateralChangeString, send]);\n\n  const onSubmit = React.useCallback(async () => {\n    if (state.matches(State.success)) {\n      send(Events.RESET);\n      onClose();\n      return;\n    }\n    if (state.context.error) {\n      send(Events.RETRY);\n      return;\n    }\n    send(Events.RUN);\n  }, [onClose, send, state]);\n\n  const isProcessing = state.matches(State.undelegate);\n  if (state.matches(State.success)) {\n    return (\n      <LiquidityPositionUpdated\n        onClose={onSubmit}\n        title=\"Collateral successfully Updated\"\n        subline={\n          <>\n            Your <b>Collateral</b> has been updated, read more about it in the{' '}\n            <Link\n              href=\"https://docs.synthetix.io/v/synthetix-v3-user-documentation\"\n              target=\"_blank\"\n              color=\"cyan.500\"\n            >\n              Synthetix V3 Documentation\n            </Link>\n          </>\n        }\n        alertText={\n          <>\n            <b>Collateral</b> successfully Updated\n          </>\n        }\n        summary={\n          <TransactionSummary\n            items={[\n              ...(liquidityPosition\n                ? [\n                    {\n                      label: 'Locked ' + collateralType?.displaySymbol,\n                      value: (\n                        <ChangeStat\n                          value={txSummary.currentCollateral}\n                          newValue={txSummary.currentCollateral.add(txSummary.collateralChange)}\n                          formatFn={(val?: Wei) => currency(val ?? ZEROWEI)}\n                          hasChanges={txSummary.collateralChange.abs().gt(0)}\n                          size=\"sm\"\n                        />\n                      ),\n                    },\n                  ]\n                : []),\n              ...(liquidityPosition && network?.preset !== 'andromeda'\n                ? [\n                    {\n                      label: 'C-ratio',\n                      value: (\n                        <CRatioChangeStat\n                          currentCollateral={txSummary.currentCollateral}\n                          currentDebt={txSummary.currentDebt}\n                          collateralChange={txSummary.collateralChange}\n                          collateralPrice={liquidityPosition?.collateralPrice ?? ZEROWEI}\n                          debtChange={ZEROWEI}\n                          size=\"sm\"\n                        />\n                      ),\n                    },\n                  ]\n                : []),\n            ]}\n          />\n        }\n      />\n    );\n  }\n\n  return (\n    <div data-cy=\"undelegate multistep\">\n      <Text color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n        <ArrowBackIcon cursor=\"pointer\" onClick={onClose} mr={2} />\n        Manage Collateral\n      </Text>\n      <Divider my={4} />\n      <Multistep\n        step={1}\n        title=\"Unlock collateral\"\n        subtitle={\n          <Amount\n            value={state.context.amount}\n            suffix={` ${collateralType?.displaySymbol} will be unlocked from the pool.`}\n          />\n        }\n        status={{\n          failed: Boolean(state.context.error?.step === State.undelegate),\n          disabled: state.context.amount.eq(0),\n          success: state.matches(State.success),\n          loading: state.matches(State.undelegate) && !state.context.error,\n        }}\n      />\n\n      <Button\n        isDisabled={isProcessing}\n        onClick={onSubmit}\n        width=\"100%\"\n        mt=\"6\"\n        data-cy=\"undelegate confirm button\"\n      >\n        {(() => {\n          switch (true) {\n            case Boolean(state.context.error):\n              return 'Retry';\n            case isProcessing:\n              return 'Processing...';\n            case state.matches(State.success):\n              return 'Continue';\n            default:\n              return 'Execute Transaction';\n          }\n        })()}\n      </Button>\n    </div>\n  );\n}\n","import { UndelegateModal } from './UndelegateModal';\nexport * from './UndelegateModal';\nexport default UndelegateModal;\n","import { calculateCRatio } from '@snx-v3/calculations';\nimport { Wei, wei } from '@synthetixio/wei';\n\nexport const validatePosition = ({\n  issuanceRatioD18,\n  collateralAmount,\n  collateralPrice,\n  debt,\n  collateralChange,\n  debtChange,\n}: {\n  issuanceRatioD18?: Wei;\n  collateralAmount?: Wei;\n  collateralPrice?: Wei;\n  debt?: Wei;\n  collateralChange: Wei;\n  debtChange: Wei;\n}) => {\n  const targetCRatio = issuanceRatioD18 ? issuanceRatioD18 : wei(1);\n  const newDebt = wei(debt || 0).add(debtChange);\n  const newCollateralAmount = wei(collateralAmount || 0).add(collateralChange);\n  const newCollateralValue = newCollateralAmount.mul(collateralPrice || 0);\n\n  const newCRatio = calculateCRatio(newDebt, newCollateralValue);\n\n  const maybeMaxDebt = wei(newCollateralAmount)\n    .mul(collateralPrice || 0)\n    .div(targetCRatio)\n    .sub(debt || 0);\n\n  const maxDebt = maybeMaxDebt.gte(0) ? maybeMaxDebt : wei(0);\n\n  const isValid =\n    (debtChange.lte(0) && collateralChange.gte(0)) ||\n    ((newCRatio.gte(targetCRatio) || newCRatio.lte(0)) &&\n      (newDebt.lte(0) || newCollateralAmount.gt(0)));\n\n  return {\n    isValid,\n    hasChanges: !collateralChange.eq(0) || !debtChange.eq(0),\n    newCRatio,\n    newDebt,\n    newCollateralAmount,\n    maxDebt,\n  };\n};\n","import { useNetwork, useProvider, useSigner, useWallet } from '@snx-v3/useBlockchain';\nimport { useStaticAaveUSDC } from '@snx-v3/useStaticAaveUSDC';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\n\nconst log = debug('snx:useUnwrapStataUSDC');\n\nexport function useUnwrapStataUSDC() {\n  const signer = useSigner();\n  const provider = useProvider();\n  const { network } = useNetwork();\n\n  const { data: StaticAaveUSDC } = useStaticAaveUSDC();\n  const queryClient = useQueryClient();\n  const { activeWallet } = useWallet();\n\n  return useMutation({\n    mutationFn: async (amount: ethers.BigNumber) => {\n      if (!StaticAaveUSDC || !signer || !provider || amount.lte(0)) {\n        return;\n      }\n      const StaticAaveUSDCContract = new ethers.Contract(\n        StaticAaveUSDC.address,\n        StaticAaveUSDC.abi,\n        signer\n      );\n\n      const transaction = await StaticAaveUSDCContract.populateTransaction.withdraw(\n        amount.toString(),\n        activeWallet?.address,\n        activeWallet?.address\n      );\n\n      const gasLimit = await provider.estimateGas(transaction);\n\n      const txn = await signer.sendTransaction({\n        ...transaction,\n        gasLimit: gasLimit.mul(15).div(10),\n      });\n      log('txn', txn);\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n      return receipt;\n    },\n\n    onSuccess: async () => {\n      const deployment = `${network?.id}-${network?.preset}`;\n      await Promise.all(\n        [\n          //\n          'TokenBalance',\n          'EthBalance',\n        ].map((key) => queryClient.invalidateQueries({ queryKey: [deployment, key] }))\n      );\n    },\n  });\n}\n","import { parseUnits } from '@snx-v3/format';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { useCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport Wei from '@synthetixio/wei';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { BigNumber, ethers } from 'ethers';\nimport { useReducer } from 'react';\n\nconst log = debug('snx:useWithdraw');\n\nexport const useWithdraw = ({\n  accountId,\n  token,\n  amount,\n}: {\n  accountId?: string;\n  token?: { address: string; decimals: number };\n  amount: Wei;\n}) => {\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: priceUpdateTx } = useCollateralPriceUpdates();\n  const { network } = useNetwork();\n\n  const signer = useSigner();\n  const provider = useProvider();\n\n  const isReady = signer && network && provider && CoreProxy && token && amount && amount.gt(0);\n  const queryClient = useQueryClient();\n  const mutation = useMutation({\n    mutationFn: async () => {\n      if (!isReady) {\n        throw new Error('Not ready');\n      }\n      const walletAddress = await signer.getAddress();\n\n      dispatch({ type: 'prompting' });\n\n      const CoreProxyContract = new ethers.Contract(CoreProxy.address, CoreProxy.abi, signer);\n      const populatedTxnPromised = CoreProxyContract.populateTransaction.withdraw(\n        BigNumber.from(accountId),\n        token.address,\n        parseUnits(amount.toString(), token.decimals)\n      );\n\n      const callsPromise = Promise.all([populatedTxnPromised]);\n      const [calls] = await Promise.all([callsPromise]);\n      if (priceUpdateTx) {\n        calls.unshift(priceUpdateTx as any);\n      }\n\n      const { multicallTxn: erc7412Tx, gasLimit } = await withERC7412(\n        provider,\n        network,\n        calls,\n        'useWithdraw',\n        walletAddress\n      );\n\n      const txn = await signer.sendTransaction({\n        ...erc7412Tx,\n        gasLimit: gasLimit.mul(15).div(10),\n      });\n      log('txn', txn);\n      dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n      return receipt;\n    },\n\n    onSuccess: async () => {\n      const deployment = `${network?.id}-${network?.preset}`;\n      await Promise.all(\n        [\n          //\n          'PriceUpdates',\n          'LiquidityPosition',\n          'LiquidityPositions',\n          'TokenBalance',\n          'SynthBalances',\n          'EthBalance',\n          'Allowance',\n          'TransferableSynthetix',\n          'AccountCollateralUnlockDate',\n        ].map((key) => queryClient.invalidateQueries({ queryKey: [deployment, key] }))\n      );\n      dispatch({ type: 'success' });\n    },\n\n    onError: (error) => {\n      dispatch({ type: 'error', payload: { error } });\n      throw error;\n    },\n  });\n  return {\n    isReady,\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n};\n","import { ZEROWEI } from '@snx-v3/constants';\nimport { getSpotMarketId, STATA_BASE_MARKET, USDC_BASE_MARKET } from '@snx-v3/isBaseAndromeda';\nimport { notNil } from '@snx-v3/tsHelpers';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { useCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useGetUSDTokens } from '@snx-v3/useGetUSDTokens';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useSpotMarketProxy } from '@snx-v3/useSpotMarketProxy';\nimport { useUSDProxy } from '@snx-v3/useUSDProxy';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport { Wei } from '@synthetixio/wei';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\nimport { useReducer } from 'react';\n\nconst log = debug('snx:useWithdrawBaseAndromeda');\n\nexport const useWithdrawBaseAndromeda = ({ amount }: { amount: Wei }) => {\n  const [params] = useParams<PositionPageSchemaType>();\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: liquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  const accountId = params.accountId;\n\n  const [txnState, dispatch] = useReducer(reducer, initialState);\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: SpotMarketProxy } = useSpotMarketProxy();\n  const { data: USDProxy } = useUSDProxy();\n  const { data: priceUpdateTx } = useCollateralPriceUpdates();\n  const { network } = useNetwork();\n  const { data: usdTokens } = useGetUSDTokens();\n\n  const signer = useSigner();\n  const provider = useProvider();\n\n  const isReady =\n    signer &&\n    network &&\n    provider &&\n    CoreProxy &&\n    SpotMarketProxy &&\n    USDProxy &&\n    accountId &&\n    usdTokens &&\n    params.collateralSymbol &&\n    collateralType &&\n    liquidityPosition;\n\n  const queryClient = useQueryClient();\n  const mutation = useMutation({\n    mutationFn: async () => {\n      if (!isReady) {\n        throw new Error('Not ready');\n      }\n      const total = liquidityPosition.availableSystemToken.add(\n        liquidityPosition.availableCollateral\n      );\n      log('total', total);\n\n      log('amountToWithdraw', amount);\n      if (total.lt(amount)) {\n        throw new Error('Exceeds balance');\n      }\n\n      const wrappedCollateralAmount = amount.gt(liquidityPosition.availableCollateral)\n        ? liquidityPosition.availableCollateral\n        : amount;\n      log('wrappedCollateralAmount', wrappedCollateralAmount);\n\n      const snxUSDAmount = amount.sub(wrappedCollateralAmount).gt(0)\n        ? amount.sub(wrappedCollateralAmount)\n        : ZEROWEI;\n\n      log('snxUSDAmount', snxUSDAmount);\n\n      let sUSDC_amount = ZEROWEI;\n\n      const spotMarketId = getSpotMarketId(params.collateralSymbol);\n      log('spotMarketId', spotMarketId);\n\n      if (spotMarketId === USDC_BASE_MARKET) {\n        sUSDC_amount = sUSDC_amount.add(wrappedCollateralAmount);\n      }\n      log('sUSDC_amount', sUSDC_amount);\n\n      dispatch({ type: 'prompting' });\n\n      const CoreProxyContract = new ethers.Contract(CoreProxy.address, CoreProxy.abi, signer);\n      const USDProxyContract = new ethers.Contract(USDProxy.address, USDProxy.abi, signer);\n      const SpotProxyContract = new ethers.Contract(\n        SpotMarketProxy.address,\n        SpotMarketProxy.abi,\n        signer\n      );\n\n      const withdraw_collateral = wrappedCollateralAmount.gt(0)\n        ? CoreProxyContract.populateTransaction.withdraw(\n            ethers.BigNumber.from(accountId),\n            collateralType.tokenAddress,\n            wrappedCollateralAmount.toBN()\n          )\n        : undefined;\n\n      //snxUSD\n      const withdraw_snxUSD = snxUSDAmount.gt(0)\n        ? CoreProxyContract.populateTransaction.withdraw(\n            ethers.BigNumber.from(accountId),\n            usdTokens.snxUSD,\n            snxUSDAmount.toBN()\n          )\n        : undefined;\n\n      const snxUSDApproval = snxUSDAmount.gt(0)\n        ? USDProxyContract.populateTransaction.approve(SpotMarketProxy.address, snxUSDAmount.toBN())\n        : undefined;\n\n      //snxUSD => sUSDC\n      const buy_sUSDC = snxUSDAmount.gt(0)\n        ? SpotProxyContract.populateTransaction.buy(\n            USDC_BASE_MARKET,\n            snxUSDAmount.toBN(),\n            0,\n            ethers.constants.AddressZero\n          )\n        : undefined;\n\n      const synthAmount = snxUSDAmount.gt(0)\n        ? (\n            await SpotProxyContract.callStatic.quoteBuyExactIn(\n              USDC_BASE_MARKET,\n              snxUSDAmount.toBN(),\n              0\n            )\n          ).synthAmount\n        : ZEROWEI;\n      const unwrapAmount = sUSDC_amount.add(synthAmount);\n\n      //sUSDC => USDC\n      const unwrapTxnPromised = unwrapAmount.gt(0)\n        ? SpotProxyContract.populateTransaction.unwrap(USDC_BASE_MARKET, unwrapAmount.toBN(), 0)\n        : undefined;\n\n      const unwrapCollateralTxnPromised =\n        spotMarketId === STATA_BASE_MARKET && wrappedCollateralAmount.gt(0)\n          ? SpotProxyContract.populateTransaction.unwrap(\n              STATA_BASE_MARKET,\n              wrappedCollateralAmount.toBN(),\n              0\n            )\n          : undefined;\n\n      const [\n        withdraw_collateral_txn,\n        withdraw_snxUSD_txn,\n        snxUSDApproval_txn,\n        buy_sUSDC_txn,\n        unwrapTxnPromised_txn,\n        unwrapCollateralTxnPromised_txn,\n      ] = await Promise.all([\n        withdraw_collateral,\n        withdraw_snxUSD,\n        snxUSDApproval,\n        buy_sUSDC,\n        unwrapTxnPromised,\n        unwrapCollateralTxnPromised,\n      ]);\n\n      const allCalls = [\n        withdraw_collateral_txn,\n        withdraw_snxUSD_txn,\n        snxUSDApproval_txn,\n        buy_sUSDC_txn,\n        unwrapTxnPromised_txn,\n        unwrapCollateralTxnPromised_txn,\n      ].filter(notNil);\n\n      if (priceUpdateTx) {\n        allCalls.unshift(priceUpdateTx as any);\n      }\n\n      const walletAddress = await signer.getAddress();\n      const { multicallTxn: erc7412Tx, gasLimit } = await withERC7412(\n        provider,\n        network,\n        allCalls,\n        'useWithdrawBase',\n        walletAddress\n      );\n\n      const txn = await signer.sendTransaction({\n        ...erc7412Tx,\n        gasLimit: gasLimit.mul(15).div(10),\n      });\n      log('txn', txn);\n      dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n      return receipt;\n    },\n\n    onSuccess: async () => {\n      const deployment = `${network?.id}-${network?.preset}`;\n      await Promise.all(\n        [\n          //\n          'PriceUpdates',\n          'LiquidityPosition',\n          'LiquidityPositions',\n          'TokenBalance',\n          'SynthBalances',\n          'EthBalance',\n        ].map((key) => queryClient.invalidateQueries({ queryKey: [deployment, key] }))\n      );\n      dispatch({ type: 'success' });\n    },\n\n    onError: (error) => {\n      dispatch({ type: 'error', payload: { error } });\n      throw error;\n    },\n  });\n\n  return {\n    isReady,\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n};\n","import { ArrowBackIcon } from '@chakra-ui/icons';\nimport { Button, Divider, Link, Text, useToast } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { ContractError } from '@snx-v3/ContractError';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { Multistep } from '@snx-v3/Multistep';\nimport { useNetwork, useProvider, useWallet } from '@snx-v3/useBlockchain';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { useIsSynthStataUSDC } from '@snx-v3/useIsSynthStataUSDC';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useStaticAaveUSDC } from '@snx-v3/useStaticAaveUSDC';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { useUnwrapStataUSDC } from '@snx-v3/useUnwrapStataUSDC';\nimport { useWithdraw } from '@snx-v3/useWithdraw';\nimport { useWithdrawBaseAndromeda } from '@snx-v3/useWithdrawBaseAndromeda';\nimport { ethers } from 'ethers';\nimport React, { useContext, useState } from 'react';\nimport { LiquidityPositionUpdated } from '../../ui/src/components/Manage/LiquidityPositionUpdated';\n\nexport function WithdrawModal({\n  onClose,\n  isDebtWithdrawal = false,\n}: {\n  onClose: () => void;\n  isDebtWithdrawal?: boolean;\n}) {\n  const [state, setState] = useState({\n    step: 1,\n    status: 'idle',\n  });\n\n  const provider = useProvider();\n  const { activeWallet } = useWallet();\n  const [params] = useParams<PositionPageSchemaType>();\n  const toast = useToast({ isClosable: true, duration: 9000 });\n  const { network } = useNetwork();\n\n  const { withdrawAmount, setWithdrawAmount } = useContext(ManagePositionContext);\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const errorParser = useContractErrorParser();\n\n  const isStataUSDC = useIsSynthStataUSDC({ tokenAddress: collateralType?.tokenAddress });\n\n  const { data: systemToken } = useSystemToken();\n\n  const { data: StaticAaveUSDC, isPending: isPendingStaticAaveUSDC } = useStaticAaveUSDC();\n\n  const { mutateAsync: unwrapStata } = useUnwrapStataUSDC();\n\n  const { mutation: withdrawMain, isReady: isReadyWithdrawMain } = useWithdraw({\n    amount: withdrawAmount,\n    accountId: params.accountId,\n    token: isDebtWithdrawal ? systemToken : collateralType,\n  });\n\n  const { mutation: withdrawAndromeda, isReady: isReadyWithdrawAndromeda } =\n    useWithdrawBaseAndromeda({ amount: withdrawAmount });\n\n  const onSubmit = async () => {\n    try {\n      if (state.status === 'success') {\n        onClose();\n      }\n\n      let step = state.step;\n      if (step === 1) {\n        setState({\n          step: 1,\n          status: 'pending',\n        });\n\n        if (network?.preset === 'andromeda') {\n          await withdrawAndromeda.mutateAsync();\n        } else {\n          await withdrawMain.mutateAsync();\n        }\n\n        if (isStataUSDC) {\n          step = 2;\n          setState({\n            step: 2,\n            status: 'pending',\n          });\n        } else {\n          setState({\n            step: 2,\n            status: 'success',\n          });\n        }\n      }\n      if (step === 2) {\n        if (!(provider && StaticAaveUSDC)) {\n          throw new Error('Not ready');\n        }\n\n        setState({\n          step: 2,\n          status: 'pending',\n        });\n\n        const StaticAaveUSDCContract = new ethers.Contract(\n          StaticAaveUSDC.address,\n          StaticAaveUSDC.abi,\n          provider\n        );\n\n        const balance = await StaticAaveUSDCContract.balanceOf(activeWallet?.address);\n        await unwrapStata(balance);\n\n        setState({\n          step: 2,\n          status: 'success',\n        });\n      }\n\n      setWithdrawAmount(ZEROWEI);\n    } catch (error) {\n      setState((state) => ({\n        ...state,\n        status: 'error',\n      }));\n\n      const contractError = errorParser(error);\n      if (contractError) {\n        console.error(new Error(contractError.name), contractError);\n      }\n      toast.closeAll();\n      toast({\n        title: 'Withdraw failed',\n        description: contractError ? (\n          <ContractError contractError={contractError} />\n        ) : (\n          'Please try again.'\n        ),\n        status: 'error',\n        variant: 'left-accent',\n        duration: 3_600_000,\n      });\n    }\n  };\n\n  if (state.status === 'success') {\n    return (\n      <LiquidityPositionUpdated\n        onClose={onClose}\n        title={(isDebtWithdrawal ? 'Debt' : 'Collateral') + ' successfully Withdrawn'}\n        subline={\n          <>\n            Your <b>{isDebtWithdrawal ? 'Debt' : 'Collateral'}</b> has been withdrawn, read more\n            about it in the{' '}\n            <Link\n              href=\"https://docs.synthetix.io/v/synthetix-v3-user-documentation\"\n              target=\"_blank\"\n              color=\"cyan.500\"\n            >\n              Synthetix V3 Documentation\n            </Link>\n          </>\n        }\n        alertText={(isDebtWithdrawal ? 'Debt' : 'Collateral') + ' successfully Withdrawn'}\n      />\n    );\n  }\n\n  return (\n    <div data-cy=\"withdraw multistep\">\n      <Text color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n        <ArrowBackIcon cursor=\"pointer\" onClick={onClose} mr={2} />\n        Manage {isDebtWithdrawal ? 'Debt' : 'Collateral'}\n      </Text>\n      <Divider my={4} />\n      <Multistep\n        step={1}\n        title=\"Withdraw\"\n        subtitle={\n          <Amount\n            value={withdrawAmount}\n            suffix={` ${\n              isDebtWithdrawal ? systemToken?.symbol : collateralType?.displaySymbol\n            } will be withdrawn`}\n          />\n        }\n        status={{\n          failed: state.step === 1 && state.status === 'error',\n          success: state.step > 1,\n          loading: state.step === 1 && state.status === 'pending',\n        }}\n      />\n      {isStataUSDC && (\n        <Multistep\n          step={2}\n          title=\"Unwrap\"\n          subtitle={<Text as=\"div\">unwrap Static aUSDC into USDC</Text>}\n          status={{\n            failed: state.step === 2 && state.status === 'error',\n            success: state.status === 'success',\n            loading: state.step === 2 && state.status === 'pending',\n          }}\n        />\n      )}\n      <Button\n        isDisabled={\n          (network?.preset === 'andromeda' && !isReadyWithdrawAndromeda) ||\n          (network?.preset !== 'andromeda' && !isReadyWithdrawMain) ||\n          state.status === 'pending' ||\n          isPendingStaticAaveUSDC\n        }\n        onClick={onSubmit}\n        width=\"100%\"\n        mt=\"6\"\n        data-cy=\"withdraw confirm button\"\n      >\n        {(() => {\n          switch (true) {\n            case state.status === 'error':\n              return 'Retry';\n            case state.status === 'pending':\n              return 'Processing...';\n            case state.status === 'success':\n              return 'Done';\n            default:\n              return 'Execute Transaction';\n          }\n        })()}\n      </Button>\n    </div>\n  );\n}\n","import { Alert, AlertIcon, Box, Button, Collapse, Flex, Text } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { TokenIcon } from '@snx-v3/TokenIcon';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { useTokenPrice } from '@snx-v3/useTokenPrice';\nimport { validatePosition } from '@snx-v3/validatePosition';\nimport { wei } from '@synthetixio/wei';\nimport { useContext, useMemo } from 'react';\n\nexport function Claim() {\n  const { network } = useNetwork();\n  const { debtChange, collateralChange, setDebtChange } = useContext(ManagePositionContext);\n  const [params] = useParams<PositionPageSchemaType>();\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: liquidityPosition, isPending: isPendingLiquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  const maxClaimble = useMemo(() => {\n    if (!liquidityPosition || liquidityPosition?.debt.gte(0)) {\n      return ZEROWEI;\n    } else {\n      return wei(liquidityPosition.debt.abs().toBN().mul(99).div(100));\n    }\n  }, [liquidityPosition]);\n\n  const { maxDebt } = validatePosition({\n    issuanceRatioD18: collateralType?.issuanceRatioD18,\n    collateralAmount: liquidityPosition?.collateralAmount,\n    collateralPrice: liquidityPosition?.collateralPrice,\n    debt: liquidityPosition?.debt,\n    collateralChange: collateralChange,\n    debtChange: debtChange,\n  });\n\n  const maxBorrowingCapacity = network?.preset === 'andromeda' ? ZEROWEI : maxDebt.mul(99).div(100);\n  const { data: systemToken } = useSystemToken();\n  const max = useMemo(\n    () => maxClaimble.add(maxBorrowingCapacity),\n    [maxClaimble, maxBorrowingCapacity]\n  );\n\n  const symbol = network?.preset === 'andromeda' ? collateralType?.symbol : systemToken?.symbol;\n  const price = useTokenPrice(symbol);\n\n  return (\n    <Flex flexDirection=\"column\" data-cy=\"claim form\">\n      <Text color=\"gray./50\" fontSize=\"sm\" fontWeight=\"700\" mb=\"3\">\n        {network?.preset === 'andromeda' ? 'Claim Profit' : 'Claim/Borrow'}\n      </Text>\n      <BorderBox display=\"flex\" p={3} mb=\"6\">\n        <Flex alignItems=\"flex-start\" flexDir=\"column\" gap=\"1\">\n          <BorderBox display=\"flex\" py={1.5} px={2.5}>\n            <Text display=\"flex\" gap={2} fontSize=\"16px\" alignItems=\"center\" fontWeight=\"600\">\n              <TokenIcon symbol={symbol} width={16} height={16} />\n              {network?.preset === 'andromeda'\n                ? collateralType?.displaySymbol\n                : systemToken?.symbol}\n            </Text>\n          </BorderBox>\n          <Flex fontSize=\"12px\" gap=\"1\" data-cy=\"credit amount\">\n            {isPendingLiquidityPosition ? 'Credit: ~' : null}\n            {!isPendingLiquidityPosition && maxClaimble ? (\n              <>\n                <Amount prefix=\"Credit: \" value={maxClaimble} />\n                &nbsp;\n                <Text\n                  cursor=\"pointer\"\n                  onClick={() => setDebtChange(maxClaimble)}\n                  color=\"cyan.500\"\n                  fontWeight={700}\n                >\n                  Max\n                </Text>\n              </>\n            ) : null}\n          </Flex>\n        </Flex>\n        <Flex flexDir=\"column\" flexGrow={1}>\n          <NumberInput\n            InputProps={{\n              isRequired: true,\n              'data-cy': 'claim amount input',\n              'data-max': maxClaimble.toString(),\n              type: 'number',\n              min: 0,\n            }}\n            value={debtChange}\n            onChange={(val) => setDebtChange(val)}\n            max={max}\n            min={ZEROWEI}\n          />\n          <Flex fontSize=\"xs\" color=\"whiteAlpha.700\" alignSelf=\"flex-end\" gap=\"1\">\n            {price.gt(0) && <Amount prefix=\"$\" value={debtChange.abs().mul(price)} />}\n          </Flex>\n        </Flex>\n      </BorderBox>\n      <Collapse in={debtChange.lte(0) && maxClaimble.gt(0)} animateOpacity unmountOnExit>\n        <Alert colorScheme=\"green\" mb=\"6\" borderRadius=\"6px\">\n          <AlertIcon />\n          <Text>\n            Positive market performance has credited your position. Claim up to{' '}\n            <Box\n              onClick={() => {\n                if (!maxClaimble) {\n                  return;\n                }\n                setDebtChange(maxClaimble);\n              }}\n              cursor=\"pointer\"\n              as=\"span\"\n              textDecoration=\"underline\"\n            >\n              <Amount value={maxClaimble} prefix=\"$\" />\n            </Box>\n            &nbsp;without accruing debt.\n          </Text>\n        </Alert>\n      </Collapse>\n      <Collapse in={debtChange.gt(0)} animateOpacity unmountOnExit>\n        <Alert status=\"warning\" mb=\"6\" borderRadius=\"6px\">\n          <AlertIcon />\n          <Text>\n            Assets will be available to withdraw 24 hours after your last interaction with this\n            position.\n          </Text>\n        </Alert>\n      </Collapse>\n      <Collapse\n        in={debtChange.lte(0) && network?.preset !== 'andromeda' && maxBorrowingCapacity.gt(0)}\n        animateOpacity\n        unmountOnExit\n      >\n        <Alert colorScheme=\"blue\" mb=\"6\" borderRadius=\"6px\">\n          <AlertIcon />\n          <Text>\n            You can take an interest-free loan up to &nbsp;\n            <Box\n              onClick={() => {\n                if (!maxBorrowingCapacity) {\n                  return;\n                }\n                setDebtChange(maxBorrowingCapacity.add(maxClaimble));\n              }}\n              cursor=\"pointer\"\n              as=\"span\"\n              textDecoration=\"underline\"\n            >\n              <Amount value={maxBorrowingCapacity} prefix=\"$\" />\n            </Box>\n          </Text>\n        </Alert>\n      </Collapse>\n      <Collapse\n        in={\n          !debtChange.gt(max) &&\n          debtChange.gt(0) &&\n          debtChange.gt(maxClaimble) &&\n          network?.preset !== 'andromeda'\n        }\n        animateOpacity\n        unmountOnExit\n      >\n        <Alert colorScheme=\"info\" mb=\"6\" borderRadius=\"6px\">\n          <AlertIcon />\n          <Text>\n            You are about to take a <Amount value={debtChange.sub(maxClaimble)} prefix=\"$\" />{' '}\n            interest-free loan\n          </Text>\n        </Alert>\n      </Collapse>\n      <Button\n        isDisabled={debtChange.lte(0) || debtChange.gt(max)}\n        data-cy=\"claim submit\"\n        type=\"submit\"\n      >\n        {debtChange.lte(0)\n          ? 'Enter Amount'\n          : debtChange.gt(maxClaimble) && network?.preset !== 'andromeda'\n            ? 'Borrow'\n            : 'Claim Profit'}\n      </Button>\n    </Flex>\n  );\n}\n","import { Alert, AlertIcon, AlertProps, Link, Text } from '@chakra-ui/react';\nimport { makeSearch, type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { type Wei } from '@synthetixio/wei';\n\nexport function CollateralAlert({ tokenBalance, ...props }: { tokenBalance: Wei } & AlertProps) {\n  const [, setParams] = useParams<PositionPageSchemaType>();\n  return (\n    <Alert borderLeftColor=\"cyan.500\" borderRadius=\"6px\" {...props}>\n      <AlertIcon color=\"cyan.500\" />\n      <Text color=\"white\" fontFamily=\"heading\" fontSize=\"16px\" lineHeight=\"24px\">\n        You have a {tokenBalance.toString(2)} SNX active staking position on V2.{' '}\n        <Link\n          color=\"cyan.500\"\n          href={`?${makeSearch({ migrate: 'snx' })}`}\n          onClick={(e) => {\n            e.preventDefault();\n            setParams({ migrate: 'snx' });\n          }}\n        >\n          Migrate to V3\n        </Link>\n      </Text>\n    </Alert>\n  );\n}\n","import {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  Button,\n  Collapse,\n  Flex,\n  Text,\n  Tooltip,\n} from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { ChangeStat } from '@snx-v3/ChangeStat';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { currency } from '@snx-v3/format';\nimport { formatNumber } from '@snx-v3/formatters';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { TokenIcon } from '@snx-v3/TokenIcon';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useEthBalance } from '@snx-v3/useEthBalance';\nimport { useIsSynthStataUSDC } from '@snx-v3/useIsSynthStataUSDC';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useStaticAaveUSDC } from '@snx-v3/useStaticAaveUSDC';\nimport { useStaticAaveUSDCRate } from '@snx-v3/useStaticAaveUSDCRate';\nimport { useTokenBalance } from '@snx-v3/useTokenBalance';\nimport { useTokenPrice } from '@snx-v3/useTokenPrice';\nimport { useTransferableSynthetix } from '@snx-v3/useTransferableSynthetix';\nimport { useUSDC } from '@snx-v3/useUSDC';\nimport { WithdrawIncrease } from '@snx-v3/WithdrawIncrease';\nimport { Wei, wei } from '@synthetixio/wei';\nimport React from 'react';\nimport { CollateralAlert } from '../CollateralAlert/CollateralAlert';\nimport { CRatioChangeStat } from '../CRatioBar/CRatioChangeStat';\nimport { TransactionSummary } from '../TransactionSummary/TransactionSummary';\n\nexport function Deposit() {\n  const [params] = useParams<PositionPageSchemaType>();\n\n  const { collateralChange, setCollateralChange } = React.useContext(ManagePositionContext);\n  const { network } = useNetwork();\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: liquidityPosition, isPending: isPendingLiquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n  const { data: transferrableSnx } = useTransferableSynthetix();\n\n  const isStataUSDC = useIsSynthStataUSDC({ tokenAddress: collateralType?.tokenAddress });\n\n  const { data: collateralBalance } = useTokenBalance(collateralType?.tokenAddress);\n\n  const { data: ethBalance } = useEthBalance();\n\n  const price = useTokenPrice(collateralType?.symbol);\n  const { data: stataUSDCRate } = useStaticAaveUSDCRate();\n  const { data: USDCToken } = useUSDC();\n  const { data: usdcBalance } = useTokenBalance(USDCToken?.address);\n  const { data: StaticAaveUSDC } = useStaticAaveUSDC();\n  const { data: stataBalance } = useTokenBalance(StaticAaveUSDC?.address);\n\n  const maxAmount = React.useMemo(() => {\n    if (collateralType?.symbol === 'SNX') {\n      return (\n        ZEROWEI\n          //\n          .add(transferrableSnx ? transferrableSnx.transferable : ZEROWEI)\n          .add(liquidityPosition ? liquidityPosition.availableCollateral : ZEROWEI)\n      );\n    }\n\n    if (collateralType?.symbol === 'WETH') {\n      return (\n        ZEROWEI\n          //\n          .add(ethBalance ?? ZEROWEI)\n          .add(collateralBalance ?? ZEROWEI)\n          .add(liquidityPosition ? liquidityPosition.availableCollateral : ZEROWEI)\n      );\n    }\n\n    if (isStataUSDC) {\n      return (\n        ZEROWEI\n          //\n          .add(\n            usdcBalance && stataUSDCRate\n              ? usdcBalance.div(wei(stataUSDCRate, 27)).mul(97).div(100) // Add 97% of wallet USDC\n              : ZEROWEI\n          )\n          .add(collateralBalance ?? ZEROWEI) // synth stata in wallet\n          .add(stataBalance ?? ZEROWEI) // stata in wallet\n          .add(liquidityPosition ? liquidityPosition.availableCollateral : ZEROWEI) // synth stata deposited\n      );\n    }\n\n    if (collateralType?.symbol === 'USDC' && network?.preset === 'andromeda') {\n      return (\n        ZEROWEI\n          //\n          .add(usdcBalance ?? ZEROWEI)\n          .add(liquidityPosition ? liquidityPosition.availableCollateral : ZEROWEI)\n      );\n    }\n\n    return (\n      ZEROWEI\n        //\n        .add(collateralBalance ?? ZEROWEI)\n        .add(liquidityPosition ? liquidityPosition.availableCollateral : ZEROWEI)\n    );\n  }, [\n    collateralType?.symbol,\n    liquidityPosition,\n    transferrableSnx,\n    collateralBalance,\n    ethBalance,\n    isStataUSDC,\n    usdcBalance,\n    stataBalance,\n    stataUSDCRate,\n    network?.preset,\n  ]);\n\n  const overAvailableBalance = collateralChange.gt(maxAmount);\n\n  return (\n    <Flex flexDirection=\"column\" data-cy=\"deposit and lock collateral form\">\n      <Text color=\"gray./50\" fontSize=\"sm\" fontWeight=\"700\" mb=\"3\">\n        Deposit and Lock Collateral\n      </Text>\n      <BorderBox display=\"flex\" p={3} mb=\"6\">\n        <Flex alignItems=\"flex-start\" flexDir=\"column\" gap=\"1\">\n          <BorderBox display=\"flex\" py={1.5} px={2.5}>\n            <Text display=\"flex\" gap={2} alignItems=\"center\" fontWeight=\"600\">\n              <TokenIcon\n                symbol={collateralType?.symbol ?? params.collateralSymbol}\n                width={16}\n                height={16}\n              />\n              {collateralType?.displaySymbol ?? params.collateralSymbol}\n            </Text>\n          </BorderBox>\n          <Tooltip\n            label={\n              <Flex\n                flexDirection=\"column\"\n                alignItems=\"flex-start\"\n                fontSize=\"xs\"\n                color=\"whiteAlpha.700\"\n              >\n                {isPendingLiquidityPosition ? (\n                  'Unlocked Balance: ~'\n                ) : (\n                  <Amount\n                    prefix=\"Unlocked Balance: \"\n                    value={liquidityPosition?.availableCollateral}\n                  />\n                )}\n\n                {!isStataUSDC ? (\n                  <Amount\n                    prefix=\"Wallet Balance: \"\n                    value={\n                      collateralType?.symbol === 'SNX'\n                        ? transferrableSnx?.transferable\n                        : collateralType?.symbol === 'USDC' &&\n                            network?.preset === 'andromeda' &&\n                            collateralBalance &&\n                            usdcBalance\n                          ? collateralBalance.add(usdcBalance)\n                          : collateralBalance\n                    }\n                  />\n                ) : null}\n\n                {isStataUSDC &&\n                liquidityPosition &&\n                usdcBalance &&\n                stataBalance &&\n                collateralBalance &&\n                stataUSDCRate ? (\n                  <>\n                    <Amount\n                      prefix=\"Static aUSDC Balance: \"\n                      value={\n                        // synth stata deposited is shown above in Unlocked Balance\n                        stataBalance // stata in wallet\n                          .add(collateralBalance) // synth stata in wallet\n                      }\n                    />\n                    <Amount prefix=\"USDC Balance: \" value={usdcBalance} />\n                    <Amount\n                      prefix=\"(~\"\n                      value={usdcBalance.div(wei(stataUSDCRate, 27)).mul(97).div(100)} // Add 97% of wallet USDC\n                      suffix=\" Static aUSDC)\"\n                    />\n                  </>\n                ) : null}\n\n                {collateralType?.symbol === 'WETH' ? (\n                  <Amount prefix=\"ETH Balance: \" value={ethBalance} />\n                ) : null}\n              </Flex>\n            }\n          >\n            <Text fontSize=\"12px\" data-cy=\"balance amount\">\n              {params.accountId && isPendingLiquidityPosition ? 'Balance: ~' : null}\n              {(!params.accountId || (params.accountId && !isPendingLiquidityPosition)) &&\n              maxAmount ? (\n                <>\n                  <Amount prefix=\"Balance: \" value={maxAmount} />\n                  &nbsp;\n                  <Text\n                    as=\"span\"\n                    cursor=\"pointer\"\n                    onClick={() => setCollateralChange(maxAmount)}\n                    color=\"cyan.500\"\n                    fontWeight={700}\n                  >\n                    Max\n                  </Text>\n                </>\n              ) : null}\n            </Text>\n          </Tooltip>\n        </Flex>\n        <Flex flexDir=\"column\" flexGrow={1}>\n          <NumberInput\n            InputProps={{\n              'data-cy': 'deposit amount input',\n              'data-max': maxAmount?.toString(),\n              min: 0,\n            }}\n            value={collateralChange}\n            onChange={(value) => {\n              setCollateralChange(value);\n            }}\n            max={maxAmount}\n            min={ZEROWEI}\n          />\n          <Flex fontSize=\"xs\" color=\"whiteAlpha.700\" alignSelf=\"flex-end\" gap=\"1\">\n            <Amount prefix=\"$\" value={collateralChange.abs().mul(price)} />\n          </Flex>\n        </Flex>\n      </BorderBox>\n\n      {collateralType?.symbol === 'SNX' &&\n      transferrableSnx &&\n      transferrableSnx.collateral &&\n      transferrableSnx.collateral.gt(0) ? (\n        <CollateralAlert mb=\"6\" tokenBalance={transferrableSnx.collateral} />\n      ) : null}\n\n      <Collapse in={collateralChange.gt(0) && !overAvailableBalance} animateOpacity unmountOnExit>\n        <WithdrawIncrease />\n      </Collapse>\n\n      <Collapse in={isStataUSDC} animateOpacity unmountOnExit>\n        <Alert mb={6} status=\"info\" borderRadius=\"6px\">\n          <AlertIcon />\n          <AlertDescription>\n            Deposit USDC and it will automatically wrap into Static aUSDC\n          </AlertDescription>\n        </Alert>\n      </Collapse>\n\n      {collateralType && liquidityPosition ? (\n        <Collapse\n          in={\n            collateralChange.gt(0) &&\n            collateralChange\n              .add(liquidityPosition.collateralAmount)\n              .lt(collateralType.minDelegationD18)\n          }\n          animateOpacity\n          unmountOnExit\n        >\n          <Alert mb={6} status=\"error\" borderRadius=\"6px\">\n            <AlertIcon />\n            <AlertDescription>\n              Your deposit must be{' '}\n              {formatNumber(parseFloat(collateralType.minDelegationD18.toString()))}{' '}\n              {collateralType.symbol} or higher\n            </AlertDescription>\n          </Alert>\n        </Collapse>\n      ) : null}\n\n      <Collapse in={overAvailableBalance} animateOpacity unmountOnExit>\n        <Alert mb={6} status=\"error\" borderRadius=\"6px\">\n          <AlertIcon />\n          <AlertDescription>\n            You cannot Deposit and Lock more Collateral than your Balance amount\n          </AlertDescription>\n        </Alert>\n      </Collapse>\n\n      {collateralType && liquidityPosition ? (\n        <Collapse\n          in={\n            collateralChange.abs().gt(0) &&\n            !overAvailableBalance &&\n            collateralChange\n              .add(liquidityPosition.collateralAmount)\n              .gte(collateralType.minDelegationD18)\n          }\n          animateOpacity\n          unmountOnExit\n        >\n          <TransactionSummary\n            mb={6}\n            items={[\n              ...(liquidityPosition\n                ? [\n                    {\n                      label: `Locked ${collateralType?.symbol}`,\n                      value: (\n                        <ChangeStat\n                          value={liquidityPosition.collateralAmount}\n                          newValue={liquidityPosition.collateralAmount.add(collateralChange)}\n                          formatFn={(val?: Wei) => currency(val ?? ZEROWEI)}\n                          hasChanges={collateralChange.abs().gt(0)}\n                          size=\"sm\"\n                        />\n                      ),\n                    },\n                  ]\n                : []),\n              ...(liquidityPosition && network?.preset !== 'andromeda'\n                ? [\n                    {\n                      label: 'C-ratio',\n                      value: (\n                        <CRatioChangeStat\n                          currentCollateral={liquidityPosition.collateralAmount}\n                          currentDebt={liquidityPosition.debt}\n                          collateralChange={collateralChange}\n                          collateralPrice={liquidityPosition.collateralPrice}\n                          debtChange={ZEROWEI}\n                          size=\"sm\"\n                        />\n                      ),\n                    },\n                  ]\n                : []),\n            ]}\n          />\n        </Collapse>\n      ) : null}\n\n      <Button\n        data-cy=\"deposit submit\"\n        type=\"submit\"\n        isDisabled={\n          !(\n            collateralChange.gt(0) &&\n            !overAvailableBalance &&\n            collateralType &&\n            collateralChange\n              .add(liquidityPosition?.collateralAmount ?? ZEROWEI)\n              .gt(collateralType.minDelegationD18)\n          )\n        }\n      >\n        {collateralChange.lte(0) ? 'Enter Amount' : 'Deposit and Lock Collateral'}\n      </Button>\n    </Flex>\n  );\n}\n","import { useQuery } from '@tanstack/react-query';\nimport { MAINNET, useProviderForChain, useWallet } from '@snx-v3/useBlockchain';\nimport { Wei, wei } from '@synthetixio/wei';\nimport { ethers } from 'ethers';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\n\nexport function useTransferableSynthetix() {\n  const { activeWallet } = useWallet();\n  const provider = useProviderForChain(MAINNET);\n  const { data: snxCollateral } = useCollateralType('SNX', MAINNET);\n\n  const accountAddress = activeWallet?.address;\n  const snxAddress = snxCollateral?.tokenAddress;\n\n  return useQuery({\n    enabled: Boolean(provider && accountAddress && snxAddress),\n    queryKey: [\n      `${MAINNET?.id}-${MAINNET?.preset}`,\n      'TransferableSynthetix',\n      { address: activeWallet?.address },\n    ],\n    queryFn: async function (): Promise<{ transferable: Wei; collateral?: Wei }> {\n      if (!(provider && accountAddress && snxAddress)) {\n        throw 'useTransferableSynthetix should not be enabled';\n      }\n      const contract = new ethers.Contract(\n        snxAddress,\n        [\n          'function balanceOf(address owner) view returns (uint256)',\n          'function transferableSynthetix(address account) view returns (uint256 transferable)',\n          'function collateral(address account) view returns (uint256 collateral)',\n        ],\n        provider\n      );\n      try {\n        // Normal case for SNX case\n        const [transferableSynthetix, collateral] = await Promise.all([\n          contract.transferableSynthetix(accountAddress),\n          contract.collateral(accountAddress),\n        ]);\n\n        return {\n          transferable: wei(transferableSynthetix),\n          collateral: wei(collateral),\n        };\n      } catch (e) {\n        console.error(e);\n        throw e;\n      }\n    },\n  });\n}\n","import { ArrowUpIcon, CheckIcon } from '@chakra-ui/icons';\nimport {\n  Button,\n  CircularProgress,\n  Divider,\n  Flex,\n  Link,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalOverlay,\n  Text,\n} from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { transactionLink } from '@snx-v3/etherscanLink';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { WithdrawIncrease } from '@snx-v3/WithdrawIncrease';\nimport { Wei, wei } from '@synthetixio/wei';\nimport React from 'react';\n\nexport function RepayModal({ txnStatus, txnHash }: { txnStatus: string; txnHash: string | null }) {\n  const { debtChange, setCollateralChange, setDebtChange } =\n    React.useContext(ManagePositionContext);\n  const { data: systemToken } = useSystemToken();\n  const [isOpen, setIsOpen] = React.useState(false);\n  const { network } = useNetwork();\n\n  React.useEffect(() => {\n    if (txnStatus === 'prompting') {\n      setIsOpen(true);\n    }\n    if (txnStatus === 'error') {\n      setIsOpen(false);\n    }\n  }, [txnStatus]);\n\n  // This caching is necessary to keep initial values after success and not reset them to zeroes\n  const [repayAmount, setRepayAmount] = React.useState<Wei | undefined>();\n  React.useEffect(() => {\n    if (debtChange && debtChange.lt(0)) {\n      setRepayAmount(debtChange.abs());\n    }\n  }, [debtChange]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={() => {\n        setCollateralChange(wei(0));\n        setDebtChange(wei(0));\n        setIsOpen(false);\n      }}\n    >\n      <ModalOverlay bg=\"#06061B80\" />\n      <ModalContent\n        bg=\"navy.700\"\n        mt=\"10%\"\n        borderWidth=\"1px\"\n        borderColor=\"gray.900\"\n        minWidth=\"384px\"\n      >\n        <ModalBody data-cy=\"repay dialog\" p={6}>\n          <Text color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n            Repaying Debt\n          </Text>\n\n          <Divider my={4} />\n\n          <Flex\n            position=\"relative\"\n            alignItems=\"center\"\n            gap={4}\n            mb={6}\n            rounded=\"lg\"\n            mt=\"6\"\n            p=\"4\"\n            border=\"2px solid\"\n            transitionProperty=\"border-color\"\n            transitionDuration=\"normal\"\n            borderColor={txnStatus === 'success' ? 'green.500' : 'gray.900'}\n          >\n            <Flex\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              borderRadius=\"100px\"\n              bg={txnStatus === 'success' ? 'green.600' : 'gray.900'}\n              width=\"40px\"\n              height=\"40px\"\n              p={3}\n            >\n              {txnStatus === 'success' ? (\n                <CheckIcon color=\"white\" />\n              ) : (\n                <CircularProgress size=\"25px\" isIndeterminate color=\"gray.700\" />\n              )}\n            </Flex>\n            <Flex\n              flexDirection=\"column\"\n              alignItems=\"space-between\"\n              justifyContent=\"space-between\"\n              ml={2}\n              data-cy=\"claim rewards info\"\n            >\n              {repayAmount ? (\n                <Text fontSize=\"14px\" fontWeight={700} lineHeight=\"20px\" color=\"white\">\n                  <Amount\n                    prefix={txnStatus === 'success' ? 'Repaid ' : 'Repaying '}\n                    value={repayAmount}\n                    suffix={` ${systemToken?.symbol}`}\n                  />\n                </Text>\n              ) : (\n                <Text fontSize=\"12px\" lineHeight=\"16px\" color=\"gray.500\">\n                  Claim your rewards\n                </Text>\n              )}\n            </Flex>\n          </Flex>\n          <WithdrawIncrease />\n          {txnStatus === 'success' ? (\n            <Button\n              mt={5}\n              variant=\"solid\"\n              justifyContent=\"center\"\n              px={3}\n              py={3}\n              width=\"100%\"\n              textAlign=\"center\"\n              onClick={() => setIsOpen(false)}\n            >\n              Done\n            </Button>\n          ) : null}\n          <Flex\n            justifyContent=\"center\"\n            px={3}\n            py={3}\n            mt={6}\n            mb={1}\n            borderTop=\"1px solid\"\n            borderTopColor=\"gray.900\"\n            data-cy=\"transaction hash\"\n          >\n            <Flex\n              as={Link}\n              isExternal\n              variant=\"outline\"\n              href={transactionLink({ chainId: network?.id, txnHash })}\n              fontFamily=\"heading\"\n              color={txnHash ? 'cyan.500' : 'gray.700'}\n              cursor={txnHash ? 'pointer' : 'default'}\n              fontWeight={700}\n              lineHeight=\"20px\"\n              fontSize=\"14px\"\n              target=\"_blank\"\n              mt={3}\n              alignItems=\"center\"\n              gap={1}\n            >\n              {txnHash ? (\n                <>\n                  <Text>View Transaction</Text>\n                  <ArrowUpIcon transform=\"rotate(45deg)\" />\n                </>\n              ) : (\n                <>\n                  <Text>Signing Transaction</Text>\n                </>\n              )}\n            </Flex>\n          </Flex>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import { Button, Flex, Text, useToast } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { ContractError } from '@snx-v3/ContractError';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { TokenIcon } from '@snx-v3/TokenIcon';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useRepay } from '@snx-v3/useRepay';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { useTokenBalance } from '@snx-v3/useTokenBalance';\nimport { wei } from '@synthetixio/wei';\nimport React from 'react';\nimport { RepayModal } from './RepayModal';\n\nexport function Repay() {\n  const [params] = useParams<PositionPageSchemaType>();\n  const { debtChange, setDebtChange } = React.useContext(ManagePositionContext);\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: liquidityPosition, isPending: isPendingLiquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n  const { data: systemToken } = useSystemToken();\n  const { data: systemTokenBalance, isPending: isPendingSystemTokenBalance } = useTokenBalance(\n    systemToken?.address\n  );\n\n  const availableSystemToken =\n    systemTokenBalance && liquidityPosition\n      ? systemTokenBalance.add(liquidityPosition.availableSystemToken)\n      : undefined;\n\n  const {\n    isReady: isReadyRepay,\n    txnState,\n    mutation: mutationRepay,\n  } = useRepay({\n    repayAmount: debtChange && debtChange.lt(0) ? debtChange.abs() : undefined,\n  });\n\n  const toast = useToast({ isClosable: true, duration: 9000 });\n  const errorParser = useContractErrorParser();\n  const onSubmit = React.useCallback(\n    async (e: React.FormEvent) => {\n      e.preventDefault();\n\n      try {\n        toast.closeAll();\n        toast({ title: 'Repaying...', variant: 'left-accent' });\n\n        await mutationRepay.mutateAsync();\n        setDebtChange(ZEROWEI);\n\n        toast.closeAll();\n        toast({\n          title: 'Success',\n          description: 'Your debt has been repaid.',\n          status: 'success',\n          duration: 5000,\n          variant: 'left-accent',\n        });\n      } catch (error: any) {\n        const contractError = errorParser(error);\n        if (contractError) {\n          console.error(new Error(contractError.name), contractError);\n        }\n        toast({\n          title: 'Could not complete repaying',\n          description: contractError ? (\n            <ContractError contractError={contractError} />\n          ) : (\n            'Please try again.'\n          ),\n          status: 'error',\n          variant: 'left-accent',\n          duration: 3_600_000,\n        });\n        throw Error('Repay failed', { cause: error });\n      }\n    },\n    [errorParser, mutationRepay, setDebtChange, toast]\n  );\n\n  return (\n    <Flex flexDirection=\"column\" data-cy=\"repay debt form\" as=\"form\" onSubmit={onSubmit}>\n      <RepayModal txnStatus={txnState.txnStatus} txnHash={txnState.txnHash} />\n      <Text color=\"gray./50\" fontSize=\"sm\" fontWeight=\"700\" mb=\"3\">\n        Repay Debt\n      </Text>\n      <BorderBox display=\"flex\" p={3} mb=\"6\">\n        <Flex alignItems=\"flex-start\" flexDir=\"column\" gap=\"1\">\n          <BorderBox display=\"flex\" py={1.5} px={2.5}>\n            <Text display=\"flex\" gap={2} fontSize=\"16px\" alignItems=\"center\" fontWeight=\"600\">\n              <TokenIcon symbol={systemToken?.symbol} width={16} height={16} />\n              {systemToken?.symbol}\n            </Text>\n          </BorderBox>\n          <Flex fontSize=\"12px\" gap=\"1\">\n            <Flex\n              gap=\"1\"\n              mr=\"3\"\n              alignItems=\"center\"\n              data-cy=\"current debt amount\"\n              whiteSpace=\"nowrap\"\n            >\n              {isPendingLiquidityPosition || isPendingSystemTokenBalance ? '~' : null}\n              {!(isPendingLiquidityPosition || isPendingSystemTokenBalance) &&\n              liquidityPosition &&\n              availableSystemToken ? (\n                <>\n                  {liquidityPosition.debt.abs().gt(availableSystemToken) ? (\n                    <>\n                      <Amount prefix=\"Available: $\" value={availableSystemToken} />\n                      &nbsp;\n                      <Text\n                        as=\"span\"\n                        cursor=\"pointer\"\n                        onClick={(e) => {\n                          e.preventDefault();\n                          setDebtChange(availableSystemToken.mul(-1));\n                        }}\n                        color=\"cyan.500\"\n                        fontWeight={700}\n                      >\n                        Max\n                      </Text>\n                    </>\n                  ) : null}\n                  {availableSystemToken.gt(liquidityPosition.debt.abs()) ? (\n                    <>\n                      <Amount prefix=\"Debt: $\" value={liquidityPosition.debt.abs()} />\n                      &nbsp;\n                      <Text\n                        as=\"span\"\n                        cursor=\"pointer\"\n                        onClick={(e) => {\n                          e.preventDefault();\n                          setDebtChange(liquidityPosition.debt.neg());\n                        }}\n                        color=\"cyan.500\"\n                        fontWeight={700}\n                      >\n                        Max\n                      </Text>\n                    </>\n                  ) : null}\n                </>\n              ) : null}\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex flexDirection=\"column\" flexGrow={1}>\n          <NumberInput\n            InputProps={{\n              isRequired: true,\n              'data-cy': 'repay amount input',\n              type: 'number',\n              min: 0,\n            }}\n            value={debtChange.abs()}\n            onChange={(val) => setDebtChange(val.mul(-1))}\n            max={liquidityPosition ? liquidityPosition.debt : wei(0)}\n            min={ZEROWEI}\n          />\n          <Text fontSize=\"xs\" color=\"whiteAlpha.700\" alignSelf=\"flex-end\">\n            {isPendingLiquidityPosition ? '~' : null}\n            {!isPendingLiquidityPosition &&\n            liquidityPosition &&\n            liquidityPosition.collateralPrice.gt(0) ? (\n              <Amount prefix=\"$\" value={debtChange.abs()} />\n            ) : null}\n          </Text>\n        </Flex>\n      </BorderBox>\n      <Button data-cy=\"repay submit\" type=\"submit\" isDisabled={!isReadyRepay}>\n        {debtChange.eq(0) ? 'Enter Amount' : 'Repay'}\n      </Button>\n    </Flex>\n  );\n}\n","import { ArrowUpIcon, CheckIcon } from '@chakra-ui/icons';\nimport {\n  Button,\n  CircularProgress,\n  Divider,\n  Flex,\n  Link,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalOverlay,\n  Text,\n} from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { transactionLink } from '@snx-v3/etherscanLink';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { WithdrawIncrease } from '@snx-v3/WithdrawIncrease';\nimport { Wei, wei } from '@synthetixio/wei';\nimport React from 'react';\n\nexport function BorrowModal({ txnStatus, txnHash }: { txnStatus: string; txnHash: string | null }) {\n  const { debtChange, setCollateralChange, setDebtChange } =\n    React.useContext(ManagePositionContext);\n  const { data: systemToken } = useSystemToken();\n  const [isOpen, setIsOpen] = React.useState(false);\n  const { network } = useNetwork();\n\n  React.useEffect(() => {\n    if (txnStatus === 'prompting') {\n      setIsOpen(true);\n    }\n    if (txnStatus === 'error') {\n      setIsOpen(false);\n    }\n  }, [txnStatus]);\n\n  // This caching is necessary to keep initial values after success and not reset them to zeroes\n  const [borrowAmount, setBorrowAmount] = React.useState<Wei | undefined>();\n  React.useEffect(() => {\n    if (debtChange && debtChange.gt(0)) {\n      setBorrowAmount(debtChange.abs());\n    }\n  }, [debtChange]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={() => {\n        setCollateralChange(wei(0));\n        setDebtChange(wei(0));\n        setIsOpen(false);\n      }}\n    >\n      <ModalOverlay bg=\"#06061B80\" />\n      <ModalContent\n        bg=\"navy.700\"\n        mt=\"10%\"\n        borderWidth=\"1px\"\n        borderColor=\"gray.900\"\n        minWidth=\"384px\"\n      >\n        <ModalBody data-cy=\"borrow dialog\" p={6}>\n          <Text color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n            Borrowing Debt\n          </Text>\n\n          <Divider my={4} />\n\n          <Flex\n            position=\"relative\"\n            alignItems=\"center\"\n            gap={4}\n            mb={6}\n            rounded=\"lg\"\n            mt=\"6\"\n            p=\"4\"\n            border=\"2px solid\"\n            transitionProperty=\"border-color\"\n            transitionDuration=\"normal\"\n            borderColor={txnStatus === 'success' ? 'green.500' : 'gray.900'}\n          >\n            <Flex\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              borderRadius=\"100px\"\n              bg={txnStatus === 'success' ? 'green.600' : 'gray.900'}\n              width=\"40px\"\n              height=\"40px\"\n              p={3}\n            >\n              {txnStatus === 'success' ? (\n                <CheckIcon color=\"white\" />\n              ) : (\n                <CircularProgress size=\"25px\" isIndeterminate color=\"gray.700\" />\n              )}\n            </Flex>\n            <Flex\n              flexDirection=\"column\"\n              alignItems=\"space-between\"\n              justifyContent=\"space-between\"\n              ml={2}\n              data-cy=\"borrow info\"\n            >\n              {borrowAmount ? (\n                <Text fontSize=\"14px\" fontWeight={700} lineHeight=\"20px\" color=\"white\">\n                  <Amount\n                    prefix={txnStatus === 'success' ? 'Borrowed ' : 'Borrowing '}\n                    value={borrowAmount}\n                    suffix={` ${systemToken?.symbol}`}\n                  />\n                </Text>\n              ) : null}\n            </Flex>\n          </Flex>\n          <WithdrawIncrease />\n          {txnStatus === 'success' ? (\n            <Button\n              mt={5}\n              variant=\"solid\"\n              justifyContent=\"center\"\n              px={3}\n              py={3}\n              width=\"100%\"\n              textAlign=\"center\"\n              onClick={() => setIsOpen(false)}\n            >\n              Done\n            </Button>\n          ) : null}\n          <Flex\n            justifyContent=\"center\"\n            px={3}\n            py={3}\n            mt={6}\n            mb={1}\n            borderTop=\"1px solid\"\n            borderTopColor=\"gray.900\"\n            data-cy=\"transaction hash\"\n          >\n            <Flex\n              as={Link}\n              isExternal\n              variant=\"outline\"\n              href={transactionLink({ chainId: network?.id, txnHash })}\n              fontFamily=\"heading\"\n              color={txnHash ? 'cyan.500' : 'gray.700'}\n              cursor={txnHash ? 'pointer' : 'default'}\n              fontWeight={700}\n              lineHeight=\"20px\"\n              fontSize=\"14px\"\n              target=\"_blank\"\n              mt={3}\n              alignItems=\"center\"\n              gap={1}\n            >\n              {txnHash ? (\n                <>\n                  <Text>View Transaction</Text>\n                  <ArrowUpIcon transform=\"rotate(45deg)\" />\n                </>\n              ) : (\n                <>\n                  <Text>Signing Transaction</Text>\n                </>\n              )}\n            </Flex>\n          </Flex>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import { Button, Flex, Text, useToast } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { ContractError } from '@snx-v3/ContractError';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { TokenIcon } from '@snx-v3/TokenIcon';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useContractErrorParser } from '@snx-v3/useContractErrorParser';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useBorrow } from '@snx-v3/useBorrow';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport React from 'react';\nimport { BorrowModal } from './BorrowModal';\nimport { validatePosition } from '@snx-v3/validatePosition';\nimport { wei } from '@synthetixio/wei';\nimport { useNetwork } from '@snx-v3/useBlockchain';\n\nexport function Borrow() {\n  const [params] = useParams<PositionPageSchemaType>();\n  const { debtChange, setDebtChange } = React.useContext(ManagePositionContext);\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: liquidityPosition, isPending: isPendingLiquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n  const { data: systemToken } = useSystemToken();\n  const { network } = useNetwork();\n\n  const {\n    isReady: isBorrowReady,\n    txnState,\n    mutation: mutationBorrow,\n  } = useBorrow({\n    borrowAmount: debtChange.gt(0) ? debtChange.abs() : undefined,\n  });\n\n  const maxClaimble = React.useMemo(() => {\n    if (!liquidityPosition || liquidityPosition?.debt.gte(0)) {\n      return ZEROWEI;\n    } else {\n      return wei(liquidityPosition.debt.abs().toBN());\n    }\n  }, [liquidityPosition]);\n\n  const { maxDebt } = validatePosition({\n    issuanceRatioD18: collateralType?.issuanceRatioD18,\n    collateralAmount: liquidityPosition?.collateralAmount,\n    collateralPrice: liquidityPosition?.collateralPrice,\n    debt: liquidityPosition?.debt,\n    collateralChange: ZEROWEI,\n    debtChange: debtChange,\n  });\n  const maxBorrowingCapacity = network?.preset === 'andromeda' ? ZEROWEI : maxDebt.mul(99).div(100);\n  const max = React.useMemo(\n    () => maxClaimble.add(maxBorrowingCapacity),\n    [maxClaimble, maxBorrowingCapacity]\n  );\n\n  const toast = useToast({ isClosable: true, duration: 9000 });\n  const errorParser = useContractErrorParser();\n  const onSubmit = React.useCallback(\n    async (e: React.FormEvent) => {\n      e.preventDefault();\n\n      try {\n        toast.closeAll();\n        toast({ title: 'Borrowing...', variant: 'left-accent' });\n\n        await mutationBorrow.mutateAsync();\n        setDebtChange(ZEROWEI);\n\n        toast.closeAll();\n        toast({\n          title: 'Success',\n          description: 'Your debt has been increased.',\n          status: 'success',\n          duration: 5000,\n          variant: 'left-accent',\n        });\n      } catch (error: any) {\n        const contractError = errorParser(error);\n        if (contractError) {\n          console.error(new Error(contractError.name), contractError);\n        }\n        toast({\n          title: 'Could not complete borrowing',\n          description: contractError ? (\n            <ContractError contractError={contractError} />\n          ) : (\n            'Please try again.'\n          ),\n          status: 'error',\n          variant: 'left-accent',\n          duration: 3_600_000,\n        });\n        throw Error('Borrow failed', { cause: error });\n      }\n    },\n    [errorParser, mutationBorrow, setDebtChange, toast]\n  );\n\n  return (\n    <Flex flexDirection=\"column\" data-cy=\"borrow form\" as=\"form\" onSubmit={onSubmit}>\n      <BorrowModal txnStatus={txnState.txnStatus} txnHash={txnState.txnHash} />\n      <Text color=\"gray./50\" fontSize=\"sm\" fontWeight=\"700\" mb=\"3\">\n        Borrow\n      </Text>\n      <BorderBox display=\"flex\" p={3} mb=\"6\">\n        <Flex alignItems=\"flex-start\" flexDir=\"column\" gap=\"1\">\n          <BorderBox display=\"flex\" py={1.5} px={2.5}>\n            <Text display=\"flex\" gap={2} fontSize=\"16px\" alignItems=\"center\" fontWeight=\"600\">\n              <TokenIcon symbol={systemToken?.symbol} width={16} height={16} />\n              {systemToken?.symbol}\n            </Text>\n          </BorderBox>\n          <Flex fontSize=\"12px\" gap=\"1\">\n            <Flex\n              gap=\"1\"\n              mr=\"3\"\n              alignItems=\"center\"\n              data-cy=\"max borrow amount\"\n              whiteSpace=\"nowrap\"\n            >\n              {isPendingLiquidityPosition ? '~' : null}\n              {!isPendingLiquidityPosition && liquidityPosition ? (\n                <>\n                  <Amount prefix=\"Debt: $\" value={max} />\n                  &nbsp;\n                  <Text\n                    as=\"span\"\n                    cursor=\"pointer\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      setDebtChange(max);\n                    }}\n                    color=\"cyan.500\"\n                    fontWeight={700}\n                  >\n                    Max\n                  </Text>\n                </>\n              ) : null}\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex flexDirection=\"column\" flexGrow={1}>\n          <NumberInput\n            InputProps={{\n              isRequired: true,\n              'data-cy': 'borrow amount input',\n              type: 'number',\n              min: 0,\n            }}\n            value={debtChange.abs()}\n            onChange={(val) => setDebtChange(val)}\n            max={max}\n            min={ZEROWEI}\n          />\n          <Text fontSize=\"xs\" color=\"whiteAlpha.700\" alignSelf=\"flex-end\">\n            {isPendingLiquidityPosition ? '~' : null}\n            {!isPendingLiquidityPosition &&\n            liquidityPosition &&\n            liquidityPosition.collateralPrice.gt(0) ? (\n              <Amount prefix=\"$\" value={debtChange.abs()} />\n            ) : null}\n          </Text>\n        </Flex>\n      </BorderBox>\n      <Button\n        data-cy=\"borrow submit\"\n        type=\"submit\"\n        isDisabled={!isBorrowReady || debtChange.gt(max)}\n      >\n        {debtChange.eq(0) ? 'Enter Amount' : 'Borrow'}\n      </Button>\n    </Flex>\n  );\n}\n","import { POOL_ID } from '@snx-v3/constants';\nimport { USDC_BASE_MARKET } from '@snx-v3/isBaseAndromeda';\nimport { initialState, reducer } from '@snx-v3/txnReducer';\nimport { useAccountProxy } from '@snx-v3/useAccountProxy';\nimport { useNetwork, useProvider, useSigner } from '@snx-v3/useBlockchain';\nimport { useCollateralPriceUpdates } from '@snx-v3/useCollateralPriceUpdates';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useDebtRepayer } from '@snx-v3/useDebtRepayer';\nimport { useSpotMarketProxy } from '@snx-v3/useSpotMarketProxy';\nimport { withERC7412 } from '@snx-v3/withERC7412';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport debug from 'debug';\nimport { ethers } from 'ethers';\nimport React from 'react';\n\nconst log = debug('snx:useClearDebt');\n\nexport const useClearDebt = ({\n  accountId,\n  collateralTypeAddress,\n}: {\n  accountId?: string;\n  collateralTypeAddress?: string;\n}) => {\n  const [txnState, dispatch] = React.useReducer(reducer, initialState);\n  const { data: CoreProxy } = useCoreProxy();\n  const { data: SpotMarketProxy } = useSpotMarketProxy();\n  const { data: AccountProxy } = useAccountProxy();\n  const { data: priceUpdateTx } = useCollateralPriceUpdates();\n\n  const signer = useSigner();\n  const { network } = useNetwork();\n  const provider = useProvider();\n\n  const { data: DebtRepayer } = useDebtRepayer();\n\n  const queryClient = useQueryClient();\n  const mutation = useMutation({\n    mutationFn: async () => {\n      if (!signer || !network || !provider) throw new Error('No signer or network');\n      if (\n        !(\n          CoreProxy &&\n          accountId &&\n          collateralTypeAddress &&\n          SpotMarketProxy &&\n          DebtRepayer &&\n          AccountProxy\n        )\n      ) {\n        return;\n      }\n\n      dispatch({ type: 'prompting' });\n\n      const AccountProxyContract = new ethers.Contract(\n        AccountProxy.address,\n        AccountProxy.abi,\n        signer\n      );\n      const DebtRepayerContract = new ethers.Contract(DebtRepayer.address, DebtRepayer.abi, signer);\n\n      const approveAccountTx = AccountProxyContract.populateTransaction.approve(\n        DebtRepayer.address,\n        accountId\n      );\n\n      const depositDebtToRepay = DebtRepayerContract.populateTransaction.depositDebtToRepay(\n        CoreProxy.address,\n        SpotMarketProxy.address,\n        AccountProxy.address,\n        accountId,\n        POOL_ID,\n        collateralTypeAddress,\n        USDC_BASE_MARKET\n      );\n\n      const callsPromise = Promise.all([approveAccountTx, depositDebtToRepay]);\n      const [calls] = await Promise.all([callsPromise]);\n\n      if (priceUpdateTx) {\n        calls.unshift(priceUpdateTx as any);\n      }\n\n      const walletAddress = await signer.getAddress();\n      const { multicallTxn: erc7412Tx, gasLimit } = await withERC7412(\n        provider,\n        network,\n        calls,\n        'useRepay',\n        walletAddress\n      );\n\n      const txn = await signer.sendTransaction({\n        ...erc7412Tx,\n        gasLimit: gasLimit.mul(15).div(10),\n      });\n      log('txn', txn);\n      dispatch({ type: 'pending', payload: { txnHash: txn.hash } });\n\n      const receipt = await provider.waitForTransaction(txn.hash);\n      log('receipt', receipt);\n      dispatch({ type: 'success' });\n      return receipt;\n    },\n\n    onSuccess: async () => {\n      const deployment = `${network?.id}-${network?.preset}`;\n      await Promise.all(\n        [\n          //\n          'PriceUpdates',\n          'LiquidityPosition',\n          'LiquidityPositions',\n          'TokenBalance',\n          'SynthBalances',\n          'EthBalance',\n          'Allowance',\n          'TransferableSynthetix',\n        ].map((key) => queryClient.invalidateQueries({ queryKey: [deployment, key] }))\n      );\n      dispatch({ type: 'success' });\n    },\n\n    onError: (error) => {\n      dispatch({ type: 'error', payload: { error } });\n      throw error;\n    },\n  });\n  return {\n    mutation,\n    txnState,\n    settle: () => dispatch({ type: 'settled' }),\n    isLoading: mutation.isPending,\n    exec: mutation.mutateAsync,\n  };\n};\n","import { CheckIcon } from '@chakra-ui/icons';\nimport { Alert, Button, Flex, Text } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { parseUnits } from '@snx-v3/format';\nimport { useApprove } from '@snx-v3/useApprove';\nimport { useClearDebt } from '@snx-v3/useClearDebt';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useDebtRepayer } from '@snx-v3/useDebtRepayer';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useTokenBalance } from '@snx-v3/useTokenBalance';\nimport { useUSDC } from '@snx-v3/useUSDC';\nimport React from 'react';\n\nexport function RepayAndromedaDebt() {\n  const [params] = useParams<PositionPageSchemaType>();\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: liquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  // Andromeda users pay with USDC\n  const { data: USDC } = useUSDC();\n  const { data: usdcBalance } = useTokenBalance(USDC?.address);\n\n  const {\n    exec: clearDebt,\n    settle: settleRepay,\n    isLoading,\n  } = useClearDebt({\n    accountId: params.accountId,\n    collateralTypeAddress: collateralType?.address,\n  });\n\n  const { data: DebtRepayer } = useDebtRepayer();\n  const {\n    approve,\n    requireApproval,\n    isLoading: approvalLoading,\n  } = useApprove({\n    contractAddress: USDC?.address,\n    // slippage for approval\n    amount: liquidityPosition\n      ? parseUnits(liquidityPosition.debt.toString(), 6).mul(150).div(100)\n      : undefined,\n    spender: DebtRepayer?.address,\n  });\n\n  const submit = React.useCallback(async () => {\n    try {\n      if (requireApproval) {\n        await approve(false);\n      }\n      await clearDebt();\n\n      settleRepay();\n    } catch (error) {}\n  }, [approve, clearDebt, requireApproval, settleRepay]);\n\n  const hasEnoughBalance =\n    liquidityPosition &&\n    usdcBalance &&\n    liquidityPosition.availableSystemToken.add(usdcBalance).gte(liquidityPosition.debt);\n\n  return (\n    <Flex data-cy=\"repay debt form\" flexDirection=\"column\">\n      <Text fontSize=\"md\" fontWeight=\"700\" mb=\"0.5\">\n        Repay USDC\n      </Text>\n      {liquidityPosition ? (\n        <>\n          {liquidityPosition.debt.lte(0) ? (\n            <Alert\n              data-cy=\"repay debt success\"\n              my={2}\n              status=\"success\"\n              rounded=\"base\"\n              borderRadius=\"6px\"\n            >\n              <Flex bg=\"green.500\" p=\"1\" rounded=\"full\" mr=\"2\">\n                <CheckIcon w=\"12px\" h=\"12px\" color=\"green.900\" />\n              </Flex>\n              <Text color=\"white\" fontSize=\"16px\" fontWeight={400}>\n                Your account currently has no debt.\n              </Text>\n            </Alert>\n          ) : null}\n\n          {liquidityPosition.debt.gt(0) ? (\n            <>\n              <Text fontSize=\"sm\" color=\"gray.400\" mb=\"4\">\n                Your account currently has a positive debt. This amount must be paid to initiate\n                collateral withdrawal.\n              </Text>\n              <Button\n                isDisabled={!hasEnoughBalance}\n                isLoading={isLoading || approvalLoading}\n                onClick={submit}\n                data-cy=\"repay debt submit\"\n              >\n                <Amount\n                  prefix=\"Repay USDC $\"\n                  value={liquidityPosition.debt}\n                  suffix={hasEnoughBalance ? '' : ' (Insufficient Balance)'}\n                />\n              </Button>\n            </>\n          ) : null}\n        </>\n      ) : null}\n    </Flex>\n  );\n}\n","import { POOL_ID } from '@snx-v3/constants';\nimport { contractsHash } from '@snx-v3/tsHelpers';\nimport { useNetwork, useProvider } from '@snx-v3/useBlockchain';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { erc7412Call } from '@snx-v3/withERC7412';\nimport { SmallIntSchema, WeiSchema } from '@snx-v3/zod';\nimport { useQuery } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\nimport { z } from 'zod';\n\nexport const MarketConfigurationSchema = z.object({\n  id: SmallIntSchema,\n  weight: WeiSchema,\n  maxDebtShareValue: WeiSchema,\n  isLocked: z.boolean(),\n});\n\nexport const PoolConfigurationSchema = z.object({\n  id: z.number(),\n  markets: MarketConfigurationSchema.array(),\n  isAnyMarketLocked: z.boolean(),\n});\n\nexport const usePoolConfiguration = () => {\n  const { network } = useNetwork();\n  const { data: CoreProxy } = useCoreProxy();\n  const provider = useProvider();\n\n  return useQuery({\n    enabled: Boolean(CoreProxy && network && provider),\n    queryKey: [\n      `${network?.id}-${network?.preset}`,\n      'PoolConfiguration',\n      { contractsHash: contractsHash([CoreProxy]) },\n    ],\n    queryFn: async () => {\n      if (!(CoreProxy && network && provider)) throw 'OMFG';\n      const CoreProxyContract = new ethers.Contract(CoreProxy.address, CoreProxy.abi, provider);\n\n      const marketsData: {\n        marketId: ethers.BigNumber;\n        maxDebtShareValueD18: ethers.BigNumber;\n        weightD18: ethers.BigNumber;\n      }[] = await CoreProxyContract.getPoolConfiguration(ethers.BigNumber.from(POOL_ID));\n      const markets = marketsData.map(({ marketId, maxDebtShareValueD18, weightD18 }) => ({\n        id: marketId,\n        weight: maxDebtShareValueD18,\n        maxDebtShareValue: weightD18,\n      }));\n\n      const allCalls = await Promise.all(\n        markets.map((m) => CoreProxyContract.populateTransaction.isMarketCapacityLocked(m.id))\n      );\n\n      const decoded = await erc7412Call(\n        network,\n        provider,\n        allCalls,\n        (decodedMulticall) => {\n          return decodedMulticall.map(({ returnData }) => {\n            const [isMarketCapacityLocked] = CoreProxyContract.interface.decodeFunctionResult(\n              'isMarketCapacityLocked',\n              returnData\n            );\n            return isMarketCapacityLocked;\n          });\n        },\n        'isMarketCapacityLocked'\n      );\n\n      return PoolConfigurationSchema.parse({\n        id: parseInt(POOL_ID),\n        markets: markets.map((market, i) => ({\n          ...market,\n          isLocked: decoded[i],\n        })),\n        isAnyMarketLocked: decoded.some(Boolean),\n      });\n    },\n  });\n};\n","import {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertTitle,\n  Button,\n  Collapse,\n  Flex,\n  Link,\n  Text,\n} from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { ChangeStat } from '@snx-v3/ChangeStat';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { currency } from '@snx-v3/format';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { TokenIcon } from '@snx-v3/TokenIcon';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { makeSearch, type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { usePoolConfiguration } from '@snx-v3/usePoolConfiguration';\nimport { useWithdrawTimer } from '@snx-v3/useWithdrawTimer';\nimport { validatePosition } from '@snx-v3/validatePosition';\nimport Wei, { wei } from '@synthetixio/wei';\nimport React from 'react';\nimport { CRatioChangeStat } from '../CRatioBar/CRatioChangeStat';\nimport { TransactionSummary } from '../TransactionSummary/TransactionSummary';\n\nexport function Undelegate() {\n  const [params, setParams] = useParams<PositionPageSchemaType>();\n  const { collateralChange, debtChange, setCollateralChange } =\n    React.useContext(ManagePositionContext);\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n\n  const poolConfiguration = usePoolConfiguration();\n  const { network } = useNetwork();\n\n  const { data: liquidityPosition, isPending: isPendingLiquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  const collateralPrice = liquidityPosition?.collateralPrice;\n\n  const { newDebt } = validatePosition({\n    issuanceRatioD18: collateralType?.issuanceRatioD18,\n    collateralAmount: liquidityPosition?.collateralAmount,\n    collateralPrice,\n    debt: liquidityPosition?.debt,\n    collateralChange: collateralChange,\n    debtChange: debtChange,\n  });\n\n  const maxWithdrawable = liquidityPosition?.availableCollateral;\n\n  // To get the max withdrawable collateral we look at the new debt and the issuance ratio.\n  // This gives us the amount in dollar. We then divide by the collateral price.\n  // To avoid the transaction failing due to small price deviations, we also apply a 2% buffer by multiplying with 0.98\n  const max = (() => {\n    if (!liquidityPosition || !collateralType) {\n      return undefined;\n    }\n    const { collateralAmount, collateralValue } = liquidityPosition;\n\n    if (network?.preset === 'andromeda') {\n      return collateralAmount;\n    }\n\n    // if debt is negative it's actually credit, which means we can undelegate all collateral\n    if (newDebt.lte(0)) return collateralAmount;\n\n    const minCollateralRequired = newDebt.mul(collateralType.liquidationRatioD18);\n\n    if (collateralValue.lt(minCollateralRequired))\n      // If you're below issuance ratio, you can't withdraw anything\n      return wei(0);\n\n    const maxWithdrawable = collateralValue.sub(minCollateralRequired).mul(0.98);\n\n    return Wei.min(collateralAmount, maxWithdrawable);\n  })();\n\n  const isLoadingRequiredData = poolConfiguration.isLoading || !max;\n  const isAnyMarketLocked = poolConfiguration.data?.isAnyMarketLocked;\n\n  const { minutes, hours, isRunning } = useWithdrawTimer(params.accountId);\n\n  const leftoverCollateral = liquidityPosition?.collateralAmount?.add(collateralChange) || wei(0);\n  const isValidLeftover =\n    leftoverCollateral.gte(collateralType?.minDelegationD18 || wei(0)) || leftoverCollateral.eq(0);\n\n  const isInputDisabled = isAnyMarketLocked;\n  const overAvailableBalance = max ? collateralChange.abs().gt(max) : false;\n  const isSubmitDisabled =\n    isLoadingRequiredData ||\n    isAnyMarketLocked ||\n    collateralChange.gte(0) ||\n    !isValidLeftover ||\n    overAvailableBalance;\n\n  return (\n    <Flex flexDirection=\"column\" data-cy=\"unlock collateral form\">\n      <Text color=\"gray./50\" fontSize=\"sm\" fontWeight=\"700\" mb=\"3\">\n        Unlock Collateral\n      </Text>\n\n      <BorderBox display=\"flex\" p={3} mb=\"6\">\n        <Flex alignItems=\"flex-start\" flexDir=\"column\" gap=\"1\">\n          <BorderBox display=\"flex\" py={1.5} px={2.5}>\n            <Text display=\"flex\" gap={2} alignItems=\"center\" fontWeight=\"600\">\n              <TokenIcon\n                symbol={collateralType?.symbol ?? params.collateralSymbol}\n                width={16}\n                height={16}\n              />\n              {collateralType?.displaySymbol ?? params.collateralSymbol}\n            </Text>\n          </BorderBox>\n          <Text fontSize=\"12px\" whiteSpace=\"nowrap\" data-cy=\"locked amount\">\n            {isPendingLiquidityPosition ? 'Locked: ~' : null}\n            {!isPendingLiquidityPosition && max ? (\n              <>\n                <Amount prefix=\"Locked: \" value={max} />\n                &nbsp;\n                <Text\n                  as=\"span\"\n                  cursor=\"pointer\"\n                  onClick={() => setCollateralChange(max.mul(-1))}\n                  color=\"cyan.500\"\n                  fontWeight={700}\n                >\n                  Max\n                </Text>\n              </>\n            ) : null}\n          </Text>\n        </Flex>\n        <Flex flexDir=\"column\" flexGrow={1}>\n          <NumberInput\n            InputProps={{\n              isDisabled: isInputDisabled,\n              isRequired: true,\n              'data-cy': 'undelegate amount input',\n              type: 'number',\n              min: 0,\n            }}\n            value={collateralChange.abs()}\n            onChange={(val) => setCollateralChange(val.mul(-1))}\n            max={max}\n            min={ZEROWEI}\n          />\n          <Flex fontSize=\"xs\" color=\"whiteAlpha.700\" alignSelf=\"flex-end\" gap=\"1\">\n            {isPendingLiquidityPosition ? '~' : null}\n            {!isPendingLiquidityPosition &&\n            liquidityPosition &&\n            liquidityPosition.collateralPrice.gt(0) ? (\n              <Amount\n                prefix=\"$\"\n                value={collateralChange.abs().mul(liquidityPosition.collateralPrice)}\n              />\n            ) : null}\n          </Flex>\n        </Flex>\n      </BorderBox>\n\n      <Collapse in={isInputDisabled} animateOpacity unmountOnExit>\n        <Alert mb={6} status=\"warning\" borderRadius=\"6px\">\n          <AlertIcon />\n          <Flex direction=\"column\">\n            <AlertTitle>Credit capacity reached</AlertTitle>\n            <AlertDescription>\n              One of the markets has reached its credit capacity and is currently in a locked state.\n              You cannot unlock collateral from the pool at this time.\n            </AlertDescription>\n          </Flex>\n        </Alert>\n      </Collapse>\n\n      {collateralType ? (\n        <Collapse in={!isValidLeftover && !collateralChange.eq(0)} animateOpacity unmountOnExit>\n          <Alert mb={6} status=\"info\" borderRadius=\"6px\">\n            <AlertIcon />\n            <Flex direction=\"column\">\n              <AlertTitle>\n                The minimal locked amount is{' '}\n                <Amount\n                  value={collateralType.minDelegationD18}\n                  suffix={` ${collateralType?.displaySymbol ?? params.collateralSymbol}`}\n                />\n              </AlertTitle>\n              <AlertDescription>\n                You can close your position by removing all the collateral.\n              </AlertDescription>\n            </Flex>\n          </Alert>\n        </Collapse>\n      ) : null}\n\n      <Collapse\n        in={collateralChange.abs().gt(0) && isValidLeftover && isRunning}\n        animateOpacity\n        unmountOnExit\n      >\n        <Alert status=\"warning\" mb=\"6\">\n          <AlertIcon />\n          <Text>\n            You will be able to withdraw assets in {hours}H{minutes}M. Any account activity will\n            reset this timer to 24H.\n          </Text>\n        </Alert>\n      </Collapse>\n\n      {liquidityPosition ? (\n        <Collapse\n          in={\n            collateralChange.abs().gt(0) && isValidLeftover && !isRunning && maxWithdrawable?.gt(0)\n          }\n          animateOpacity\n          unmountOnExit\n        >\n          <Alert status=\"info\" mb=\"6\" borderRadius=\"6px\">\n            <AlertIcon />\n            <Text>\n              You already have{' '}\n              <Amount\n                value={maxWithdrawable}\n                suffix={` ${liquidityPosition.collateralType.symbol}`}\n              />{' '}\n              unlocked. &nbsp;\n              <Link\n                href={`?${makeSearch({\n                  page: 'position',\n                  collateralSymbol: params.collateralSymbol,\n                  manageAction: 'withdraw',\n                  accountId: params.accountId,\n                })}`}\n                onClick={(e) => {\n                  e.preventDefault();\n                  setParams({\n                    page: 'position',\n                    collateralSymbol: params.collateralSymbol,\n                    manageAction: 'withdraw',\n                    accountId: params.accountId,\n                  });\n                }}\n                textDecoration=\"underline\"\n              >\n                Withdraw\n              </Link>{' '}\n              before unlocking again as it will restart the 24h withdrawal timeout.\n            </Text>\n          </Alert>\n        </Collapse>\n      ) : null}\n\n      {network?.preset === 'andromeda' && liquidityPosition ? (\n        <Collapse in={liquidityPosition.debt.gt(0)} animateOpacity unmountOnExit>\n          <Alert status=\"error\" mb=\"6\" borderRadius=\"6px\">\n            <AlertIcon />\n            <Text>\n              To unlock this amount, you need to{' '}\n              <Link\n                href={`?${makeSearch({\n                  page: 'position',\n                  collateralSymbol: params.collateralSymbol,\n                  manageAction: 'repay',\n                  accountId: params.accountId,\n                })}`}\n                onClick={(e) => {\n                  e.preventDefault();\n                  setParams({\n                    page: 'position',\n                    collateralSymbol: params.collateralSymbol,\n                    manageAction: 'repay',\n                    accountId: params.accountId,\n                  });\n                }}\n                textDecoration=\"underline\"\n              >\n                <Amount\n                  prefix=\" repay \"\n                  value={liquidityPosition.debt}\n                  suffix={` ${liquidityPosition.collateralType.symbol}`}\n                />\n              </Link>{' '}\n              to your position\n            </Text>\n          </Alert>\n        </Collapse>\n      ) : null}\n\n      {liquidityPosition ? (\n        <Collapse in={collateralChange.abs().gt(0)} animateOpacity unmountOnExit>\n          <TransactionSummary\n            mb={6}\n            items={[\n              {\n                label: `Locked ${collateralType?.displaySymbol ?? params.collateralSymbol}`,\n                value: (\n                  <ChangeStat\n                    value={liquidityPosition.collateralAmount || ZEROWEI}\n                    newValue={leftoverCollateral}\n                    formatFn={(val?: Wei) => currency(val ?? ZEROWEI)}\n                    hasChanges={collateralChange.abs().gt(0)}\n                    size=\"sm\"\n                  />\n                ),\n              },\n              ...(network?.preset !== 'andromeda'\n                ? [\n                    {\n                      label: 'C-ratio',\n                      value: (\n                        <CRatioChangeStat\n                          currentCollateral={liquidityPosition.collateralAmount}\n                          currentDebt={liquidityPosition.debt}\n                          collateralChange={collateralChange}\n                          collateralPrice={liquidityPosition.collateralPrice}\n                          debtChange={ZEROWEI}\n                          size=\"sm\"\n                        />\n                      ),\n                    },\n                  ]\n                : []),\n            ]}\n          />\n        </Collapse>\n      ) : null}\n\n      <Button data-cy=\"undelegate submit\" type=\"submit\" isDisabled={isSubmitDisabled}>\n        {collateralChange.gte(0) ? 'Enter Amount' : 'Unlock Collateral'}\n      </Button>\n    </Flex>\n  );\n}\n","import { Alert, AlertIcon, Button, Collapse, Flex, Text } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { NumberInput } from '@snx-v3/NumberInput';\nimport { TokenIcon } from '@snx-v3/TokenIcon';\nimport { useAccountCollateralUnlockDate } from '@snx-v3/useAccountCollateralUnlockDate';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useSystemToken } from '@snx-v3/useSystemToken';\nimport { useWithdrawTimer } from '@snx-v3/useWithdrawTimer';\nimport React from 'react';\n\nexport function Withdraw({ isDebtWithdrawal = false }: { isDebtWithdrawal?: boolean }) {\n  const [params] = useParams<PositionPageSchemaType>();\n  const { setWithdrawAmount, withdrawAmount } = React.useContext(ManagePositionContext);\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { network } = useNetwork();\n\n  const { data: liquidityPosition, isPending: isPendingLiquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  const { data: systemToken } = useSystemToken();\n\n  const { data: accountCollateralUnlockDate, isLoading: isLoadingDate } =\n    useAccountCollateralUnlockDate({ accountId: params.accountId });\n\n  const symbol =\n    network?.preset === 'andromeda'\n      ? 'USDC'\n      : isDebtWithdrawal\n        ? systemToken?.symbol\n        : collateralType?.symbol;\n  const { minutes, hours, isRunning } = useWithdrawTimer(params.accountId);\n  const unlockDate = !isLoadingDate ? accountCollateralUnlockDate : null;\n\n  const maxWithdrawable = React.useMemo(() => {\n    if (isDebtWithdrawal && liquidityPosition) {\n      return liquidityPosition.availableSystemToken;\n    }\n    if (!isDebtWithdrawal && liquidityPosition) {\n      return network?.preset === 'andromeda'\n        ? liquidityPosition.availableCollateral.add(liquidityPosition.availableSystemToken)\n        : liquidityPosition.availableCollateral;\n    }\n  }, [isDebtWithdrawal, liquidityPosition, network]);\n\n  return (\n    <Flex flexDirection=\"column\" data-cy=\"withdraw form\">\n      <Text color=\"gray./50\" fontSize=\"sm\" fontWeight=\"700\" mb=\"3\">\n        {isDebtWithdrawal ? 'Withdraw' : 'Withdraw Collateral'}\n      </Text>\n      <BorderBox display=\"flex\" p={3} mb=\"6\">\n        <Flex alignItems=\"flex-start\" flexDir=\"column\" gap=\"1\">\n          <BorderBox display=\"flex\" py={1.5} px={2.5}>\n            <Text display=\"flex\" gap={2} fontSize=\"16px\" alignItems=\"center\" fontWeight=\"600\">\n              <TokenIcon symbol={symbol} width={16} height={16} />\n              {isDebtWithdrawal ? systemToken?.symbol : collateralType?.displaySymbol}\n            </Text>\n          </BorderBox>\n          <Text fontSize=\"12px\" whiteSpace=\"nowrap\" data-cy=\"withdraw amount\">\n            {isDebtWithdrawal && isPendingLiquidityPosition ? 'Available: ~' : null}\n            {!isDebtWithdrawal && isPendingLiquidityPosition ? 'Unlocked: ~' : null}\n            {maxWithdrawable ? (\n              <>\n                <Amount\n                  prefix={isDebtWithdrawal ? 'Available: ' : 'Unlocked: '}\n                  value={maxWithdrawable}\n                />\n                &nbsp;\n                <Text\n                  as=\"span\"\n                  cursor=\"pointer\"\n                  onClick={() => setWithdrawAmount(maxWithdrawable)}\n                  color=\"cyan.500\"\n                  fontWeight={700}\n                >\n                  Max\n                </Text>\n              </>\n            ) : null}\n          </Text>\n        </Flex>\n        <Flex flexDir=\"column\" flexGrow={1}>\n          <NumberInput\n            InputProps={{\n              isRequired: true,\n              'data-cy': 'withdraw amount input',\n              type: 'number',\n              min: 0,\n            }}\n            value={withdrawAmount}\n            onChange={(val) => setWithdrawAmount(val)}\n            max={maxWithdrawable}\n            min={ZEROWEI}\n          />\n          <Flex fontSize=\"xs\" color=\"whiteAlpha.700\" alignSelf=\"flex-end\" gap=\"1\">\n            {isPendingLiquidityPosition ? '~' : null}\n            {!isPendingLiquidityPosition &&\n            liquidityPosition &&\n            liquidityPosition.collateralPrice.gt(0) ? (\n              <Amount\n                prefix=\"$\"\n                value={withdrawAmount.abs().mul(liquidityPosition.collateralPrice)}\n              />\n            ) : null}\n          </Flex>\n        </Flex>\n      </BorderBox>\n\n      <Collapse\n        in={maxWithdrawable && maxWithdrawable.gt(0) && isRunning}\n        animateOpacity\n        unmountOnExit\n      >\n        <Alert status=\"warning\" mb=\"6\" borderRadius=\"6px\">\n          <AlertIcon />\n          <Text>\n            You will be able to withdraw assets in {hours}H{minutes}M. Any account activity will\n            reset this timer to 24H.\n          </Text>\n        </Alert>\n      </Collapse>\n\n      <Collapse\n        in={maxWithdrawable && maxWithdrawable.gt(0) && !isRunning}\n        animateOpacity\n        unmountOnExit\n      >\n        <Alert status=\"success\" mb=\"6\" borderRadius=\"6px\">\n          <AlertIcon />\n          <Amount prefix=\"You can now withdraw \" value={maxWithdrawable} suffix={` ${symbol}`} />\n        </Alert>\n      </Collapse>\n\n      <Collapse\n        in={maxWithdrawable && withdrawAmount.gt(maxWithdrawable)}\n        animateOpacity\n        unmountOnExit\n      >\n        <Alert colorScheme=\"red\" mb=\"6\" borderRadius=\"6px\">\n          <AlertIcon />\n          <Text>\n            You cannot Withdraw more {!isDebtWithdrawal ? 'Collateral' : ''} than your Unlocked\n            Balance\n          </Text>\n        </Alert>\n      </Collapse>\n\n      <Button\n        isDisabled={\n          withdrawAmount.lte(0) ||\n          isRunning ||\n          !unlockDate ||\n          (maxWithdrawable && withdrawAmount.gt(maxWithdrawable))\n        }\n        data-cy=\"withdraw submit\"\n        type=\"submit\"\n      >\n        {withdrawAmount.gt(0) ? 'Withdraw' : 'Enter Amount'}\n      </Button>\n    </Flex>\n  );\n}\n","import { ManageActionType } from '@snx-v3/useParams';\nimport React from 'react';\n\ntype ManageActionButtonType = {\n  title: string;\n  link: ManageActionType;\n  icon: (fill: 'white' | 'cyan') => React.ReactElement;\n};\n\nexport const COLLATERALACTIONS: ManageActionButtonType[] = [\n  {\n    title: 'Deposit and Lock',\n    link: 'deposit',\n    icon: (fill) => (\n      <svg\n        width=\"37\"\n        height=\"36\"\n        viewBox=\"0 0 37 36\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M6.875 18C6.875 15.7218 8.72183 13.875 11 13.875H26C28.2782 13.875 30.125 15.7218 30.125 18V27C30.125 29.2782 28.2782 31.125 26 31.125H11C8.72183 31.125 6.875 29.2782 6.875 27V18ZM11 16.125C9.96447 16.125 9.125 16.9645 9.125 18V27C9.125 28.0355 9.96447 28.875 11 28.875H26C27.0355 28.875 27.875 28.0355 27.875 27V18C27.875 16.9645 27.0355 16.125 26 16.125H11Z\"\n          fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M11.375 12C11.375 8.06497 14.565 4.875 18.5 4.875C22.435 4.875 25.625 8.06497 25.625 12V16.125H11.375V12ZM18.5 7.125C15.8076 7.125 13.625 9.30761 13.625 12V13.875H23.375V12C23.375 9.30761 21.1924 7.125 18.5 7.125Z\"\n          fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n        />\n      </svg>\n    ),\n  },\n  {\n    title: 'Unlock',\n    link: 'undelegate',\n    icon: (fill: 'white' | 'cyan') => (\n      <svg\n        width=\"32\"\n        height=\"28\"\n        viewBox=\"0 0 32 28\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M0.375 14C0.375 11.7218 2.22183 9.875 4.5 9.875H19.5C21.7782 9.875 23.625 11.7218 23.625 14V23C23.625 25.2782 21.7782 27.125 19.5 27.125H4.5C2.22183 27.125 0.375 25.2782 0.375 23V14ZM4.5 12.125C3.46447 12.125 2.625 12.9645 2.625 14V23C2.625 24.0355 3.46447 24.875 4.5 24.875H19.5C20.5355 24.875 21.375 24.0355 21.375 23V14C21.375 12.9645 20.5355 12.125 19.5 12.125H4.5Z\"\n          fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M16.875 8C16.875 4.06497 20.065 0.875 24 0.875C27.935 0.875 31.125 4.06497 31.125 8V11H28.875V8C28.875 5.30761 26.6924 3.125 24 3.125C21.3076 3.125 19.125 5.30761 19.125 8V11H16.875V8Z\"\n          fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n        />\n      </svg>\n    ),\n  },\n  {\n    title: 'Withdraw',\n    link: 'withdraw',\n    icon: (fill: 'white' | 'cyan') => (\n      <svg\n        width=\"37\"\n        height=\"36\"\n        viewBox=\"0 0 37 36\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M6.60986 29.7349C6.60986 29.942 6.77776 30.1099 6.98486 30.1099L28.7349 30.1099C28.942 30.1099 29.1099 29.942 29.1099 29.7349L29.1099 21.1099L31.3599 21.1099L31.3599 29.7349C31.3599 31.1846 30.1846 32.3599 28.7349 32.3599L6.98486 32.3599C5.53512 32.3599 4.35986 31.1846 4.35986 29.7349L4.35986 21.1099L6.60986 21.1099L6.60986 22.2348L6.60986 29.7349Z\"\n          fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n        />\n        <path\n          d=\"M18.9849 26.7349L16.7349 26.7349L16.7349 7.94653L12.3555 12.3259L10.8728 10.6273L17.8599 3.64019L24.8469 10.6273L23.3643 12.3259L18.9849 7.94653L18.9849 26.7349Z\"\n          fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n        />\n      </svg>\n    ),\n  },\n];\n\nexport const DEBTACTIONS = (isBase: boolean): ManageActionButtonType[] => {\n  const actions: ManageActionButtonType[] = [\n    {\n      title: isBase ? 'Claim' : 'Claim/Borrow',\n      link: 'claim',\n      icon: (fill) => (\n        <svg\n          width=\"37\"\n          height=\"36\"\n          viewBox=\"0 0 37 36\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <g clipPath=\"url(#clip0_11314_79978)\">\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M16.0903 8.50714C9.39782 8.50714 3.97247 13.9325 3.97247 20.625C3.97247 27.3175 9.39782 32.7429 16.0903 32.7429C22.7828 32.7429 28.2082 27.3175 28.2082 20.625C28.2082 13.9325 22.7828 8.50714 16.0903 8.50714ZM1.46533 20.625C1.46533 12.5478 8.01317 6 16.0903 6C24.1675 6 30.7153 12.5478 30.7153 20.625C30.7153 28.7022 24.1675 35.25 16.0903 35.25C8.01317 35.25 1.46533 28.7022 1.46533 20.625Z\"\n              fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n            />\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M14.5792 17.9742C14.589 17.5066 14.7225 17.3161 14.8124 17.2254C14.931 17.1058 15.1602 16.9772 15.5845 16.9097C16.4687 16.769 17.6646 16.9739 18.6515 17.2338L19.8638 17.553L20.5023 15.1286L19.29 14.8093C18.2491 14.5351 16.6222 14.2059 15.1905 14.4337C14.4569 14.5505 13.6548 14.8318 13.0317 15.4605C12.3834 16.1147 12.0715 16.9997 12.0715 18.0296V18.0771L12.0751 18.1244C12.1655 19.316 12.8745 20.108 13.6098 20.6288C14.284 21.1062 15.1197 21.4539 15.7947 21.7348C15.8202 21.7454 15.8454 21.7559 15.8704 21.7664C16.6329 22.084 17.1988 22.3286 17.591 22.6158C17.9362 22.8687 17.9707 23.0216 17.9707 23.1567C17.9707 23.6803 17.8165 23.8884 17.6957 23.9976C17.5342 24.1438 17.2307 24.2862 16.7131 24.3507C15.6587 24.482 14.289 24.2239 13.2807 23.9538L12.0698 23.6296L11.4212 26.0513L12.6321 26.3756C13.6977 26.661 15.462 27.0331 17.023 26.8386C17.8131 26.7402 18.6878 26.4808 19.3774 25.8572C20.1078 25.1967 20.4778 24.2672 20.4778 23.1567C20.4778 21.9459 19.8008 21.1267 19.0724 20.5932C18.4094 20.1076 17.5679 19.7573 16.8907 19.4754C16.8718 19.4675 16.8531 19.4597 16.8345 19.452C16.0731 19.1348 15.4848 18.8844 15.0588 18.5828C14.6976 18.3269 14.602 18.1399 14.5792 17.9742Z\"\n              fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n            />\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M16.0903 25.0125C16.7827 25.0125 17.3439 25.5737 17.3439 26.2661V29.4H14.8368V26.2661C14.8368 25.5737 15.398 25.0125 16.0903 25.0125Z\"\n              fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n            />\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M17.3439 11.85V14.9839C17.3439 15.6763 16.7827 16.2375 16.0903 16.2375C15.398 16.2375 14.8368 15.6763 14.8368 14.9839V11.85H17.3439Z\"\n              fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n            />\n            <path\n              d=\"M30.5 4.5V1.5H33.5V4.5H36.5V7.5H33.5V10.5H30.5V7.5H27.5V4.5H30.5Z\"\n              fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n            />\n          </g>\n          <defs>\n            <clipPath id=\"clip0_11314_79978\">\n              <rect\n                width=\"36\"\n                height=\"36\"\n                fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n                transform=\"translate(0.5)\"\n              />\n            </clipPath>\n          </defs>\n        </svg>\n      ),\n    },\n    {\n      title: 'Repay Debt',\n      link: 'repay',\n      icon: (fill) => (\n        <svg\n          width=\"37\"\n          height=\"36\"\n          viewBox=\"0 0 37 36\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <g clipPath=\"url(#clip0_11314_79981)\">\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M16.0903 8.50714C9.39782 8.50714 3.97247 13.9325 3.97247 20.625C3.97247 27.3175 9.39782 32.7429 16.0903 32.7429C22.7828 32.7429 28.2082 27.3175 28.2082 20.625C28.2082 13.9325 22.7828 8.50714 16.0903 8.50714ZM1.46533 20.625C1.46533 12.5478 8.01317 6 16.0903 6C24.1675 6 30.7153 12.5478 30.7153 20.625C30.7153 28.7022 24.1675 35.25 16.0903 35.25C8.01317 35.25 1.46533 28.7022 1.46533 20.625Z\"\n              fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n            />\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M14.5792 17.9742C14.589 17.5066 14.7225 17.3161 14.8124 17.2254C14.931 17.1058 15.1602 16.9772 15.5845 16.9097C16.4687 16.769 17.6646 16.9739 18.6515 17.2338L19.8638 17.553L20.5023 15.1286L19.29 14.8093C18.2491 14.5351 16.6222 14.2059 15.1905 14.4337C14.4569 14.5505 13.6548 14.8318 13.0317 15.4605C12.3834 16.1147 12.0715 16.9997 12.0715 18.0296V18.0771L12.0751 18.1244C12.1655 19.316 12.8745 20.108 13.6098 20.6288C14.284 21.1062 15.1197 21.4539 15.7947 21.7348C15.8202 21.7454 15.8454 21.7559 15.8704 21.7664C16.6329 22.084 17.1988 22.3286 17.591 22.6158C17.9362 22.8687 17.9707 23.0216 17.9707 23.1567C17.9707 23.6803 17.8165 23.8884 17.6957 23.9976C17.5342 24.1438 17.2307 24.2862 16.7131 24.3507C15.6587 24.482 14.289 24.2239 13.2807 23.9538L12.0698 23.6296L11.4212 26.0513L12.6321 26.3756C13.6977 26.661 15.462 27.0331 17.023 26.8386C17.8131 26.7402 18.6878 26.4808 19.3774 25.8572C20.1078 25.1967 20.4778 24.2672 20.4778 23.1567C20.4778 21.9459 19.8008 21.1267 19.0724 20.5932C18.4094 20.1076 17.5679 19.7573 16.8907 19.4754C16.8718 19.4675 16.8531 19.4597 16.8345 19.452C16.0731 19.1348 15.4848 18.8844 15.0588 18.5828C14.6976 18.3269 14.602 18.1399 14.5792 17.9742Z\"\n              fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n            />\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M16.0903 25.0125C16.7827 25.0125 17.3439 25.5737 17.3439 26.2661V29.4H14.8368V26.2661C14.8368 25.5737 15.398 25.0125 16.0903 25.0125Z\"\n              fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n            />\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M17.3439 11.85V14.9839C17.3439 15.6763 16.7827 16.2375 16.0903 16.2375C15.398 16.2375 14.8368 15.6763 14.8368 14.9839V11.85H17.3439Z\"\n              fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n            />\n            <path\n              d=\"M30.5 4.5H33.5H36.5V7.5H33.5H30.5H27.5V4.5H30.5Z\"\n              fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n            />\n          </g>\n          <defs>\n            <clipPath id=\"clip0_11314_79981\">\n              <rect\n                width=\"36\"\n                height=\"36\"\n                fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n                transform=\"translate(0.5)\"\n              />\n            </clipPath>\n          </defs>\n        </svg>\n      ),\n    },\n  ];\n\n  if (isBase) {\n    return actions;\n  }\n\n  return [\n    ...actions,\n    {\n      title: 'Withdraw',\n      link: 'withdraw-debt',\n      icon: (fill) => (\n        <svg\n          width=\"37\"\n          height=\"36\"\n          viewBox=\"0 0 37 36\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M6.60986 29.7349C6.60986 29.942 6.77776 30.1099 6.98486 30.1099L28.7349 30.1099C28.942 30.1099 29.1099 29.942 29.1099 29.7349L29.1099 21.1099L31.3599 21.1099L31.3599 29.7349C31.3599 31.1846 30.1846 32.3599 28.7349 32.3599L6.98486 32.3599C5.53512 32.3599 4.35986 31.1846 4.35986 29.7349L4.35986 21.1099L6.60986 21.1099L6.60986 22.2348L6.60986 29.7349Z\"\n            fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n          />\n          <path\n            d=\"M18.9849 26.7349L16.7349 26.7349L16.7349 7.94653L12.3555 12.3259L10.8728 10.6273L17.8599 3.64019L24.8469 10.6273L23.3643 12.3259L18.9849 7.94653L18.9849 26.7349Z\"\n            fill={fill === 'cyan' ? '#00D1FF' : 'white'}\n          />\n        </svg>\n      ),\n    },\n  ];\n};\n","import { Box, Flex, Link, Tab, TabList, TabPanel, TabPanels, Tabs, Text } from '@chakra-ui/react';\nimport { ClaimModal } from '@snx-v3/ClaimModal';\nimport { DepositModal, StataDepositModal } from '@snx-v3/DepositModal';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { RepayModal } from '@snx-v3/RepayModal';\nimport { UndelegateModal } from '@snx-v3/UndelegateModal';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useIsSynthStataUSDC } from '@snx-v3/useIsSynthStataUSDC';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport {\n  makeSearch,\n  ManageActionSchema,\n  ManageActionType,\n  type PositionPageSchemaType,\n  useParams,\n} from '@snx-v3/useParams';\nimport { validatePosition } from '@snx-v3/validatePosition';\nimport { WithdrawModal } from '@snx-v3/WithdrawModal';\nimport { wei } from '@synthetixio/wei';\nimport React, { FormEvent, useCallback } from 'react';\nimport { Claim } from '../Claim/Claim';\nimport { Deposit } from '../Deposit/Deposit';\nimport { Repay } from '../Repay/Repay';\nimport { Borrow } from '../Borrow/Borrow';\nimport { RepayAndromedaDebt } from '../Repay/RepayAndromedaDebt';\nimport { Undelegate } from '../Undelegate/Undelegate';\nimport { Withdraw } from '../Withdraw/Withdraw';\nimport { COLLATERALACTIONS, DEBTACTIONS } from './actions';\n\nexport const ManageAction = ({\n  setTxnModalOpen,\n  txnModalOpen,\n}: {\n  setTxnModalOpen: (action?: ManageActionType) => void;\n  txnModalOpen?: ManageActionType;\n}) => {\n  const [params, setParams] = useParams<PositionPageSchemaType>();\n  const { network } = useNetwork();\n\n  const { debtChange, collateralChange, setCollateralChange, setDebtChange, setWithdrawAmount } =\n    React.useContext(ManagePositionContext);\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: liquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n  const isStataUSDC = useIsSynthStataUSDC({ tokenAddress: collateralType?.tokenAddress });\n\n  const { isValid } = validatePosition({\n    issuanceRatioD18: collateralType?.issuanceRatioD18,\n    collateralAmount: liquidityPosition?.collateralAmount,\n    collateralPrice: liquidityPosition?.collateralPrice,\n    debt: liquidityPosition?.debt,\n    collateralChange,\n    debtChange,\n  });\n\n  const manageActionParam = ManageActionSchema.safeParse(params.manageAction);\n  const manageAction = manageActionParam.success ? manageActionParam.data : undefined;\n  const debtActions = DEBTACTIONS(network?.preset === 'andromeda');\n  const tab = debtActions.some((action) => action.link === manageAction) ? 'debt' : 'collateral';\n\n  const onSubmit = useCallback(\n    (e: FormEvent) => {\n      e.preventDefault();\n      const form = e.target as HTMLFormElement;\n      if ((network?.preset === 'andromeda' || isValid) && form.reportValidity()) {\n        setTxnModalOpen(manageAction);\n      }\n    },\n    [isValid, manageAction, network?.preset, setTxnModalOpen]\n  );\n\n  return (\n    <>\n      {!txnModalOpen ? (\n        <Box>\n          <Tabs isFitted index={tab === 'collateral' ? 0 : 1}>\n            <TabList>\n              <Tab\n                as={Link}\n                href={`?${makeSearch({\n                  page: 'position',\n                  collateralSymbol: params.collateralSymbol,\n                  manageAction: COLLATERALACTIONS[0].link,\n                  accountId: params.accountId,\n                })}`}\n                onClick={(e) => {\n                  e.preventDefault();\n                  if (tab !== 'collateral') {\n                    setCollateralChange(wei(0));\n                    setDebtChange(wei(0));\n                  }\n                  setParams({\n                    page: 'position',\n                    collateralSymbol: params.collateralSymbol,\n                    manageAction: COLLATERALACTIONS[0].link,\n                    accountId: params.accountId,\n                  });\n                }}\n                color={tab === 'collateral' ? 'white' : 'gray.500'}\n                fontWeight={700}\n                fontSize={['12px', '16px']}\n                whiteSpace=\"nowrap\"\n                textDecoration=\"none\"\n                _hover={{ textDecoration: 'none' }}\n              >\n                Manage Collateral\n              </Tab>\n              <Tab\n                as={Link}\n                href={`?${makeSearch({\n                  page: 'position',\n                  collateralSymbol: params.collateralSymbol,\n                  manageAction: debtActions[0].link,\n                  accountId: params.accountId,\n                })}`}\n                onClick={(e) => {\n                  e.preventDefault();\n                  if (tab !== 'debt') {\n                    setCollateralChange(wei(0));\n                    setDebtChange(wei(0));\n                  }\n                  setParams({\n                    page: 'position',\n                    collateralSymbol: params.collateralSymbol,\n                    manageAction: debtActions[0].link,\n                    accountId: params.accountId,\n                  });\n                }}\n                color={tab === 'debt' ? 'white' : 'gray.500'}\n                fontWeight={700}\n                fontSize={['12px', '16px']}\n                whiteSpace=\"nowrap\"\n                textDecoration=\"none\"\n                _hover={{ textDecoration: 'none' }}\n              >\n                {network?.preset === 'andromeda' ? 'Manage PnL' : 'Manage Debt'}\n              </Tab>\n            </TabList>\n\n            <TabPanels>\n              <TabPanel px=\"0\">\n                <Flex flexDir={['column', 'row']} gap={4}>\n                  {COLLATERALACTIONS.map((action) => (\n                    <Flex\n                      as={Link}\n                      href={`?${makeSearch({\n                        page: 'position',\n                        collateralSymbol: params.collateralSymbol,\n                        manageAction: action.link,\n                        accountId: params.accountId,\n                      })}`}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        setCollateralChange(wei(0));\n                        setDebtChange(wei(0));\n                        setParams({\n                          page: 'position',\n                          collateralSymbol: params.collateralSymbol,\n                          manageAction: action.link,\n                          accountId: params.accountId,\n                        });\n                      }}\n                      h=\"84px\"\n                      minH={['90px', '84px']}\n                      justifyContent=\"center\"\n                      key={action.title.concat('-tab-actions')}\n                      border=\"1px solid\"\n                      flexDir=\"column\"\n                      alignItems=\"center\"\n                      borderColor={manageAction === action.link ? 'cyan.500' : 'gray.900'}\n                      rounded=\"base\"\n                      flex=\"1\"\n                      minWidth={['100%', 'auto']}\n                      textDecoration=\"none\"\n                      _hover={{ textDecoration: 'none' }}\n                    >\n                      {action.icon(manageAction === action.link ? 'cyan' : 'white')}\n                      <Text\n                        fontSize=\"14px\"\n                        fontWeight={700}\n                        mt=\"2\"\n                        color={manageAction === action.link ? 'cyan.500' : 'white'}\n                        textAlign=\"center\"\n                        lineHeight=\"1.1\"\n                      >\n                        {action.title}\n                      </Text>\n                    </Flex>\n                  ))}\n                </Flex>\n              </TabPanel>\n              <TabPanel px=\"0\">\n                <Flex flexDir={['column', 'row']} gap={4}>\n                  {debtActions.map((action) => (\n                    <Flex\n                      as={Link}\n                      href={`?${makeSearch({\n                        page: 'position',\n                        collateralSymbol: params.collateralSymbol,\n                        manageAction: action.link,\n                        accountId: params.accountId,\n                      })}`}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        setCollateralChange(wei(0));\n                        setDebtChange(wei(0));\n                        setParams({\n                          page: 'position',\n                          collateralSymbol: params.collateralSymbol,\n                          manageAction: action.link,\n                          accountId: params.accountId,\n                        });\n                      }}\n                      flex=\"1\"\n                      h=\"84px\"\n                      minH={['90px', '84px']}\n                      justifyContent=\"center\"\n                      key={action.title.concat('-tab-actions')}\n                      border=\"1px solid\"\n                      flexDir=\"column\"\n                      alignItems=\"center\"\n                      borderColor={manageAction === action.link ? 'cyan.500' : 'gray.900'}\n                      rounded=\"base\"\n                      cursor=\"pointer\"\n                      minWidth={['100%', 'auto']}\n                      textDecoration=\"none\"\n                      _hover={{ textDecoration: 'none' }}\n                    >\n                      {action.icon(manageAction === action.link ? 'cyan' : 'white')}\n                      <Text\n                        fontSize=\"14px\"\n                        fontWeight={700}\n                        mt=\"2\"\n                        color={manageAction === action.link ? 'cyan.500' : 'white'}\n                        textAlign=\"center\"\n                        lineHeight=\"1.1\"\n                      >\n                        {action.title}\n                      </Text>\n                    </Flex>\n                  ))}\n                </Flex>\n              </TabPanel>\n            </TabPanels>\n          </Tabs>\n\n          {manageAction === 'repay' && network?.preset !== 'andromeda' ? (\n            // These components do not set txnModalOpen\n            <Flex direction=\"column\">\n              <Repay />\n            </Flex>\n          ) : manageAction === 'claim' && network?.preset !== 'andromeda' ? (\n            <Flex direction=\"column\">\n              <Borrow />\n            </Flex>\n          ) : (\n            <Flex direction=\"column\" as=\"form\" onSubmit={onSubmit}>\n              {manageAction === 'claim' ? <Claim /> : null}\n              {manageAction === 'withdraw' ? <Withdraw /> : null}\n              {manageAction === 'withdraw-debt' ? <Withdraw isDebtWithdrawal /> : null}\n              {manageAction === 'deposit' ? <Deposit /> : null}\n              {manageAction === 'repay' && network?.preset === 'andromeda' ? (\n                <RepayAndromedaDebt />\n              ) : null}\n              {manageAction === 'repay' && network?.preset !== 'andromeda' ? <Repay /> : null}\n              {manageAction === 'undelegate' ? <Undelegate /> : null}\n            </Flex>\n          )}\n        </Box>\n      ) : null}\n\n      {txnModalOpen === 'repay' && network?.preset === 'andromeda' ? (\n        <RepayModal\n          onClose={() => {\n            setCollateralChange(wei(0));\n            setDebtChange(wei(0));\n            setTxnModalOpen(undefined);\n          }}\n        />\n      ) : null}\n      {txnModalOpen === 'claim' ? (\n        <ClaimModal\n          onClose={() => {\n            setCollateralChange(wei(0));\n            setDebtChange(wei(0));\n            setTxnModalOpen(undefined);\n          }}\n        />\n      ) : null}\n      {txnModalOpen === 'deposit' && !isStataUSDC ? (\n        <DepositModal\n          onClose={() => {\n            setCollateralChange(wei(0));\n            setDebtChange(wei(0));\n            setTxnModalOpen(undefined);\n          }}\n        />\n      ) : null}\n      {txnModalOpen === 'deposit' && isStataUSDC ? (\n        <StataDepositModal\n          onClose={() => {\n            setCollateralChange(wei(0));\n            setDebtChange(wei(0));\n            setTxnModalOpen(undefined);\n          }}\n        />\n      ) : null}\n      {txnModalOpen === 'undelegate' ? (\n        <UndelegateModal\n          onClose={() => {\n            setCollateralChange(wei(0));\n            setDebtChange(wei(0));\n            setTxnModalOpen(undefined);\n          }}\n        />\n      ) : null}\n      {txnModalOpen === 'withdraw' ? (\n        <WithdrawModal\n          onClose={() => {\n            setCollateralChange(wei(0));\n            setDebtChange(wei(0));\n            setWithdrawAmount(wei(0));\n            setTxnModalOpen(undefined);\n          }}\n        />\n      ) : null}\n\n      {txnModalOpen === 'withdraw-debt' ? (\n        <WithdrawModal\n          onClose={() => {\n            setCollateralChange(wei(0));\n            setDebtChange(wei(0));\n            setWithdrawAmount(wei(0));\n            setTxnModalOpen(undefined);\n          }}\n          isDebtWithdrawal\n        />\n      ) : null}\n    </>\n  );\n};\n","import { InfoIcon } from '@chakra-ui/icons';\nimport { Box, Tooltip, Text } from '@chakra-ui/react';\nimport { FC } from 'react';\n\nexport const LineWithText: FC<{\n  left: string;\n  text: string;\n  tooltipText: string;\n}> = ({ left, text, tooltipText }) => {\n  return (\n    <>\n      <Box\n        position=\"absolute\"\n        height=\"40%\"\n        transform=\"translateX(-50%)\"\n        left={left}\n        top={0}\n        bottom={0}\n        margin=\"auto\"\n      >\n        <Text\n          color=\"gray.700\"\n          whiteSpace=\"nowrap\"\n          fontSize=\"xx-small\"\n          transform=\"translateY(calc(-100% - 10px) )\"\n        >\n          {text}{' '}\n          <Tooltip label={tooltipText} hasArrow>\n            <InfoIcon />\n          </Tooltip>\n        </Text>\n      </Box>\n      <Box\n        position=\"absolute\"\n        height=\"40%\"\n        width=\"1px\"\n        bg=\"gray.900\"\n        left={left}\n        top={0}\n        bottom={0}\n        margin=\"auto\"\n      />\n    </>\n  );\n};\n","import { InfoIcon, TriangleDownIcon, TriangleUpIcon } from '@chakra-ui/icons';\nimport { Box, Flex, Progress, Text, Tooltip } from '@chakra-ui/react';\nimport { CRatioAmount } from './CRatioAmount';\nimport { CRatioBadge } from './CRatioBadge';\nimport { getHealthVariant, getProgressSize, ratioIsMaxUInt } from './CRatioBar.utils';\nimport { LineWithText } from './LineWithText';\n\nexport function CRatioBar({\n  newCRatio,\n  currentCRatio,\n  targetCratio,\n  liquidationCratio,\n  hasChanges,\n}: {\n  liquidationCratio: number;\n  targetCratio: number;\n  currentCRatio: number;\n  newCRatio: number;\n  hasChanges: boolean;\n}) {\n  const variant = hasChanges\n    ? getHealthVariant({\n        targetCratio: targetCratio,\n        liquidationCratio: liquidationCratio,\n        cRatio: newCRatio,\n      })\n    : getHealthVariant({\n        targetCratio: targetCratio,\n        liquidationCratio: liquidationCratio,\n        cRatio: currentCRatio,\n      });\n\n  const newBarSize = getProgressSize({\n    cRatio: newCRatio,\n    targetCratio: targetCratio,\n    liquidationCratio: liquidationCratio,\n  });\n\n  const currentBarSize = getProgressSize({\n    cRatio: currentCRatio,\n    targetCratio: targetCratio,\n    liquidationCratio: liquidationCratio,\n  });\n\n  return (\n    <Flex flexDir=\"column\" gap=\"2\">\n      <Text color=\"gray.500\" fontSize=\"xs\">\n        C-Ratio{' '}\n        <Tooltip\n          textAlign=\"left\"\n          label=\"C-ratio is a dynamic number that represents a ratio between your locked collateral and your debt\"\n          p=\"3\"\n        >\n          <InfoIcon w=\"10px\" h=\"10px\" />\n        </Tooltip>\n      </Text>\n      <Flex\n        color=\"white\"\n        fontWeight={800}\n        fontSize=\"20px\"\n        flexDir={['column', 'row']}\n        alignItems=\"center\"\n        gap={2}\n      >\n        <CRatioAmount value={currentCRatio} />\n\n        {hasChanges ? (\n          <>\n            <span>&rarr;</span>\n            <Text>\n              {!newCRatio || newCRatio < 0\n                ? 'N/A'\n                : ratioIsMaxUInt(newCRatio)\n                  ? 'Infinite'\n                  : `${newCRatio.toFixed(2)} %`}\n            </Text>\n          </>\n        ) : null}\n\n        {(hasChanges ? newCRatio || 0 : currentCRatio) !== 0 ? (\n          <CRatioBadge\n            cRatio={hasChanges ? newCRatio || 0 : currentCRatio}\n            liquidationCratio={liquidationCratio}\n            targetCratio={targetCratio}\n          />\n        ) : null}\n      </Flex>\n\n      <Box position=\"relative\" height=\"100px\" width=\"full\" overflowX=\"hidden\">\n        <>\n          <LineWithText\n            left=\"25%\"\n            text={\n              liquidationCratio ? `Liquidation < ${liquidationCratio.toFixed(0)}%` : 'Liquidation'\n            }\n            tooltipText=\"Point at which your Position gets liquidated\"\n          />\n          <LineWithText\n            left=\"75%\"\n            text={\n              targetCratio\n                ? `Borrowing Ratio ${\n                    ratioIsMaxUInt(targetCratio) ? 'Infinite' : targetCratio.toFixed(0)\n                  }%`\n                : 'Borrowing Ratio'\n            }\n            tooltipText=\"Min point at which you can borrow assets\"\n          />\n        </>\n\n        <Box top={0} bottom={0} height=\"12px\" position=\"absolute\" margin=\"auto\" width=\"100%\">\n          <Progress\n            variant={\n              currentBarSize < newBarSize && !(currentBarSize >= 100 && newBarSize > 100)\n                ? `update-${variant}`\n                : variant\n            }\n            top={0}\n            bottom={0}\n            height=\"12px\"\n            position=\"absolute\"\n            margin=\"auto\"\n            left=\"0\"\n            width=\"100%\"\n            value={Math.min(newBarSize, currentBarSize)}\n          />\n          <Progress\n            variant={currentBarSize >= newBarSize ? `update-${variant}` : variant}\n            top={0}\n            bottom={0}\n            height=\"12px\"\n            position=\"absolute\"\n            margin=\"auto\"\n            width=\"100%\"\n            left={`${Math.min(newBarSize, currentBarSize)}%`}\n            display={newCRatio === 0 ? 'none' : 'block'}\n            value={Math.abs(newBarSize - currentBarSize)}\n          />\n        </Box>\n\n        <Box\n          bg={variant}\n          height=\"12px\"\n          position=\"absolute\"\n          left={`${newBarSize}%`}\n          top={0}\n          bottom={0}\n          margin=\"auto\"\n          display={newCRatio === 0 ? 'none' : 'block'}\n        >\n          {currentCRatio > 0 ? (\n            <>\n              <TriangleDownIcon\n                position=\"absolute\"\n                right={0}\n                top={0}\n                transform=\"translate(50%,-100%)\"\n                color={variant}\n              />\n              <TriangleUpIcon\n                position=\"absolute\"\n                right={0}\n                bottom={0}\n                transform=\"translate(50%,100%)\"\n                color={variant}\n              />\n            </>\n          ) : null}\n        </Box>\n      </Box>\n    </Flex>\n  );\n}\n","import { Flex, Link, Text } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { ChangeStat } from '@snx-v3/ChangeStat';\nimport { ZEROWEI } from '@snx-v3/constants';\nimport { currency } from '@snx-v3/format';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { makeSearch, type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { type Wei } from '@synthetixio/wei';\n\nexport function CollateralStats({\n  newCollateralAmount,\n  hasChanges,\n}: {\n  newCollateralAmount: Wei;\n  hasChanges: boolean;\n}) {\n  const [params, setParams] = useParams<PositionPageSchemaType>();\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: liquidityPosition, isPending: isPendingLiquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  return (\n    <BorderBox maxW={['100%', '50%']} p={4} flex=\"1\" flexDirection=\"row\" bg=\"navy.700\">\n      <Flex\n        opacity={!liquidityPosition && !hasChanges ? '40%' : '100%'}\n        flexDirection=\"column\"\n        width=\"100%\"\n      >\n        <Flex alignItems=\"center\" mb=\"4px\">\n          <Text color=\"gray.500\" fontSize=\"xs\" fontFamily=\"heading\" lineHeight=\"16px\">\n            Collateral\n          </Text>\n        </Flex>\n        <Flex width=\"100%\" isTruncated>\n          <Flex width=\"100%\" direction=\"column\" gap=\"1\">\n            <ChangeStat\n              isPending={Boolean(params.accountId && isPendingLiquidityPosition)}\n              value={liquidityPosition?.collateralAmount}\n              newValue={newCollateralAmount}\n              formatFn={(val?: Wei) =>\n                `${currency(val ?? ZEROWEI)} ${\n                  collateralType?.displaySymbol ?? params.collateralSymbol\n                }`\n              }\n              hasChanges={hasChanges}\n              data-cy=\"stats collateral\"\n            />\n            {liquidityPosition ? (\n              <ChangeStat\n                isPending={Boolean(params.accountId && isPendingLiquidityPosition)}\n                value={\n                  liquidityPosition\n                    ? liquidityPosition.collateralAmount.mul(liquidityPosition.collateralPrice)\n                    : ZEROWEI\n                }\n                newValue={newCollateralAmount.mul(liquidityPosition?.collateralPrice ?? ZEROWEI)}\n                formatFn={(val?: Wei) =>\n                  currency(val ?? ZEROWEI, { currency: 'USD', style: 'currency' })\n                }\n                size=\"md\"\n                hasChanges={hasChanges}\n                data-cy=\"stats collateral value\"\n              />\n            ) : null}\n          </Flex>\n        </Flex>\n\n        {liquidityPosition && liquidityPosition.totalLocked.gt(0) ? (\n          <Flex data-cy=\"locked amount\" mt={4} alignItems=\"center\" gap={2} alignContent=\"center\">\n            <Text color=\"gray.500\" fontSize=\"sm\" fontFamily=\"heading\" lineHeight=\"16px\">\n              Escrowed\n            </Text>{' '}\n            <Link\n              data-cy=\"locked amount link\"\n              color=\"white\"\n              fontSize=\"sm\"\n              fontFamily=\"heading\"\n              lineHeight=\"16px\"\n              fontWeight={700}\n              ml={1}\n              href={`?${makeSearch({\n                ...params,\n                page: 'position',\n                manageAction: 'locked',\n              })}`}\n              onClick={(e) => {\n                e.preventDefault();\n                setParams({ ...params, page: 'position', manageAction: 'locked' });\n              }}\n            >\n              <Amount\n                value={liquidityPosition.totalLocked}\n                suffix={` ${collateralType?.displaySymbol}`}\n                showTooltip\n              />\n            </Link>\n          </Flex>\n        ) : null}\n      </Flex>\n    </BorderBox>\n  );\n}\n","import { InfoIcon } from '@chakra-ui/icons';\nimport { Flex, Text, Tooltip } from '@chakra-ui/react';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { ChangeStat } from '@snx-v3/ChangeStat';\nimport { DebtAmount } from '@snx-v3/DebtAmount';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { type Wei } from '@synthetixio/wei';\n\nexport function DebtStats({ newDebt, hasChanges }: { newDebt: Wei; hasChanges: boolean }) {\n  const [params] = useParams<PositionPageSchemaType>();\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: liquidityPosition, isPending: isPendingLiquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  return (\n    <BorderBox p={4} flex=\"1\" flexDirection=\"row\" bg=\"navy.700\">\n      <Flex flexDirection=\"column\" width=\"100%\">\n        <Flex alignItems=\"center\" mb=\"4px\">\n          <Text color=\"gray.500\" fontSize=\"xs\" fontFamily=\"heading\" lineHeight=\"16px\">\n            Debt\n          </Text>\n          <Tooltip\n            label={\n              <Text>\n                Debt consists of:\n                <br />\n                - Your portion of the pool&apos;s total debt, which fluctuates based on trader\n                performance and market conditions\n                <br />- The amount you&apos;ve borrowed against your collateral without incurring\n                interest\n              </Text>\n            }\n            textAlign=\"start\"\n            py={2}\n            px={3}\n          >\n            <Flex height=\"12px\" width=\"12px\" ml=\"4px\" alignItems=\"center\" justifyContent=\"center\">\n              <InfoIcon color=\"gray.500\" height=\"10px\" width=\"10px\" />\n            </Flex>\n          </Tooltip>\n        </Flex>\n        <Flex width=\"100%\">\n          <ChangeStat\n            value={liquidityPosition?.debt}\n            isPending={Boolean(params.accountId && isPendingLiquidityPosition)}\n            newValue={newDebt}\n            formatFn={(val?: Wei) => <DebtAmount debt={val} as=\"span\" />}\n            hasChanges={hasChanges}\n            data-cy=\"stats debt\"\n          />\n        </Flex>\n      </Flex>\n    </BorderBox>\n  );\n}\n","import { InfoIcon } from '@chakra-ui/icons';\nimport { Flex, Text } from '@chakra-ui/react';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { ChangeStat } from '@snx-v3/ChangeStat';\nimport { PnlAmount } from '@snx-v3/DebtAmount';\nimport { Tooltip } from '@snx-v3/Tooltip';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { type Wei } from '@synthetixio/wei';\n\nexport function PnlStats({ newDebt, hasChanges }: { newDebt: Wei; hasChanges: boolean }) {\n  const [params] = useParams<PositionPageSchemaType>();\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: liquidityPosition, isPending: isPendingLiquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  return (\n    <BorderBox p={4} flex=\"1\" flexDirection=\"row\" bg=\"navy.700\" justifyContent=\"space-between\">\n      <Flex flexDirection=\"column\" width=\"100%\">\n        <Flex alignItems=\"center\" mb=\"4px\">\n          <Text color=\"gray.500\" fontSize=\"xs\" fontFamily=\"heading\" lineHeight=\"16px\">\n            PnL\n          </Text>\n          <Tooltip\n            label=\"Your portion of the pool's total debt, which fluctuates based on trader performance and market conditions\"\n            textAlign=\"start\"\n            py={2}\n            px={3}\n          >\n            <Flex height=\"12px\" width=\"12px\" ml=\"4px\" alignItems=\"center\" justifyContent=\"center\">\n              <InfoIcon color=\"white\" height=\"9px\" width=\"9px\" />\n            </Flex>\n          </Tooltip>\n        </Flex>\n        <Flex width=\"100%\">\n          <ChangeStat\n            value={liquidityPosition?.debt.mul(-1)}\n            isPending={Boolean(params.accountId && isPendingLiquidityPosition)}\n            newValue={newDebt.mul(-1)}\n            formatFn={(val?: Wei) => <PnlAmount debt={val ? val.mul(-1) : val} />}\n            hasChanges={hasChanges}\n            data-cy=\"stats pnl\"\n          />\n        </Flex>\n      </Flex>\n    </BorderBox>\n  );\n}\n","import { Flex, Text } from '@chakra-ui/react';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { calculateCRatio } from '@snx-v3/calculations';\nimport { ManagePositionContext } from '@snx-v3/ManagePositionContext';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { validatePosition } from '@snx-v3/validatePosition';\nimport { useContext } from 'react';\nimport { CRatioBar } from '../CRatioBar/CRatioBar';\nimport { CollateralStats } from './CollateralStats';\nimport { DebtStats } from './DebtStats';\nimport { PnlStats } from './PnlStats';\n\nexport function ManageStats() {\n  const [params] = useParams<PositionPageSchemaType>();\n  const { network } = useNetwork();\n\n  const { debtChange, collateralChange } = useContext(ManagePositionContext);\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: liquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  const cRatio = calculateCRatio(liquidityPosition?.debt, liquidityPosition?.collateralValue);\n  const { newCRatio, newCollateralAmount, newDebt, hasChanges } = validatePosition({\n    issuanceRatioD18: collateralType?.issuanceRatioD18,\n    collateralAmount: liquidityPosition?.collateralAmount,\n    collateralPrice: liquidityPosition?.collateralPrice,\n    debt: liquidityPosition?.debt,\n    collateralChange: collateralChange,\n    debtChange: debtChange,\n  });\n\n  return (\n    <Flex direction=\"column\" gap={4}>\n      <Text color=\"white\" fontSize=\"lg\" fontFamily=\"heading\" fontWeight=\"bold\" lineHeight=\"16px\">\n        Overview\n      </Text>\n      <Flex flexWrap=\"wrap\" direction={['column', 'row']} gap={4}>\n        <CollateralStats newCollateralAmount={newCollateralAmount} hasChanges={hasChanges} />\n        {network?.preset === 'andromeda' ? (\n          <PnlStats newDebt={newDebt} hasChanges={hasChanges} />\n        ) : (\n          <DebtStats newDebt={newDebt} hasChanges={hasChanges} />\n        )}\n      </Flex>\n      {network?.preset === 'andromeda' ? null : (\n        <BorderBox py={4} px={6} flexDirection=\"column\" bg=\"navy.700\">\n          <CRatioBar\n            hasChanges={hasChanges}\n            currentCRatio={\n              liquidityPosition?.collateralValue.gt(0) && liquidityPosition?.debt.eq(0)\n                ? Number.MAX_SAFE_INTEGER\n                : cRatio.toNumber() * 100\n            }\n            liquidationCratio={(collateralType?.liquidationRatioD18?.toNumber() || 0) * 100}\n            newCRatio={\n              newCollateralAmount.gt(0) && newDebt.eq(0)\n                ? Number.MAX_SAFE_INTEGER\n                : newCRatio.toNumber() * 100\n            }\n            targetCratio={(collateralType?.issuanceRatioD18.toNumber() || 0) * 100}\n          />\n        </BorderBox>\n      )}\n    </Flex>\n  );\n}\n","import { POOL_ID } from '@snx-v3/constants';\nimport { contractsHash } from '@snx-v3/tsHelpers';\nimport { Network, useNetwork, useProviderForChain } from '@snx-v3/useBlockchain';\nimport { useCollateralTypes } from '@snx-v3/useCollateralTypes';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { erc7412Call } from '@snx-v3/withERC7412';\nimport { ZodBigNumber } from '@snx-v3/zod';\nimport { wei } from '@synthetixio/wei';\nimport { useQuery } from '@tanstack/react-query';\nimport { ethers } from 'ethers';\nimport { z } from 'zod';\n\nconst VaultCollateralSchema = z\n  .object({ value: ZodBigNumber, amount: ZodBigNumber })\n  .transform(({ value, amount }) => ({ value: wei(value), amount: wei(amount) }));\n\nexport const useVaultsData = (customNetwork?: Network) => {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n\n  const { data: collateralTypes } = useCollateralTypes(false, customNetwork);\n  const { data: CoreProxy } = useCoreProxy(customNetwork);\n\n  const provider = useProviderForChain(targetNetwork);\n\n  return useQuery({\n    queryKey: [\n      `${targetNetwork?.id}-${targetNetwork?.preset}`,\n      'VaultsData',\n      { contractsHash: contractsHash([CoreProxy, ...(collateralTypes ?? [])]) },\n    ],\n    enabled: Boolean(CoreProxy && collateralTypes && targetNetwork && provider),\n    queryFn: async () => {\n      if (!(CoreProxy && collateralTypes && targetNetwork && provider)) {\n        throw Error('useVaultsData should not be enabled when missing data');\n      }\n      const CoreProxyContract = new ethers.Contract(CoreProxy.address, CoreProxy.abi, provider);\n      const calls = await Promise.all(\n        collateralTypes.map((collateralType) =>\n          CoreProxyContract.populateTransaction.getVaultCollateral(\n            POOL_ID,\n            collateralType.tokenAddress\n          )\n        )\n      );\n\n      return await erc7412Call(\n        targetNetwork,\n        provider,\n        calls,\n        (decodedMulticall) => {\n          return decodedMulticall.map(({ returnData }, i) => {\n            const CoreProxyInterface = new ethers.utils.Interface(CoreProxy.abi);\n            const vaultCollateral = CoreProxyInterface.decodeFunctionResult(\n              'getVaultCollateral',\n              returnData\n            );\n            const collateral = VaultCollateralSchema.parse({ ...vaultCollateral });\n            return {\n              collateral,\n              collateralType: collateralTypes[i],\n            };\n          });\n        },\n        'useVaultsData'\n      );\n    },\n  });\n};\n","import { ArrowUpIcon } from '@chakra-ui/icons';\nimport { Flex, Heading, Link, Text } from '@chakra-ui/react';\nimport { formatNumberToUsd } from '@snx-v3/formatters';\nimport { TokenIcon } from '@snx-v3/TokenIcon';\nimport { NetworkIcon, useNetwork } from '@snx-v3/useBlockchain';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { useVaultsData } from '@snx-v3/useVaultsData';\nimport React from 'react';\n\n// import { useApr } from '@snx-v3/useApr';\n\nfunction getStatsUrl(chainId?: number) {\n  if (chainId === 1) {\n    return 'https://stats.synthetix.io/all/?page=ethereum';\n  }\n  if (chainId === 10) {\n    return 'https://stats.synthetix.io/all/?page=optimism';\n  }\n  if (chainId === 8453) {\n    return 'https://stats.synthetix.io/all/?page=base';\n  }\n  if (chainId === 42161) {\n    return 'https://stats.synthetix.io/all/?page=arbitrum';\n  }\n  return 'https://stats.synthetix.io/all/';\n}\n\nexport function PositionTitle() {\n  const { network } = useNetwork();\n\n  const [params] = useParams<PositionPageSchemaType>();\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n\n  const { data: vaultsData, isPending: isPendingVaultsData } = useVaultsData(network);\n\n  // const { data: aprData, isPending: isAprLoading } = useApr(network);\n  // const { collateral: totalCollateral, debt: totalDebt } = React.useMemo(() => {\n  //   const zeroValues = { collateral: { value: wei(0), amount: wei(0) }, debt: wei(0) };\n  //   if (!vaultsData) return zeroValues;\n  //\n  //   return vaultsData.reduce((acc, { collateral, debt }) => {\n  //     acc.collateral = {\n  //       value: acc.collateral.value.add(collateral.value),\n  //       amount: acc.collateral.amount.add(collateral.amount),\n  //     };\n  //     acc.debt = acc.debt.add(debt);\n  //     return acc;\n  //   }, zeroValues);\n  // }, [vaultsData]);\n\n  const vaultData = React.useMemo(() => {\n    if (vaultsData && collateralType) {\n      return vaultsData.find(\n        (item) => item.collateralType.address.toLowerCase() === collateralType.address.toLowerCase()\n      );\n    }\n  }, [collateralType, vaultsData]);\n\n  return (\n    <Flex alignItems=\"center\">\n      <Flex\n        bg=\"linear-gradient(180deg, #08021E 0%, #1F0777 100%)\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        borderRadius=\"100%\"\n        display=\"flex\"\n      >\n        <TokenIcon\n          symbol={collateralType?.symbol ?? params.collateralSymbol}\n          height={42}\n          width={42}\n          fill=\"#0B0B22\"\n          color=\"#00D1FF\"\n        />\n      </Flex>\n      <Flex direction=\"column\" gap={0.5}>\n        <Heading\n          ml={4}\n          fontWeight={700}\n          fontSize={['18px', '20px', '24px']}\n          color=\"gray.50\"\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          {collateralType?.displaySymbol ?? params.collateralSymbol} Liquidity Position\n        </Heading>\n        <Flex\n          ml={4}\n          fontWeight={700}\n          fontSize={['10px', '12px']}\n          color=\"gray.50\"\n          alignItems=\"center\"\n          gap={3}\n          lineHeight=\"14px\"\n        >\n          <Flex\n            mt={0.25}\n            alignItems=\"center\"\n            color=\"gray.500\"\n            fontWeight=\"500\"\n            borderWidth={1}\n            borderRadius={4}\n            px={1}\n            py={0.5}\n            gap={2}\n          >\n            <NetworkIcon size=\"14px\" networkId={network?.id} />\n            <Text>{network?.label} Network</Text>\n          </Flex>\n          <Flex\n            alignItems=\"center\"\n            color=\"gray.500\"\n            fontWeight=\"500\"\n            borderWidth={1}\n            borderRadius={4}\n            px={1}\n            py={0.5}\n            gap={2}\n          >\n            <Text>Total TVL</Text>\n            <Text>\n              {isPendingVaultsData\n                ? '~'\n                : vaultData\n                  ? formatNumberToUsd(vaultData.collateral.value.toNumber(), {\n                      maximumFractionDigits: 0,\n                    })\n                  : '-'}\n            </Text>\n          </Flex>\n          <Flex\n            as={Link}\n            isExternal\n            href={getStatsUrl(network?.id)}\n            textDecoration=\"none\"\n            _hover={{ textDecoration: 'none' }}\n            cursor=\"pointer\"\n            alignItems=\"center\"\n            color=\"gray.500\"\n            fontWeight=\"500\"\n            borderWidth={1}\n            borderRadius={4}\n            px={1}\n            py={0.5}\n            gap={2}\n          >\n            <Text>More Stats</Text>\n            <ArrowUpIcon transform=\"rotate(45deg)\" />\n          </Flex>\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n}\n","import { Button, Flex, Image, Link, Text } from '@chakra-ui/react';\nimport CoinImage from './coin.png';\nimport { BorderBox } from '@snx-v3/BorderBox';\n\nexport function StataDepositBanner() {\n  return (\n    <BorderBox\n      display=\"flex\"\n      flexDirection={['column', 'column', 'column', 'column', 'row']}\n      alignItems=\"center\"\n      gap={6}\n      p={6}\n      bg=\"navy.700\"\n    >\n      <Flex flexDir=\"column\" gap={3}>\n        <Text color=\"white.900\" fontSize=\"20px\" fontWeight={700}>\n          This position earns yield via Aave and Synthetix\n        </Text>\n        <Text color=\"white.600\" fontSize=\"14px\" fontWeight={300}>\n          Deposit USDC, and we’ll wrap it into static aUSDC for you. Watch your balance stay the\n          same while the value grows, earning effortless yield through Aave and Synthetix.\n        </Text>\n        <Button\n          mt={1}\n          as={Link}\n          href=\"https://governance.aave.com/t/bgd-statatoken-v3/11894\"\n          target=\"_blank\"\n          textDecoration=\"none\"\n          variant=\"outline\"\n          colorScheme=\"gray\"\n          w=\"fit-content\"\n        >\n          Read more about static aUSDC\n        </Button>\n      </Flex>\n\n      <Image rounded=\"8px\" src={CoinImage} width={257} />\n    </BorderBox>\n  );\n}\n","import { ArrowBackIcon } from '@chakra-ui/icons';\nimport { Button, Divider, Skeleton, Table, Tbody, Td, Text, Th, Thead, Tr } from '@chakra-ui/react';\nimport { Amount } from '@snx-v3/Amount';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useLocks } from '@snx-v3/useLocks';\nimport { PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { wei } from '@synthetixio/wei';\nimport { intlFormat } from 'date-fns';\nimport React from 'react';\n\nexport const LockedCollateral: React.FC<{\n  onClose: () => void;\n}> = ({ onClose }) => {\n  const [params] = useParams<PositionPageSchemaType>();\n\n  const { data: collateralType } = useCollateralType(params.collateralSymbol);\n  const { data: locks, isPending: isPendingLocks } = useLocks(\n    params?.accountId,\n    collateralType?.address\n  );\n\n  return (\n    <div>\n      <Text color=\"gray.50\" fontSize=\"20px\" fontWeight={700}>\n        <ArrowBackIcon cursor=\"pointer\" onClick={onClose} mr={2} />\n        Escrowed SNX\n      </Text>\n      <Divider my={4} />\n\n      {collateralType?.symbol === 'SNX' && (\n        <Text fontSize=\"14px\" color=\"white\">\n          All SNX rewards on V2 are subject to a 12-month escrow time-lock. Escrowed SNX is\n          <b> automatically locked </b> and will continue to earn rewards. After a 12-month lock,\n          this SNX can be <b>unlocked and withdrawn</b>.\n        </Text>\n      )}\n\n      <Table data-cy=\"locked collateral table\" mt={2.5} variant=\"simple\">\n        <Thead>\n          <Tr borderBottom=\"1px solid #2D2D38\">\n            <Th\n              textTransform=\"unset\"\n              color=\"gray.600\"\n              border=\"none\"\n              fontFamily=\"heading\"\n              fontSize=\"12px\"\n              lineHeight=\"16px\"\n              letterSpacing={0.6}\n              fontWeight={700}\n              px={4}\n              py={3}\n            >\n              Unlocking Date\n            </Th>\n            <Th\n              textTransform=\"unset\"\n              color=\"gray.600\"\n              border=\"none\"\n              fontFamily=\"heading\"\n              fontSize=\"12px\"\n              lineHeight=\"16px\"\n              letterSpacing={0.6}\n              fontWeight={700}\n              px={4}\n              py={3}\n              textAlign=\"right\"\n            >\n              {collateralType?.displaySymbol ?? params.collateralSymbol} Amount\n            </Th>\n          </Tr>\n        </Thead>\n        {collateralType && !isPendingLocks && locks ? (\n          <Tbody>\n            {locks.map((lock) => (\n              <Tr key={lock.timestamp.toString()} borderBottom=\"1px solid #2D2D38\">\n                <Td px={4} py={5} border=\"none\">\n                  <Text fontWeight={500} color=\"white\" fontSize=\"14px\">\n                    {intlFormat(lock.expirationDate, {\n                      year: 'numeric',\n                      month: 'short',\n                      day: 'numeric',\n                    })}\n                  </Text>\n                </Td>\n                <Td px={4} py={5} textAlign=\"right\" border=\"none\">\n                  <Text fontWeight={500} color=\"white\" fontSize=\"14px\">\n                    <Amount value={wei(lock.amount, Number(collateralType.decimals), true)} />\n                  </Text>\n                </Td>\n              </Tr>\n            ))}\n          </Tbody>\n        ) : null}\n      </Table>\n\n      {isPendingLocks ? <Skeleton mt={4} width=\"100%\" height=\"30px\" rounded=\"sm\" /> : null}\n      {!isPendingLocks && !locks?.length ? (\n        <Text\n          width=\"100%\"\n          textAlign=\"center\"\n          color=\"gray.500\"\n          fontWeight={500}\n          fontSize=\"14px\"\n          my=\"4\"\n          pl=\"3\"\n        >\n          No Escrowed {collateralType?.displaySymbol ?? params.collateralSymbol}\n        </Text>\n      ) : null}\n\n      <Button onClick={onClose} mt={6} width=\"100%\" variant=\"outline\" colorScheme=\"gray\">\n        Close\n      </Button>\n    </div>\n  );\n};\n","import { contractsHash } from '@snx-v3/tsHelpers';\nimport { Network, useNetwork, useProviderForChain } from '@snx-v3/useBlockchain';\nimport { useCoreProxy } from '@snx-v3/useCoreProxy';\nimport { useQuery } from '@tanstack/react-query';\nimport { BigNumber, ethers } from 'ethers';\n\nexport function useLocks(accountId?: string, collateralType?: string, customNetwork?: Network) {\n  const { network } = useNetwork();\n  const targetNetwork = customNetwork || network;\n  const { data: CoreProxy } = useCoreProxy(targetNetwork);\n  const provider = useProviderForChain(targetNetwork);\n\n  return useQuery({\n    enabled: Boolean(provider && CoreProxy),\n    queryKey: [\n      `${targetNetwork?.id}-${targetNetwork?.preset}`,\n      'Locks',\n      { contractsHash: contractsHash([CoreProxy]), accountId, collateralType },\n    ],\n    queryFn: async () => {\n      if (!(provider && CoreProxy && accountId && collateralType)) throw 'OMFG';\n\n      const CoreProxyContract = new ethers.Contract(CoreProxy.address, CoreProxy.abi, provider);\n\n      const locks: {\n        amountD18: BigNumber;\n        lockExpirationTime: BigNumber;\n      }[] = await CoreProxyContract.getLocks(accountId, collateralType, 0, 100);\n\n      return locks.map((lock) => ({\n        timestamp: lock.lockExpirationTime,\n        expirationDate: new Date(lock.lockExpirationTime.toNumber() * 1000),\n        amount: lock.amountD18,\n      }));\n    },\n  });\n}\n","import { InfoIcon } from '@chakra-ui/icons';\nimport { Box, Flex, Text } from '@chakra-ui/react';\nimport { BorderBox } from '@snx-v3/BorderBox';\nimport { formatApr } from '@snx-v3/formatters';\nimport { ManagePositionProvider } from '@snx-v3/ManagePositionContext';\nimport { Tooltip } from '@snx-v3/Tooltip';\nimport { useStataUSDCApr } from '@snx-v3/useApr/useStataUSDCApr';\nimport { useNetwork } from '@snx-v3/useBlockchain';\nimport { useCollateralType } from '@snx-v3/useCollateralTypes';\nimport { useIsSynthStataUSDC } from '@snx-v3/useIsSynthStataUSDC';\nimport { useLiquidityPosition } from '@snx-v3/useLiquidityPosition';\nimport { type ManageActionType, type PositionPageSchemaType, useParams } from '@snx-v3/useParams';\nimport { usePool } from '@snx-v3/usePoolsList';\nimport React from 'react';\nimport { ClosePosition } from '../components/ClosePosition/ClosePosition';\nimport { UnsupportedCollateralAlert } from '../components/CollateralAlert/UnsupportedCollateralAlert';\nimport { ManageAction } from '../components/Manage/ManageActions';\nimport { ManageStats } from '../components/Manage/ManageStats';\nimport { PositionTitle } from '../components/Manage/PositionTitle';\nimport { StataDepositBanner } from '../components/Manage/StataDepositBanner';\nimport { LockedCollateral } from '../components/Positions/LockedCollateral';\nimport { Helmet } from 'react-helmet';\n\nexport const Manage = () => {\n  const [params, setParams] = useParams<PositionPageSchemaType>();\n  const { network } = useNetwork();\n\n  const { data: collateralType, isPending: isPendingCollateralType } = useCollateralType(\n    params.collateralSymbol\n  );\n  const { data: liquidityPosition } = useLiquidityPosition({\n    accountId: params.accountId,\n    collateralType,\n  });\n\n  const { data: stataUSDCAPR } = useStataUSDCApr(network?.id, network?.preset);\n  const stataUSDCAPRParsed = stataUSDCAPR || 0;\n\n  const isStataUSDC = useIsSynthStataUSDC({\n    tokenAddress: collateralType?.tokenAddress,\n    customNetwork: network,\n  });\n\n  const [txnModalOpen, setTxnModalOpen] = React.useState<ManageActionType | undefined>(undefined);\n\n  const { data: pool, isPending: isPendingPool } = usePool(Number(network?.id));\n\n  const positionApr = pool?.apr?.collateralAprs?.find(\n    (item: any) => item.collateralType.toLowerCase() === collateralType?.tokenAddress.toLowerCase()\n  );\n\n  return (\n    <ManagePositionProvider>\n      <Helmet>\n        <title>\n          {`Synthetix ${collateralType?.displaySymbol ?? params.collateralSymbol} Position`}\n        </title>\n        <meta\n          name=\"description\"\n          content={`Synthetix Liquidity V3 - ${\n            collateralType?.displaySymbol ?? params.collateralSymbol\n          } Position`}\n        />\n      </Helmet>\n      <UnsupportedCollateralAlert isOpen={!isPendingCollateralType && !collateralType} />\n      <Box mb={12} mt={8}>\n        <Flex\n          flexDir={['column', 'row']}\n          flexWrap=\"wrap\"\n          px={[0, 6]}\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          mb=\"8px\"\n          gap={4}\n        >\n          <PositionTitle />\n          <Flex alignItems={['center', 'flex-end']} direction=\"column\">\n            <Tooltip label=\"APR is averaged over the trailing 7 days and is comprised of both performance and rewards\">\n              <Text\n                fontFamily=\"heading\"\n                fontSize=\"sm\"\n                lineHeight={5}\n                fontWeight=\"medium\"\n                color=\"gray.500\"\n              >\n                Estimated APR\n                <InfoIcon ml={1} mb=\"2px\" w=\"10px\" h=\"10px\" />\n              </Text>\n            </Tooltip>\n            <Text fontWeight=\"bold\" fontSize=\"20px\" color=\"white\" lineHeight=\"36px\">\n              {isPendingPool\n                ? '~'\n                : formatApr(\n                    positionApr?.apr7d > 0\n                      ? positionApr.apr7d * 100 + (isStataUSDC ? stataUSDCAPRParsed : 0)\n                      : undefined\n                  )}\n            </Text>\n          </Flex>\n        </Flex>\n        <Flex mt={6} flexDirection={['column', 'column', 'row']} gap={4}>\n          <Flex flex={1} direction=\"column\" gap={6}>\n            <BorderBox gap={4} p={6} flexDirection=\"column\" bg=\"navy.700\">\n              <ManageStats />\n            </BorderBox>\n            {isStataUSDC && liquidityPosition && liquidityPosition.collateralAmount.eq(0) && (\n              <StataDepositBanner />\n            )}\n          </Flex>\n          <Flex\n            maxWidth={['100%', '100%', '501px']}\n            width=\"100%\"\n            flex={1}\n            alignSelf=\"flex-start\"\n            flexDirection=\"column\"\n          >\n            {params.manageAction === 'close' ? (\n              <BorderBox\n                flex={1}\n                maxW={['100%', '100%', '501px']}\n                p={6}\n                flexDirection=\"column\"\n                bg=\"navy.700\"\n                height=\"fit-content\"\n              >\n                <ClosePosition\n                  onClose={() =>\n                    setParams({\n                      page: 'position',\n                      collateralSymbol: params.collateralSymbol,\n                      manageAction: 'deposit',\n                      accountId: params.accountId,\n                    })\n                  }\n                />\n              </BorderBox>\n            ) : null}\n\n            {params.manageAction === 'locked' ? (\n              <BorderBox\n                flex={1}\n                maxW={['100%', '100%', '501px']}\n                p={6}\n                flexDirection=\"column\"\n                bg=\"navy.700\"\n                height=\"fit-content\"\n              >\n                <LockedCollateral\n                  onClose={() =>\n                    setParams({\n                      page: 'position',\n                      collateralSymbol: params.collateralSymbol,\n                      manageAction: 'deposit',\n                      accountId: params.accountId,\n                    })\n                  }\n                />\n              </BorderBox>\n            ) : null}\n\n            {!['close', 'locked'].includes(params.manageAction) ? (\n              <>\n                <BorderBox flex={1} p={6} flexDirection=\"column\" bg=\"navy.700\" height=\"fit-content\">\n                  <ManageAction setTxnModalOpen={setTxnModalOpen} txnModalOpen={txnModalOpen} />\n                </BorderBox>\n\n                {!txnModalOpen && liquidityPosition?.collateralAmount.gt(0) ? (\n                  <Text\n                    textAlign=\"center\"\n                    cursor=\"pointer\"\n                    onClick={() =>\n                      setParams({\n                        page: 'position',\n                        collateralSymbol: params.collateralSymbol,\n                        manageAction: 'close',\n                        accountId: params.accountId,\n                      })\n                    }\n                    color=\"cyan.500\"\n                    fontWeight={700}\n                    mt=\"5\"\n                    data-cy=\"close position\"\n                  >\n                    Close Position\n                  </Text>\n                ) : null}\n              </>\n            ) : null}\n          </Flex>\n        </Flex>\n      </Box>\n    </ManagePositionProvider>\n  );\n};\n","import { Box, Container, Flex, Spinner } from '@chakra-ui/react';\nimport { useParams } from '@snx-v3/useParams';\nimport { Suspense } from 'react';\nimport { Footer } from './Footer';\nimport Header from './Header';\nimport { Settings } from './pages/Account/Settings';\nimport { Dashboard } from './pages/Dashboard';\nimport { Manage } from './pages/Manage';\n\nfunction Content() {\n  const [params] = useParams();\n  if (params.page === 'settings') {\n    return <Settings />;\n  }\n  if (params.page === 'position') {\n    return <Manage />;\n  }\n  return <Dashboard />;\n}\n\nexport function Router() {\n  return (\n    <Suspense fallback={<Spinner />}>\n      <Box\n        as=\"main\"\n        minHeight=\"100vh\"\n        color=\"rgba(255,255,255,0.85)\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        bg=\"navy.900\"\n      >\n        <Flex flex=\"1\" flexDirection=\"column\">\n          <Header />\n          <Container display=\"flex\" flexDir=\"column\" maxW=\"1236px\" flex=\"1\">\n            <Content />\n          </Container>\n          <Footer />\n        </Flex>\n      </Box>\n    </Suspense>\n  );\n}\n","import { NETWORKS, appMetadata } from '@snx-v3/useBlockchain';\nimport injectedModule, { ProviderLabel } from '@web3-onboard/injected-wallets';\nimport trezorModule from '@web3-onboard/trezor';\nimport ledgerModule from '@web3-onboard/ledger';\nimport walletConnectModule from '@web3-onboard/walletconnect';\nimport gnosisModule from '@web3-onboard/gnosis';\nimport coinbaseModule from '@web3-onboard/coinbase';\nimport { init } from '@web3-onboard/react';\nimport type { ChainWithDecimalId } from '@web3-onboard/common';\n\n// Filter networks to only supported ones\nexport const chains: ChainWithDecimalId[] = Object.values(\n  NETWORKS.reduce((result, network) => {\n    if (!network.isSupported) {\n      return result;\n    }\n    if (network.id in result) {\n      // We cannot have duplicate chains, but we can have multiple deployments per chain\n      return result;\n    }\n    return Object.assign(result, {\n      [network.id]: {\n        id: network.id,\n        token: network.token,\n        label: network.label,\n        rpcUrl: network.rpcUrl,\n        publicRpcUrl: network.publicRpcUrl,\n      },\n    });\n  }, {})\n);\n\nexport const onboard = init({\n  connect: {\n    autoConnectLastWallet: true,\n    autoConnectAllPreviousWallet: true,\n  },\n  wallets: window.$magicWallet\n    ? [injectedModule()]\n    : [\n        coinbaseModule(),\n        injectedModule({ displayUnavailable: [ProviderLabel.MetaMask, ProviderLabel.Trust] }),\n        trezorModule({\n          appUrl: 'https://liquidity.synthetix.io',\n          email: 'info@synthetix.io',\n        }),\n        ledgerModule({\n          projectId: 'd6eac005846a1c3be1f8eea3a294eed9',\n          walletConnectVersion: 2,\n        }),\n        walletConnectModule({\n          version: 2,\n          projectId: 'd6eac005846a1c3be1f8eea3a294eed9',\n          dappUrl: 'liquidity.synthetix.io',\n        }),\n        gnosisModule(),\n      ],\n  chains,\n  appMetadata: {\n    ...appMetadata,\n    name: 'Synthetix Liquidity',\n  },\n  accountCenter: {\n    desktop: {\n      enabled: false,\n    },\n    mobile: {\n      enabled: false,\n    },\n  },\n  notify: {\n    enabled: false,\n  },\n});\n","import { ChakraProvider, extendTheme, useColorMode } from '@chakra-ui/react';\nimport { DEFAULT_QUERY_STALE_TIME, SESSION_STORAGE_KEYS } from '@snx-v3/constants';\nimport { TermsModal } from '@snx-v3/TermsModal';\nimport { Fonts, theme } from '@snx-v3/theme';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools';\nimport { Web3OnboardProvider } from '@web3-onboard/react';\nimport { useEffect } from 'react';\nimport Head from 'react-helmet';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Router } from './Router';\nimport { onboard } from './utils/onboard';\nimport { Progress } from './utils/theme';\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      retry: false,\n      refetchInterval: false, //  if queries needs refetching we should be explicit about it, given erc7412\n      staleTime: DEFAULT_QUERY_STALE_TIME,\n      refetchOnWindowFocus: false,\n      throwOnError: (e) => {\n        console.error(e);\n        return false;\n      },\n    },\n    mutations: {\n      retry: false,\n      throwOnError: (e) => {\n        console.error(e);\n        return false;\n      },\n    },\n  },\n});\n\nconst extendedTheme = extendTheme({\n  ...theme,\n  components: {\n    ...theme.components,\n    Progress,\n  },\n});\n\nfunction ColorMode() {\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  useEffect(() => {\n    if (colorMode === 'light') {\n      toggleColorMode();\n    }\n  }, [colorMode, toggleColorMode]);\n  return null;\n}\n\nexport const App = () => {\n  const TERMS_CONDITIONS_ACCEPTED =\n    localStorage.getItem(SESSION_STORAGE_KEYS.TERMS_CONDITIONS_ACCEPTED) === 'true';\n\n  return (\n    <>\n      <Head>\n        {/* open graph */}\n        <meta property=\"og:url\" content=\"https://liquidity.synthetix.io/\" />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:title\" content=\"Synthetix | Liquidity\" />\n        <meta\n          property=\"og:description\"\n          content=\"The Liquidity Layer of DeFi. Provide liquidity for the next generation of permissionless protocols\"\n        />\n        <meta property=\"og:image\" content=\"https://liquidity.synthetix.io/Liquidity.jpg\" />\n        <meta property=\"og:image:alt\" content=\"Synthetix | Liquidity\" />\n        <meta property=\"og:site_name\" content=\"\" />\n        {/* twitter */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:site\" content=\"@synthetix_io\" />\n        <meta name=\"twitter:creator\" content=\"@synthetix_io\" />\n        <meta name=\"twitter:image\" content=\"https://liquidity.synthetix.io/Liquidity.jpg\" />\n        <meta name=\"twitter:url\" content=\"https://liquidity.synthetix.io/\" />\n      </Head>\n      <QueryClientProvider client={queryClient}>\n        <Web3OnboardProvider web3Onboard={onboard}>\n          <ChakraProvider theme={extendedTheme}>\n            <ColorMode />\n            <Fonts />\n            <BrowserRouter>\n              <TermsModal\n                defaultOpen={process.env.NODE_ENV !== 'development' && !TERMS_CONDITIONS_ACCEPTED}\n              />\n              <Router />\n            </BrowserRouter>\n            <ReactQueryDevtools />\n          </ChakraProvider>\n        </Web3OnboardProvider>\n      </QueryClientProvider>\n    </>\n  );\n};\n","import { ComponentMultiStyleConfig } from '@chakra-ui/react';\n\nexport const Progress: ComponentMultiStyleConfig = {\n  parts: ['filledTrack', 'track'],\n  baseStyle: {\n    track: {\n      overflow: 'unset',\n      bg: 'whiteAlpha.100',\n    },\n  },\n  variants: {\n    error: (props) => ({\n      filledTrack: {\n        bg: 'error',\n        boxShadow: `0px 0px 15px ${props.theme.colors.error}`,\n      },\n    }),\n    warning: (props) => ({\n      filledTrack: {\n        bg: 'warning',\n        boxShadow: `0px 0px 15px ${props.theme.colors.warning}`,\n      },\n    }),\n    success: (props) => ({\n      filledTrack: {\n        bg: 'success',\n        boxShadow: `0px 0px 15px ${props.theme.colors.success}`,\n      },\n    }),\n    'update-error': () => ({\n      filledTrack: {\n        bg: 'red.700',\n      },\n    }),\n    'update-warning': () => ({\n      filledTrack: {\n        bg: 'orange.700',\n      },\n    }),\n    'update-success': () => ({\n      filledTrack: {\n        bg: 'green.700',\n      },\n    }),\n    white: {\n      filledTrack: {\n        bg: 'white',\n        borderRadius: 'full',\n      },\n    },\n  },\n};\n","import ReactDOM from 'react-dom/client';\nimport { App } from './App';\n\nconst container = document.querySelector('#app');\n\ndeclare global {\n  var $ethers: any; // eslint-disable-line no-var\n  var $magicWallet: `0x${string}`; // eslint-disable-line no-var\n  var $chainId: number; // eslint-disable-line no-var\n  var ethereum: any; // eslint-disable-line no-var\n}\n\nexport async function bootstrap() {\n  if (!container) {\n    throw new Error('Container #app does not exist');\n  }\n  if (window.localStorage.DEBUG === 'true' || window.localStorage.DEBUG?.slice(0, 3) === 'snx') {\n    const { Wei } = await import('@synthetixio/wei');\n    const { ethers } = await import('ethers');\n\n    function number(obj: any) {\n      if (obj.eq(ethers.constants.MaxUint256)) {\n        return 'MaxUint256';\n      }\n      if (obj.eq(ethers.constants.MaxInt256)) {\n        return 'MaxInt256';\n      }\n      if (obj.abs().gt(1e10)) {\n        // Assuming everything bigger than 1e10 is a wei\n        return `wei ${parseFloat(ethers.utils.formatEther(`${obj}`))}`;\n      }\n      return parseFloat(obj.toString());\n    }\n    // @ts-ignore\n    window.devtoolsFormatters = window.devtoolsFormatters ?? [];\n    // @ts-ignore\n    window.devtoolsFormatters.push({\n      header: function (obj: any) {\n        if (obj instanceof ethers.BigNumber) {\n          return [\n            'div',\n            { style: 'color: #6ff' },\n            ['span', {}, 'BigNumber('],\n            ['span', { style: 'color: #ff3' }, number(obj)],\n            ['span', {}, ' '],\n            ['span', { style: 'color: #3f3' }, obj.toHexString()],\n            ['span', {}, ')'],\n          ];\n        }\n        if (obj instanceof Wei) {\n          return [\n            'div',\n            { style: 'color: #6ff' },\n            ['span', {}, 'Wei('],\n            ['span', { style: 'color: #ff3' }, number(ethers.BigNumber.from(obj.toBN()))],\n            ['span', {}, ' '],\n            ['span', { style: 'color: #3f3' }, obj.toBN().toHexString()],\n            ['span', {}, ')'],\n          ];\n        }\n        return null;\n      },\n      hasBody: function () {\n        return false;\n      },\n    });\n  }\n\n  if (window.localStorage.MAGIC_WALLET && `${window.localStorage.MAGIC_WALLET}`.length === 42) {\n    const { ethers } = await import('ethers');\n    window.$magicWallet = window.localStorage.MAGIC_WALLET;\n    if (ethers.utils.isAddress(window.$magicWallet)) {\n      const rpcProvider = new ethers.providers.JsonRpcProvider('http://127.0.0.1:8545');\n      const network = await rpcProvider.getNetwork();\n      window.$chainId = network.chainId;\n\n      const { getMagicProvider } = await import('@snx-v3/useBlockchain');\n      const magicProvider = getMagicProvider();\n      window.ethereum = magicProvider\n        ? new Proxy(magicProvider, {\n            get(target: any, prop: any) {\n              // console.log('MAGIC_WALLET', prop, { target: target[prop] });\n              switch (prop) {\n                case 'chainId':\n                  return `0x${Number(window.$chainId).toString(16)}`;\n                case 'isMetaMask':\n                  return true;\n                case 'getSigner':\n                  return () => {\n                    return magicProvider.getSigner(window.$magicWallet);\n                  };\n                case 'request':\n                  return async ({ method, params }: { method: string; params: any }) => {\n                    switch (method) {\n                      case 'eth_accounts':\n                      case 'eth_requestAccounts':\n                        return [window.$magicWallet];\n                      case 'eth_chainId':\n                        return `0x${Number(window.$chainId).toString(16)}`;\n                      case 'eth_sendTransaction':\n                      default: {\n                        try {\n                          const result = await magicProvider.send(method, params);\n                          console.log('MAGIC_WALLET', { method, params, result }); // eslint-disable-line no-console\n                          return result;\n                        } catch (error) {\n                          console.log('MAGIC_WALLET', { method, params, error }); // eslint-disable-line no-console\n                          throw error;\n                        }\n                      }\n                    }\n                  };\n                default:\n                  return target[prop];\n              }\n            },\n          })\n        : undefined;\n    }\n  }\n\n  const root = ReactDOM.createRoot(container);\n  root.render(<App />);\n}\n"],"names":["Logo","color","width","height","withText","_jsxs","Icon","viewBox","fill","children","_jsx","d","EthereumIcon","props","fillOpacity","OptimismIcon","ArbitrumIcon","cx","cy","r","FailedIcon","w","h","filter","fillRule","clipRule","id","x","y","filterUnits","colorInterpolationFilters","floodOpacity","result","in","type","values","stdDeviation","mode","in2","WalletIcon","LogoIcon","BaseIcon","Image","src","icon","alt","DiscordIcon","XIcon","clipPath","transform","GithubIcon","WarpcastIcon","YoutubeIcon","Sparkles","SNXChainIcon","LOCAL_STORAGE_KEYS","SHOW_TESTNETS","ZEROWEI","Wei","D6","ethers","D18","D27","DEFAULT_QUERY_STALE_TIME","INFURA_KEY","getSubgraphUrl","networkName","getAprUrl","networkId","SESSION_STORAGE_KEYS","TERMS_CONDITIONS_ACCEPTED","offchainMainnetEndpoint","offchainTestnetEndpoint","tokenOverrides","symbol","name","POOL_ID","async","importPythERC7412Wrapper","chainId","preset","Error","deployment","Number","toFixed","default","meta","abi","Promise","all","address","contracts","PythERC7412Wrapper","MagicProvider","constructor","window","$chainId","$magicWallet","super","Object","defineProperty","this","enumerable","value","writable","magicWallet","method","params","toString","send","console","log","error","getMagicProvider","NetworkIcon","size","BASE_ANDROMEDA","hexId","token","rpcUrl","label","isSupported","publicRpcUrl","isTestnet","MAINNET","OPTIMISM","SEPOLIA","BASE_SEPOLIA","CANNON","OPTIMISM_SEPOLIA","ARBITRUM_SEPOLIA","ARBITRUM","SNAX","SNAXTESTNET","NETWORKS","deploymentHasERC7412","then","find","network","localStorage","getItem","appMetadata","SynthetixIcon","logo","description","recommendedInjectedWallets","url","gettingStartedGuide","explore","useProviderForChain","customNetwork","activeNetwork","useNetwork","isDefaultChain","data","provider","useQuery","queryKey","enabled","Boolean","queryFn","useWallet","wallet","connect","disconnect","useConnectWallet","activeWallet","undefined","walletsInfo","accounts","connectedChain","setChain","useSetChain","setNetwork","useCallback","newNetwork","n","useSigner","signer","getSigner","useProvider","gradients","grey","dark","orange","Button","defaultProps","colorScheme","variants","solid","defineStyle","c","bg","borderRadius","_hover","_disabled","_active","bgGradient","background","hoverBg","activeBg","outline","borderColor","border","ghost","theme","extendTheme","useSystemColorMode","initialColorMode","colors","gray","red","yellow","green","blue","cyan","purple","pink","navy","success","warning","shadows","fonts","heading","body","display","mono","components","Popover","responsive","popper","maxWidth","Input","focusBorderColor","errorBorderColor","Select","iconColor","NumberInput","Alert","variant","container","borderInlineStartColor","Textarea","Skeleton","startColor","endColor","Checkbox","baseStyle","control","_checked","_invalid","Radio","Badge","subtle","alignItems","boxShadow","Tag","Accordion","borderWidth","Progress","filledTrack","track","Tabs","tab","_selected","Tooltip","textAlign","Switch","Spinner","Menu","parts","button","span","px","list","mt","bgColor","padding","py","item","p","_first","borderTopLeftRadius","borderTopRightRadius","_last","borderBottomLeftRadius","borderBottomRightRadius","_focus","textStyles","fontSize","base","lg","fontFamily","lineHeight","fontWeight","md","sizes","max","min","full","xs","sm","xl","styles","global","Fonts","Global","TermsModal","defaultOpen","isOpen","setOpen","useState","setEnabled","Modal","onClose","ModalOverlay","ModalContent","pt","pb","ModalHeader","ModalBody","Text","Box","onScroll","e","div","currentTarget","scrollTop","scrollHeight","offsetHeight","as","my","overflow","overflowX","sx","backgroundColor","UnorderedList","ListItem","Link","href","target","_focusVisible","ReactRouterLink","to","mx","onClick","onSubmit","setItem","JSON","stringify","isDisabled","HomePageSchema","z","object","page","literal","optional","accountId","string","convert","migrate","sort","dir","refine","message","SettingsPageSchema","ManageActionSchema","union","PositionPageSchema","collateralSymbol","manageAction","makeParams","newParams","createSearchParams","cleaned","entries","fromEntries","cleanObject","a","b","localeCompare","makeSearch","useParams","searchParams","setSearchParams","useSearchParams","React","Array","from","schema","parsed","safeParse","searchParamsToObject","Footer","Flex","borderTop","borderTopColor","Container","maxW","justifyContent","mr","TokenIcon","toUpperCase","fallbackSrc","style","SynthIcon","StepSuccessFinal","onConfirm","VStack","spacing","flex","rounded","CheckIcon","parseUnits","decimals","wei","toBN","prettyString","text","startLength","endLength","length","substring","renderAccountId","hex","toHexString","slice","currency","options","minimumDigitsToShowAfterZeros","stringValue","numberValue","toNumber","Math","floor","maximumFractionDigits","log10","isNaN","toLocaleString","minimumFractionDigits","ChakraTooltip","hasArrow","Amount","prefix","suffix","testid","showTooltip","formattedValue","preciseValue","isMaxUint","useMemo","eq","cleanNumber","replaceAll","constants","lte","_Fragment","CONTRACT_ERROR_OPEN","ContractError","contractError","setIsOpen","fontStyle","Collapse","animateOpacity","unmountOnExit","whiteSpace","pl","args","map","key","val","Date","format","join","createIcon","path","points","CloseIcon","StepIcon","status","failed","loading","disabled","__css","statusColor","Step","minWidth","minHeight","transitionProperty","transitionDuration","StepCheckbox","opacity","Multistep","step","title","subtitle","checkboxLabel","checkboxProps","position","gap","direction","initialState","modalOpen","txnStatus","txnHash","reducer","state","action","payload","debug","approveAbi","useApprove","contractAddress","amount","spender","txnState","dispatch","useReducer","allowance","refetch","refetchAllowance","useAllowance","accountAddress","contract","Contract","BigNumber","sufficientAllowance","gte","queryClient","useQueryClient","mutation","useMutation","mutationFn","amountToApprove","infiniteApproval","gasLimitPromised","estimateGas","approve","populatedTxnPromised","populateTransaction","gasLimit","populatedTxn","txn","sendTransaction","mul","hash","receipt","waitForTransaction","onSuccess","invalidateQueries","onError","isLoading","isPending","mutateAsync","requireApproval","importAllErrors","importPositionManager","importClosePosition","useClosePosition","targetNetwork","staleTime","Infinity","throwOnError","useStaticAaveUSDC","CollateralToken_stataBasUSDC","CollateralToken_stataUSDC","importStaticAaveUSDC","ERC721_ERRORS","PYTH_ERRORS","extractErrorData","cause","useContractErrorParser","AllErrors","useAllErrors","ClosePosition","StaticAaveUSDC","extraAbi","errorData","startsWith","content","reason","decode","signature","errorParsed","parseError","errorArgs","parseInt","unwei","parseFloat","getTime","parseContractError","useLegacyMarket","LegacyMarketProxy","importLegacyMarket","tokenAbi","useTokenBalance","tokenAddress","walletAddress","TokenContract","balance","balanceOf","select","refetchInterval","importUSDProxy","USDProxy","useUSDProxy","contractsHash","Contracts","some","toLowerCase","split","reduce","charCodeAt","useV2xSynthetix","V2x","importV2x","useV2sUSD","V2xSynthetix","V2xSynthetixContract","synths","ChangeStat","formatFn","newValue","hasChanges","dataCy","flexWrap","isTruncated","ArrowForwardIcon","TransactionSummary","items","flexDir","i","justify","flexGrow","StepSuccess","v2Balance","v3Balance","sub","add","mb","ArrowUpIcon","MigrateUSDTransaction","onBack","legacyMarket","v2_sUSD","v2_balance","v3_sUSD","v3_balance","setInfiniteApproval","txState","setTxState","txSummary","setTxSummary","toast","useToast","isClosable","duration","isSuccess","setIsLoading","setIsSuccess","LegacyMarket","LegacyMarketContract","transaction","convertUSD","LegacyMarketInterface","parsedError","errorResult","useMigrateUSD","errorParser","closeAll","isChecked","onChange","checked","BorderBox","NUMBER_REGEX","cleanupNumber","float","InputProps","inputValue","setInputValue","gt","onInputChange","_value","test","nextValue","_err","ref","useRef","useEffect","current","setCustomValidity","lt","autoFocus","placeholder","_placeholder","maxLength","StepIntro","setAmount","loaded","setLoaded","flexDirection","cursor","isRequired","AlertIcon","AlertDescription","MigrateUSDModal","_params","setParams","setStep","closeOnOverlayClick","Heading","CloseButton","Divider","MigrateUSDButton","currentNetwork","importAccountProxy","AccountProxy","useAccountProxy","importTrustedMulticallForwarder","TrustedMulticallForwarder","useTrustedMulticallForwarder","useAccounts","Multicall3","AccountProxyContract","Multicall3Contract","numberOfAccountTokens","accountIndexes","keys","calls","index","callData","interface","encodeFunctionData","multicallResponse","callStatic","aggregate3","returnData","tokenOfOwnerByIndex","decodeFunctionResult","importCoreProxy","CoreProxy","useCoreProxy","set","useLocalStorage","initialValue","storedValue","setStoredValue","parse","get","valueToStore","Function","mainnets","testnets","NetworkController","toolTipLabel","setTooltipLabel","isPendingAccounts","createAccount","CoreProxyContract","newAccountId","logs","forEach","txLog","topics","getEventTopic","decodeEventLog","useCreateAccount","showTestnets","setShowTestnets","paramsAccountId","account","_","autoSelect","disableModals","notConnected","notSupported","MenuButton","ml","MenuList","MenuItem","MenuOptionGroup","placement","userSelect","ens","closeOnClick","CopyIcon","navigator","clipboard","writeText","setTimeout","preventDefault","IconButton","SettingsIcon","stopPropagation","mutate","leftIcon","xmlns","Header","useDisclosure","location","useLocation","borderBottomWidth","borderBottomColor","RouterLink","includes","useAccountPermissions","getAccountPermissions","acc","user","permissions","useAccountOwner","ownerOf","etherscanLink","chain","isTx","transactionLink","Address","link","rel","ExternalLinkIcon","useManagePermissions","existing","selected","grants","revokes","getPermissionDiff","concat","permission","CoreProxyInterface","grantCalls","allowFailure","requireSuccess","revokeCalls","permissionsList","PermissionsInfo","InfoIcon","PermissionModal","existingPermissions","setAddress","selectedPermissions","setSelectedPermissions","submit","permissionData","accountOwner","isAddressValid","utils","isFormValid","ModalCloseButton","trim","isInvalid","isActive","s","textTransform","ModalFooter","PermissionRow","currentPermissions","isOwner","isPermissionOpen","onPermissionClose","onOpen","onPermissionOpen","removePermissions","Tr","Td","EditIcon","DeleteIcon","PermissionTableLoading","rows","row","TransferOwnershipModal","owner","setTo","transferFrom","useTransferAccountId","isTargetValid","PermissionTable","refetchAccounts","isTransferOpen","onTransferClose","onTransferOpen","loadingOwner","refetchAccountOwner","TableContainer","borderCollapse","borderSpacing","Table","Thead","Th","Tbody","isLoaded","DelegationIcon","Permissions","Settings","Helmet","useV2Position","V2xSynthetixInterface","aggregate","collateral","debt","cratio","transferableSynthetix","align","List","ListIcon","Spacer","StepExplain","isExternal","cRatio","getHealthVariant","targetCratio","liquidationCratio","ratioIsMaxUInt","ratio","MAX_SAFE_INTEGER","getProgressSize","badgeColors","CRatioBadge","useSystemToken","systemToken","importSystemToken","useSNX","CollateralToken_SNX","importSNX","loadCollateralTypes","collateralTokens","importCollateralTokens","config","displaySymbol","depositingEnabled","issuanceRatioD18","liquidationRatioD18","liquidationRewardD18","minDelegationD18","oracleNodeId","oracle","constPrice","externalContract","stalenessTolerance","pythFeedId","useCollateralTypes","includeDelegationOff","MainnetSNX","OptimismSNX","collateralType","useCollateralType","networkOverride","collateralTypes","StepSummary","snxCollateral","isUnderstanding","setIsUnderstanding","random","signerAddress","getAddress","useMigrate","rates","mainnetProvider","ExchangeRates","ratesForCurrencies","formatBytes32String","snx","eth","useRates","snxPrice","ethPrice","handleSubmit","HStack","formatEther","gasPrice","textDecoration","MigrationDialog","MigrationBanner","setAccountId","isUSDModalOpen","setIsUSDModalOpen","_migrate","Fade","borderLeftColor","importPythFeeds","pythFeeds","importPythVerifier","supportedAprNetworks","fetchApr","response","fetch","json","highestAprCollateral","apr7d","combinedApr","cumulativePnl","collateralAprs","usePoolsList","pools","aprs","fetchPoolsList","fetchAprs","synthetixPools","apr","supportedNetworks","networksOffline","urls","query","PoolsListData","res","poolInfo","vaults","priceService","EvmPriceServiceConnection","getAllPriceIdsEntries","extras","Set","String","endsWith","getPythFeedIdsFromCollateralList","collateralList","priceIds","importExtras","flat","deduped","priceId","replace","useOfflinePrices","collaterals","stables","filteredCollaterals","price","collateralsWithPriceId","prices","getLatestPriceFeeds","col","getPriceUnchecked","push","expo","useCollateralPriceUpdates","multicallAddress","multiCallAbi","multicallInterface","pythInterface","pythFeedIds","getPythFeedIds","txs","getPricesTx","call","decodedMultiCall","outdatedPriceIds","priceUpdateTx","unique","signedOffchainData","getPriceFeedsUpdateData","PythVerfier","getPriceUpdates","catch","importSpotMarketProxy","SpotMarketProxy","notNil","fetchOffchainData","flatErrorsData","lastChunk","getDefaultFromAddress","chainName","logMulticall","CoryProxyContract","USDProxyContract","ClosePositionContract","AllInterface","readableAbi","line","fragment","minimal","sighash","has","dedupedAbi","rest","parseTransaction","$","unnamedArgs","extractPriceId","_oracleAddress","oracleQuery","_updateType","_stalenessTolerance","getMulticallTransaction","Multicall3Interface","multicallTxn","totalValue","_calls","withERC7412","AllErrorsContract","newError","missingPriceUpdates","err","parsedErr","missingPriceUpdatesUnique","extraPriceUpdateTxn","erc7412Call","newCalls","erc7412Tx","decodedMulticall","PythVerifier","decodedMulticallWithoutPriceUpdates","decoded","fetchOraclePrice","nodeId","OracleManagerProxyContract","OracleManagerProxy","importOracleManagerProxy","processCall","process","node","timestamp","useOraclePrice","PoolCardsLoading","formatNumberToUsd","Intl","NumberFormat","formatNumber","formatApr","isBaseAndromeda","getSpotMarketId","USDC_BASE_MARKET","STATA_BASE_MARKET","useStataUSDCApr","subgraphResponse","headers","stataStats","reserves","reserve","underlyingAsset","calculateCompoundedRate","rate","liquidityRate","toPrecision","useSynthTokens","synthTokens","importSynthTokens","useIsSynthStataUSDC","addr","useStaticAaveUSDCRate","StaticAaveUSDCContract","useUSDC","importUSDC","PoolRow","pool","_pool","collateralPrices","wrapperToken","synth","stataUSDCApr","balanceAddress","stataUSDCRate","tokenBalance","USDCToken","usdcBalance","isStataUSDC","collateralApr","apr7dRewards","apr7dPnl","buttonText","order","collateralDeposited","right","bottom","minW","HeaderText","letterSpacing","PoolsList","poolsList","isPendingPoolsList","baseCollateralTypes","isPendingBaseCollateralTypes","mainnetCollateralTypes","isPendingMainnetCollateralTypes","allCollaterals","isPendingCollateralPrices","oracleId","stata","stataPrice","isStataPriceLoading","filteredPools","collateral_type","total_amount_deposited","allCollateralPrices","flatMap","calculateCRatio","collateralValue","useLiquidityPositions","getAccountAvailableSystemTokenCallPromised","getAccountAvailableCollateral","getPositionCollateralCallsPromised","getPositionCollateral","getPositionDebtCallsPromised","getPositionDebt","getCollateralPriceCallsPromised","getCollateralPrice","getAccountCollateralCallPromised","getAccountCollateral","accountAvailableSystemToken","liquidityPositions","positionCollateral","positionDebt","collateralPriceRaw","totalDepositedBigNumber","totalAssignedBigNumber","totalLockedBigNumber","totalDeposited","totalAssigned","totalLocked","availableCollateral","availableSystemToken","collateralPrice","collateralAmount","liquidityPosition","setQueryData","PositionsEmpty","PositionsNotConnected","getDebtColor","PnlAmount","abs","DebtAmount","useAccountCollateralUnlockDate","lastInteraction","accountTimeoutWithdraw","getAccountLastInteraction","getConfigUint","collateralUnlock","useWithdrawTimer","accountCollateralUnlockDate","isLoadingDate","minutes","hours","seconds","isRunning","restart","useTimer","expiryTimestamp","autoStart","CRatioAmount","PositionRow","stataUSDCAPR","stataUSDCAPRParsed","TimeIcon","pr","SynthSkeleton","SynthCircle","SkeletonCircle","PositionsRowLoading","PositionTableHeader","TableDivider","PositionsList","isPendingLiquidityPositions","useApr","filteredLiquidityPositions","positionApr","useRewardsDistributors","rewardsDistributors","importRewardsDistributors","groupRewardsBySymbol","rewards","Map","claimableAmount","distributor","synthToken","payoutToken","useRewards","vaultDistributors","claimMethod","poolDistributors","poolDistributorsPerCollateral","liquidationRewardsDistributors","multicall","availableRewards","info","useSpotMarketProxy","WithdrawIncrease","AllRewardsModal","cachedRewards","setCachedRewards","groupedRewards","CircularProgress","isIndeterminate","RewardsLoading","RewardsRow","Rewards","isPendingRewards","exec","claimAll","transactions","SpotMarketProxyContract","minAmountReceived","unwrap","synthMarketId","unshift","settle","useClaimAllRewards","backgroundImage","borderBottom","StatBox","StatsList","isPendingSnxPrice","priceFeed","rewardsTokens","reward","rewardsTokenPrices","isPendingRewardsPrices","collateralAddresses","useCollateralPrices","totalRewardsValue","totalDebt","totalAssets","useSynthBalances","TokenInterface","balances","SynthRow","SynthsLoading","SynthsUnwrapModal","synthBalances","cachedSynths","setCachedSynths","filteredSynths","Synths","isPendingSynthBalances","unwrapAll","useUnwrapAllSynths","Dashboard","ManagePositionContext","createContext","collateralChange","debtChange","withdrawAmount","setDebtChange","setCollateralChange","setWithdrawAmount","ManagePositionProvider","Provider","useLiquidityPosition","getPositionCollateralCallPromised","getPositionDebtCallPromised","getCollateralPriceCallPromised","useTokenPrice","pythCollateralPrices","omCollateralPrices","omPrices","LiquidityPositionUpdated","subline","alertText","summary","ClosePositionOneStep","refetchLiquidityPosition","usePythVerifier","usePythFeeds","execClosePosition","freshLiquidityPosition","adjustedAllowance","approveAccountTx","approveUsdTx","closePositionTx","closePosition","callsPromise","ArrowBackIcon","useBorrow","borrowAmount","isReady","mintUsd","useDebtRepayer","importDebtRepayer","useRepay","repayAmount","PositionManager","usePositionManager","systemTokenBalance","canRepay","PositionManagerContract","repayTx","repay","useUndelegate","collateralTypeAddress","currentCollateral","delegateCollateral","useUndelegateBaseAndromeda","DebtRepayer","DebtRepayerContract","depositDebtToRepay","delegateTx","ClosePositionTransactions","steps","setSteps","debtSymbol","collateralAddress","availableUSDCollateral","execRepay","undelegate","USDC","approveUSDC","requireApprovalUSDC","undelegateBaseAndromeda","execBorrow","getSteps","cb","ClosePositionUi","isPendingLiquidityPosition","isPendingSystemTokenBalance","debtPrice","ClosePositionDeployment","alignSelf","transactionStep","setTransactions","UnsupportedCollateralAlert","ClaimSuccessBanner","SynthetixLogo","ClaimModal","useContext","showClaimBanner","setShowClaimBanner","maxClaimble","isBorrow","settleBorrow","execBorrowWithErrorParser","Events","State","FailedSteps","ServiceNames","initialContext","wrapAmount","requireStataUSDCApproval","hasEnoughStataUSDC","DepositMachine","createMachine","initial","predictableActionArguments","context","on","actions","assign","_context","event","states","cond","invoke","wrap","onDone","approveUSDCForStata","wrapUSDC","approveCollateral","deposit","useSynthToken","useDepositBaseAndromeda","synthAmountNeeded","tokenAmountToWrap","SynthTokenContract","synthApproval","delegate","ZodBigNumber","custom","isBigNumber","SmallIntSchema","WeiSchema","BalanceSchema","useEthBalance","getBalance","CRatioChangeStat","currentDebt","DepositModal","synthNeeded","collateralNeeded","wrapEth","wethBalance","useWrapEth","ethCollateral","ethBalance","refetchETHBalance","refetchWETHBalance","wrapETHAmount","execDeposit","useDeposit","amountNeeded","depositBaseAndromeda","useMachine","services","wrapAmountString","isSuccessOrDeposit","matches","handleClose","txSummaryItems","isProcessing","isWETH","stepNumbers","StataDepositModal","staticAaveUSDCRate","stataUSDCTokenBalanceRaw","stataUSDCTokenBalance","stataUSDCTokenBalanceD18","stataAmountNeeded","usdcBalanceNeeded","wrapUSDCToStataUSDC","depositToAave","stataRate","stataAmount","usdcAmountWithBuffer","useConvertStataUSDC","stataApprovalNeeded","approveStata","requireApprovalStata","hasEnoughStataUSDCBalance","useGetUSDTokens","getWrapper","wrapCollateralType","snxUSD","sUSD","RepayMachine","RepayModal","settleRepay","execRepayBaseAndromeda","settleRepayBaseAndromeda","useRepayBaseAndromeda","usdTokens","debtChangeAbs","amountToDeposit","spotMarketId","Synth_Contract","synth_approval","sell_synth","sell","SystemTokenContract","sUSD_Approval","burn","burnUsd","needToDeposit","UndelegateMachine","UndelegateModal","execUndelegate","collateralChangeString","validatePosition","targetCRatio","newDebt","newCollateralAmount","newCRatio","maybeMaxDebt","maxDebt","isValid","WithdrawModal","isDebtWithdrawal","setState","isPendingStaticAaveUSDC","unwrapStata","withdraw","useUnwrapStataUSDC","withdrawMain","isReadyWithdrawMain","useWithdraw","withdrawAndromeda","isReadyWithdrawAndromeda","useWithdrawBaseAndromeda","total","wrappedCollateralAmount","snxUSDAmount","sUSDC_amount","SpotProxyContract","withdraw_collateral","withdraw_snxUSD","snxUSDApproval","buy_sUSDC","buy","synthAmount","quoteBuyExactIn","unwrapAmount","unwrapTxnPromised","unwrapCollateralTxnPromised","withdraw_collateral_txn","withdraw_snxUSD_txn","snxUSDApproval_txn","buy_sUSDC_txn","unwrapTxnPromised_txn","unwrapCollateralTxnPromised_txn","allCalls","Claim","maxBorrowingCapacity","CollateralAlert","Deposit","transferrableSnx","snxAddress","transferable","useTransferableSynthetix","collateralBalance","stataBalance","maxAmount","overAvailableBalance","setRepayAmount","Repay","isReadyRepay","mutationRepay","neg","BorrowModal","setBorrowAmount","Borrow","isBorrowReady","mutationBorrow","RepayAndromedaDebt","clearDebt","useClearDebt","approvalLoading","hasEnoughBalance","MarketConfigurationSchema","weight","maxDebtShareValue","isLocked","boolean","PoolConfigurationSchema","number","markets","array","isAnyMarketLocked","Undelegate","poolConfiguration","usePoolConfiguration","getPoolConfiguration","marketId","maxDebtShareValueD18","weightD18","m","isMarketCapacityLocked","market","maxWithdrawable","minCollateralRequired","isLoadingRequiredData","leftoverCollateral","isValidLeftover","isInputDisabled","isSubmitDisabled","AlertTitle","Withdraw","unlockDate","COLLATERALACTIONS","ManageAction","setTxnModalOpen","txnModalOpen","manageActionParam","debtActions","isBase","DEBTACTIONS","form","reportValidity","isFitted","TabList","Tab","TabPanels","TabPanel","minH","LineWithText","left","tooltipText","top","margin","CRatioBar","currentCRatio","newBarSize","currentBarSize","TriangleDownIcon","TriangleUpIcon","CollateralStats","alignContent","DebtStats","PnlStats","ManageStats","VaultCollateralSchema","PositionTitle","vaultsData","isPendingVaultsData","getVaultCollateral","vaultCollateral","useVaultsData","vaultData","StataDepositBanner","CoinImage","LockedCollateral","locks","isPendingLocks","getLocks","lock","lockExpirationTime","expirationDate","amountD18","useLocks","intlFormat","year","month","day","Manage","isPendingCollateralType","isPendingPool","usePool","Content","Router","Suspense","fallback","chains","onboard","init","autoConnectLastWallet","autoConnectAllPreviousWallet","wallets","injectedModule","coinbaseModule","displayUnavailable","ProviderLabel","MetaMask","Trust","trezorModule","appUrl","email","ledgerModule","projectId","walletConnectVersion","walletConnectModule","version","dappUrl","gnosisModule","accountCenter","desktop","mobile","notify","QueryClient","defaultOptions","queries","retry","refetchOnWindowFocus","mutations","extendedTheme","update-error","update-warning","update-success","white","ColorMode","colorMode","toggleColorMode","useColorMode","App","Head","property","QueryClientProvider","client","Web3OnboardProvider","web3Onboard","ChakraProvider","BrowserRouter","ReactQueryDevtools","document","querySelector","bootstrap","DEBUG","obj","MaxUint256","MaxInt256","devtoolsFormatters","header","hasBody","MAGIC_WALLET","isAddress","rpcProvider","providers","JsonRpcProvider","getNetwork","magicProvider","ethereum","Proxy","prop","ReactDOM","render"],"sourceRoot":""}