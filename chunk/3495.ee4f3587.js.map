{"version":3,"file":"chunk/3495.ee4f3587.js","mappings":"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","sources":["webpack://@snx-v3/liquidity/../../node_modules/@noble/hashes/esm/_md.js","webpack://@snx-v3/liquidity/../../node_modules/@noble/hashes/esm/sha256.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/accounts/utils/parseAccount.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/constants/kzg.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/constants/number.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/constants/solidity.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/errors/blob.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/errors/chain.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/abi/formatAbiItemWithArgs.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/errors/contract.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/errors/cursor.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/errors/node.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/errors/stateOverride.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/errors/transaction.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/errors/utils.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/encoding/fromBytes.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/abi/decodeAbiParameters.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/abi/decodeErrorResult.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/blob/blobsToCommitments.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/blob/blobsToProofs.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/blob/commitmentToVersionedHash.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/blob/commitmentsToVersionedHashes.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/constants/blob.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/blob/toBlobSidecars.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/blob/toBlobs.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/chain/defineChain.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/cursor.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/encoding/toRlp.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/errors/getCallError.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/errors/getNodeError.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/formatters/block.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/formatters/extract.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/formatters/formatter.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/formatters/log.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/formatters/transaction.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/formatters/transactionReceipt.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/formatters/transactionRequest.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/hash/sha256.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/stringify.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/transaction/assertRequest.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/transaction/getTransactionType.js","webpack://@snx-v3/liquidity/../../node_modules/viem/_esm/utils/unit/formatGwei.js"],"sourcesContent":["import { exists, output } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n/**\n * Polyfill for Safari 14\n */\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n/**\n * Choice: a ? b : c\n */\nexport const Chi = (a, b, c) => (a & b) ^ (~a & c);\n/**\n * Majority function, true if any two inputs is true\n */\nexport const Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_md.js.map","import { HashMD, Chi, Maj } from './_md.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state:\n// first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nexport class SHA256 extends HashMD {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\n/**\n * SHA2-224 hash function\n */\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","export function parseAccount(account) {\n    if (typeof account === 'string')\n        return { address: account, type: 'json-rpc' };\n    return account;\n}\n//# sourceMappingURL=parseAccount.js.map","// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\nexport const versionedHashVersionKzg = 1;\n//# sourceMappingURL=kzg.js.map","export const maxInt8 = 2n ** (8n - 1n) - 1n;\nexport const maxInt16 = 2n ** (16n - 1n) - 1n;\nexport const maxInt24 = 2n ** (24n - 1n) - 1n;\nexport const maxInt32 = 2n ** (32n - 1n) - 1n;\nexport const maxInt40 = 2n ** (40n - 1n) - 1n;\nexport const maxInt48 = 2n ** (48n - 1n) - 1n;\nexport const maxInt56 = 2n ** (56n - 1n) - 1n;\nexport const maxInt64 = 2n ** (64n - 1n) - 1n;\nexport const maxInt72 = 2n ** (72n - 1n) - 1n;\nexport const maxInt80 = 2n ** (80n - 1n) - 1n;\nexport const maxInt88 = 2n ** (88n - 1n) - 1n;\nexport const maxInt96 = 2n ** (96n - 1n) - 1n;\nexport const maxInt104 = 2n ** (104n - 1n) - 1n;\nexport const maxInt112 = 2n ** (112n - 1n) - 1n;\nexport const maxInt120 = 2n ** (120n - 1n) - 1n;\nexport const maxInt128 = 2n ** (128n - 1n) - 1n;\nexport const maxInt136 = 2n ** (136n - 1n) - 1n;\nexport const maxInt144 = 2n ** (144n - 1n) - 1n;\nexport const maxInt152 = 2n ** (152n - 1n) - 1n;\nexport const maxInt160 = 2n ** (160n - 1n) - 1n;\nexport const maxInt168 = 2n ** (168n - 1n) - 1n;\nexport const maxInt176 = 2n ** (176n - 1n) - 1n;\nexport const maxInt184 = 2n ** (184n - 1n) - 1n;\nexport const maxInt192 = 2n ** (192n - 1n) - 1n;\nexport const maxInt200 = 2n ** (200n - 1n) - 1n;\nexport const maxInt208 = 2n ** (208n - 1n) - 1n;\nexport const maxInt216 = 2n ** (216n - 1n) - 1n;\nexport const maxInt224 = 2n ** (224n - 1n) - 1n;\nexport const maxInt232 = 2n ** (232n - 1n) - 1n;\nexport const maxInt240 = 2n ** (240n - 1n) - 1n;\nexport const maxInt248 = 2n ** (248n - 1n) - 1n;\nexport const maxInt256 = 2n ** (256n - 1n) - 1n;\nexport const minInt8 = -(2n ** (8n - 1n));\nexport const minInt16 = -(2n ** (16n - 1n));\nexport const minInt24 = -(2n ** (24n - 1n));\nexport const minInt32 = -(2n ** (32n - 1n));\nexport const minInt40 = -(2n ** (40n - 1n));\nexport const minInt48 = -(2n ** (48n - 1n));\nexport const minInt56 = -(2n ** (56n - 1n));\nexport const minInt64 = -(2n ** (64n - 1n));\nexport const minInt72 = -(2n ** (72n - 1n));\nexport const minInt80 = -(2n ** (80n - 1n));\nexport const minInt88 = -(2n ** (88n - 1n));\nexport const minInt96 = -(2n ** (96n - 1n));\nexport const minInt104 = -(2n ** (104n - 1n));\nexport const minInt112 = -(2n ** (112n - 1n));\nexport const minInt120 = -(2n ** (120n - 1n));\nexport const minInt128 = -(2n ** (128n - 1n));\nexport const minInt136 = -(2n ** (136n - 1n));\nexport const minInt144 = -(2n ** (144n - 1n));\nexport const minInt152 = -(2n ** (152n - 1n));\nexport const minInt160 = -(2n ** (160n - 1n));\nexport const minInt168 = -(2n ** (168n - 1n));\nexport const minInt176 = -(2n ** (176n - 1n));\nexport const minInt184 = -(2n ** (184n - 1n));\nexport const minInt192 = -(2n ** (192n - 1n));\nexport const minInt200 = -(2n ** (200n - 1n));\nexport const minInt208 = -(2n ** (208n - 1n));\nexport const minInt216 = -(2n ** (216n - 1n));\nexport const minInt224 = -(2n ** (224n - 1n));\nexport const minInt232 = -(2n ** (232n - 1n));\nexport const minInt240 = -(2n ** (240n - 1n));\nexport const minInt248 = -(2n ** (248n - 1n));\nexport const minInt256 = -(2n ** (256n - 1n));\nexport const maxUint8 = 2n ** 8n - 1n;\nexport const maxUint16 = 2n ** 16n - 1n;\nexport const maxUint24 = 2n ** 24n - 1n;\nexport const maxUint32 = 2n ** 32n - 1n;\nexport const maxUint40 = 2n ** 40n - 1n;\nexport const maxUint48 = 2n ** 48n - 1n;\nexport const maxUint56 = 2n ** 56n - 1n;\nexport const maxUint64 = 2n ** 64n - 1n;\nexport const maxUint72 = 2n ** 72n - 1n;\nexport const maxUint80 = 2n ** 80n - 1n;\nexport const maxUint88 = 2n ** 88n - 1n;\nexport const maxUint96 = 2n ** 96n - 1n;\nexport const maxUint104 = 2n ** 104n - 1n;\nexport const maxUint112 = 2n ** 112n - 1n;\nexport const maxUint120 = 2n ** 120n - 1n;\nexport const maxUint128 = 2n ** 128n - 1n;\nexport const maxUint136 = 2n ** 136n - 1n;\nexport const maxUint144 = 2n ** 144n - 1n;\nexport const maxUint152 = 2n ** 152n - 1n;\nexport const maxUint160 = 2n ** 160n - 1n;\nexport const maxUint168 = 2n ** 168n - 1n;\nexport const maxUint176 = 2n ** 176n - 1n;\nexport const maxUint184 = 2n ** 184n - 1n;\nexport const maxUint192 = 2n ** 192n - 1n;\nexport const maxUint200 = 2n ** 200n - 1n;\nexport const maxUint208 = 2n ** 208n - 1n;\nexport const maxUint216 = 2n ** 216n - 1n;\nexport const maxUint224 = 2n ** 224n - 1n;\nexport const maxUint232 = 2n ** 232n - 1n;\nexport const maxUint240 = 2n ** 240n - 1n;\nexport const maxUint248 = 2n ** 248n - 1n;\nexport const maxUint256 = 2n ** 256n - 1n;\n//# sourceMappingURL=number.js.map","// https://docs.soliditylang.org/en/v0.8.16/control-structures.html#panic-via-assert-and-error-via-require\nexport const panicReasons = {\n    1: 'An `assert` condition failed.',\n    17: 'Arithmetic operation resulted in underflow or overflow.',\n    18: 'Division or modulo by zero (e.g. `5 / 0` or `23 % 0`).',\n    33: 'Attempted to convert to an invalid type.',\n    34: 'Attempted to access a storage byte array that is incorrectly encoded.',\n    49: 'Performed `.pop()` on an empty array',\n    50: 'Array index is out of bounds.',\n    65: 'Allocated too much memory or created an array which is too large.',\n    81: 'Attempted to call a zero-initialized variable of internal function type.',\n};\nexport const solidityError = {\n    inputs: [\n        {\n            name: 'message',\n            type: 'string',\n        },\n    ],\n    name: 'Error',\n    type: 'error',\n};\nexport const solidityPanic = {\n    inputs: [\n        {\n            name: 'reason',\n            type: 'uint256',\n        },\n    ],\n    name: 'Panic',\n    type: 'error',\n};\n//# sourceMappingURL=solidity.js.map","import { versionedHashVersionKzg } from '../constants/kzg.js';\nimport { BaseError } from './base.js';\nexport class BlobSizeTooLargeError extends BaseError {\n    constructor({ maxSize, size }) {\n        super('Blob size is too large.', {\n            metaMessages: [`Max: ${maxSize} bytes`, `Given: ${size} bytes`],\n            name: 'BlobSizeTooLargeError',\n        });\n    }\n}\nexport class EmptyBlobError extends BaseError {\n    constructor() {\n        super('Blob data must not be empty.', { name: 'EmptyBlobError' });\n    }\n}\nexport class InvalidVersionedHashSizeError extends BaseError {\n    constructor({ hash, size, }) {\n        super(`Versioned hash \"${hash}\" size is invalid.`, {\n            metaMessages: ['Expected: 32', `Received: ${size}`],\n            name: 'InvalidVersionedHashSizeError',\n        });\n    }\n}\nexport class InvalidVersionedHashVersionError extends BaseError {\n    constructor({ hash, version, }) {\n        super(`Versioned hash \"${hash}\" version is invalid.`, {\n            metaMessages: [\n                `Expected: ${versionedHashVersionKzg}`,\n                `Received: ${version}`,\n            ],\n            name: 'InvalidVersionedHashVersionError',\n        });\n    }\n}\n//# sourceMappingURL=blob.js.map","import { BaseError } from './base.js';\nexport class ChainDoesNotSupportContract extends BaseError {\n    constructor({ blockNumber, chain, contract, }) {\n        super(`Chain \"${chain.name}\" does not support contract \"${contract.name}\".`, {\n            metaMessages: [\n                'This could be due to any of the following:',\n                ...(blockNumber &&\n                    contract.blockCreated &&\n                    contract.blockCreated > blockNumber\n                    ? [\n                        `- The contract \"${contract.name}\" was not deployed until block ${contract.blockCreated} (current block ${blockNumber}).`,\n                    ]\n                    : [\n                        `- The chain does not have the contract \"${contract.name}\" configured.`,\n                    ]),\n            ],\n            name: 'ChainDoesNotSupportContract',\n        });\n    }\n}\nexport class ChainMismatchError extends BaseError {\n    constructor({ chain, currentChainId, }) {\n        super(`The current chain of the wallet (id: ${currentChainId}) does not match the target chain for the transaction (id: ${chain.id} – ${chain.name}).`, {\n            metaMessages: [\n                `Current Chain ID:  ${currentChainId}`,\n                `Expected Chain ID: ${chain.id} – ${chain.name}`,\n            ],\n            name: 'ChainMismatchError',\n        });\n    }\n}\nexport class ChainNotFoundError extends BaseError {\n    constructor() {\n        super([\n            'No chain was provided to the request.',\n            'Please provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient.',\n        ].join('\\n'), {\n            name: 'ChainNotFoundError',\n        });\n    }\n}\nexport class ClientChainNotConfiguredError extends BaseError {\n    constructor() {\n        super('No chain was provided to the Client.', {\n            name: 'ClientChainNotConfiguredError',\n        });\n    }\n}\nexport class InvalidChainIdError extends BaseError {\n    constructor({ chainId }) {\n        super(typeof chainId === 'number'\n            ? `Chain ID \"${chainId}\" is invalid.`\n            : 'Chain ID is invalid.', { name: 'InvalidChainIdError' });\n    }\n}\n//# sourceMappingURL=chain.js.map","import { stringify } from '../stringify.js';\nexport function formatAbiItemWithArgs({ abiItem, args, includeFunctionName = true, includeName = false, }) {\n    if (!('name' in abiItem))\n        return;\n    if (!('inputs' in abiItem))\n        return;\n    if (!abiItem.inputs)\n        return;\n    return `${includeFunctionName ? abiItem.name : ''}(${abiItem.inputs\n        .map((input, i) => `${includeName && input.name ? `${input.name}: ` : ''}${typeof args[i] === 'object' ? stringify(args[i]) : args[i]}`)\n        .join(', ')})`;\n}\n//# sourceMappingURL=formatAbiItemWithArgs.js.map","import { parseAccount } from '../accounts/utils/parseAccount.js';\nimport { panicReasons } from '../constants/solidity.js';\nimport { decodeErrorResult, } from '../utils/abi/decodeErrorResult.js';\nimport { formatAbiItem } from '../utils/abi/formatAbiItem.js';\nimport { formatAbiItemWithArgs } from '../utils/abi/formatAbiItemWithArgs.js';\nimport { getAbiItem } from '../utils/abi/getAbiItem.js';\nimport { formatEther } from '../utils/unit/formatEther.js';\nimport { formatGwei } from '../utils/unit/formatGwei.js';\nimport { AbiErrorSignatureNotFoundError } from './abi.js';\nimport { BaseError } from './base.js';\nimport { prettyStateOverride } from './stateOverride.js';\nimport { prettyPrint } from './transaction.js';\nimport { getContractAddress } from './utils.js';\nexport class CallExecutionError extends BaseError {\n    constructor(cause, { account: account_, docsPath, chain, data, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, stateOverride, }) {\n        const account = account_ ? parseAccount(account_) : undefined;\n        let prettyArgs = prettyPrint({\n            from: account?.address,\n            to,\n            value: typeof value !== 'undefined' &&\n                `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n            data,\n            gas,\n            gasPrice: typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n            maxFeePerGas: typeof maxFeePerGas !== 'undefined' &&\n                `${formatGwei(maxFeePerGas)} gwei`,\n            maxPriorityFeePerGas: typeof maxPriorityFeePerGas !== 'undefined' &&\n                `${formatGwei(maxPriorityFeePerGas)} gwei`,\n            nonce,\n        });\n        if (stateOverride) {\n            prettyArgs += `\\n${prettyStateOverride(stateOverride)}`;\n        }\n        super(cause.shortMessage, {\n            cause,\n            docsPath,\n            metaMessages: [\n                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n                'Raw Call Arguments:',\n                prettyArgs,\n            ].filter(Boolean),\n            name: 'CallExecutionError',\n        });\n        Object.defineProperty(this, \"cause\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.cause = cause;\n    }\n}\nexport class ContractFunctionExecutionError extends BaseError {\n    constructor(cause, { abi, args, contractAddress, docsPath, functionName, sender, }) {\n        const abiItem = getAbiItem({ abi, args, name: functionName });\n        const formattedArgs = abiItem\n            ? formatAbiItemWithArgs({\n                abiItem,\n                args,\n                includeFunctionName: false,\n                includeName: false,\n            })\n            : undefined;\n        const functionWithParams = abiItem\n            ? formatAbiItem(abiItem, { includeName: true })\n            : undefined;\n        const prettyArgs = prettyPrint({\n            address: contractAddress && getContractAddress(contractAddress),\n            function: functionWithParams,\n            args: formattedArgs &&\n                formattedArgs !== '()' &&\n                `${[...Array(functionName?.length ?? 0).keys()]\n                    .map(() => ' ')\n                    .join('')}${formattedArgs}`,\n            sender,\n        });\n        super(cause.shortMessage ||\n            `An unknown error occurred while executing the contract function \"${functionName}\".`, {\n            cause,\n            docsPath,\n            metaMessages: [\n                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n                prettyArgs && 'Contract Call:',\n                prettyArgs,\n            ].filter(Boolean),\n            name: 'ContractFunctionExecutionError',\n        });\n        Object.defineProperty(this, \"abi\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"args\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"cause\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"contractAddress\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"formattedArgs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"functionName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"sender\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.abi = abi;\n        this.args = args;\n        this.cause = cause;\n        this.contractAddress = contractAddress;\n        this.functionName = functionName;\n        this.sender = sender;\n    }\n}\nexport class ContractFunctionRevertedError extends BaseError {\n    constructor({ abi, data, functionName, message, }) {\n        let cause;\n        let decodedData = undefined;\n        let metaMessages;\n        let reason;\n        if (data && data !== '0x') {\n            try {\n                decodedData = decodeErrorResult({ abi, data });\n                const { abiItem, errorName, args: errorArgs } = decodedData;\n                if (errorName === 'Error') {\n                    reason = errorArgs[0];\n                }\n                else if (errorName === 'Panic') {\n                    const [firstArg] = errorArgs;\n                    reason = panicReasons[firstArg];\n                }\n                else {\n                    const errorWithParams = abiItem\n                        ? formatAbiItem(abiItem, { includeName: true })\n                        : undefined;\n                    const formattedArgs = abiItem && errorArgs\n                        ? formatAbiItemWithArgs({\n                            abiItem,\n                            args: errorArgs,\n                            includeFunctionName: false,\n                            includeName: false,\n                        })\n                        : undefined;\n                    metaMessages = [\n                        errorWithParams ? `Error: ${errorWithParams}` : '',\n                        formattedArgs && formattedArgs !== '()'\n                            ? `       ${[...Array(errorName?.length ?? 0).keys()]\n                                .map(() => ' ')\n                                .join('')}${formattedArgs}`\n                            : '',\n                    ];\n                }\n            }\n            catch (err) {\n                cause = err;\n            }\n        }\n        else if (message)\n            reason = message;\n        let signature;\n        if (cause instanceof AbiErrorSignatureNotFoundError) {\n            signature = cause.signature;\n            metaMessages = [\n                `Unable to decode signature \"${signature}\" as it was not found on the provided ABI.`,\n                'Make sure you are using the correct ABI and that the error exists on it.',\n                `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${signature}.`,\n            ];\n        }\n        super((reason && reason !== 'execution reverted') || signature\n            ? [\n                `The contract function \"${functionName}\" reverted with the following ${signature ? 'signature' : 'reason'}:`,\n                reason || signature,\n            ].join('\\n')\n            : `The contract function \"${functionName}\" reverted.`, {\n            cause,\n            metaMessages,\n            name: 'ContractFunctionRevertedError',\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"reason\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"signature\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.data = decodedData;\n        this.reason = reason;\n        this.signature = signature;\n    }\n}\nexport class ContractFunctionZeroDataError extends BaseError {\n    constructor({ functionName }) {\n        super(`The contract function \"${functionName}\" returned no data (\"0x\").`, {\n            metaMessages: [\n                'This could be due to any of the following:',\n                `  - The contract does not have the function \"${functionName}\",`,\n                '  - The parameters passed to the contract function may be invalid, or',\n                '  - The address is not a contract.',\n            ],\n            name: 'ContractFunctionZeroDataError',\n        });\n    }\n}\nexport class CounterfactualDeploymentFailedError extends BaseError {\n    constructor({ factory }) {\n        super(`Deployment for counterfactual contract call failed${factory ? ` for factory \"${factory}\".` : ''}`, {\n            metaMessages: [\n                'Please ensure:',\n                '- The `factory` is a valid contract deployment factory (ie. Create2 Factory, ERC-4337 Factory, etc).',\n                '- The `factoryData` is a valid encoded function call for contract deployment function on the factory.',\n            ],\n            name: 'CounterfactualDeploymentFailedError',\n        });\n    }\n}\nexport class RawContractError extends BaseError {\n    constructor({ data, message, }) {\n        super(message || '', { name: 'RawContractError' });\n        Object.defineProperty(this, \"code\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 3\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.data = data;\n    }\n}\n//# sourceMappingURL=contract.js.map","import { BaseError } from './base.js';\nexport class NegativeOffsetError extends BaseError {\n    constructor({ offset }) {\n        super(`Offset \\`${offset}\\` cannot be negative.`, {\n            name: 'NegativeOffsetError',\n        });\n    }\n}\nexport class PositionOutOfBoundsError extends BaseError {\n    constructor({ length, position }) {\n        super(`Position \\`${position}\\` is out of bounds (\\`0 < position < ${length}\\`).`, { name: 'PositionOutOfBoundsError' });\n    }\n}\nexport class RecursiveReadLimitExceededError extends BaseError {\n    constructor({ count, limit }) {\n        super(`Recursive read limit of \\`${limit}\\` exceeded (recursive read count: \\`${count}\\`).`, { name: 'RecursiveReadLimitExceededError' });\n    }\n}\n//# sourceMappingURL=cursor.js.map","import { formatGwei } from '../utils/unit/formatGwei.js';\nimport { BaseError } from './base.js';\nexport class ExecutionRevertedError extends BaseError {\n    constructor({ cause, message, } = {}) {\n        const reason = message\n            ?.replace('execution reverted: ', '')\n            ?.replace('execution reverted', '');\n        super(`Execution reverted ${reason ? `with reason: ${reason}` : 'for an unknown reason'}.`, {\n            cause,\n            name: 'ExecutionRevertedError',\n        });\n    }\n}\nObject.defineProperty(ExecutionRevertedError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 3\n});\nObject.defineProperty(ExecutionRevertedError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /execution reverted/\n});\nexport class FeeCapTooHighError extends BaseError {\n    constructor({ cause, maxFeePerGas, } = {}) {\n        super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''}) cannot be higher than the maximum allowed value (2^256-1).`, {\n            cause,\n            name: 'FeeCapTooHighError',\n        });\n    }\n}\nObject.defineProperty(FeeCapTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max fee per gas higher than 2\\^256-1|fee cap higher than 2\\^256-1/\n});\nexport class FeeCapTooLowError extends BaseError {\n    constructor({ cause, maxFeePerGas, } = {}) {\n        super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)}` : ''} gwei) cannot be lower than the block base fee.`, {\n            cause,\n            name: 'FeeCapTooLowError',\n        });\n    }\n}\nObject.defineProperty(FeeCapTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/\n});\nexport class NonceTooHighError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is higher than the next one expected.`, { cause, name: 'NonceTooHighError' });\n    }\n}\nObject.defineProperty(NonceTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce too high/\n});\nexport class NonceTooLowError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super([\n            `Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is lower than the current nonce of the account.`,\n            'Try increasing the nonce or find the latest nonce with `getTransactionCount`.',\n        ].join('\\n'), { cause, name: 'NonceTooLowError' });\n    }\n}\nObject.defineProperty(NonceTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce too low|transaction already imported|already known/\n});\nexport class NonceMaxValueError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}exceeds the maximum allowed nonce.`, { cause, name: 'NonceMaxValueError' });\n    }\n}\nObject.defineProperty(NonceMaxValueError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce has max value/\n});\nexport class InsufficientFundsError extends BaseError {\n    constructor({ cause } = {}) {\n        super([\n            'The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.',\n        ].join('\\n'), {\n            cause,\n            metaMessages: [\n                'This error could arise when the account does not have enough funds to:',\n                ' - pay for the total gas fee,',\n                ' - pay for the value to send.',\n                ' ',\n                'The cost of the transaction is calculated as `gas * gas fee + value`, where:',\n                ' - `gas` is the amount of gas needed for transaction to execute,',\n                ' - `gas fee` is the gas fee,',\n                ' - `value` is the amount of ether to send to the recipient.',\n            ],\n            name: 'InsufficientFundsError',\n        });\n    }\n}\nObject.defineProperty(InsufficientFundsError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /insufficient funds|exceeds transaction sender account balance/\n});\nexport class IntrinsicGasTooHighError extends BaseError {\n    constructor({ cause, gas, } = {}) {\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction exceeds the limit allowed for the block.`, {\n            cause,\n            name: 'IntrinsicGasTooHighError',\n        });\n    }\n}\nObject.defineProperty(IntrinsicGasTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /intrinsic gas too high|gas limit reached/\n});\nexport class IntrinsicGasTooLowError extends BaseError {\n    constructor({ cause, gas, } = {}) {\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction is too low.`, {\n            cause,\n            name: 'IntrinsicGasTooLowError',\n        });\n    }\n}\nObject.defineProperty(IntrinsicGasTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /intrinsic gas too low/\n});\nexport class TransactionTypeNotSupportedError extends BaseError {\n    constructor({ cause }) {\n        super('The transaction type is not supported for this chain.', {\n            cause,\n            name: 'TransactionTypeNotSupportedError',\n        });\n    }\n}\nObject.defineProperty(TransactionTypeNotSupportedError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /transaction type not valid/\n});\nexport class TipAboveFeeCapError extends BaseError {\n    constructor({ cause, maxPriorityFeePerGas, maxFeePerGas, } = {}) {\n        super([\n            `The provided tip (\\`maxPriorityFeePerGas\\`${maxPriorityFeePerGas\n                ? ` = ${formatGwei(maxPriorityFeePerGas)} gwei`\n                : ''}) cannot be higher than the fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''}).`,\n        ].join('\\n'), {\n            cause,\n            name: 'TipAboveFeeCapError',\n        });\n    }\n}\nObject.defineProperty(TipAboveFeeCapError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max priority fee per gas higher than max fee per gas|tip higher than fee cap/\n});\nexport class UnknownNodeError extends BaseError {\n    constructor({ cause }) {\n        super(`An error occurred while executing: ${cause?.shortMessage}`, {\n            cause,\n            name: 'UnknownNodeError',\n        });\n    }\n}\n//# sourceMappingURL=node.js.map","import { BaseError } from './base.js';\nexport class AccountStateConflictError extends BaseError {\n    constructor({ address }) {\n        super(`State for account \"${address}\" is set multiple times.`, {\n            name: 'AccountStateConflictError',\n        });\n    }\n}\nexport class StateAssignmentConflictError extends BaseError {\n    constructor() {\n        super('state and stateDiff are set on the same account.', {\n            name: 'StateAssignmentConflictError',\n        });\n    }\n}\n/** @internal */\nexport function prettyStateMapping(stateMapping) {\n    return stateMapping.reduce((pretty, { slot, value }) => {\n        return `${pretty}        ${slot}: ${value}\\n`;\n    }, '');\n}\nexport function prettyStateOverride(stateOverride) {\n    return stateOverride\n        .reduce((pretty, { address, ...state }) => {\n        let val = `${pretty}    ${address}:\\n`;\n        if (state.nonce)\n            val += `      nonce: ${state.nonce}\\n`;\n        if (state.balance)\n            val += `      balance: ${state.balance}\\n`;\n        if (state.code)\n            val += `      code: ${state.code}\\n`;\n        if (state.state) {\n            val += '      state:\\n';\n            val += prettyStateMapping(state.state);\n        }\n        if (state.stateDiff) {\n            val += '      stateDiff:\\n';\n            val += prettyStateMapping(state.stateDiff);\n        }\n        return val;\n    }, '  State Override:\\n')\n        .slice(0, -1);\n}\n//# sourceMappingURL=stateOverride.js.map","import { formatEther } from '../utils/unit/formatEther.js';\nimport { formatGwei } from '../utils/unit/formatGwei.js';\nimport { BaseError } from './base.js';\nexport function prettyPrint(args) {\n    const entries = Object.entries(args)\n        .map(([key, value]) => {\n        if (value === undefined || value === false)\n            return null;\n        return [key, value];\n    })\n        .filter(Boolean);\n    const maxLength = entries.reduce((acc, [key]) => Math.max(acc, key.length), 0);\n    return entries\n        .map(([key, value]) => `  ${`${key}:`.padEnd(maxLength + 1)}  ${value}`)\n        .join('\\n');\n}\nexport class FeeConflictError extends BaseError {\n    constructor() {\n        super([\n            'Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.',\n            'Use `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others.',\n        ].join('\\n'), { name: 'FeeConflictError' });\n    }\n}\nexport class InvalidLegacyVError extends BaseError {\n    constructor({ v }) {\n        super(`Invalid \\`v\\` value \"${v}\". Expected 27 or 28.`, {\n            name: 'InvalidLegacyVError',\n        });\n    }\n}\nexport class InvalidSerializableTransactionError extends BaseError {\n    constructor({ transaction }) {\n        super('Cannot infer a transaction type from provided transaction.', {\n            metaMessages: [\n                'Provided Transaction:',\n                '{',\n                prettyPrint(transaction),\n                '}',\n                '',\n                'To infer the type, either provide:',\n                '- a `type` to the Transaction, or',\n                '- an EIP-1559 Transaction with `maxFeePerGas`, or',\n                '- an EIP-2930 Transaction with `gasPrice` & `accessList`, or',\n                '- an EIP-4844 Transaction with `blobs`, `blobVersionedHashes`, `sidecars`, or',\n                '- an EIP-7702 Transaction with `authorizationList`, or',\n                '- a Legacy Transaction with `gasPrice`',\n            ],\n            name: 'InvalidSerializableTransactionError',\n        });\n    }\n}\nexport class InvalidSerializedTransactionTypeError extends BaseError {\n    constructor({ serializedType }) {\n        super(`Serialized transaction type \"${serializedType}\" is invalid.`, {\n            name: 'InvalidSerializedTransactionType',\n        });\n        Object.defineProperty(this, \"serializedType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.serializedType = serializedType;\n    }\n}\nexport class InvalidSerializedTransactionError extends BaseError {\n    constructor({ attributes, serializedTransaction, type, }) {\n        const missing = Object.entries(attributes)\n            .map(([key, value]) => (typeof value === 'undefined' ? key : undefined))\n            .filter(Boolean);\n        super(`Invalid serialized transaction of type \"${type}\" was provided.`, {\n            metaMessages: [\n                `Serialized Transaction: \"${serializedTransaction}\"`,\n                missing.length > 0 ? `Missing Attributes: ${missing.join(', ')}` : '',\n            ].filter(Boolean),\n            name: 'InvalidSerializedTransactionError',\n        });\n        Object.defineProperty(this, \"serializedTransaction\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.serializedTransaction = serializedTransaction;\n        this.type = type;\n    }\n}\nexport class InvalidStorageKeySizeError extends BaseError {\n    constructor({ storageKey }) {\n        super(`Size for storage key \"${storageKey}\" is invalid. Expected 32 bytes. Got ${Math.floor((storageKey.length - 2) / 2)} bytes.`, { name: 'InvalidStorageKeySizeError' });\n    }\n}\nexport class TransactionExecutionError extends BaseError {\n    constructor(cause, { account, docsPath, chain, data, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, }) {\n        const prettyArgs = prettyPrint({\n            chain: chain && `${chain?.name} (id: ${chain?.id})`,\n            from: account?.address,\n            to,\n            value: typeof value !== 'undefined' &&\n                `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n            data,\n            gas,\n            gasPrice: typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n            maxFeePerGas: typeof maxFeePerGas !== 'undefined' &&\n                `${formatGwei(maxFeePerGas)} gwei`,\n            maxPriorityFeePerGas: typeof maxPriorityFeePerGas !== 'undefined' &&\n                `${formatGwei(maxPriorityFeePerGas)} gwei`,\n            nonce,\n        });\n        super(cause.shortMessage, {\n            cause,\n            docsPath,\n            metaMessages: [\n                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n                'Request Arguments:',\n                prettyArgs,\n            ].filter(Boolean),\n            name: 'TransactionExecutionError',\n        });\n        Object.defineProperty(this, \"cause\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.cause = cause;\n    }\n}\nexport class TransactionNotFoundError extends BaseError {\n    constructor({ blockHash, blockNumber, blockTag, hash, index, }) {\n        let identifier = 'Transaction';\n        if (blockTag && index !== undefined)\n            identifier = `Transaction at block time \"${blockTag}\" at index \"${index}\"`;\n        if (blockHash && index !== undefined)\n            identifier = `Transaction at block hash \"${blockHash}\" at index \"${index}\"`;\n        if (blockNumber && index !== undefined)\n            identifier = `Transaction at block number \"${blockNumber}\" at index \"${index}\"`;\n        if (hash)\n            identifier = `Transaction with hash \"${hash}\"`;\n        super(`${identifier} could not be found.`, {\n            name: 'TransactionNotFoundError',\n        });\n    }\n}\nexport class TransactionReceiptNotFoundError extends BaseError {\n    constructor({ hash }) {\n        super(`Transaction receipt with hash \"${hash}\" could not be found. The Transaction may not be processed on a block yet.`, {\n            name: 'TransactionReceiptNotFoundError',\n        });\n    }\n}\nexport class WaitForTransactionReceiptTimeoutError extends BaseError {\n    constructor({ hash }) {\n        super(`Timed out while waiting for transaction with hash \"${hash}\" to be confirmed.`, { name: 'WaitForTransactionReceiptTimeoutError' });\n    }\n}\n//# sourceMappingURL=transaction.js.map","export const getContractAddress = (address) => address;\nexport const getUrl = (url) => url;\n//# sourceMappingURL=utils.js.map","import { InvalidBytesBooleanError } from '../../errors/encoding.js';\nimport { trim } from '../data/trim.js';\nimport { assertSize, hexToBigInt, hexToNumber, } from './fromHex.js';\nimport { bytesToHex } from './toHex.js';\n/**\n * Decodes a byte array into a UTF-8 string, hex value, number, bigint or boolean.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes\n * - Example: https://viem.sh/docs/utilities/fromBytes#usage\n *\n * @param bytes Byte array to decode.\n * @param toOrOpts Type to convert to or options.\n * @returns Decoded value.\n *\n * @example\n * import { fromBytes } from 'viem'\n * const data = fromBytes(new Uint8Array([1, 164]), 'number')\n * // 420\n *\n * @example\n * import { fromBytes } from 'viem'\n * const data = fromBytes(\n *   new Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]),\n *   'string'\n * )\n * // 'Hello world'\n */\nexport function fromBytes(bytes, toOrOpts) {\n    const opts = typeof toOrOpts === 'string' ? { to: toOrOpts } : toOrOpts;\n    const to = opts.to;\n    if (to === 'number')\n        return bytesToNumber(bytes, opts);\n    if (to === 'bigint')\n        return bytesToBigInt(bytes, opts);\n    if (to === 'boolean')\n        return bytesToBool(bytes, opts);\n    if (to === 'string')\n        return bytesToString(bytes, opts);\n    return bytesToHex(bytes, opts);\n}\n/**\n * Decodes a byte array into a bigint.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes#bytestobigint\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns BigInt value.\n *\n * @example\n * import { bytesToBigInt } from 'viem'\n * const data = bytesToBigInt(new Uint8Array([1, 164]))\n * // 420n\n */\nexport function bytesToBigInt(bytes, opts = {}) {\n    if (typeof opts.size !== 'undefined')\n        assertSize(bytes, { size: opts.size });\n    const hex = bytesToHex(bytes, opts);\n    return hexToBigInt(hex, opts);\n}\n/**\n * Decodes a byte array into a boolean.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes#bytestobool\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns Boolean value.\n *\n * @example\n * import { bytesToBool } from 'viem'\n * const data = bytesToBool(new Uint8Array([1]))\n * // true\n */\nexport function bytesToBool(bytes_, opts = {}) {\n    let bytes = bytes_;\n    if (typeof opts.size !== 'undefined') {\n        assertSize(bytes, { size: opts.size });\n        bytes = trim(bytes);\n    }\n    if (bytes.length > 1 || bytes[0] > 1)\n        throw new InvalidBytesBooleanError(bytes);\n    return Boolean(bytes[0]);\n}\n/**\n * Decodes a byte array into a number.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes#bytestonumber\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns Number value.\n *\n * @example\n * import { bytesToNumber } from 'viem'\n * const data = bytesToNumber(new Uint8Array([1, 164]))\n * // 420\n */\nexport function bytesToNumber(bytes, opts = {}) {\n    if (typeof opts.size !== 'undefined')\n        assertSize(bytes, { size: opts.size });\n    const hex = bytesToHex(bytes, opts);\n    return hexToNumber(hex, opts);\n}\n/**\n * Decodes a byte array into a UTF-8 string.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes#bytestostring\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns String value.\n *\n * @example\n * import { bytesToString } from 'viem'\n * const data = bytesToString(new Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\n * // 'Hello world'\n */\nexport function bytesToString(bytes_, opts = {}) {\n    let bytes = bytes_;\n    if (typeof opts.size !== 'undefined') {\n        assertSize(bytes, { size: opts.size });\n        bytes = trim(bytes, { dir: 'right' });\n    }\n    return new TextDecoder().decode(bytes);\n}\n//# sourceMappingURL=fromBytes.js.map","import { AbiDecodingDataSizeTooSmallError, AbiDecodingZeroDataError, InvalidAbiDecodingTypeError, } from '../../errors/abi.js';\nimport { checksumAddress, } from '../address/getAddress.js';\nimport { createCursor, } from '../cursor.js';\nimport { size } from '../data/size.js';\nimport { sliceBytes } from '../data/slice.js';\nimport { trim } from '../data/trim.js';\nimport { bytesToBigInt, bytesToBool, bytesToNumber, bytesToString, } from '../encoding/fromBytes.js';\nimport { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\nimport { getArrayComponents } from './encodeAbiParameters.js';\nexport function decodeAbiParameters(params, data) {\n    const bytes = typeof data === 'string' ? hexToBytes(data) : data;\n    const cursor = createCursor(bytes);\n    if (size(bytes) === 0 && params.length > 0)\n        throw new AbiDecodingZeroDataError();\n    if (size(data) && size(data) < 32)\n        throw new AbiDecodingDataSizeTooSmallError({\n            data: typeof data === 'string' ? data : bytesToHex(data),\n            params: params,\n            size: size(data),\n        });\n    let consumed = 0;\n    const values = [];\n    for (let i = 0; i < params.length; ++i) {\n        const param = params[i];\n        cursor.setPosition(consumed);\n        const [data, consumed_] = decodeParameter(cursor, param, {\n            staticPosition: 0,\n        });\n        consumed += consumed_;\n        values.push(data);\n    }\n    return values;\n}\nfunction decodeParameter(cursor, param, { staticPosition }) {\n    const arrayComponents = getArrayComponents(param.type);\n    if (arrayComponents) {\n        const [length, type] = arrayComponents;\n        return decodeArray(cursor, { ...param, type }, { length, staticPosition });\n    }\n    if (param.type === 'tuple')\n        return decodeTuple(cursor, param, { staticPosition });\n    if (param.type === 'address')\n        return decodeAddress(cursor);\n    if (param.type === 'bool')\n        return decodeBool(cursor);\n    if (param.type.startsWith('bytes'))\n        return decodeBytes(cursor, param, { staticPosition });\n    if (param.type.startsWith('uint') || param.type.startsWith('int'))\n        return decodeNumber(cursor, param);\n    if (param.type === 'string')\n        return decodeString(cursor, { staticPosition });\n    throw new InvalidAbiDecodingTypeError(param.type, {\n        docsPath: '/docs/contract/decodeAbiParameters',\n    });\n}\n////////////////////////////////////////////////////////////////////\n// Type Decoders\nconst sizeOfLength = 32;\nconst sizeOfOffset = 32;\nfunction decodeAddress(cursor) {\n    const value = cursor.readBytes(32);\n    return [checksumAddress(bytesToHex(sliceBytes(value, -20))), 32];\n}\nfunction decodeArray(cursor, param, { length, staticPosition }) {\n    // If the length of the array is not known in advance (dynamic array),\n    // this means we will need to wonder off to the pointer and decode.\n    if (!length) {\n        // Dealing with a dynamic type, so get the offset of the array data.\n        const offset = bytesToNumber(cursor.readBytes(sizeOfOffset));\n        // Start is the static position of current slot + offset.\n        const start = staticPosition + offset;\n        const startOfData = start + sizeOfLength;\n        // Get the length of the array from the offset.\n        cursor.setPosition(start);\n        const length = bytesToNumber(cursor.readBytes(sizeOfLength));\n        // Check if the array has any dynamic children.\n        const dynamicChild = hasDynamicChild(param);\n        let consumed = 0;\n        const value = [];\n        for (let i = 0; i < length; ++i) {\n            // If any of the children is dynamic, then all elements will be offset pointer, thus size of one slot (32 bytes).\n            // Otherwise, elements will be the size of their encoding (consumed bytes).\n            cursor.setPosition(startOfData + (dynamicChild ? i * 32 : consumed));\n            const [data, consumed_] = decodeParameter(cursor, param, {\n                staticPosition: startOfData,\n            });\n            consumed += consumed_;\n            value.push(data);\n        }\n        // As we have gone wondering, restore to the original position + next slot.\n        cursor.setPosition(staticPosition + 32);\n        return [value, 32];\n    }\n    // If the length of the array is known in advance,\n    // and the length of an element deeply nested in the array is not known,\n    // we need to decode the offset of the array data.\n    if (hasDynamicChild(param)) {\n        // Dealing with dynamic types, so get the offset of the array data.\n        const offset = bytesToNumber(cursor.readBytes(sizeOfOffset));\n        // Start is the static position of current slot + offset.\n        const start = staticPosition + offset;\n        const value = [];\n        for (let i = 0; i < length; ++i) {\n            // Move cursor along to the next slot (next offset pointer).\n            cursor.setPosition(start + i * 32);\n            const [data] = decodeParameter(cursor, param, {\n                staticPosition: start,\n            });\n            value.push(data);\n        }\n        // As we have gone wondering, restore to the original position + next slot.\n        cursor.setPosition(staticPosition + 32);\n        return [value, 32];\n    }\n    // If the length of the array is known in advance and the array is deeply static,\n    // then we can just decode each element in sequence.\n    let consumed = 0;\n    const value = [];\n    for (let i = 0; i < length; ++i) {\n        const [data, consumed_] = decodeParameter(cursor, param, {\n            staticPosition: staticPosition + consumed,\n        });\n        consumed += consumed_;\n        value.push(data);\n    }\n    return [value, consumed];\n}\nfunction decodeBool(cursor) {\n    return [bytesToBool(cursor.readBytes(32), { size: 32 }), 32];\n}\nfunction decodeBytes(cursor, param, { staticPosition }) {\n    const [_, size] = param.type.split('bytes');\n    if (!size) {\n        // Dealing with dynamic types, so get the offset of the bytes data.\n        const offset = bytesToNumber(cursor.readBytes(32));\n        // Set position of the cursor to start of bytes data.\n        cursor.setPosition(staticPosition + offset);\n        const length = bytesToNumber(cursor.readBytes(32));\n        // If there is no length, we have zero data.\n        if (length === 0) {\n            // As we have gone wondering, restore to the original position + next slot.\n            cursor.setPosition(staticPosition + 32);\n            return ['0x', 32];\n        }\n        const data = cursor.readBytes(length);\n        // As we have gone wondering, restore to the original position + next slot.\n        cursor.setPosition(staticPosition + 32);\n        return [bytesToHex(data), 32];\n    }\n    const value = bytesToHex(cursor.readBytes(Number.parseInt(size), 32));\n    return [value, 32];\n}\nfunction decodeNumber(cursor, param) {\n    const signed = param.type.startsWith('int');\n    const size = Number.parseInt(param.type.split('int')[1] || '256');\n    const value = cursor.readBytes(32);\n    return [\n        size > 48\n            ? bytesToBigInt(value, { signed })\n            : bytesToNumber(value, { signed }),\n        32,\n    ];\n}\nfunction decodeTuple(cursor, param, { staticPosition }) {\n    // Tuples can have unnamed components (i.e. they are arrays), so we must\n    // determine whether the tuple is named or unnamed. In the case of a named\n    // tuple, the value will be an object where each property is the name of the\n    // component. In the case of an unnamed tuple, the value will be an array.\n    const hasUnnamedChild = param.components.length === 0 || param.components.some(({ name }) => !name);\n    // Initialize the value to an object or an array, depending on whether the\n    // tuple is named or unnamed.\n    const value = hasUnnamedChild ? [] : {};\n    let consumed = 0;\n    // If the tuple has a dynamic child, we must first decode the offset to the\n    // tuple data.\n    if (hasDynamicChild(param)) {\n        // Dealing with dynamic types, so get the offset of the tuple data.\n        const offset = bytesToNumber(cursor.readBytes(sizeOfOffset));\n        // Start is the static position of referencing slot + offset.\n        const start = staticPosition + offset;\n        for (let i = 0; i < param.components.length; ++i) {\n            const component = param.components[i];\n            cursor.setPosition(start + consumed);\n            const [data, consumed_] = decodeParameter(cursor, component, {\n                staticPosition: start,\n            });\n            consumed += consumed_;\n            value[hasUnnamedChild ? i : component?.name] = data;\n        }\n        // As we have gone wondering, restore to the original position + next slot.\n        cursor.setPosition(staticPosition + 32);\n        return [value, 32];\n    }\n    // If the tuple has static children, we can just decode each component\n    // in sequence.\n    for (let i = 0; i < param.components.length; ++i) {\n        const component = param.components[i];\n        const [data, consumed_] = decodeParameter(cursor, component, {\n            staticPosition,\n        });\n        value[hasUnnamedChild ? i : component?.name] = data;\n        consumed += consumed_;\n    }\n    return [value, consumed];\n}\nfunction decodeString(cursor, { staticPosition }) {\n    // Get offset to start of string data.\n    const offset = bytesToNumber(cursor.readBytes(32));\n    // Start is the static position of current slot + offset.\n    const start = staticPosition + offset;\n    cursor.setPosition(start);\n    const length = bytesToNumber(cursor.readBytes(32));\n    // If there is no length, we have zero data (empty string).\n    if (length === 0) {\n        cursor.setPosition(staticPosition + 32);\n        return ['', 32];\n    }\n    const data = cursor.readBytes(length, 32);\n    const value = bytesToString(trim(data));\n    // As we have gone wondering, restore to the original position + next slot.\n    cursor.setPosition(staticPosition + 32);\n    return [value, 32];\n}\nfunction hasDynamicChild(param) {\n    const { type } = param;\n    if (type === 'string')\n        return true;\n    if (type === 'bytes')\n        return true;\n    if (type.endsWith('[]'))\n        return true;\n    if (type === 'tuple')\n        return param.components?.some(hasDynamicChild);\n    const arrayComponents = getArrayComponents(param.type);\n    if (arrayComponents &&\n        hasDynamicChild({ ...param, type: arrayComponents[1] }))\n        return true;\n    return false;\n}\n//# sourceMappingURL=decodeAbiParameters.js.map","import { solidityError, solidityPanic } from '../../constants/solidity.js';\nimport { AbiDecodingZeroDataError, AbiErrorSignatureNotFoundError, } from '../../errors/abi.js';\nimport { slice } from '../data/slice.js';\nimport { toFunctionSelector, } from '../hash/toFunctionSelector.js';\nimport { decodeAbiParameters, } from './decodeAbiParameters.js';\nimport { formatAbiItem } from './formatAbiItem.js';\nexport function decodeErrorResult(parameters) {\n    const { abi, data } = parameters;\n    const signature = slice(data, 0, 4);\n    if (signature === '0x')\n        throw new AbiDecodingZeroDataError();\n    const abi_ = [...(abi || []), solidityError, solidityPanic];\n    const abiItem = abi_.find((x) => x.type === 'error' && signature === toFunctionSelector(formatAbiItem(x)));\n    if (!abiItem)\n        throw new AbiErrorSignatureNotFoundError(signature, {\n            docsPath: '/docs/contract/decodeErrorResult',\n        });\n    return {\n        abiItem,\n        args: 'inputs' in abiItem && abiItem.inputs && abiItem.inputs.length > 0\n            ? decodeAbiParameters(abiItem.inputs, slice(data, 4))\n            : undefined,\n        errorName: abiItem.name,\n    };\n}\n//# sourceMappingURL=decodeErrorResult.js.map","import { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Compute commitments from a list of blobs.\n *\n * @example\n * ```ts\n * import { blobsToCommitments, toBlobs } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * ```\n */\nexport function blobsToCommitments(parameters) {\n    const { kzg } = parameters;\n    const to = parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes');\n    const blobs = (typeof parameters.blobs[0] === 'string'\n        ? parameters.blobs.map((x) => hexToBytes(x))\n        : parameters.blobs);\n    const commitments = [];\n    for (const blob of blobs)\n        commitments.push(Uint8Array.from(kzg.blobToKzgCommitment(blob)));\n    return (to === 'bytes'\n        ? commitments\n        : commitments.map((x) => bytesToHex(x)));\n}\n//# sourceMappingURL=blobsToCommitments.js.map","import { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Compute the proofs for a list of blobs and their commitments.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const proofs = blobsToProofs({ blobs, commitments, kzg })\n * ```\n */\nexport function blobsToProofs(parameters) {\n    const { kzg } = parameters;\n    const to = parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes');\n    const blobs = (typeof parameters.blobs[0] === 'string'\n        ? parameters.blobs.map((x) => hexToBytes(x))\n        : parameters.blobs);\n    const commitments = (typeof parameters.commitments[0] === 'string'\n        ? parameters.commitments.map((x) => hexToBytes(x))\n        : parameters.commitments);\n    const proofs = [];\n    for (let i = 0; i < blobs.length; i++) {\n        const blob = blobs[i];\n        const commitment = commitments[i];\n        proofs.push(Uint8Array.from(kzg.computeBlobKzgProof(blob, commitment)));\n    }\n    return (to === 'bytes'\n        ? proofs\n        : proofs.map((x) => bytesToHex(x)));\n}\n//# sourceMappingURL=blobsToProofs.js.map","import { bytesToHex } from '../encoding/toHex.js';\nimport { sha256 } from '../hash/sha256.js';\n/**\n * Transform a commitment to it's versioned hash.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentToVersionedHash,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const [commitment] = blobsToCommitments({ blobs, kzg })\n * const versionedHash = commitmentToVersionedHash({ commitment })\n * ```\n */\nexport function commitmentToVersionedHash(parameters) {\n    const { commitment, version = 1 } = parameters;\n    const to = parameters.to ?? (typeof commitment === 'string' ? 'hex' : 'bytes');\n    const versionedHash = sha256(commitment, 'bytes');\n    versionedHash.set([version], 0);\n    return (to === 'bytes' ? versionedHash : bytesToHex(versionedHash));\n}\n//# sourceMappingURL=commitmentToVersionedHash.js.map","import { commitmentToVersionedHash, } from './commitmentToVersionedHash.js';\n/**\n * Transform a list of commitments to their versioned hashes.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentsToVersionedHashes,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const versionedHashes = commitmentsToVersionedHashes({ commitments })\n * ```\n */\nexport function commitmentsToVersionedHashes(parameters) {\n    const { commitments, version } = parameters;\n    const to = parameters.to ?? (typeof commitments[0] === 'string' ? 'hex' : 'bytes');\n    const hashes = [];\n    for (const commitment of commitments) {\n        hashes.push(commitmentToVersionedHash({\n            commitment,\n            to,\n            version,\n        }));\n    }\n    return hashes;\n}\n//# sourceMappingURL=commitmentsToVersionedHashes.js.map","// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\n/** Blob limit per transaction. */\nconst blobsPerTransaction = 6;\n/** The number of bytes in a BLS scalar field element. */\nexport const bytesPerFieldElement = 32;\n/** The number of field elements in a blob. */\nexport const fieldElementsPerBlob = 4096;\n/** The number of bytes in a blob. */\nexport const bytesPerBlob = bytesPerFieldElement * fieldElementsPerBlob;\n/** Blob bytes limit per transaction. */\nexport const maxBytesPerTransaction = bytesPerBlob * blobsPerTransaction -\n    // terminator byte (0x80).\n    1 -\n    // zero byte (0x00) appended to each field element.\n    1 * fieldElementsPerBlob * blobsPerTransaction;\n//# sourceMappingURL=blob.js.map","import { blobsToCommitments, } from './blobsToCommitments.js';\nimport { blobsToProofs } from './blobsToProofs.js';\nimport { toBlobs } from './toBlobs.js';\n/**\n * Transforms arbitrary data (or blobs, commitments, & proofs) into a sidecar array.\n *\n * @example\n * ```ts\n * import { toBlobSidecars, stringToHex } from 'viem'\n *\n * const sidecars = toBlobSidecars({ data: stringToHex('hello world') })\n * ```\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   toBlobs,\n *   blobsToProofs,\n *   toBlobSidecars,\n *   stringToHex\n * } from 'viem'\n *\n * const blobs = toBlobs({ data: stringToHex('hello world') })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const proofs = blobsToProofs({ blobs, commitments, kzg })\n *\n * const sidecars = toBlobSidecars({ blobs, commitments, proofs })\n * ```\n */\nexport function toBlobSidecars(parameters) {\n    const { data, kzg, to } = parameters;\n    const blobs = parameters.blobs ?? toBlobs({ data: data, to });\n    const commitments = parameters.commitments ?? blobsToCommitments({ blobs, kzg: kzg, to });\n    const proofs = parameters.proofs ?? blobsToProofs({ blobs, commitments, kzg: kzg, to });\n    const sidecars = [];\n    for (let i = 0; i < blobs.length; i++)\n        sidecars.push({\n            blob: blobs[i],\n            commitment: commitments[i],\n            proof: proofs[i],\n        });\n    return sidecars;\n}\n//# sourceMappingURL=toBlobSidecars.js.map","import { bytesPerBlob, bytesPerFieldElement, fieldElementsPerBlob, maxBytesPerTransaction, } from '../../constants/blob.js';\nimport { BlobSizeTooLargeError, EmptyBlobError, } from '../../errors/blob.js';\nimport { createCursor } from '../cursor.js';\nimport { size } from '../data/size.js';\nimport { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Transforms arbitrary data to blobs.\n *\n * @example\n * ```ts\n * import { toBlobs, stringToHex } from 'viem'\n *\n * const blobs = toBlobs({ data: stringToHex('hello world') })\n * ```\n */\nexport function toBlobs(parameters) {\n    const to = parameters.to ?? (typeof parameters.data === 'string' ? 'hex' : 'bytes');\n    const data = (typeof parameters.data === 'string'\n        ? hexToBytes(parameters.data)\n        : parameters.data);\n    const size_ = size(data);\n    if (!size_)\n        throw new EmptyBlobError();\n    if (size_ > maxBytesPerTransaction)\n        throw new BlobSizeTooLargeError({\n            maxSize: maxBytesPerTransaction,\n            size: size_,\n        });\n    const blobs = [];\n    let active = true;\n    let position = 0;\n    while (active) {\n        const blob = createCursor(new Uint8Array(bytesPerBlob));\n        let size = 0;\n        while (size < fieldElementsPerBlob) {\n            const bytes = data.slice(position, position + (bytesPerFieldElement - 1));\n            // Push a zero byte so the field element doesn't overflow the BLS modulus.\n            blob.pushByte(0x00);\n            // Push the current segment of data bytes.\n            blob.pushBytes(bytes);\n            // If we detect that the current segment of data bytes is less than 31 bytes,\n            // we can stop processing and push a terminator byte to indicate the end of the blob.\n            if (bytes.length < 31) {\n                blob.pushByte(0x80);\n                active = false;\n                break;\n            }\n            size++;\n            position += 31;\n        }\n        blobs.push(blob);\n    }\n    return (to === 'bytes'\n        ? blobs.map((x) => x.bytes)\n        : blobs.map((x) => bytesToHex(x.bytes)));\n}\n//# sourceMappingURL=toBlobs.js.map","export function defineChain(chain) {\n    return {\n        formatters: undefined,\n        fees: undefined,\n        serializers: undefined,\n        ...chain,\n    };\n}\n//# sourceMappingURL=defineChain.js.map","import { NegativeOffsetError, PositionOutOfBoundsError, RecursiveReadLimitExceededError, } from '../errors/cursor.js';\nconst staticCursor = {\n    bytes: new Uint8Array(),\n    dataView: new DataView(new ArrayBuffer(0)),\n    position: 0,\n    positionReadCount: new Map(),\n    recursiveReadCount: 0,\n    recursiveReadLimit: Number.POSITIVE_INFINITY,\n    assertReadLimit() {\n        if (this.recursiveReadCount >= this.recursiveReadLimit)\n            throw new RecursiveReadLimitExceededError({\n                count: this.recursiveReadCount + 1,\n                limit: this.recursiveReadLimit,\n            });\n    },\n    assertPosition(position) {\n        if (position < 0 || position > this.bytes.length - 1)\n            throw new PositionOutOfBoundsError({\n                length: this.bytes.length,\n                position,\n            });\n    },\n    decrementPosition(offset) {\n        if (offset < 0)\n            throw new NegativeOffsetError({ offset });\n        const position = this.position - offset;\n        this.assertPosition(position);\n        this.position = position;\n    },\n    getReadCount(position) {\n        return this.positionReadCount.get(position || this.position) || 0;\n    },\n    incrementPosition(offset) {\n        if (offset < 0)\n            throw new NegativeOffsetError({ offset });\n        const position = this.position + offset;\n        this.assertPosition(position);\n        this.position = position;\n    },\n    inspectByte(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position);\n        return this.bytes[position];\n    },\n    inspectBytes(length, position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + length - 1);\n        return this.bytes.subarray(position, position + length);\n    },\n    inspectUint8(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position);\n        return this.bytes[position];\n    },\n    inspectUint16(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 1);\n        return this.dataView.getUint16(position);\n    },\n    inspectUint24(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 2);\n        return ((this.dataView.getUint16(position) << 8) +\n            this.dataView.getUint8(position + 2));\n    },\n    inspectUint32(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 3);\n        return this.dataView.getUint32(position);\n    },\n    pushByte(byte) {\n        this.assertPosition(this.position);\n        this.bytes[this.position] = byte;\n        this.position++;\n    },\n    pushBytes(bytes) {\n        this.assertPosition(this.position + bytes.length - 1);\n        this.bytes.set(bytes, this.position);\n        this.position += bytes.length;\n    },\n    pushUint8(value) {\n        this.assertPosition(this.position);\n        this.bytes[this.position] = value;\n        this.position++;\n    },\n    pushUint16(value) {\n        this.assertPosition(this.position + 1);\n        this.dataView.setUint16(this.position, value);\n        this.position += 2;\n    },\n    pushUint24(value) {\n        this.assertPosition(this.position + 2);\n        this.dataView.setUint16(this.position, value >> 8);\n        this.dataView.setUint8(this.position + 2, value & ~4294967040);\n        this.position += 3;\n    },\n    pushUint32(value) {\n        this.assertPosition(this.position + 3);\n        this.dataView.setUint32(this.position, value);\n        this.position += 4;\n    },\n    readByte() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectByte();\n        this.position++;\n        return value;\n    },\n    readBytes(length, size) {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectBytes(length);\n        this.position += size ?? length;\n        return value;\n    },\n    readUint8() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint8();\n        this.position += 1;\n        return value;\n    },\n    readUint16() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint16();\n        this.position += 2;\n        return value;\n    },\n    readUint24() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint24();\n        this.position += 3;\n        return value;\n    },\n    readUint32() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint32();\n        this.position += 4;\n        return value;\n    },\n    get remaining() {\n        return this.bytes.length - this.position;\n    },\n    setPosition(position) {\n        const oldPosition = this.position;\n        this.assertPosition(position);\n        this.position = position;\n        return () => (this.position = oldPosition);\n    },\n    _touch() {\n        if (this.recursiveReadLimit === Number.POSITIVE_INFINITY)\n            return;\n        const count = this.getReadCount();\n        this.positionReadCount.set(this.position, count + 1);\n        if (count > 0)\n            this.recursiveReadCount++;\n    },\n};\nexport function createCursor(bytes, { recursiveReadLimit = 8_192 } = {}) {\n    const cursor = Object.create(staticCursor);\n    cursor.bytes = bytes;\n    cursor.dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    cursor.positionReadCount = new Map();\n    cursor.recursiveReadLimit = recursiveReadLimit;\n    return cursor;\n}\n//# sourceMappingURL=cursor.js.map","import { BaseError } from '../../errors/base.js';\nimport { createCursor, } from '../cursor.js';\nimport { hexToBytes } from './toBytes.js';\nimport { bytesToHex } from './toHex.js';\nexport function toRlp(bytes, to = 'hex') {\n    const encodable = getEncodable(bytes);\n    const cursor = createCursor(new Uint8Array(encodable.length));\n    encodable.encode(cursor);\n    if (to === 'hex')\n        return bytesToHex(cursor.bytes);\n    return cursor.bytes;\n}\nexport function bytesToRlp(bytes, to = 'bytes') {\n    return toRlp(bytes, to);\n}\nexport function hexToRlp(hex, to = 'hex') {\n    return toRlp(hex, to);\n}\nfunction getEncodable(bytes) {\n    if (Array.isArray(bytes))\n        return getEncodableList(bytes.map((x) => getEncodable(x)));\n    return getEncodableBytes(bytes);\n}\nfunction getEncodableList(list) {\n    const bodyLength = list.reduce((acc, x) => acc + x.length, 0);\n    const sizeOfBodyLength = getSizeOfLength(bodyLength);\n    const length = (() => {\n        if (bodyLength <= 55)\n            return 1 + bodyLength;\n        return 1 + sizeOfBodyLength + bodyLength;\n    })();\n    return {\n        length,\n        encode(cursor) {\n            if (bodyLength <= 55) {\n                cursor.pushByte(0xc0 + bodyLength);\n            }\n            else {\n                cursor.pushByte(0xc0 + 55 + sizeOfBodyLength);\n                if (sizeOfBodyLength === 1)\n                    cursor.pushUint8(bodyLength);\n                else if (sizeOfBodyLength === 2)\n                    cursor.pushUint16(bodyLength);\n                else if (sizeOfBodyLength === 3)\n                    cursor.pushUint24(bodyLength);\n                else\n                    cursor.pushUint32(bodyLength);\n            }\n            for (const { encode } of list) {\n                encode(cursor);\n            }\n        },\n    };\n}\nfunction getEncodableBytes(bytesOrHex) {\n    const bytes = typeof bytesOrHex === 'string' ? hexToBytes(bytesOrHex) : bytesOrHex;\n    const sizeOfBytesLength = getSizeOfLength(bytes.length);\n    const length = (() => {\n        if (bytes.length === 1 && bytes[0] < 0x80)\n            return 1;\n        if (bytes.length <= 55)\n            return 1 + bytes.length;\n        return 1 + sizeOfBytesLength + bytes.length;\n    })();\n    return {\n        length,\n        encode(cursor) {\n            if (bytes.length === 1 && bytes[0] < 0x80) {\n                cursor.pushBytes(bytes);\n            }\n            else if (bytes.length <= 55) {\n                cursor.pushByte(0x80 + bytes.length);\n                cursor.pushBytes(bytes);\n            }\n            else {\n                cursor.pushByte(0x80 + 55 + sizeOfBytesLength);\n                if (sizeOfBytesLength === 1)\n                    cursor.pushUint8(bytes.length);\n                else if (sizeOfBytesLength === 2)\n                    cursor.pushUint16(bytes.length);\n                else if (sizeOfBytesLength === 3)\n                    cursor.pushUint24(bytes.length);\n                else\n                    cursor.pushUint32(bytes.length);\n                cursor.pushBytes(bytes);\n            }\n        },\n    };\n}\nfunction getSizeOfLength(length) {\n    if (length < 2 ** 8)\n        return 1;\n    if (length < 2 ** 16)\n        return 2;\n    if (length < 2 ** 24)\n        return 3;\n    if (length < 2 ** 32)\n        return 4;\n    throw new BaseError('Length is too large.');\n}\n//# sourceMappingURL=toRlp.js.map","import { CallExecutionError, } from '../../errors/contract.js';\nimport { UnknownNodeError } from '../../errors/node.js';\nimport { getNodeError, } from './getNodeError.js';\nexport function getCallError(err, { docsPath, ...args }) {\n    const cause = (() => {\n        const cause = getNodeError(err, args);\n        if (cause instanceof UnknownNodeError)\n            return err;\n        return cause;\n    })();\n    return new CallExecutionError(cause, {\n        docsPath,\n        ...args,\n    });\n}\n//# sourceMappingURL=getCallError.js.map","import { BaseError } from '../../errors/base.js';\nimport { ExecutionRevertedError, FeeCapTooHighError, FeeCapTooLowError, InsufficientFundsError, IntrinsicGasTooHighError, IntrinsicGasTooLowError, NonceMaxValueError, NonceTooHighError, NonceTooLowError, TipAboveFeeCapError, TransactionTypeNotSupportedError, UnknownNodeError, } from '../../errors/node.js';\nimport { RpcRequestError } from '../../errors/request.js';\nimport { InvalidInputRpcError, TransactionRejectedRpcError, } from '../../errors/rpc.js';\nexport function containsNodeError(err) {\n    return (err instanceof TransactionRejectedRpcError ||\n        err instanceof InvalidInputRpcError ||\n        (err instanceof RpcRequestError && err.code === ExecutionRevertedError.code));\n}\nexport function getNodeError(err, args) {\n    const message = (err.details || '').toLowerCase();\n    const executionRevertedError = err instanceof BaseError\n        ? err.walk((e) => e?.code ===\n            ExecutionRevertedError.code)\n        : err;\n    if (executionRevertedError instanceof BaseError)\n        return new ExecutionRevertedError({\n            cause: err,\n            message: executionRevertedError.details,\n        });\n    if (ExecutionRevertedError.nodeMessage.test(message))\n        return new ExecutionRevertedError({\n            cause: err,\n            message: err.details,\n        });\n    if (FeeCapTooHighError.nodeMessage.test(message))\n        return new FeeCapTooHighError({\n            cause: err,\n            maxFeePerGas: args?.maxFeePerGas,\n        });\n    if (FeeCapTooLowError.nodeMessage.test(message))\n        return new FeeCapTooLowError({\n            cause: err,\n            maxFeePerGas: args?.maxFeePerGas,\n        });\n    if (NonceTooHighError.nodeMessage.test(message))\n        return new NonceTooHighError({ cause: err, nonce: args?.nonce });\n    if (NonceTooLowError.nodeMessage.test(message))\n        return new NonceTooLowError({ cause: err, nonce: args?.nonce });\n    if (NonceMaxValueError.nodeMessage.test(message))\n        return new NonceMaxValueError({ cause: err, nonce: args?.nonce });\n    if (InsufficientFundsError.nodeMessage.test(message))\n        return new InsufficientFundsError({ cause: err });\n    if (IntrinsicGasTooHighError.nodeMessage.test(message))\n        return new IntrinsicGasTooHighError({ cause: err, gas: args?.gas });\n    if (IntrinsicGasTooLowError.nodeMessage.test(message))\n        return new IntrinsicGasTooLowError({ cause: err, gas: args?.gas });\n    if (TransactionTypeNotSupportedError.nodeMessage.test(message))\n        return new TransactionTypeNotSupportedError({ cause: err });\n    if (TipAboveFeeCapError.nodeMessage.test(message))\n        return new TipAboveFeeCapError({\n            cause: err,\n            maxFeePerGas: args?.maxFeePerGas,\n            maxPriorityFeePerGas: args?.maxPriorityFeePerGas,\n        });\n    return new UnknownNodeError({\n        cause: err,\n    });\n}\n//# sourceMappingURL=getNodeError.js.map","import { defineFormatter } from './formatter.js';\nimport { formatTransaction } from './transaction.js';\nexport function formatBlock(block) {\n    const transactions = block.transactions?.map((transaction) => {\n        if (typeof transaction === 'string')\n            return transaction;\n        return formatTransaction(transaction);\n    });\n    return {\n        ...block,\n        baseFeePerGas: block.baseFeePerGas ? BigInt(block.baseFeePerGas) : null,\n        blobGasUsed: block.blobGasUsed ? BigInt(block.blobGasUsed) : undefined,\n        difficulty: block.difficulty ? BigInt(block.difficulty) : undefined,\n        excessBlobGas: block.excessBlobGas\n            ? BigInt(block.excessBlobGas)\n            : undefined,\n        gasLimit: block.gasLimit ? BigInt(block.gasLimit) : undefined,\n        gasUsed: block.gasUsed ? BigInt(block.gasUsed) : undefined,\n        hash: block.hash ? block.hash : null,\n        logsBloom: block.logsBloom ? block.logsBloom : null,\n        nonce: block.nonce ? block.nonce : null,\n        number: block.number ? BigInt(block.number) : null,\n        size: block.size ? BigInt(block.size) : undefined,\n        timestamp: block.timestamp ? BigInt(block.timestamp) : undefined,\n        transactions,\n        totalDifficulty: block.totalDifficulty\n            ? BigInt(block.totalDifficulty)\n            : null,\n    };\n}\nexport const defineBlock = /*#__PURE__*/ defineFormatter('block', formatBlock);\n//# sourceMappingURL=block.js.map","/**\n * @description Picks out the keys from `value` that exist in the formatter..\n */\nexport function extract(value_, { format }) {\n    if (!format)\n        return {};\n    const value = {};\n    function extract_(formatted) {\n        const keys = Object.keys(formatted);\n        for (const key of keys) {\n            if (key in value_)\n                value[key] = value_[key];\n            if (formatted[key] &&\n                typeof formatted[key] === 'object' &&\n                !Array.isArray(formatted[key]))\n                extract_(formatted[key]);\n        }\n    }\n    const formatted = format(value_ || {});\n    extract_(formatted);\n    return value;\n}\n//# sourceMappingURL=extract.js.map","export function defineFormatter(type, format) {\n    return ({ exclude, format: overrides, }) => {\n        return {\n            exclude,\n            format: (args) => {\n                const formatted = format(args);\n                if (exclude) {\n                    for (const key of exclude) {\n                        delete formatted[key];\n                    }\n                }\n                return {\n                    ...formatted,\n                    ...overrides(args),\n                };\n            },\n            type,\n        };\n    };\n}\n//# sourceMappingURL=formatter.js.map","export function formatLog(log, { args, eventName, } = {}) {\n    return {\n        ...log,\n        blockHash: log.blockHash ? log.blockHash : null,\n        blockNumber: log.blockNumber ? BigInt(log.blockNumber) : null,\n        logIndex: log.logIndex ? Number(log.logIndex) : null,\n        transactionHash: log.transactionHash ? log.transactionHash : null,\n        transactionIndex: log.transactionIndex\n            ? Number(log.transactionIndex)\n            : null,\n        ...(eventName ? { args, eventName } : {}),\n    };\n}\n//# sourceMappingURL=log.js.map","import { hexToNumber } from '../encoding/fromHex.js';\nimport { defineFormatter } from './formatter.js';\nexport const transactionType = {\n    '0x0': 'legacy',\n    '0x1': 'eip2930',\n    '0x2': 'eip1559',\n    '0x3': 'eip4844',\n    '0x4': 'eip7702',\n};\nexport function formatTransaction(transaction) {\n    const transaction_ = {\n        ...transaction,\n        blockHash: transaction.blockHash ? transaction.blockHash : null,\n        blockNumber: transaction.blockNumber\n            ? BigInt(transaction.blockNumber)\n            : null,\n        chainId: transaction.chainId ? hexToNumber(transaction.chainId) : undefined,\n        gas: transaction.gas ? BigInt(transaction.gas) : undefined,\n        gasPrice: transaction.gasPrice ? BigInt(transaction.gasPrice) : undefined,\n        maxFeePerBlobGas: transaction.maxFeePerBlobGas\n            ? BigInt(transaction.maxFeePerBlobGas)\n            : undefined,\n        maxFeePerGas: transaction.maxFeePerGas\n            ? BigInt(transaction.maxFeePerGas)\n            : undefined,\n        maxPriorityFeePerGas: transaction.maxPriorityFeePerGas\n            ? BigInt(transaction.maxPriorityFeePerGas)\n            : undefined,\n        nonce: transaction.nonce ? hexToNumber(transaction.nonce) : undefined,\n        to: transaction.to ? transaction.to : null,\n        transactionIndex: transaction.transactionIndex\n            ? Number(transaction.transactionIndex)\n            : null,\n        type: transaction.type\n            ? transactionType[transaction.type]\n            : undefined,\n        typeHex: transaction.type ? transaction.type : undefined,\n        value: transaction.value ? BigInt(transaction.value) : undefined,\n        v: transaction.v ? BigInt(transaction.v) : undefined,\n    };\n    if (transaction.authorizationList)\n        transaction_.authorizationList = formatAuthorizationList(transaction.authorizationList);\n    transaction_.yParity = (() => {\n        // If `yParity` is provided, we will use it.\n        if (transaction.yParity)\n            return Number(transaction.yParity);\n        // If no `yParity` provided, try derive from `v`.\n        if (typeof transaction_.v === 'bigint') {\n            if (transaction_.v === 0n || transaction_.v === 27n)\n                return 0;\n            if (transaction_.v === 1n || transaction_.v === 28n)\n                return 1;\n            if (transaction_.v >= 35n)\n                return transaction_.v % 2n === 0n ? 1 : 0;\n        }\n        return undefined;\n    })();\n    if (transaction_.type === 'legacy') {\n        delete transaction_.accessList;\n        delete transaction_.maxFeePerBlobGas;\n        delete transaction_.maxFeePerGas;\n        delete transaction_.maxPriorityFeePerGas;\n        delete transaction_.yParity;\n    }\n    if (transaction_.type === 'eip2930') {\n        delete transaction_.maxFeePerBlobGas;\n        delete transaction_.maxFeePerGas;\n        delete transaction_.maxPriorityFeePerGas;\n    }\n    if (transaction_.type === 'eip1559') {\n        delete transaction_.maxFeePerBlobGas;\n    }\n    return transaction_;\n}\nexport const defineTransaction = /*#__PURE__*/ defineFormatter('transaction', formatTransaction);\n//////////////////////////////////////////////////////////////////////////////\nfunction formatAuthorizationList(authorizationList) {\n    return authorizationList.map((authorization) => ({\n        contractAddress: authorization.address,\n        chainId: Number(authorization.chainId),\n        nonce: Number(authorization.nonce),\n        r: authorization.r,\n        s: authorization.s,\n        yParity: Number(authorization.yParity),\n    }));\n}\n//# sourceMappingURL=transaction.js.map","import { hexToNumber } from '../encoding/fromHex.js';\nimport { defineFormatter } from './formatter.js';\nimport { formatLog } from './log.js';\nimport { transactionType } from './transaction.js';\nexport const receiptStatuses = {\n    '0x0': 'reverted',\n    '0x1': 'success',\n};\nexport function formatTransactionReceipt(transactionReceipt) {\n    const receipt = {\n        ...transactionReceipt,\n        blockNumber: transactionReceipt.blockNumber\n            ? BigInt(transactionReceipt.blockNumber)\n            : null,\n        contractAddress: transactionReceipt.contractAddress\n            ? transactionReceipt.contractAddress\n            : null,\n        cumulativeGasUsed: transactionReceipt.cumulativeGasUsed\n            ? BigInt(transactionReceipt.cumulativeGasUsed)\n            : null,\n        effectiveGasPrice: transactionReceipt.effectiveGasPrice\n            ? BigInt(transactionReceipt.effectiveGasPrice)\n            : null,\n        gasUsed: transactionReceipt.gasUsed\n            ? BigInt(transactionReceipt.gasUsed)\n            : null,\n        logs: transactionReceipt.logs\n            ? transactionReceipt.logs.map((log) => formatLog(log))\n            : null,\n        to: transactionReceipt.to ? transactionReceipt.to : null,\n        transactionIndex: transactionReceipt.transactionIndex\n            ? hexToNumber(transactionReceipt.transactionIndex)\n            : null,\n        status: transactionReceipt.status\n            ? receiptStatuses[transactionReceipt.status]\n            : null,\n        type: transactionReceipt.type\n            ? transactionType[transactionReceipt.type] || transactionReceipt.type\n            : null,\n    };\n    if (transactionReceipt.blobGasPrice)\n        receipt.blobGasPrice = BigInt(transactionReceipt.blobGasPrice);\n    if (transactionReceipt.blobGasUsed)\n        receipt.blobGasUsed = BigInt(transactionReceipt.blobGasUsed);\n    return receipt;\n}\nexport const defineTransactionReceipt = /*#__PURE__*/ defineFormatter('transactionReceipt', formatTransactionReceipt);\n//# sourceMappingURL=transactionReceipt.js.map","import { bytesToHex, numberToHex } from '../encoding/toHex.js';\nimport { defineFormatter } from './formatter.js';\nexport const rpcTransactionType = {\n    legacy: '0x0',\n    eip2930: '0x1',\n    eip1559: '0x2',\n    eip4844: '0x3',\n    eip7702: '0x4',\n};\nexport function formatTransactionRequest(request) {\n    const rpcRequest = {};\n    if (typeof request.authorizationList !== 'undefined')\n        rpcRequest.authorizationList = formatAuthorizationList(request.authorizationList);\n    if (typeof request.accessList !== 'undefined')\n        rpcRequest.accessList = request.accessList;\n    if (typeof request.blobVersionedHashes !== 'undefined')\n        rpcRequest.blobVersionedHashes = request.blobVersionedHashes;\n    if (typeof request.blobs !== 'undefined') {\n        if (typeof request.blobs[0] !== 'string')\n            rpcRequest.blobs = request.blobs.map((x) => bytesToHex(x));\n        else\n            rpcRequest.blobs = request.blobs;\n    }\n    if (typeof request.data !== 'undefined')\n        rpcRequest.data = request.data;\n    if (typeof request.from !== 'undefined')\n        rpcRequest.from = request.from;\n    if (typeof request.gas !== 'undefined')\n        rpcRequest.gas = numberToHex(request.gas);\n    if (typeof request.gasPrice !== 'undefined')\n        rpcRequest.gasPrice = numberToHex(request.gasPrice);\n    if (typeof request.maxFeePerBlobGas !== 'undefined')\n        rpcRequest.maxFeePerBlobGas = numberToHex(request.maxFeePerBlobGas);\n    if (typeof request.maxFeePerGas !== 'undefined')\n        rpcRequest.maxFeePerGas = numberToHex(request.maxFeePerGas);\n    if (typeof request.maxPriorityFeePerGas !== 'undefined')\n        rpcRequest.maxPriorityFeePerGas = numberToHex(request.maxPriorityFeePerGas);\n    if (typeof request.nonce !== 'undefined')\n        rpcRequest.nonce = numberToHex(request.nonce);\n    if (typeof request.to !== 'undefined')\n        rpcRequest.to = request.to;\n    if (typeof request.type !== 'undefined')\n        rpcRequest.type = rpcTransactionType[request.type];\n    if (typeof request.value !== 'undefined')\n        rpcRequest.value = numberToHex(request.value);\n    return rpcRequest;\n}\nexport const defineTransactionRequest = /*#__PURE__*/ defineFormatter('transactionRequest', formatTransactionRequest);\n//////////////////////////////////////////////////////////////////////////////\nfunction formatAuthorizationList(authorizationList) {\n    return authorizationList.map((authorization) => ({\n        address: authorization.contractAddress,\n        r: authorization.r,\n        s: authorization.s,\n        chainId: numberToHex(authorization.chainId),\n        nonce: numberToHex(authorization.nonce),\n        ...(typeof authorization.yParity !== 'undefined'\n            ? { yParity: numberToHex(authorization.yParity) }\n            : {}),\n        ...(typeof authorization.v !== 'undefined' &&\n            typeof authorization.yParity === 'undefined'\n            ? { v: numberToHex(authorization.v) }\n            : {}),\n    }));\n}\n//# sourceMappingURL=transactionRequest.js.map","import { sha256 as noble_sha256 } from '@noble/hashes/sha256';\nimport { isHex } from '../data/isHex.js';\nimport { toBytes } from '../encoding/toBytes.js';\nimport { toHex } from '../encoding/toHex.js';\nexport function sha256(value, to_) {\n    const to = to_ || 'hex';\n    const bytes = noble_sha256(isHex(value, { strict: false }) ? toBytes(value) : value);\n    if (to === 'bytes')\n        return bytes;\n    return toHex(bytes);\n}\n//# sourceMappingURL=sha256.js.map","export const stringify = (value, replacer, space) => JSON.stringify(value, (key, value_) => {\n    const value = typeof value_ === 'bigint' ? value_.toString() : value_;\n    return typeof replacer === 'function' ? replacer(key, value) : value;\n}, space);\n//# sourceMappingURL=stringify.js.map","import { parseAccount, } from '../../accounts/utils/parseAccount.js';\nimport { maxUint256 } from '../../constants/number.js';\nimport { InvalidAddressError, } from '../../errors/address.js';\nimport { FeeCapTooHighError, TipAboveFeeCapError, } from '../../errors/node.js';\nimport { FeeConflictError, } from '../../errors/transaction.js';\nimport { isAddress } from '../address/isAddress.js';\nexport function assertRequest(args) {\n    const { account: account_, gasPrice, maxFeePerGas, maxPriorityFeePerGas, to, } = args;\n    const account = account_ ? parseAccount(account_) : undefined;\n    if (account && !isAddress(account.address))\n        throw new InvalidAddressError({ address: account.address });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (typeof gasPrice !== 'undefined' &&\n        (typeof maxFeePerGas !== 'undefined' ||\n            typeof maxPriorityFeePerGas !== 'undefined'))\n        throw new FeeConflictError();\n    if (maxFeePerGas && maxFeePerGas > maxUint256)\n        throw new FeeCapTooHighError({ maxFeePerGas });\n    if (maxPriorityFeePerGas &&\n        maxFeePerGas &&\n        maxPriorityFeePerGas > maxFeePerGas)\n        throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas });\n}\n//# sourceMappingURL=assertRequest.js.map","import { InvalidSerializableTransactionError, } from '../../errors/transaction.js';\nexport function getTransactionType(transaction) {\n    if (transaction.type)\n        return transaction.type;\n    if (typeof transaction.authorizationList !== 'undefined')\n        return 'eip7702';\n    if (typeof transaction.blobs !== 'undefined' ||\n        typeof transaction.blobVersionedHashes !== 'undefined' ||\n        typeof transaction.maxFeePerBlobGas !== 'undefined' ||\n        typeof transaction.sidecars !== 'undefined')\n        return 'eip4844';\n    if (typeof transaction.maxFeePerGas !== 'undefined' ||\n        typeof transaction.maxPriorityFeePerGas !== 'undefined') {\n        return 'eip1559';\n    }\n    if (typeof transaction.gasPrice !== 'undefined') {\n        if (typeof transaction.accessList !== 'undefined')\n            return 'eip2930';\n        return 'legacy';\n    }\n    throw new InvalidSerializableTransactionError({ transaction });\n}\n//# sourceMappingURL=getTransactionType.js.map","import { gweiUnits } from '../../constants/unit.js';\nimport { formatUnits } from './formatUnits.js';\n/**\n * Converts numerical wei to a string representation of gwei.\n *\n * - Docs: https://viem.sh/docs/utilities/formatGwei\n *\n * @example\n * import { formatGwei } from 'viem'\n *\n * formatGwei(1000000000n)\n * // '1'\n */\nexport function formatGwei(wei, unit = 'wei') {\n    return formatUnits(wei, gweiUnits[unit]);\n}\n//# sourceMappingURL=formatGwei.js.map"],"names":["Maj","a","b","c","HashMD","constructor","blockLen","outputLen","padOffset","isLE","super","this","finished","length","pos","destroyed","buffer","Uint8Array","view","update","data","len","take","Math","min","set","subarray","process","dataView","roundClean","digestInto","out","fill","i","byteOffset","value","setBigUint64","_32n","BigInt","_u32_max","wh","Number","wl","h","l","setUint32","oview","Error","outLen","state","get","digest","res","slice","destroy","_cloneInto","to","SHA256_K","Uint32Array","SHA256_IV","SHA256_W","SHA256","A","B","C","D","E","F","G","H","offset","getUint32","W15","W2","s0","s1","T1","T2","sha256","parseAccount","account","address","type","versionedHashVersionKzg","maxUint16","maxUint256","panicReasons","solidityError","inputs","name","solidityPanic","BlobSizeTooLargeError","maxSize","size","metaMessages","EmptyBlobError","InvalidVersionedHashSizeError","hash","InvalidVersionedHashVersionError","version","ChainDoesNotSupportContract","blockNumber","chain","contract","blockCreated","ClientChainNotConfiguredError","InvalidChainIdError","chainId","formatAbiItemWithArgs","abiItem","args","includeFunctionName","includeName","map","input","stringify","join","CallExecutionError","cause","account_","docsPath","gas","gasPrice","maxFeePerGas","maxPriorityFeePerGas","nonce","stateOverride","undefined","prettyArgs","from","formatEther","nativeCurrency","symbol","formatGwei","shortMessage","filter","Boolean","Object","defineProperty","enumerable","configurable","writable","ContractFunctionExecutionError","abi","contractAddress","functionName","sender","getAbiItem","formattedArgs","functionWithParams","formatAbiItem","function","Array","keys","ContractFunctionRevertedError","message","decodedData","reason","signature","decodeErrorResult","errorName","errorArgs","firstArg","errorWithParams","err","ContractFunctionZeroDataError","CounterfactualDeploymentFailedError","factory","RawContractError","NegativeOffsetError","PositionOutOfBoundsError","position","RecursiveReadLimitExceededError","count","limit","ExecutionRevertedError","replace","FeeCapTooHighError","FeeCapTooLowError","NonceTooHighError","NonceTooLowError","NonceMaxValueError","InsufficientFundsError","IntrinsicGasTooHighError","IntrinsicGasTooLowError","TransactionTypeNotSupportedError","TipAboveFeeCapError","UnknownNodeError","AccountStateConflictError","StateAssignmentConflictError","prettyStateMapping","stateMapping","reduce","pretty","slot","prettyStateOverride","val","balance","code","stateDiff","prettyPrint","entries","key","maxLength","acc","max","padEnd","FeeConflictError","InvalidLegacyVError","v","InvalidSerializableTransactionError","transaction","InvalidStorageKeySizeError","storageKey","floor","TransactionNotFoundError","blockHash","blockTag","index","identifier","TransactionReceiptNotFoundError","WaitForTransactionReceiptTimeoutError","getContractAddress","getUrl","url","bytesToBigInt","bytes","opts","hex","bytesToBool","bytes_","trim","bytesToNumber","bytesToString","dir","TextDecoder","decode","decodeAbiParameters","params","cursor","consumed","values","param","setPosition","consumed_","decodeParameter","staticPosition","push","arrayComponents","start","readBytes","sizeOfOffset","startOfData","sizeOfLength","dynamicChild","hasDynamicChild","decodeArray","hasUnnamedChild","components","some","component","decodeTuple","decodeAddress","decodeBool","startsWith","_","split","parseInt","decodeBytes","signed","decodeNumber","decodeString","endsWith","parameters","find","x","blobsToCommitments","kzg","blobs","commitments","blob","blobToKzgCommitment","blobsToProofs","proofs","commitment","computeBlobKzgProof","commitmentToVersionedHash","versionedHash","commitmentsToVersionedHashes","hashes","bytesPerFieldElement","fieldElementsPerBlob","bytesPerBlob","maxBytesPerTransaction","toBlobSidecars","size_","active","pushByte","pushBytes","toBlobs","sidecars","proof","defineChain","formatters","fees","serializers","staticCursor","DataView","ArrayBuffer","positionReadCount","Map","recursiveReadCount","recursiveReadLimit","POSITIVE_INFINITY","assertReadLimit","assertPosition","decrementPosition","getReadCount","incrementPosition","inspectByte","position_","inspectBytes","inspectUint8","inspectUint16","getUint16","inspectUint24","getUint8","inspectUint32","byte","pushUint8","pushUint16","setUint16","pushUint24","setUint8","pushUint32","readByte","_touch","readUint8","readUint16","readUint24","readUint32","remaining","oldPosition","createCursor","create","byteLength","toRlp","encodable","getEncodable","encode","isArray","list","bodyLength","sizeOfBodyLength","getSizeOfLength","getEncodableList","bytesOrHex","sizeOfBytesLength","getEncodableBytes","getCallError","getNodeError","details","toLowerCase","executionRevertedError","walk","e","nodeMessage","test","formatBlock","block","transactions","baseFeePerGas","blobGasUsed","difficulty","excessBlobGas","gasLimit","gasUsed","logsBloom","number","timestamp","totalDifficulty","defineBlock","extract","value_","format","extract_","formatted","defineFormatter","exclude","overrides","formatLog","log","eventName","logIndex","transactionHash","transactionIndex","transactionType","formatTransaction","transaction_","maxFeePerBlobGas","typeHex","authorizationList","authorization","r","s","yParity","accessList","defineTransaction","receiptStatuses","formatTransactionReceipt","transactionReceipt","receipt","cumulativeGasUsed","effectiveGasPrice","logs","status","blobGasPrice","defineTransactionReceipt","rpcTransactionType","legacy","eip2930","eip1559","eip4844","eip7702","formatTransactionRequest","request","rpcRequest","blobVersionedHashes","defineTransactionRequest","to_","strict","replacer","space","JSON","toString","assertRequest","getTransactionType","wei","unit"],"sourceRoot":""}